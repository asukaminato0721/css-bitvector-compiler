<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="5190" onload="init(evt)" viewBox="0 0 1200 5190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="5190" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="5173.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="5173.00"> </text><svg id="frames" x="10" width="1180" total_samples="464849014"><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,059,459 samples, 0.23%)</title><rect x="0.0000%" y="5109" width="0.2279%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1059459"/><text x="0.2500%" y="5119.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,181,895 samples, 0.25%)</title><rect x="0.2279%" y="5109" width="0.2543%" height="15" fill="rgb(217,0,24)" fg:x="1059459" fg:w="1181895"/><text x="0.4779%" y="5119.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,181,895 samples, 0.25%)</title><rect x="0.2279%" y="5093" width="0.2543%" height="15" fill="rgb(221,193,54)" fg:x="1059459" fg:w="1181895"/><text x="0.4779%" y="5103.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (1,181,895 samples, 0.25%)</title><rect x="0.2279%" y="5077" width="0.2543%" height="15" fill="rgb(248,212,6)" fg:x="1059459" fg:w="1181895"/><text x="0.4779%" y="5087.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5,931,102 samples, 1.28%)</title><rect x="0.4822%" y="5093" width="1.2759%" height="15" fill="rgb(208,68,35)" fg:x="2241354" fg:w="5931102"/><text x="0.7322%" y="5103.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,412,508 samples, 0.52%)</title><rect x="1.7581%" y="5093" width="0.5190%" height="15" fill="rgb(232,128,0)" fg:x="8172456" fg:w="2412508"/><text x="2.0081%" y="5103.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,216,942 samples, 0.26%)</title><rect x="2.0153%" y="5077" width="0.2618%" height="15" fill="rgb(207,160,47)" fg:x="9368022" fg:w="1216942"/><text x="2.2653%" y="5087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,216,942 samples, 0.26%)</title><rect x="2.0153%" y="5061" width="0.2618%" height="15" fill="rgb(228,23,34)" fg:x="9368022" fg:w="1216942"/><text x="2.2653%" y="5071.50"></text></g><g><title>core::clone::Clone::clone (1,216,942 samples, 0.26%)</title><rect x="2.0153%" y="5045" width="0.2618%" height="15" fill="rgb(218,30,26)" fg:x="9368022" fg:w="1216942"/><text x="2.2653%" y="5055.50"></text></g><g><title>[libc.so.6] (1,223,463 samples, 0.26%)</title><rect x="2.2771%" y="5093" width="0.2632%" height="15" fill="rgb(220,122,19)" fg:x="10584964" fg:w="1223463"/><text x="2.5271%" y="5103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,638,454 samples, 0.78%)</title><rect x="2.5403%" y="5093" width="0.7827%" height="15" fill="rgb(250,228,42)" fg:x="11808427" fg:w="3638454"/><text x="2.7903%" y="5103.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,253,462 samples, 0.27%)</title><rect x="3.3230%" y="5093" width="0.2696%" height="15" fill="rgb(240,193,28)" fg:x="15446881" fg:w="1253462"/><text x="3.5730%" y="5103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,253,462 samples, 0.27%)</title><rect x="3.3230%" y="5077" width="0.2696%" height="15" fill="rgb(216,20,37)" fg:x="15446881" fg:w="1253462"/><text x="3.5730%" y="5087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,253,462 samples, 0.27%)</title><rect x="3.3230%" y="5061" width="0.2696%" height="15" fill="rgb(206,188,39)" fg:x="15446881" fg:w="1253462"/><text x="3.5730%" y="5071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,253,462 samples, 0.27%)</title><rect x="3.3230%" y="5045" width="0.2696%" height="15" fill="rgb(217,207,13)" fg:x="15446881" fg:w="1253462"/><text x="3.5730%" y="5055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,253,462 samples, 0.27%)</title><rect x="3.3230%" y="5029" width="0.2696%" height="15" fill="rgb(231,73,38)" fg:x="15446881" fg:w="1253462"/><text x="3.5730%" y="5039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,253,462 samples, 0.27%)</title><rect x="3.3230%" y="5013" width="0.2696%" height="15" fill="rgb(225,20,46)" fg:x="15446881" fg:w="1253462"/><text x="3.5730%" y="5023.50"></text></g><g><title>alloc::alloc::dealloc (1,253,462 samples, 0.27%)</title><rect x="3.3230%" y="4997" width="0.2696%" height="15" fill="rgb(210,31,41)" fg:x="15446881" fg:w="1253462"/><text x="3.5730%" y="5007.50"></text></g><g><title>main::benchmark::clear_dirty_flags (1,241,967 samples, 0.27%)</title><rect x="3.5926%" y="5093" width="0.2672%" height="15" fill="rgb(221,200,47)" fg:x="16700343" fg:w="1241967"/><text x="3.8426%" y="5103.50"></text></g><g><title>hashbrown::map::make_hash (3,664,250 samples, 0.79%)</title><rect x="6.3647%" y="5029" width="0.7883%" height="15" fill="rgb(226,26,5)" fg:x="29586386" fg:w="3664250"/><text x="6.6147%" y="5039.50"></text></g><g><title>main::benchmark::node_has_class_id (16,336,268 samples, 3.51%)</title><rect x="3.8598%" y="5093" width="3.5143%" height="15" fill="rgb(249,33,26)" fg:x="17942310" fg:w="16336268"/><text x="4.1098%" y="5103.50">mai..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4,692,192 samples, 1.01%)</title><rect x="6.3647%" y="5077" width="1.0094%" height="15" fill="rgb(235,183,28)" fg:x="29586386" fg:w="4692192"/><text x="6.6147%" y="5087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4,692,192 samples, 1.01%)</title><rect x="6.3647%" y="5061" width="1.0094%" height="15" fill="rgb(221,5,38)" fg:x="29586386" fg:w="4692192"/><text x="6.6147%" y="5071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4,692,192 samples, 1.01%)</title><rect x="6.3647%" y="5045" width="1.0094%" height="15" fill="rgb(247,18,42)" fg:x="29586386" fg:w="4692192"/><text x="6.6147%" y="5055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,027,942 samples, 0.22%)</title><rect x="7.1530%" y="5029" width="0.2211%" height="15" fill="rgb(241,131,45)" fg:x="33250636" fg:w="1027942"/><text x="7.4030%" y="5039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,027,942 samples, 0.22%)</title><rect x="7.1530%" y="5013" width="0.2211%" height="15" fill="rgb(249,31,29)" fg:x="33250636" fg:w="1027942"/><text x="7.4030%" y="5023.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,027,942 samples, 0.22%)</title><rect x="7.1530%" y="4997" width="0.2211%" height="15" fill="rgb(225,111,53)" fg:x="33250636" fg:w="1027942"/><text x="7.4030%" y="5007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1,027,942 samples, 0.22%)</title><rect x="7.1530%" y="4981" width="0.2211%" height="15" fill="rgb(238,160,17)" fg:x="33250636" fg:w="1027942"/><text x="7.4030%" y="4991.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1,027,942 samples, 0.22%)</title><rect x="7.1530%" y="4965" width="0.2211%" height="15" fill="rgb(214,148,48)" fg:x="33250636" fg:w="1027942"/><text x="7.4030%" y="4975.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1,027,942 samples, 0.22%)</title><rect x="7.1530%" y="4949" width="0.2211%" height="15" fill="rgb(232,36,49)" fg:x="33250636" fg:w="1027942"/><text x="7.4030%" y="4959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,027,942 samples, 0.22%)</title><rect x="7.1530%" y="4933" width="0.2211%" height="15" fill="rgb(209,103,24)" fg:x="33250636" fg:w="1027942"/><text x="7.4030%" y="4943.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,027,942 samples, 0.22%)</title><rect x="7.1530%" y="4917" width="0.2211%" height="15" fill="rgb(229,88,8)" fg:x="33250636" fg:w="1027942"/><text x="7.4030%" y="4927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,027,942 samples, 0.22%)</title><rect x="7.1530%" y="4901" width="0.2211%" height="15" fill="rgb(213,181,19)" fg:x="33250636" fg:w="1027942"/><text x="7.4030%" y="4911.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1,027,942 samples, 0.22%)</title><rect x="7.1530%" y="4885" width="0.2211%" height="15" fill="rgb(254,191,54)" fg:x="33250636" fg:w="1027942"/><text x="7.4030%" y="4895.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,027,942 samples, 0.22%)</title><rect x="7.1530%" y="4869" width="0.2211%" height="15" fill="rgb(241,83,37)" fg:x="33250636" fg:w="1027942"/><text x="7.4030%" y="4879.50"></text></g><g><title>main::benchmark::matches_class_id (4,405,843 samples, 0.95%)</title><rect x="8.1123%" y="5077" width="0.9478%" height="15" fill="rgb(233,36,39)" fg:x="37709715" fg:w="4405843"/><text x="8.3623%" y="5087.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (9,975,478 samples, 2.15%)</title><rect x="7.3741%" y="5093" width="2.1460%" height="15" fill="rgb(226,3,54)" fg:x="34278578" fg:w="9975478"/><text x="7.6241%" y="5103.50">m..</text></g><g><title>main::benchmark::matches_id_id (2,138,498 samples, 0.46%)</title><rect x="9.0601%" y="5077" width="0.4600%" height="15" fill="rgb(245,192,40)" fg:x="42115558" fg:w="2138498"/><text x="9.3101%" y="5087.50"></text></g><g><title>main::benchmark::get_node_id_id (2,138,498 samples, 0.46%)</title><rect x="9.0601%" y="5061" width="0.4600%" height="15" fill="rgb(238,167,29)" fg:x="42115558" fg:w="2138498"/><text x="9.3101%" y="5071.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2,138,498 samples, 0.46%)</title><rect x="9.0601%" y="5045" width="0.4600%" height="15" fill="rgb(232,182,51)" fg:x="42115558" fg:w="2138498"/><text x="9.3101%" y="5055.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (2,138,498 samples, 0.46%)</title><rect x="9.0601%" y="5029" width="0.4600%" height="15" fill="rgb(231,60,39)" fg:x="42115558" fg:w="2138498"/><text x="9.3101%" y="5039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,138,498 samples, 0.46%)</title><rect x="9.0601%" y="5013" width="0.4600%" height="15" fill="rgb(208,69,12)" fg:x="42115558" fg:w="2138498"/><text x="9.3101%" y="5023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,138,498 samples, 0.46%)</title><rect x="9.0601%" y="4997" width="0.4600%" height="15" fill="rgb(235,93,37)" fg:x="42115558" fg:w="2138498"/><text x="9.3101%" y="5007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,138,498 samples, 0.46%)</title><rect x="9.0601%" y="4981" width="0.4600%" height="15" fill="rgb(213,116,39)" fg:x="42115558" fg:w="2138498"/><text x="9.3101%" y="4991.50"></text></g><g><title>hashbrown::map::make_hash (2,138,498 samples, 0.46%)</title><rect x="9.0601%" y="4965" width="0.4600%" height="15" fill="rgb(222,207,29)" fg:x="42115558" fg:w="2138498"/><text x="9.3101%" y="4975.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (919,335 samples, 0.20%)</title><rect x="9.5201%" y="5093" width="0.1978%" height="15" fill="rgb(206,96,30)" fg:x="44254056" fg:w="919335"/><text x="9.7701%" y="5103.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (919,335 samples, 0.20%)</title><rect x="9.5201%" y="5077" width="0.1978%" height="15" fill="rgb(218,138,4)" fg:x="44254056" fg:w="919335"/><text x="9.7701%" y="5087.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (919,335 samples, 0.20%)</title><rect x="9.5201%" y="5061" width="0.1978%" height="15" fill="rgb(250,191,14)" fg:x="44254056" fg:w="919335"/><text x="9.7701%" y="5071.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (919,335 samples, 0.20%)</title><rect x="9.5201%" y="5045" width="0.1978%" height="15" fill="rgb(239,60,40)" fg:x="44254056" fg:w="919335"/><text x="9.7701%" y="5055.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (919,335 samples, 0.20%)</title><rect x="9.5201%" y="5029" width="0.1978%" height="15" fill="rgb(206,27,48)" fg:x="44254056" fg:w="919335"/><text x="9.7701%" y="5039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (919,335 samples, 0.20%)</title><rect x="9.5201%" y="5013" width="0.1978%" height="15" fill="rgb(225,35,8)" fg:x="44254056" fg:w="919335"/><text x="9.7701%" y="5023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (919,335 samples, 0.20%)</title><rect x="9.5201%" y="4997" width="0.1978%" height="15" fill="rgb(250,213,24)" fg:x="44254056" fg:w="919335"/><text x="9.7701%" y="5007.50"></text></g><g><title>alloc::slice::hack::to_vec (919,335 samples, 0.20%)</title><rect x="9.5201%" y="4981" width="0.1978%" height="15" fill="rgb(247,123,22)" fg:x="44254056" fg:w="919335"/><text x="9.7701%" y="4991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (919,335 samples, 0.20%)</title><rect x="9.5201%" y="4965" width="0.1978%" height="15" fill="rgb(231,138,38)" fg:x="44254056" fg:w="919335"/><text x="9.7701%" y="4975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (919,335 samples, 0.20%)</title><rect x="9.5201%" y="4949" width="0.1978%" height="15" fill="rgb(231,145,46)" fg:x="44254056" fg:w="919335"/><text x="9.7701%" y="4959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (919,335 samples, 0.20%)</title><rect x="9.5201%" y="4933" width="0.1978%" height="15" fill="rgb(251,118,11)" fg:x="44254056" fg:w="919335"/><text x="9.7701%" y="4943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (919,335 samples, 0.20%)</title><rect x="9.5201%" y="4917" width="0.1978%" height="15" fill="rgb(217,147,25)" fg:x="44254056" fg:w="919335"/><text x="9.7701%" y="4927.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (919,335 samples, 0.20%)</title><rect x="9.5201%" y="4901" width="0.1978%" height="15" fill="rgb(247,81,37)" fg:x="44254056" fg:w="919335"/><text x="9.7701%" y="4911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (919,335 samples, 0.20%)</title><rect x="9.5201%" y="4885" width="0.1978%" height="15" fill="rgb(209,12,38)" fg:x="44254056" fg:w="919335"/><text x="9.7701%" y="4895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (919,335 samples, 0.20%)</title><rect x="9.5201%" y="4869" width="0.1978%" height="15" fill="rgb(227,1,9)" fg:x="44254056" fg:w="919335"/><text x="9.7701%" y="4879.50"></text></g><g><title>alloc::alloc::alloc (919,335 samples, 0.20%)</title><rect x="9.5201%" y="4853" width="0.1978%" height="15" fill="rgb(248,47,43)" fg:x="44254056" fg:w="919335"/><text x="9.7701%" y="4863.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (933,482 samples, 0.20%)</title><rect x="9.7179%" y="5093" width="0.2008%" height="15" fill="rgb(221,10,30)" fg:x="45173391" fg:w="933482"/><text x="9.9679%" y="5103.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (933,482 samples, 0.20%)</title><rect x="9.7179%" y="5077" width="0.2008%" height="15" fill="rgb(210,229,1)" fg:x="45173391" fg:w="933482"/><text x="9.9679%" y="5087.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (933,482 samples, 0.20%)</title><rect x="9.7179%" y="5061" width="0.2008%" height="15" fill="rgb(222,148,37)" fg:x="45173391" fg:w="933482"/><text x="9.9679%" y="5071.50"></text></g><g><title>[unknown] (44,797,325 samples, 9.64%)</title><rect x="0.4822%" y="5109" width="9.6370%" height="15" fill="rgb(234,67,33)" fg:x="2241354" fg:w="44797325"/><text x="0.7322%" y="5119.50">[unknown]</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (931,806 samples, 0.20%)</title><rect x="9.9187%" y="5093" width="0.2005%" height="15" fill="rgb(247,98,35)" fg:x="46106873" fg:w="931806"/><text x="10.1687%" y="5103.50"></text></g><g><title>__rdl_dealloc (1,230,732 samples, 0.26%)</title><rect x="10.1191%" y="5109" width="0.2648%" height="15" fill="rgb(247,138,52)" fg:x="47038679" fg:w="1230732"/><text x="10.3691%" y="5119.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,230,732 samples, 0.26%)</title><rect x="10.1191%" y="5093" width="0.2648%" height="15" fill="rgb(213,79,30)" fg:x="47038679" fg:w="1230732"/><text x="10.3691%" y="5103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;main::benchmark::WebLayoutFrameResult&gt;&gt; (4,984,959 samples, 1.07%)</title><rect x="10.3839%" y="4837" width="1.0724%" height="15" fill="rgb(246,177,23)" fg:x="48269411" fg:w="4984959"/><text x="10.6339%" y="4847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,984,959 samples, 1.07%)</title><rect x="10.3839%" y="4821" width="1.0724%" height="15" fill="rgb(230,62,27)" fg:x="48269411" fg:w="4984959"/><text x="10.6339%" y="4831.50"></text></g><g><title>core::ptr::drop_in_place&lt;[main::benchmark::WebLayoutFrameResult]&gt; (4,984,959 samples, 1.07%)</title><rect x="10.3839%" y="4805" width="1.0724%" height="15" fill="rgb(216,154,8)" fg:x="48269411" fg:w="4984959"/><text x="10.6339%" y="4815.50"></text></g><g><title>core::ptr::drop_in_place&lt;main::benchmark::WebLayoutFrameResult&gt; (4,984,959 samples, 1.07%)</title><rect x="10.3839%" y="4789" width="1.0724%" height="15" fill="rgb(244,35,45)" fg:x="48269411" fg:w="4984959"/><text x="10.6339%" y="4799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4,984,959 samples, 1.07%)</title><rect x="10.3839%" y="4773" width="1.0724%" height="15" fill="rgb(251,115,12)" fg:x="48269411" fg:w="4984959"/><text x="10.6339%" y="4783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4,984,959 samples, 1.07%)</title><rect x="10.3839%" y="4757" width="1.0724%" height="15" fill="rgb(240,54,50)" fg:x="48269411" fg:w="4984959"/><text x="10.6339%" y="4767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4,984,959 samples, 1.07%)</title><rect x="10.3839%" y="4741" width="1.0724%" height="15" fill="rgb(233,84,52)" fg:x="48269411" fg:w="4984959"/><text x="10.6339%" y="4751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,984,959 samples, 1.07%)</title><rect x="10.3839%" y="4725" width="1.0724%" height="15" fill="rgb(207,117,47)" fg:x="48269411" fg:w="4984959"/><text x="10.6339%" y="4735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,984,959 samples, 1.07%)</title><rect x="10.3839%" y="4709" width="1.0724%" height="15" fill="rgb(249,43,39)" fg:x="48269411" fg:w="4984959"/><text x="10.6339%" y="4719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,984,959 samples, 1.07%)</title><rect x="10.3839%" y="4693" width="1.0724%" height="15" fill="rgb(209,38,44)" fg:x="48269411" fg:w="4984959"/><text x="10.6339%" y="4703.50"></text></g><g><title>alloc::alloc::dealloc (4,984,959 samples, 1.07%)</title><rect x="10.3839%" y="4677" width="1.0724%" height="15" fill="rgb(236,212,23)" fg:x="48269411" fg:w="4984959"/><text x="10.6339%" y="4687.50"></text></g><g><title>cfree (4,984,959 samples, 1.07%)</title><rect x="10.3839%" y="4661" width="1.0724%" height="15" fill="rgb(242,79,21)" fg:x="48269411" fg:w="4984959"/><text x="10.6339%" y="4671.50"></text></g><g><title>[libc.so.6] (4,984,959 samples, 1.07%)</title><rect x="10.3839%" y="4645" width="1.0724%" height="15" fill="rgb(211,96,35)" fg:x="48269411" fg:w="4984959"/><text x="10.6339%" y="4655.50"></text></g><g><title>[libc.so.6] (4,984,959 samples, 1.07%)</title><rect x="10.3839%" y="4629" width="1.0724%" height="15" fill="rgb(253,215,40)" fg:x="48269411" fg:w="4984959"/><text x="10.6339%" y="4639.50"></text></g><g><title>[libc.so.6] (1,250,118 samples, 0.27%)</title><rect x="11.1873%" y="4613" width="0.2689%" height="15" fill="rgb(211,81,21)" fg:x="52004252" fg:w="1250118"/><text x="11.4373%" y="4623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,200,979 samples, 0.26%)</title><rect x="11.9694%" y="3509" width="0.2584%" height="15" fill="rgb(208,190,38)" fg:x="55639516" fg:w="1200979"/><text x="12.2194%" y="3519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,200,979 samples, 0.26%)</title><rect x="11.9694%" y="3493" width="0.2584%" height="15" fill="rgb(235,213,38)" fg:x="55639516" fg:w="1200979"/><text x="12.2194%" y="3503.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,200,979 samples, 0.26%)</title><rect x="11.9694%" y="3477" width="0.2584%" height="15" fill="rgb(237,122,38)" fg:x="55639516" fg:w="1200979"/><text x="12.2194%" y="3487.50"></text></g><g><title>alloc::slice::hack::to_vec (1,200,979 samples, 0.26%)</title><rect x="11.9694%" y="3461" width="0.2584%" height="15" fill="rgb(244,218,35)" fg:x="55639516" fg:w="1200979"/><text x="12.2194%" y="3471.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,200,979 samples, 0.26%)</title><rect x="11.9694%" y="3445" width="0.2584%" height="15" fill="rgb(240,68,47)" fg:x="55639516" fg:w="1200979"/><text x="12.2194%" y="3455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,200,979 samples, 0.26%)</title><rect x="11.9694%" y="3429" width="0.2584%" height="15" fill="rgb(210,16,53)" fg:x="55639516" fg:w="1200979"/><text x="12.2194%" y="3439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,200,979 samples, 0.26%)</title><rect x="11.9694%" y="3413" width="0.2584%" height="15" fill="rgb(235,124,12)" fg:x="55639516" fg:w="1200979"/><text x="12.2194%" y="3423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,200,979 samples, 0.26%)</title><rect x="11.9694%" y="3397" width="0.2584%" height="15" fill="rgb(224,169,11)" fg:x="55639516" fg:w="1200979"/><text x="12.2194%" y="3407.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,200,979 samples, 0.26%)</title><rect x="11.9694%" y="3381" width="0.2584%" height="15" fill="rgb(250,166,2)" fg:x="55639516" fg:w="1200979"/><text x="12.2194%" y="3391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,200,979 samples, 0.26%)</title><rect x="11.9694%" y="3365" width="0.2584%" height="15" fill="rgb(242,216,29)" fg:x="55639516" fg:w="1200979"/><text x="12.2194%" y="3375.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,200,979 samples, 0.26%)</title><rect x="11.9694%" y="3349" width="0.2584%" height="15" fill="rgb(230,116,27)" fg:x="55639516" fg:w="1200979"/><text x="12.2194%" y="3359.50"></text></g><g><title>alloc::alloc::alloc (1,200,979 samples, 0.26%)</title><rect x="11.9694%" y="3333" width="0.2584%" height="15" fill="rgb(228,99,48)" fg:x="55639516" fg:w="1200979"/><text x="12.2194%" y="3343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2933" width="0.2539%" height="15" fill="rgb(253,11,6)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2917" width="0.2539%" height="15" fill="rgb(247,143,39)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2927.50"></text></g><g><title>alloc::slice::hack::to_vec (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2901" width="0.2539%" height="15" fill="rgb(236,97,10)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2885" width="0.2539%" height="15" fill="rgb(233,208,19)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2895.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2869" width="0.2539%" height="15" fill="rgb(216,164,2)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2879.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2853" width="0.2539%" height="15" fill="rgb(220,129,5)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2863.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2837" width="0.2539%" height="15" fill="rgb(242,17,10)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2847.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2821" width="0.2539%" height="15" fill="rgb(242,107,0)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2831.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2805" width="0.2539%" height="15" fill="rgb(251,28,31)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2789" width="0.2539%" height="15" fill="rgb(233,223,10)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2773" width="0.2539%" height="15" fill="rgb(215,21,27)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2783.50"></text></g><g><title>alloc::slice::hack::to_vec (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2757" width="0.2539%" height="15" fill="rgb(232,23,21)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2741" width="0.2539%" height="15" fill="rgb(244,5,23)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2751.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2725" width="0.2539%" height="15" fill="rgb(226,81,46)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2735.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2709" width="0.2539%" height="15" fill="rgb(247,70,30)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2693" width="0.2539%" height="15" fill="rgb(212,68,19)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2677" width="0.2539%" height="15" fill="rgb(240,187,13)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2687.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2661" width="0.2539%" height="15" fill="rgb(223,113,26)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2645" width="0.2539%" height="15" fill="rgb(206,192,2)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2629" width="0.2539%" height="15" fill="rgb(241,108,4)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2639.50"></text></g><g><title>alloc::slice::hack::to_vec (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2613" width="0.2539%" height="15" fill="rgb(247,173,49)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2597" width="0.2539%" height="15" fill="rgb(224,114,35)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2607.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2581" width="0.2539%" height="15" fill="rgb(245,159,27)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2591.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2565" width="0.2539%" height="15" fill="rgb(245,172,44)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2549" width="0.2539%" height="15" fill="rgb(236,23,11)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2533" width="0.2539%" height="15" fill="rgb(205,117,38)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2517" width="0.2539%" height="15" fill="rgb(237,72,25)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2501" width="0.2539%" height="15" fill="rgb(244,70,9)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2485" width="0.2539%" height="15" fill="rgb(217,125,39)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2495.50"></text></g><g><title>alloc::slice::hack::to_vec (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2469" width="0.2539%" height="15" fill="rgb(235,36,10)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2453" width="0.2539%" height="15" fill="rgb(251,123,47)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2437" width="0.2539%" height="15" fill="rgb(221,13,13)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2421" width="0.2539%" height="15" fill="rgb(238,131,9)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2405" width="0.2539%" height="15" fill="rgb(211,50,8)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2389" width="0.2539%" height="15" fill="rgb(245,182,24)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2373" width="0.2539%" height="15" fill="rgb(242,14,37)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2357" width="0.2539%" height="15" fill="rgb(246,228,12)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2367.50"></text></g><g><title>alloc::alloc::alloc (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2341" width="0.2539%" height="15" fill="rgb(213,55,15)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2351.50"></text></g><g><title>malloc (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2325" width="0.2539%" height="15" fill="rgb(209,9,3)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2335.50"></text></g><g><title>[libc.so.6] (1,180,382 samples, 0.25%)</title><rect x="12.2277%" y="2309" width="0.2539%" height="15" fill="rgb(230,59,30)" fg:x="56840495" fg:w="1180382"/><text x="12.4777%" y="2319.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,648,988 samples, 0.78%)</title><rect x="11.9694%" y="3525" width="0.7850%" height="15" fill="rgb(209,121,21)" fg:x="55639516" fg:w="3648988"/><text x="12.2194%" y="3535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3509" width="0.5266%" height="15" fill="rgb(220,109,13)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3519.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3493" width="0.5266%" height="15" fill="rgb(232,18,1)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3503.50"></text></g><g><title>alloc::slice::hack::to_vec (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3477" width="0.5266%" height="15" fill="rgb(215,41,42)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3487.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3461" width="0.5266%" height="15" fill="rgb(224,123,36)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3471.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3445" width="0.5266%" height="15" fill="rgb(240,125,3)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3455.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3429" width="0.5266%" height="15" fill="rgb(205,98,50)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3439.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3413" width="0.5266%" height="15" fill="rgb(205,185,37)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3423.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3397" width="0.5266%" height="15" fill="rgb(238,207,15)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3407.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3381" width="0.5266%" height="15" fill="rgb(213,199,42)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3365" width="0.5266%" height="15" fill="rgb(235,201,11)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3375.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3349" width="0.5266%" height="15" fill="rgb(207,46,11)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3359.50"></text></g><g><title>alloc::slice::hack::to_vec (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3333" width="0.5266%" height="15" fill="rgb(241,35,35)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3343.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3317" width="0.5266%" height="15" fill="rgb(243,32,47)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3327.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3301" width="0.5266%" height="15" fill="rgb(247,202,23)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3311.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3285" width="0.5266%" height="15" fill="rgb(219,102,11)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3295.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3269" width="0.5266%" height="15" fill="rgb(243,110,44)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3279.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3253" width="0.5266%" height="15" fill="rgb(222,74,54)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3263.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3237" width="0.5266%" height="15" fill="rgb(216,99,12)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3221" width="0.5266%" height="15" fill="rgb(226,22,26)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3205" width="0.5266%" height="15" fill="rgb(217,163,10)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3215.50"></text></g><g><title>alloc::slice::hack::to_vec (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3189" width="0.5266%" height="15" fill="rgb(213,25,53)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3199.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3173" width="0.5266%" height="15" fill="rgb(252,105,26)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3183.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3157" width="0.5266%" height="15" fill="rgb(220,39,43)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3167.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3141" width="0.5266%" height="15" fill="rgb(229,68,48)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3151.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3125" width="0.5266%" height="15" fill="rgb(252,8,32)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3135.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3109" width="0.5266%" height="15" fill="rgb(223,20,43)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3119.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3093" width="0.5266%" height="15" fill="rgb(229,81,49)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3077" width="0.5266%" height="15" fill="rgb(236,28,36)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3061" width="0.5266%" height="15" fill="rgb(249,185,26)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3071.50"></text></g><g><title>alloc::slice::hack::to_vec (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3045" width="0.5266%" height="15" fill="rgb(249,174,33)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3029" width="0.5266%" height="15" fill="rgb(233,201,37)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3039.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="3013" width="0.5266%" height="15" fill="rgb(221,78,26)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3023.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="2997" width="0.5266%" height="15" fill="rgb(250,127,30)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="3007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="2981" width="0.5266%" height="15" fill="rgb(230,49,44)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="2991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="2965" width="0.5266%" height="15" fill="rgb(229,67,23)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="2975.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,448,009 samples, 0.53%)</title><rect x="12.2277%" y="2949" width="0.5266%" height="15" fill="rgb(249,83,47)" fg:x="56840495" fg:w="2448009"/><text x="12.4777%" y="2959.50"></text></g><g><title>&lt;serde_json::number::Number as core::clone::Clone&gt;::clone (1,267,627 samples, 0.27%)</title><rect x="12.4817%" y="2933" width="0.2727%" height="15" fill="rgb(215,43,3)" fg:x="58020877" fg:w="1267627"/><text x="12.7317%" y="2943.50"></text></g><g><title>[unknown] (1,195,955 samples, 0.26%)</title><rect x="12.7544%" y="3525" width="0.2573%" height="15" fill="rgb(238,154,13)" fg:x="59288504" fg:w="1195955"/><text x="13.0044%" y="3535.50"></text></g><g><title>[libc.so.6] (1,195,955 samples, 0.26%)</title><rect x="12.7544%" y="3509" width="0.2573%" height="15" fill="rgb(219,56,2)" fg:x="59288504" fg:w="1195955"/><text x="13.0044%" y="3519.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (1,263,934 samples, 0.27%)</title><rect x="13.0116%" y="3525" width="0.2719%" height="15" fill="rgb(233,0,4)" fg:x="60484459" fg:w="1263934"/><text x="13.2616%" y="3535.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push_with_handle (1,263,934 samples, 0.27%)</title><rect x="13.0116%" y="3509" width="0.2719%" height="15" fill="rgb(235,30,7)" fg:x="60484459" fg:w="1263934"/><text x="13.2616%" y="3519.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,263,934 samples, 0.27%)</title><rect x="13.0116%" y="3493" width="0.2719%" height="15" fill="rgb(250,79,13)" fg:x="60484459" fg:w="1263934"/><text x="13.2616%" y="3503.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,478,150 samples, 1.82%)</title><rect x="11.9694%" y="3589" width="1.8239%" height="15" fill="rgb(211,146,34)" fg:x="55639516" fg:w="8478150"/><text x="12.2194%" y="3599.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (8,478,150 samples, 1.82%)</title><rect x="11.9694%" y="3573" width="1.8239%" height="15" fill="rgb(228,22,38)" fg:x="55639516" fg:w="8478150"/><text x="12.2194%" y="3583.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (8,478,150 samples, 1.82%)</title><rect x="11.9694%" y="3557" width="1.8239%" height="15" fill="rgb(235,168,5)" fg:x="55639516" fg:w="8478150"/><text x="12.2194%" y="3567.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8,478,150 samples, 1.82%)</title><rect x="11.9694%" y="3541" width="1.8239%" height="15" fill="rgb(221,155,16)" fg:x="55639516" fg:w="8478150"/><text x="12.2194%" y="3551.50">&lt;..</text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (2,369,273 samples, 0.51%)</title><rect x="13.2835%" y="3525" width="0.5097%" height="15" fill="rgb(215,215,53)" fg:x="61748393" fg:w="2369273"/><text x="13.5335%" y="3535.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (2,369,273 samples, 0.51%)</title><rect x="13.2835%" y="3509" width="0.5097%" height="15" fill="rgb(223,4,10)" fg:x="61748393" fg:w="2369273"/><text x="13.5335%" y="3519.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (2,369,273 samples, 0.51%)</title><rect x="13.2835%" y="3493" width="0.5097%" height="15" fill="rgb(234,103,6)" fg:x="61748393" fg:w="2369273"/><text x="13.5335%" y="3503.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (2,369,273 samples, 0.51%)</title><rect x="13.2835%" y="3477" width="0.5097%" height="15" fill="rgb(227,97,0)" fg:x="61748393" fg:w="2369273"/><text x="13.5335%" y="3487.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (2,369,273 samples, 0.51%)</title><rect x="13.2835%" y="3461" width="0.5097%" height="15" fill="rgb(234,150,53)" fg:x="61748393" fg:w="2369273"/><text x="13.5335%" y="3471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,369,273 samples, 0.51%)</title><rect x="13.2835%" y="3445" width="0.5097%" height="15" fill="rgb(228,201,54)" fg:x="61748393" fg:w="2369273"/><text x="13.5335%" y="3455.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,369,273 samples, 0.51%)</title><rect x="13.2835%" y="3429" width="0.5097%" height="15" fill="rgb(222,22,37)" fg:x="61748393" fg:w="2369273"/><text x="13.5335%" y="3439.50"></text></g><g><title>alloc::alloc::alloc (2,369,273 samples, 0.51%)</title><rect x="13.2835%" y="3413" width="0.5097%" height="15" fill="rgb(237,53,32)" fg:x="61748393" fg:w="2369273"/><text x="13.5335%" y="3423.50"></text></g><g><title>malloc (2,369,273 samples, 0.51%)</title><rect x="13.2835%" y="3397" width="0.5097%" height="15" fill="rgb(233,25,53)" fg:x="61748393" fg:w="2369273"/><text x="13.5335%" y="3407.50"></text></g><g><title>[libc.so.6] (2,369,273 samples, 0.51%)</title><rect x="13.2835%" y="3381" width="0.5097%" height="15" fill="rgb(210,40,34)" fg:x="61748393" fg:w="2369273"/><text x="13.5335%" y="3391.50"></text></g><g><title>[libc.so.6] (1,243,076 samples, 0.27%)</title><rect x="13.5258%" y="3365" width="0.2674%" height="15" fill="rgb(241,220,44)" fg:x="62874590" fg:w="1243076"/><text x="13.7758%" y="3375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16,168,429 samples, 3.48%)</title><rect x="11.7122%" y="4229" width="3.4782%" height="15" fill="rgb(235,28,35)" fg:x="54443860" fg:w="16168429"/><text x="11.9622%" y="4239.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16,168,429 samples, 3.48%)</title><rect x="11.7122%" y="4213" width="3.4782%" height="15" fill="rgb(210,56,17)" fg:x="54443860" fg:w="16168429"/><text x="11.9622%" y="4223.50">all..</text></g><g><title>alloc::slice::hack::to_vec (16,168,429 samples, 3.48%)</title><rect x="11.7122%" y="4197" width="3.4782%" height="15" fill="rgb(224,130,29)" fg:x="54443860" fg:w="16168429"/><text x="11.9622%" y="4207.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16,168,429 samples, 3.48%)</title><rect x="11.7122%" y="4181" width="3.4782%" height="15" fill="rgb(235,212,8)" fg:x="54443860" fg:w="16168429"/><text x="11.9622%" y="4191.50">&lt;T ..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (16,168,429 samples, 3.48%)</title><rect x="11.7122%" y="4165" width="3.4782%" height="15" fill="rgb(223,33,50)" fg:x="54443860" fg:w="16168429"/><text x="11.9622%" y="4175.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (16,168,429 samples, 3.48%)</title><rect x="11.7122%" y="4149" width="3.4782%" height="15" fill="rgb(219,149,13)" fg:x="54443860" fg:w="16168429"/><text x="11.9622%" y="4159.50">&lt;se..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (16,168,429 samples, 3.48%)</title><rect x="11.7122%" y="4133" width="3.4782%" height="15" fill="rgb(250,156,29)" fg:x="54443860" fg:w="16168429"/><text x="11.9622%" y="4143.50">&lt;al..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (16,168,429 samples, 3.48%)</title><rect x="11.7122%" y="4117" width="3.4782%" height="15" fill="rgb(216,193,19)" fg:x="54443860" fg:w="16168429"/><text x="11.9622%" y="4127.50">&lt;al..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (16,168,429 samples, 3.48%)</title><rect x="11.7122%" y="4101" width="3.4782%" height="15" fill="rgb(216,135,14)" fg:x="54443860" fg:w="16168429"/><text x="11.9622%" y="4111.50">&lt;se..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="4085" width="3.2210%" height="15" fill="rgb(241,47,5)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="4095.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="4069" width="3.2210%" height="15" fill="rgb(233,42,35)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="4079.50">all..</text></g><g><title>alloc::slice::hack::to_vec (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="4053" width="3.2210%" height="15" fill="rgb(231,13,6)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="4063.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="4037" width="3.2210%" height="15" fill="rgb(207,181,40)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="4047.50">&lt;T ..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="4021" width="3.2210%" height="15" fill="rgb(254,173,49)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="4031.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="4005" width="3.2210%" height="15" fill="rgb(221,1,38)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="4015.50">&lt;se..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3989" width="3.2210%" height="15" fill="rgb(206,124,46)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3999.50">&lt;al..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3973" width="3.2210%" height="15" fill="rgb(249,21,11)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3983.50">&lt;al..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3957" width="3.2210%" height="15" fill="rgb(222,201,40)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3967.50">&lt;se..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3941" width="3.2210%" height="15" fill="rgb(235,61,29)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3951.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3925" width="3.2210%" height="15" fill="rgb(219,207,3)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3935.50">all..</text></g><g><title>alloc::slice::hack::to_vec (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3909" width="3.2210%" height="15" fill="rgb(222,56,46)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3919.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3893" width="3.2210%" height="15" fill="rgb(239,76,54)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3903.50">&lt;T ..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3877" width="3.2210%" height="15" fill="rgb(231,124,27)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3887.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3861" width="3.2210%" height="15" fill="rgb(249,195,6)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3871.50">&lt;se..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3845" width="3.2210%" height="15" fill="rgb(237,174,47)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3855.50">&lt;al..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3829" width="3.2210%" height="15" fill="rgb(206,201,31)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3839.50">&lt;al..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3813" width="3.2210%" height="15" fill="rgb(231,57,52)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3823.50">&lt;se..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3797" width="3.2210%" height="15" fill="rgb(248,177,22)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3807.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3781" width="3.2210%" height="15" fill="rgb(215,211,37)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3791.50">all..</text></g><g><title>alloc::slice::hack::to_vec (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3765" width="3.2210%" height="15" fill="rgb(241,128,51)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3775.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3749" width="3.2210%" height="15" fill="rgb(227,165,31)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3759.50">&lt;T ..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3733" width="3.2210%" height="15" fill="rgb(228,167,24)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3743.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3717" width="3.2210%" height="15" fill="rgb(228,143,12)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3727.50">&lt;se..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3701" width="3.2210%" height="15" fill="rgb(249,149,8)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3711.50">&lt;al..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3685" width="3.2210%" height="15" fill="rgb(243,35,44)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3695.50">&lt;al..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3669" width="3.2210%" height="15" fill="rgb(246,89,9)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3679.50">&lt;se..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3653" width="3.2210%" height="15" fill="rgb(233,213,13)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3663.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3637" width="3.2210%" height="15" fill="rgb(233,141,41)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3647.50">all..</text></g><g><title>alloc::slice::hack::to_vec (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3621" width="3.2210%" height="15" fill="rgb(239,167,4)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3631.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14,972,773 samples, 3.22%)</title><rect x="11.9694%" y="3605" width="3.2210%" height="15" fill="rgb(209,217,16)" fg:x="55639516" fg:w="14972773"/><text x="12.2194%" y="3615.50">&lt;T ..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,494,623 samples, 1.40%)</title><rect x="13.7932%" y="3589" width="1.3971%" height="15" fill="rgb(219,88,35)" fg:x="64117666" fg:w="6494623"/><text x="14.0432%" y="3599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,494,623 samples, 1.40%)</title><rect x="13.7932%" y="3573" width="1.3971%" height="15" fill="rgb(220,193,23)" fg:x="64117666" fg:w="6494623"/><text x="14.0432%" y="3583.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,494,623 samples, 1.40%)</title><rect x="13.7932%" y="3557" width="1.3971%" height="15" fill="rgb(230,90,52)" fg:x="64117666" fg:w="6494623"/><text x="14.0432%" y="3567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,494,623 samples, 1.40%)</title><rect x="13.7932%" y="3541" width="1.3971%" height="15" fill="rgb(252,106,19)" fg:x="64117666" fg:w="6494623"/><text x="14.0432%" y="3551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,494,623 samples, 1.40%)</title><rect x="13.7932%" y="3525" width="1.3971%" height="15" fill="rgb(206,74,20)" fg:x="64117666" fg:w="6494623"/><text x="14.0432%" y="3535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,494,623 samples, 1.40%)</title><rect x="13.7932%" y="3509" width="1.3971%" height="15" fill="rgb(230,138,44)" fg:x="64117666" fg:w="6494623"/><text x="14.0432%" y="3519.50"></text></g><g><title>alloc::alloc::alloc (6,494,623 samples, 1.40%)</title><rect x="13.7932%" y="3493" width="1.3971%" height="15" fill="rgb(235,182,43)" fg:x="64117666" fg:w="6494623"/><text x="14.0432%" y="3503.50"></text></g><g><title>malloc (6,494,623 samples, 1.40%)</title><rect x="13.7932%" y="3477" width="1.3971%" height="15" fill="rgb(242,16,51)" fg:x="64117666" fg:w="6494623"/><text x="14.0432%" y="3487.50"></text></g><g><title>[libc.so.6] (6,494,623 samples, 1.40%)</title><rect x="13.7932%" y="3461" width="1.3971%" height="15" fill="rgb(248,9,4)" fg:x="64117666" fg:w="6494623"/><text x="14.0432%" y="3471.50"></text></g><g><title>[libc.so.6] (6,494,623 samples, 1.40%)</title><rect x="13.7932%" y="3445" width="1.3971%" height="15" fill="rgb(210,31,22)" fg:x="64117666" fg:w="6494623"/><text x="14.0432%" y="3455.50"></text></g><g><title>[libc.so.6] (2,859,965 samples, 0.62%)</title><rect x="14.5751%" y="3429" width="0.6152%" height="15" fill="rgb(239,54,39)" fg:x="67752324" fg:w="2859965"/><text x="14.8251%" y="3439.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,174,385 samples, 0.25%)</title><rect x="15.4659%" y="4181" width="0.2526%" height="15" fill="rgb(230,99,41)" fg:x="71892920" fg:w="1174385"/><text x="15.7159%" y="4191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,174,385 samples, 0.25%)</title><rect x="15.4659%" y="4165" width="0.2526%" height="15" fill="rgb(253,106,12)" fg:x="71892920" fg:w="1174385"/><text x="15.7159%" y="4175.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,174,385 samples, 0.25%)</title><rect x="15.4659%" y="4149" width="0.2526%" height="15" fill="rgb(213,46,41)" fg:x="71892920" fg:w="1174385"/><text x="15.7159%" y="4159.50"></text></g><g><title>alloc::slice::hack::to_vec (1,174,385 samples, 0.25%)</title><rect x="15.4659%" y="4133" width="0.2526%" height="15" fill="rgb(215,133,35)" fg:x="71892920" fg:w="1174385"/><text x="15.7159%" y="4143.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,174,385 samples, 0.25%)</title><rect x="15.4659%" y="4117" width="0.2526%" height="15" fill="rgb(213,28,5)" fg:x="71892920" fg:w="1174385"/><text x="15.7159%" y="4127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,174,385 samples, 0.25%)</title><rect x="15.4659%" y="4101" width="0.2526%" height="15" fill="rgb(215,77,49)" fg:x="71892920" fg:w="1174385"/><text x="15.7159%" y="4111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,174,385 samples, 0.25%)</title><rect x="15.4659%" y="4085" width="0.2526%" height="15" fill="rgb(248,100,22)" fg:x="71892920" fg:w="1174385"/><text x="15.7159%" y="4095.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,174,385 samples, 0.25%)</title><rect x="15.4659%" y="4069" width="0.2526%" height="15" fill="rgb(208,67,9)" fg:x="71892920" fg:w="1174385"/><text x="15.7159%" y="4079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,174,385 samples, 0.25%)</title><rect x="15.4659%" y="4053" width="0.2526%" height="15" fill="rgb(219,133,21)" fg:x="71892920" fg:w="1174385"/><text x="15.7159%" y="4063.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,174,385 samples, 0.25%)</title><rect x="15.4659%" y="4037" width="0.2526%" height="15" fill="rgb(246,46,29)" fg:x="71892920" fg:w="1174385"/><text x="15.7159%" y="4047.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,174,385 samples, 0.25%)</title><rect x="15.4659%" y="4021" width="0.2526%" height="15" fill="rgb(246,185,52)" fg:x="71892920" fg:w="1174385"/><text x="15.7159%" y="4031.50"></text></g><g><title>alloc::alloc::alloc (1,174,385 samples, 0.25%)</title><rect x="15.4659%" y="4005" width="0.2526%" height="15" fill="rgb(252,136,11)" fg:x="71892920" fg:w="1174385"/><text x="15.7159%" y="4015.50"></text></g><g><title>malloc (1,174,385 samples, 0.25%)</title><rect x="15.4659%" y="3989" width="0.2526%" height="15" fill="rgb(219,138,53)" fg:x="71892920" fg:w="1174385"/><text x="15.7159%" y="3999.50"></text></g><g><title>[libc.so.6] (1,174,385 samples, 0.25%)</title><rect x="15.4659%" y="3973" width="0.2526%" height="15" fill="rgb(211,51,23)" fg:x="71892920" fg:w="1174385"/><text x="15.7159%" y="3983.50"></text></g><g><title>&lt;main::benchmark::LayoutFrame as core::clone::Clone&gt;::clone (20,873,454 samples, 4.49%)</title><rect x="11.4563%" y="4821" width="4.4904%" height="15" fill="rgb(247,221,28)" fg:x="53254370" fg:w="20873454"/><text x="11.7063%" y="4831.50">&lt;main..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (20,873,454 samples, 4.49%)</title><rect x="11.4563%" y="4805" width="4.4904%" height="15" fill="rgb(251,222,45)" fg:x="53254370" fg:w="20873454"/><text x="11.7063%" y="4815.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (20,873,454 samples, 4.49%)</title><rect x="11.4563%" y="4789" width="4.4904%" height="15" fill="rgb(217,162,53)" fg:x="53254370" fg:w="20873454"/><text x="11.7063%" y="4799.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (20,873,454 samples, 4.49%)</title><rect x="11.4563%" y="4773" width="4.4904%" height="15" fill="rgb(229,93,14)" fg:x="53254370" fg:w="20873454"/><text x="11.7063%" y="4783.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (20,873,454 samples, 4.49%)</title><rect x="11.4563%" y="4757" width="4.4904%" height="15" fill="rgb(209,67,49)" fg:x="53254370" fg:w="20873454"/><text x="11.7063%" y="4767.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (20,873,454 samples, 4.49%)</title><rect x="11.4563%" y="4741" width="4.4904%" height="15" fill="rgb(213,87,29)" fg:x="53254370" fg:w="20873454"/><text x="11.7063%" y="4751.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (20,873,454 samples, 4.49%)</title><rect x="11.4563%" y="4725" width="4.4904%" height="15" fill="rgb(205,151,52)" fg:x="53254370" fg:w="20873454"/><text x="11.7063%" y="4735.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (20,873,454 samples, 4.49%)</title><rect x="11.4563%" y="4709" width="4.4904%" height="15" fill="rgb(253,215,39)" fg:x="53254370" fg:w="20873454"/><text x="11.7063%" y="4719.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4693" width="4.2345%" height="15" fill="rgb(221,220,41)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4703.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4677" width="4.2345%" height="15" fill="rgb(218,133,21)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4687.50">&lt;serd..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4661" width="4.2345%" height="15" fill="rgb(221,193,43)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4671.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4645" width="4.2345%" height="15" fill="rgb(240,128,52)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4655.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4629" width="4.2345%" height="15" fill="rgb(253,114,12)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4639.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4613" width="4.2345%" height="15" fill="rgb(215,223,47)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4623.50">&lt;T as..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4597" width="4.2345%" height="15" fill="rgb(248,225,23)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4607.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4581" width="4.2345%" height="15" fill="rgb(250,108,0)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4591.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4565" width="4.2345%" height="15" fill="rgb(228,208,7)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4575.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4549" width="4.2345%" height="15" fill="rgb(244,45,10)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4559.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4533" width="4.2345%" height="15" fill="rgb(207,125,25)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4543.50">&lt;serd..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4517" width="4.2345%" height="15" fill="rgb(210,195,18)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4527.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4501" width="4.2345%" height="15" fill="rgb(249,80,12)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4511.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4485" width="4.2345%" height="15" fill="rgb(221,65,9)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4495.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4469" width="4.2345%" height="15" fill="rgb(235,49,36)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4479.50">&lt;T as..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4453" width="4.2345%" height="15" fill="rgb(225,32,20)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4463.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4437" width="4.2345%" height="15" fill="rgb(215,141,46)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4447.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4421" width="4.2345%" height="15" fill="rgb(250,160,47)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4431.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4405" width="4.2345%" height="15" fill="rgb(216,222,40)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4415.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4389" width="4.2345%" height="15" fill="rgb(234,217,39)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4399.50">&lt;serd..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4373" width="4.2345%" height="15" fill="rgb(207,178,40)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4383.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4357" width="4.2345%" height="15" fill="rgb(221,136,13)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4367.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4341" width="4.2345%" height="15" fill="rgb(249,199,10)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4351.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4325" width="4.2345%" height="15" fill="rgb(249,222,13)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4335.50">&lt;T as..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4309" width="4.2345%" height="15" fill="rgb(244,185,38)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4319.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4293" width="4.2345%" height="15" fill="rgb(236,202,9)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4303.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4277" width="4.2345%" height="15" fill="rgb(250,229,37)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4287.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4261" width="4.2345%" height="15" fill="rgb(206,174,23)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4271.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (19,683,964 samples, 4.23%)</title><rect x="11.7122%" y="4245" width="4.2345%" height="15" fill="rgb(211,33,43)" fg:x="54443860" fg:w="19683964"/><text x="11.9622%" y="4255.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (3,515,535 samples, 0.76%)</title><rect x="15.1904%" y="4229" width="0.7563%" height="15" fill="rgb(245,58,50)" fg:x="70612289" fg:w="3515535"/><text x="15.4404%" y="4239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (3,515,535 samples, 0.76%)</title><rect x="15.1904%" y="4213" width="0.7563%" height="15" fill="rgb(244,68,36)" fg:x="70612289" fg:w="3515535"/><text x="15.4404%" y="4223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3,515,535 samples, 0.76%)</title><rect x="15.1904%" y="4197" width="0.7563%" height="15" fill="rgb(232,229,15)" fg:x="70612289" fg:w="3515535"/><text x="15.4404%" y="4207.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (1,060,519 samples, 0.23%)</title><rect x="15.7185%" y="4181" width="0.2281%" height="15" fill="rgb(254,30,23)" fg:x="73067305" fg:w="1060519"/><text x="15.9685%" y="4191.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push_with_handle (1,060,519 samples, 0.23%)</title><rect x="15.7185%" y="4165" width="0.2281%" height="15" fill="rgb(235,160,14)" fg:x="73067305" fg:w="1060519"/><text x="15.9685%" y="4175.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,060,519 samples, 0.23%)</title><rect x="15.7185%" y="4149" width="0.2281%" height="15" fill="rgb(212,155,44)" fg:x="73067305" fg:w="1060519"/><text x="15.9685%" y="4159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,046,601 samples, 0.23%)</title><rect x="15.9466%" y="4245" width="0.2251%" height="15" fill="rgb(226,2,50)" fg:x="74127824" fg:w="1046601"/><text x="16.1966%" y="4255.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,046,601 samples, 0.23%)</title><rect x="15.9466%" y="4229" width="0.2251%" height="15" fill="rgb(234,177,6)" fg:x="74127824" fg:w="1046601"/><text x="16.1966%" y="4239.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (1,046,601 samples, 0.23%)</title><rect x="15.9466%" y="4213" width="0.2251%" height="15" fill="rgb(217,24,9)" fg:x="74127824" fg:w="1046601"/><text x="16.1966%" y="4223.50"></text></g><g><title>core::ptr::read (1,046,601 samples, 0.23%)</title><rect x="15.9466%" y="4197" width="0.2251%" height="15" fill="rgb(220,13,46)" fg:x="74127824" fg:w="1046601"/><text x="16.1966%" y="4207.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,272,143 samples, 0.27%)</title><rect x="16.1718%" y="2309" width="0.2737%" height="15" fill="rgb(239,221,27)" fg:x="75174425" fg:w="1272143"/><text x="16.4218%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,272,143 samples, 0.27%)</title><rect x="16.1718%" y="2293" width="0.2737%" height="15" fill="rgb(222,198,25)" fg:x="75174425" fg:w="1272143"/><text x="16.4218%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,272,143 samples, 0.27%)</title><rect x="16.1718%" y="2277" width="0.2737%" height="15" fill="rgb(211,99,13)" fg:x="75174425" fg:w="1272143"/><text x="16.4218%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,272,143 samples, 0.27%)</title><rect x="16.1718%" y="2261" width="0.2737%" height="15" fill="rgb(232,111,31)" fg:x="75174425" fg:w="1272143"/><text x="16.4218%" y="2271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,272,143 samples, 0.27%)</title><rect x="16.1718%" y="2245" width="0.2737%" height="15" fill="rgb(245,82,37)" fg:x="75174425" fg:w="1272143"/><text x="16.4218%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,272,143 samples, 0.27%)</title><rect x="16.1718%" y="2229" width="0.2737%" height="15" fill="rgb(227,149,46)" fg:x="75174425" fg:w="1272143"/><text x="16.4218%" y="2239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,272,143 samples, 0.27%)</title><rect x="16.1718%" y="2213" width="0.2737%" height="15" fill="rgb(218,36,50)" fg:x="75174425" fg:w="1272143"/><text x="16.4218%" y="2223.50"></text></g><g><title>alloc::alloc::dealloc (1,272,143 samples, 0.27%)</title><rect x="16.1718%" y="2197" width="0.2737%" height="15" fill="rgb(226,80,48)" fg:x="75174425" fg:w="1272143"/><text x="16.4218%" y="2207.50"></text></g><g><title>cfree (1,272,143 samples, 0.27%)</title><rect x="16.1718%" y="2181" width="0.2737%" height="15" fill="rgb(238,224,15)" fg:x="75174425" fg:w="1272143"/><text x="16.4218%" y="2191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,161,700 samples, 0.25%)</title><rect x="16.4455%" y="1845" width="0.2499%" height="15" fill="rgb(241,136,10)" fg:x="76446568" fg:w="1161700"/><text x="16.6955%" y="1855.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,161,700 samples, 0.25%)</title><rect x="16.4455%" y="1829" width="0.2499%" height="15" fill="rgb(208,32,45)" fg:x="76446568" fg:w="1161700"/><text x="16.6955%" y="1839.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (1,161,700 samples, 0.25%)</title><rect x="16.4455%" y="1813" width="0.2499%" height="15" fill="rgb(207,135,9)" fg:x="76446568" fg:w="1161700"/><text x="16.6955%" y="1823.50"></text></g><g><title>cfree (1,202,430 samples, 0.26%)</title><rect x="16.6954%" y="1301" width="0.2587%" height="15" fill="rgb(206,86,44)" fg:x="77608268" fg:w="1202430"/><text x="16.9454%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3685" width="1.0170%" height="15" fill="rgb(245,177,15)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3669" width="1.0170%" height="15" fill="rgb(206,64,50)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3679.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3653" width="1.0170%" height="15" fill="rgb(234,36,40)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3663.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3637" width="1.0170%" height="15" fill="rgb(213,64,8)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3647.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3621" width="1.0170%" height="15" fill="rgb(210,75,36)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3605" width="1.0170%" height="15" fill="rgb(229,88,21)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3615.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3589" width="1.0170%" height="15" fill="rgb(252,204,47)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3599.50"></text></g><g><title>core::mem::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3573" width="1.0170%" height="15" fill="rgb(208,77,27)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3557" width="1.0170%" height="15" fill="rgb(221,76,26)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3567.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3541" width="1.0170%" height="15" fill="rgb(225,139,18)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3551.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3525" width="1.0170%" height="15" fill="rgb(230,137,11)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3509" width="1.0170%" height="15" fill="rgb(212,28,1)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3519.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3493" width="1.0170%" height="15" fill="rgb(248,164,17)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3503.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3477" width="1.0170%" height="15" fill="rgb(222,171,42)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3487.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3461" width="1.0170%" height="15" fill="rgb(243,84,45)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3445" width="1.0170%" height="15" fill="rgb(252,49,23)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3429" width="1.0170%" height="15" fill="rgb(215,19,7)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3439.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3413" width="1.0170%" height="15" fill="rgb(238,81,41)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3423.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3397" width="1.0170%" height="15" fill="rgb(210,199,37)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3407.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3381" width="1.0170%" height="15" fill="rgb(244,192,49)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3365" width="1.0170%" height="15" fill="rgb(226,211,11)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3375.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3349" width="1.0170%" height="15" fill="rgb(236,162,54)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3359.50"></text></g><g><title>core::mem::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3333" width="1.0170%" height="15" fill="rgb(220,229,9)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3317" width="1.0170%" height="15" fill="rgb(250,87,22)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3327.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3301" width="1.0170%" height="15" fill="rgb(239,43,17)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3311.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3285" width="1.0170%" height="15" fill="rgb(231,177,25)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3269" width="1.0170%" height="15" fill="rgb(219,179,1)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3279.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3253" width="1.0170%" height="15" fill="rgb(238,219,53)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3263.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3237" width="1.0170%" height="15" fill="rgb(232,167,36)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3247.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3221" width="1.0170%" height="15" fill="rgb(244,19,51)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3205" width="1.0170%" height="15" fill="rgb(224,6,22)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3189" width="1.0170%" height="15" fill="rgb(224,145,5)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3173" width="1.0170%" height="15" fill="rgb(234,130,49)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3183.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3157" width="1.0170%" height="15" fill="rgb(254,6,2)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3167.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3141" width="1.0170%" height="15" fill="rgb(208,96,46)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3125" width="1.0170%" height="15" fill="rgb(239,3,39)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3135.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3109" width="1.0170%" height="15" fill="rgb(233,210,1)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3119.50"></text></g><g><title>core::mem::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3093" width="1.0170%" height="15" fill="rgb(244,137,37)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3077" width="1.0170%" height="15" fill="rgb(240,136,2)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3087.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3061" width="1.0170%" height="15" fill="rgb(239,18,37)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3045" width="1.0170%" height="15" fill="rgb(218,185,22)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3029" width="1.0170%" height="15" fill="rgb(225,218,4)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3039.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="3013" width="1.0170%" height="15" fill="rgb(230,182,32)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3023.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2997" width="1.0170%" height="15" fill="rgb(242,56,43)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="3007.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2981" width="1.0170%" height="15" fill="rgb(233,99,24)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2965" width="1.0170%" height="15" fill="rgb(234,209,42)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2949" width="1.0170%" height="15" fill="rgb(227,7,12)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2959.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2933" width="1.0170%" height="15" fill="rgb(245,203,43)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2943.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2917" width="1.0170%" height="15" fill="rgb(238,205,33)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2927.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2901" width="1.0170%" height="15" fill="rgb(231,56,7)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2885" width="1.0170%" height="15" fill="rgb(244,186,29)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2869" width="1.0170%" height="15" fill="rgb(234,111,31)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2879.50"></text></g><g><title>core::mem::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2853" width="1.0170%" height="15" fill="rgb(241,149,10)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2837" width="1.0170%" height="15" fill="rgb(249,206,44)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2847.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2821" width="1.0170%" height="15" fill="rgb(251,153,30)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2831.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2805" width="1.0170%" height="15" fill="rgb(239,152,38)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2789" width="1.0170%" height="15" fill="rgb(249,139,47)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2799.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2773" width="1.0170%" height="15" fill="rgb(244,64,35)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2783.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2757" width="1.0170%" height="15" fill="rgb(216,46,15)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2741" width="1.0170%" height="15" fill="rgb(250,74,19)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2725" width="1.0170%" height="15" fill="rgb(249,42,33)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2709" width="1.0170%" height="15" fill="rgb(242,149,17)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2693" width="1.0170%" height="15" fill="rgb(244,29,21)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2677" width="1.0170%" height="15" fill="rgb(220,130,37)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2661" width="1.0170%" height="15" fill="rgb(211,67,2)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2645" width="1.0170%" height="15" fill="rgb(235,68,52)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2629" width="1.0170%" height="15" fill="rgb(246,142,3)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2639.50"></text></g><g><title>core::mem::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2613" width="1.0170%" height="15" fill="rgb(241,25,7)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2597" width="1.0170%" height="15" fill="rgb(242,119,39)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2581" width="1.0170%" height="15" fill="rgb(241,98,45)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2565" width="1.0170%" height="15" fill="rgb(254,28,30)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2549" width="1.0170%" height="15" fill="rgb(241,142,54)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2559.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2533" width="1.0170%" height="15" fill="rgb(222,85,15)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2543.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2517" width="1.0170%" height="15" fill="rgb(210,85,47)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2501" width="1.0170%" height="15" fill="rgb(224,206,25)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2485" width="1.0170%" height="15" fill="rgb(243,201,19)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2469" width="1.0170%" height="15" fill="rgb(236,59,4)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2453" width="1.0170%" height="15" fill="rgb(254,179,45)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2437" width="1.0170%" height="15" fill="rgb(226,14,10)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2421" width="1.0170%" height="15" fill="rgb(244,27,41)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2405" width="1.0170%" height="15" fill="rgb(235,35,32)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2389" width="1.0170%" height="15" fill="rgb(218,68,31)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2399.50"></text></g><g><title>core::mem::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2373" width="1.0170%" height="15" fill="rgb(207,120,37)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2357" width="1.0170%" height="15" fill="rgb(227,98,0)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2341" width="1.0170%" height="15" fill="rgb(207,7,3)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,727,583 samples, 1.02%)</title><rect x="16.1718%" y="2325" width="1.0170%" height="15" fill="rgb(206,98,19)" fg:x="75174425" fg:w="4727583"/><text x="16.4218%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="2309" width="0.7433%" height="15" fill="rgb(217,5,26)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="2319.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="2293" width="0.7433%" height="15" fill="rgb(235,190,38)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="2303.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="2277" width="0.7433%" height="15" fill="rgb(247,86,24)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="2261" width="0.7433%" height="15" fill="rgb(205,101,16)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="2245" width="0.7433%" height="15" fill="rgb(246,168,33)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="2255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="2229" width="0.7433%" height="15" fill="rgb(231,114,1)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="2213" width="0.7433%" height="15" fill="rgb(207,184,53)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="2197" width="0.7433%" height="15" fill="rgb(224,95,51)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="2181" width="0.7433%" height="15" fill="rgb(212,188,45)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="2165" width="0.7433%" height="15" fill="rgb(223,154,38)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="2175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="2149" width="0.7433%" height="15" fill="rgb(251,22,52)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="2159.50"></text></g><g><title>core::mem::drop (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="2133" width="0.7433%" height="15" fill="rgb(229,209,22)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="2117" width="0.7433%" height="15" fill="rgb(234,138,34)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="2127.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="2101" width="0.7433%" height="15" fill="rgb(212,95,11)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="2111.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="2085" width="0.7433%" height="15" fill="rgb(240,179,47)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="2069" width="0.7433%" height="15" fill="rgb(240,163,11)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="2079.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="2053" width="0.7433%" height="15" fill="rgb(236,37,12)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="2063.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="2037" width="0.7433%" height="15" fill="rgb(232,164,16)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="2021" width="0.7433%" height="15" fill="rgb(244,205,15)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="2005" width="0.7433%" height="15" fill="rgb(223,117,47)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="2015.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="1989" width="0.7433%" height="15" fill="rgb(244,107,35)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="1973" width="0.7433%" height="15" fill="rgb(205,140,8)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="1957" width="0.7433%" height="15" fill="rgb(228,84,46)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="1941" width="0.7433%" height="15" fill="rgb(254,188,9)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="1925" width="0.7433%" height="15" fill="rgb(206,112,54)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="1935.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="1909" width="0.7433%" height="15" fill="rgb(216,84,49)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="1919.50"></text></g><g><title>core::mem::drop (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="1893" width="0.7433%" height="15" fill="rgb(214,194,35)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="1877" width="0.7433%" height="15" fill="rgb(249,28,3)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="1887.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,455,440 samples, 0.74%)</title><rect x="16.4455%" y="1861" width="0.7433%" height="15" fill="rgb(222,56,52)" fg:x="76446568" fg:w="3455440"/><text x="16.6955%" y="1871.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1845" width="0.4934%" height="15" fill="rgb(245,217,50)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1829" width="0.4934%" height="15" fill="rgb(213,201,24)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1839.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1813" width="0.4934%" height="15" fill="rgb(248,116,28)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1823.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1797" width="0.4934%" height="15" fill="rgb(219,72,43)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1781" width="0.4934%" height="15" fill="rgb(209,138,14)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1765" width="0.4934%" height="15" fill="rgb(222,18,33)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1749" width="0.4934%" height="15" fill="rgb(213,199,7)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1733" width="0.4934%" height="15" fill="rgb(250,110,10)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1717" width="0.4934%" height="15" fill="rgb(248,123,6)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1701" width="0.4934%" height="15" fill="rgb(206,91,31)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1685" width="0.4934%" height="15" fill="rgb(211,154,13)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1695.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1669" width="0.4934%" height="15" fill="rgb(225,148,7)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1679.50"></text></g><g><title>core::mem::drop (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1653" width="0.4934%" height="15" fill="rgb(220,160,43)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1637" width="0.4934%" height="15" fill="rgb(213,52,39)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1647.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1621" width="0.4934%" height="15" fill="rgb(243,137,7)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1631.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1605" width="0.4934%" height="15" fill="rgb(230,79,13)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1589" width="0.4934%" height="15" fill="rgb(247,105,23)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1599.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1573" width="0.4934%" height="15" fill="rgb(223,179,41)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1583.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1557" width="0.4934%" height="15" fill="rgb(218,9,34)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1541" width="0.4934%" height="15" fill="rgb(222,106,8)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1525" width="0.4934%" height="15" fill="rgb(211,220,0)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1509" width="0.4934%" height="15" fill="rgb(229,52,16)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1493" width="0.4934%" height="15" fill="rgb(212,155,18)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1477" width="0.4934%" height="15" fill="rgb(242,21,14)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1461" width="0.4934%" height="15" fill="rgb(222,19,48)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1445" width="0.4934%" height="15" fill="rgb(232,45,27)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1455.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1429" width="0.4934%" height="15" fill="rgb(249,103,42)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1439.50"></text></g><g><title>core::mem::drop (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1413" width="0.4934%" height="15" fill="rgb(246,81,33)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1397" width="0.4934%" height="15" fill="rgb(252,33,42)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1407.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1381" width="0.4934%" height="15" fill="rgb(209,212,41)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1391.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1365" width="0.4934%" height="15" fill="rgb(207,154,6)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1349" width="0.4934%" height="15" fill="rgb(223,64,47)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1359.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1333" width="0.4934%" height="15" fill="rgb(211,161,38)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1343.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,293,740 samples, 0.49%)</title><rect x="16.6954%" y="1317" width="0.4934%" height="15" fill="rgb(219,138,40)" fg:x="77608268" fg:w="2293740"/><text x="16.9454%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="1301" width="0.2348%" height="15" fill="rgb(241,228,46)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="1285" width="0.2348%" height="15" fill="rgb(223,209,38)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="1269" width="0.2348%" height="15" fill="rgb(236,164,45)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="1253" width="0.2348%" height="15" fill="rgb(231,15,5)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="1237" width="0.2348%" height="15" fill="rgb(252,35,15)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="1221" width="0.2348%" height="15" fill="rgb(248,181,18)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="1205" width="0.2348%" height="15" fill="rgb(233,39,42)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="1215.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="1189" width="0.2348%" height="15" fill="rgb(238,110,33)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="1199.50"></text></g><g><title>core::mem::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="1173" width="0.2348%" height="15" fill="rgb(233,195,10)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="1157" width="0.2348%" height="15" fill="rgb(254,105,3)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="1141" width="0.2348%" height="15" fill="rgb(221,225,9)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="1125" width="0.2348%" height="15" fill="rgb(224,227,45)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="1109" width="0.2348%" height="15" fill="rgb(229,198,43)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="1093" width="0.2348%" height="15" fill="rgb(206,209,35)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="1103.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="1077" width="0.2348%" height="15" fill="rgb(245,195,53)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="1061" width="0.2348%" height="15" fill="rgb(240,92,26)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="1045" width="0.2348%" height="15" fill="rgb(207,40,23)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="1029" width="0.2348%" height="15" fill="rgb(223,111,35)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="1013" width="0.2348%" height="15" fill="rgb(229,147,28)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="997" width="0.2348%" height="15" fill="rgb(211,29,28)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="981" width="0.2348%" height="15" fill="rgb(228,72,33)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="965" width="0.2348%" height="15" fill="rgb(205,214,31)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="949" width="0.2348%" height="15" fill="rgb(224,111,15)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="959.50"></text></g><g><title>core::mem::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="933" width="0.2348%" height="15" fill="rgb(253,21,26)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="917" width="0.2348%" height="15" fill="rgb(245,139,43)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="901" width="0.2348%" height="15" fill="rgb(252,170,7)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="885" width="0.2348%" height="15" fill="rgb(231,118,14)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="869" width="0.2348%" height="15" fill="rgb(238,83,0)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="879.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="853" width="0.2348%" height="15" fill="rgb(221,39,39)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="863.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="837" width="0.2348%" height="15" fill="rgb(222,119,46)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="821" width="0.2348%" height="15" fill="rgb(222,165,49)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="805" width="0.2348%" height="15" fill="rgb(219,113,52)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="789" width="0.2348%" height="15" fill="rgb(214,7,15)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="773" width="0.2348%" height="15" fill="rgb(235,32,4)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="757" width="0.2348%" height="15" fill="rgb(238,90,54)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="741" width="0.2348%" height="15" fill="rgb(213,208,19)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="725" width="0.2348%" height="15" fill="rgb(233,156,4)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="709" width="0.2348%" height="15" fill="rgb(207,194,5)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="719.50"></text></g><g><title>core::mem::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="693" width="0.2348%" height="15" fill="rgb(206,111,30)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="677" width="0.2348%" height="15" fill="rgb(243,70,54)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="661" width="0.2348%" height="15" fill="rgb(242,28,8)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="645" width="0.2348%" height="15" fill="rgb(219,106,18)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="629" width="0.2348%" height="15" fill="rgb(244,222,10)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="613" width="0.2348%" height="15" fill="rgb(236,179,52)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="623.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="597" width="0.2348%" height="15" fill="rgb(213,23,39)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="581" width="0.2348%" height="15" fill="rgb(238,48,10)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="565" width="0.2348%" height="15" fill="rgb(251,196,23)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="549" width="0.2348%" height="15" fill="rgb(250,152,24)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="533" width="0.2348%" height="15" fill="rgb(209,150,17)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="517" width="0.2348%" height="15" fill="rgb(234,202,34)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="501" width="0.2348%" height="15" fill="rgb(253,148,53)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="485" width="0.2348%" height="15" fill="rgb(218,129,16)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="469" width="0.2348%" height="15" fill="rgb(216,85,19)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="479.50"></text></g><g><title>core::mem::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="453" width="0.2348%" height="15" fill="rgb(235,228,7)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="437" width="0.2348%" height="15" fill="rgb(245,175,0)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="421" width="0.2348%" height="15" fill="rgb(208,168,36)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="405" width="0.2348%" height="15" fill="rgb(246,171,24)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="389" width="0.2348%" height="15" fill="rgb(215,142,24)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="373" width="0.2348%" height="15" fill="rgb(250,187,7)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="383.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="357" width="0.2348%" height="15" fill="rgb(228,66,33)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="341" width="0.2348%" height="15" fill="rgb(234,215,21)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="325" width="0.2348%" height="15" fill="rgb(222,191,20)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="309" width="0.2348%" height="15" fill="rgb(245,79,54)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="293" width="0.2348%" height="15" fill="rgb(240,10,37)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="277" width="0.2348%" height="15" fill="rgb(214,192,32)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="261" width="0.2348%" height="15" fill="rgb(209,36,54)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="245" width="0.2348%" height="15" fill="rgb(220,10,11)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="229" width="0.2348%" height="15" fill="rgb(221,106,17)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="239.50"></text></g><g><title>core::mem::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="213" width="0.2348%" height="15" fill="rgb(251,142,44)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="197" width="0.2348%" height="15" fill="rgb(238,13,15)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="181" width="0.2348%" height="15" fill="rgb(208,107,27)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="165" width="0.2348%" height="15" fill="rgb(205,136,37)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="175.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="149" width="0.2348%" height="15" fill="rgb(250,205,27)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="159.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="133" width="0.2348%" height="15" fill="rgb(210,80,43)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="143.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="117" width="0.2348%" height="15" fill="rgb(247,160,36)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="101" width="0.2348%" height="15" fill="rgb(234,13,49)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="111.50"></text></g><g><title>alloc::alloc::dealloc (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="85" width="0.2348%" height="15" fill="rgb(234,122,0)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="95.50"></text></g><g><title>cfree (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="69" width="0.2348%" height="15" fill="rgb(207,146,38)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="79.50"></text></g><g><title>[libc.so.6] (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="53" width="0.2348%" height="15" fill="rgb(207,177,25)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="63.50"></text></g><g><title>[libc.so.6] (1,091,310 samples, 0.23%)</title><rect x="16.9540%" y="37" width="0.2348%" height="15" fill="rgb(211,178,42)" fg:x="78810698" fg:w="1091310"/><text x="17.2040%" y="47.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4821" width="1.5031%" height="15" fill="rgb(230,69,54)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4831.50"></text></g><g><title>core::ptr::drop_in_place&lt;[main::benchmark::LayoutFrame]&gt; (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4805" width="1.5031%" height="15" fill="rgb(214,135,41)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4815.50"></text></g><g><title>core::ptr::drop_in_place&lt;main::benchmark::LayoutFrame&gt; (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4789" width="1.5031%" height="15" fill="rgb(237,67,25)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4799.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4773" width="1.5031%" height="15" fill="rgb(222,189,50)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4757" width="1.5031%" height="15" fill="rgb(245,148,34)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4741" width="1.5031%" height="15" fill="rgb(222,29,6)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4725" width="1.5031%" height="15" fill="rgb(221,189,43)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4735.50"></text></g><g><title>core::mem::drop (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4709" width="1.5031%" height="15" fill="rgb(207,36,27)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4693" width="1.5031%" height="15" fill="rgb(217,90,24)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4677" width="1.5031%" height="15" fill="rgb(224,66,35)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4661" width="1.5031%" height="15" fill="rgb(221,13,50)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4645" width="1.5031%" height="15" fill="rgb(236,68,49)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4655.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4629" width="1.5031%" height="15" fill="rgb(229,146,28)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4639.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4613" width="1.5031%" height="15" fill="rgb(225,31,38)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4597" width="1.5031%" height="15" fill="rgb(250,208,3)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4581" width="1.5031%" height="15" fill="rgb(246,54,23)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4565" width="1.5031%" height="15" fill="rgb(243,76,11)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4549" width="1.5031%" height="15" fill="rgb(245,21,50)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4559.50"></text></g><g><title>core::mem::drop (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4533" width="1.5031%" height="15" fill="rgb(228,9,43)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4517" width="1.5031%" height="15" fill="rgb(208,100,47)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4501" width="1.5031%" height="15" fill="rgb(232,26,8)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4485" width="1.5031%" height="15" fill="rgb(216,166,38)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4469" width="1.5031%" height="15" fill="rgb(251,202,51)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4479.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4453" width="1.5031%" height="15" fill="rgb(254,216,34)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4463.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4437" width="1.5031%" height="15" fill="rgb(251,32,27)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4421" width="1.5031%" height="15" fill="rgb(208,127,28)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4405" width="1.5031%" height="15" fill="rgb(224,137,22)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4389" width="1.5031%" height="15" fill="rgb(254,70,32)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4373" width="1.5031%" height="15" fill="rgb(229,75,37)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4357" width="1.5031%" height="15" fill="rgb(252,64,23)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4341" width="1.5031%" height="15" fill="rgb(232,162,48)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4325" width="1.5031%" height="15" fill="rgb(246,160,12)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4309" width="1.5031%" height="15" fill="rgb(247,166,0)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4319.50"></text></g><g><title>core::mem::drop (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4293" width="1.5031%" height="15" fill="rgb(249,219,21)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4277" width="1.5031%" height="15" fill="rgb(205,209,3)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,986,965 samples, 1.50%)</title><rect x="15.9466%" y="4261" width="1.5031%" height="15" fill="rgb(243,44,1)" fg:x="74127824" fg:w="6986965"/><text x="16.1966%" y="4271.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="4245" width="1.2779%" height="15" fill="rgb(206,159,16)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="4255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="4229" width="1.2779%" height="15" fill="rgb(244,77,30)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="4239.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="4213" width="1.2779%" height="15" fill="rgb(218,69,12)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="4223.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="4197" width="1.2779%" height="15" fill="rgb(212,87,7)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="4207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="4181" width="1.2779%" height="15" fill="rgb(245,114,25)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="4191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="4165" width="1.2779%" height="15" fill="rgb(210,61,42)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="4175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="4149" width="1.2779%" height="15" fill="rgb(211,52,33)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="4159.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="4133" width="1.2779%" height="15" fill="rgb(234,58,33)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="4143.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="4117" width="1.2779%" height="15" fill="rgb(220,115,36)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="4127.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="4101" width="1.2779%" height="15" fill="rgb(243,153,54)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="4111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="4085" width="1.2779%" height="15" fill="rgb(251,47,18)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="4095.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="4069" width="1.2779%" height="15" fill="rgb(242,102,42)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="4079.50"></text></g><g><title>core::mem::drop (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="4053" width="1.2779%" height="15" fill="rgb(234,31,38)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="4063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="4037" width="1.2779%" height="15" fill="rgb(221,117,51)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="4047.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="4021" width="1.2779%" height="15" fill="rgb(212,20,18)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="4031.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="4005" width="1.2779%" height="15" fill="rgb(245,133,36)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="4015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="3989" width="1.2779%" height="15" fill="rgb(212,6,19)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="3999.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="3973" width="1.2779%" height="15" fill="rgb(218,1,36)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="3983.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="3957" width="1.2779%" height="15" fill="rgb(246,84,54)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="3967.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="3941" width="1.2779%" height="15" fill="rgb(242,110,6)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="3951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="3925" width="1.2779%" height="15" fill="rgb(214,47,5)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="3935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="3909" width="1.2779%" height="15" fill="rgb(218,159,25)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="3919.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="3893" width="1.2779%" height="15" fill="rgb(215,211,28)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="3903.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="3877" width="1.2779%" height="15" fill="rgb(238,59,32)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="3887.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="3861" width="1.2779%" height="15" fill="rgb(226,82,3)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="3871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="3845" width="1.2779%" height="15" fill="rgb(240,164,32)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="3855.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="3829" width="1.2779%" height="15" fill="rgb(232,46,7)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="3839.50"></text></g><g><title>core::mem::drop (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="3813" width="1.2779%" height="15" fill="rgb(229,129,53)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="3823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="3797" width="1.2779%" height="15" fill="rgb(234,188,29)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="3807.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="3781" width="1.2779%" height="15" fill="rgb(246,141,4)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="3791.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="3765" width="1.2779%" height="15" fill="rgb(229,23,39)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="3775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="3749" width="1.2779%" height="15" fill="rgb(206,12,3)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="3759.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="3733" width="1.2779%" height="15" fill="rgb(252,226,20)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="3743.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="3717" width="1.2779%" height="15" fill="rgb(216,123,35)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="3727.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,940,364 samples, 1.28%)</title><rect x="16.1718%" y="3701" width="1.2779%" height="15" fill="rgb(212,68,40)" fg:x="75174425" fg:w="5940364"/><text x="16.4218%" y="3711.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,212,781 samples, 0.26%)</title><rect x="17.1888%" y="3685" width="0.2609%" height="15" fill="rgb(254,125,32)" fg:x="79902008" fg:w="1212781"/><text x="17.4388%" y="3695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,212,781 samples, 0.26%)</title><rect x="17.1888%" y="3669" width="0.2609%" height="15" fill="rgb(253,97,22)" fg:x="79902008" fg:w="1212781"/><text x="17.4388%" y="3679.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,212,781 samples, 0.26%)</title><rect x="17.1888%" y="3653" width="0.2609%" height="15" fill="rgb(241,101,14)" fg:x="79902008" fg:w="1212781"/><text x="17.4388%" y="3663.50"></text></g><g><title>core::mem::drop (1,212,781 samples, 0.26%)</title><rect x="17.1888%" y="3637" width="0.2609%" height="15" fill="rgb(238,103,29)" fg:x="79902008" fg:w="1212781"/><text x="17.4388%" y="3647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,212,781 samples, 0.26%)</title><rect x="17.1888%" y="3621" width="0.2609%" height="15" fill="rgb(233,195,47)" fg:x="79902008" fg:w="1212781"/><text x="17.4388%" y="3631.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,212,781 samples, 0.26%)</title><rect x="17.1888%" y="3605" width="0.2609%" height="15" fill="rgb(246,218,30)" fg:x="79902008" fg:w="1212781"/><text x="17.4388%" y="3615.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,212,781 samples, 0.26%)</title><rect x="17.1888%" y="3589" width="0.2609%" height="15" fill="rgb(219,145,47)" fg:x="79902008" fg:w="1212781"/><text x="17.4388%" y="3599.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,212,781 samples, 0.26%)</title><rect x="17.1888%" y="3573" width="0.2609%" height="15" fill="rgb(243,12,26)" fg:x="79902008" fg:w="1212781"/><text x="17.4388%" y="3583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,212,781 samples, 0.26%)</title><rect x="17.1888%" y="3557" width="0.2609%" height="15" fill="rgb(214,87,16)" fg:x="79902008" fg:w="1212781"/><text x="17.4388%" y="3567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,212,781 samples, 0.26%)</title><rect x="17.1888%" y="3541" width="0.2609%" height="15" fill="rgb(208,99,42)" fg:x="79902008" fg:w="1212781"/><text x="17.4388%" y="3551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,212,781 samples, 0.26%)</title><rect x="17.1888%" y="3525" width="0.2609%" height="15" fill="rgb(253,99,2)" fg:x="79902008" fg:w="1212781"/><text x="17.4388%" y="3535.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,212,781 samples, 0.26%)</title><rect x="17.1888%" y="3509" width="0.2609%" height="15" fill="rgb(220,168,23)" fg:x="79902008" fg:w="1212781"/><text x="17.4388%" y="3519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,212,781 samples, 0.26%)</title><rect x="17.1888%" y="3493" width="0.2609%" height="15" fill="rgb(242,38,24)" fg:x="79902008" fg:w="1212781"/><text x="17.4388%" y="3503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,212,781 samples, 0.26%)</title><rect x="17.1888%" y="3477" width="0.2609%" height="15" fill="rgb(225,182,9)" fg:x="79902008" fg:w="1212781"/><text x="17.4388%" y="3487.50"></text></g><g><title>alloc::alloc::dealloc (1,212,781 samples, 0.26%)</title><rect x="17.1888%" y="3461" width="0.2609%" height="15" fill="rgb(243,178,37)" fg:x="79902008" fg:w="1212781"/><text x="17.4388%" y="3471.50"></text></g><g><title>cfree (1,212,781 samples, 0.26%)</title><rect x="17.1888%" y="3445" width="0.2609%" height="15" fill="rgb(232,139,19)" fg:x="79902008" fg:w="1212781"/><text x="17.4388%" y="3455.50"></text></g><g><title>[libc.so.6] (1,212,781 samples, 0.26%)</title><rect x="17.1888%" y="3429" width="0.2609%" height="15" fill="rgb(225,201,24)" fg:x="79902008" fg:w="1212781"/><text x="17.4388%" y="3439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,233,179 samples, 0.27%)</title><rect x="17.4497%" y="4821" width="0.2653%" height="15" fill="rgb(221,47,46)" fg:x="81114789" fg:w="1233179"/><text x="17.6997%" y="4831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,233,179 samples, 0.27%)</title><rect x="17.4497%" y="4805" width="0.2653%" height="15" fill="rgb(249,23,13)" fg:x="81114789" fg:w="1233179"/><text x="17.6997%" y="4815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,233,179 samples, 0.27%)</title><rect x="17.4497%" y="4789" width="0.2653%" height="15" fill="rgb(219,9,5)" fg:x="81114789" fg:w="1233179"/><text x="17.6997%" y="4799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,233,179 samples, 0.27%)</title><rect x="17.4497%" y="4773" width="0.2653%" height="15" fill="rgb(254,171,16)" fg:x="81114789" fg:w="1233179"/><text x="17.6997%" y="4783.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,233,179 samples, 0.27%)</title><rect x="17.4497%" y="4757" width="0.2653%" height="15" fill="rgb(230,171,20)" fg:x="81114789" fg:w="1233179"/><text x="17.6997%" y="4767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,233,179 samples, 0.27%)</title><rect x="17.4497%" y="4741" width="0.2653%" height="15" fill="rgb(210,71,41)" fg:x="81114789" fg:w="1233179"/><text x="17.6997%" y="4751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,233,179 samples, 0.27%)</title><rect x="17.4497%" y="4725" width="0.2653%" height="15" fill="rgb(206,173,20)" fg:x="81114789" fg:w="1233179"/><text x="17.6997%" y="4735.50"></text></g><g><title>alloc::alloc::realloc (1,233,179 samples, 0.27%)</title><rect x="17.4497%" y="4709" width="0.2653%" height="15" fill="rgb(233,88,34)" fg:x="81114789" fg:w="1233179"/><text x="17.6997%" y="4719.50"></text></g><g><title>realloc (1,233,179 samples, 0.27%)</title><rect x="17.4497%" y="4693" width="0.2653%" height="15" fill="rgb(223,209,46)" fg:x="81114789" fg:w="1233179"/><text x="17.6997%" y="4703.50"></text></g><g><title>[libc.so.6] (1,233,179 samples, 0.27%)</title><rect x="17.4497%" y="4677" width="0.2653%" height="15" fill="rgb(250,43,18)" fg:x="81114789" fg:w="1233179"/><text x="17.6997%" y="4687.50"></text></g><g><title>[libc.so.6] (1,233,179 samples, 0.27%)</title><rect x="17.4497%" y="4661" width="0.2653%" height="15" fill="rgb(208,13,10)" fg:x="81114789" fg:w="1233179"/><text x="17.6997%" y="4671.50"></text></g><g><title>[libc.so.6] (1,233,179 samples, 0.27%)</title><rect x="17.4497%" y="4645" width="0.2653%" height="15" fill="rgb(212,200,36)" fg:x="81114789" fg:w="1233179"/><text x="17.6997%" y="4655.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (1,176,149 samples, 0.25%)</title><rect x="17.7150%" y="2533" width="0.2530%" height="15" fill="rgb(225,90,30)" fg:x="82347968" fg:w="1176149"/><text x="17.9650%" y="2543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (1,176,149 samples, 0.25%)</title><rect x="17.7150%" y="2517" width="0.2530%" height="15" fill="rgb(236,182,39)" fg:x="82347968" fg:w="1176149"/><text x="17.9650%" y="2527.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1,176,149 samples, 0.25%)</title><rect x="17.7150%" y="2501" width="0.2530%" height="15" fill="rgb(212,144,35)" fg:x="82347968" fg:w="1176149"/><text x="17.9650%" y="2511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,176,149 samples, 0.25%)</title><rect x="17.7150%" y="2485" width="0.2530%" height="15" fill="rgb(228,63,44)" fg:x="82347968" fg:w="1176149"/><text x="17.9650%" y="2495.50"></text></g><g><title>alloc::alloc::dealloc (1,176,149 samples, 0.25%)</title><rect x="17.7150%" y="2469" width="0.2530%" height="15" fill="rgb(228,109,6)" fg:x="82347968" fg:w="1176149"/><text x="17.9650%" y="2479.50"></text></g><g><title>cfree (1,176,149 samples, 0.25%)</title><rect x="17.7150%" y="2453" width="0.2530%" height="15" fill="rgb(238,117,24)" fg:x="82347968" fg:w="1176149"/><text x="17.9650%" y="2463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2,367,396 samples, 0.51%)</title><rect x="17.7150%" y="2549" width="0.5093%" height="15" fill="rgb(242,26,26)" fg:x="82347968" fg:w="2367396"/><text x="17.9650%" y="2559.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,191,247 samples, 0.26%)</title><rect x="17.9680%" y="2533" width="0.2563%" height="15" fill="rgb(221,92,48)" fg:x="83524117" fg:w="1191247"/><text x="18.2180%" y="2543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1,191,247 samples, 0.26%)</title><rect x="17.9680%" y="2517" width="0.2563%" height="15" fill="rgb(209,209,32)" fg:x="83524117" fg:w="1191247"/><text x="18.2180%" y="2527.50"></text></g><g><title>alloc::collections::btree::mem::replace (1,191,247 samples, 0.26%)</title><rect x="17.9680%" y="2501" width="0.2563%" height="15" fill="rgb(221,70,22)" fg:x="83524117" fg:w="1191247"/><text x="18.2180%" y="2511.50"></text></g><g><title>core::ptr::write (1,191,247 samples, 0.26%)</title><rect x="17.9680%" y="2485" width="0.2563%" height="15" fill="rgb(248,145,5)" fg:x="83524117" fg:w="1191247"/><text x="18.2180%" y="2495.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,230,075 samples, 0.26%)</title><rect x="18.2243%" y="2533" width="0.2646%" height="15" fill="rgb(226,116,26)" fg:x="84715364" fg:w="1230075"/><text x="18.4743%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,230,075 samples, 0.26%)</title><rect x="18.2243%" y="2517" width="0.2646%" height="15" fill="rgb(244,5,17)" fg:x="84715364" fg:w="1230075"/><text x="18.4743%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,230,075 samples, 0.26%)</title><rect x="18.2243%" y="2501" width="0.2646%" height="15" fill="rgb(252,159,33)" fg:x="84715364" fg:w="1230075"/><text x="18.4743%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,230,075 samples, 0.26%)</title><rect x="18.2243%" y="2485" width="0.2646%" height="15" fill="rgb(206,71,0)" fg:x="84715364" fg:w="1230075"/><text x="18.4743%" y="2495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,230,075 samples, 0.26%)</title><rect x="18.2243%" y="2469" width="0.2646%" height="15" fill="rgb(233,118,54)" fg:x="84715364" fg:w="1230075"/><text x="18.4743%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,230,075 samples, 0.26%)</title><rect x="18.2243%" y="2453" width="0.2646%" height="15" fill="rgb(234,83,48)" fg:x="84715364" fg:w="1230075"/><text x="18.4743%" y="2463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,230,075 samples, 0.26%)</title><rect x="18.2243%" y="2437" width="0.2646%" height="15" fill="rgb(228,3,54)" fg:x="84715364" fg:w="1230075"/><text x="18.4743%" y="2447.50"></text></g><g><title>alloc::alloc::dealloc (1,230,075 samples, 0.26%)</title><rect x="18.2243%" y="2421" width="0.2646%" height="15" fill="rgb(226,155,13)" fg:x="84715364" fg:w="1230075"/><text x="18.4743%" y="2431.50"></text></g><g><title>cfree (1,230,075 samples, 0.26%)</title><rect x="18.2243%" y="2405" width="0.2646%" height="15" fill="rgb(241,28,37)" fg:x="84715364" fg:w="1230075"/><text x="18.4743%" y="2415.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,206,572 samples, 0.26%)</title><rect x="18.4889%" y="2293" width="0.2596%" height="15" fill="rgb(233,93,10)" fg:x="85945439" fg:w="1206572"/><text x="18.7389%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,206,572 samples, 0.26%)</title><rect x="18.4889%" y="2277" width="0.2596%" height="15" fill="rgb(225,113,19)" fg:x="85945439" fg:w="1206572"/><text x="18.7389%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,206,572 samples, 0.26%)</title><rect x="18.4889%" y="2261" width="0.2596%" height="15" fill="rgb(241,2,18)" fg:x="85945439" fg:w="1206572"/><text x="18.7389%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,206,572 samples, 0.26%)</title><rect x="18.4889%" y="2245" width="0.2596%" height="15" fill="rgb(228,207,21)" fg:x="85945439" fg:w="1206572"/><text x="18.7389%" y="2255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,206,572 samples, 0.26%)</title><rect x="18.4889%" y="2229" width="0.2596%" height="15" fill="rgb(213,211,35)" fg:x="85945439" fg:w="1206572"/><text x="18.7389%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3669" width="1.2958%" height="15" fill="rgb(209,83,10)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3653" width="1.2958%" height="15" fill="rgb(209,164,1)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3663.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3637" width="1.2958%" height="15" fill="rgb(213,184,43)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3647.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3621" width="1.2958%" height="15" fill="rgb(231,61,34)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3631.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3605" width="1.2958%" height="15" fill="rgb(235,75,3)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3589" width="1.2958%" height="15" fill="rgb(220,106,47)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3599.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3573" width="1.2958%" height="15" fill="rgb(210,196,33)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3583.50"></text></g><g><title>core::mem::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3557" width="1.2958%" height="15" fill="rgb(229,154,42)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3541" width="1.2958%" height="15" fill="rgb(228,114,26)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3551.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3525" width="1.2958%" height="15" fill="rgb(208,144,1)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3535.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3509" width="1.2958%" height="15" fill="rgb(239,112,37)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3493" width="1.2958%" height="15" fill="rgb(210,96,50)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3503.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3477" width="1.2958%" height="15" fill="rgb(222,178,2)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3487.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3461" width="1.2958%" height="15" fill="rgb(226,74,18)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3471.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3445" width="1.2958%" height="15" fill="rgb(225,67,54)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3429" width="1.2958%" height="15" fill="rgb(251,92,32)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3413" width="1.2958%" height="15" fill="rgb(228,149,22)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3423.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3397" width="1.2958%" height="15" fill="rgb(243,54,13)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3407.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3381" width="1.2958%" height="15" fill="rgb(243,180,28)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3391.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3365" width="1.2958%" height="15" fill="rgb(208,167,24)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3349" width="1.2958%" height="15" fill="rgb(245,73,45)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3359.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3333" width="1.2958%" height="15" fill="rgb(237,203,48)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3343.50"></text></g><g><title>core::mem::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3317" width="1.2958%" height="15" fill="rgb(211,197,16)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3301" width="1.2958%" height="15" fill="rgb(243,99,51)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3311.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3285" width="1.2958%" height="15" fill="rgb(215,123,29)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3295.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3269" width="1.2958%" height="15" fill="rgb(239,186,37)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3253" width="1.2958%" height="15" fill="rgb(252,136,39)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3263.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3237" width="1.2958%" height="15" fill="rgb(223,213,32)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3247.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3221" width="1.2958%" height="15" fill="rgb(233,115,5)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3231.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3205" width="1.2958%" height="15" fill="rgb(207,226,44)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3189" width="1.2958%" height="15" fill="rgb(208,126,0)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3173" width="1.2958%" height="15" fill="rgb(244,66,21)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3157" width="1.2958%" height="15" fill="rgb(222,97,12)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3167.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3141" width="1.2958%" height="15" fill="rgb(219,213,19)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3151.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3125" width="1.2958%" height="15" fill="rgb(252,169,30)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3109" width="1.2958%" height="15" fill="rgb(206,32,51)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3093" width="1.2958%" height="15" fill="rgb(250,172,42)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3103.50"></text></g><g><title>core::mem::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3077" width="1.2958%" height="15" fill="rgb(209,34,43)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3061" width="1.2958%" height="15" fill="rgb(223,11,35)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3071.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3045" width="1.2958%" height="15" fill="rgb(251,219,26)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3029" width="1.2958%" height="15" fill="rgb(231,119,3)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="3013" width="1.2958%" height="15" fill="rgb(216,97,11)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3023.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2997" width="1.2958%" height="15" fill="rgb(223,59,9)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="3007.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2981" width="1.2958%" height="15" fill="rgb(233,93,31)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2991.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2965" width="1.2958%" height="15" fill="rgb(239,81,33)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2949" width="1.2958%" height="15" fill="rgb(213,120,34)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2933" width="1.2958%" height="15" fill="rgb(243,49,53)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2943.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2917" width="1.2958%" height="15" fill="rgb(247,216,33)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2927.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2901" width="1.2958%" height="15" fill="rgb(226,26,14)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2911.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2885" width="1.2958%" height="15" fill="rgb(215,49,53)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2869" width="1.2958%" height="15" fill="rgb(245,162,40)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2879.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2853" width="1.2958%" height="15" fill="rgb(229,68,17)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2863.50"></text></g><g><title>core::mem::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2837" width="1.2958%" height="15" fill="rgb(213,182,10)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2821" width="1.2958%" height="15" fill="rgb(245,125,30)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2831.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2805" width="1.2958%" height="15" fill="rgb(232,202,2)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2789" width="1.2958%" height="15" fill="rgb(237,140,51)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2773" width="1.2958%" height="15" fill="rgb(236,157,25)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2783.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2757" width="1.2958%" height="15" fill="rgb(219,209,0)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2767.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2741" width="1.2958%" height="15" fill="rgb(240,116,54)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2725" width="1.2958%" height="15" fill="rgb(216,10,36)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2709" width="1.2958%" height="15" fill="rgb(222,72,44)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2693" width="1.2958%" height="15" fill="rgb(232,159,9)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2677" width="1.2958%" height="15" fill="rgb(210,39,32)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2661" width="1.2958%" height="15" fill="rgb(216,194,45)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2645" width="1.2958%" height="15" fill="rgb(218,18,35)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2629" width="1.2958%" height="15" fill="rgb(207,83,51)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2613" width="1.2958%" height="15" fill="rgb(225,63,43)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2623.50"></text></g><g><title>core::mem::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2597" width="1.2958%" height="15" fill="rgb(207,57,36)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2581" width="1.2958%" height="15" fill="rgb(216,99,33)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,023,529 samples, 1.30%)</title><rect x="17.7150%" y="2565" width="1.2958%" height="15" fill="rgb(225,42,16)" fg:x="82347968" fg:w="6023529"/><text x="17.9650%" y="2575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,656,133 samples, 0.79%)</title><rect x="18.2243%" y="2549" width="0.7865%" height="15" fill="rgb(220,201,45)" fg:x="84715364" fg:w="3656133"/><text x="18.4743%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,426,058 samples, 0.52%)</title><rect x="18.4889%" y="2533" width="0.5219%" height="15" fill="rgb(225,33,4)" fg:x="85945439" fg:w="2426058"/><text x="18.7389%" y="2543.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,426,058 samples, 0.52%)</title><rect x="18.4889%" y="2517" width="0.5219%" height="15" fill="rgb(224,33,50)" fg:x="85945439" fg:w="2426058"/><text x="18.7389%" y="2527.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,426,058 samples, 0.52%)</title><rect x="18.4889%" y="2501" width="0.5219%" height="15" fill="rgb(246,198,51)" fg:x="85945439" fg:w="2426058"/><text x="18.7389%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,426,058 samples, 0.52%)</title><rect x="18.4889%" y="2485" width="0.5219%" height="15" fill="rgb(205,22,4)" fg:x="85945439" fg:w="2426058"/><text x="18.7389%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,426,058 samples, 0.52%)</title><rect x="18.4889%" y="2469" width="0.5219%" height="15" fill="rgb(206,3,8)" fg:x="85945439" fg:w="2426058"/><text x="18.7389%" y="2479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,426,058 samples, 0.52%)</title><rect x="18.4889%" y="2453" width="0.5219%" height="15" fill="rgb(251,23,15)" fg:x="85945439" fg:w="2426058"/><text x="18.7389%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,426,058 samples, 0.52%)</title><rect x="18.4889%" y="2437" width="0.5219%" height="15" fill="rgb(252,88,28)" fg:x="85945439" fg:w="2426058"/><text x="18.7389%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,426,058 samples, 0.52%)</title><rect x="18.4889%" y="2421" width="0.5219%" height="15" fill="rgb(212,127,14)" fg:x="85945439" fg:w="2426058"/><text x="18.7389%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,426,058 samples, 0.52%)</title><rect x="18.4889%" y="2405" width="0.5219%" height="15" fill="rgb(247,145,37)" fg:x="85945439" fg:w="2426058"/><text x="18.7389%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,426,058 samples, 0.52%)</title><rect x="18.4889%" y="2389" width="0.5219%" height="15" fill="rgb(209,117,53)" fg:x="85945439" fg:w="2426058"/><text x="18.7389%" y="2399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,426,058 samples, 0.52%)</title><rect x="18.4889%" y="2373" width="0.5219%" height="15" fill="rgb(212,90,42)" fg:x="85945439" fg:w="2426058"/><text x="18.7389%" y="2383.50"></text></g><g><title>core::mem::drop (2,426,058 samples, 0.52%)</title><rect x="18.4889%" y="2357" width="0.5219%" height="15" fill="rgb(218,164,37)" fg:x="85945439" fg:w="2426058"/><text x="18.7389%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,426,058 samples, 0.52%)</title><rect x="18.4889%" y="2341" width="0.5219%" height="15" fill="rgb(246,65,34)" fg:x="85945439" fg:w="2426058"/><text x="18.7389%" y="2351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,426,058 samples, 0.52%)</title><rect x="18.4889%" y="2325" width="0.5219%" height="15" fill="rgb(231,100,33)" fg:x="85945439" fg:w="2426058"/><text x="18.7389%" y="2335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,426,058 samples, 0.52%)</title><rect x="18.4889%" y="2309" width="0.5219%" height="15" fill="rgb(228,126,14)" fg:x="85945439" fg:w="2426058"/><text x="18.7389%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="2293" width="0.2623%" height="15" fill="rgb(215,173,21)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="2303.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="2277" width="0.2623%" height="15" fill="rgb(210,6,40)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="2287.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="2261" width="0.2623%" height="15" fill="rgb(212,48,18)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="2245" width="0.2623%" height="15" fill="rgb(230,214,11)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="2229" width="0.2623%" height="15" fill="rgb(254,105,39)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="2239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="2213" width="0.2623%" height="15" fill="rgb(245,158,5)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="2197" width="0.2623%" height="15" fill="rgb(249,208,11)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="2181" width="0.2623%" height="15" fill="rgb(210,39,28)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="2165" width="0.2623%" height="15" fill="rgb(211,56,53)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="2149" width="0.2623%" height="15" fill="rgb(226,201,30)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="2159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="2133" width="0.2623%" height="15" fill="rgb(239,101,34)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="2143.50"></text></g><g><title>core::mem::drop (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="2117" width="0.2623%" height="15" fill="rgb(226,209,5)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="2101" width="0.2623%" height="15" fill="rgb(250,105,47)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="2111.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="2085" width="0.2623%" height="15" fill="rgb(230,72,3)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="2095.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="2069" width="0.2623%" height="15" fill="rgb(232,218,39)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="2053" width="0.2623%" height="15" fill="rgb(248,166,6)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="2063.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="2037" width="0.2623%" height="15" fill="rgb(247,89,20)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="2047.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="2021" width="0.2623%" height="15" fill="rgb(248,130,54)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="2005" width="0.2623%" height="15" fill="rgb(234,196,4)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="1989" width="0.2623%" height="15" fill="rgb(250,143,31)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="1973" width="0.2623%" height="15" fill="rgb(211,110,34)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="1957" width="0.2623%" height="15" fill="rgb(215,124,48)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="1941" width="0.2623%" height="15" fill="rgb(216,46,13)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="1925" width="0.2623%" height="15" fill="rgb(205,184,25)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="1909" width="0.2623%" height="15" fill="rgb(228,1,10)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="1919.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="1893" width="0.2623%" height="15" fill="rgb(213,116,27)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="1903.50"></text></g><g><title>core::mem::drop (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="1877" width="0.2623%" height="15" fill="rgb(241,95,50)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="1861" width="0.2623%" height="15" fill="rgb(238,48,32)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="1845" width="0.2623%" height="15" fill="rgb(235,113,49)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="1855.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="1829" width="0.2623%" height="15" fill="rgb(205,127,43)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="1839.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="1813" width="0.2623%" height="15" fill="rgb(250,162,2)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="1797" width="0.2623%" height="15" fill="rgb(220,13,41)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="1781" width="0.2623%" height="15" fill="rgb(249,221,25)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="1765" width="0.2623%" height="15" fill="rgb(215,208,19)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="1775.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,219,486 samples, 0.26%)</title><rect x="18.7485%" y="1749" width="0.2623%" height="15" fill="rgb(236,175,2)" fg:x="87152011" fg:w="1219486"/><text x="18.9985%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;main::benchmark::LayoutFrame&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4821" width="1.5539%" height="15" fill="rgb(241,52,2)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4805" width="1.5539%" height="15" fill="rgb(248,140,14)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[main::benchmark::LayoutFrame]&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4789" width="1.5539%" height="15" fill="rgb(253,22,42)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4799.50"></text></g><g><title>core::ptr::drop_in_place&lt;main::benchmark::LayoutFrame&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4773" width="1.5539%" height="15" fill="rgb(234,61,47)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4757" width="1.5539%" height="15" fill="rgb(208,226,15)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4741" width="1.5539%" height="15" fill="rgb(217,221,4)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4725" width="1.5539%" height="15" fill="rgb(212,174,34)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4709" width="1.5539%" height="15" fill="rgb(253,83,4)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4719.50"></text></g><g><title>core::mem::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4693" width="1.5539%" height="15" fill="rgb(250,195,49)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4677" width="1.5539%" height="15" fill="rgb(241,192,25)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4687.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4661" width="1.5539%" height="15" fill="rgb(208,124,10)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4645" width="1.5539%" height="15" fill="rgb(222,33,0)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4629" width="1.5539%" height="15" fill="rgb(234,209,28)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4639.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4613" width="1.5539%" height="15" fill="rgb(224,11,23)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4623.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4597" width="1.5539%" height="15" fill="rgb(232,99,1)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4581" width="1.5539%" height="15" fill="rgb(237,95,45)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4565" width="1.5539%" height="15" fill="rgb(208,109,11)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4549" width="1.5539%" height="15" fill="rgb(216,190,48)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4533" width="1.5539%" height="15" fill="rgb(251,171,36)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4543.50"></text></g><g><title>core::mem::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4517" width="1.5539%" height="15" fill="rgb(230,62,22)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4501" width="1.5539%" height="15" fill="rgb(225,114,35)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4511.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4485" width="1.5539%" height="15" fill="rgb(215,118,42)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4469" width="1.5539%" height="15" fill="rgb(243,119,21)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4453" width="1.5539%" height="15" fill="rgb(252,177,53)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4463.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4437" width="1.5539%" height="15" fill="rgb(237,209,29)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4447.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4421" width="1.5539%" height="15" fill="rgb(212,65,23)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4405" width="1.5539%" height="15" fill="rgb(230,222,46)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4389" width="1.5539%" height="15" fill="rgb(215,135,32)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4373" width="1.5539%" height="15" fill="rgb(246,101,22)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4357" width="1.5539%" height="15" fill="rgb(206,107,13)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4341" width="1.5539%" height="15" fill="rgb(250,100,44)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4325" width="1.5539%" height="15" fill="rgb(231,147,38)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4309" width="1.5539%" height="15" fill="rgb(229,8,40)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4293" width="1.5539%" height="15" fill="rgb(221,135,30)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4303.50"></text></g><g><title>core::mem::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4277" width="1.5539%" height="15" fill="rgb(249,193,18)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4261" width="1.5539%" height="15" fill="rgb(209,133,39)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4271.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4245" width="1.5539%" height="15" fill="rgb(232,100,14)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4255.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4229" width="1.5539%" height="15" fill="rgb(224,185,1)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4213" width="1.5539%" height="15" fill="rgb(223,139,8)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4223.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4197" width="1.5539%" height="15" fill="rgb(232,213,38)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4207.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4181" width="1.5539%" height="15" fill="rgb(207,94,22)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4165" width="1.5539%" height="15" fill="rgb(219,183,54)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4149" width="1.5539%" height="15" fill="rgb(216,185,54)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4133" width="1.5539%" height="15" fill="rgb(254,217,39)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4143.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4117" width="1.5539%" height="15" fill="rgb(240,178,23)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4127.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4101" width="1.5539%" height="15" fill="rgb(218,11,47)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4111.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4085" width="1.5539%" height="15" fill="rgb(218,51,51)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4069" width="1.5539%" height="15" fill="rgb(238,126,27)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4079.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4053" width="1.5539%" height="15" fill="rgb(249,202,22)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4063.50"></text></g><g><title>core::mem::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4037" width="1.5539%" height="15" fill="rgb(254,195,49)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4021" width="1.5539%" height="15" fill="rgb(208,123,14)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4031.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="4005" width="1.5539%" height="15" fill="rgb(224,200,8)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="4015.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="3989" width="1.5539%" height="15" fill="rgb(217,61,36)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="3999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="3973" width="1.5539%" height="15" fill="rgb(206,35,45)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="3983.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="3957" width="1.5539%" height="15" fill="rgb(217,65,33)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="3967.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="3941" width="1.5539%" height="15" fill="rgb(222,158,48)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="3951.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="3925" width="1.5539%" height="15" fill="rgb(254,2,54)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="3935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="3909" width="1.5539%" height="15" fill="rgb(250,143,38)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="3919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="3893" width="1.5539%" height="15" fill="rgb(248,25,0)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="3903.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="3877" width="1.5539%" height="15" fill="rgb(206,152,27)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="3887.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="3861" width="1.5539%" height="15" fill="rgb(240,77,30)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="3871.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="3845" width="1.5539%" height="15" fill="rgb(231,5,3)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="3855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="3829" width="1.5539%" height="15" fill="rgb(207,226,32)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="3839.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="3813" width="1.5539%" height="15" fill="rgb(222,207,47)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="3823.50"></text></g><g><title>core::mem::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="3797" width="1.5539%" height="15" fill="rgb(229,115,45)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="3807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="3781" width="1.5539%" height="15" fill="rgb(224,191,6)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="3791.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="3765" width="1.5539%" height="15" fill="rgb(230,227,24)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="3775.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="3749" width="1.5539%" height="15" fill="rgb(228,80,19)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="3759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="3733" width="1.5539%" height="15" fill="rgb(247,229,0)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="3743.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="3717" width="1.5539%" height="15" fill="rgb(237,194,15)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="3727.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="3701" width="1.5539%" height="15" fill="rgb(219,203,20)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="3711.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,223,396 samples, 1.55%)</title><rect x="17.7150%" y="3685" width="1.5539%" height="15" fill="rgb(234,128,8)" fg:x="82347968" fg:w="7223396"/><text x="17.9650%" y="3695.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,199,867 samples, 0.26%)</title><rect x="19.0108%" y="3669" width="0.2581%" height="15" fill="rgb(248,202,8)" fg:x="88371497" fg:w="1199867"/><text x="19.2608%" y="3679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,199,867 samples, 0.26%)</title><rect x="19.0108%" y="3653" width="0.2581%" height="15" fill="rgb(206,104,37)" fg:x="88371497" fg:w="1199867"/><text x="19.2608%" y="3663.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,199,867 samples, 0.26%)</title><rect x="19.0108%" y="3637" width="0.2581%" height="15" fill="rgb(223,8,27)" fg:x="88371497" fg:w="1199867"/><text x="19.2608%" y="3647.50"></text></g><g><title>core::mem::drop (1,199,867 samples, 0.26%)</title><rect x="19.0108%" y="3621" width="0.2581%" height="15" fill="rgb(216,217,28)" fg:x="88371497" fg:w="1199867"/><text x="19.2608%" y="3631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,199,867 samples, 0.26%)</title><rect x="19.0108%" y="3605" width="0.2581%" height="15" fill="rgb(249,199,1)" fg:x="88371497" fg:w="1199867"/><text x="19.2608%" y="3615.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,199,867 samples, 0.26%)</title><rect x="19.0108%" y="3589" width="0.2581%" height="15" fill="rgb(240,85,17)" fg:x="88371497" fg:w="1199867"/><text x="19.2608%" y="3599.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,199,867 samples, 0.26%)</title><rect x="19.0108%" y="3573" width="0.2581%" height="15" fill="rgb(206,108,45)" fg:x="88371497" fg:w="1199867"/><text x="19.2608%" y="3583.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,199,867 samples, 0.26%)</title><rect x="19.0108%" y="3557" width="0.2581%" height="15" fill="rgb(245,210,41)" fg:x="88371497" fg:w="1199867"/><text x="19.2608%" y="3567.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1,199,867 samples, 0.26%)</title><rect x="19.0108%" y="3541" width="0.2581%" height="15" fill="rgb(206,13,37)" fg:x="88371497" fg:w="1199867"/><text x="19.2608%" y="3551.50"></text></g><g><title>alloc::collections::btree::mem::replace (1,199,867 samples, 0.26%)</title><rect x="19.0108%" y="3525" width="0.2581%" height="15" fill="rgb(250,61,18)" fg:x="88371497" fg:w="1199867"/><text x="19.2608%" y="3535.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1,199,867 samples, 0.26%)</title><rect x="19.0108%" y="3509" width="0.2581%" height="15" fill="rgb(235,172,48)" fg:x="88371497" fg:w="1199867"/><text x="19.2608%" y="3519.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1,199,867 samples, 0.26%)</title><rect x="19.0108%" y="3493" width="0.2581%" height="15" fill="rgb(249,201,17)" fg:x="88371497" fg:w="1199867"/><text x="19.2608%" y="3503.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1,199,867 samples, 0.26%)</title><rect x="19.0108%" y="3477" width="0.2581%" height="15" fill="rgb(219,208,6)" fg:x="88371497" fg:w="1199867"/><text x="19.2608%" y="3487.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (1,199,867 samples, 0.26%)</title><rect x="19.0108%" y="3461" width="0.2581%" height="15" fill="rgb(248,31,23)" fg:x="88371497" fg:w="1199867"/><text x="19.2608%" y="3471.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4821" width="0.2691%" height="15" fill="rgb(245,15,42)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4805" width="0.2691%" height="15" fill="rgb(222,217,39)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4789" width="0.2691%" height="15" fill="rgb(210,219,27)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4773" width="0.2691%" height="15" fill="rgb(252,166,36)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4783.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4757" width="0.2691%" height="15" fill="rgb(245,132,34)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4741" width="0.2691%" height="15" fill="rgb(236,54,3)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4725" width="0.2691%" height="15" fill="rgb(241,173,43)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4709" width="0.2691%" height="15" fill="rgb(215,190,9)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4719.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4693" width="0.2691%" height="15" fill="rgb(242,101,16)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4677" width="0.2691%" height="15" fill="rgb(223,190,21)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4661" width="0.2691%" height="15" fill="rgb(215,228,25)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4645" width="0.2691%" height="15" fill="rgb(225,36,22)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4655.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4629" width="0.2691%" height="15" fill="rgb(251,106,46)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4613" width="0.2691%" height="15" fill="rgb(208,90,1)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4597" width="0.2691%" height="15" fill="rgb(243,10,4)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4581" width="0.2691%" height="15" fill="rgb(212,137,27)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4591.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4565" width="0.2691%" height="15" fill="rgb(231,220,49)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4549" width="0.2691%" height="15" fill="rgb(237,96,20)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4533" width="0.2691%" height="15" fill="rgb(239,229,30)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4517" width="0.2691%" height="15" fill="rgb(219,65,33)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4527.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4501" width="0.2691%" height="15" fill="rgb(243,134,7)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4485" width="0.2691%" height="15" fill="rgb(216,177,54)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4469" width="0.2691%" height="15" fill="rgb(211,160,20)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4453" width="0.2691%" height="15" fill="rgb(239,85,39)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4463.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4437" width="0.2691%" height="15" fill="rgb(232,125,22)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4421" width="0.2691%" height="15" fill="rgb(244,57,34)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4405" width="0.2691%" height="15" fill="rgb(214,203,32)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4389" width="0.2691%" height="15" fill="rgb(207,58,43)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4399.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4373" width="0.2691%" height="15" fill="rgb(215,193,15)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4357" width="0.2691%" height="15" fill="rgb(232,15,44)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4341" width="0.2691%" height="15" fill="rgb(212,3,48)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4325" width="0.2691%" height="15" fill="rgb(218,128,7)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4335.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4309" width="0.2691%" height="15" fill="rgb(226,216,39)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4293" width="0.2691%" height="15" fill="rgb(243,47,51)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4277" width="0.2691%" height="15" fill="rgb(241,183,40)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4261" width="0.2691%" height="15" fill="rgb(231,217,32)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4271.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4245" width="0.2691%" height="15" fill="rgb(229,61,38)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4229" width="0.2691%" height="15" fill="rgb(225,210,5)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4213" width="0.2691%" height="15" fill="rgb(231,79,45)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4223.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4197" width="0.2691%" height="15" fill="rgb(224,100,7)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4207.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4181" width="0.2691%" height="15" fill="rgb(241,198,18)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4165" width="0.2691%" height="15" fill="rgb(252,97,53)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4149" width="0.2691%" height="15" fill="rgb(220,88,7)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4159.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4133" width="0.2691%" height="15" fill="rgb(213,176,14)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4143.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4117" width="0.2691%" height="15" fill="rgb(246,73,7)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4101" width="0.2691%" height="15" fill="rgb(245,64,36)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4085" width="0.2691%" height="15" fill="rgb(245,80,10)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4095.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4069" width="0.2691%" height="15" fill="rgb(232,107,50)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4079.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4053" width="0.2691%" height="15" fill="rgb(253,3,0)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4063.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4037" width="0.2691%" height="15" fill="rgb(212,99,53)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4021" width="0.2691%" height="15" fill="rgb(249,111,54)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="4005" width="0.2691%" height="15" fill="rgb(249,55,30)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="4015.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="3989" width="0.2691%" height="15" fill="rgb(237,47,42)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="3999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="3973" width="0.2691%" height="15" fill="rgb(211,20,18)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="3983.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="3957" width="0.2691%" height="15" fill="rgb(231,203,46)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="3967.50"></text></g><g><title>alloc::alloc::dealloc (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="3941" width="0.2691%" height="15" fill="rgb(237,142,3)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="3951.50"></text></g><g><title>cfree (1,251,071 samples, 0.27%)</title><rect x="19.2689%" y="3925" width="0.2691%" height="15" fill="rgb(241,107,1)" fg:x="89571364" fg:w="1251071"/><text x="19.5189%" y="3935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,139,120 samples, 0.25%)</title><rect x="19.8087%" y="4757" width="0.2451%" height="15" fill="rgb(229,83,13)" fg:x="92080620" fg:w="1139120"/><text x="20.0587%" y="4767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,139,120 samples, 0.25%)</title><rect x="19.8087%" y="4741" width="0.2451%" height="15" fill="rgb(241,91,40)" fg:x="92080620" fg:w="1139120"/><text x="20.0587%" y="4751.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,661,329 samples, 0.79%)</title><rect x="19.5381%" y="4805" width="0.7876%" height="15" fill="rgb(225,3,45)" fg:x="90822435" fg:w="3661329"/><text x="19.7881%" y="4815.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,661,329 samples, 0.79%)</title><rect x="19.5381%" y="4789" width="0.7876%" height="15" fill="rgb(244,223,14)" fg:x="90822435" fg:w="3661329"/><text x="19.7881%" y="4799.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,403,144 samples, 0.52%)</title><rect x="19.8087%" y="4773" width="0.5170%" height="15" fill="rgb(224,124,37)" fg:x="92080620" fg:w="2403144"/><text x="20.0587%" y="4783.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,264,024 samples, 0.27%)</title><rect x="20.0538%" y="4757" width="0.2719%" height="15" fill="rgb(251,171,30)" fg:x="93219740" fg:w="1264024"/><text x="20.3038%" y="4767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,264,024 samples, 0.27%)</title><rect x="20.0538%" y="4741" width="0.2719%" height="15" fill="rgb(236,46,54)" fg:x="93219740" fg:w="1264024"/><text x="20.3038%" y="4751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,264,024 samples, 0.27%)</title><rect x="20.0538%" y="4725" width="0.2719%" height="15" fill="rgb(245,213,5)" fg:x="93219740" fg:w="1264024"/><text x="20.3038%" y="4735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,404,898 samples, 0.52%)</title><rect x="20.3257%" y="4709" width="0.5174%" height="15" fill="rgb(230,144,27)" fg:x="94483764" fg:w="2404898"/><text x="20.5757%" y="4719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,404,898 samples, 0.52%)</title><rect x="20.3257%" y="4693" width="0.5174%" height="15" fill="rgb(220,86,6)" fg:x="94483764" fg:w="2404898"/><text x="20.5757%" y="4703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,404,898 samples, 0.52%)</title><rect x="20.3257%" y="4677" width="0.5174%" height="15" fill="rgb(240,20,13)" fg:x="94483764" fg:w="2404898"/><text x="20.5757%" y="4687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,404,898 samples, 0.52%)</title><rect x="20.3257%" y="4661" width="0.5174%" height="15" fill="rgb(217,89,34)" fg:x="94483764" fg:w="2404898"/><text x="20.5757%" y="4671.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,404,898 samples, 0.52%)</title><rect x="20.3257%" y="4645" width="0.5174%" height="15" fill="rgb(229,13,5)" fg:x="94483764" fg:w="2404898"/><text x="20.5757%" y="4655.50"></text></g><g><title>malloc (2,404,898 samples, 0.52%)</title><rect x="20.3257%" y="4629" width="0.5174%" height="15" fill="rgb(244,67,35)" fg:x="94483764" fg:w="2404898"/><text x="20.5757%" y="4639.50"></text></g><g><title>[libc.so.6] (2,404,898 samples, 0.52%)</title><rect x="20.3257%" y="4613" width="0.5174%" height="15" fill="rgb(221,40,2)" fg:x="94483764" fg:w="2404898"/><text x="20.5757%" y="4623.50"></text></g><g><title>[libc.so.6] (2,404,898 samples, 0.52%)</title><rect x="20.3257%" y="4597" width="0.5174%" height="15" fill="rgb(237,157,21)" fg:x="94483764" fg:w="2404898"/><text x="20.5757%" y="4607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,128,419 samples, 0.24%)</title><rect x="20.8430%" y="4693" width="0.2427%" height="15" fill="rgb(222,94,11)" fg:x="96888662" fg:w="1128419"/><text x="21.0930%" y="4703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,128,419 samples, 0.24%)</title><rect x="20.8430%" y="4677" width="0.2427%" height="15" fill="rgb(249,113,6)" fg:x="96888662" fg:w="1128419"/><text x="21.0930%" y="4687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,128,419 samples, 0.24%)</title><rect x="20.8430%" y="4661" width="0.2427%" height="15" fill="rgb(238,137,36)" fg:x="96888662" fg:w="1128419"/><text x="21.0930%" y="4671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,128,419 samples, 0.24%)</title><rect x="20.8430%" y="4645" width="0.2427%" height="15" fill="rgb(210,102,26)" fg:x="96888662" fg:w="1128419"/><text x="21.0930%" y="4655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,128,419 samples, 0.24%)</title><rect x="20.8430%" y="4629" width="0.2427%" height="15" fill="rgb(218,30,30)" fg:x="96888662" fg:w="1128419"/><text x="21.0930%" y="4639.50"></text></g><g><title>malloc (1,128,419 samples, 0.24%)</title><rect x="20.8430%" y="4613" width="0.2427%" height="15" fill="rgb(214,67,26)" fg:x="96888662" fg:w="1128419"/><text x="21.0930%" y="4623.50"></text></g><g><title>[libc.so.6] (1,128,419 samples, 0.24%)</title><rect x="20.8430%" y="4597" width="0.2427%" height="15" fill="rgb(251,9,53)" fg:x="96888662" fg:w="1128419"/><text x="21.0930%" y="4607.50"></text></g><g><title>main::benchmark::json_to_html_node (4,440,915 samples, 0.96%)</title><rect x="20.3257%" y="4741" width="0.9553%" height="15" fill="rgb(228,204,25)" fg:x="94483764" fg:w="4440915"/><text x="20.5757%" y="4751.50"></text></g><g><title>main::benchmark::json_to_html_node (4,440,915 samples, 0.96%)</title><rect x="20.3257%" y="4725" width="0.9553%" height="15" fill="rgb(207,153,8)" fg:x="94483764" fg:w="4440915"/><text x="20.5757%" y="4735.50"></text></g><g><title>main::benchmark::json_to_html_node (2,036,017 samples, 0.44%)</title><rect x="20.8430%" y="4709" width="0.4380%" height="15" fill="rgb(242,9,16)" fg:x="96888662" fg:w="2036017"/><text x="21.0930%" y="4719.50"></text></g><g><title>main::benchmark::json_to_html_node (907,598 samples, 0.20%)</title><rect x="21.0858%" y="4693" width="0.1952%" height="15" fill="rgb(217,211,10)" fg:x="98017081" fg:w="907598"/><text x="21.3358%" y="4703.50"></text></g><g><title>main::benchmark::json_to_html_node (907,598 samples, 0.20%)</title><rect x="21.0858%" y="4677" width="0.1952%" height="15" fill="rgb(219,228,52)" fg:x="98017081" fg:w="907598"/><text x="21.3358%" y="4687.50"></text></g><g><title>main::benchmark::json_to_html_node (907,598 samples, 0.20%)</title><rect x="21.0858%" y="4661" width="0.1952%" height="15" fill="rgb(231,92,29)" fg:x="98017081" fg:w="907598"/><text x="21.3358%" y="4671.50"></text></g><g><title>main::benchmark::json_to_html_node (907,598 samples, 0.20%)</title><rect x="21.0858%" y="4645" width="0.1952%" height="15" fill="rgb(232,8,23)" fg:x="98017081" fg:w="907598"/><text x="21.3358%" y="4655.50"></text></g><g><title>main::benchmark::json_to_html_node (907,598 samples, 0.20%)</title><rect x="21.0858%" y="4629" width="0.1952%" height="15" fill="rgb(216,211,34)" fg:x="98017081" fg:w="907598"/><text x="21.3358%" y="4639.50"></text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (907,598 samples, 0.20%)</title><rect x="21.0858%" y="4613" width="0.1952%" height="15" fill="rgb(236,151,0)" fg:x="98017081" fg:w="907598"/><text x="21.3358%" y="4623.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (907,598 samples, 0.20%)</title><rect x="21.0858%" y="4597" width="0.1952%" height="15" fill="rgb(209,168,3)" fg:x="98017081" fg:w="907598"/><text x="21.3358%" y="4607.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (907,598 samples, 0.20%)</title><rect x="21.0858%" y="4581" width="0.1952%" height="15" fill="rgb(208,129,28)" fg:x="98017081" fg:w="907598"/><text x="21.3358%" y="4591.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (907,598 samples, 0.20%)</title><rect x="21.0858%" y="4565" width="0.1952%" height="15" fill="rgb(229,78,22)" fg:x="98017081" fg:w="907598"/><text x="21.3358%" y="4575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (907,598 samples, 0.20%)</title><rect x="21.0858%" y="4549" width="0.1952%" height="15" fill="rgb(228,187,13)" fg:x="98017081" fg:w="907598"/><text x="21.3358%" y="4559.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (907,598 samples, 0.20%)</title><rect x="21.0858%" y="4533" width="0.1952%" height="15" fill="rgb(240,119,24)" fg:x="98017081" fg:w="907598"/><text x="21.3358%" y="4543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (907,598 samples, 0.20%)</title><rect x="21.0858%" y="4517" width="0.1952%" height="15" fill="rgb(209,194,42)" fg:x="98017081" fg:w="907598"/><text x="21.3358%" y="4527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (907,598 samples, 0.20%)</title><rect x="21.0858%" y="4501" width="0.1952%" height="15" fill="rgb(247,200,46)" fg:x="98017081" fg:w="907598"/><text x="21.3358%" y="4511.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (907,598 samples, 0.20%)</title><rect x="21.0858%" y="4485" width="0.1952%" height="15" fill="rgb(218,76,16)" fg:x="98017081" fg:w="907598"/><text x="21.3358%" y="4495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (907,598 samples, 0.20%)</title><rect x="21.0858%" y="4469" width="0.1952%" height="15" fill="rgb(225,21,48)" fg:x="98017081" fg:w="907598"/><text x="21.3358%" y="4479.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (907,598 samples, 0.20%)</title><rect x="21.0858%" y="4453" width="0.1952%" height="15" fill="rgb(239,223,50)" fg:x="98017081" fg:w="907598"/><text x="21.3358%" y="4463.50"></text></g><g><title>[libc.so.6] (907,598 samples, 0.20%)</title><rect x="21.0858%" y="4437" width="0.1952%" height="15" fill="rgb(244,45,21)" fg:x="98017081" fg:w="907598"/><text x="21.3358%" y="4447.50"></text></g><g><title>main::benchmark::json_to_html_node (5,655,539 samples, 1.22%)</title><rect x="20.3257%" y="4773" width="1.2166%" height="15" fill="rgb(232,33,43)" fg:x="94483764" fg:w="5655539"/><text x="20.5757%" y="4783.50"></text></g><g><title>main::benchmark::json_to_html_node (5,655,539 samples, 1.22%)</title><rect x="20.3257%" y="4757" width="1.2166%" height="15" fill="rgb(209,8,3)" fg:x="94483764" fg:w="5655539"/><text x="20.5757%" y="4767.50"></text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (1,214,624 samples, 0.26%)</title><rect x="21.2810%" y="4741" width="0.2613%" height="15" fill="rgb(214,25,53)" fg:x="98924679" fg:w="1214624"/><text x="21.5310%" y="4751.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,214,624 samples, 0.26%)</title><rect x="21.2810%" y="4725" width="0.2613%" height="15" fill="rgb(254,186,54)" fg:x="98924679" fg:w="1214624"/><text x="21.5310%" y="4735.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,214,624 samples, 0.26%)</title><rect x="21.2810%" y="4709" width="0.2613%" height="15" fill="rgb(208,174,49)" fg:x="98924679" fg:w="1214624"/><text x="21.5310%" y="4719.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,214,624 samples, 0.26%)</title><rect x="21.2810%" y="4693" width="0.2613%" height="15" fill="rgb(233,191,51)" fg:x="98924679" fg:w="1214624"/><text x="21.5310%" y="4703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,214,624 samples, 0.26%)</title><rect x="21.2810%" y="4677" width="0.2613%" height="15" fill="rgb(222,134,10)" fg:x="98924679" fg:w="1214624"/><text x="21.5310%" y="4687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,214,624 samples, 0.26%)</title><rect x="21.2810%" y="4661" width="0.2613%" height="15" fill="rgb(230,226,20)" fg:x="98924679" fg:w="1214624"/><text x="21.5310%" y="4671.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,214,624 samples, 0.26%)</title><rect x="21.2810%" y="4645" width="0.2613%" height="15" fill="rgb(251,111,25)" fg:x="98924679" fg:w="1214624"/><text x="21.5310%" y="4655.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,214,624 samples, 0.26%)</title><rect x="21.2810%" y="4629" width="0.2613%" height="15" fill="rgb(224,40,46)" fg:x="98924679" fg:w="1214624"/><text x="21.5310%" y="4639.50"></text></g><g><title>main::benchmark::json_to_html_node (6,836,486 samples, 1.47%)</title><rect x="20.3257%" y="4805" width="1.4707%" height="15" fill="rgb(236,108,47)" fg:x="94483764" fg:w="6836486"/><text x="20.5757%" y="4815.50"></text></g><g><title>main::benchmark::json_to_html_node (6,836,486 samples, 1.47%)</title><rect x="20.3257%" y="4789" width="1.4707%" height="15" fill="rgb(234,93,0)" fg:x="94483764" fg:w="6836486"/><text x="20.5757%" y="4799.50"></text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (1,180,947 samples, 0.25%)</title><rect x="21.5423%" y="4773" width="0.2540%" height="15" fill="rgb(224,213,32)" fg:x="100139303" fg:w="1180947"/><text x="21.7923%" y="4783.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,180,947 samples, 0.25%)</title><rect x="21.5423%" y="4757" width="0.2540%" height="15" fill="rgb(251,11,48)" fg:x="100139303" fg:w="1180947"/><text x="21.7923%" y="4767.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,180,947 samples, 0.25%)</title><rect x="21.5423%" y="4741" width="0.2540%" height="15" fill="rgb(236,173,5)" fg:x="100139303" fg:w="1180947"/><text x="21.7923%" y="4751.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,180,947 samples, 0.25%)</title><rect x="21.5423%" y="4725" width="0.2540%" height="15" fill="rgb(230,95,12)" fg:x="100139303" fg:w="1180947"/><text x="21.7923%" y="4735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,180,947 samples, 0.25%)</title><rect x="21.5423%" y="4709" width="0.2540%" height="15" fill="rgb(232,209,1)" fg:x="100139303" fg:w="1180947"/><text x="21.7923%" y="4719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,180,947 samples, 0.25%)</title><rect x="21.5423%" y="4693" width="0.2540%" height="15" fill="rgb(232,6,1)" fg:x="100139303" fg:w="1180947"/><text x="21.7923%" y="4703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,180,947 samples, 0.25%)</title><rect x="21.5423%" y="4677" width="0.2540%" height="15" fill="rgb(210,224,50)" fg:x="100139303" fg:w="1180947"/><text x="21.7923%" y="4687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,180,947 samples, 0.25%)</title><rect x="21.5423%" y="4661" width="0.2540%" height="15" fill="rgb(228,127,35)" fg:x="100139303" fg:w="1180947"/><text x="21.7923%" y="4671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (1,180,947 samples, 0.25%)</title><rect x="21.5423%" y="4645" width="0.2540%" height="15" fill="rgb(245,102,45)" fg:x="100139303" fg:w="1180947"/><text x="21.7923%" y="4655.50"></text></g><g><title>main::benchmark::apply_frame_modifications (11,719,032 samples, 2.52%)</title><rect x="19.5381%" y="4821" width="2.5210%" height="15" fill="rgb(214,1,49)" fg:x="90822435" fg:w="11719032"/><text x="19.7881%" y="4831.50">ma..</text></g><g><title>std::io::stdio::_print (1,221,217 samples, 0.26%)</title><rect x="21.7964%" y="4805" width="0.2627%" height="15" fill="rgb(226,163,40)" fg:x="101320250" fg:w="1221217"/><text x="22.0464%" y="4815.50"></text></g><g><title>std::io::stdio::print_to (1,221,217 samples, 0.26%)</title><rect x="21.7964%" y="4789" width="0.2627%" height="15" fill="rgb(239,212,28)" fg:x="101320250" fg:w="1221217"/><text x="22.0464%" y="4799.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1,221,217 samples, 0.26%)</title><rect x="21.7964%" y="4773" width="0.2627%" height="15" fill="rgb(220,20,13)" fg:x="101320250" fg:w="1221217"/><text x="22.0464%" y="4783.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1,221,217 samples, 0.26%)</title><rect x="21.7964%" y="4757" width="0.2627%" height="15" fill="rgb(210,164,35)" fg:x="101320250" fg:w="1221217"/><text x="22.0464%" y="4767.50"></text></g><g><title>std::io::Write::write_fmt (1,221,217 samples, 0.26%)</title><rect x="21.7964%" y="4741" width="0.2627%" height="15" fill="rgb(248,109,41)" fg:x="101320250" fg:w="1221217"/><text x="22.0464%" y="4751.50"></text></g><g><title>core::fmt::write (1,221,217 samples, 0.26%)</title><rect x="21.7964%" y="4725" width="0.2627%" height="15" fill="rgb(238,23,50)" fg:x="101320250" fg:w="1221217"/><text x="22.0464%" y="4735.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1,221,217 samples, 0.26%)</title><rect x="21.7964%" y="4709" width="0.2627%" height="15" fill="rgb(211,48,49)" fg:x="101320250" fg:w="1221217"/><text x="22.0464%" y="4719.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1,221,217 samples, 0.26%)</title><rect x="21.7964%" y="4693" width="0.2627%" height="15" fill="rgb(223,36,21)" fg:x="101320250" fg:w="1221217"/><text x="22.0464%" y="4703.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1,221,217 samples, 0.26%)</title><rect x="21.7964%" y="4677" width="0.2627%" height="15" fill="rgb(207,123,46)" fg:x="101320250" fg:w="1221217"/><text x="22.0464%" y="4687.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1,221,217 samples, 0.26%)</title><rect x="21.7964%" y="4661" width="0.2627%" height="15" fill="rgb(240,218,32)" fg:x="101320250" fg:w="1221217"/><text x="22.0464%" y="4671.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1,221,217 samples, 0.26%)</title><rect x="21.7964%" y="4645" width="0.2627%" height="15" fill="rgb(252,5,43)" fg:x="101320250" fg:w="1221217"/><text x="22.0464%" y="4655.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (1,221,217 samples, 0.26%)</title><rect x="21.7964%" y="4629" width="0.2627%" height="15" fill="rgb(252,84,19)" fg:x="101320250" fg:w="1221217"/><text x="22.0464%" y="4639.50"></text></g><g><title>&lt;std::sys::pal::unix::stdio::Stdout as std::io::Write&gt;::write (1,221,217 samples, 0.26%)</title><rect x="21.7964%" y="4613" width="0.2627%" height="15" fill="rgb(243,152,39)" fg:x="101320250" fg:w="1221217"/><text x="22.0464%" y="4623.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1,221,217 samples, 0.26%)</title><rect x="21.7964%" y="4597" width="0.2627%" height="15" fill="rgb(234,160,15)" fg:x="101320250" fg:w="1221217"/><text x="22.0464%" y="4607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,181,694 samples, 0.25%)</title><rect x="22.0591%" y="3989" width="0.2542%" height="15" fill="rgb(237,34,20)" fg:x="102541467" fg:w="1181694"/><text x="22.3091%" y="3999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,181,694 samples, 0.25%)</title><rect x="22.0591%" y="3973" width="0.2542%" height="15" fill="rgb(229,97,13)" fg:x="102541467" fg:w="1181694"/><text x="22.3091%" y="3983.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,181,694 samples, 0.25%)</title><rect x="22.0591%" y="3957" width="0.2542%" height="15" fill="rgb(234,71,50)" fg:x="102541467" fg:w="1181694"/><text x="22.3091%" y="3967.50"></text></g><g><title>alloc::slice::hack::to_vec (1,181,694 samples, 0.25%)</title><rect x="22.0591%" y="3941" width="0.2542%" height="15" fill="rgb(253,155,4)" fg:x="102541467" fg:w="1181694"/><text x="22.3091%" y="3951.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,181,694 samples, 0.25%)</title><rect x="22.0591%" y="3925" width="0.2542%" height="15" fill="rgb(222,185,37)" fg:x="102541467" fg:w="1181694"/><text x="22.3091%" y="3935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,181,694 samples, 0.25%)</title><rect x="22.0591%" y="3909" width="0.2542%" height="15" fill="rgb(251,177,13)" fg:x="102541467" fg:w="1181694"/><text x="22.3091%" y="3919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,181,694 samples, 0.25%)</title><rect x="22.0591%" y="3893" width="0.2542%" height="15" fill="rgb(250,179,40)" fg:x="102541467" fg:w="1181694"/><text x="22.3091%" y="3903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,181,694 samples, 0.25%)</title><rect x="22.0591%" y="3877" width="0.2542%" height="15" fill="rgb(242,44,2)" fg:x="102541467" fg:w="1181694"/><text x="22.3091%" y="3887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,181,694 samples, 0.25%)</title><rect x="22.0591%" y="3861" width="0.2542%" height="15" fill="rgb(216,177,13)" fg:x="102541467" fg:w="1181694"/><text x="22.3091%" y="3871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,181,694 samples, 0.25%)</title><rect x="22.0591%" y="3845" width="0.2542%" height="15" fill="rgb(216,106,43)" fg:x="102541467" fg:w="1181694"/><text x="22.3091%" y="3855.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,181,694 samples, 0.25%)</title><rect x="22.0591%" y="3829" width="0.2542%" height="15" fill="rgb(216,183,2)" fg:x="102541467" fg:w="1181694"/><text x="22.3091%" y="3839.50"></text></g><g><title>alloc::alloc::alloc (1,181,694 samples, 0.25%)</title><rect x="22.0591%" y="3813" width="0.2542%" height="15" fill="rgb(249,75,3)" fg:x="102541467" fg:w="1181694"/><text x="22.3091%" y="3823.50"></text></g><g><title>malloc (1,181,694 samples, 0.25%)</title><rect x="22.0591%" y="3797" width="0.2542%" height="15" fill="rgb(219,67,39)" fg:x="102541467" fg:w="1181694"/><text x="22.3091%" y="3807.50"></text></g><g><title>[libc.so.6] (1,181,694 samples, 0.25%)</title><rect x="22.0591%" y="3781" width="0.2542%" height="15" fill="rgb(253,228,2)" fg:x="102541467" fg:w="1181694"/><text x="22.3091%" y="3791.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,200,238 samples, 0.26%)</title><rect x="22.3133%" y="3909" width="0.2582%" height="15" fill="rgb(235,138,27)" fg:x="103723161" fg:w="1200238"/><text x="22.5633%" y="3919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,200,238 samples, 0.26%)</title><rect x="22.3133%" y="3893" width="0.2582%" height="15" fill="rgb(236,97,51)" fg:x="103723161" fg:w="1200238"/><text x="22.5633%" y="3903.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,200,238 samples, 0.26%)</title><rect x="22.3133%" y="3877" width="0.2582%" height="15" fill="rgb(240,80,30)" fg:x="103723161" fg:w="1200238"/><text x="22.5633%" y="3887.50"></text></g><g><title>alloc::slice::hack::to_vec (1,200,238 samples, 0.26%)</title><rect x="22.3133%" y="3861" width="0.2582%" height="15" fill="rgb(230,178,19)" fg:x="103723161" fg:w="1200238"/><text x="22.5633%" y="3871.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,200,238 samples, 0.26%)</title><rect x="22.3133%" y="3845" width="0.2582%" height="15" fill="rgb(210,190,27)" fg:x="103723161" fg:w="1200238"/><text x="22.5633%" y="3855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,200,238 samples, 0.26%)</title><rect x="22.3133%" y="3829" width="0.2582%" height="15" fill="rgb(222,107,31)" fg:x="103723161" fg:w="1200238"/><text x="22.5633%" y="3839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,200,238 samples, 0.26%)</title><rect x="22.3133%" y="3813" width="0.2582%" height="15" fill="rgb(216,127,34)" fg:x="103723161" fg:w="1200238"/><text x="22.5633%" y="3823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,200,238 samples, 0.26%)</title><rect x="22.3133%" y="3797" width="0.2582%" height="15" fill="rgb(234,116,52)" fg:x="103723161" fg:w="1200238"/><text x="22.5633%" y="3807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,200,238 samples, 0.26%)</title><rect x="22.3133%" y="3781" width="0.2582%" height="15" fill="rgb(222,124,15)" fg:x="103723161" fg:w="1200238"/><text x="22.5633%" y="3791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,200,238 samples, 0.26%)</title><rect x="22.3133%" y="3765" width="0.2582%" height="15" fill="rgb(231,179,28)" fg:x="103723161" fg:w="1200238"/><text x="22.5633%" y="3775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,200,238 samples, 0.26%)</title><rect x="22.3133%" y="3749" width="0.2582%" height="15" fill="rgb(226,93,45)" fg:x="103723161" fg:w="1200238"/><text x="22.5633%" y="3759.50"></text></g><g><title>alloc::alloc::alloc (1,200,238 samples, 0.26%)</title><rect x="22.3133%" y="3733" width="0.2582%" height="15" fill="rgb(215,8,51)" fg:x="103723161" fg:w="1200238"/><text x="22.5633%" y="3743.50"></text></g><g><title>malloc (1,200,238 samples, 0.26%)</title><rect x="22.3133%" y="3717" width="0.2582%" height="15" fill="rgb(223,106,5)" fg:x="103723161" fg:w="1200238"/><text x="22.5633%" y="3727.50"></text></g><g><title>[libc.so.6] (1,200,238 samples, 0.26%)</title><rect x="22.3133%" y="3701" width="0.2582%" height="15" fill="rgb(250,191,5)" fg:x="103723161" fg:w="1200238"/><text x="22.5633%" y="3711.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,338,224 samples, 0.50%)</title><rect x="22.5715%" y="3829" width="0.5030%" height="15" fill="rgb(242,132,44)" fg:x="104923399" fg:w="2338224"/><text x="22.8215%" y="3839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,338,224 samples, 0.50%)</title><rect x="22.5715%" y="3813" width="0.5030%" height="15" fill="rgb(251,152,29)" fg:x="104923399" fg:w="2338224"/><text x="22.8215%" y="3823.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,338,224 samples, 0.50%)</title><rect x="22.5715%" y="3797" width="0.5030%" height="15" fill="rgb(218,179,5)" fg:x="104923399" fg:w="2338224"/><text x="22.8215%" y="3807.50"></text></g><g><title>alloc::slice::hack::to_vec (2,338,224 samples, 0.50%)</title><rect x="22.5715%" y="3781" width="0.5030%" height="15" fill="rgb(227,67,19)" fg:x="104923399" fg:w="2338224"/><text x="22.8215%" y="3791.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,338,224 samples, 0.50%)</title><rect x="22.5715%" y="3765" width="0.5030%" height="15" fill="rgb(233,119,31)" fg:x="104923399" fg:w="2338224"/><text x="22.8215%" y="3775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,338,224 samples, 0.50%)</title><rect x="22.5715%" y="3749" width="0.5030%" height="15" fill="rgb(241,120,22)" fg:x="104923399" fg:w="2338224"/><text x="22.8215%" y="3759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,338,224 samples, 0.50%)</title><rect x="22.5715%" y="3733" width="0.5030%" height="15" fill="rgb(224,102,30)" fg:x="104923399" fg:w="2338224"/><text x="22.8215%" y="3743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,338,224 samples, 0.50%)</title><rect x="22.5715%" y="3717" width="0.5030%" height="15" fill="rgb(210,164,37)" fg:x="104923399" fg:w="2338224"/><text x="22.8215%" y="3727.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,338,224 samples, 0.50%)</title><rect x="22.5715%" y="3701" width="0.5030%" height="15" fill="rgb(226,191,16)" fg:x="104923399" fg:w="2338224"/><text x="22.8215%" y="3711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,104,369 samples, 0.24%)</title><rect x="22.8369%" y="3685" width="0.2376%" height="15" fill="rgb(214,40,45)" fg:x="106157254" fg:w="1104369"/><text x="23.0869%" y="3695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,104,369 samples, 0.24%)</title><rect x="22.8369%" y="3669" width="0.2376%" height="15" fill="rgb(244,29,26)" fg:x="106157254" fg:w="1104369"/><text x="23.0869%" y="3679.50"></text></g><g><title>alloc::alloc::alloc (1,104,369 samples, 0.24%)</title><rect x="22.8369%" y="3653" width="0.2376%" height="15" fill="rgb(216,16,5)" fg:x="106157254" fg:w="1104369"/><text x="23.0869%" y="3663.50"></text></g><g><title>malloc (1,104,369 samples, 0.24%)</title><rect x="22.8369%" y="3637" width="0.2376%" height="15" fill="rgb(249,76,35)" fg:x="106157254" fg:w="1104369"/><text x="23.0869%" y="3647.50"></text></g><g><title>[libc.so.6] (1,104,369 samples, 0.24%)</title><rect x="22.8369%" y="3621" width="0.2376%" height="15" fill="rgb(207,11,44)" fg:x="106157254" fg:w="1104369"/><text x="23.0869%" y="3631.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,141,772 samples, 0.25%)</title><rect x="23.3507%" y="3749" width="0.2456%" height="15" fill="rgb(228,190,49)" fg:x="108545722" fg:w="1141772"/><text x="23.6007%" y="3759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,141,772 samples, 0.25%)</title><rect x="23.3507%" y="3733" width="0.2456%" height="15" fill="rgb(214,173,12)" fg:x="108545722" fg:w="1141772"/><text x="23.6007%" y="3743.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,141,772 samples, 0.25%)</title><rect x="23.3507%" y="3717" width="0.2456%" height="15" fill="rgb(218,26,35)" fg:x="108545722" fg:w="1141772"/><text x="23.6007%" y="3727.50"></text></g><g><title>alloc::slice::hack::to_vec (1,141,772 samples, 0.25%)</title><rect x="23.3507%" y="3701" width="0.2456%" height="15" fill="rgb(220,200,19)" fg:x="108545722" fg:w="1141772"/><text x="23.6007%" y="3711.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,141,772 samples, 0.25%)</title><rect x="23.3507%" y="3685" width="0.2456%" height="15" fill="rgb(239,95,49)" fg:x="108545722" fg:w="1141772"/><text x="23.6007%" y="3695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,141,772 samples, 0.25%)</title><rect x="23.3507%" y="3669" width="0.2456%" height="15" fill="rgb(235,85,53)" fg:x="108545722" fg:w="1141772"/><text x="23.6007%" y="3679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,141,772 samples, 0.25%)</title><rect x="23.3507%" y="3653" width="0.2456%" height="15" fill="rgb(233,133,31)" fg:x="108545722" fg:w="1141772"/><text x="23.6007%" y="3663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,141,772 samples, 0.25%)</title><rect x="23.3507%" y="3637" width="0.2456%" height="15" fill="rgb(218,25,20)" fg:x="108545722" fg:w="1141772"/><text x="23.6007%" y="3647.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,141,772 samples, 0.25%)</title><rect x="23.3507%" y="3621" width="0.2456%" height="15" fill="rgb(252,210,38)" fg:x="108545722" fg:w="1141772"/><text x="23.6007%" y="3631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,141,772 samples, 0.25%)</title><rect x="23.3507%" y="3605" width="0.2456%" height="15" fill="rgb(242,134,21)" fg:x="108545722" fg:w="1141772"/><text x="23.6007%" y="3615.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,141,772 samples, 0.25%)</title><rect x="23.3507%" y="3589" width="0.2456%" height="15" fill="rgb(213,28,48)" fg:x="108545722" fg:w="1141772"/><text x="23.6007%" y="3599.50"></text></g><g><title>alloc::alloc::alloc (1,141,772 samples, 0.25%)</title><rect x="23.3507%" y="3573" width="0.2456%" height="15" fill="rgb(250,196,2)" fg:x="108545722" fg:w="1141772"/><text x="23.6007%" y="3583.50"></text></g><g><title>malloc (1,141,772 samples, 0.25%)</title><rect x="23.3507%" y="3557" width="0.2456%" height="15" fill="rgb(227,5,17)" fg:x="108545722" fg:w="1141772"/><text x="23.6007%" y="3567.50"></text></g><g><title>[libc.so.6] (1,141,772 samples, 0.25%)</title><rect x="23.3507%" y="3541" width="0.2456%" height="15" fill="rgb(221,226,24)" fg:x="108545722" fg:w="1141772"/><text x="23.6007%" y="3551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,407,414 samples, 0.52%)</title><rect x="23.5964%" y="3589" width="0.5179%" height="15" fill="rgb(211,5,48)" fg:x="109687494" fg:w="2407414"/><text x="23.8464%" y="3599.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,407,414 samples, 0.52%)</title><rect x="23.5964%" y="3573" width="0.5179%" height="15" fill="rgb(219,150,6)" fg:x="109687494" fg:w="2407414"/><text x="23.8464%" y="3583.50"></text></g><g><title>alloc::slice::hack::to_vec (2,407,414 samples, 0.52%)</title><rect x="23.5964%" y="3557" width="0.5179%" height="15" fill="rgb(251,46,16)" fg:x="109687494" fg:w="2407414"/><text x="23.8464%" y="3567.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,407,414 samples, 0.52%)</title><rect x="23.5964%" y="3541" width="0.5179%" height="15" fill="rgb(220,204,40)" fg:x="109687494" fg:w="2407414"/><text x="23.8464%" y="3551.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (2,407,414 samples, 0.52%)</title><rect x="23.5964%" y="3525" width="0.5179%" height="15" fill="rgb(211,85,2)" fg:x="109687494" fg:w="2407414"/><text x="23.8464%" y="3535.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,407,414 samples, 0.52%)</title><rect x="23.5964%" y="3509" width="0.5179%" height="15" fill="rgb(229,17,7)" fg:x="109687494" fg:w="2407414"/><text x="23.8464%" y="3519.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,161,713 samples, 0.25%)</title><rect x="23.8643%" y="3493" width="0.2499%" height="15" fill="rgb(239,72,28)" fg:x="110933195" fg:w="1161713"/><text x="24.1143%" y="3503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,161,713 samples, 0.25%)</title><rect x="23.8643%" y="3477" width="0.2499%" height="15" fill="rgb(230,47,54)" fg:x="110933195" fg:w="1161713"/><text x="24.1143%" y="3487.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,161,713 samples, 0.25%)</title><rect x="23.8643%" y="3461" width="0.2499%" height="15" fill="rgb(214,50,8)" fg:x="110933195" fg:w="1161713"/><text x="24.1143%" y="3471.50"></text></g><g><title>alloc::slice::hack::to_vec (1,161,713 samples, 0.25%)</title><rect x="23.8643%" y="3445" width="0.2499%" height="15" fill="rgb(216,198,43)" fg:x="110933195" fg:w="1161713"/><text x="24.1143%" y="3455.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,161,713 samples, 0.25%)</title><rect x="23.8643%" y="3429" width="0.2499%" height="15" fill="rgb(234,20,35)" fg:x="110933195" fg:w="1161713"/><text x="24.1143%" y="3439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,161,713 samples, 0.25%)</title><rect x="23.8643%" y="3413" width="0.2499%" height="15" fill="rgb(254,45,19)" fg:x="110933195" fg:w="1161713"/><text x="24.1143%" y="3423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,161,713 samples, 0.25%)</title><rect x="23.8643%" y="3397" width="0.2499%" height="15" fill="rgb(219,14,44)" fg:x="110933195" fg:w="1161713"/><text x="24.1143%" y="3407.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,161,713 samples, 0.25%)</title><rect x="23.8643%" y="3381" width="0.2499%" height="15" fill="rgb(217,220,26)" fg:x="110933195" fg:w="1161713"/><text x="24.1143%" y="3391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,161,713 samples, 0.25%)</title><rect x="23.8643%" y="3365" width="0.2499%" height="15" fill="rgb(213,158,28)" fg:x="110933195" fg:w="1161713"/><text x="24.1143%" y="3375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,161,713 samples, 0.25%)</title><rect x="23.8643%" y="3349" width="0.2499%" height="15" fill="rgb(252,51,52)" fg:x="110933195" fg:w="1161713"/><text x="24.1143%" y="3359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,161,713 samples, 0.25%)</title><rect x="23.8643%" y="3333" width="0.2499%" height="15" fill="rgb(246,89,16)" fg:x="110933195" fg:w="1161713"/><text x="24.1143%" y="3343.50"></text></g><g><title>alloc::alloc::alloc (1,161,713 samples, 0.25%)</title><rect x="23.8643%" y="3317" width="0.2499%" height="15" fill="rgb(216,158,49)" fg:x="110933195" fg:w="1161713"/><text x="24.1143%" y="3327.50"></text></g><g><title>malloc (1,161,713 samples, 0.25%)</title><rect x="23.8643%" y="3301" width="0.2499%" height="15" fill="rgb(236,107,19)" fg:x="110933195" fg:w="1161713"/><text x="24.1143%" y="3311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,590,858 samples, 0.77%)</title><rect x="23.5964%" y="3669" width="0.7725%" height="15" fill="rgb(228,185,30)" fg:x="109687494" fg:w="3590858"/><text x="23.8464%" y="3679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,590,858 samples, 0.77%)</title><rect x="23.5964%" y="3653" width="0.7725%" height="15" fill="rgb(246,134,8)" fg:x="109687494" fg:w="3590858"/><text x="23.8464%" y="3663.50"></text></g><g><title>alloc::slice::hack::to_vec (3,590,858 samples, 0.77%)</title><rect x="23.5964%" y="3637" width="0.7725%" height="15" fill="rgb(214,143,50)" fg:x="109687494" fg:w="3590858"/><text x="23.8464%" y="3647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,590,858 samples, 0.77%)</title><rect x="23.5964%" y="3621" width="0.7725%" height="15" fill="rgb(228,75,8)" fg:x="109687494" fg:w="3590858"/><text x="23.8464%" y="3631.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (3,590,858 samples, 0.77%)</title><rect x="23.5964%" y="3605" width="0.7725%" height="15" fill="rgb(207,175,4)" fg:x="109687494" fg:w="3590858"/><text x="23.8464%" y="3615.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,183,444 samples, 0.25%)</title><rect x="24.1143%" y="3589" width="0.2546%" height="15" fill="rgb(205,108,24)" fg:x="112094908" fg:w="1183444"/><text x="24.3643%" y="3599.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,183,444 samples, 0.25%)</title><rect x="24.1143%" y="3573" width="0.2546%" height="15" fill="rgb(244,120,49)" fg:x="112094908" fg:w="1183444"/><text x="24.3643%" y="3583.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,183,444 samples, 0.25%)</title><rect x="24.1143%" y="3557" width="0.2546%" height="15" fill="rgb(223,47,38)" fg:x="112094908" fg:w="1183444"/><text x="24.3643%" y="3567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,769,499 samples, 1.03%)</title><rect x="23.5964%" y="3749" width="1.0260%" height="15" fill="rgb(229,179,11)" fg:x="109687494" fg:w="4769499"/><text x="23.8464%" y="3759.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,769,499 samples, 1.03%)</title><rect x="23.5964%" y="3733" width="1.0260%" height="15" fill="rgb(231,122,1)" fg:x="109687494" fg:w="4769499"/><text x="23.8464%" y="3743.50"></text></g><g><title>alloc::slice::hack::to_vec (4,769,499 samples, 1.03%)</title><rect x="23.5964%" y="3717" width="1.0260%" height="15" fill="rgb(245,119,9)" fg:x="109687494" fg:w="4769499"/><text x="23.8464%" y="3727.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,769,499 samples, 1.03%)</title><rect x="23.5964%" y="3701" width="1.0260%" height="15" fill="rgb(241,163,25)" fg:x="109687494" fg:w="4769499"/><text x="23.8464%" y="3711.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (4,769,499 samples, 1.03%)</title><rect x="23.5964%" y="3685" width="1.0260%" height="15" fill="rgb(217,214,3)" fg:x="109687494" fg:w="4769499"/><text x="23.8464%" y="3695.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,178,641 samples, 0.25%)</title><rect x="24.3688%" y="3669" width="0.2536%" height="15" fill="rgb(240,86,28)" fg:x="113278352" fg:w="1178641"/><text x="24.6188%" y="3679.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,178,641 samples, 0.25%)</title><rect x="24.3688%" y="3653" width="0.2536%" height="15" fill="rgb(215,47,9)" fg:x="113278352" fg:w="1178641"/><text x="24.6188%" y="3663.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,178,641 samples, 0.25%)</title><rect x="24.3688%" y="3637" width="0.2536%" height="15" fill="rgb(252,25,45)" fg:x="113278352" fg:w="1178641"/><text x="24.6188%" y="3647.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,178,641 samples, 0.25%)</title><rect x="24.3688%" y="3621" width="0.2536%" height="15" fill="rgb(251,164,9)" fg:x="113278352" fg:w="1178641"/><text x="24.6188%" y="3631.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,178,641 samples, 0.25%)</title><rect x="24.3688%" y="3605" width="0.2536%" height="15" fill="rgb(233,194,0)" fg:x="113278352" fg:w="1178641"/><text x="24.6188%" y="3615.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,178,641 samples, 0.25%)</title><rect x="24.3688%" y="3589" width="0.2536%" height="15" fill="rgb(249,111,24)" fg:x="113278352" fg:w="1178641"/><text x="24.6188%" y="3599.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,178,641 samples, 0.25%)</title><rect x="24.3688%" y="3573" width="0.2536%" height="15" fill="rgb(250,223,3)" fg:x="113278352" fg:w="1178641"/><text x="24.6188%" y="3583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,178,641 samples, 0.25%)</title><rect x="24.3688%" y="3557" width="0.2536%" height="15" fill="rgb(236,178,37)" fg:x="113278352" fg:w="1178641"/><text x="24.6188%" y="3567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,178,641 samples, 0.25%)</title><rect x="24.3688%" y="3541" width="0.2536%" height="15" fill="rgb(241,158,50)" fg:x="113278352" fg:w="1178641"/><text x="24.6188%" y="3551.50"></text></g><g><title>alloc::alloc::alloc (1,178,641 samples, 0.25%)</title><rect x="24.3688%" y="3525" width="0.2536%" height="15" fill="rgb(213,121,41)" fg:x="113278352" fg:w="1178641"/><text x="24.6188%" y="3535.50"></text></g><g><title>malloc (1,178,641 samples, 0.25%)</title><rect x="24.3688%" y="3509" width="0.2536%" height="15" fill="rgb(240,92,3)" fg:x="113278352" fg:w="1178641"/><text x="24.6188%" y="3519.50"></text></g><g><title>[libc.so.6] (1,178,641 samples, 0.25%)</title><rect x="24.3688%" y="3493" width="0.2536%" height="15" fill="rgb(205,123,3)" fg:x="113278352" fg:w="1178641"/><text x="24.6188%" y="3503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,358,797 samples, 1.80%)</title><rect x="23.0745%" y="3829" width="1.7982%" height="15" fill="rgb(205,97,47)" fg:x="107261623" fg:w="8358797"/><text x="23.3245%" y="3839.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,358,797 samples, 1.80%)</title><rect x="23.0745%" y="3813" width="1.7982%" height="15" fill="rgb(247,152,14)" fg:x="107261623" fg:w="8358797"/><text x="23.3245%" y="3823.50">a..</text></g><g><title>alloc::slice::hack::to_vec (8,358,797 samples, 1.80%)</title><rect x="23.0745%" y="3797" width="1.7982%" height="15" fill="rgb(248,195,53)" fg:x="107261623" fg:w="8358797"/><text x="23.3245%" y="3807.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,358,797 samples, 1.80%)</title><rect x="23.0745%" y="3781" width="1.7982%" height="15" fill="rgb(226,201,16)" fg:x="107261623" fg:w="8358797"/><text x="23.3245%" y="3791.50">&lt;..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (8,358,797 samples, 1.80%)</title><rect x="23.0745%" y="3765" width="1.7982%" height="15" fill="rgb(205,98,0)" fg:x="107261623" fg:w="8358797"/><text x="23.3245%" y="3775.50">&lt;..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,163,427 samples, 0.25%)</title><rect x="24.6224%" y="3749" width="0.2503%" height="15" fill="rgb(214,191,48)" fg:x="114456993" fg:w="1163427"/><text x="24.8724%" y="3759.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,163,427 samples, 0.25%)</title><rect x="24.6224%" y="3733" width="0.2503%" height="15" fill="rgb(237,112,39)" fg:x="114456993" fg:w="1163427"/><text x="24.8724%" y="3743.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,163,427 samples, 0.25%)</title><rect x="24.6224%" y="3717" width="0.2503%" height="15" fill="rgb(247,203,27)" fg:x="114456993" fg:w="1163427"/><text x="24.8724%" y="3727.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,163,427 samples, 0.25%)</title><rect x="24.6224%" y="3701" width="0.2503%" height="15" fill="rgb(235,124,28)" fg:x="114456993" fg:w="1163427"/><text x="24.8724%" y="3711.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,163,427 samples, 0.25%)</title><rect x="24.6224%" y="3685" width="0.2503%" height="15" fill="rgb(208,207,46)" fg:x="114456993" fg:w="1163427"/><text x="24.8724%" y="3695.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,163,427 samples, 0.25%)</title><rect x="24.6224%" y="3669" width="0.2503%" height="15" fill="rgb(234,176,4)" fg:x="114456993" fg:w="1163427"/><text x="24.8724%" y="3679.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,163,427 samples, 0.25%)</title><rect x="24.6224%" y="3653" width="0.2503%" height="15" fill="rgb(230,133,28)" fg:x="114456993" fg:w="1163427"/><text x="24.8724%" y="3663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,163,427 samples, 0.25%)</title><rect x="24.6224%" y="3637" width="0.2503%" height="15" fill="rgb(211,137,40)" fg:x="114456993" fg:w="1163427"/><text x="24.8724%" y="3647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,163,427 samples, 0.25%)</title><rect x="24.6224%" y="3621" width="0.2503%" height="15" fill="rgb(254,35,13)" fg:x="114456993" fg:w="1163427"/><text x="24.8724%" y="3631.50"></text></g><g><title>alloc::alloc::alloc (1,163,427 samples, 0.25%)</title><rect x="24.6224%" y="3605" width="0.2503%" height="15" fill="rgb(225,49,51)" fg:x="114456993" fg:w="1163427"/><text x="24.8724%" y="3615.50"></text></g><g><title>malloc (1,163,427 samples, 0.25%)</title><rect x="24.6224%" y="3589" width="0.2503%" height="15" fill="rgb(251,10,15)" fg:x="114456993" fg:w="1163427"/><text x="24.8724%" y="3599.50"></text></g><g><title>[libc.so.6] (1,163,427 samples, 0.25%)</title><rect x="24.6224%" y="3573" width="0.2503%" height="15" fill="rgb(228,207,15)" fg:x="114456993" fg:w="1163427"/><text x="24.8724%" y="3583.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (11,776,424 samples, 2.53%)</title><rect x="22.5715%" y="3845" width="2.5334%" height="15" fill="rgb(241,99,19)" fg:x="104923399" fg:w="11776424"/><text x="22.8215%" y="3855.50">&lt;c..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,079,403 samples, 0.23%)</title><rect x="24.8727%" y="3829" width="0.2322%" height="15" fill="rgb(207,104,49)" fg:x="115620420" fg:w="1079403"/><text x="25.1227%" y="3839.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,079,403 samples, 0.23%)</title><rect x="24.8727%" y="3813" width="0.2322%" height="15" fill="rgb(234,99,18)" fg:x="115620420" fg:w="1079403"/><text x="25.1227%" y="3823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,079,403 samples, 0.23%)</title><rect x="24.8727%" y="3797" width="0.2322%" height="15" fill="rgb(213,191,49)" fg:x="115620420" fg:w="1079403"/><text x="25.1227%" y="3807.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,079,403 samples, 0.23%)</title><rect x="24.8727%" y="3781" width="0.2322%" height="15" fill="rgb(210,226,19)" fg:x="115620420" fg:w="1079403"/><text x="25.1227%" y="3791.50"></text></g><g><title>alloc::slice::hack::to_vec (1,079,403 samples, 0.23%)</title><rect x="24.8727%" y="3765" width="0.2322%" height="15" fill="rgb(229,97,18)" fg:x="115620420" fg:w="1079403"/><text x="25.1227%" y="3775.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,079,403 samples, 0.23%)</title><rect x="24.8727%" y="3749" width="0.2322%" height="15" fill="rgb(211,167,15)" fg:x="115620420" fg:w="1079403"/><text x="25.1227%" y="3759.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,079,403 samples, 0.23%)</title><rect x="24.8727%" y="3733" width="0.2322%" height="15" fill="rgb(210,169,34)" fg:x="115620420" fg:w="1079403"/><text x="25.1227%" y="3743.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,079,403 samples, 0.23%)</title><rect x="24.8727%" y="3717" width="0.2322%" height="15" fill="rgb(241,121,31)" fg:x="115620420" fg:w="1079403"/><text x="25.1227%" y="3727.50"></text></g><g><title>[libc.so.6] (1,079,403 samples, 0.23%)</title><rect x="24.8727%" y="3701" width="0.2322%" height="15" fill="rgb(232,40,11)" fg:x="115620420" fg:w="1079403"/><text x="25.1227%" y="3711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12,965,025 samples, 2.79%)</title><rect x="22.5715%" y="3909" width="2.7891%" height="15" fill="rgb(205,86,26)" fg:x="104923399" fg:w="12965025"/><text x="22.8215%" y="3919.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12,965,025 samples, 2.79%)</title><rect x="22.5715%" y="3893" width="2.7891%" height="15" fill="rgb(231,126,28)" fg:x="104923399" fg:w="12965025"/><text x="22.8215%" y="3903.50">al..</text></g><g><title>alloc::slice::hack::to_vec (12,965,025 samples, 2.79%)</title><rect x="22.5715%" y="3877" width="2.7891%" height="15" fill="rgb(219,221,18)" fg:x="104923399" fg:w="12965025"/><text x="22.8215%" y="3887.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12,965,025 samples, 2.79%)</title><rect x="22.5715%" y="3861" width="2.7891%" height="15" fill="rgb(211,40,0)" fg:x="104923399" fg:w="12965025"/><text x="22.8215%" y="3871.50">&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,188,601 samples, 0.26%)</title><rect x="25.1049%" y="3845" width="0.2557%" height="15" fill="rgb(239,85,43)" fg:x="116699823" fg:w="1188601"/><text x="25.3549%" y="3855.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,188,601 samples, 0.26%)</title><rect x="25.1049%" y="3829" width="0.2557%" height="15" fill="rgb(231,55,21)" fg:x="116699823" fg:w="1188601"/><text x="25.3549%" y="3839.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,188,601 samples, 0.26%)</title><rect x="25.1049%" y="3813" width="0.2557%" height="15" fill="rgb(225,184,43)" fg:x="116699823" fg:w="1188601"/><text x="25.3549%" y="3823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,188,601 samples, 0.26%)</title><rect x="25.1049%" y="3797" width="0.2557%" height="15" fill="rgb(251,158,41)" fg:x="116699823" fg:w="1188601"/><text x="25.3549%" y="3807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,188,601 samples, 0.26%)</title><rect x="25.1049%" y="3781" width="0.2557%" height="15" fill="rgb(234,159,37)" fg:x="116699823" fg:w="1188601"/><text x="25.3549%" y="3791.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,188,601 samples, 0.26%)</title><rect x="25.1049%" y="3765" width="0.2557%" height="15" fill="rgb(216,204,22)" fg:x="116699823" fg:w="1188601"/><text x="25.3549%" y="3775.50"></text></g><g><title>alloc::alloc::alloc (1,188,601 samples, 0.26%)</title><rect x="25.1049%" y="3749" width="0.2557%" height="15" fill="rgb(214,17,3)" fg:x="116699823" fg:w="1188601"/><text x="25.3549%" y="3759.50"></text></g><g><title>malloc (1,188,601 samples, 0.26%)</title><rect x="25.1049%" y="3733" width="0.2557%" height="15" fill="rgb(212,111,17)" fg:x="116699823" fg:w="1188601"/><text x="25.3549%" y="3743.50"></text></g><g><title>[libc.so.6] (1,188,601 samples, 0.26%)</title><rect x="25.1049%" y="3717" width="0.2557%" height="15" fill="rgb(221,157,24)" fg:x="116699823" fg:w="1188601"/><text x="25.3549%" y="3727.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,232,091 samples, 0.27%)</title><rect x="25.3606%" y="3909" width="0.2651%" height="15" fill="rgb(252,16,13)" fg:x="117888424" fg:w="1232091"/><text x="25.6106%" y="3919.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,232,091 samples, 0.27%)</title><rect x="25.3606%" y="3893" width="0.2651%" height="15" fill="rgb(221,62,2)" fg:x="117888424" fg:w="1232091"/><text x="25.6106%" y="3903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,232,091 samples, 0.27%)</title><rect x="25.3606%" y="3877" width="0.2651%" height="15" fill="rgb(247,87,22)" fg:x="117888424" fg:w="1232091"/><text x="25.6106%" y="3887.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,232,091 samples, 0.27%)</title><rect x="25.3606%" y="3861" width="0.2651%" height="15" fill="rgb(215,73,9)" fg:x="117888424" fg:w="1232091"/><text x="25.6106%" y="3871.50"></text></g><g><title>alloc::slice::hack::to_vec (1,232,091 samples, 0.27%)</title><rect x="25.3606%" y="3845" width="0.2651%" height="15" fill="rgb(207,175,33)" fg:x="117888424" fg:w="1232091"/><text x="25.6106%" y="3855.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,232,091 samples, 0.27%)</title><rect x="25.3606%" y="3829" width="0.2651%" height="15" fill="rgb(243,129,54)" fg:x="117888424" fg:w="1232091"/><text x="25.6106%" y="3839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,232,091 samples, 0.27%)</title><rect x="25.3606%" y="3813" width="0.2651%" height="15" fill="rgb(227,119,45)" fg:x="117888424" fg:w="1232091"/><text x="25.6106%" y="3823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,232,091 samples, 0.27%)</title><rect x="25.3606%" y="3797" width="0.2651%" height="15" fill="rgb(205,109,36)" fg:x="117888424" fg:w="1232091"/><text x="25.6106%" y="3807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,232,091 samples, 0.27%)</title><rect x="25.3606%" y="3781" width="0.2651%" height="15" fill="rgb(205,6,39)" fg:x="117888424" fg:w="1232091"/><text x="25.6106%" y="3791.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,232,091 samples, 0.27%)</title><rect x="25.3606%" y="3765" width="0.2651%" height="15" fill="rgb(221,32,16)" fg:x="117888424" fg:w="1232091"/><text x="25.6106%" y="3775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,232,091 samples, 0.27%)</title><rect x="25.3606%" y="3749" width="0.2651%" height="15" fill="rgb(228,144,50)" fg:x="117888424" fg:w="1232091"/><text x="25.6106%" y="3759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,232,091 samples, 0.27%)</title><rect x="25.3606%" y="3733" width="0.2651%" height="15" fill="rgb(229,201,53)" fg:x="117888424" fg:w="1232091"/><text x="25.6106%" y="3743.50"></text></g><g><title>alloc::alloc::alloc (1,232,091 samples, 0.27%)</title><rect x="25.3606%" y="3717" width="0.2651%" height="15" fill="rgb(249,153,27)" fg:x="117888424" fg:w="1232091"/><text x="25.6106%" y="3727.50"></text></g><g><title>malloc (1,232,091 samples, 0.27%)</title><rect x="25.3606%" y="3701" width="0.2651%" height="15" fill="rgb(227,106,25)" fg:x="117888424" fg:w="1232091"/><text x="25.6106%" y="3711.50"></text></g><g><title>[libc.so.6] (1,232,091 samples, 0.27%)</title><rect x="25.3606%" y="3685" width="0.2651%" height="15" fill="rgb(230,65,29)" fg:x="117888424" fg:w="1232091"/><text x="25.6106%" y="3695.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,198,918 samples, 0.26%)</title><rect x="25.6256%" y="3909" width="0.2579%" height="15" fill="rgb(221,57,46)" fg:x="119120515" fg:w="1198918"/><text x="25.8756%" y="3919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,198,918 samples, 0.26%)</title><rect x="25.6256%" y="3893" width="0.2579%" height="15" fill="rgb(229,161,17)" fg:x="119120515" fg:w="1198918"/><text x="25.8756%" y="3903.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,198,918 samples, 0.26%)</title><rect x="25.6256%" y="3877" width="0.2579%" height="15" fill="rgb(222,213,11)" fg:x="119120515" fg:w="1198918"/><text x="25.8756%" y="3887.50"></text></g><g><title>alloc::slice::hack::to_vec (1,198,918 samples, 0.26%)</title><rect x="25.6256%" y="3861" width="0.2579%" height="15" fill="rgb(235,35,13)" fg:x="119120515" fg:w="1198918"/><text x="25.8756%" y="3871.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,198,918 samples, 0.26%)</title><rect x="25.6256%" y="3845" width="0.2579%" height="15" fill="rgb(233,158,34)" fg:x="119120515" fg:w="1198918"/><text x="25.8756%" y="3855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,198,918 samples, 0.26%)</title><rect x="25.6256%" y="3829" width="0.2579%" height="15" fill="rgb(215,151,48)" fg:x="119120515" fg:w="1198918"/><text x="25.8756%" y="3839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,198,918 samples, 0.26%)</title><rect x="25.6256%" y="3813" width="0.2579%" height="15" fill="rgb(229,84,14)" fg:x="119120515" fg:w="1198918"/><text x="25.8756%" y="3823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,198,918 samples, 0.26%)</title><rect x="25.6256%" y="3797" width="0.2579%" height="15" fill="rgb(229,68,14)" fg:x="119120515" fg:w="1198918"/><text x="25.8756%" y="3807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,198,918 samples, 0.26%)</title><rect x="25.6256%" y="3781" width="0.2579%" height="15" fill="rgb(243,106,26)" fg:x="119120515" fg:w="1198918"/><text x="25.8756%" y="3791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,198,918 samples, 0.26%)</title><rect x="25.6256%" y="3765" width="0.2579%" height="15" fill="rgb(206,45,38)" fg:x="119120515" fg:w="1198918"/><text x="25.8756%" y="3775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,198,918 samples, 0.26%)</title><rect x="25.6256%" y="3749" width="0.2579%" height="15" fill="rgb(226,6,15)" fg:x="119120515" fg:w="1198918"/><text x="25.8756%" y="3759.50"></text></g><g><title>alloc::alloc::alloc (1,198,918 samples, 0.26%)</title><rect x="25.6256%" y="3733" width="0.2579%" height="15" fill="rgb(232,22,54)" fg:x="119120515" fg:w="1198918"/><text x="25.8756%" y="3743.50"></text></g><g><title>malloc (1,198,918 samples, 0.26%)</title><rect x="25.6256%" y="3717" width="0.2579%" height="15" fill="rgb(229,222,32)" fg:x="119120515" fg:w="1198918"/><text x="25.8756%" y="3727.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,238,714 samples, 0.27%)</title><rect x="26.1218%" y="3845" width="0.2665%" height="15" fill="rgb(228,62,29)" fg:x="121427030" fg:w="1238714"/><text x="26.3718%" y="3855.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,238,714 samples, 0.27%)</title><rect x="26.1218%" y="3829" width="0.2665%" height="15" fill="rgb(251,103,34)" fg:x="121427030" fg:w="1238714"/><text x="26.3718%" y="3839.50"></text></g><g><title>core::clone::Clone::clone (1,238,714 samples, 0.27%)</title><rect x="26.1218%" y="3813" width="0.2665%" height="15" fill="rgb(233,12,30)" fg:x="121427030" fg:w="1238714"/><text x="26.3718%" y="3823.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,238,714 samples, 0.27%)</title><rect x="26.1218%" y="3797" width="0.2665%" height="15" fill="rgb(238,52,0)" fg:x="121427030" fg:w="1238714"/><text x="26.3718%" y="3807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,238,714 samples, 0.27%)</title><rect x="26.1218%" y="3781" width="0.2665%" height="15" fill="rgb(223,98,5)" fg:x="121427030" fg:w="1238714"/><text x="26.3718%" y="3791.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,238,714 samples, 0.27%)</title><rect x="26.1218%" y="3765" width="0.2665%" height="15" fill="rgb(228,75,37)" fg:x="121427030" fg:w="1238714"/><text x="26.3718%" y="3775.50"></text></g><g><title>alloc::slice::hack::to_vec (1,238,714 samples, 0.27%)</title><rect x="26.1218%" y="3749" width="0.2665%" height="15" fill="rgb(205,115,49)" fg:x="121427030" fg:w="1238714"/><text x="26.3718%" y="3759.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,238,714 samples, 0.27%)</title><rect x="26.1218%" y="3733" width="0.2665%" height="15" fill="rgb(250,154,43)" fg:x="121427030" fg:w="1238714"/><text x="26.3718%" y="3743.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,238,714 samples, 0.27%)</title><rect x="26.1218%" y="3717" width="0.2665%" height="15" fill="rgb(226,43,29)" fg:x="121427030" fg:w="1238714"/><text x="26.3718%" y="3727.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,238,714 samples, 0.27%)</title><rect x="26.1218%" y="3701" width="0.2665%" height="15" fill="rgb(249,228,39)" fg:x="121427030" fg:w="1238714"/><text x="26.3718%" y="3711.50"></text></g><g><title>[libc.so.6] (1,238,714 samples, 0.27%)</title><rect x="26.1218%" y="3685" width="0.2665%" height="15" fill="rgb(216,79,43)" fg:x="121427030" fg:w="1238714"/><text x="26.3718%" y="3695.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (20,138,546 samples, 4.33%)</title><rect x="22.3133%" y="3925" width="4.3323%" height="15" fill="rgb(228,95,12)" fg:x="103723161" fg:w="20138546"/><text x="22.5633%" y="3935.50">&lt;css_..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,542,274 samples, 0.76%)</title><rect x="25.8836%" y="3909" width="0.7620%" height="15" fill="rgb(249,221,15)" fg:x="120319433" fg:w="3542274"/><text x="26.1336%" y="3919.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,542,274 samples, 0.76%)</title><rect x="25.8836%" y="3893" width="0.7620%" height="15" fill="rgb(233,34,13)" fg:x="120319433" fg:w="3542274"/><text x="26.1336%" y="3903.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,542,274 samples, 0.76%)</title><rect x="25.8836%" y="3877" width="0.7620%" height="15" fill="rgb(214,103,39)" fg:x="120319433" fg:w="3542274"/><text x="26.1336%" y="3887.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,434,677 samples, 0.52%)</title><rect x="26.1218%" y="3861" width="0.5238%" height="15" fill="rgb(251,126,39)" fg:x="121427030" fg:w="2434677"/><text x="26.3718%" y="3871.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,195,963 samples, 0.26%)</title><rect x="26.3883%" y="3845" width="0.2573%" height="15" fill="rgb(214,216,36)" fg:x="122665744" fg:w="1195963"/><text x="26.6383%" y="3855.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,195,963 samples, 0.26%)</title><rect x="26.3883%" y="3829" width="0.2573%" height="15" fill="rgb(220,221,8)" fg:x="122665744" fg:w="1195963"/><text x="26.6383%" y="3839.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,195,963 samples, 0.26%)</title><rect x="26.3883%" y="3813" width="0.2573%" height="15" fill="rgb(240,216,3)" fg:x="122665744" fg:w="1195963"/><text x="26.6383%" y="3823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,195,963 samples, 0.26%)</title><rect x="26.3883%" y="3797" width="0.2573%" height="15" fill="rgb(232,218,17)" fg:x="122665744" fg:w="1195963"/><text x="26.6383%" y="3807.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,195,963 samples, 0.26%)</title><rect x="26.3883%" y="3781" width="0.2573%" height="15" fill="rgb(229,163,45)" fg:x="122665744" fg:w="1195963"/><text x="26.6383%" y="3791.50"></text></g><g><title>alloc::alloc::alloc (1,195,963 samples, 0.26%)</title><rect x="26.3883%" y="3765" width="0.2573%" height="15" fill="rgb(231,110,42)" fg:x="122665744" fg:w="1195963"/><text x="26.6383%" y="3775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21,411,112 samples, 4.61%)</title><rect x="22.3133%" y="3989" width="4.6060%" height="15" fill="rgb(208,170,48)" fg:x="103723161" fg:w="21411112"/><text x="22.5633%" y="3999.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21,411,112 samples, 4.61%)</title><rect x="22.3133%" y="3973" width="4.6060%" height="15" fill="rgb(239,116,25)" fg:x="103723161" fg:w="21411112"/><text x="22.5633%" y="3983.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (21,411,112 samples, 4.61%)</title><rect x="22.3133%" y="3957" width="4.6060%" height="15" fill="rgb(219,200,50)" fg:x="103723161" fg:w="21411112"/><text x="22.5633%" y="3967.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21,411,112 samples, 4.61%)</title><rect x="22.3133%" y="3941" width="4.6060%" height="15" fill="rgb(245,200,0)" fg:x="103723161" fg:w="21411112"/><text x="22.5633%" y="3951.50">&lt;T as..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,272,566 samples, 0.27%)</title><rect x="26.6456%" y="3925" width="0.2738%" height="15" fill="rgb(245,119,33)" fg:x="123861707" fg:w="1272566"/><text x="26.8956%" y="3935.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,220,385 samples, 0.26%)</title><rect x="26.9193%" y="3989" width="0.2625%" height="15" fill="rgb(231,125,12)" fg:x="125134273" fg:w="1220385"/><text x="27.1693%" y="3999.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,232,185 samples, 0.27%)</title><rect x="27.1819%" y="3989" width="0.2651%" height="15" fill="rgb(216,96,41)" fg:x="126354658" fg:w="1232185"/><text x="27.4319%" y="3999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,232,185 samples, 0.27%)</title><rect x="27.1819%" y="3973" width="0.2651%" height="15" fill="rgb(248,43,45)" fg:x="126354658" fg:w="1232185"/><text x="27.4319%" y="3983.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,232,185 samples, 0.27%)</title><rect x="27.1819%" y="3957" width="0.2651%" height="15" fill="rgb(217,222,7)" fg:x="126354658" fg:w="1232185"/><text x="27.4319%" y="3967.50"></text></g><g><title>alloc::slice::hack::to_vec (1,232,185 samples, 0.27%)</title><rect x="27.1819%" y="3941" width="0.2651%" height="15" fill="rgb(233,28,6)" fg:x="126354658" fg:w="1232185"/><text x="27.4319%" y="3951.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,232,185 samples, 0.27%)</title><rect x="27.1819%" y="3925" width="0.2651%" height="15" fill="rgb(231,218,15)" fg:x="126354658" fg:w="1232185"/><text x="27.4319%" y="3935.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,232,185 samples, 0.27%)</title><rect x="27.1819%" y="3909" width="0.2651%" height="15" fill="rgb(226,171,48)" fg:x="126354658" fg:w="1232185"/><text x="27.4319%" y="3919.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,232,185 samples, 0.27%)</title><rect x="27.1819%" y="3893" width="0.2651%" height="15" fill="rgb(235,201,9)" fg:x="126354658" fg:w="1232185"/><text x="27.4319%" y="3903.50"></text></g><g><title>[libc.so.6] (1,232,185 samples, 0.27%)</title><rect x="27.1819%" y="3877" width="0.2651%" height="15" fill="rgb(217,80,15)" fg:x="126354658" fg:w="1232185"/><text x="27.4319%" y="3887.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,584,474 samples, 0.77%)</title><rect x="27.4469%" y="3797" width="0.7711%" height="15" fill="rgb(219,152,8)" fg:x="127586843" fg:w="3584474"/><text x="27.6969%" y="3807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,584,474 samples, 0.77%)</title><rect x="27.4469%" y="3781" width="0.7711%" height="15" fill="rgb(243,107,38)" fg:x="127586843" fg:w="3584474"/><text x="27.6969%" y="3791.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,584,474 samples, 0.77%)</title><rect x="27.4469%" y="3765" width="0.7711%" height="15" fill="rgb(231,17,5)" fg:x="127586843" fg:w="3584474"/><text x="27.6969%" y="3775.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,584,474 samples, 0.77%)</title><rect x="27.4469%" y="3749" width="0.7711%" height="15" fill="rgb(209,25,54)" fg:x="127586843" fg:w="3584474"/><text x="27.6969%" y="3759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,584,474 samples, 0.77%)</title><rect x="27.4469%" y="3733" width="0.7711%" height="15" fill="rgb(219,0,2)" fg:x="127586843" fg:w="3584474"/><text x="27.6969%" y="3743.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,584,474 samples, 0.77%)</title><rect x="27.4469%" y="3717" width="0.7711%" height="15" fill="rgb(246,9,5)" fg:x="127586843" fg:w="3584474"/><text x="27.6969%" y="3727.50"></text></g><g><title>alloc::alloc::alloc (3,584,474 samples, 0.77%)</title><rect x="27.4469%" y="3701" width="0.7711%" height="15" fill="rgb(226,159,4)" fg:x="127586843" fg:w="3584474"/><text x="27.6969%" y="3711.50"></text></g><g><title>malloc (3,584,474 samples, 0.77%)</title><rect x="27.4469%" y="3685" width="0.7711%" height="15" fill="rgb(219,175,34)" fg:x="127586843" fg:w="3584474"/><text x="27.6969%" y="3695.50"></text></g><g><title>[libc.so.6] (2,406,547 samples, 0.52%)</title><rect x="27.7003%" y="3669" width="0.5177%" height="15" fill="rgb(236,10,46)" fg:x="128764770" fg:w="2406547"/><text x="27.9503%" y="3679.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (4,641,436 samples, 1.00%)</title><rect x="27.4469%" y="3925" width="0.9985%" height="15" fill="rgb(240,211,16)" fg:x="127586843" fg:w="4641436"/><text x="27.6969%" y="3935.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (4,641,436 samples, 1.00%)</title><rect x="27.4469%" y="3909" width="0.9985%" height="15" fill="rgb(205,3,43)" fg:x="127586843" fg:w="4641436"/><text x="27.6969%" y="3919.50"></text></g><g><title>core::clone::Clone::clone (4,641,436 samples, 1.00%)</title><rect x="27.4469%" y="3893" width="0.9985%" height="15" fill="rgb(245,7,22)" fg:x="127586843" fg:w="4641436"/><text x="27.6969%" y="3903.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4,641,436 samples, 1.00%)</title><rect x="27.4469%" y="3877" width="0.9985%" height="15" fill="rgb(239,132,32)" fg:x="127586843" fg:w="4641436"/><text x="27.6969%" y="3887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,641,436 samples, 1.00%)</title><rect x="27.4469%" y="3861" width="0.9985%" height="15" fill="rgb(228,202,34)" fg:x="127586843" fg:w="4641436"/><text x="27.6969%" y="3871.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,641,436 samples, 1.00%)</title><rect x="27.4469%" y="3845" width="0.9985%" height="15" fill="rgb(254,200,22)" fg:x="127586843" fg:w="4641436"/><text x="27.6969%" y="3855.50"></text></g><g><title>alloc::slice::hack::to_vec (4,641,436 samples, 1.00%)</title><rect x="27.4469%" y="3829" width="0.9985%" height="15" fill="rgb(219,10,39)" fg:x="127586843" fg:w="4641436"/><text x="27.6969%" y="3839.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,641,436 samples, 1.00%)</title><rect x="27.4469%" y="3813" width="0.9985%" height="15" fill="rgb(226,210,39)" fg:x="127586843" fg:w="4641436"/><text x="27.6969%" y="3823.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,056,962 samples, 0.23%)</title><rect x="28.2180%" y="3797" width="0.2274%" height="15" fill="rgb(208,219,16)" fg:x="131171317" fg:w="1056962"/><text x="28.4680%" y="3807.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,056,962 samples, 0.23%)</title><rect x="28.2180%" y="3781" width="0.2274%" height="15" fill="rgb(216,158,51)" fg:x="131171317" fg:w="1056962"/><text x="28.4680%" y="3791.50"></text></g><g><title>[libc.so.6] (1,056,962 samples, 0.23%)</title><rect x="28.2180%" y="3765" width="0.2274%" height="15" fill="rgb(233,14,44)" fg:x="131171317" fg:w="1056962"/><text x="28.4680%" y="3775.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (30,902,265 samples, 6.65%)</title><rect x="22.0591%" y="4005" width="6.6478%" height="15" fill="rgb(237,97,39)" fg:x="102541467" fg:w="30902265"/><text x="22.3091%" y="4015.50">&lt;css_bitv..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (5,856,889 samples, 1.26%)</title><rect x="27.4469%" y="3989" width="1.2600%" height="15" fill="rgb(218,198,43)" fg:x="127586843" fg:w="5856889"/><text x="27.6969%" y="3999.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (5,856,889 samples, 1.26%)</title><rect x="27.4469%" y="3973" width="1.2600%" height="15" fill="rgb(231,104,20)" fg:x="127586843" fg:w="5856889"/><text x="27.6969%" y="3983.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5,856,889 samples, 1.26%)</title><rect x="27.4469%" y="3957" width="1.2600%" height="15" fill="rgb(254,36,13)" fg:x="127586843" fg:w="5856889"/><text x="27.6969%" y="3967.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,856,889 samples, 1.26%)</title><rect x="27.4469%" y="3941" width="1.2600%" height="15" fill="rgb(248,14,50)" fg:x="127586843" fg:w="5856889"/><text x="27.6969%" y="3951.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,215,453 samples, 0.26%)</title><rect x="28.4454%" y="3925" width="0.2615%" height="15" fill="rgb(217,107,29)" fg:x="132228279" fg:w="1215453"/><text x="28.6954%" y="3935.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,215,453 samples, 0.26%)</title><rect x="28.4454%" y="3909" width="0.2615%" height="15" fill="rgb(251,169,33)" fg:x="132228279" fg:w="1215453"/><text x="28.6954%" y="3919.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,215,453 samples, 0.26%)</title><rect x="28.4454%" y="3893" width="0.2615%" height="15" fill="rgb(217,108,32)" fg:x="132228279" fg:w="1215453"/><text x="28.6954%" y="3903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,215,453 samples, 0.26%)</title><rect x="28.4454%" y="3877" width="0.2615%" height="15" fill="rgb(219,66,42)" fg:x="132228279" fg:w="1215453"/><text x="28.6954%" y="3887.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,215,453 samples, 0.26%)</title><rect x="28.4454%" y="3861" width="0.2615%" height="15" fill="rgb(206,180,7)" fg:x="132228279" fg:w="1215453"/><text x="28.6954%" y="3871.50"></text></g><g><title>alloc::alloc::alloc (1,215,453 samples, 0.26%)</title><rect x="28.4454%" y="3845" width="0.2615%" height="15" fill="rgb(208,226,31)" fg:x="132228279" fg:w="1215453"/><text x="28.6954%" y="3855.50"></text></g><g><title>malloc (1,215,453 samples, 0.26%)</title><rect x="28.4454%" y="3829" width="0.2615%" height="15" fill="rgb(218,26,49)" fg:x="132228279" fg:w="1215453"/><text x="28.6954%" y="3839.50"></text></g><g><title>[libc.so.6] (1,215,453 samples, 0.26%)</title><rect x="28.4454%" y="3813" width="0.2615%" height="15" fill="rgb(233,197,48)" fg:x="132228279" fg:w="1215453"/><text x="28.6954%" y="3823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31,939,825 samples, 6.87%)</title><rect x="22.0591%" y="4069" width="6.8710%" height="15" fill="rgb(252,181,51)" fg:x="102541467" fg:w="31939825"/><text x="22.3091%" y="4079.50">&lt;alloc::v..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31,939,825 samples, 6.87%)</title><rect x="22.0591%" y="4053" width="6.8710%" height="15" fill="rgb(253,90,19)" fg:x="102541467" fg:w="31939825"/><text x="22.3091%" y="4063.50">alloc::sl..</text></g><g><title>alloc::slice::hack::to_vec (31,939,825 samples, 6.87%)</title><rect x="22.0591%" y="4037" width="6.8710%" height="15" fill="rgb(215,171,30)" fg:x="102541467" fg:w="31939825"/><text x="22.3091%" y="4047.50">alloc::sl..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31,939,825 samples, 6.87%)</title><rect x="22.0591%" y="4021" width="6.8710%" height="15" fill="rgb(214,222,9)" fg:x="102541467" fg:w="31939825"/><text x="22.3091%" y="4031.50">&lt;T as all..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,037,560 samples, 0.22%)</title><rect x="28.7069%" y="4005" width="0.2232%" height="15" fill="rgb(223,3,22)" fg:x="133443732" fg:w="1037560"/><text x="28.9569%" y="4015.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,203,661 samples, 0.26%)</title><rect x="28.9301%" y="4069" width="0.2589%" height="15" fill="rgb(225,196,46)" fg:x="134481292" fg:w="1203661"/><text x="29.1801%" y="4079.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,203,661 samples, 0.26%)</title><rect x="28.9301%" y="4053" width="0.2589%" height="15" fill="rgb(209,110,37)" fg:x="134481292" fg:w="1203661"/><text x="29.1801%" y="4063.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,203,661 samples, 0.26%)</title><rect x="28.9301%" y="4037" width="0.2589%" height="15" fill="rgb(249,89,12)" fg:x="134481292" fg:w="1203661"/><text x="29.1801%" y="4047.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,203,661 samples, 0.26%)</title><rect x="28.9301%" y="4021" width="0.2589%" height="15" fill="rgb(226,27,33)" fg:x="134481292" fg:w="1203661"/><text x="29.1801%" y="4031.50"></text></g><g><title>alloc::slice::hack::to_vec (1,203,661 samples, 0.26%)</title><rect x="28.9301%" y="4005" width="0.2589%" height="15" fill="rgb(213,82,22)" fg:x="134481292" fg:w="1203661"/><text x="29.1801%" y="4015.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,203,661 samples, 0.26%)</title><rect x="28.9301%" y="3989" width="0.2589%" height="15" fill="rgb(248,140,0)" fg:x="134481292" fg:w="1203661"/><text x="29.1801%" y="3999.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,203,661 samples, 0.26%)</title><rect x="28.9301%" y="3973" width="0.2589%" height="15" fill="rgb(228,106,3)" fg:x="134481292" fg:w="1203661"/><text x="29.1801%" y="3983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,203,661 samples, 0.26%)</title><rect x="28.9301%" y="3957" width="0.2589%" height="15" fill="rgb(209,23,37)" fg:x="134481292" fg:w="1203661"/><text x="29.1801%" y="3967.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,203,661 samples, 0.26%)</title><rect x="28.9301%" y="3941" width="0.2589%" height="15" fill="rgb(241,93,50)" fg:x="134481292" fg:w="1203661"/><text x="29.1801%" y="3951.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,203,661 samples, 0.26%)</title><rect x="28.9301%" y="3925" width="0.2589%" height="15" fill="rgb(253,46,43)" fg:x="134481292" fg:w="1203661"/><text x="29.1801%" y="3935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,203,661 samples, 0.26%)</title><rect x="28.9301%" y="3909" width="0.2589%" height="15" fill="rgb(226,206,43)" fg:x="134481292" fg:w="1203661"/><text x="29.1801%" y="3919.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,203,661 samples, 0.26%)</title><rect x="28.9301%" y="3893" width="0.2589%" height="15" fill="rgb(217,54,7)" fg:x="134481292" fg:w="1203661"/><text x="29.1801%" y="3903.50"></text></g><g><title>alloc::alloc::alloc (1,203,661 samples, 0.26%)</title><rect x="28.9301%" y="3877" width="0.2589%" height="15" fill="rgb(223,5,52)" fg:x="134481292" fg:w="1203661"/><text x="29.1801%" y="3887.50"></text></g><g><title>malloc (1,203,661 samples, 0.26%)</title><rect x="28.9301%" y="3861" width="0.2589%" height="15" fill="rgb(206,52,46)" fg:x="134481292" fg:w="1203661"/><text x="29.1801%" y="3871.50"></text></g><g><title>[libc.so.6] (1,203,661 samples, 0.26%)</title><rect x="28.9301%" y="3845" width="0.2589%" height="15" fill="rgb(253,136,11)" fg:x="134481292" fg:w="1203661"/><text x="29.1801%" y="3855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (36,560,770 samples, 7.87%)</title><rect x="22.0591%" y="4149" width="7.8651%" height="15" fill="rgb(208,106,33)" fg:x="102541467" fg:w="36560770"/><text x="22.3091%" y="4159.50">&lt;alloc::vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (36,560,770 samples, 7.87%)</title><rect x="22.0591%" y="4133" width="7.8651%" height="15" fill="rgb(206,54,4)" fg:x="102541467" fg:w="36560770"/><text x="22.3091%" y="4143.50">alloc::slic..</text></g><g><title>alloc::slice::hack::to_vec (36,560,770 samples, 7.87%)</title><rect x="22.0591%" y="4117" width="7.8651%" height="15" fill="rgb(213,3,15)" fg:x="102541467" fg:w="36560770"/><text x="22.3091%" y="4127.50">alloc::slic..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (36,560,770 samples, 7.87%)</title><rect x="22.0591%" y="4101" width="7.8651%" height="15" fill="rgb(252,211,39)" fg:x="102541467" fg:w="36560770"/><text x="22.3091%" y="4111.50">&lt;T as alloc..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (36,560,770 samples, 7.87%)</title><rect x="22.0591%" y="4085" width="7.8651%" height="15" fill="rgb(223,6,36)" fg:x="102541467" fg:w="36560770"/><text x="22.3091%" y="4095.50">&lt;css_bitvec..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,417,284 samples, 0.74%)</title><rect x="29.1890%" y="4069" width="0.7351%" height="15" fill="rgb(252,169,45)" fg:x="135684953" fg:w="3417284"/><text x="29.4390%" y="4079.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,417,284 samples, 0.74%)</title><rect x="29.1890%" y="4053" width="0.7351%" height="15" fill="rgb(212,48,26)" fg:x="135684953" fg:w="3417284"/><text x="29.4390%" y="4063.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,417,284 samples, 0.74%)</title><rect x="29.1890%" y="4037" width="0.7351%" height="15" fill="rgb(251,102,48)" fg:x="135684953" fg:w="3417284"/><text x="29.4390%" y="4047.50"></text></g><g><title>alloc::slice::hack::to_vec (3,417,284 samples, 0.74%)</title><rect x="29.1890%" y="4021" width="0.7351%" height="15" fill="rgb(243,208,16)" fg:x="135684953" fg:w="3417284"/><text x="29.4390%" y="4031.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,417,284 samples, 0.74%)</title><rect x="29.1890%" y="4005" width="0.7351%" height="15" fill="rgb(219,96,24)" fg:x="135684953" fg:w="3417284"/><text x="29.4390%" y="4015.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,417,284 samples, 0.74%)</title><rect x="29.1890%" y="3989" width="0.7351%" height="15" fill="rgb(219,33,29)" fg:x="135684953" fg:w="3417284"/><text x="29.4390%" y="3999.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,417,284 samples, 0.74%)</title><rect x="29.1890%" y="3973" width="0.7351%" height="15" fill="rgb(223,176,5)" fg:x="135684953" fg:w="3417284"/><text x="29.4390%" y="3983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,417,284 samples, 0.74%)</title><rect x="29.1890%" y="3957" width="0.7351%" height="15" fill="rgb(228,140,14)" fg:x="135684953" fg:w="3417284"/><text x="29.4390%" y="3967.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,417,284 samples, 0.74%)</title><rect x="29.1890%" y="3941" width="0.7351%" height="15" fill="rgb(217,179,31)" fg:x="135684953" fg:w="3417284"/><text x="29.4390%" y="3951.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,417,284 samples, 0.74%)</title><rect x="29.1890%" y="3925" width="0.7351%" height="15" fill="rgb(230,9,30)" fg:x="135684953" fg:w="3417284"/><text x="29.4390%" y="3935.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,417,284 samples, 0.74%)</title><rect x="29.1890%" y="3909" width="0.7351%" height="15" fill="rgb(230,136,20)" fg:x="135684953" fg:w="3417284"/><text x="29.4390%" y="3919.50"></text></g><g><title>alloc::alloc::alloc (3,417,284 samples, 0.74%)</title><rect x="29.1890%" y="3893" width="0.7351%" height="15" fill="rgb(215,210,22)" fg:x="135684953" fg:w="3417284"/><text x="29.4390%" y="3903.50"></text></g><g><title>malloc (3,417,284 samples, 0.74%)</title><rect x="29.1890%" y="3877" width="0.7351%" height="15" fill="rgb(218,43,5)" fg:x="135684953" fg:w="3417284"/><text x="29.4390%" y="3887.50"></text></g><g><title>[libc.so.6] (3,417,284 samples, 0.74%)</title><rect x="29.1890%" y="3861" width="0.7351%" height="15" fill="rgb(216,11,5)" fg:x="135684953" fg:w="3417284"/><text x="29.4390%" y="3871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (37,062,274 samples, 7.97%)</title><rect x="22.0591%" y="4389" width="7.9730%" height="15" fill="rgb(209,82,29)" fg:x="102541467" fg:w="37062274"/><text x="22.3091%" y="4399.50">&lt;alloc::vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37,062,274 samples, 7.97%)</title><rect x="22.0591%" y="4373" width="7.9730%" height="15" fill="rgb(244,115,12)" fg:x="102541467" fg:w="37062274"/><text x="22.3091%" y="4383.50">alloc::slic..</text></g><g><title>alloc::slice::hack::to_vec (37,062,274 samples, 7.97%)</title><rect x="22.0591%" y="4357" width="7.9730%" height="15" fill="rgb(222,82,18)" fg:x="102541467" fg:w="37062274"/><text x="22.3091%" y="4367.50">alloc::slic..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37,062,274 samples, 7.97%)</title><rect x="22.0591%" y="4341" width="7.9730%" height="15" fill="rgb(249,227,8)" fg:x="102541467" fg:w="37062274"/><text x="22.3091%" y="4351.50">&lt;T as alloc..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (37,062,274 samples, 7.97%)</title><rect x="22.0591%" y="4325" width="7.9730%" height="15" fill="rgb(253,141,45)" fg:x="102541467" fg:w="37062274"/><text x="22.3091%" y="4335.50">&lt;css_bitvec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (37,062,274 samples, 7.97%)</title><rect x="22.0591%" y="4309" width="7.9730%" height="15" fill="rgb(234,184,4)" fg:x="102541467" fg:w="37062274"/><text x="22.3091%" y="4319.50">&lt;alloc::vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37,062,274 samples, 7.97%)</title><rect x="22.0591%" y="4293" width="7.9730%" height="15" fill="rgb(218,194,23)" fg:x="102541467" fg:w="37062274"/><text x="22.3091%" y="4303.50">alloc::slic..</text></g><g><title>alloc::slice::hack::to_vec (37,062,274 samples, 7.97%)</title><rect x="22.0591%" y="4277" width="7.9730%" height="15" fill="rgb(235,66,41)" fg:x="102541467" fg:w="37062274"/><text x="22.3091%" y="4287.50">alloc::slic..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37,062,274 samples, 7.97%)</title><rect x="22.0591%" y="4261" width="7.9730%" height="15" fill="rgb(245,217,1)" fg:x="102541467" fg:w="37062274"/><text x="22.3091%" y="4271.50">&lt;T as alloc..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (37,062,274 samples, 7.97%)</title><rect x="22.0591%" y="4245" width="7.9730%" height="15" fill="rgb(229,91,1)" fg:x="102541467" fg:w="37062274"/><text x="22.3091%" y="4255.50">&lt;css_bitvec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (37,062,274 samples, 7.97%)</title><rect x="22.0591%" y="4229" width="7.9730%" height="15" fill="rgb(207,101,30)" fg:x="102541467" fg:w="37062274"/><text x="22.3091%" y="4239.50">&lt;alloc::vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37,062,274 samples, 7.97%)</title><rect x="22.0591%" y="4213" width="7.9730%" height="15" fill="rgb(223,82,49)" fg:x="102541467" fg:w="37062274"/><text x="22.3091%" y="4223.50">alloc::slic..</text></g><g><title>alloc::slice::hack::to_vec (37,062,274 samples, 7.97%)</title><rect x="22.0591%" y="4197" width="7.9730%" height="15" fill="rgb(218,167,17)" fg:x="102541467" fg:w="37062274"/><text x="22.3091%" y="4207.50">alloc::slic..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37,062,274 samples, 7.97%)</title><rect x="22.0591%" y="4181" width="7.9730%" height="15" fill="rgb(208,103,14)" fg:x="102541467" fg:w="37062274"/><text x="22.3091%" y="4191.50">&lt;T as alloc..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (37,062,274 samples, 7.97%)</title><rect x="22.0591%" y="4165" width="7.9730%" height="15" fill="rgb(238,20,8)" fg:x="102541467" fg:w="37062274"/><text x="22.3091%" y="4175.50">&lt;css_bitvec..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (501,504 samples, 0.11%)</title><rect x="29.9242%" y="4149" width="0.1079%" height="15" fill="rgb(218,80,54)" fg:x="139102237" fg:w="501504"/><text x="30.1742%" y="4159.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (38,249,306 samples, 8.23%)</title><rect x="22.0591%" y="4565" width="8.2283%" height="15" fill="rgb(240,144,17)" fg:x="102541467" fg:w="38249306"/><text x="22.3091%" y="4575.50">&lt;css_bitvec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (38,249,306 samples, 8.23%)</title><rect x="22.0591%" y="4549" width="8.2283%" height="15" fill="rgb(245,27,50)" fg:x="102541467" fg:w="38249306"/><text x="22.3091%" y="4559.50">&lt;alloc::vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (38,249,306 samples, 8.23%)</title><rect x="22.0591%" y="4533" width="8.2283%" height="15" fill="rgb(251,51,7)" fg:x="102541467" fg:w="38249306"/><text x="22.3091%" y="4543.50">alloc::slic..</text></g><g><title>alloc::slice::hack::to_vec (38,249,306 samples, 8.23%)</title><rect x="22.0591%" y="4517" width="8.2283%" height="15" fill="rgb(245,217,29)" fg:x="102541467" fg:w="38249306"/><text x="22.3091%" y="4527.50">alloc::slic..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (38,249,306 samples, 8.23%)</title><rect x="22.0591%" y="4501" width="8.2283%" height="15" fill="rgb(221,176,29)" fg:x="102541467" fg:w="38249306"/><text x="22.3091%" y="4511.50">&lt;T as alloc..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (38,249,306 samples, 8.23%)</title><rect x="22.0591%" y="4485" width="8.2283%" height="15" fill="rgb(212,180,24)" fg:x="102541467" fg:w="38249306"/><text x="22.3091%" y="4495.50">&lt;css_bitvec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (38,249,306 samples, 8.23%)</title><rect x="22.0591%" y="4469" width="8.2283%" height="15" fill="rgb(254,24,2)" fg:x="102541467" fg:w="38249306"/><text x="22.3091%" y="4479.50">&lt;alloc::vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (38,249,306 samples, 8.23%)</title><rect x="22.0591%" y="4453" width="8.2283%" height="15" fill="rgb(230,100,2)" fg:x="102541467" fg:w="38249306"/><text x="22.3091%" y="4463.50">alloc::slic..</text></g><g><title>alloc::slice::hack::to_vec (38,249,306 samples, 8.23%)</title><rect x="22.0591%" y="4437" width="8.2283%" height="15" fill="rgb(219,142,25)" fg:x="102541467" fg:w="38249306"/><text x="22.3091%" y="4447.50">alloc::slic..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (38,249,306 samples, 8.23%)</title><rect x="22.0591%" y="4421" width="8.2283%" height="15" fill="rgb(240,73,43)" fg:x="102541467" fg:w="38249306"/><text x="22.3091%" y="4431.50">&lt;T as alloc..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (38,249,306 samples, 8.23%)</title><rect x="22.0591%" y="4405" width="8.2283%" height="15" fill="rgb(214,114,15)" fg:x="102541467" fg:w="38249306"/><text x="22.3091%" y="4415.50">&lt;css_bitvec..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,187,032 samples, 0.26%)</title><rect x="30.0321%" y="4389" width="0.2554%" height="15" fill="rgb(207,130,4)" fg:x="139603741" fg:w="1187032"/><text x="30.2821%" y="4399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,187,032 samples, 0.26%)</title><rect x="30.0321%" y="4373" width="0.2554%" height="15" fill="rgb(221,25,40)" fg:x="139603741" fg:w="1187032"/><text x="30.2821%" y="4383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,187,032 samples, 0.26%)</title><rect x="30.0321%" y="4357" width="0.2554%" height="15" fill="rgb(241,184,7)" fg:x="139603741" fg:w="1187032"/><text x="30.2821%" y="4367.50"></text></g><g><title>alloc::slice::hack::to_vec (1,187,032 samples, 0.26%)</title><rect x="30.0321%" y="4341" width="0.2554%" height="15" fill="rgb(235,159,4)" fg:x="139603741" fg:w="1187032"/><text x="30.2821%" y="4351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,187,032 samples, 0.26%)</title><rect x="30.0321%" y="4325" width="0.2554%" height="15" fill="rgb(214,87,48)" fg:x="139603741" fg:w="1187032"/><text x="30.2821%" y="4335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,187,032 samples, 0.26%)</title><rect x="30.0321%" y="4309" width="0.2554%" height="15" fill="rgb(246,198,24)" fg:x="139603741" fg:w="1187032"/><text x="30.2821%" y="4319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,187,032 samples, 0.26%)</title><rect x="30.0321%" y="4293" width="0.2554%" height="15" fill="rgb(209,66,40)" fg:x="139603741" fg:w="1187032"/><text x="30.2821%" y="4303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,187,032 samples, 0.26%)</title><rect x="30.0321%" y="4277" width="0.2554%" height="15" fill="rgb(233,147,39)" fg:x="139603741" fg:w="1187032"/><text x="30.2821%" y="4287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,187,032 samples, 0.26%)</title><rect x="30.0321%" y="4261" width="0.2554%" height="15" fill="rgb(231,145,52)" fg:x="139603741" fg:w="1187032"/><text x="30.2821%" y="4271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,187,032 samples, 0.26%)</title><rect x="30.0321%" y="4245" width="0.2554%" height="15" fill="rgb(206,20,26)" fg:x="139603741" fg:w="1187032"/><text x="30.2821%" y="4255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,187,032 samples, 0.26%)</title><rect x="30.0321%" y="4229" width="0.2554%" height="15" fill="rgb(238,220,4)" fg:x="139603741" fg:w="1187032"/><text x="30.2821%" y="4239.50"></text></g><g><title>alloc::alloc::alloc (1,187,032 samples, 0.26%)</title><rect x="30.0321%" y="4213" width="0.2554%" height="15" fill="rgb(252,195,42)" fg:x="139603741" fg:w="1187032"/><text x="30.2821%" y="4223.50"></text></g><g><title>malloc (1,187,032 samples, 0.26%)</title><rect x="30.0321%" y="4197" width="0.2554%" height="15" fill="rgb(209,10,6)" fg:x="139603741" fg:w="1187032"/><text x="30.2821%" y="4207.50"></text></g><g><title>[libc.so.6] (1,187,032 samples, 0.26%)</title><rect x="30.0321%" y="4181" width="0.2554%" height="15" fill="rgb(229,3,52)" fg:x="139603741" fg:w="1187032"/><text x="30.2821%" y="4191.50"></text></g><g><title>[libc.so.6] (1,187,032 samples, 0.26%)</title><rect x="30.0321%" y="4165" width="0.2554%" height="15" fill="rgb(253,49,37)" fg:x="139603741" fg:w="1187032"/><text x="30.2821%" y="4175.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (40,621,460 samples, 8.74%)</title><rect x="22.0591%" y="4805" width="8.7386%" height="15" fill="rgb(240,103,49)" fg:x="102541467" fg:w="40621460"/><text x="22.3091%" y="4815.50">&lt;css_bitvect..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (40,621,460 samples, 8.74%)</title><rect x="22.0591%" y="4789" width="8.7386%" height="15" fill="rgb(250,182,30)" fg:x="102541467" fg:w="40621460"/><text x="22.3091%" y="4799.50">&lt;alloc::vec:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (40,621,460 samples, 8.74%)</title><rect x="22.0591%" y="4773" width="8.7386%" height="15" fill="rgb(248,8,30)" fg:x="102541467" fg:w="40621460"/><text x="22.3091%" y="4783.50">alloc::slice..</text></g><g><title>alloc::slice::hack::to_vec (40,621,460 samples, 8.74%)</title><rect x="22.0591%" y="4757" width="8.7386%" height="15" fill="rgb(237,120,30)" fg:x="102541467" fg:w="40621460"/><text x="22.3091%" y="4767.50">alloc::slice..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (40,621,460 samples, 8.74%)</title><rect x="22.0591%" y="4741" width="8.7386%" height="15" fill="rgb(221,146,34)" fg:x="102541467" fg:w="40621460"/><text x="22.3091%" y="4751.50">&lt;T as alloc:..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (40,621,460 samples, 8.74%)</title><rect x="22.0591%" y="4725" width="8.7386%" height="15" fill="rgb(242,55,13)" fg:x="102541467" fg:w="40621460"/><text x="22.3091%" y="4735.50">&lt;css_bitvect..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (40,621,460 samples, 8.74%)</title><rect x="22.0591%" y="4709" width="8.7386%" height="15" fill="rgb(242,112,31)" fg:x="102541467" fg:w="40621460"/><text x="22.3091%" y="4719.50">&lt;alloc::vec:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (40,621,460 samples, 8.74%)</title><rect x="22.0591%" y="4693" width="8.7386%" height="15" fill="rgb(249,192,27)" fg:x="102541467" fg:w="40621460"/><text x="22.3091%" y="4703.50">alloc::slice..</text></g><g><title>alloc::slice::hack::to_vec (40,621,460 samples, 8.74%)</title><rect x="22.0591%" y="4677" width="8.7386%" height="15" fill="rgb(208,204,44)" fg:x="102541467" fg:w="40621460"/><text x="22.3091%" y="4687.50">alloc::slice..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (40,621,460 samples, 8.74%)</title><rect x="22.0591%" y="4661" width="8.7386%" height="15" fill="rgb(208,93,54)" fg:x="102541467" fg:w="40621460"/><text x="22.3091%" y="4671.50">&lt;T as alloc:..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (40,621,460 samples, 8.74%)</title><rect x="22.0591%" y="4645" width="8.7386%" height="15" fill="rgb(242,1,31)" fg:x="102541467" fg:w="40621460"/><text x="22.3091%" y="4655.50">&lt;css_bitvect..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (40,621,460 samples, 8.74%)</title><rect x="22.0591%" y="4629" width="8.7386%" height="15" fill="rgb(241,83,25)" fg:x="102541467" fg:w="40621460"/><text x="22.3091%" y="4639.50">&lt;alloc::vec:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (40,621,460 samples, 8.74%)</title><rect x="22.0591%" y="4613" width="8.7386%" height="15" fill="rgb(205,169,50)" fg:x="102541467" fg:w="40621460"/><text x="22.3091%" y="4623.50">alloc::slice..</text></g><g><title>alloc::slice::hack::to_vec (40,621,460 samples, 8.74%)</title><rect x="22.0591%" y="4597" width="8.7386%" height="15" fill="rgb(239,186,37)" fg:x="102541467" fg:w="40621460"/><text x="22.3091%" y="4607.50">alloc::slice..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (40,621,460 samples, 8.74%)</title><rect x="22.0591%" y="4581" width="8.7386%" height="15" fill="rgb(205,221,10)" fg:x="102541467" fg:w="40621460"/><text x="22.3091%" y="4591.50">&lt;T as alloc:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,372,154 samples, 0.51%)</title><rect x="30.2874%" y="4565" width="0.5103%" height="15" fill="rgb(218,196,15)" fg:x="140790773" fg:w="2372154"/><text x="30.5374%" y="4575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,372,154 samples, 0.51%)</title><rect x="30.2874%" y="4549" width="0.5103%" height="15" fill="rgb(218,196,35)" fg:x="140790773" fg:w="2372154"/><text x="30.5374%" y="4559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,372,154 samples, 0.51%)</title><rect x="30.2874%" y="4533" width="0.5103%" height="15" fill="rgb(233,63,24)" fg:x="140790773" fg:w="2372154"/><text x="30.5374%" y="4543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,372,154 samples, 0.51%)</title><rect x="30.2874%" y="4517" width="0.5103%" height="15" fill="rgb(225,8,4)" fg:x="140790773" fg:w="2372154"/><text x="30.5374%" y="4527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,372,154 samples, 0.51%)</title><rect x="30.2874%" y="4501" width="0.5103%" height="15" fill="rgb(234,105,35)" fg:x="140790773" fg:w="2372154"/><text x="30.5374%" y="4511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,372,154 samples, 0.51%)</title><rect x="30.2874%" y="4485" width="0.5103%" height="15" fill="rgb(236,21,32)" fg:x="140790773" fg:w="2372154"/><text x="30.5374%" y="4495.50"></text></g><g><title>alloc::alloc::alloc (2,372,154 samples, 0.51%)</title><rect x="30.2874%" y="4469" width="0.5103%" height="15" fill="rgb(228,109,6)" fg:x="140790773" fg:w="2372154"/><text x="30.5374%" y="4479.50"></text></g><g><title>malloc (2,372,154 samples, 0.51%)</title><rect x="30.2874%" y="4453" width="0.5103%" height="15" fill="rgb(229,215,31)" fg:x="140790773" fg:w="2372154"/><text x="30.5374%" y="4463.50"></text></g><g><title>[libc.so.6] (2,372,154 samples, 0.51%)</title><rect x="30.2874%" y="4437" width="0.5103%" height="15" fill="rgb(221,52,54)" fg:x="140790773" fg:w="2372154"/><text x="30.5374%" y="4447.50"></text></g><g><title>[libc.so.6] (2,372,154 samples, 0.51%)</title><rect x="30.2874%" y="4421" width="0.5103%" height="15" fill="rgb(252,129,43)" fg:x="140790773" fg:w="2372154"/><text x="30.5374%" y="4431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,260,675 samples, 0.27%)</title><rect x="30.7977%" y="4149" width="0.2712%" height="15" fill="rgb(248,183,27)" fg:x="143162927" fg:w="1260675"/><text x="31.0477%" y="4159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,260,675 samples, 0.27%)</title><rect x="30.7977%" y="4133" width="0.2712%" height="15" fill="rgb(250,0,22)" fg:x="143162927" fg:w="1260675"/><text x="31.0477%" y="4143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,260,675 samples, 0.27%)</title><rect x="30.7977%" y="4117" width="0.2712%" height="15" fill="rgb(213,166,10)" fg:x="143162927" fg:w="1260675"/><text x="31.0477%" y="4127.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,260,675 samples, 0.27%)</title><rect x="30.7977%" y="4101" width="0.2712%" height="15" fill="rgb(207,163,36)" fg:x="143162927" fg:w="1260675"/><text x="31.0477%" y="4111.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,260,675 samples, 0.27%)</title><rect x="30.7977%" y="4085" width="0.2712%" height="15" fill="rgb(208,122,22)" fg:x="143162927" fg:w="1260675"/><text x="31.0477%" y="4095.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,260,675 samples, 0.27%)</title><rect x="30.7977%" y="4069" width="0.2712%" height="15" fill="rgb(207,104,49)" fg:x="143162927" fg:w="1260675"/><text x="31.0477%" y="4079.50"></text></g><g><title>alloc::alloc::dealloc (1,260,675 samples, 0.27%)</title><rect x="30.7977%" y="4053" width="0.2712%" height="15" fill="rgb(248,211,50)" fg:x="143162927" fg:w="1260675"/><text x="31.0477%" y="4063.50"></text></g><g><title>__rdl_dealloc (1,260,675 samples, 0.27%)</title><rect x="30.7977%" y="4037" width="0.2712%" height="15" fill="rgb(217,13,45)" fg:x="143162927" fg:w="1260675"/><text x="31.0477%" y="4047.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,260,675 samples, 0.27%)</title><rect x="30.7977%" y="4021" width="0.2712%" height="15" fill="rgb(211,216,49)" fg:x="143162927" fg:w="1260675"/><text x="31.0477%" y="4031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,450,394 samples, 0.53%)</title><rect x="31.0689%" y="4085" width="0.5271%" height="15" fill="rgb(221,58,53)" fg:x="144423602" fg:w="2450394"/><text x="31.3189%" y="4095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,450,394 samples, 0.53%)</title><rect x="31.0689%" y="4069" width="0.5271%" height="15" fill="rgb(220,112,41)" fg:x="144423602" fg:w="2450394"/><text x="31.3189%" y="4079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,450,394 samples, 0.53%)</title><rect x="31.0689%" y="4053" width="0.5271%" height="15" fill="rgb(236,38,28)" fg:x="144423602" fg:w="2450394"/><text x="31.3189%" y="4063.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,450,394 samples, 0.53%)</title><rect x="31.0689%" y="4037" width="0.5271%" height="15" fill="rgb(227,195,22)" fg:x="144423602" fg:w="2450394"/><text x="31.3189%" y="4047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,218,879 samples, 0.26%)</title><rect x="31.3339%" y="4021" width="0.2622%" height="15" fill="rgb(214,55,33)" fg:x="145655117" fg:w="1218879"/><text x="31.5839%" y="4031.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,218,879 samples, 0.26%)</title><rect x="31.3339%" y="4005" width="0.2622%" height="15" fill="rgb(248,80,13)" fg:x="145655117" fg:w="1218879"/><text x="31.5839%" y="4015.50"></text></g><g><title>alloc::alloc::dealloc (1,218,879 samples, 0.26%)</title><rect x="31.3339%" y="3989" width="0.2622%" height="15" fill="rgb(238,52,6)" fg:x="145655117" fg:w="1218879"/><text x="31.5839%" y="3999.50"></text></g><g><title>cfree (1,218,879 samples, 0.26%)</title><rect x="31.3339%" y="3973" width="0.2622%" height="15" fill="rgb(224,198,47)" fg:x="145655117" fg:w="1218879"/><text x="31.5839%" y="3983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,469,982 samples, 0.53%)</title><rect x="31.5961%" y="3893" width="0.5314%" height="15" fill="rgb(233,171,20)" fg:x="146873996" fg:w="2469982"/><text x="31.8461%" y="3903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,469,982 samples, 0.53%)</title><rect x="31.5961%" y="3877" width="0.5314%" height="15" fill="rgb(241,30,25)" fg:x="146873996" fg:w="2469982"/><text x="31.8461%" y="3887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,469,982 samples, 0.53%)</title><rect x="31.5961%" y="3861" width="0.5314%" height="15" fill="rgb(207,171,38)" fg:x="146873996" fg:w="2469982"/><text x="31.8461%" y="3871.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,469,982 samples, 0.53%)</title><rect x="31.5961%" y="3845" width="0.5314%" height="15" fill="rgb(234,70,1)" fg:x="146873996" fg:w="2469982"/><text x="31.8461%" y="3855.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,469,982 samples, 0.53%)</title><rect x="31.5961%" y="3829" width="0.5314%" height="15" fill="rgb(232,178,18)" fg:x="146873996" fg:w="2469982"/><text x="31.8461%" y="3839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,469,982 samples, 0.53%)</title><rect x="31.5961%" y="3813" width="0.5314%" height="15" fill="rgb(241,78,40)" fg:x="146873996" fg:w="2469982"/><text x="31.8461%" y="3823.50"></text></g><g><title>alloc::alloc::dealloc (2,469,982 samples, 0.53%)</title><rect x="31.5961%" y="3797" width="0.5314%" height="15" fill="rgb(222,35,25)" fg:x="146873996" fg:w="2469982"/><text x="31.8461%" y="3807.50"></text></g><g><title>cfree (2,469,982 samples, 0.53%)</title><rect x="31.5961%" y="3781" width="0.5314%" height="15" fill="rgb(207,92,16)" fg:x="146873996" fg:w="2469982"/><text x="31.8461%" y="3791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,521,473 samples, 0.76%)</title><rect x="31.5961%" y="3957" width="0.7576%" height="15" fill="rgb(216,59,51)" fg:x="146873996" fg:w="3521473"/><text x="31.8461%" y="3967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,521,473 samples, 0.76%)</title><rect x="31.5961%" y="3941" width="0.7576%" height="15" fill="rgb(213,80,28)" fg:x="146873996" fg:w="3521473"/><text x="31.8461%" y="3951.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,521,473 samples, 0.76%)</title><rect x="31.5961%" y="3925" width="0.7576%" height="15" fill="rgb(220,93,7)" fg:x="146873996" fg:w="3521473"/><text x="31.8461%" y="3935.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,521,473 samples, 0.76%)</title><rect x="31.5961%" y="3909" width="0.7576%" height="15" fill="rgb(225,24,44)" fg:x="146873996" fg:w="3521473"/><text x="31.8461%" y="3919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,051,491 samples, 0.23%)</title><rect x="32.1274%" y="3893" width="0.2262%" height="15" fill="rgb(243,74,40)" fg:x="149343978" fg:w="1051491"/><text x="32.3774%" y="3903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,051,491 samples, 0.23%)</title><rect x="32.1274%" y="3877" width="0.2262%" height="15" fill="rgb(228,39,7)" fg:x="149343978" fg:w="1051491"/><text x="32.3774%" y="3887.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,051,491 samples, 0.23%)</title><rect x="32.1274%" y="3861" width="0.2262%" height="15" fill="rgb(227,79,8)" fg:x="149343978" fg:w="1051491"/><text x="32.3774%" y="3871.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,051,491 samples, 0.23%)</title><rect x="32.1274%" y="3845" width="0.2262%" height="15" fill="rgb(236,58,11)" fg:x="149343978" fg:w="1051491"/><text x="32.3774%" y="3855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,051,491 samples, 0.23%)</title><rect x="32.1274%" y="3829" width="0.2262%" height="15" fill="rgb(249,63,35)" fg:x="149343978" fg:w="1051491"/><text x="32.3774%" y="3839.50"></text></g><g><title>alloc::alloc::dealloc (1,051,491 samples, 0.23%)</title><rect x="32.1274%" y="3813" width="0.2262%" height="15" fill="rgb(252,114,16)" fg:x="149343978" fg:w="1051491"/><text x="32.3774%" y="3823.50"></text></g><g><title>cfree (1,051,491 samples, 0.23%)</title><rect x="32.1274%" y="3797" width="0.2262%" height="15" fill="rgb(254,151,24)" fg:x="149343978" fg:w="1051491"/><text x="32.3774%" y="3807.50"></text></g><g><title>[libc.so.6] (1,051,491 samples, 0.23%)</title><rect x="32.1274%" y="3781" width="0.2262%" height="15" fill="rgb(253,54,39)" fg:x="149343978" fg:w="1051491"/><text x="32.3774%" y="3791.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;css_bitvector_compiler::IState&gt;&gt;&gt; (1,228,945 samples, 0.26%)</title><rect x="32.3536%" y="3957" width="0.2644%" height="15" fill="rgb(243,25,45)" fg:x="150395469" fg:w="1228945"/><text x="32.6036%" y="3967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (7,177,847 samples, 1.54%)</title><rect x="31.5961%" y="4021" width="1.5441%" height="15" fill="rgb(234,134,9)" fg:x="146873996" fg:w="7177847"/><text x="31.8461%" y="4031.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,177,847 samples, 1.54%)</title><rect x="31.5961%" y="4005" width="1.5441%" height="15" fill="rgb(227,166,31)" fg:x="146873996" fg:w="7177847"/><text x="31.8461%" y="4015.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (7,177,847 samples, 1.54%)</title><rect x="31.5961%" y="3989" width="1.5441%" height="15" fill="rgb(245,143,41)" fg:x="146873996" fg:w="7177847"/><text x="31.8461%" y="3999.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (7,177,847 samples, 1.54%)</title><rect x="31.5961%" y="3973" width="1.5441%" height="15" fill="rgb(238,181,32)" fg:x="146873996" fg:w="7177847"/><text x="31.8461%" y="3983.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,427,429 samples, 0.52%)</title><rect x="32.6180%" y="3957" width="0.5222%" height="15" fill="rgb(224,113,18)" fg:x="151624414" fg:w="2427429"/><text x="32.8680%" y="3967.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,427,429 samples, 0.52%)</title><rect x="32.6180%" y="3941" width="0.5222%" height="15" fill="rgb(240,229,28)" fg:x="151624414" fg:w="2427429"/><text x="32.8680%" y="3951.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,427,429 samples, 0.52%)</title><rect x="32.6180%" y="3925" width="0.5222%" height="15" fill="rgb(250,185,3)" fg:x="151624414" fg:w="2427429"/><text x="32.8680%" y="3935.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,427,429 samples, 0.52%)</title><rect x="32.6180%" y="3909" width="0.5222%" height="15" fill="rgb(212,59,25)" fg:x="151624414" fg:w="2427429"/><text x="32.8680%" y="3919.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,427,429 samples, 0.52%)</title><rect x="32.6180%" y="3893" width="0.5222%" height="15" fill="rgb(221,87,20)" fg:x="151624414" fg:w="2427429"/><text x="32.8680%" y="3903.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,427,429 samples, 0.52%)</title><rect x="32.6180%" y="3877" width="0.5222%" height="15" fill="rgb(213,74,28)" fg:x="151624414" fg:w="2427429"/><text x="32.8680%" y="3887.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (2,427,429 samples, 0.52%)</title><rect x="32.6180%" y="3861" width="0.5222%" height="15" fill="rgb(224,132,34)" fg:x="151624414" fg:w="2427429"/><text x="32.8680%" y="3871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (13,308,518 samples, 2.86%)</title><rect x="30.7977%" y="4213" width="2.8630%" height="15" fill="rgb(222,101,24)" fg:x="143162927" fg:w="13308518"/><text x="31.0477%" y="4223.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,308,518 samples, 2.86%)</title><rect x="30.7977%" y="4197" width="2.8630%" height="15" fill="rgb(254,142,4)" fg:x="143162927" fg:w="13308518"/><text x="31.0477%" y="4207.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (13,308,518 samples, 2.86%)</title><rect x="30.7977%" y="4181" width="2.8630%" height="15" fill="rgb(230,229,49)" fg:x="143162927" fg:w="13308518"/><text x="31.0477%" y="4191.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (13,308,518 samples, 2.86%)</title><rect x="30.7977%" y="4165" width="2.8630%" height="15" fill="rgb(238,70,47)" fg:x="143162927" fg:w="13308518"/><text x="31.0477%" y="4175.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (12,047,843 samples, 2.59%)</title><rect x="31.0689%" y="4149" width="2.5918%" height="15" fill="rgb(231,160,17)" fg:x="144423602" fg:w="12047843"/><text x="31.3189%" y="4159.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,047,843 samples, 2.59%)</title><rect x="31.0689%" y="4133" width="2.5918%" height="15" fill="rgb(218,68,53)" fg:x="144423602" fg:w="12047843"/><text x="31.3189%" y="4143.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (12,047,843 samples, 2.59%)</title><rect x="31.0689%" y="4117" width="2.5918%" height="15" fill="rgb(236,111,10)" fg:x="144423602" fg:w="12047843"/><text x="31.3189%" y="4127.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (12,047,843 samples, 2.59%)</title><rect x="31.0689%" y="4101" width="2.5918%" height="15" fill="rgb(224,34,41)" fg:x="144423602" fg:w="12047843"/><text x="31.3189%" y="4111.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,597,449 samples, 2.06%)</title><rect x="31.5961%" y="4085" width="2.0646%" height="15" fill="rgb(241,118,19)" fg:x="146873996" fg:w="9597449"/><text x="31.8461%" y="4095.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,597,449 samples, 2.06%)</title><rect x="31.5961%" y="4069" width="2.0646%" height="15" fill="rgb(238,129,25)" fg:x="146873996" fg:w="9597449"/><text x="31.8461%" y="4079.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,597,449 samples, 2.06%)</title><rect x="31.5961%" y="4053" width="2.0646%" height="15" fill="rgb(238,22,31)" fg:x="146873996" fg:w="9597449"/><text x="31.8461%" y="4063.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,597,449 samples, 2.06%)</title><rect x="31.5961%" y="4037" width="2.0646%" height="15" fill="rgb(222,174,48)" fg:x="146873996" fg:w="9597449"/><text x="31.8461%" y="4047.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,419,602 samples, 0.52%)</title><rect x="33.1402%" y="4021" width="0.5205%" height="15" fill="rgb(206,152,40)" fg:x="154051843" fg:w="2419602"/><text x="33.3902%" y="4031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,419,602 samples, 0.52%)</title><rect x="33.1402%" y="4005" width="0.5205%" height="15" fill="rgb(218,99,54)" fg:x="154051843" fg:w="2419602"/><text x="33.3902%" y="4015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,419,602 samples, 0.52%)</title><rect x="33.1402%" y="3989" width="0.5205%" height="15" fill="rgb(220,174,26)" fg:x="154051843" fg:w="2419602"/><text x="33.3902%" y="3999.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,419,602 samples, 0.52%)</title><rect x="33.1402%" y="3973" width="0.5205%" height="15" fill="rgb(245,116,9)" fg:x="154051843" fg:w="2419602"/><text x="33.3902%" y="3983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,419,602 samples, 0.52%)</title><rect x="33.1402%" y="3957" width="0.5205%" height="15" fill="rgb(209,72,35)" fg:x="154051843" fg:w="2419602"/><text x="33.3902%" y="3967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,419,602 samples, 0.52%)</title><rect x="33.1402%" y="3941" width="0.5205%" height="15" fill="rgb(226,126,21)" fg:x="154051843" fg:w="2419602"/><text x="33.3902%" y="3951.50"></text></g><g><title>alloc::alloc::dealloc (2,419,602 samples, 0.52%)</title><rect x="33.1402%" y="3925" width="0.5205%" height="15" fill="rgb(227,192,1)" fg:x="154051843" fg:w="2419602"/><text x="33.3902%" y="3935.50"></text></g><g><title>cfree (2,419,602 samples, 0.52%)</title><rect x="33.1402%" y="3909" width="0.5205%" height="15" fill="rgb(237,180,29)" fg:x="154051843" fg:w="2419602"/><text x="33.3902%" y="3919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,519,307 samples, 3.12%)</title><rect x="30.7977%" y="4517" width="3.1234%" height="15" fill="rgb(230,197,35)" fg:x="143162927" fg:w="14519307"/><text x="31.0477%" y="4527.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (14,519,307 samples, 3.12%)</title><rect x="30.7977%" y="4501" width="3.1234%" height="15" fill="rgb(246,193,31)" fg:x="143162927" fg:w="14519307"/><text x="31.0477%" y="4511.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (14,519,307 samples, 3.12%)</title><rect x="30.7977%" y="4485" width="3.1234%" height="15" fill="rgb(241,36,4)" fg:x="143162927" fg:w="14519307"/><text x="31.0477%" y="4495.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (14,519,307 samples, 3.12%)</title><rect x="30.7977%" y="4469" width="3.1234%" height="15" fill="rgb(241,130,17)" fg:x="143162927" fg:w="14519307"/><text x="31.0477%" y="4479.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,519,307 samples, 3.12%)</title><rect x="30.7977%" y="4453" width="3.1234%" height="15" fill="rgb(206,137,32)" fg:x="143162927" fg:w="14519307"/><text x="31.0477%" y="4463.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (14,519,307 samples, 3.12%)</title><rect x="30.7977%" y="4437" width="3.1234%" height="15" fill="rgb(237,228,51)" fg:x="143162927" fg:w="14519307"/><text x="31.0477%" y="4447.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (14,519,307 samples, 3.12%)</title><rect x="30.7977%" y="4421" width="3.1234%" height="15" fill="rgb(243,6,42)" fg:x="143162927" fg:w="14519307"/><text x="31.0477%" y="4431.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (14,519,307 samples, 3.12%)</title><rect x="30.7977%" y="4405" width="3.1234%" height="15" fill="rgb(251,74,28)" fg:x="143162927" fg:w="14519307"/><text x="31.0477%" y="4415.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,519,307 samples, 3.12%)</title><rect x="30.7977%" y="4389" width="3.1234%" height="15" fill="rgb(218,20,49)" fg:x="143162927" fg:w="14519307"/><text x="31.0477%" y="4399.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (14,519,307 samples, 3.12%)</title><rect x="30.7977%" y="4373" width="3.1234%" height="15" fill="rgb(238,28,14)" fg:x="143162927" fg:w="14519307"/><text x="31.0477%" y="4383.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (14,519,307 samples, 3.12%)</title><rect x="30.7977%" y="4357" width="3.1234%" height="15" fill="rgb(229,40,46)" fg:x="143162927" fg:w="14519307"/><text x="31.0477%" y="4367.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (14,519,307 samples, 3.12%)</title><rect x="30.7977%" y="4341" width="3.1234%" height="15" fill="rgb(244,195,20)" fg:x="143162927" fg:w="14519307"/><text x="31.0477%" y="4351.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,519,307 samples, 3.12%)</title><rect x="30.7977%" y="4325" width="3.1234%" height="15" fill="rgb(253,56,35)" fg:x="143162927" fg:w="14519307"/><text x="31.0477%" y="4335.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (14,519,307 samples, 3.12%)</title><rect x="30.7977%" y="4309" width="3.1234%" height="15" fill="rgb(210,149,44)" fg:x="143162927" fg:w="14519307"/><text x="31.0477%" y="4319.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (14,519,307 samples, 3.12%)</title><rect x="30.7977%" y="4293" width="3.1234%" height="15" fill="rgb(240,135,12)" fg:x="143162927" fg:w="14519307"/><text x="31.0477%" y="4303.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (14,519,307 samples, 3.12%)</title><rect x="30.7977%" y="4277" width="3.1234%" height="15" fill="rgb(251,24,50)" fg:x="143162927" fg:w="14519307"/><text x="31.0477%" y="4287.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,519,307 samples, 3.12%)</title><rect x="30.7977%" y="4261" width="3.1234%" height="15" fill="rgb(243,200,47)" fg:x="143162927" fg:w="14519307"/><text x="31.0477%" y="4271.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (14,519,307 samples, 3.12%)</title><rect x="30.7977%" y="4245" width="3.1234%" height="15" fill="rgb(224,166,26)" fg:x="143162927" fg:w="14519307"/><text x="31.0477%" y="4255.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (14,519,307 samples, 3.12%)</title><rect x="30.7977%" y="4229" width="3.1234%" height="15" fill="rgb(233,0,47)" fg:x="143162927" fg:w="14519307"/><text x="31.0477%" y="4239.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,210,789 samples, 0.26%)</title><rect x="33.6607%" y="4213" width="0.2605%" height="15" fill="rgb(253,80,5)" fg:x="156471445" fg:w="1210789"/><text x="33.9107%" y="4223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,210,789 samples, 0.26%)</title><rect x="33.6607%" y="4197" width="0.2605%" height="15" fill="rgb(214,133,25)" fg:x="156471445" fg:w="1210789"/><text x="33.9107%" y="4207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,210,789 samples, 0.26%)</title><rect x="33.6607%" y="4181" width="0.2605%" height="15" fill="rgb(209,27,14)" fg:x="156471445" fg:w="1210789"/><text x="33.9107%" y="4191.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,210,789 samples, 0.26%)</title><rect x="33.6607%" y="4165" width="0.2605%" height="15" fill="rgb(219,102,51)" fg:x="156471445" fg:w="1210789"/><text x="33.9107%" y="4175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,210,789 samples, 0.26%)</title><rect x="33.6607%" y="4149" width="0.2605%" height="15" fill="rgb(237,18,16)" fg:x="156471445" fg:w="1210789"/><text x="33.9107%" y="4159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,210,789 samples, 0.26%)</title><rect x="33.6607%" y="4133" width="0.2605%" height="15" fill="rgb(241,85,17)" fg:x="156471445" fg:w="1210789"/><text x="33.9107%" y="4143.50"></text></g><g><title>alloc::alloc::dealloc (1,210,789 samples, 0.26%)</title><rect x="33.6607%" y="4117" width="0.2605%" height="15" fill="rgb(236,90,42)" fg:x="156471445" fg:w="1210789"/><text x="33.9107%" y="4127.50"></text></g><g><title>cfree (1,210,789 samples, 0.26%)</title><rect x="33.6607%" y="4101" width="0.2605%" height="15" fill="rgb(249,57,21)" fg:x="156471445" fg:w="1210789"/><text x="33.9107%" y="4111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15,686,931 samples, 3.37%)</title><rect x="30.7977%" y="4645" width="3.3746%" height="15" fill="rgb(243,12,36)" fg:x="143162927" fg:w="15686931"/><text x="31.0477%" y="4655.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (15,686,931 samples, 3.37%)</title><rect x="30.7977%" y="4629" width="3.3746%" height="15" fill="rgb(253,128,47)" fg:x="143162927" fg:w="15686931"/><text x="31.0477%" y="4639.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (15,686,931 samples, 3.37%)</title><rect x="30.7977%" y="4613" width="3.3746%" height="15" fill="rgb(207,33,20)" fg:x="143162927" fg:w="15686931"/><text x="31.0477%" y="4623.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (15,686,931 samples, 3.37%)</title><rect x="30.7977%" y="4597" width="3.3746%" height="15" fill="rgb(233,215,35)" fg:x="143162927" fg:w="15686931"/><text x="31.0477%" y="4607.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15,686,931 samples, 3.37%)</title><rect x="30.7977%" y="4581" width="3.3746%" height="15" fill="rgb(249,188,52)" fg:x="143162927" fg:w="15686931"/><text x="31.0477%" y="4591.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (15,686,931 samples, 3.37%)</title><rect x="30.7977%" y="4565" width="3.3746%" height="15" fill="rgb(225,12,32)" fg:x="143162927" fg:w="15686931"/><text x="31.0477%" y="4575.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (15,686,931 samples, 3.37%)</title><rect x="30.7977%" y="4549" width="3.3746%" height="15" fill="rgb(247,98,14)" fg:x="143162927" fg:w="15686931"/><text x="31.0477%" y="4559.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (15,686,931 samples, 3.37%)</title><rect x="30.7977%" y="4533" width="3.3746%" height="15" fill="rgb(247,219,48)" fg:x="143162927" fg:w="15686931"/><text x="31.0477%" y="4543.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,167,624 samples, 0.25%)</title><rect x="33.9212%" y="4517" width="0.2512%" height="15" fill="rgb(253,60,48)" fg:x="157682234" fg:w="1167624"/><text x="34.1712%" y="4527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,167,624 samples, 0.25%)</title><rect x="33.9212%" y="4501" width="0.2512%" height="15" fill="rgb(245,15,52)" fg:x="157682234" fg:w="1167624"/><text x="34.1712%" y="4511.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (16,969,632 samples, 3.65%)</title><rect x="30.7977%" y="4805" width="3.6506%" height="15" fill="rgb(220,133,28)" fg:x="143162927" fg:w="16969632"/><text x="31.0477%" y="4815.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (16,969,632 samples, 3.65%)</title><rect x="30.7977%" y="4789" width="3.6506%" height="15" fill="rgb(217,180,4)" fg:x="143162927" fg:w="16969632"/><text x="31.0477%" y="4799.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,969,632 samples, 3.65%)</title><rect x="30.7977%" y="4773" width="3.6506%" height="15" fill="rgb(251,24,1)" fg:x="143162927" fg:w="16969632"/><text x="31.0477%" y="4783.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (16,969,632 samples, 3.65%)</title><rect x="30.7977%" y="4757" width="3.6506%" height="15" fill="rgb(212,185,49)" fg:x="143162927" fg:w="16969632"/><text x="31.0477%" y="4767.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (16,969,632 samples, 3.65%)</title><rect x="30.7977%" y="4741" width="3.6506%" height="15" fill="rgb(215,175,22)" fg:x="143162927" fg:w="16969632"/><text x="31.0477%" y="4751.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (16,969,632 samples, 3.65%)</title><rect x="30.7977%" y="4725" width="3.6506%" height="15" fill="rgb(250,205,14)" fg:x="143162927" fg:w="16969632"/><text x="31.0477%" y="4735.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,969,632 samples, 3.65%)</title><rect x="30.7977%" y="4709" width="3.6506%" height="15" fill="rgb(225,211,22)" fg:x="143162927" fg:w="16969632"/><text x="31.0477%" y="4719.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (16,969,632 samples, 3.65%)</title><rect x="30.7977%" y="4693" width="3.6506%" height="15" fill="rgb(251,179,42)" fg:x="143162927" fg:w="16969632"/><text x="31.0477%" y="4703.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (16,969,632 samples, 3.65%)</title><rect x="30.7977%" y="4677" width="3.6506%" height="15" fill="rgb(208,216,51)" fg:x="143162927" fg:w="16969632"/><text x="31.0477%" y="4687.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (16,969,632 samples, 3.65%)</title><rect x="30.7977%" y="4661" width="3.6506%" height="15" fill="rgb(235,36,11)" fg:x="143162927" fg:w="16969632"/><text x="31.0477%" y="4671.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,282,701 samples, 0.28%)</title><rect x="34.1724%" y="4645" width="0.2759%" height="15" fill="rgb(213,189,28)" fg:x="158849858" fg:w="1282701"/><text x="34.4224%" y="4655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,282,701 samples, 0.28%)</title><rect x="34.1724%" y="4629" width="0.2759%" height="15" fill="rgb(227,203,42)" fg:x="158849858" fg:w="1282701"/><text x="34.4224%" y="4639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,282,701 samples, 0.28%)</title><rect x="34.1724%" y="4613" width="0.2759%" height="15" fill="rgb(244,72,36)" fg:x="158849858" fg:w="1282701"/><text x="34.4224%" y="4623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,282,701 samples, 0.28%)</title><rect x="34.1724%" y="4597" width="0.2759%" height="15" fill="rgb(213,53,17)" fg:x="158849858" fg:w="1282701"/><text x="34.4224%" y="4607.50"></text></g><g><title>alloc::alloc::dealloc (1,282,701 samples, 0.28%)</title><rect x="34.1724%" y="4581" width="0.2759%" height="15" fill="rgb(207,167,3)" fg:x="158849858" fg:w="1282701"/><text x="34.4224%" y="4591.50"></text></g><g><title>cfree (1,282,701 samples, 0.28%)</title><rect x="34.1724%" y="4565" width="0.2759%" height="15" fill="rgb(216,98,30)" fg:x="158849858" fg:w="1282701"/><text x="34.4224%" y="4575.50"></text></g><g><title>[libc.so.6] (1,282,701 samples, 0.28%)</title><rect x="34.1724%" y="4549" width="0.2759%" height="15" fill="rgb(236,123,15)" fg:x="158849858" fg:w="1282701"/><text x="34.4224%" y="4559.50"></text></g><g><title>[libc.so.6] (1,282,701 samples, 0.28%)</title><rect x="34.1724%" y="4533" width="0.2759%" height="15" fill="rgb(248,81,50)" fg:x="158849858" fg:w="1282701"/><text x="34.4224%" y="4543.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,179,653 samples, 0.25%)</title><rect x="34.4483%" y="4805" width="0.2538%" height="15" fill="rgb(214,120,4)" fg:x="160132559" fg:w="1179653"/><text x="34.6983%" y="4815.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,179,653 samples, 0.25%)</title><rect x="34.4483%" y="4789" width="0.2538%" height="15" fill="rgb(208,179,34)" fg:x="160132559" fg:w="1179653"/><text x="34.6983%" y="4799.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,179,653 samples, 0.25%)</title><rect x="34.4483%" y="4773" width="0.2538%" height="15" fill="rgb(227,140,7)" fg:x="160132559" fg:w="1179653"/><text x="34.6983%" y="4783.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,179,653 samples, 0.25%)</title><rect x="34.4483%" y="4757" width="0.2538%" height="15" fill="rgb(214,22,6)" fg:x="160132559" fg:w="1179653"/><text x="34.6983%" y="4767.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,179,653 samples, 0.25%)</title><rect x="34.4483%" y="4741" width="0.2538%" height="15" fill="rgb(207,137,27)" fg:x="160132559" fg:w="1179653"/><text x="34.6983%" y="4751.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,179,653 samples, 0.25%)</title><rect x="34.4483%" y="4725" width="0.2538%" height="15" fill="rgb(210,8,46)" fg:x="160132559" fg:w="1179653"/><text x="34.6983%" y="4735.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,179,653 samples, 0.25%)</title><rect x="34.4483%" y="4709" width="0.2538%" height="15" fill="rgb(240,16,54)" fg:x="160132559" fg:w="1179653"/><text x="34.6983%" y="4719.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,179,653 samples, 0.25%)</title><rect x="34.4483%" y="4693" width="0.2538%" height="15" fill="rgb(211,209,29)" fg:x="160132559" fg:w="1179653"/><text x="34.6983%" y="4703.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,179,653 samples, 0.25%)</title><rect x="34.4483%" y="4677" width="0.2538%" height="15" fill="rgb(226,228,24)" fg:x="160132559" fg:w="1179653"/><text x="34.6983%" y="4687.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,179,653 samples, 0.25%)</title><rect x="34.4483%" y="4661" width="0.2538%" height="15" fill="rgb(222,84,9)" fg:x="160132559" fg:w="1179653"/><text x="34.6983%" y="4671.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,179,653 samples, 0.25%)</title><rect x="34.4483%" y="4645" width="0.2538%" height="15" fill="rgb(234,203,30)" fg:x="160132559" fg:w="1179653"/><text x="34.6983%" y="4655.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,179,653 samples, 0.25%)</title><rect x="34.4483%" y="4629" width="0.2538%" height="15" fill="rgb(238,109,14)" fg:x="160132559" fg:w="1179653"/><text x="34.6983%" y="4639.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,179,653 samples, 0.25%)</title><rect x="34.4483%" y="4613" width="0.2538%" height="15" fill="rgb(233,206,34)" fg:x="160132559" fg:w="1179653"/><text x="34.6983%" y="4623.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,179,653 samples, 0.25%)</title><rect x="34.4483%" y="4597" width="0.2538%" height="15" fill="rgb(220,167,47)" fg:x="160132559" fg:w="1179653"/><text x="34.6983%" y="4607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,179,653 samples, 0.25%)</title><rect x="34.4483%" y="4581" width="0.2538%" height="15" fill="rgb(238,105,10)" fg:x="160132559" fg:w="1179653"/><text x="34.6983%" y="4591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,179,653 samples, 0.25%)</title><rect x="34.4483%" y="4565" width="0.2538%" height="15" fill="rgb(213,227,17)" fg:x="160132559" fg:w="1179653"/><text x="34.6983%" y="4575.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,231,939 samples, 0.27%)</title><rect x="34.7021%" y="4789" width="0.2650%" height="15" fill="rgb(217,132,38)" fg:x="161312212" fg:w="1231939"/><text x="34.9521%" y="4799.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,231,939 samples, 0.27%)</title><rect x="34.7021%" y="4773" width="0.2650%" height="15" fill="rgb(242,146,4)" fg:x="161312212" fg:w="1231939"/><text x="34.9521%" y="4783.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,231,939 samples, 0.27%)</title><rect x="34.7021%" y="4757" width="0.2650%" height="15" fill="rgb(212,61,9)" fg:x="161312212" fg:w="1231939"/><text x="34.9521%" y="4767.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,231,939 samples, 0.27%)</title><rect x="34.7021%" y="4741" width="0.2650%" height="15" fill="rgb(247,126,22)" fg:x="161312212" fg:w="1231939"/><text x="34.9521%" y="4751.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,231,939 samples, 0.27%)</title><rect x="34.7021%" y="4725" width="0.2650%" height="15" fill="rgb(220,196,2)" fg:x="161312212" fg:w="1231939"/><text x="34.9521%" y="4735.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,231,939 samples, 0.27%)</title><rect x="34.7021%" y="4709" width="0.2650%" height="15" fill="rgb(208,46,4)" fg:x="161312212" fg:w="1231939"/><text x="34.9521%" y="4719.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,231,939 samples, 0.27%)</title><rect x="34.7021%" y="4693" width="0.2650%" height="15" fill="rgb(252,104,46)" fg:x="161312212" fg:w="1231939"/><text x="34.9521%" y="4703.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,231,939 samples, 0.27%)</title><rect x="34.7021%" y="4677" width="0.2650%" height="15" fill="rgb(237,152,48)" fg:x="161312212" fg:w="1231939"/><text x="34.9521%" y="4687.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1,231,939 samples, 0.27%)</title><rect x="34.7021%" y="4661" width="0.2650%" height="15" fill="rgb(221,59,37)" fg:x="161312212" fg:w="1231939"/><text x="34.9521%" y="4671.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1,231,939 samples, 0.27%)</title><rect x="34.7021%" y="4645" width="0.2650%" height="15" fill="rgb(209,202,51)" fg:x="161312212" fg:w="1231939"/><text x="34.9521%" y="4655.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1,231,939 samples, 0.27%)</title><rect x="34.7021%" y="4629" width="0.2650%" height="15" fill="rgb(228,81,30)" fg:x="161312212" fg:w="1231939"/><text x="34.9521%" y="4639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,236,388 samples, 0.27%)</title><rect x="34.9671%" y="4773" width="0.2660%" height="15" fill="rgb(227,42,39)" fg:x="162544151" fg:w="1236388"/><text x="35.2171%" y="4783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,236,388 samples, 0.27%)</title><rect x="34.9671%" y="4757" width="0.2660%" height="15" fill="rgb(221,26,2)" fg:x="162544151" fg:w="1236388"/><text x="35.2171%" y="4767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,236,388 samples, 0.27%)</title><rect x="34.9671%" y="4741" width="0.2660%" height="15" fill="rgb(254,61,31)" fg:x="162544151" fg:w="1236388"/><text x="35.2171%" y="4751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,236,388 samples, 0.27%)</title><rect x="34.9671%" y="4725" width="0.2660%" height="15" fill="rgb(222,173,38)" fg:x="162544151" fg:w="1236388"/><text x="35.2171%" y="4735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,236,388 samples, 0.27%)</title><rect x="34.9671%" y="4709" width="0.2660%" height="15" fill="rgb(218,50,12)" fg:x="162544151" fg:w="1236388"/><text x="35.2171%" y="4719.50"></text></g><g><title>malloc (1,236,388 samples, 0.27%)</title><rect x="34.9671%" y="4693" width="0.2660%" height="15" fill="rgb(223,88,40)" fg:x="162544151" fg:w="1236388"/><text x="35.2171%" y="4703.50"></text></g><g><title>[libc.so.6] (1,236,388 samples, 0.27%)</title><rect x="34.9671%" y="4677" width="0.2660%" height="15" fill="rgb(237,54,19)" fg:x="162544151" fg:w="1236388"/><text x="35.2171%" y="4687.50"></text></g><g><title>[libc.so.6] (1,236,388 samples, 0.27%)</title><rect x="34.9671%" y="4661" width="0.2660%" height="15" fill="rgb(251,129,25)" fg:x="162544151" fg:w="1236388"/><text x="35.2171%" y="4671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4725" width="0.2481%" height="15" fill="rgb(238,97,19)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4735.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4709" width="0.2481%" height="15" fill="rgb(240,169,18)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4719.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4693" width="0.2481%" height="15" fill="rgb(230,187,49)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4703.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4677" width="0.2481%" height="15" fill="rgb(209,44,26)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4687.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4661" width="0.2481%" height="15" fill="rgb(244,0,6)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4645" width="0.2481%" height="15" fill="rgb(248,18,21)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4629" width="0.2481%" height="15" fill="rgb(245,180,19)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4613" width="0.2481%" height="15" fill="rgb(252,118,36)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4597" width="0.2481%" height="15" fill="rgb(210,224,19)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4607.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4581" width="0.2481%" height="15" fill="rgb(218,30,24)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4591.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4565" width="0.2481%" height="15" fill="rgb(219,75,50)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4549" width="0.2481%" height="15" fill="rgb(234,72,50)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4533" width="0.2481%" height="15" fill="rgb(219,100,48)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4517" width="0.2481%" height="15" fill="rgb(253,5,41)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4501" width="0.2481%" height="15" fill="rgb(247,181,11)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4485" width="0.2481%" height="15" fill="rgb(222,223,25)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4469" width="0.2481%" height="15" fill="rgb(214,198,28)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4453" width="0.2481%" height="15" fill="rgb(230,46,43)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4463.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4437" width="0.2481%" height="15" fill="rgb(233,65,53)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4447.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4421" width="0.2481%" height="15" fill="rgb(221,121,27)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4431.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4405" width="0.2481%" height="15" fill="rgb(247,70,47)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4415.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4389" width="0.2481%" height="15" fill="rgb(228,85,35)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4399.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4373" width="0.2481%" height="15" fill="rgb(209,50,18)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4383.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4357" width="0.2481%" height="15" fill="rgb(250,19,35)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4341" width="0.2481%" height="15" fill="rgb(253,107,29)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4325" width="0.2481%" height="15" fill="rgb(252,179,29)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4335.50"></text></g><g><title>alloc::alloc::alloc (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4309" width="0.2481%" height="15" fill="rgb(238,194,6)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4319.50"></text></g><g><title>malloc (1,153,423 samples, 0.25%)</title><rect x="35.2331%" y="4293" width="0.2481%" height="15" fill="rgb(238,164,29)" fg:x="163780539" fg:w="1153423"/><text x="35.4831%" y="4303.50"></text></g><g><title>main::benchmark::json_to_html_node (3,628,085 samples, 0.78%)</title><rect x="34.9671%" y="4789" width="0.7805%" height="15" fill="rgb(224,25,9)" fg:x="162544151" fg:w="3628085"/><text x="35.2171%" y="4799.50"></text></g><g><title>main::benchmark::json_to_html_node (2,391,697 samples, 0.51%)</title><rect x="35.2331%" y="4773" width="0.5145%" height="15" fill="rgb(244,153,23)" fg:x="163780539" fg:w="2391697"/><text x="35.4831%" y="4783.50"></text></g><g><title>main::benchmark::json_to_html_node (2,391,697 samples, 0.51%)</title><rect x="35.2331%" y="4757" width="0.5145%" height="15" fill="rgb(212,203,14)" fg:x="163780539" fg:w="2391697"/><text x="35.4831%" y="4767.50"></text></g><g><title>main::benchmark::json_to_html_node (2,391,697 samples, 0.51%)</title><rect x="35.2331%" y="4741" width="0.5145%" height="15" fill="rgb(220,164,20)" fg:x="163780539" fg:w="2391697"/><text x="35.4831%" y="4751.50"></text></g><g><title>main::benchmark::json_to_html_node (1,238,274 samples, 0.27%)</title><rect x="35.4812%" y="4725" width="0.2664%" height="15" fill="rgb(222,203,48)" fg:x="164933962" fg:w="1238274"/><text x="35.7312%" y="4735.50"></text></g><g><title>main::benchmark::json_to_html_node (1,238,274 samples, 0.27%)</title><rect x="35.4812%" y="4709" width="0.2664%" height="15" fill="rgb(215,159,22)" fg:x="164933962" fg:w="1238274"/><text x="35.7312%" y="4719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,238,274 samples, 0.27%)</title><rect x="35.4812%" y="4693" width="0.2664%" height="15" fill="rgb(216,183,47)" fg:x="164933962" fg:w="1238274"/><text x="35.7312%" y="4703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,238,274 samples, 0.27%)</title><rect x="35.4812%" y="4677" width="0.2664%" height="15" fill="rgb(229,195,25)" fg:x="164933962" fg:w="1238274"/><text x="35.7312%" y="4687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,238,274 samples, 0.27%)</title><rect x="35.4812%" y="4661" width="0.2664%" height="15" fill="rgb(224,132,51)" fg:x="164933962" fg:w="1238274"/><text x="35.7312%" y="4671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,238,274 samples, 0.27%)</title><rect x="35.4812%" y="4645" width="0.2664%" height="15" fill="rgb(240,63,7)" fg:x="164933962" fg:w="1238274"/><text x="35.7312%" y="4655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,238,274 samples, 0.27%)</title><rect x="35.4812%" y="4629" width="0.2664%" height="15" fill="rgb(249,182,41)" fg:x="164933962" fg:w="1238274"/><text x="35.7312%" y="4639.50"></text></g><g><title>malloc (1,238,274 samples, 0.27%)</title><rect x="35.4812%" y="4613" width="0.2664%" height="15" fill="rgb(243,47,26)" fg:x="164933962" fg:w="1238274"/><text x="35.7312%" y="4623.50"></text></g><g><title>[libc.so.6] (1,238,274 samples, 0.27%)</title><rect x="35.4812%" y="4597" width="0.2664%" height="15" fill="rgb(233,48,2)" fg:x="164933962" fg:w="1238274"/><text x="35.7312%" y="4607.50"></text></g><g><title>serde_json::value::Value::get (1,174,912 samples, 0.25%)</title><rect x="35.7476%" y="4789" width="0.2528%" height="15" fill="rgb(244,165,34)" fg:x="166172236" fg:w="1174912"/><text x="35.9976%" y="4799.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,174,912 samples, 0.25%)</title><rect x="35.7476%" y="4773" width="0.2528%" height="15" fill="rgb(207,89,7)" fg:x="166172236" fg:w="1174912"/><text x="35.9976%" y="4783.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,174,912 samples, 0.25%)</title><rect x="35.7476%" y="4757" width="0.2528%" height="15" fill="rgb(244,117,36)" fg:x="166172236" fg:w="1174912"/><text x="35.9976%" y="4767.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,174,912 samples, 0.25%)</title><rect x="35.7476%" y="4741" width="0.2528%" height="15" fill="rgb(226,144,34)" fg:x="166172236" fg:w="1174912"/><text x="35.9976%" y="4751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,174,912 samples, 0.25%)</title><rect x="35.7476%" y="4725" width="0.2528%" height="15" fill="rgb(213,23,19)" fg:x="166172236" fg:w="1174912"/><text x="35.9976%" y="4735.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,174,912 samples, 0.25%)</title><rect x="35.7476%" y="4709" width="0.2528%" height="15" fill="rgb(217,75,12)" fg:x="166172236" fg:w="1174912"/><text x="35.9976%" y="4719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,174,912 samples, 0.25%)</title><rect x="35.7476%" y="4693" width="0.2528%" height="15" fill="rgb(224,159,17)" fg:x="166172236" fg:w="1174912"/><text x="35.9976%" y="4703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,174,912 samples, 0.25%)</title><rect x="35.7476%" y="4677" width="0.2528%" height="15" fill="rgb(217,118,1)" fg:x="166172236" fg:w="1174912"/><text x="35.9976%" y="4687.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,174,912 samples, 0.25%)</title><rect x="35.7476%" y="4661" width="0.2528%" height="15" fill="rgb(232,180,48)" fg:x="166172236" fg:w="1174912"/><text x="35.9976%" y="4671.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,174,912 samples, 0.25%)</title><rect x="35.7476%" y="4645" width="0.2528%" height="15" fill="rgb(230,27,33)" fg:x="166172236" fg:w="1174912"/><text x="35.9976%" y="4655.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,174,912 samples, 0.25%)</title><rect x="35.7476%" y="4629" width="0.2528%" height="15" fill="rgb(205,31,21)" fg:x="166172236" fg:w="1174912"/><text x="35.9976%" y="4639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (1,174,912 samples, 0.25%)</title><rect x="35.7476%" y="4613" width="0.2528%" height="15" fill="rgb(253,59,4)" fg:x="166172236" fg:w="1174912"/><text x="35.9976%" y="4623.50"></text></g><g><title>main::benchmark::apply_frame_modifications (8,376,774 samples, 1.80%)</title><rect x="34.7021%" y="4805" width="1.8020%" height="15" fill="rgb(224,201,9)" fg:x="161312212" fg:w="8376774"/><text x="34.9521%" y="4815.50">m..</text></g><g><title>std::io::stdio::_print (2,341,838 samples, 0.50%)</title><rect x="36.0003%" y="4789" width="0.5038%" height="15" fill="rgb(229,206,30)" fg:x="167347148" fg:w="2341838"/><text x="36.2503%" y="4799.50"></text></g><g><title>std::io::stdio::print_to (1,193,949 samples, 0.26%)</title><rect x="36.2473%" y="4773" width="0.2568%" height="15" fill="rgb(212,67,47)" fg:x="168495037" fg:w="1193949"/><text x="36.4973%" y="4783.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1,193,949 samples, 0.26%)</title><rect x="36.2473%" y="4757" width="0.2568%" height="15" fill="rgb(211,96,50)" fg:x="168495037" fg:w="1193949"/><text x="36.4973%" y="4767.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1,193,949 samples, 0.26%)</title><rect x="36.2473%" y="4741" width="0.2568%" height="15" fill="rgb(252,114,18)" fg:x="168495037" fg:w="1193949"/><text x="36.4973%" y="4751.50"></text></g><g><title>std::io::Write::write_fmt (1,193,949 samples, 0.26%)</title><rect x="36.2473%" y="4725" width="0.2568%" height="15" fill="rgb(223,58,37)" fg:x="168495037" fg:w="1193949"/><text x="36.4973%" y="4735.50"></text></g><g><title>core::fmt::write (1,193,949 samples, 0.26%)</title><rect x="36.2473%" y="4709" width="0.2568%" height="15" fill="rgb(237,70,4)" fg:x="168495037" fg:w="1193949"/><text x="36.4973%" y="4719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1,193,949 samples, 0.26%)</title><rect x="36.2473%" y="4693" width="0.2568%" height="15" fill="rgb(244,85,46)" fg:x="168495037" fg:w="1193949"/><text x="36.4973%" y="4703.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1,193,949 samples, 0.26%)</title><rect x="36.2473%" y="4677" width="0.2568%" height="15" fill="rgb(223,39,52)" fg:x="168495037" fg:w="1193949"/><text x="36.4973%" y="4687.50"></text></g><g><title>&lt;[T] as core::fmt::Debug&gt;::fmt (1,193,949 samples, 0.26%)</title><rect x="36.2473%" y="4661" width="0.2568%" height="15" fill="rgb(218,200,14)" fg:x="168495037" fg:w="1193949"/><text x="36.4973%" y="4671.50"></text></g><g><title>core::fmt::builders::DebugList::entries (1,193,949 samples, 0.26%)</title><rect x="36.2473%" y="4645" width="0.2568%" height="15" fill="rgb(208,171,16)" fg:x="168495037" fg:w="1193949"/><text x="36.4973%" y="4655.50"></text></g><g><title>core::fmt::builders::DebugSet::entry (1,193,949 samples, 0.26%)</title><rect x="36.2473%" y="4629" width="0.2568%" height="15" fill="rgb(234,200,18)" fg:x="168495037" fg:w="1193949"/><text x="36.4973%" y="4639.50"></text></g><g><title>core::fmt::builders::DebugInner::entry_with (1,193,949 samples, 0.26%)</title><rect x="36.2473%" y="4613" width="0.2568%" height="15" fill="rgb(228,45,11)" fg:x="168495037" fg:w="1193949"/><text x="36.4973%" y="4623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1,193,949 samples, 0.26%)</title><rect x="36.2473%" y="4597" width="0.2568%" height="15" fill="rgb(237,182,11)" fg:x="168495037" fg:w="1193949"/><text x="36.4973%" y="4607.50"></text></g><g><title>core::fmt::builders::DebugInner::entry_with::_{{closure}} (1,193,949 samples, 0.26%)</title><rect x="36.2473%" y="4581" width="0.2568%" height="15" fill="rgb(241,175,49)" fg:x="168495037" fg:w="1193949"/><text x="36.4973%" y="4591.50"></text></g><g><title>core::fmt::builders::DebugSet::entry::_{{closure}} (1,193,949 samples, 0.26%)</title><rect x="36.2473%" y="4565" width="0.2568%" height="15" fill="rgb(247,38,35)" fg:x="168495037" fg:w="1193949"/><text x="36.4973%" y="4575.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (1,193,949 samples, 0.26%)</title><rect x="36.2473%" y="4549" width="0.2568%" height="15" fill="rgb(228,39,49)" fg:x="168495037" fg:w="1193949"/><text x="36.4973%" y="4559.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1,193,949 samples, 0.26%)</title><rect x="36.2473%" y="4533" width="0.2568%" height="15" fill="rgb(226,101,26)" fg:x="168495037" fg:w="1193949"/><text x="36.4973%" y="4543.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,180,073 samples, 0.25%)</title><rect x="36.5041%" y="4805" width="0.2539%" height="15" fill="rgb(206,141,19)" fg:x="169688986" fg:w="1180073"/><text x="36.7541%" y="4815.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,180,073 samples, 0.25%)</title><rect x="36.5041%" y="4789" width="0.2539%" height="15" fill="rgb(211,200,13)" fg:x="169688986" fg:w="1180073"/><text x="36.7541%" y="4799.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,180,073 samples, 0.25%)</title><rect x="36.5041%" y="4773" width="0.2539%" height="15" fill="rgb(241,121,6)" fg:x="169688986" fg:w="1180073"/><text x="36.7541%" y="4783.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,180,073 samples, 0.25%)</title><rect x="36.5041%" y="4757" width="0.2539%" height="15" fill="rgb(234,221,29)" fg:x="169688986" fg:w="1180073"/><text x="36.7541%" y="4767.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,180,073 samples, 0.25%)</title><rect x="36.5041%" y="4741" width="0.2539%" height="15" fill="rgb(229,136,5)" fg:x="169688986" fg:w="1180073"/><text x="36.7541%" y="4751.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,180,073 samples, 0.25%)</title><rect x="36.5041%" y="4725" width="0.2539%" height="15" fill="rgb(238,36,11)" fg:x="169688986" fg:w="1180073"/><text x="36.7541%" y="4735.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,180,073 samples, 0.25%)</title><rect x="36.5041%" y="4709" width="0.2539%" height="15" fill="rgb(251,55,41)" fg:x="169688986" fg:w="1180073"/><text x="36.7541%" y="4719.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,180,073 samples, 0.25%)</title><rect x="36.5041%" y="4693" width="0.2539%" height="15" fill="rgb(242,34,40)" fg:x="169688986" fg:w="1180073"/><text x="36.7541%" y="4703.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,180,073 samples, 0.25%)</title><rect x="36.5041%" y="4677" width="0.2539%" height="15" fill="rgb(215,42,17)" fg:x="169688986" fg:w="1180073"/><text x="36.7541%" y="4687.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,180,073 samples, 0.25%)</title><rect x="36.5041%" y="4661" width="0.2539%" height="15" fill="rgb(207,44,46)" fg:x="169688986" fg:w="1180073"/><text x="36.7541%" y="4671.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,180,073 samples, 0.25%)</title><rect x="36.5041%" y="4645" width="0.2539%" height="15" fill="rgb(211,206,28)" fg:x="169688986" fg:w="1180073"/><text x="36.7541%" y="4655.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,180,073 samples, 0.25%)</title><rect x="36.5041%" y="4629" width="0.2539%" height="15" fill="rgb(237,167,16)" fg:x="169688986" fg:w="1180073"/><text x="36.7541%" y="4639.50"></text></g><g><title>main::benchmark::clear_all_layout_cache (1,180,073 samples, 0.25%)</title><rect x="36.5041%" y="4613" width="0.2539%" height="15" fill="rgb(233,66,6)" fg:x="169688986" fg:w="1180073"/><text x="36.7541%" y="4623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;css_bitvector_compiler::IState&gt;&gt;&gt; (1,180,073 samples, 0.25%)</title><rect x="36.5041%" y="4597" width="0.2539%" height="15" fill="rgb(246,123,29)" fg:x="169688986" fg:w="1180073"/><text x="36.7541%" y="4607.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (594,192 samples, 0.13%)</title><rect x="36.7580%" y="4629" width="0.1278%" height="15" fill="rgb(209,62,40)" fg:x="170869059" fg:w="594192"/><text x="37.0080%" y="4639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (594,192 samples, 0.13%)</title><rect x="36.7580%" y="4613" width="0.1278%" height="15" fill="rgb(218,4,25)" fg:x="170869059" fg:w="594192"/><text x="37.0080%" y="4623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (594,192 samples, 0.13%)</title><rect x="36.7580%" y="4597" width="0.1278%" height="15" fill="rgb(253,91,49)" fg:x="170869059" fg:w="594192"/><text x="37.0080%" y="4607.50"></text></g><g><title>main::benchmark::clear_dirty_flags (1,741,567 samples, 0.37%)</title><rect x="36.7580%" y="4805" width="0.3747%" height="15" fill="rgb(228,155,29)" fg:x="170869059" fg:w="1741567"/><text x="37.0080%" y="4815.50"></text></g><g><title>main::benchmark::clear_dirty_flags (1,741,567 samples, 0.37%)</title><rect x="36.7580%" y="4789" width="0.3747%" height="15" fill="rgb(243,57,37)" fg:x="170869059" fg:w="1741567"/><text x="37.0080%" y="4799.50"></text></g><g><title>main::benchmark::clear_dirty_flags (1,741,567 samples, 0.37%)</title><rect x="36.7580%" y="4773" width="0.3747%" height="15" fill="rgb(244,167,17)" fg:x="170869059" fg:w="1741567"/><text x="37.0080%" y="4783.50"></text></g><g><title>main::benchmark::clear_dirty_flags (1,741,567 samples, 0.37%)</title><rect x="36.7580%" y="4757" width="0.3747%" height="15" fill="rgb(207,181,38)" fg:x="170869059" fg:w="1741567"/><text x="37.0080%" y="4767.50"></text></g><g><title>main::benchmark::clear_dirty_flags (1,741,567 samples, 0.37%)</title><rect x="36.7580%" y="4741" width="0.3747%" height="15" fill="rgb(211,8,23)" fg:x="170869059" fg:w="1741567"/><text x="37.0080%" y="4751.50"></text></g><g><title>main::benchmark::clear_dirty_flags (1,741,567 samples, 0.37%)</title><rect x="36.7580%" y="4725" width="0.3747%" height="15" fill="rgb(235,11,44)" fg:x="170869059" fg:w="1741567"/><text x="37.0080%" y="4735.50"></text></g><g><title>main::benchmark::clear_dirty_flags (1,741,567 samples, 0.37%)</title><rect x="36.7580%" y="4709" width="0.3747%" height="15" fill="rgb(248,18,52)" fg:x="170869059" fg:w="1741567"/><text x="37.0080%" y="4719.50"></text></g><g><title>main::benchmark::clear_dirty_flags (1,741,567 samples, 0.37%)</title><rect x="36.7580%" y="4693" width="0.3747%" height="15" fill="rgb(208,4,7)" fg:x="170869059" fg:w="1741567"/><text x="37.0080%" y="4703.50"></text></g><g><title>main::benchmark::clear_dirty_flags (1,741,567 samples, 0.37%)</title><rect x="36.7580%" y="4677" width="0.3747%" height="15" fill="rgb(240,17,39)" fg:x="170869059" fg:w="1741567"/><text x="37.0080%" y="4687.50"></text></g><g><title>main::benchmark::clear_dirty_flags (1,741,567 samples, 0.37%)</title><rect x="36.7580%" y="4661" width="0.3747%" height="15" fill="rgb(207,170,3)" fg:x="170869059" fg:w="1741567"/><text x="37.0080%" y="4671.50"></text></g><g><title>main::benchmark::clear_dirty_flags (1,741,567 samples, 0.37%)</title><rect x="36.7580%" y="4645" width="0.3747%" height="15" fill="rgb(236,100,52)" fg:x="170869059" fg:w="1741567"/><text x="37.0080%" y="4655.50"></text></g><g><title>main::benchmark::clear_dirty_flags (1,147,375 samples, 0.25%)</title><rect x="36.8858%" y="4629" width="0.2468%" height="15" fill="rgb(246,78,51)" fg:x="171463251" fg:w="1147375"/><text x="37.1358%" y="4639.50"></text></g><g><title>main::benchmark::clear_dirty_flags (1,147,375 samples, 0.25%)</title><rect x="36.8858%" y="4613" width="0.2468%" height="15" fill="rgb(211,17,15)" fg:x="171463251" fg:w="1147375"/><text x="37.1358%" y="4623.50"></text></g><g><title>main::benchmark::clear_dirty_flags (1,147,375 samples, 0.25%)</title><rect x="36.8858%" y="4597" width="0.2468%" height="15" fill="rgb(209,59,46)" fg:x="171463251" fg:w="1147375"/><text x="37.1358%" y="4607.50"></text></g><g><title>main::benchmark::clear_dirty_flags (1,147,375 samples, 0.25%)</title><rect x="36.8858%" y="4581" width="0.2468%" height="15" fill="rgb(210,92,25)" fg:x="171463251" fg:w="1147375"/><text x="37.1358%" y="4591.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,147,375 samples, 0.25%)</title><rect x="36.8858%" y="4565" width="0.2468%" height="15" fill="rgb(238,174,52)" fg:x="171463251" fg:w="1147375"/><text x="37.1358%" y="4575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,147,375 samples, 0.25%)</title><rect x="36.8858%" y="4549" width="0.2468%" height="15" fill="rgb(230,73,7)" fg:x="171463251" fg:w="1147375"/><text x="37.1358%" y="4559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,147,375 samples, 0.25%)</title><rect x="36.8858%" y="4533" width="0.2468%" height="15" fill="rgb(243,124,40)" fg:x="171463251" fg:w="1147375"/><text x="37.1358%" y="4543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,439,625 samples, 0.52%)</title><rect x="37.1326%" y="3333" width="0.5248%" height="15" fill="rgb(244,170,11)" fg:x="172610626" fg:w="2439625"/><text x="37.3826%" y="3343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2,439,625 samples, 0.52%)</title><rect x="37.1326%" y="3317" width="0.5248%" height="15" fill="rgb(207,114,54)" fg:x="172610626" fg:w="2439625"/><text x="37.3826%" y="3327.50"></text></g><g><title>main::benchmark::count_nodes (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4805" width="0.7944%" height="15" fill="rgb(205,42,20)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4789" width="0.7944%" height="15" fill="rgb(230,30,28)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4799.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4773" width="0.7944%" height="15" fill="rgb(205,73,54)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4757" width="0.7944%" height="15" fill="rgb(254,227,23)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4741" width="0.7944%" height="15" fill="rgb(228,202,34)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4751.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4725" width="0.7944%" height="15" fill="rgb(222,225,37)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4735.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4709" width="0.7944%" height="15" fill="rgb(221,14,54)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4719.50"></text></g><g><title>main::benchmark::count_nodes (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4693" width="0.7944%" height="15" fill="rgb(254,102,2)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4677" width="0.7944%" height="15" fill="rgb(232,104,17)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4687.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4661" width="0.7944%" height="15" fill="rgb(250,220,14)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4645" width="0.7944%" height="15" fill="rgb(241,158,9)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4629" width="0.7944%" height="15" fill="rgb(246,9,43)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4639.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4613" width="0.7944%" height="15" fill="rgb(206,73,33)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4623.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4597" width="0.7944%" height="15" fill="rgb(222,79,8)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4607.50"></text></g><g><title>main::benchmark::count_nodes (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4581" width="0.7944%" height="15" fill="rgb(234,8,54)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4565" width="0.7944%" height="15" fill="rgb(209,134,38)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4575.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4549" width="0.7944%" height="15" fill="rgb(230,127,29)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4533" width="0.7944%" height="15" fill="rgb(242,44,41)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4517" width="0.7944%" height="15" fill="rgb(222,56,43)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4527.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4501" width="0.7944%" height="15" fill="rgb(238,39,47)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4485" width="0.7944%" height="15" fill="rgb(226,79,43)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4495.50"></text></g><g><title>main::benchmark::count_nodes (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4469" width="0.7944%" height="15" fill="rgb(242,105,53)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4453" width="0.7944%" height="15" fill="rgb(251,132,46)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4463.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4437" width="0.7944%" height="15" fill="rgb(231,77,14)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4421" width="0.7944%" height="15" fill="rgb(240,135,9)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4405" width="0.7944%" height="15" fill="rgb(248,109,14)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4415.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4389" width="0.7944%" height="15" fill="rgb(227,146,52)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4399.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4373" width="0.7944%" height="15" fill="rgb(232,54,3)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4383.50"></text></g><g><title>main::benchmark::count_nodes (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4357" width="0.7944%" height="15" fill="rgb(229,201,43)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4341" width="0.7944%" height="15" fill="rgb(252,161,33)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4351.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4325" width="0.7944%" height="15" fill="rgb(226,146,40)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4309" width="0.7944%" height="15" fill="rgb(219,47,25)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4293" width="0.7944%" height="15" fill="rgb(250,135,13)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4303.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4277" width="0.7944%" height="15" fill="rgb(219,229,18)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4287.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4261" width="0.7944%" height="15" fill="rgb(217,152,27)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4271.50"></text></g><g><title>main::benchmark::count_nodes (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4245" width="0.7944%" height="15" fill="rgb(225,71,47)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4229" width="0.7944%" height="15" fill="rgb(220,139,14)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4239.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4213" width="0.7944%" height="15" fill="rgb(247,54,32)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4197" width="0.7944%" height="15" fill="rgb(252,131,39)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4207.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4181" width="0.7944%" height="15" fill="rgb(210,108,39)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4191.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4165" width="0.7944%" height="15" fill="rgb(205,23,29)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4175.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4149" width="0.7944%" height="15" fill="rgb(246,139,46)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4159.50"></text></g><g><title>main::benchmark::count_nodes (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4133" width="0.7944%" height="15" fill="rgb(250,81,26)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4117" width="0.7944%" height="15" fill="rgb(214,104,7)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4127.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4101" width="0.7944%" height="15" fill="rgb(233,189,8)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4111.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4085" width="0.7944%" height="15" fill="rgb(228,141,17)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4095.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4069" width="0.7944%" height="15" fill="rgb(247,157,1)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4079.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4053" width="0.7944%" height="15" fill="rgb(249,225,5)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4063.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4037" width="0.7944%" height="15" fill="rgb(242,55,13)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4047.50"></text></g><g><title>main::benchmark::count_nodes (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4021" width="0.7944%" height="15" fill="rgb(230,49,50)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4031.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="4005" width="0.7944%" height="15" fill="rgb(241,111,38)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="4015.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3989" width="0.7944%" height="15" fill="rgb(252,155,4)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3999.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3973" width="0.7944%" height="15" fill="rgb(212,69,32)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3983.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3957" width="0.7944%" height="15" fill="rgb(243,107,47)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3967.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3941" width="0.7944%" height="15" fill="rgb(247,130,12)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3951.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3925" width="0.7944%" height="15" fill="rgb(233,74,16)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3935.50"></text></g><g><title>main::benchmark::count_nodes (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3909" width="0.7944%" height="15" fill="rgb(208,58,18)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3893" width="0.7944%" height="15" fill="rgb(242,225,1)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3903.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3877" width="0.7944%" height="15" fill="rgb(249,39,40)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3887.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3861" width="0.7944%" height="15" fill="rgb(207,72,44)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3871.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3845" width="0.7944%" height="15" fill="rgb(215,193,12)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3855.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3829" width="0.7944%" height="15" fill="rgb(248,41,39)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3839.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3813" width="0.7944%" height="15" fill="rgb(253,85,4)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3823.50"></text></g><g><title>main::benchmark::count_nodes (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3797" width="0.7944%" height="15" fill="rgb(243,70,31)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3807.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3781" width="0.7944%" height="15" fill="rgb(253,195,26)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3791.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3765" width="0.7944%" height="15" fill="rgb(243,42,11)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3749" width="0.7944%" height="15" fill="rgb(239,66,17)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3759.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3733" width="0.7944%" height="15" fill="rgb(217,132,21)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3743.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3717" width="0.7944%" height="15" fill="rgb(252,202,21)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3727.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3701" width="0.7944%" height="15" fill="rgb(233,98,36)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3711.50"></text></g><g><title>main::benchmark::count_nodes (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3685" width="0.7944%" height="15" fill="rgb(216,153,54)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3669" width="0.7944%" height="15" fill="rgb(250,99,7)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3679.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3653" width="0.7944%" height="15" fill="rgb(207,56,50)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3637" width="0.7944%" height="15" fill="rgb(244,61,34)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3647.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3621" width="0.7944%" height="15" fill="rgb(241,50,38)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3631.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3605" width="0.7944%" height="15" fill="rgb(212,166,30)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3615.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3589" width="0.7944%" height="15" fill="rgb(249,127,32)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3599.50"></text></g><g><title>main::benchmark::count_nodes (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3573" width="0.7944%" height="15" fill="rgb(209,103,0)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3557" width="0.7944%" height="15" fill="rgb(238,209,51)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3567.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3541" width="0.7944%" height="15" fill="rgb(237,56,23)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3551.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3525" width="0.7944%" height="15" fill="rgb(215,153,46)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3535.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3509" width="0.7944%" height="15" fill="rgb(224,49,31)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3519.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3493" width="0.7944%" height="15" fill="rgb(250,18,42)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3503.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3477" width="0.7944%" height="15" fill="rgb(215,176,39)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3487.50"></text></g><g><title>main::benchmark::count_nodes (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3461" width="0.7944%" height="15" fill="rgb(223,77,29)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3445" width="0.7944%" height="15" fill="rgb(234,94,52)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3455.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3429" width="0.7944%" height="15" fill="rgb(220,154,50)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3439.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3413" width="0.7944%" height="15" fill="rgb(212,11,10)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3423.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3397" width="0.7944%" height="15" fill="rgb(205,166,19)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3407.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3381" width="0.7944%" height="15" fill="rgb(244,198,16)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3391.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3365" width="0.7944%" height="15" fill="rgb(219,69,12)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3375.50"></text></g><g><title>main::benchmark::count_nodes (3,692,583 samples, 0.79%)</title><rect x="37.1326%" y="3349" width="0.7944%" height="15" fill="rgb(245,30,7)" fg:x="172610626" fg:w="3692583"/><text x="37.3826%" y="3359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,252,958 samples, 0.27%)</title><rect x="37.6574%" y="3333" width="0.2695%" height="15" fill="rgb(218,221,48)" fg:x="175050251" fg:w="1252958"/><text x="37.9074%" y="3343.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,252,958 samples, 0.27%)</title><rect x="37.6574%" y="3317" width="0.2695%" height="15" fill="rgb(216,66,15)" fg:x="175050251" fg:w="1252958"/><text x="37.9074%" y="3327.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,252,958 samples, 0.27%)</title><rect x="37.6574%" y="3301" width="0.2695%" height="15" fill="rgb(226,122,50)" fg:x="175050251" fg:w="1252958"/><text x="37.9074%" y="3311.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,252,958 samples, 0.27%)</title><rect x="37.6574%" y="3285" width="0.2695%" height="15" fill="rgb(239,156,16)" fg:x="175050251" fg:w="1252958"/><text x="37.9074%" y="3295.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,252,958 samples, 0.27%)</title><rect x="37.6574%" y="3269" width="0.2695%" height="15" fill="rgb(224,27,38)" fg:x="175050251" fg:w="1252958"/><text x="37.9074%" y="3279.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,252,958 samples, 0.27%)</title><rect x="37.6574%" y="3253" width="0.2695%" height="15" fill="rgb(224,39,27)" fg:x="175050251" fg:w="1252958"/><text x="37.9074%" y="3263.50"></text></g><g><title>main::benchmark::count_nodes (1,252,958 samples, 0.27%)</title><rect x="37.6574%" y="3237" width="0.2695%" height="15" fill="rgb(215,92,29)" fg:x="175050251" fg:w="1252958"/><text x="37.9074%" y="3247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,252,958 samples, 0.27%)</title><rect x="37.6574%" y="3221" width="0.2695%" height="15" fill="rgb(207,159,16)" fg:x="175050251" fg:w="1252958"/><text x="37.9074%" y="3231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,252,958 samples, 0.27%)</title><rect x="37.6574%" y="3205" width="0.2695%" height="15" fill="rgb(238,163,47)" fg:x="175050251" fg:w="1252958"/><text x="37.9074%" y="3215.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (1,167,992 samples, 0.25%)</title><rect x="37.9270%" y="4741" width="0.2513%" height="15" fill="rgb(219,91,49)" fg:x="176303209" fg:w="1167992"/><text x="38.1770%" y="4751.50"></text></g><g><title>main::benchmark::matches_id_id (1,167,992 samples, 0.25%)</title><rect x="37.9270%" y="4725" width="0.2513%" height="15" fill="rgb(227,167,31)" fg:x="176303209" fg:w="1167992"/><text x="38.1770%" y="4735.50"></text></g><g><title>main::benchmark::get_node_id_id (1,167,992 samples, 0.25%)</title><rect x="37.9270%" y="4709" width="0.2513%" height="15" fill="rgb(234,80,54)" fg:x="176303209" fg:w="1167992"/><text x="38.1770%" y="4719.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1,167,992 samples, 0.25%)</title><rect x="37.9270%" y="4693" width="0.2513%" height="15" fill="rgb(212,114,2)" fg:x="176303209" fg:w="1167992"/><text x="38.1770%" y="4703.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (1,167,992 samples, 0.25%)</title><rect x="37.9270%" y="4677" width="0.2513%" height="15" fill="rgb(234,50,24)" fg:x="176303209" fg:w="1167992"/><text x="38.1770%" y="4687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,167,992 samples, 0.25%)</title><rect x="37.9270%" y="4661" width="0.2513%" height="15" fill="rgb(221,68,8)" fg:x="176303209" fg:w="1167992"/><text x="38.1770%" y="4671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,167,992 samples, 0.25%)</title><rect x="37.9270%" y="4645" width="0.2513%" height="15" fill="rgb(254,180,31)" fg:x="176303209" fg:w="1167992"/><text x="38.1770%" y="4655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,167,992 samples, 0.25%)</title><rect x="37.9270%" y="4629" width="0.2513%" height="15" fill="rgb(247,130,50)" fg:x="176303209" fg:w="1167992"/><text x="38.1770%" y="4639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,167,992 samples, 0.25%)</title><rect x="37.9270%" y="4613" width="0.2513%" height="15" fill="rgb(211,109,4)" fg:x="176303209" fg:w="1167992"/><text x="38.1770%" y="4623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,167,992 samples, 0.25%)</title><rect x="37.9270%" y="4597" width="0.2513%" height="15" fill="rgb(238,50,21)" fg:x="176303209" fg:w="1167992"/><text x="38.1770%" y="4607.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,167,992 samples, 0.25%)</title><rect x="37.9270%" y="4581" width="0.2513%" height="15" fill="rgb(225,57,45)" fg:x="176303209" fg:w="1167992"/><text x="38.1770%" y="4591.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load (1,167,992 samples, 0.25%)</title><rect x="37.9270%" y="4565" width="0.2513%" height="15" fill="rgb(209,196,50)" fg:x="176303209" fg:w="1167992"/><text x="38.1770%" y="4575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1,167,992 samples, 0.25%)</title><rect x="37.9270%" y="4549" width="0.2513%" height="15" fill="rgb(242,140,13)" fg:x="176303209" fg:w="1167992"/><text x="38.1770%" y="4559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,167,992 samples, 0.25%)</title><rect x="37.9270%" y="4533" width="0.2513%" height="15" fill="rgb(217,111,7)" fg:x="176303209" fg:w="1167992"/><text x="38.1770%" y="4543.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (1,172,516 samples, 0.25%)</title><rect x="38.4330%" y="4693" width="0.2522%" height="15" fill="rgb(253,193,51)" fg:x="178655584" fg:w="1172516"/><text x="38.6830%" y="4703.50"></text></g><g><title>css_bitvector_compiler::BitVector::with_capacity (1,001,454 samples, 0.22%)</title><rect x="38.6853%" y="4693" width="0.2154%" height="15" fill="rgb(252,70,29)" fg:x="179828100" fg:w="1001454"/><text x="38.9353%" y="4703.50"></text></g><g><title>alloc::vec::from_elem (1,001,454 samples, 0.22%)</title><rect x="38.6853%" y="4677" width="0.2154%" height="15" fill="rgb(232,127,12)" fg:x="179828100" fg:w="1001454"/><text x="38.9353%" y="4687.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,001,454 samples, 0.22%)</title><rect x="38.6853%" y="4661" width="0.2154%" height="15" fill="rgb(211,180,21)" fg:x="179828100" fg:w="1001454"/><text x="38.9353%" y="4671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1,001,454 samples, 0.22%)</title><rect x="38.6853%" y="4645" width="0.2154%" height="15" fill="rgb(229,72,13)" fg:x="179828100" fg:w="1001454"/><text x="38.9353%" y="4655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (1,001,454 samples, 0.22%)</title><rect x="38.6853%" y="4629" width="0.2154%" height="15" fill="rgb(240,211,49)" fg:x="179828100" fg:w="1001454"/><text x="38.9353%" y="4639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,001,454 samples, 0.22%)</title><rect x="38.6853%" y="4613" width="0.2154%" height="15" fill="rgb(219,149,40)" fg:x="179828100" fg:w="1001454"/><text x="38.9353%" y="4623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1,001,454 samples, 0.22%)</title><rect x="38.6853%" y="4597" width="0.2154%" height="15" fill="rgb(210,127,46)" fg:x="179828100" fg:w="1001454"/><text x="38.9353%" y="4607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,001,454 samples, 0.22%)</title><rect x="38.6853%" y="4581" width="0.2154%" height="15" fill="rgb(220,106,7)" fg:x="179828100" fg:w="1001454"/><text x="38.9353%" y="4591.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1,001,454 samples, 0.22%)</title><rect x="38.6853%" y="4565" width="0.2154%" height="15" fill="rgb(249,31,22)" fg:x="179828100" fg:w="1001454"/><text x="38.9353%" y="4575.50"></text></g><g><title>__libc_calloc (1,001,454 samples, 0.22%)</title><rect x="38.6853%" y="4549" width="0.2154%" height="15" fill="rgb(253,1,49)" fg:x="179828100" fg:w="1001454"/><text x="38.9353%" y="4559.50"></text></g><g><title>main::benchmark::matches_class_id (1,108,046 samples, 0.24%)</title><rect x="38.9007%" y="4693" width="0.2384%" height="15" fill="rgb(227,144,33)" fg:x="180829554" fg:w="1108046"/><text x="39.1507%" y="4703.50"></text></g><g><title>main::benchmark::node_has_class_id (1,108,046 samples, 0.24%)</title><rect x="38.9007%" y="4677" width="0.2384%" height="15" fill="rgb(249,163,44)" fg:x="180829554" fg:w="1108046"/><text x="39.1507%" y="4687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,108,046 samples, 0.24%)</title><rect x="38.9007%" y="4661" width="0.2384%" height="15" fill="rgb(234,15,39)" fg:x="180829554" fg:w="1108046"/><text x="39.1507%" y="4671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,108,046 samples, 0.24%)</title><rect x="38.9007%" y="4645" width="0.2384%" height="15" fill="rgb(207,66,16)" fg:x="180829554" fg:w="1108046"/><text x="39.1507%" y="4655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,108,046 samples, 0.24%)</title><rect x="38.9007%" y="4629" width="0.2384%" height="15" fill="rgb(233,112,24)" fg:x="180829554" fg:w="1108046"/><text x="39.1507%" y="4639.50"></text></g><g><title>hashbrown::map::make_hash (1,108,046 samples, 0.24%)</title><rect x="38.9007%" y="4613" width="0.2384%" height="15" fill="rgb(230,90,22)" fg:x="180829554" fg:w="1108046"/><text x="39.1507%" y="4623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,108,046 samples, 0.24%)</title><rect x="38.9007%" y="4597" width="0.2384%" height="15" fill="rgb(229,61,13)" fg:x="180829554" fg:w="1108046"/><text x="39.1507%" y="4607.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,108,046 samples, 0.24%)</title><rect x="38.9007%" y="4581" width="0.2384%" height="15" fill="rgb(225,57,24)" fg:x="180829554" fg:w="1108046"/><text x="39.1507%" y="4591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,108,046 samples, 0.24%)</title><rect x="38.9007%" y="4565" width="0.2384%" height="15" fill="rgb(208,169,48)" fg:x="180829554" fg:w="1108046"/><text x="39.1507%" y="4575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,108,046 samples, 0.24%)</title><rect x="38.9007%" y="4549" width="0.2384%" height="15" fill="rgb(244,218,51)" fg:x="180829554" fg:w="1108046"/><text x="39.1507%" y="4559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,108,046 samples, 0.24%)</title><rect x="38.9007%" y="4533" width="0.2384%" height="15" fill="rgb(214,148,10)" fg:x="180829554" fg:w="1108046"/><text x="39.1507%" y="4543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,108,046 samples, 0.24%)</title><rect x="38.9007%" y="4517" width="0.2384%" height="15" fill="rgb(225,174,27)" fg:x="180829554" fg:w="1108046"/><text x="39.1507%" y="4527.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,229,686 samples, 0.26%)</title><rect x="39.1391%" y="4549" width="0.2645%" height="15" fill="rgb(230,96,26)" fg:x="181937600" fg:w="1229686"/><text x="39.3891%" y="4559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,229,686 samples, 0.26%)</title><rect x="39.1391%" y="4533" width="0.2645%" height="15" fill="rgb(232,10,30)" fg:x="181937600" fg:w="1229686"/><text x="39.3891%" y="4543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,229,686 samples, 0.26%)</title><rect x="39.1391%" y="4517" width="0.2645%" height="15" fill="rgb(222,8,50)" fg:x="181937600" fg:w="1229686"/><text x="39.3891%" y="4527.50"></text></g><g><title>hashbrown::map::make_hash (2,271,009 samples, 0.49%)</title><rect x="39.1391%" y="4581" width="0.4885%" height="15" fill="rgb(213,81,27)" fg:x="181937600" fg:w="2271009"/><text x="39.3891%" y="4591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,271,009 samples, 0.49%)</title><rect x="39.1391%" y="4565" width="0.4885%" height="15" fill="rgb(245,50,10)" fg:x="181937600" fg:w="2271009"/><text x="39.3891%" y="4575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,041,323 samples, 0.22%)</title><rect x="39.4036%" y="4549" width="0.2240%" height="15" fill="rgb(216,100,18)" fg:x="183167286" fg:w="1041323"/><text x="39.6536%" y="4559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,041,323 samples, 0.22%)</title><rect x="39.4036%" y="4533" width="0.2240%" height="15" fill="rgb(236,147,54)" fg:x="183167286" fg:w="1041323"/><text x="39.6536%" y="4543.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,041,323 samples, 0.22%)</title><rect x="39.4036%" y="4517" width="0.2240%" height="15" fill="rgb(205,143,26)" fg:x="183167286" fg:w="1041323"/><text x="39.6536%" y="4527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,041,323 samples, 0.22%)</title><rect x="39.4036%" y="4501" width="0.2240%" height="15" fill="rgb(236,26,9)" fg:x="183167286" fg:w="1041323"/><text x="39.6536%" y="4511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,041,323 samples, 0.22%)</title><rect x="39.4036%" y="4485" width="0.2240%" height="15" fill="rgb(221,165,53)" fg:x="183167286" fg:w="1041323"/><text x="39.6536%" y="4495.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,041,323 samples, 0.22%)</title><rect x="39.4036%" y="4469" width="0.2240%" height="15" fill="rgb(214,110,17)" fg:x="183167286" fg:w="1041323"/><text x="39.6536%" y="4479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,041,323 samples, 0.22%)</title><rect x="39.4036%" y="4453" width="0.2240%" height="15" fill="rgb(237,197,12)" fg:x="183167286" fg:w="1041323"/><text x="39.6536%" y="4463.50"></text></g><g><title>core::hash::sip::u8to64_le (1,041,323 samples, 0.22%)</title><rect x="39.4036%" y="4437" width="0.2240%" height="15" fill="rgb(205,84,17)" fg:x="183167286" fg:w="1041323"/><text x="39.6536%" y="4447.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (7,833,600 samples, 1.69%)</title><rect x="38.1782%" y="4709" width="1.6852%" height="15" fill="rgb(237,18,45)" fg:x="177471201" fg:w="7833600"/><text x="38.4282%" y="4719.50"></text></g><g><title>main::benchmark::matches_id_id (3,367,201 samples, 0.72%)</title><rect x="39.1391%" y="4693" width="0.7244%" height="15" fill="rgb(221,87,14)" fg:x="181937600" fg:w="3367201"/><text x="39.3891%" y="4703.50"></text></g><g><title>main::benchmark::get_node_id_id (3,367,201 samples, 0.72%)</title><rect x="39.1391%" y="4677" width="0.7244%" height="15" fill="rgb(238,186,15)" fg:x="181937600" fg:w="3367201"/><text x="39.3891%" y="4687.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (3,367,201 samples, 0.72%)</title><rect x="39.1391%" y="4661" width="0.7244%" height="15" fill="rgb(208,115,11)" fg:x="181937600" fg:w="3367201"/><text x="39.3891%" y="4671.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (3,367,201 samples, 0.72%)</title><rect x="39.1391%" y="4645" width="0.7244%" height="15" fill="rgb(254,175,0)" fg:x="181937600" fg:w="3367201"/><text x="39.3891%" y="4655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3,367,201 samples, 0.72%)</title><rect x="39.1391%" y="4629" width="0.7244%" height="15" fill="rgb(227,24,42)" fg:x="181937600" fg:w="3367201"/><text x="39.3891%" y="4639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3,367,201 samples, 0.72%)</title><rect x="39.1391%" y="4613" width="0.7244%" height="15" fill="rgb(223,211,37)" fg:x="181937600" fg:w="3367201"/><text x="39.3891%" y="4623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3,367,201 samples, 0.72%)</title><rect x="39.1391%" y="4597" width="0.7244%" height="15" fill="rgb(235,49,27)" fg:x="181937600" fg:w="3367201"/><text x="39.3891%" y="4607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,096,192 samples, 0.24%)</title><rect x="39.6276%" y="4581" width="0.2358%" height="15" fill="rgb(254,97,51)" fg:x="184208609" fg:w="1096192"/><text x="39.8776%" y="4591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,096,192 samples, 0.24%)</title><rect x="39.6276%" y="4565" width="0.2358%" height="15" fill="rgb(249,51,40)" fg:x="184208609" fg:w="1096192"/><text x="39.8776%" y="4575.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,096,192 samples, 0.24%)</title><rect x="39.6276%" y="4549" width="0.2358%" height="15" fill="rgb(210,128,45)" fg:x="184208609" fg:w="1096192"/><text x="39.8776%" y="4559.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (1,096,192 samples, 0.24%)</title><rect x="39.6276%" y="4533" width="0.2358%" height="15" fill="rgb(224,137,50)" fg:x="184208609" fg:w="1096192"/><text x="39.8776%" y="4543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,096,192 samples, 0.24%)</title><rect x="39.6276%" y="4517" width="0.2358%" height="15" fill="rgb(242,15,9)" fg:x="184208609" fg:w="1096192"/><text x="39.8776%" y="4527.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (1,206,635 samples, 0.26%)</title><rect x="39.8634%" y="4677" width="0.2596%" height="15" fill="rgb(233,187,41)" fg:x="185304801" fg:w="1206635"/><text x="40.1134%" y="4687.50"></text></g><g><title>main::benchmark::matches_id_id (1,206,635 samples, 0.26%)</title><rect x="39.8634%" y="4661" width="0.2596%" height="15" fill="rgb(227,2,29)" fg:x="185304801" fg:w="1206635"/><text x="40.1134%" y="4671.50"></text></g><g><title>main::benchmark::get_node_id_id (1,206,635 samples, 0.26%)</title><rect x="39.8634%" y="4645" width="0.2596%" height="15" fill="rgb(222,70,3)" fg:x="185304801" fg:w="1206635"/><text x="40.1134%" y="4655.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1,206,635 samples, 0.26%)</title><rect x="39.8634%" y="4629" width="0.2596%" height="15" fill="rgb(213,11,42)" fg:x="185304801" fg:w="1206635"/><text x="40.1134%" y="4639.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (1,206,635 samples, 0.26%)</title><rect x="39.8634%" y="4613" width="0.2596%" height="15" fill="rgb(225,150,9)" fg:x="185304801" fg:w="1206635"/><text x="40.1134%" y="4623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,206,635 samples, 0.26%)</title><rect x="39.8634%" y="4597" width="0.2596%" height="15" fill="rgb(230,162,45)" fg:x="185304801" fg:w="1206635"/><text x="40.1134%" y="4607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,206,635 samples, 0.26%)</title><rect x="39.8634%" y="4581" width="0.2596%" height="15" fill="rgb(222,14,52)" fg:x="185304801" fg:w="1206635"/><text x="40.1134%" y="4591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,206,635 samples, 0.26%)</title><rect x="39.8634%" y="4565" width="0.2596%" height="15" fill="rgb(254,198,14)" fg:x="185304801" fg:w="1206635"/><text x="40.1134%" y="4575.50"></text></g><g><title>hashbrown::map::make_hash (1,206,635 samples, 0.26%)</title><rect x="39.8634%" y="4549" width="0.2596%" height="15" fill="rgb(220,217,30)" fg:x="185304801" fg:w="1206635"/><text x="40.1134%" y="4559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,206,635 samples, 0.26%)</title><rect x="39.8634%" y="4533" width="0.2596%" height="15" fill="rgb(215,146,41)" fg:x="185304801" fg:w="1206635"/><text x="40.1134%" y="4543.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,206,635 samples, 0.26%)</title><rect x="39.8634%" y="4517" width="0.2596%" height="15" fill="rgb(217,27,36)" fg:x="185304801" fg:w="1206635"/><text x="40.1134%" y="4527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,206,635 samples, 0.26%)</title><rect x="39.8634%" y="4501" width="0.2596%" height="15" fill="rgb(219,218,39)" fg:x="185304801" fg:w="1206635"/><text x="40.1134%" y="4511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,206,635 samples, 0.26%)</title><rect x="39.8634%" y="4485" width="0.2596%" height="15" fill="rgb(219,4,42)" fg:x="185304801" fg:w="1206635"/><text x="40.1134%" y="4495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,206,635 samples, 0.26%)</title><rect x="39.8634%" y="4469" width="0.2596%" height="15" fill="rgb(249,119,36)" fg:x="185304801" fg:w="1206635"/><text x="40.1134%" y="4479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,206,635 samples, 0.26%)</title><rect x="39.8634%" y="4453" width="0.2596%" height="15" fill="rgb(209,23,33)" fg:x="185304801" fg:w="1206635"/><text x="40.1134%" y="4463.50"></text></g><g><title>main::benchmark::matches_class_id (1,124,188 samples, 0.24%)</title><rect x="40.1230%" y="4645" width="0.2418%" height="15" fill="rgb(211,10,0)" fg:x="186511436" fg:w="1124188"/><text x="40.3730%" y="4655.50"></text></g><g><title>main::benchmark::node_has_class_id (1,124,188 samples, 0.24%)</title><rect x="40.1230%" y="4629" width="0.2418%" height="15" fill="rgb(208,99,37)" fg:x="186511436" fg:w="1124188"/><text x="40.3730%" y="4639.50"></text></g><g><title>&lt;&amp;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,124,188 samples, 0.24%)</title><rect x="40.1230%" y="4613" width="0.2418%" height="15" fill="rgb(213,132,31)" fg:x="186511436" fg:w="1124188"/><text x="40.3730%" y="4623.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (1,124,188 samples, 0.24%)</title><rect x="40.1230%" y="4597" width="0.2418%" height="15" fill="rgb(243,129,40)" fg:x="186511436" fg:w="1124188"/><text x="40.3730%" y="4607.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (1,124,188 samples, 0.24%)</title><rect x="40.1230%" y="4581" width="0.2418%" height="15" fill="rgb(210,66,33)" fg:x="186511436" fg:w="1124188"/><text x="40.3730%" y="4591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (1,124,188 samples, 0.24%)</title><rect x="40.1230%" y="4565" width="0.2418%" height="15" fill="rgb(209,189,4)" fg:x="186511436" fg:w="1124188"/><text x="40.3730%" y="4575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1,124,188 samples, 0.24%)</title><rect x="40.1230%" y="4549" width="0.2418%" height="15" fill="rgb(214,107,37)" fg:x="186511436" fg:w="1124188"/><text x="40.3730%" y="4559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1,124,188 samples, 0.24%)</title><rect x="40.1230%" y="4533" width="0.2418%" height="15" fill="rgb(245,88,54)" fg:x="186511436" fg:w="1124188"/><text x="40.3730%" y="4543.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1,124,188 samples, 0.24%)</title><rect x="40.1230%" y="4517" width="0.2418%" height="15" fill="rgb(205,146,20)" fg:x="186511436" fg:w="1124188"/><text x="40.3730%" y="4527.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1,124,188 samples, 0.24%)</title><rect x="40.1230%" y="4501" width="0.2418%" height="15" fill="rgb(220,161,25)" fg:x="186511436" fg:w="1124188"/><text x="40.3730%" y="4511.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load_aligned (1,124,188 samples, 0.24%)</title><rect x="40.1230%" y="4485" width="0.2418%" height="15" fill="rgb(215,152,15)" fg:x="186511436" fg:w="1124188"/><text x="40.3730%" y="4495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1,124,188 samples, 0.24%)</title><rect x="40.1230%" y="4469" width="0.2418%" height="15" fill="rgb(233,192,44)" fg:x="186511436" fg:w="1124188"/><text x="40.3730%" y="4479.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (2,105,496 samples, 0.45%)</title><rect x="40.1230%" y="4661" width="0.4529%" height="15" fill="rgb(240,170,46)" fg:x="186511436" fg:w="2105496"/><text x="40.3730%" y="4671.50"></text></g><g><title>main::benchmark::matches_id_id (981,308 samples, 0.21%)</title><rect x="40.3649%" y="4645" width="0.2111%" height="15" fill="rgb(207,104,33)" fg:x="187635624" fg:w="981308"/><text x="40.6149%" y="4655.50"></text></g><g><title>main::benchmark::get_node_id_id (981,308 samples, 0.21%)</title><rect x="40.3649%" y="4629" width="0.2111%" height="15" fill="rgb(219,21,39)" fg:x="187635624" fg:w="981308"/><text x="40.6149%" y="4639.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (981,308 samples, 0.21%)</title><rect x="40.3649%" y="4613" width="0.2111%" height="15" fill="rgb(214,133,29)" fg:x="187635624" fg:w="981308"/><text x="40.6149%" y="4623.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (981,308 samples, 0.21%)</title><rect x="40.3649%" y="4597" width="0.2111%" height="15" fill="rgb(226,93,6)" fg:x="187635624" fg:w="981308"/><text x="40.6149%" y="4607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (981,308 samples, 0.21%)</title><rect x="40.3649%" y="4581" width="0.2111%" height="15" fill="rgb(252,222,34)" fg:x="187635624" fg:w="981308"/><text x="40.6149%" y="4591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (981,308 samples, 0.21%)</title><rect x="40.3649%" y="4565" width="0.2111%" height="15" fill="rgb(252,92,48)" fg:x="187635624" fg:w="981308"/><text x="40.6149%" y="4575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (981,308 samples, 0.21%)</title><rect x="40.3649%" y="4549" width="0.2111%" height="15" fill="rgb(245,223,24)" fg:x="187635624" fg:w="981308"/><text x="40.6149%" y="4559.50"></text></g><g><title>hashbrown::map::make_hash (981,308 samples, 0.21%)</title><rect x="40.3649%" y="4533" width="0.2111%" height="15" fill="rgb(205,176,3)" fg:x="187635624" fg:w="981308"/><text x="40.6149%" y="4543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (981,308 samples, 0.21%)</title><rect x="40.3649%" y="4517" width="0.2111%" height="15" fill="rgb(235,151,15)" fg:x="187635624" fg:w="981308"/><text x="40.6149%" y="4527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (981,308 samples, 0.21%)</title><rect x="40.3649%" y="4501" width="0.2111%" height="15" fill="rgb(237,209,11)" fg:x="187635624" fg:w="981308"/><text x="40.6149%" y="4511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (981,308 samples, 0.21%)</title><rect x="40.3649%" y="4485" width="0.2111%" height="15" fill="rgb(243,227,24)" fg:x="187635624" fg:w="981308"/><text x="40.6149%" y="4495.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (981,308 samples, 0.21%)</title><rect x="40.3649%" y="4469" width="0.2111%" height="15" fill="rgb(239,193,16)" fg:x="187635624" fg:w="981308"/><text x="40.6149%" y="4479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (981,308 samples, 0.21%)</title><rect x="40.3649%" y="4453" width="0.2111%" height="15" fill="rgb(231,27,9)" fg:x="187635624" fg:w="981308"/><text x="40.6149%" y="4463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (981,308 samples, 0.21%)</title><rect x="40.3649%" y="4437" width="0.2111%" height="15" fill="rgb(219,169,10)" fg:x="187635624" fg:w="981308"/><text x="40.6149%" y="4447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (981,308 samples, 0.21%)</title><rect x="40.3649%" y="4421" width="0.2111%" height="15" fill="rgb(244,229,43)" fg:x="187635624" fg:w="981308"/><text x="40.6149%" y="4431.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,134,027 samples, 0.24%)</title><rect x="40.5760%" y="4645" width="0.2440%" height="15" fill="rgb(254,38,20)" fg:x="188616932" fg:w="1134027"/><text x="40.8260%" y="4655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,134,027 samples, 0.24%)</title><rect x="40.5760%" y="4629" width="0.2440%" height="15" fill="rgb(250,47,30)" fg:x="188616932" fg:w="1134027"/><text x="40.8260%" y="4639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,134,027 samples, 0.24%)</title><rect x="40.5760%" y="4613" width="0.2440%" height="15" fill="rgb(224,124,36)" fg:x="188616932" fg:w="1134027"/><text x="40.8260%" y="4623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,134,027 samples, 0.24%)</title><rect x="40.5760%" y="4597" width="0.2440%" height="15" fill="rgb(246,68,51)" fg:x="188616932" fg:w="1134027"/><text x="40.8260%" y="4607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,134,027 samples, 0.24%)</title><rect x="40.5760%" y="4581" width="0.2440%" height="15" fill="rgb(253,43,49)" fg:x="188616932" fg:w="1134027"/><text x="40.8260%" y="4591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,134,027 samples, 0.24%)</title><rect x="40.5760%" y="4565" width="0.2440%" height="15" fill="rgb(219,54,36)" fg:x="188616932" fg:w="1134027"/><text x="40.8260%" y="4575.50"></text></g><g><title>alloc::alloc::dealloc (1,134,027 samples, 0.24%)</title><rect x="40.5760%" y="4549" width="0.2440%" height="15" fill="rgb(227,133,34)" fg:x="188616932" fg:w="1134027"/><text x="40.8260%" y="4559.50"></text></g><g><title>main::benchmark::matches_class_id (1,084,994 samples, 0.23%)</title><rect x="41.3311%" y="4629" width="0.2334%" height="15" fill="rgb(247,227,15)" fg:x="192127164" fg:w="1084994"/><text x="41.5811%" y="4639.50"></text></g><g><title>main::benchmark::node_has_class_id (1,084,994 samples, 0.23%)</title><rect x="41.3311%" y="4613" width="0.2334%" height="15" fill="rgb(229,96,14)" fg:x="192127164" fg:w="1084994"/><text x="41.5811%" y="4623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,084,994 samples, 0.23%)</title><rect x="41.3311%" y="4597" width="0.2334%" height="15" fill="rgb(220,79,17)" fg:x="192127164" fg:w="1084994"/><text x="41.5811%" y="4607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,084,994 samples, 0.23%)</title><rect x="41.3311%" y="4581" width="0.2334%" height="15" fill="rgb(205,131,53)" fg:x="192127164" fg:w="1084994"/><text x="41.5811%" y="4591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,084,994 samples, 0.23%)</title><rect x="41.3311%" y="4565" width="0.2334%" height="15" fill="rgb(209,50,29)" fg:x="192127164" fg:w="1084994"/><text x="41.5811%" y="4575.50"></text></g><g><title>hashbrown::map::make_hash (1,084,994 samples, 0.23%)</title><rect x="41.3311%" y="4549" width="0.2334%" height="15" fill="rgb(245,86,46)" fg:x="192127164" fg:w="1084994"/><text x="41.5811%" y="4559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,084,994 samples, 0.23%)</title><rect x="41.3311%" y="4533" width="0.2334%" height="15" fill="rgb(235,66,46)" fg:x="192127164" fg:w="1084994"/><text x="41.5811%" y="4543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,084,994 samples, 0.23%)</title><rect x="41.3311%" y="4517" width="0.2334%" height="15" fill="rgb(232,148,31)" fg:x="192127164" fg:w="1084994"/><text x="41.5811%" y="4527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,084,994 samples, 0.23%)</title><rect x="41.3311%" y="4501" width="0.2334%" height="15" fill="rgb(217,149,8)" fg:x="192127164" fg:w="1084994"/><text x="41.5811%" y="4511.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,084,994 samples, 0.23%)</title><rect x="41.3311%" y="4485" width="0.2334%" height="15" fill="rgb(209,183,11)" fg:x="192127164" fg:w="1084994"/><text x="41.5811%" y="4495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,084,994 samples, 0.23%)</title><rect x="41.3311%" y="4469" width="0.2334%" height="15" fill="rgb(208,55,20)" fg:x="192127164" fg:w="1084994"/><text x="41.5811%" y="4479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,084,994 samples, 0.23%)</title><rect x="41.3311%" y="4453" width="0.2334%" height="15" fill="rgb(218,39,14)" fg:x="192127164" fg:w="1084994"/><text x="41.5811%" y="4463.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,084,994 samples, 0.23%)</title><rect x="41.3311%" y="4437" width="0.2334%" height="15" fill="rgb(216,169,33)" fg:x="192127164" fg:w="1084994"/><text x="41.5811%" y="4447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,084,994 samples, 0.23%)</title><rect x="41.3311%" y="4421" width="0.2334%" height="15" fill="rgb(233,80,24)" fg:x="192127164" fg:w="1084994"/><text x="41.5811%" y="4431.50"></text></g><g><title>core::hash::sip::u8to64_le (1,084,994 samples, 0.23%)</title><rect x="41.3311%" y="4405" width="0.2334%" height="15" fill="rgb(213,179,31)" fg:x="192127164" fg:w="1084994"/><text x="41.5811%" y="4415.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (4,386,699 samples, 0.94%)</title><rect x="40.8199%" y="4645" width="0.9437%" height="15" fill="rgb(209,19,5)" fg:x="189750959" fg:w="4386699"/><text x="41.0699%" y="4655.50"></text></g><g><title>main::benchmark::matches_id_id (925,500 samples, 0.20%)</title><rect x="41.5645%" y="4629" width="0.1991%" height="15" fill="rgb(219,18,35)" fg:x="193212158" fg:w="925500"/><text x="41.8145%" y="4639.50"></text></g><g><title>main::benchmark::get_node_id_id (925,500 samples, 0.20%)</title><rect x="41.5645%" y="4613" width="0.1991%" height="15" fill="rgb(209,169,16)" fg:x="193212158" fg:w="925500"/><text x="41.8145%" y="4623.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (925,500 samples, 0.20%)</title><rect x="41.5645%" y="4597" width="0.1991%" height="15" fill="rgb(245,90,51)" fg:x="193212158" fg:w="925500"/><text x="41.8145%" y="4607.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (925,500 samples, 0.20%)</title><rect x="41.5645%" y="4581" width="0.1991%" height="15" fill="rgb(220,99,45)" fg:x="193212158" fg:w="925500"/><text x="41.8145%" y="4591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (925,500 samples, 0.20%)</title><rect x="41.5645%" y="4565" width="0.1991%" height="15" fill="rgb(249,89,25)" fg:x="193212158" fg:w="925500"/><text x="41.8145%" y="4575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (925,500 samples, 0.20%)</title><rect x="41.5645%" y="4549" width="0.1991%" height="15" fill="rgb(239,193,0)" fg:x="193212158" fg:w="925500"/><text x="41.8145%" y="4559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (925,500 samples, 0.20%)</title><rect x="41.5645%" y="4533" width="0.1991%" height="15" fill="rgb(231,126,1)" fg:x="193212158" fg:w="925500"/><text x="41.8145%" y="4543.50"></text></g><g><title>hashbrown::map::make_hash (925,500 samples, 0.20%)</title><rect x="41.5645%" y="4517" width="0.1991%" height="15" fill="rgb(243,166,3)" fg:x="193212158" fg:w="925500"/><text x="41.8145%" y="4527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (925,500 samples, 0.20%)</title><rect x="41.5645%" y="4501" width="0.1991%" height="15" fill="rgb(223,22,34)" fg:x="193212158" fg:w="925500"/><text x="41.8145%" y="4511.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (925,500 samples, 0.20%)</title><rect x="41.5645%" y="4485" width="0.1991%" height="15" fill="rgb(251,52,51)" fg:x="193212158" fg:w="925500"/><text x="41.8145%" y="4495.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (925,500 samples, 0.20%)</title><rect x="41.5645%" y="4469" width="0.1991%" height="15" fill="rgb(221,165,28)" fg:x="193212158" fg:w="925500"/><text x="41.8145%" y="4479.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (925,500 samples, 0.20%)</title><rect x="41.5645%" y="4453" width="0.1991%" height="15" fill="rgb(218,121,47)" fg:x="193212158" fg:w="925500"/><text x="41.8145%" y="4463.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (925,500 samples, 0.20%)</title><rect x="41.5645%" y="4437" width="0.1991%" height="15" fill="rgb(209,120,9)" fg:x="193212158" fg:w="925500"/><text x="41.8145%" y="4447.50"></text></g><g><title>alloc::string::String::as_str (977,241 samples, 0.21%)</title><rect x="42.0023%" y="4581" width="0.2102%" height="15" fill="rgb(236,68,12)" fg:x="195247336" fg:w="977241"/><text x="42.2523%" y="4591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (977,241 samples, 0.21%)</title><rect x="42.0023%" y="4565" width="0.2102%" height="15" fill="rgb(225,194,26)" fg:x="195247336" fg:w="977241"/><text x="42.2523%" y="4575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (977,241 samples, 0.21%)</title><rect x="42.0023%" y="4549" width="0.2102%" height="15" fill="rgb(231,84,39)" fg:x="195247336" fg:w="977241"/><text x="42.2523%" y="4559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (977,241 samples, 0.21%)</title><rect x="42.0023%" y="4533" width="0.2102%" height="15" fill="rgb(210,11,45)" fg:x="195247336" fg:w="977241"/><text x="42.2523%" y="4543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (977,241 samples, 0.21%)</title><rect x="42.0023%" y="4517" width="0.2102%" height="15" fill="rgb(224,54,52)" fg:x="195247336" fg:w="977241"/><text x="42.2523%" y="4527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (977,241 samples, 0.21%)</title><rect x="42.0023%" y="4501" width="0.2102%" height="15" fill="rgb(238,102,14)" fg:x="195247336" fg:w="977241"/><text x="42.2523%" y="4511.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,100,577 samples, 0.24%)</title><rect x="42.2125%" y="4501" width="0.2368%" height="15" fill="rgb(243,160,52)" fg:x="196224577" fg:w="1100577"/><text x="42.4625%" y="4511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,100,577 samples, 0.24%)</title><rect x="42.2125%" y="4485" width="0.2368%" height="15" fill="rgb(216,114,19)" fg:x="196224577" fg:w="1100577"/><text x="42.4625%" y="4495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,100,577 samples, 0.24%)</title><rect x="42.2125%" y="4469" width="0.2368%" height="15" fill="rgb(244,166,37)" fg:x="196224577" fg:w="1100577"/><text x="42.4625%" y="4479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,100,577 samples, 0.24%)</title><rect x="42.2125%" y="4453" width="0.2368%" height="15" fill="rgb(246,29,44)" fg:x="196224577" fg:w="1100577"/><text x="42.4625%" y="4463.50"></text></g><g><title>hashbrown::map::make_hash (2,221,431 samples, 0.48%)</title><rect x="42.2125%" y="4533" width="0.4779%" height="15" fill="rgb(215,56,53)" fg:x="196224577" fg:w="2221431"/><text x="42.4625%" y="4543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,221,431 samples, 0.48%)</title><rect x="42.2125%" y="4517" width="0.4779%" height="15" fill="rgb(217,60,2)" fg:x="196224577" fg:w="2221431"/><text x="42.4625%" y="4527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,120,854 samples, 0.24%)</title><rect x="42.4493%" y="4501" width="0.2411%" height="15" fill="rgb(207,26,24)" fg:x="197325154" fg:w="1120854"/><text x="42.6993%" y="4511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,120,854 samples, 0.24%)</title><rect x="42.4493%" y="4485" width="0.2411%" height="15" fill="rgb(252,210,15)" fg:x="197325154" fg:w="1120854"/><text x="42.6993%" y="4495.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,120,854 samples, 0.24%)</title><rect x="42.4493%" y="4469" width="0.2411%" height="15" fill="rgb(253,209,26)" fg:x="197325154" fg:w="1120854"/><text x="42.6993%" y="4479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,120,854 samples, 0.24%)</title><rect x="42.4493%" y="4453" width="0.2411%" height="15" fill="rgb(238,170,14)" fg:x="197325154" fg:w="1120854"/><text x="42.6993%" y="4463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,120,854 samples, 0.24%)</title><rect x="42.4493%" y="4437" width="0.2411%" height="15" fill="rgb(216,178,15)" fg:x="197325154" fg:w="1120854"/><text x="42.6993%" y="4447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,120,854 samples, 0.24%)</title><rect x="42.4493%" y="4421" width="0.2411%" height="15" fill="rgb(250,197,2)" fg:x="197325154" fg:w="1120854"/><text x="42.6993%" y="4431.50"></text></g><g><title>core::hash::sip::u8to64_le (1,120,854 samples, 0.24%)</title><rect x="42.4493%" y="4405" width="0.2411%" height="15" fill="rgb(212,70,42)" fg:x="197325154" fg:w="1120854"/><text x="42.6993%" y="4415.50"></text></g><g><title>main::benchmark::matches_class_id (5,438,791 samples, 1.17%)</title><rect x="41.7636%" y="4613" width="1.1700%" height="15" fill="rgb(227,213,9)" fg:x="194137658" fg:w="5438791"/><text x="42.0136%" y="4623.50"></text></g><g><title>main::benchmark::node_has_class_id (5,438,791 samples, 1.17%)</title><rect x="41.7636%" y="4597" width="1.1700%" height="15" fill="rgb(245,99,25)" fg:x="194137658" fg:w="5438791"/><text x="42.0136%" y="4607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3,351,872 samples, 0.72%)</title><rect x="42.2125%" y="4581" width="0.7211%" height="15" fill="rgb(250,82,29)" fg:x="196224577" fg:w="3351872"/><text x="42.4625%" y="4591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3,351,872 samples, 0.72%)</title><rect x="42.2125%" y="4565" width="0.7211%" height="15" fill="rgb(241,226,54)" fg:x="196224577" fg:w="3351872"/><text x="42.4625%" y="4575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3,351,872 samples, 0.72%)</title><rect x="42.2125%" y="4549" width="0.7211%" height="15" fill="rgb(221,99,41)" fg:x="196224577" fg:w="3351872"/><text x="42.4625%" y="4559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,130,441 samples, 0.24%)</title><rect x="42.6904%" y="4533" width="0.2432%" height="15" fill="rgb(213,90,21)" fg:x="198446008" fg:w="1130441"/><text x="42.9404%" y="4543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,130,441 samples, 0.24%)</title><rect x="42.6904%" y="4517" width="0.2432%" height="15" fill="rgb(205,208,24)" fg:x="198446008" fg:w="1130441"/><text x="42.9404%" y="4527.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,130,441 samples, 0.24%)</title><rect x="42.6904%" y="4501" width="0.2432%" height="15" fill="rgb(246,31,12)" fg:x="198446008" fg:w="1130441"/><text x="42.9404%" y="4511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1,130,441 samples, 0.24%)</title><rect x="42.6904%" y="4485" width="0.2432%" height="15" fill="rgb(213,154,6)" fg:x="198446008" fg:w="1130441"/><text x="42.9404%" y="4495.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1,130,441 samples, 0.24%)</title><rect x="42.6904%" y="4469" width="0.2432%" height="15" fill="rgb(222,163,29)" fg:x="198446008" fg:w="1130441"/><text x="42.9404%" y="4479.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1,130,441 samples, 0.24%)</title><rect x="42.6904%" y="4453" width="0.2432%" height="15" fill="rgb(227,201,8)" fg:x="198446008" fg:w="1130441"/><text x="42.9404%" y="4463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,130,441 samples, 0.24%)</title><rect x="42.6904%" y="4437" width="0.2432%" height="15" fill="rgb(233,9,32)" fg:x="198446008" fg:w="1130441"/><text x="42.9404%" y="4447.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,130,441 samples, 0.24%)</title><rect x="42.6904%" y="4421" width="0.2432%" height="15" fill="rgb(217,54,24)" fg:x="198446008" fg:w="1130441"/><text x="42.9404%" y="4431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,130,441 samples, 0.24%)</title><rect x="42.6904%" y="4405" width="0.2432%" height="15" fill="rgb(235,192,0)" fg:x="198446008" fg:w="1130441"/><text x="42.9404%" y="4415.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1,130,441 samples, 0.24%)</title><rect x="42.6904%" y="4389" width="0.2432%" height="15" fill="rgb(235,45,9)" fg:x="198446008" fg:w="1130441"/><text x="42.9404%" y="4399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,130,441 samples, 0.24%)</title><rect x="42.6904%" y="4373" width="0.2432%" height="15" fill="rgb(246,42,40)" fg:x="198446008" fg:w="1130441"/><text x="42.9404%" y="4383.50"></text></g><g><title>[libc.so.6] (1,130,441 samples, 0.24%)</title><rect x="42.6904%" y="4357" width="0.2432%" height="15" fill="rgb(248,111,24)" fg:x="198446008" fg:w="1130441"/><text x="42.9404%" y="4367.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,137,592 samples, 0.24%)</title><rect x="42.9336%" y="4469" width="0.2447%" height="15" fill="rgb(249,65,22)" fg:x="199576449" fg:w="1137592"/><text x="43.1836%" y="4479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,137,592 samples, 0.24%)</title><rect x="42.9336%" y="4453" width="0.2447%" height="15" fill="rgb(238,111,51)" fg:x="199576449" fg:w="1137592"/><text x="43.1836%" y="4463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,137,592 samples, 0.24%)</title><rect x="42.9336%" y="4437" width="0.2447%" height="15" fill="rgb(250,118,22)" fg:x="199576449" fg:w="1137592"/><text x="43.1836%" y="4447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,137,592 samples, 0.24%)</title><rect x="42.9336%" y="4421" width="0.2447%" height="15" fill="rgb(234,84,26)" fg:x="199576449" fg:w="1137592"/><text x="43.1836%" y="4431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,137,592 samples, 0.24%)</title><rect x="42.9336%" y="4405" width="0.2447%" height="15" fill="rgb(243,172,12)" fg:x="199576449" fg:w="1137592"/><text x="43.1836%" y="4415.50"></text></g><g><title>hashbrown::map::make_hash (2,241,209 samples, 0.48%)</title><rect x="42.9336%" y="4501" width="0.4821%" height="15" fill="rgb(236,150,49)" fg:x="199576449" fg:w="2241209"/><text x="43.1836%" y="4511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,241,209 samples, 0.48%)</title><rect x="42.9336%" y="4485" width="0.4821%" height="15" fill="rgb(225,197,26)" fg:x="199576449" fg:w="2241209"/><text x="43.1836%" y="4495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,103,617 samples, 0.24%)</title><rect x="43.1783%" y="4469" width="0.2374%" height="15" fill="rgb(214,17,42)" fg:x="200714041" fg:w="1103617"/><text x="43.4283%" y="4479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,103,617 samples, 0.24%)</title><rect x="43.1783%" y="4453" width="0.2374%" height="15" fill="rgb(224,165,40)" fg:x="200714041" fg:w="1103617"/><text x="43.4283%" y="4463.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,103,617 samples, 0.24%)</title><rect x="43.1783%" y="4437" width="0.2374%" height="15" fill="rgb(246,100,4)" fg:x="200714041" fg:w="1103617"/><text x="43.4283%" y="4447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,103,617 samples, 0.24%)</title><rect x="43.1783%" y="4421" width="0.2374%" height="15" fill="rgb(222,103,0)" fg:x="200714041" fg:w="1103617"/><text x="43.4283%" y="4431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,103,617 samples, 0.24%)</title><rect x="43.1783%" y="4405" width="0.2374%" height="15" fill="rgb(227,189,26)" fg:x="200714041" fg:w="1103617"/><text x="43.4283%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,103,617 samples, 0.24%)</title><rect x="43.1783%" y="4389" width="0.2374%" height="15" fill="rgb(214,202,17)" fg:x="200714041" fg:w="1103617"/><text x="43.4283%" y="4399.50"></text></g><g><title>core::hash::sip::u8to64_le (1,103,617 samples, 0.24%)</title><rect x="43.1783%" y="4373" width="0.2374%" height="15" fill="rgb(229,111,3)" fg:x="200714041" fg:w="1103617"/><text x="43.4283%" y="4383.50"></text></g><g><title>main::benchmark::matches_id_id (3,339,011 samples, 0.72%)</title><rect x="42.9336%" y="4613" width="0.7183%" height="15" fill="rgb(229,172,15)" fg:x="199576449" fg:w="3339011"/><text x="43.1836%" y="4623.50"></text></g><g><title>main::benchmark::get_node_id_id (3,339,011 samples, 0.72%)</title><rect x="42.9336%" y="4597" width="0.7183%" height="15" fill="rgb(230,224,35)" fg:x="199576449" fg:w="3339011"/><text x="43.1836%" y="4607.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (3,339,011 samples, 0.72%)</title><rect x="42.9336%" y="4581" width="0.7183%" height="15" fill="rgb(251,141,6)" fg:x="199576449" fg:w="3339011"/><text x="43.1836%" y="4591.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (3,339,011 samples, 0.72%)</title><rect x="42.9336%" y="4565" width="0.7183%" height="15" fill="rgb(225,208,6)" fg:x="199576449" fg:w="3339011"/><text x="43.1836%" y="4575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3,339,011 samples, 0.72%)</title><rect x="42.9336%" y="4549" width="0.7183%" height="15" fill="rgb(246,181,16)" fg:x="199576449" fg:w="3339011"/><text x="43.1836%" y="4559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3,339,011 samples, 0.72%)</title><rect x="42.9336%" y="4533" width="0.7183%" height="15" fill="rgb(227,129,36)" fg:x="199576449" fg:w="3339011"/><text x="43.1836%" y="4543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3,339,011 samples, 0.72%)</title><rect x="42.9336%" y="4517" width="0.7183%" height="15" fill="rgb(248,117,24)" fg:x="199576449" fg:w="3339011"/><text x="43.1836%" y="4527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,097,802 samples, 0.24%)</title><rect x="43.4157%" y="4501" width="0.2362%" height="15" fill="rgb(214,185,35)" fg:x="201817658" fg:w="1097802"/><text x="43.6657%" y="4511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,097,802 samples, 0.24%)</title><rect x="43.4157%" y="4485" width="0.2362%" height="15" fill="rgb(236,150,34)" fg:x="201817658" fg:w="1097802"/><text x="43.6657%" y="4495.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,097,802 samples, 0.24%)</title><rect x="43.4157%" y="4469" width="0.2362%" height="15" fill="rgb(243,228,27)" fg:x="201817658" fg:w="1097802"/><text x="43.6657%" y="4479.50"></text></g><g><title>core::intrinsics::likely (1,097,802 samples, 0.24%)</title><rect x="43.4157%" y="4453" width="0.2362%" height="15" fill="rgb(245,77,44)" fg:x="201817658" fg:w="1097802"/><text x="43.6657%" y="4463.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (9,933,259 samples, 2.14%)</title><rect x="41.7636%" y="4629" width="2.1369%" height="15" fill="rgb(235,214,42)" fg:x="194137658" fg:w="9933259"/><text x="42.0136%" y="4639.50">m..</text></g><g><title>main::benchmark::matches_tag_id (1,155,457 samples, 0.25%)</title><rect x="43.6519%" y="4613" width="0.2486%" height="15" fill="rgb(221,74,3)" fg:x="202915460" fg:w="1155457"/><text x="43.9019%" y="4623.50"></text></g><g><title>main::benchmark::get_node_tag_id (1,155,457 samples, 0.25%)</title><rect x="43.6519%" y="4597" width="0.2486%" height="15" fill="rgb(206,121,29)" fg:x="202915460" fg:w="1155457"/><text x="43.9019%" y="4607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,155,457 samples, 0.25%)</title><rect x="43.6519%" y="4581" width="0.2486%" height="15" fill="rgb(249,131,53)" fg:x="202915460" fg:w="1155457"/><text x="43.9019%" y="4591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,155,457 samples, 0.25%)</title><rect x="43.6519%" y="4565" width="0.2486%" height="15" fill="rgb(236,170,29)" fg:x="202915460" fg:w="1155457"/><text x="43.9019%" y="4575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,155,457 samples, 0.25%)</title><rect x="43.6519%" y="4549" width="0.2486%" height="15" fill="rgb(247,96,15)" fg:x="202915460" fg:w="1155457"/><text x="43.9019%" y="4559.50"></text></g><g><title>hashbrown::map::make_hash (1,155,457 samples, 0.25%)</title><rect x="43.6519%" y="4533" width="0.2486%" height="15" fill="rgb(211,210,7)" fg:x="202915460" fg:w="1155457"/><text x="43.9019%" y="4543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,155,457 samples, 0.25%)</title><rect x="43.6519%" y="4517" width="0.2486%" height="15" fill="rgb(240,88,50)" fg:x="202915460" fg:w="1155457"/><text x="43.9019%" y="4527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,155,457 samples, 0.25%)</title><rect x="43.6519%" y="4501" width="0.2486%" height="15" fill="rgb(209,229,26)" fg:x="202915460" fg:w="1155457"/><text x="43.9019%" y="4511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,155,457 samples, 0.25%)</title><rect x="43.6519%" y="4485" width="0.2486%" height="15" fill="rgb(210,68,23)" fg:x="202915460" fg:w="1155457"/><text x="43.9019%" y="4495.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,155,457 samples, 0.25%)</title><rect x="43.6519%" y="4469" width="0.2486%" height="15" fill="rgb(229,180,13)" fg:x="202915460" fg:w="1155457"/><text x="43.9019%" y="4479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,155,457 samples, 0.25%)</title><rect x="43.6519%" y="4453" width="0.2486%" height="15" fill="rgb(236,53,44)" fg:x="202915460" fg:w="1155457"/><text x="43.9019%" y="4463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,155,457 samples, 0.25%)</title><rect x="43.6519%" y="4437" width="0.2486%" height="15" fill="rgb(244,214,29)" fg:x="202915460" fg:w="1155457"/><text x="43.9019%" y="4447.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,155,457 samples, 0.25%)</title><rect x="43.6519%" y="4421" width="0.2486%" height="15" fill="rgb(220,75,29)" fg:x="202915460" fg:w="1155457"/><text x="43.9019%" y="4431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,155,457 samples, 0.25%)</title><rect x="43.6519%" y="4405" width="0.2486%" height="15" fill="rgb(214,183,37)" fg:x="202915460" fg:w="1155457"/><text x="43.9019%" y="4415.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (1,190,318 samples, 0.26%)</title><rect x="43.9005%" y="4597" width="0.2561%" height="15" fill="rgb(239,117,29)" fg:x="204070917" fg:w="1190318"/><text x="44.1505%" y="4607.50"></text></g><g><title>css_bitvector_compiler::BitVector::with_capacity (2,322,303 samples, 0.50%)</title><rect x="44.1565%" y="4597" width="0.4996%" height="15" fill="rgb(237,171,35)" fg:x="205261235" fg:w="2322303"/><text x="44.4065%" y="4607.50"></text></g><g><title>alloc::vec::from_elem (1,131,797 samples, 0.24%)</title><rect x="44.4126%" y="4581" width="0.2435%" height="15" fill="rgb(229,178,53)" fg:x="206451741" fg:w="1131797"/><text x="44.6626%" y="4591.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,131,797 samples, 0.24%)</title><rect x="44.4126%" y="4565" width="0.2435%" height="15" fill="rgb(210,102,19)" fg:x="206451741" fg:w="1131797"/><text x="44.6626%" y="4575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1,131,797 samples, 0.24%)</title><rect x="44.4126%" y="4549" width="0.2435%" height="15" fill="rgb(235,127,22)" fg:x="206451741" fg:w="1131797"/><text x="44.6626%" y="4559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (1,131,797 samples, 0.24%)</title><rect x="44.4126%" y="4533" width="0.2435%" height="15" fill="rgb(244,31,31)" fg:x="206451741" fg:w="1131797"/><text x="44.6626%" y="4543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,131,797 samples, 0.24%)</title><rect x="44.4126%" y="4517" width="0.2435%" height="15" fill="rgb(231,43,21)" fg:x="206451741" fg:w="1131797"/><text x="44.6626%" y="4527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1,131,797 samples, 0.24%)</title><rect x="44.4126%" y="4501" width="0.2435%" height="15" fill="rgb(217,131,35)" fg:x="206451741" fg:w="1131797"/><text x="44.6626%" y="4511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,131,797 samples, 0.24%)</title><rect x="44.4126%" y="4485" width="0.2435%" height="15" fill="rgb(221,149,4)" fg:x="206451741" fg:w="1131797"/><text x="44.6626%" y="4495.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1,131,797 samples, 0.24%)</title><rect x="44.4126%" y="4469" width="0.2435%" height="15" fill="rgb(232,170,28)" fg:x="206451741" fg:w="1131797"/><text x="44.6626%" y="4479.50"></text></g><g><title>__libc_calloc (1,131,797 samples, 0.24%)</title><rect x="44.4126%" y="4453" width="0.2435%" height="15" fill="rgb(238,56,10)" fg:x="206451741" fg:w="1131797"/><text x="44.6626%" y="4463.50"></text></g><g><title>&lt;&amp;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,137,089 samples, 0.24%)</title><rect x="44.6561%" y="4565" width="0.2446%" height="15" fill="rgb(235,196,14)" fg:x="207583538" fg:w="1137089"/><text x="44.9061%" y="4575.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (1,137,089 samples, 0.24%)</title><rect x="44.6561%" y="4549" width="0.2446%" height="15" fill="rgb(216,45,48)" fg:x="207583538" fg:w="1137089"/><text x="44.9061%" y="4559.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (1,137,089 samples, 0.24%)</title><rect x="44.6561%" y="4533" width="0.2446%" height="15" fill="rgb(238,213,17)" fg:x="207583538" fg:w="1137089"/><text x="44.9061%" y="4543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (1,137,089 samples, 0.24%)</title><rect x="44.6561%" y="4517" width="0.2446%" height="15" fill="rgb(212,13,2)" fg:x="207583538" fg:w="1137089"/><text x="44.9061%" y="4527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1,137,089 samples, 0.24%)</title><rect x="44.6561%" y="4501" width="0.2446%" height="15" fill="rgb(240,114,20)" fg:x="207583538" fg:w="1137089"/><text x="44.9061%" y="4511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1,137,089 samples, 0.24%)</title><rect x="44.6561%" y="4485" width="0.2446%" height="15" fill="rgb(228,41,40)" fg:x="207583538" fg:w="1137089"/><text x="44.9061%" y="4495.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1,137,089 samples, 0.24%)</title><rect x="44.6561%" y="4469" width="0.2446%" height="15" fill="rgb(244,132,35)" fg:x="207583538" fg:w="1137089"/><text x="44.9061%" y="4479.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1,137,089 samples, 0.24%)</title><rect x="44.6561%" y="4453" width="0.2446%" height="15" fill="rgb(253,189,4)" fg:x="207583538" fg:w="1137089"/><text x="44.9061%" y="4463.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load_aligned (1,137,089 samples, 0.24%)</title><rect x="44.6561%" y="4437" width="0.2446%" height="15" fill="rgb(224,37,19)" fg:x="207583538" fg:w="1137089"/><text x="44.9061%" y="4447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1,137,089 samples, 0.24%)</title><rect x="44.6561%" y="4421" width="0.2446%" height="15" fill="rgb(235,223,18)" fg:x="207583538" fg:w="1137089"/><text x="44.9061%" y="4431.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (1,090,567 samples, 0.23%)</title><rect x="44.9007%" y="4485" width="0.2346%" height="15" fill="rgb(235,163,25)" fg:x="208720627" fg:w="1090567"/><text x="45.1507%" y="4495.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1,090,567 samples, 0.23%)</title><rect x="44.9007%" y="4469" width="0.2346%" height="15" fill="rgb(217,145,28)" fg:x="208720627" fg:w="1090567"/><text x="45.1507%" y="4479.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1,090,567 samples, 0.23%)</title><rect x="44.9007%" y="4453" width="0.2346%" height="15" fill="rgb(223,223,32)" fg:x="208720627" fg:w="1090567"/><text x="45.1507%" y="4463.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1,090,567 samples, 0.23%)</title><rect x="44.9007%" y="4437" width="0.2346%" height="15" fill="rgb(227,189,39)" fg:x="208720627" fg:w="1090567"/><text x="45.1507%" y="4447.50"></text></g><g><title>hashbrown::map::make_hash (4,167,364 samples, 0.90%)</title><rect x="44.9007%" y="4517" width="0.8965%" height="15" fill="rgb(248,10,22)" fg:x="208720627" fg:w="4167364"/><text x="45.1507%" y="4527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,167,364 samples, 0.90%)</title><rect x="44.9007%" y="4501" width="0.8965%" height="15" fill="rgb(248,46,39)" fg:x="208720627" fg:w="4167364"/><text x="45.1507%" y="4511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3,076,797 samples, 0.66%)</title><rect x="45.1353%" y="4485" width="0.6619%" height="15" fill="rgb(248,113,48)" fg:x="209811194" fg:w="3076797"/><text x="45.3853%" y="4495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3,076,797 samples, 0.66%)</title><rect x="45.1353%" y="4469" width="0.6619%" height="15" fill="rgb(245,16,25)" fg:x="209811194" fg:w="3076797"/><text x="45.3853%" y="4479.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (3,076,797 samples, 0.66%)</title><rect x="45.1353%" y="4453" width="0.6619%" height="15" fill="rgb(249,152,16)" fg:x="209811194" fg:w="3076797"/><text x="45.3853%" y="4463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3,076,797 samples, 0.66%)</title><rect x="45.1353%" y="4437" width="0.6619%" height="15" fill="rgb(250,16,1)" fg:x="209811194" fg:w="3076797"/><text x="45.3853%" y="4447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3,076,797 samples, 0.66%)</title><rect x="45.1353%" y="4421" width="0.6619%" height="15" fill="rgb(249,138,3)" fg:x="209811194" fg:w="3076797"/><text x="45.3853%" y="4431.50"></text></g><g><title>core::hash::Hasher::write_u8 (3,076,797 samples, 0.66%)</title><rect x="45.1353%" y="4405" width="0.6619%" height="15" fill="rgb(227,71,41)" fg:x="209811194" fg:w="3076797"/><text x="45.3853%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,076,797 samples, 0.66%)</title><rect x="45.1353%" y="4389" width="0.6619%" height="15" fill="rgb(209,184,23)" fg:x="209811194" fg:w="3076797"/><text x="45.3853%" y="4399.50"></text></g><g><title>core::hash::sip::u8to64_le (731,575 samples, 0.16%)</title><rect x="45.6399%" y="4373" width="0.1574%" height="15" fill="rgb(223,215,31)" fg:x="212156416" fg:w="731575"/><text x="45.8899%" y="4383.50"></text></g><g><title>main::benchmark::matches_class_id (6,478,447 samples, 1.39%)</title><rect x="44.6561%" y="4597" width="1.3937%" height="15" fill="rgb(210,146,28)" fg:x="207583538" fg:w="6478447"/><text x="44.9061%" y="4607.50"></text></g><g><title>main::benchmark::node_has_class_id (6,478,447 samples, 1.39%)</title><rect x="44.6561%" y="4581" width="1.3937%" height="15" fill="rgb(209,183,41)" fg:x="207583538" fg:w="6478447"/><text x="44.9061%" y="4591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5,341,358 samples, 1.15%)</title><rect x="44.9007%" y="4565" width="1.1491%" height="15" fill="rgb(209,224,45)" fg:x="208720627" fg:w="5341358"/><text x="45.1507%" y="4575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5,341,358 samples, 1.15%)</title><rect x="44.9007%" y="4549" width="1.1491%" height="15" fill="rgb(224,209,51)" fg:x="208720627" fg:w="5341358"/><text x="45.1507%" y="4559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5,341,358 samples, 1.15%)</title><rect x="44.9007%" y="4533" width="1.1491%" height="15" fill="rgb(223,17,39)" fg:x="208720627" fg:w="5341358"/><text x="45.1507%" y="4543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,173,994 samples, 0.25%)</title><rect x="45.7972%" y="4517" width="0.2526%" height="15" fill="rgb(234,204,37)" fg:x="212887991" fg:w="1173994"/><text x="46.0472%" y="4527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,173,994 samples, 0.25%)</title><rect x="45.7972%" y="4501" width="0.2526%" height="15" fill="rgb(236,120,5)" fg:x="212887991" fg:w="1173994"/><text x="46.0472%" y="4511.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,173,994 samples, 0.25%)</title><rect x="45.7972%" y="4485" width="0.2526%" height="15" fill="rgb(248,97,27)" fg:x="212887991" fg:w="1173994"/><text x="46.0472%" y="4495.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (1,173,994 samples, 0.25%)</title><rect x="45.7972%" y="4469" width="0.2526%" height="15" fill="rgb(240,66,17)" fg:x="212887991" fg:w="1173994"/><text x="46.0472%" y="4479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,173,994 samples, 0.25%)</title><rect x="45.7972%" y="4453" width="0.2526%" height="15" fill="rgb(210,79,3)" fg:x="212887991" fg:w="1173994"/><text x="46.0472%" y="4463.50"></text></g><g><title>main::benchmark::get_string_to_id_map (1,228,521 samples, 0.26%)</title><rect x="46.0498%" y="4533" width="0.2643%" height="15" fill="rgb(214,176,27)" fg:x="214061985" fg:w="1228521"/><text x="46.2998%" y="4543.50"></text></g><g><title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_init (1,228,521 samples, 0.26%)</title><rect x="46.0498%" y="4517" width="0.2643%" height="15" fill="rgb(235,185,3)" fg:x="214061985" fg:w="1228521"/><text x="46.2998%" y="4527.50"></text></g><g><title>std::sync::once_lock::OnceLock&lt;T&gt;::get_or_try_init (1,228,521 samples, 0.26%)</title><rect x="46.0498%" y="4501" width="0.2643%" height="15" fill="rgb(227,24,12)" fg:x="214061985" fg:w="1228521"/><text x="46.2998%" y="4511.50"></text></g><g><title>std::sync::once_lock::OnceLock&lt;T&gt;::get (1,228,521 samples, 0.26%)</title><rect x="46.0498%" y="4485" width="0.2643%" height="15" fill="rgb(252,169,48)" fg:x="214061985" fg:w="1228521"/><text x="46.2998%" y="4495.50"></text></g><g><title>std::sync::once_lock::OnceLock&lt;T&gt;::is_initialized (1,228,521 samples, 0.26%)</title><rect x="46.0498%" y="4469" width="0.2643%" height="15" fill="rgb(212,65,1)" fg:x="214061985" fg:w="1228521"/><text x="46.2998%" y="4479.50"></text></g><g><title>std::sync::poison::once::Once::is_completed (1,228,521 samples, 0.26%)</title><rect x="46.0498%" y="4453" width="0.2643%" height="15" fill="rgb(242,39,24)" fg:x="214061985" fg:w="1228521"/><text x="46.2998%" y="4463.50"></text></g><g><title>std::sys::sync::once::futex::Once::is_completed (1,228,521 samples, 0.26%)</title><rect x="46.0498%" y="4437" width="0.2643%" height="15" fill="rgb(249,32,23)" fg:x="214061985" fg:w="1228521"/><text x="46.2998%" y="4447.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1,228,521 samples, 0.26%)</title><rect x="46.0498%" y="4421" width="0.2643%" height="15" fill="rgb(251,195,23)" fg:x="214061985" fg:w="1228521"/><text x="46.2998%" y="4431.50"></text></g><g><title>core::sync::atomic::atomic_load (1,228,521 samples, 0.26%)</title><rect x="46.0498%" y="4405" width="0.2643%" height="15" fill="rgb(236,174,8)" fg:x="214061985" fg:w="1228521"/><text x="46.2998%" y="4415.50"></text></g><g><title>hashbrown::map::make_hash (1,134,616 samples, 0.24%)</title><rect x="46.3141%" y="4485" width="0.2441%" height="15" fill="rgb(220,197,8)" fg:x="215290506" fg:w="1134616"/><text x="46.5641%" y="4495.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (2,340,041 samples, 0.50%)</title><rect x="46.5582%" y="4437" width="0.5034%" height="15" fill="rgb(240,108,37)" fg:x="216425122" fg:w="2340041"/><text x="46.8082%" y="4447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2,340,041 samples, 0.50%)</title><rect x="46.5582%" y="4421" width="0.5034%" height="15" fill="rgb(232,176,24)" fg:x="216425122" fg:w="2340041"/><text x="46.8082%" y="4431.50"></text></g><g><title>hashbrown::control::tag::Tag::full (1,194,975 samples, 0.26%)</title><rect x="47.0616%" y="4437" width="0.2571%" height="15" fill="rgb(243,35,29)" fg:x="218765163" fg:w="1194975"/><text x="47.3116%" y="4447.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (6,911,861 samples, 1.49%)</title><rect x="46.0498%" y="4565" width="1.4869%" height="15" fill="rgb(210,37,18)" fg:x="214061985" fg:w="6911861"/><text x="46.2998%" y="4575.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (6,911,861 samples, 1.49%)</title><rect x="46.0498%" y="4549" width="1.4869%" height="15" fill="rgb(224,184,40)" fg:x="214061985" fg:w="6911861"/><text x="46.2998%" y="4559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5,683,340 samples, 1.22%)</title><rect x="46.3141%" y="4533" width="1.2226%" height="15" fill="rgb(236,39,29)" fg:x="215290506" fg:w="5683340"/><text x="46.5641%" y="4543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5,683,340 samples, 1.22%)</title><rect x="46.3141%" y="4517" width="1.2226%" height="15" fill="rgb(232,48,39)" fg:x="215290506" fg:w="5683340"/><text x="46.5641%" y="4527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5,683,340 samples, 1.22%)</title><rect x="46.3141%" y="4501" width="1.2226%" height="15" fill="rgb(236,34,42)" fg:x="215290506" fg:w="5683340"/><text x="46.5641%" y="4511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4,548,724 samples, 0.98%)</title><rect x="46.5582%" y="4485" width="0.9785%" height="15" fill="rgb(243,106,37)" fg:x="216425122" fg:w="4548724"/><text x="46.8082%" y="4495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4,548,724 samples, 0.98%)</title><rect x="46.5582%" y="4469" width="0.9785%" height="15" fill="rgb(218,96,6)" fg:x="216425122" fg:w="4548724"/><text x="46.8082%" y="4479.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4,548,724 samples, 0.98%)</title><rect x="46.5582%" y="4453" width="0.9785%" height="15" fill="rgb(235,130,12)" fg:x="216425122" fg:w="4548724"/><text x="46.8082%" y="4463.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (1,013,708 samples, 0.22%)</title><rect x="47.3186%" y="4437" width="0.2181%" height="15" fill="rgb(231,95,0)" fg:x="219960138" fg:w="1013708"/><text x="47.5686%" y="4447.50"></text></g><g><title>main::benchmark::matches_id_id (8,118,599 samples, 1.75%)</title><rect x="46.0498%" y="4597" width="1.7465%" height="15" fill="rgb(228,12,23)" fg:x="214061985" fg:w="8118599"/><text x="46.2998%" y="4607.50"></text></g><g><title>main::benchmark::get_node_id_id (8,118,599 samples, 1.75%)</title><rect x="46.0498%" y="4581" width="1.7465%" height="15" fill="rgb(216,12,1)" fg:x="214061985" fg:w="8118599"/><text x="46.2998%" y="4591.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1,206,738 samples, 0.26%)</title><rect x="47.5367%" y="4565" width="0.2596%" height="15" fill="rgb(219,59,3)" fg:x="220973846" fg:w="1206738"/><text x="47.7867%" y="4575.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (19,322,418 samples, 4.16%)</title><rect x="43.9005%" y="4613" width="4.1567%" height="15" fill="rgb(215,208,46)" fg:x="204070917" fg:w="19322418"/><text x="44.1505%" y="4623.50">main:..</text></g><g><title>main::benchmark::matches_tag_id (1,212,751 samples, 0.26%)</title><rect x="47.7963%" y="4597" width="0.2609%" height="15" fill="rgb(254,224,29)" fg:x="222180584" fg:w="1212751"/><text x="48.0463%" y="4607.50"></text></g><g><title>main::benchmark::get_node_tag_id (1,212,751 samples, 0.26%)</title><rect x="47.7963%" y="4581" width="0.2609%" height="15" fill="rgb(232,14,29)" fg:x="222180584" fg:w="1212751"/><text x="48.0463%" y="4591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,212,751 samples, 0.26%)</title><rect x="47.7963%" y="4565" width="0.2609%" height="15" fill="rgb(208,45,52)" fg:x="222180584" fg:w="1212751"/><text x="48.0463%" y="4575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,212,751 samples, 0.26%)</title><rect x="47.7963%" y="4549" width="0.2609%" height="15" fill="rgb(234,191,28)" fg:x="222180584" fg:w="1212751"/><text x="48.0463%" y="4559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,212,751 samples, 0.26%)</title><rect x="47.7963%" y="4533" width="0.2609%" height="15" fill="rgb(244,67,43)" fg:x="222180584" fg:w="1212751"/><text x="48.0463%" y="4543.50"></text></g><g><title>hashbrown::map::make_hash (1,212,751 samples, 0.26%)</title><rect x="47.7963%" y="4517" width="0.2609%" height="15" fill="rgb(236,189,24)" fg:x="222180584" fg:w="1212751"/><text x="48.0463%" y="4527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,212,751 samples, 0.26%)</title><rect x="47.7963%" y="4501" width="0.2609%" height="15" fill="rgb(239,214,33)" fg:x="222180584" fg:w="1212751"/><text x="48.0463%" y="4511.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,212,751 samples, 0.26%)</title><rect x="47.7963%" y="4485" width="0.2609%" height="15" fill="rgb(226,176,41)" fg:x="222180584" fg:w="1212751"/><text x="48.0463%" y="4495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,212,751 samples, 0.26%)</title><rect x="47.7963%" y="4469" width="0.2609%" height="15" fill="rgb(248,47,8)" fg:x="222180584" fg:w="1212751"/><text x="48.0463%" y="4479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,212,751 samples, 0.26%)</title><rect x="47.7963%" y="4453" width="0.2609%" height="15" fill="rgb(218,81,44)" fg:x="222180584" fg:w="1212751"/><text x="48.0463%" y="4463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,212,751 samples, 0.26%)</title><rect x="47.7963%" y="4437" width="0.2609%" height="15" fill="rgb(213,98,6)" fg:x="222180584" fg:w="1212751"/><text x="48.0463%" y="4447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,212,751 samples, 0.26%)</title><rect x="47.7963%" y="4421" width="0.2609%" height="15" fill="rgb(222,85,22)" fg:x="222180584" fg:w="1212751"/><text x="48.0463%" y="4431.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,135,077 samples, 0.24%)</title><rect x="48.0572%" y="4581" width="0.2442%" height="15" fill="rgb(239,46,39)" fg:x="223393335" fg:w="1135077"/><text x="48.3072%" y="4591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,135,077 samples, 0.24%)</title><rect x="48.0572%" y="4565" width="0.2442%" height="15" fill="rgb(237,12,29)" fg:x="223393335" fg:w="1135077"/><text x="48.3072%" y="4575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,135,077 samples, 0.24%)</title><rect x="48.0572%" y="4549" width="0.2442%" height="15" fill="rgb(214,77,8)" fg:x="223393335" fg:w="1135077"/><text x="48.3072%" y="4559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,135,077 samples, 0.24%)</title><rect x="48.0572%" y="4533" width="0.2442%" height="15" fill="rgb(217,168,37)" fg:x="223393335" fg:w="1135077"/><text x="48.3072%" y="4543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,135,077 samples, 0.24%)</title><rect x="48.0572%" y="4517" width="0.2442%" height="15" fill="rgb(221,217,23)" fg:x="223393335" fg:w="1135077"/><text x="48.3072%" y="4527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,135,077 samples, 0.24%)</title><rect x="48.0572%" y="4501" width="0.2442%" height="15" fill="rgb(243,229,36)" fg:x="223393335" fg:w="1135077"/><text x="48.3072%" y="4511.50"></text></g><g><title>alloc::alloc::dealloc (1,135,077 samples, 0.24%)</title><rect x="48.0572%" y="4485" width="0.2442%" height="15" fill="rgb(251,163,40)" fg:x="223393335" fg:w="1135077"/><text x="48.3072%" y="4495.50"></text></g><g><title>cfree (1,135,077 samples, 0.24%)</title><rect x="48.0572%" y="4469" width="0.2442%" height="15" fill="rgb(237,222,12)" fg:x="223393335" fg:w="1135077"/><text x="48.3072%" y="4479.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (1,152,027 samples, 0.25%)</title><rect x="48.3014%" y="4581" width="0.2478%" height="15" fill="rgb(248,132,6)" fg:x="224528412" fg:w="1152027"/><text x="48.5514%" y="4591.50"></text></g><g><title>css_bitvector_compiler::BitVector::with_capacity (1,008,920 samples, 0.22%)</title><rect x="48.5492%" y="4581" width="0.2170%" height="15" fill="rgb(227,167,50)" fg:x="225680439" fg:w="1008920"/><text x="48.7992%" y="4591.50"></text></g><g><title>alloc::vec::from_elem (1,008,920 samples, 0.22%)</title><rect x="48.5492%" y="4565" width="0.2170%" height="15" fill="rgb(242,84,37)" fg:x="225680439" fg:w="1008920"/><text x="48.7992%" y="4575.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,008,920 samples, 0.22%)</title><rect x="48.5492%" y="4549" width="0.2170%" height="15" fill="rgb(212,4,50)" fg:x="225680439" fg:w="1008920"/><text x="48.7992%" y="4559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1,008,920 samples, 0.22%)</title><rect x="48.5492%" y="4533" width="0.2170%" height="15" fill="rgb(230,228,32)" fg:x="225680439" fg:w="1008920"/><text x="48.7992%" y="4543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (1,008,920 samples, 0.22%)</title><rect x="48.5492%" y="4517" width="0.2170%" height="15" fill="rgb(248,217,23)" fg:x="225680439" fg:w="1008920"/><text x="48.7992%" y="4527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,008,920 samples, 0.22%)</title><rect x="48.5492%" y="4501" width="0.2170%" height="15" fill="rgb(238,197,32)" fg:x="225680439" fg:w="1008920"/><text x="48.7992%" y="4511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1,008,920 samples, 0.22%)</title><rect x="48.5492%" y="4485" width="0.2170%" height="15" fill="rgb(236,106,1)" fg:x="225680439" fg:w="1008920"/><text x="48.7992%" y="4495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,008,920 samples, 0.22%)</title><rect x="48.5492%" y="4469" width="0.2170%" height="15" fill="rgb(219,228,13)" fg:x="225680439" fg:w="1008920"/><text x="48.7992%" y="4479.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1,008,920 samples, 0.22%)</title><rect x="48.5492%" y="4453" width="0.2170%" height="15" fill="rgb(238,30,35)" fg:x="225680439" fg:w="1008920"/><text x="48.7992%" y="4463.50"></text></g><g><title>__rdl_alloc_zeroed (1,008,920 samples, 0.22%)</title><rect x="48.5492%" y="4437" width="0.2170%" height="15" fill="rgb(236,70,23)" fg:x="225680439" fg:w="1008920"/><text x="48.7992%" y="4447.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (1,008,920 samples, 0.22%)</title><rect x="48.5492%" y="4421" width="0.2170%" height="15" fill="rgb(249,104,48)" fg:x="225680439" fg:w="1008920"/><text x="48.7992%" y="4431.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load_aligned (1,131,264 samples, 0.24%)</title><rect x="48.7662%" y="4421" width="0.2434%" height="15" fill="rgb(254,117,50)" fg:x="226689359" fg:w="1131264"/><text x="49.0162%" y="4431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1,131,264 samples, 0.24%)</title><rect x="48.7662%" y="4405" width="0.2434%" height="15" fill="rgb(223,152,4)" fg:x="226689359" fg:w="1131264"/><text x="49.0162%" y="4415.50"></text></g><g><title>&lt;&amp;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2,333,008 samples, 0.50%)</title><rect x="48.7662%" y="4549" width="0.5019%" height="15" fill="rgb(245,6,2)" fg:x="226689359" fg:w="2333008"/><text x="49.0162%" y="4559.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (2,333,008 samples, 0.50%)</title><rect x="48.7662%" y="4533" width="0.5019%" height="15" fill="rgb(249,150,24)" fg:x="226689359" fg:w="2333008"/><text x="49.0162%" y="4543.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (2,333,008 samples, 0.50%)</title><rect x="48.7662%" y="4517" width="0.5019%" height="15" fill="rgb(228,185,42)" fg:x="226689359" fg:w="2333008"/><text x="49.0162%" y="4527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (2,333,008 samples, 0.50%)</title><rect x="48.7662%" y="4501" width="0.5019%" height="15" fill="rgb(226,39,33)" fg:x="226689359" fg:w="2333008"/><text x="49.0162%" y="4511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (2,333,008 samples, 0.50%)</title><rect x="48.7662%" y="4485" width="0.5019%" height="15" fill="rgb(221,166,19)" fg:x="226689359" fg:w="2333008"/><text x="49.0162%" y="4495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (2,333,008 samples, 0.50%)</title><rect x="48.7662%" y="4469" width="0.5019%" height="15" fill="rgb(209,109,2)" fg:x="226689359" fg:w="2333008"/><text x="49.0162%" y="4479.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (2,333,008 samples, 0.50%)</title><rect x="48.7662%" y="4453" width="0.5019%" height="15" fill="rgb(252,216,26)" fg:x="226689359" fg:w="2333008"/><text x="49.0162%" y="4463.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (2,333,008 samples, 0.50%)</title><rect x="48.7662%" y="4437" width="0.5019%" height="15" fill="rgb(227,173,36)" fg:x="226689359" fg:w="2333008"/><text x="49.0162%" y="4447.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_full (1,201,744 samples, 0.26%)</title><rect x="49.0096%" y="4421" width="0.2585%" height="15" fill="rgb(209,90,7)" fg:x="227820623" fg:w="1201744"/><text x="49.2596%" y="4431.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::invert (1,201,744 samples, 0.26%)</title><rect x="49.0096%" y="4405" width="0.2585%" height="15" fill="rgb(250,194,11)" fg:x="227820623" fg:w="1201744"/><text x="49.2596%" y="4415.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,490,635 samples, 0.97%)</title><rect x="49.2681%" y="4549" width="0.9660%" height="15" fill="rgb(220,72,50)" fg:x="229022367" fg:w="4490635"/><text x="49.5181%" y="4559.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,490,635 samples, 0.97%)</title><rect x="49.2681%" y="4533" width="0.9660%" height="15" fill="rgb(222,106,48)" fg:x="229022367" fg:w="4490635"/><text x="49.5181%" y="4543.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,490,635 samples, 0.97%)</title><rect x="49.2681%" y="4517" width="0.9660%" height="15" fill="rgb(216,220,45)" fg:x="229022367" fg:w="4490635"/><text x="49.5181%" y="4527.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,490,635 samples, 0.97%)</title><rect x="49.2681%" y="4501" width="0.9660%" height="15" fill="rgb(234,112,18)" fg:x="229022367" fg:w="4490635"/><text x="49.5181%" y="4511.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,490,635 samples, 0.97%)</title><rect x="49.2681%" y="4485" width="0.9660%" height="15" fill="rgb(206,179,9)" fg:x="229022367" fg:w="4490635"/><text x="49.5181%" y="4495.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (2,268,297 samples, 0.49%)</title><rect x="49.7462%" y="4469" width="0.4880%" height="15" fill="rgb(215,115,40)" fg:x="231244705" fg:w="2268297"/><text x="49.9962%" y="4479.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2,268,297 samples, 0.49%)</title><rect x="49.7462%" y="4453" width="0.4880%" height="15" fill="rgb(222,69,34)" fg:x="231244705" fg:w="2268297"/><text x="49.9962%" y="4463.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (2,268,297 samples, 0.49%)</title><rect x="49.7462%" y="4437" width="0.4880%" height="15" fill="rgb(209,161,10)" fg:x="231244705" fg:w="2268297"/><text x="49.9962%" y="4447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,227,763 samples, 0.26%)</title><rect x="51.6985%" y="4405" width="0.2641%" height="15" fill="rgb(217,6,38)" fg:x="240319938" fg:w="1227763"/><text x="51.9485%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3,642,819 samples, 0.78%)</title><rect x="51.4436%" y="4421" width="0.7837%" height="15" fill="rgb(229,229,48)" fg:x="239135165" fg:w="3642819"/><text x="51.6936%" y="4431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,230,283 samples, 0.26%)</title><rect x="51.9626%" y="4405" width="0.2647%" height="15" fill="rgb(225,21,28)" fg:x="241547701" fg:w="1230283"/><text x="52.2126%" y="4415.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (8,202,606 samples, 1.76%)</title><rect x="50.7189%" y="4469" width="1.7646%" height="15" fill="rgb(206,33,13)" fg:x="235766326" fg:w="8202606"/><text x="50.9689%" y="4479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8,202,606 samples, 1.76%)</title><rect x="50.7189%" y="4453" width="1.7646%" height="15" fill="rgb(242,178,17)" fg:x="235766326" fg:w="8202606"/><text x="50.9689%" y="4463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8,202,606 samples, 1.76%)</title><rect x="50.7189%" y="4437" width="1.7646%" height="15" fill="rgb(220,162,5)" fg:x="235766326" fg:w="8202606"/><text x="50.9689%" y="4447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,190,948 samples, 0.26%)</title><rect x="52.2273%" y="4421" width="0.2562%" height="15" fill="rgb(210,33,43)" fg:x="242777984" fg:w="1190948"/><text x="52.4773%" y="4431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,190,948 samples, 0.26%)</title><rect x="52.2273%" y="4405" width="0.2562%" height="15" fill="rgb(216,116,54)" fg:x="242777984" fg:w="1190948"/><text x="52.4773%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8,319,798 samples, 1.79%)</title><rect x="52.7045%" y="4389" width="1.7898%" height="15" fill="rgb(249,92,24)" fg:x="244996269" fg:w="8319798"/><text x="52.9545%" y="4399.50">&lt;..</text></g><g><title>core::hash::sip::u8to64_le (3,596,265 samples, 0.77%)</title><rect x="53.7206%" y="4373" width="0.7736%" height="15" fill="rgb(231,189,14)" fg:x="249719802" fg:w="3596265"/><text x="53.9706%" y="4383.50"></text></g><g><title>core::cmp::min (1,139,340 samples, 0.25%)</title><rect x="55.2661%" y="4357" width="0.2451%" height="15" fill="rgb(230,8,41)" fg:x="256903978" fg:w="1139340"/><text x="55.5161%" y="4367.50"></text></g><g><title>core::cmp::Ord::min (1,139,340 samples, 0.25%)</title><rect x="55.2661%" y="4341" width="0.2451%" height="15" fill="rgb(249,7,27)" fg:x="256903978" fg:w="1139340"/><text x="55.5161%" y="4351.50"></text></g><g><title>hashbrown::map::make_hash (26,892,281 samples, 5.79%)</title><rect x="50.2342%" y="4501" width="5.7852%" height="15" fill="rgb(232,86,5)" fg:x="233513002" fg:w="26892281"/><text x="50.4842%" y="4511.50">hashbro..</text></g><g><title>core::hash::BuildHasher::hash_one (25,682,558 samples, 5.52%)</title><rect x="50.4944%" y="4485" width="5.5249%" height="15" fill="rgb(224,175,18)" fg:x="234722725" fg:w="25682558"/><text x="50.7444%" y="4495.50">core::h..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (16,436,351 samples, 3.54%)</title><rect x="52.4835%" y="4469" width="3.5358%" height="15" fill="rgb(220,129,12)" fg:x="243968932" fg:w="16436351"/><text x="52.7335%" y="4479.50">cor..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (16,436,351 samples, 3.54%)</title><rect x="52.4835%" y="4453" width="3.5358%" height="15" fill="rgb(210,19,36)" fg:x="243968932" fg:w="16436351"/><text x="52.7335%" y="4463.50">cor..</text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (16,436,351 samples, 3.54%)</title><rect x="52.4835%" y="4437" width="3.5358%" height="15" fill="rgb(219,96,14)" fg:x="243968932" fg:w="16436351"/><text x="52.7335%" y="4447.50">&lt;st..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (16,436,351 samples, 3.54%)</title><rect x="52.4835%" y="4421" width="3.5358%" height="15" fill="rgb(249,106,1)" fg:x="243968932" fg:w="16436351"/><text x="52.7335%" y="4431.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (16,436,351 samples, 3.54%)</title><rect x="52.4835%" y="4405" width="3.5358%" height="15" fill="rgb(249,155,20)" fg:x="243968932" fg:w="16436351"/><text x="52.7335%" y="4415.50">&lt;co..</text></g><g><title>core::hash::Hasher::write_u8 (7,089,216 samples, 1.53%)</title><rect x="54.4943%" y="4389" width="1.5251%" height="15" fill="rgb(244,168,9)" fg:x="253316067" fg:w="7089216"/><text x="54.7443%" y="4399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7,089,216 samples, 1.53%)</title><rect x="54.4943%" y="4373" width="1.5251%" height="15" fill="rgb(216,23,50)" fg:x="253316067" fg:w="7089216"/><text x="54.7443%" y="4383.50"></text></g><g><title>core::hash::sip::u8to64_le (2,361,965 samples, 0.51%)</title><rect x="55.5112%" y="4357" width="0.5081%" height="15" fill="rgb(224,219,20)" fg:x="258043318" fg:w="2361965"/><text x="55.7612%" y="4367.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,093,109 samples, 0.24%)</title><rect x="56.2342%" y="4453" width="0.2352%" height="15" fill="rgb(222,156,15)" fg:x="261404051" fg:w="1093109"/><text x="56.4842%" y="4463.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (1,093,109 samples, 0.24%)</title><rect x="56.2342%" y="4437" width="0.2352%" height="15" fill="rgb(231,97,17)" fg:x="261404051" fg:w="1093109"/><text x="56.4842%" y="4447.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load (1,156,135 samples, 0.25%)</title><rect x="56.4693%" y="4453" width="0.2487%" height="15" fill="rgb(218,70,48)" fg:x="262497160" fg:w="1156135"/><text x="56.7193%" y="4463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1,156,135 samples, 0.25%)</title><rect x="56.4693%" y="4437" width="0.2487%" height="15" fill="rgb(212,196,52)" fg:x="262497160" fg:w="1156135"/><text x="56.7193%" y="4447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,156,135 samples, 0.25%)</title><rect x="56.4693%" y="4421" width="0.2487%" height="15" fill="rgb(243,203,18)" fg:x="262497160" fg:w="1156135"/><text x="56.7193%" y="4431.50"></text></g><g><title>hashbrown::control::tag::Tag::full (2,123,031 samples, 0.46%)</title><rect x="56.7180%" y="4453" width="0.4567%" height="15" fill="rgb(252,125,41)" fg:x="263653295" fg:w="2123031"/><text x="56.9680%" y="4463.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (5,945,839 samples, 1.28%)</title><rect x="57.4117%" y="4437" width="1.2791%" height="15" fill="rgb(223,180,33)" fg:x="266877654" fg:w="5945839"/><text x="57.6617%" y="4447.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (5,945,839 samples, 1.28%)</title><rect x="57.4117%" y="4421" width="1.2791%" height="15" fill="rgb(254,159,46)" fg:x="266877654" fg:w="5945839"/><text x="57.6617%" y="4431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4,751,247 samples, 1.02%)</title><rect x="57.6687%" y="4405" width="1.0221%" height="15" fill="rgb(254,38,10)" fg:x="268072246" fg:w="4751247"/><text x="57.9187%" y="4415.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (4,751,247 samples, 1.02%)</title><rect x="57.6687%" y="4389" width="1.0221%" height="15" fill="rgb(208,217,32)" fg:x="268072246" fg:w="4751247"/><text x="57.9187%" y="4399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4,751,247 samples, 1.02%)</title><rect x="57.6687%" y="4373" width="1.0221%" height="15" fill="rgb(221,120,13)" fg:x="268072246" fg:w="4751247"/><text x="57.9187%" y="4383.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (4,751,247 samples, 1.02%)</title><rect x="57.6687%" y="4357" width="1.0221%" height="15" fill="rgb(246,54,52)" fg:x="268072246" fg:w="4751247"/><text x="57.9187%" y="4367.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4,751,247 samples, 1.02%)</title><rect x="57.6687%" y="4341" width="1.0221%" height="15" fill="rgb(242,34,25)" fg:x="268072246" fg:w="4751247"/><text x="57.9187%" y="4351.50"></text></g><g><title>[libc.so.6] (4,751,247 samples, 1.02%)</title><rect x="57.6687%" y="4325" width="1.0221%" height="15" fill="rgb(247,209,9)" fg:x="268072246" fg:w="4751247"/><text x="57.9187%" y="4335.50"></text></g><g><title>main::benchmark::matches_class_id (48,438,189 samples, 10.42%)</title><rect x="48.7662%" y="4581" width="10.4202%" height="15" fill="rgb(228,71,26)" fg:x="226689359" fg:w="48438189"/><text x="49.0162%" y="4591.50">main::benchmark..</text></g><g><title>main::benchmark::node_has_class_id (48,438,189 samples, 10.42%)</title><rect x="48.7662%" y="4565" width="10.4202%" height="15" fill="rgb(222,145,49)" fg:x="226689359" fg:w="48438189"/><text x="49.0162%" y="4575.50">main::benchmark..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (41,614,546 samples, 8.95%)</title><rect x="50.2342%" y="4549" width="8.9523%" height="15" fill="rgb(218,121,17)" fg:x="233513002" fg:w="41614546"/><text x="50.4842%" y="4559.50">std::collecti..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (41,614,546 samples, 8.95%)</title><rect x="50.2342%" y="4533" width="8.9523%" height="15" fill="rgb(244,50,7)" fg:x="233513002" fg:w="41614546"/><text x="50.4842%" y="4543.50">hashbrown::ma..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (41,614,546 samples, 8.95%)</title><rect x="50.2342%" y="4517" width="8.9523%" height="15" fill="rgb(246,229,37)" fg:x="233513002" fg:w="41614546"/><text x="50.4842%" y="4527.50">hashbrown::ma..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (14,722,265 samples, 3.17%)</title><rect x="56.0193%" y="4501" width="3.1671%" height="15" fill="rgb(225,18,5)" fg:x="260405283" fg:w="14722265"/><text x="56.2693%" y="4511.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14,722,265 samples, 3.17%)</title><rect x="56.0193%" y="4485" width="3.1671%" height="15" fill="rgb(213,204,8)" fg:x="260405283" fg:w="14722265"/><text x="56.2693%" y="4495.50">has..</text></g><g><title>hashbrown::raw::RawTableInner::find_inner (14,722,265 samples, 3.17%)</title><rect x="56.0193%" y="4469" width="3.1671%" height="15" fill="rgb(238,103,6)" fg:x="260405283" fg:w="14722265"/><text x="56.2693%" y="4479.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (9,351,222 samples, 2.01%)</title><rect x="57.1748%" y="4453" width="2.0117%" height="15" fill="rgb(222,25,35)" fg:x="265776326" fg:w="9351222"/><text x="57.4248%" y="4463.50">h..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2,304,055 samples, 0.50%)</title><rect x="58.6908%" y="4437" width="0.4957%" height="15" fill="rgb(213,203,35)" fg:x="272823493" fg:w="2304055"/><text x="58.9408%" y="4447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2,304,055 samples, 0.50%)</title><rect x="58.6908%" y="4421" width="0.4957%" height="15" fill="rgb(221,79,53)" fg:x="272823493" fg:w="2304055"/><text x="58.9408%" y="4431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2,304,055 samples, 0.50%)</title><rect x="58.6908%" y="4405" width="0.4957%" height="15" fill="rgb(243,200,35)" fg:x="272823493" fg:w="2304055"/><text x="58.9408%" y="4415.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2,150,904 samples, 0.46%)</title><rect x="59.4108%" y="4437" width="0.4627%" height="15" fill="rgb(248,60,25)" fg:x="276170327" fg:w="2150904"/><text x="59.6608%" y="4447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2,150,904 samples, 0.46%)</title><rect x="59.4108%" y="4421" width="0.4627%" height="15" fill="rgb(227,53,46)" fg:x="276170327" fg:w="2150904"/><text x="59.6608%" y="4431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2,150,904 samples, 0.46%)</title><rect x="59.4108%" y="4405" width="0.4627%" height="15" fill="rgb(216,120,32)" fg:x="276170327" fg:w="2150904"/><text x="59.6608%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2,150,904 samples, 0.46%)</title><rect x="59.4108%" y="4389" width="0.4627%" height="15" fill="rgb(220,134,1)" fg:x="276170327" fg:w="2150904"/><text x="59.6608%" y="4399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,107,561 samples, 0.24%)</title><rect x="59.6352%" y="4373" width="0.2383%" height="15" fill="rgb(237,168,5)" fg:x="277213670" fg:w="1107561"/><text x="59.8852%" y="4383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,257,892 samples, 0.27%)</title><rect x="59.8735%" y="4357" width="0.2706%" height="15" fill="rgb(231,100,33)" fg:x="278321231" fg:w="1257892"/><text x="60.1235%" y="4367.50"></text></g><g><title>core::hash::sip::u8to64_le (1,257,892 samples, 0.27%)</title><rect x="59.8735%" y="4341" width="0.2706%" height="15" fill="rgb(236,177,47)" fg:x="278321231" fg:w="1257892"/><text x="60.1235%" y="4351.50"></text></g><g><title>core::cmp::min (1,205,067 samples, 0.26%)</title><rect x="60.1441%" y="4325" width="0.2592%" height="15" fill="rgb(235,7,49)" fg:x="279579123" fg:w="1205067"/><text x="60.3941%" y="4335.50"></text></g><g><title>core::cmp::Ord::min (1,205,067 samples, 0.26%)</title><rect x="60.1441%" y="4309" width="0.2592%" height="15" fill="rgb(232,119,22)" fg:x="279579123" fg:w="1205067"/><text x="60.3941%" y="4319.50"></text></g><g><title>main::benchmark::matches_id_id (6,744,837 samples, 1.45%)</title><rect x="59.1864%" y="4581" width="1.4510%" height="15" fill="rgb(254,73,53)" fg:x="275127548" fg:w="6744837"/><text x="59.4364%" y="4591.50"></text></g><g><title>main::benchmark::get_node_id_id (6,744,837 samples, 1.45%)</title><rect x="59.1864%" y="4565" width="1.4510%" height="15" fill="rgb(251,35,20)" fg:x="275127548" fg:w="6744837"/><text x="59.4364%" y="4575.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (6,744,837 samples, 1.45%)</title><rect x="59.1864%" y="4549" width="1.4510%" height="15" fill="rgb(241,119,20)" fg:x="275127548" fg:w="6744837"/><text x="59.4364%" y="4559.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (6,744,837 samples, 1.45%)</title><rect x="59.1864%" y="4533" width="1.4510%" height="15" fill="rgb(207,102,14)" fg:x="275127548" fg:w="6744837"/><text x="59.4364%" y="4543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6,744,837 samples, 1.45%)</title><rect x="59.1864%" y="4517" width="1.4510%" height="15" fill="rgb(248,201,50)" fg:x="275127548" fg:w="6744837"/><text x="59.4364%" y="4527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6,744,837 samples, 1.45%)</title><rect x="59.1864%" y="4501" width="1.4510%" height="15" fill="rgb(222,185,44)" fg:x="275127548" fg:w="6744837"/><text x="59.4364%" y="4511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6,744,837 samples, 1.45%)</title><rect x="59.1864%" y="4485" width="1.4510%" height="15" fill="rgb(218,107,18)" fg:x="275127548" fg:w="6744837"/><text x="59.4364%" y="4495.50"></text></g><g><title>hashbrown::map::make_hash (6,744,837 samples, 1.45%)</title><rect x="59.1864%" y="4469" width="1.4510%" height="15" fill="rgb(237,177,39)" fg:x="275127548" fg:w="6744837"/><text x="59.4364%" y="4479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5,702,058 samples, 1.23%)</title><rect x="59.4108%" y="4453" width="1.2266%" height="15" fill="rgb(246,69,6)" fg:x="276170327" fg:w="5702058"/><text x="59.6608%" y="4463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3,551,154 samples, 0.76%)</title><rect x="59.8735%" y="4437" width="0.7639%" height="15" fill="rgb(234,208,37)" fg:x="278321231" fg:w="3551154"/><text x="60.1235%" y="4447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3,551,154 samples, 0.76%)</title><rect x="59.8735%" y="4421" width="0.7639%" height="15" fill="rgb(225,4,6)" fg:x="278321231" fg:w="3551154"/><text x="60.1235%" y="4431.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (3,551,154 samples, 0.76%)</title><rect x="59.8735%" y="4405" width="0.7639%" height="15" fill="rgb(233,45,0)" fg:x="278321231" fg:w="3551154"/><text x="60.1235%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3,551,154 samples, 0.76%)</title><rect x="59.8735%" y="4389" width="0.7639%" height="15" fill="rgb(226,136,5)" fg:x="278321231" fg:w="3551154"/><text x="60.1235%" y="4399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3,551,154 samples, 0.76%)</title><rect x="59.8735%" y="4373" width="0.7639%" height="15" fill="rgb(211,91,47)" fg:x="278321231" fg:w="3551154"/><text x="60.1235%" y="4383.50"></text></g><g><title>core::hash::Hasher::write_u8 (2,293,262 samples, 0.49%)</title><rect x="60.1441%" y="4357" width="0.4933%" height="15" fill="rgb(242,88,51)" fg:x="279579123" fg:w="2293262"/><text x="60.3941%" y="4367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,293,262 samples, 0.49%)</title><rect x="60.1441%" y="4341" width="0.4933%" height="15" fill="rgb(230,91,28)" fg:x="279579123" fg:w="2293262"/><text x="60.3941%" y="4351.50"></text></g><g><title>core::hash::sip::u8to64_le (1,088,195 samples, 0.23%)</title><rect x="60.4033%" y="4325" width="0.2341%" height="15" fill="rgb(254,186,29)" fg:x="280784190" fg:w="1088195"/><text x="60.6533%" y="4335.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (59,728,441 samples, 12.85%)</title><rect x="48.0572%" y="4597" width="12.8490%" height="15" fill="rgb(238,6,4)" fg:x="223393335" fg:w="59728441"/><text x="48.3072%" y="4607.50">main::benchmark::pr..</text></g><g><title>main::benchmark::matches_tag_id (1,249,391 samples, 0.27%)</title><rect x="60.6374%" y="4581" width="0.2688%" height="15" fill="rgb(221,151,16)" fg:x="281872385" fg:w="1249391"/><text x="60.8874%" y="4591.50"></text></g><g><title>main::benchmark::get_node_tag_id (1,249,391 samples, 0.27%)</title><rect x="60.6374%" y="4565" width="0.2688%" height="15" fill="rgb(251,143,52)" fg:x="281872385" fg:w="1249391"/><text x="60.8874%" y="4575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,249,391 samples, 0.27%)</title><rect x="60.6374%" y="4549" width="0.2688%" height="15" fill="rgb(206,90,15)" fg:x="281872385" fg:w="1249391"/><text x="60.8874%" y="4559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,249,391 samples, 0.27%)</title><rect x="60.6374%" y="4533" width="0.2688%" height="15" fill="rgb(218,35,8)" fg:x="281872385" fg:w="1249391"/><text x="60.8874%" y="4543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,249,391 samples, 0.27%)</title><rect x="60.6374%" y="4517" width="0.2688%" height="15" fill="rgb(239,215,6)" fg:x="281872385" fg:w="1249391"/><text x="60.8874%" y="4527.50"></text></g><g><title>hashbrown::map::make_hash (1,249,391 samples, 0.27%)</title><rect x="60.6374%" y="4501" width="0.2688%" height="15" fill="rgb(245,116,39)" fg:x="281872385" fg:w="1249391"/><text x="60.8874%" y="4511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,249,391 samples, 0.27%)</title><rect x="60.6374%" y="4485" width="0.2688%" height="15" fill="rgb(242,65,28)" fg:x="281872385" fg:w="1249391"/><text x="60.8874%" y="4495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,249,391 samples, 0.27%)</title><rect x="60.6374%" y="4469" width="0.2688%" height="15" fill="rgb(252,132,53)" fg:x="281872385" fg:w="1249391"/><text x="60.8874%" y="4479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,249,391 samples, 0.27%)</title><rect x="60.6374%" y="4453" width="0.2688%" height="15" fill="rgb(224,159,50)" fg:x="281872385" fg:w="1249391"/><text x="60.8874%" y="4463.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,249,391 samples, 0.27%)</title><rect x="60.6374%" y="4437" width="0.2688%" height="15" fill="rgb(224,93,4)" fg:x="281872385" fg:w="1249391"/><text x="60.8874%" y="4447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,249,391 samples, 0.27%)</title><rect x="60.6374%" y="4421" width="0.2688%" height="15" fill="rgb(208,81,34)" fg:x="281872385" fg:w="1249391"/><text x="60.8874%" y="4431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,249,391 samples, 0.27%)</title><rect x="60.6374%" y="4405" width="0.2688%" height="15" fill="rgb(233,92,54)" fg:x="281872385" fg:w="1249391"/><text x="60.8874%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,249,391 samples, 0.27%)</title><rect x="60.6374%" y="4389" width="0.2688%" height="15" fill="rgb(237,21,14)" fg:x="281872385" fg:w="1249391"/><text x="60.8874%" y="4399.50"></text></g><g><title>&lt;&amp;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,100,918 samples, 0.24%)</title><rect x="61.1572%" y="4533" width="0.2368%" height="15" fill="rgb(249,128,51)" fg:x="284288695" fg:w="1100918"/><text x="61.4072%" y="4543.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (1,100,918 samples, 0.24%)</title><rect x="61.1572%" y="4517" width="0.2368%" height="15" fill="rgb(223,129,24)" fg:x="284288695" fg:w="1100918"/><text x="61.4072%" y="4527.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (1,100,918 samples, 0.24%)</title><rect x="61.1572%" y="4501" width="0.2368%" height="15" fill="rgb(231,168,25)" fg:x="284288695" fg:w="1100918"/><text x="61.4072%" y="4511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (1,100,918 samples, 0.24%)</title><rect x="61.1572%" y="4485" width="0.2368%" height="15" fill="rgb(224,39,20)" fg:x="284288695" fg:w="1100918"/><text x="61.4072%" y="4495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1,100,918 samples, 0.24%)</title><rect x="61.1572%" y="4469" width="0.2368%" height="15" fill="rgb(225,152,53)" fg:x="284288695" fg:w="1100918"/><text x="61.4072%" y="4479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1,100,918 samples, 0.24%)</title><rect x="61.1572%" y="4453" width="0.2368%" height="15" fill="rgb(252,17,24)" fg:x="284288695" fg:w="1100918"/><text x="61.4072%" y="4463.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1,100,918 samples, 0.24%)</title><rect x="61.1572%" y="4437" width="0.2368%" height="15" fill="rgb(250,114,30)" fg:x="284288695" fg:w="1100918"/><text x="61.4072%" y="4447.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1,100,918 samples, 0.24%)</title><rect x="61.1572%" y="4421" width="0.2368%" height="15" fill="rgb(229,5,4)" fg:x="284288695" fg:w="1100918"/><text x="61.4072%" y="4431.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_full (1,100,918 samples, 0.24%)</title><rect x="61.1572%" y="4405" width="0.2368%" height="15" fill="rgb(225,176,49)" fg:x="284288695" fg:w="1100918"/><text x="61.4072%" y="4415.50"></text></g><g><title>alloc::string::String::as_str (1,233,226 samples, 0.27%)</title><rect x="61.3940%" y="4533" width="0.2653%" height="15" fill="rgb(224,221,49)" fg:x="285389613" fg:w="1233226"/><text x="61.6440%" y="4543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,233,226 samples, 0.27%)</title><rect x="61.3940%" y="4517" width="0.2653%" height="15" fill="rgb(253,169,27)" fg:x="285389613" fg:w="1233226"/><text x="61.6440%" y="4527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1,233,226 samples, 0.27%)</title><rect x="61.3940%" y="4501" width="0.2653%" height="15" fill="rgb(211,206,16)" fg:x="285389613" fg:w="1233226"/><text x="61.6440%" y="4511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1,233,226 samples, 0.27%)</title><rect x="61.3940%" y="4485" width="0.2653%" height="15" fill="rgb(244,87,35)" fg:x="285389613" fg:w="1233226"/><text x="61.6440%" y="4495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (1,233,226 samples, 0.27%)</title><rect x="61.3940%" y="4469" width="0.2653%" height="15" fill="rgb(246,28,10)" fg:x="285389613" fg:w="1233226"/><text x="61.6440%" y="4479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (1,233,226 samples, 0.27%)</title><rect x="61.3940%" y="4453" width="0.2653%" height="15" fill="rgb(229,12,44)" fg:x="285389613" fg:w="1233226"/><text x="61.6440%" y="4463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,162,597 samples, 0.25%)</title><rect x="61.6593%" y="4405" width="0.2501%" height="15" fill="rgb(210,145,37)" fg:x="286622839" fg:w="1162597"/><text x="61.9093%" y="4415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,162,597 samples, 0.25%)</title><rect x="61.6593%" y="4389" width="0.2501%" height="15" fill="rgb(227,112,52)" fg:x="286622839" fg:w="1162597"/><text x="61.9093%" y="4399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,089,960 samples, 0.23%)</title><rect x="62.1694%" y="4389" width="0.2345%" height="15" fill="rgb(238,155,34)" fg:x="288993683" fg:w="1089960"/><text x="62.4194%" y="4399.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (5,904,232 samples, 1.27%)</title><rect x="61.6593%" y="4453" width="1.2701%" height="15" fill="rgb(239,226,36)" fg:x="286622839" fg:w="5904232"/><text x="61.9093%" y="4463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5,904,232 samples, 1.27%)</title><rect x="61.6593%" y="4437" width="1.2701%" height="15" fill="rgb(230,16,23)" fg:x="286622839" fg:w="5904232"/><text x="61.9093%" y="4447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5,904,232 samples, 1.27%)</title><rect x="61.6593%" y="4421" width="1.2701%" height="15" fill="rgb(236,171,36)" fg:x="286622839" fg:w="5904232"/><text x="61.9093%" y="4431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4,741,635 samples, 1.02%)</title><rect x="61.9094%" y="4405" width="1.0200%" height="15" fill="rgb(221,22,14)" fg:x="287785436" fg:w="4741635"/><text x="62.1594%" y="4415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2,443,428 samples, 0.53%)</title><rect x="62.4038%" y="4389" width="0.5256%" height="15" fill="rgb(242,43,11)" fg:x="290083643" fg:w="2443428"/><text x="62.6538%" y="4399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4,651,554 samples, 1.00%)</title><rect x="62.9295%" y="4373" width="1.0007%" height="15" fill="rgb(232,69,23)" fg:x="292527071" fg:w="4651554"/><text x="63.1795%" y="4383.50"></text></g><g><title>core::hash::sip::u8to64_le (3,360,680 samples, 0.72%)</title><rect x="63.2072%" y="4357" width="0.7230%" height="15" fill="rgb(216,180,54)" fg:x="293817945" fg:w="3360680"/><text x="63.4572%" y="4367.50"></text></g><g><title>hashbrown::map::make_hash (14,279,792 samples, 3.07%)</title><rect x="61.6593%" y="4485" width="3.0719%" height="15" fill="rgb(216,5,24)" fg:x="286622839" fg:w="14279792"/><text x="61.9093%" y="4495.50">has..</text></g><g><title>core::hash::BuildHasher::hash_one (14,279,792 samples, 3.07%)</title><rect x="61.6593%" y="4469" width="3.0719%" height="15" fill="rgb(225,89,9)" fg:x="286622839" fg:w="14279792"/><text x="61.9093%" y="4479.50">cor..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8,375,560 samples, 1.80%)</title><rect x="62.9295%" y="4453" width="1.8018%" height="15" fill="rgb(243,75,33)" fg:x="292527071" fg:w="8375560"/><text x="63.1795%" y="4463.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (8,375,560 samples, 1.80%)</title><rect x="62.9295%" y="4437" width="1.8018%" height="15" fill="rgb(247,141,45)" fg:x="292527071" fg:w="8375560"/><text x="63.1795%" y="4447.50">c..</text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (8,375,560 samples, 1.80%)</title><rect x="62.9295%" y="4421" width="1.8018%" height="15" fill="rgb(232,177,36)" fg:x="292527071" fg:w="8375560"/><text x="63.1795%" y="4431.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (8,375,560 samples, 1.80%)</title><rect x="62.9295%" y="4405" width="1.8018%" height="15" fill="rgb(219,125,36)" fg:x="292527071" fg:w="8375560"/><text x="63.1795%" y="4415.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (8,375,560 samples, 1.80%)</title><rect x="62.9295%" y="4389" width="1.8018%" height="15" fill="rgb(227,94,9)" fg:x="292527071" fg:w="8375560"/><text x="63.1795%" y="4399.50">&lt;..</text></g><g><title>core::hash::Hasher::write_u8 (3,724,006 samples, 0.80%)</title><rect x="63.9301%" y="4373" width="0.8011%" height="15" fill="rgb(240,34,52)" fg:x="297178625" fg:w="3724006"/><text x="64.1801%" y="4383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,222,485 samples, 0.26%)</title><rect x="64.4683%" y="4357" width="0.2630%" height="15" fill="rgb(216,45,12)" fg:x="299680146" fg:w="1222485"/><text x="64.7183%" y="4367.50"></text></g><g><title>core::hash::sip::u8to64_le (1,222,485 samples, 0.26%)</title><rect x="64.4683%" y="4341" width="0.2630%" height="15" fill="rgb(246,21,19)" fg:x="299680146" fg:w="1222485"/><text x="64.7183%" y="4351.50"></text></g><g><title>main::benchmark::matches_class_id (17,632,250 samples, 3.79%)</title><rect x="61.1572%" y="4565" width="3.7931%" height="15" fill="rgb(213,98,42)" fg:x="284288695" fg:w="17632250"/><text x="61.4072%" y="4575.50">main..</text></g><g><title>main::benchmark::node_has_class_id (17,632,250 samples, 3.79%)</title><rect x="61.1572%" y="4549" width="3.7931%" height="15" fill="rgb(250,136,47)" fg:x="284288695" fg:w="17632250"/><text x="61.4072%" y="4559.50">main..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (15,298,106 samples, 3.29%)</title><rect x="61.6593%" y="4533" width="3.2910%" height="15" fill="rgb(251,124,27)" fg:x="286622839" fg:w="15298106"/><text x="61.9093%" y="4543.50">std..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (15,298,106 samples, 3.29%)</title><rect x="61.6593%" y="4517" width="3.2910%" height="15" fill="rgb(229,180,14)" fg:x="286622839" fg:w="15298106"/><text x="61.9093%" y="4527.50">has..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (15,298,106 samples, 3.29%)</title><rect x="61.6593%" y="4501" width="3.2910%" height="15" fill="rgb(245,216,25)" fg:x="286622839" fg:w="15298106"/><text x="61.9093%" y="4511.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,018,314 samples, 0.22%)</title><rect x="64.7313%" y="4485" width="0.2191%" height="15" fill="rgb(251,43,5)" fg:x="300902631" fg:w="1018314"/><text x="64.9813%" y="4495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,018,314 samples, 0.22%)</title><rect x="64.7313%" y="4469" width="0.2191%" height="15" fill="rgb(250,128,24)" fg:x="300902631" fg:w="1018314"/><text x="64.9813%" y="4479.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,018,314 samples, 0.22%)</title><rect x="64.7313%" y="4453" width="0.2191%" height="15" fill="rgb(217,117,27)" fg:x="300902631" fg:w="1018314"/><text x="64.9813%" y="4463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1,018,314 samples, 0.22%)</title><rect x="64.7313%" y="4437" width="0.2191%" height="15" fill="rgb(245,147,4)" fg:x="300902631" fg:w="1018314"/><text x="64.9813%" y="4447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1,018,314 samples, 0.22%)</title><rect x="64.7313%" y="4421" width="0.2191%" height="15" fill="rgb(242,201,35)" fg:x="300902631" fg:w="1018314"/><text x="64.9813%" y="4431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1,018,314 samples, 0.22%)</title><rect x="64.7313%" y="4405" width="0.2191%" height="15" fill="rgb(218,181,1)" fg:x="300902631" fg:w="1018314"/><text x="64.9813%" y="4415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1,018,314 samples, 0.22%)</title><rect x="64.7313%" y="4389" width="0.2191%" height="15" fill="rgb(222,6,29)" fg:x="300902631" fg:w="1018314"/><text x="64.9813%" y="4399.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2,226,683 samples, 0.48%)</title><rect x="64.9503%" y="4421" width="0.4790%" height="15" fill="rgb(208,186,3)" fg:x="301920945" fg:w="2226683"/><text x="65.2003%" y="4431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2,226,683 samples, 0.48%)</title><rect x="64.9503%" y="4405" width="0.4790%" height="15" fill="rgb(216,36,26)" fg:x="301920945" fg:w="2226683"/><text x="65.2003%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2,226,683 samples, 0.48%)</title><rect x="64.9503%" y="4389" width="0.4790%" height="15" fill="rgb(248,201,23)" fg:x="301920945" fg:w="2226683"/><text x="65.2003%" y="4399.50"></text></g><g><title>core::cmp::min (1,246,243 samples, 0.27%)</title><rect x="65.4293%" y="4309" width="0.2681%" height="15" fill="rgb(251,170,31)" fg:x="304147628" fg:w="1246243"/><text x="65.6793%" y="4319.50"></text></g><g><title>core::cmp::Ord::min (1,246,243 samples, 0.27%)</title><rect x="65.4293%" y="4293" width="0.2681%" height="15" fill="rgb(207,110,25)" fg:x="304147628" fg:w="1246243"/><text x="65.6793%" y="4303.50"></text></g><g><title>hashbrown::map::make_hash (4,708,237 samples, 1.01%)</title><rect x="64.9503%" y="4453" width="1.0129%" height="15" fill="rgb(250,54,15)" fg:x="301920945" fg:w="4708237"/><text x="65.2003%" y="4463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,708,237 samples, 1.01%)</title><rect x="64.9503%" y="4437" width="1.0129%" height="15" fill="rgb(227,68,33)" fg:x="301920945" fg:w="4708237"/><text x="65.2003%" y="4447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,481,554 samples, 0.53%)</title><rect x="65.4293%" y="4421" width="0.5338%" height="15" fill="rgb(238,34,41)" fg:x="304147628" fg:w="2481554"/><text x="65.6793%" y="4431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2,481,554 samples, 0.53%)</title><rect x="65.4293%" y="4405" width="0.5338%" height="15" fill="rgb(220,11,15)" fg:x="304147628" fg:w="2481554"/><text x="65.6793%" y="4415.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (2,481,554 samples, 0.53%)</title><rect x="65.4293%" y="4389" width="0.5338%" height="15" fill="rgb(246,111,35)" fg:x="304147628" fg:w="2481554"/><text x="65.6793%" y="4399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2,481,554 samples, 0.53%)</title><rect x="65.4293%" y="4373" width="0.5338%" height="15" fill="rgb(209,88,53)" fg:x="304147628" fg:w="2481554"/><text x="65.6793%" y="4383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2,481,554 samples, 0.53%)</title><rect x="65.4293%" y="4357" width="0.5338%" height="15" fill="rgb(231,185,47)" fg:x="304147628" fg:w="2481554"/><text x="65.6793%" y="4367.50"></text></g><g><title>core::hash::Hasher::write_u8 (2,481,554 samples, 0.53%)</title><rect x="65.4293%" y="4341" width="0.5338%" height="15" fill="rgb(233,154,1)" fg:x="304147628" fg:w="2481554"/><text x="65.6793%" y="4351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,481,554 samples, 0.53%)</title><rect x="65.4293%" y="4325" width="0.5338%" height="15" fill="rgb(225,15,46)" fg:x="304147628" fg:w="2481554"/><text x="65.6793%" y="4335.50"></text></g><g><title>core::hash::sip::u8to64_le (1,235,311 samples, 0.27%)</title><rect x="65.6974%" y="4309" width="0.2657%" height="15" fill="rgb(211,135,41)" fg:x="305393871" fg:w="1235311"/><text x="65.9474%" y="4319.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,182,337 samples, 0.25%)</title><rect x="65.9632%" y="4405" width="0.2543%" height="15" fill="rgb(208,54,0)" fg:x="306629182" fg:w="1182337"/><text x="66.2132%" y="4415.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (1,182,337 samples, 0.25%)</title><rect x="65.9632%" y="4389" width="0.2543%" height="15" fill="rgb(244,136,14)" fg:x="306629182" fg:w="1182337"/><text x="66.2132%" y="4399.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (1,182,337 samples, 0.25%)</title><rect x="65.9632%" y="4373" width="0.2543%" height="15" fill="rgb(241,56,14)" fg:x="306629182" fg:w="1182337"/><text x="66.2132%" y="4383.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (1,182,337 samples, 0.25%)</title><rect x="65.9632%" y="4357" width="0.2543%" height="15" fill="rgb(205,80,24)" fg:x="306629182" fg:w="1182337"/><text x="66.2132%" y="4367.50"></text></g><g><title>hashbrown::control::tag::Tag::full (1,035,145 samples, 0.22%)</title><rect x="66.2175%" y="4405" width="0.2227%" height="15" fill="rgb(220,57,4)" fg:x="307811519" fg:w="1035145"/><text x="66.4675%" y="4415.50"></text></g><g><title>main::benchmark::matches_id_id (8,068,206 samples, 1.74%)</title><rect x="64.9503%" y="4565" width="1.7357%" height="15" fill="rgb(226,193,50)" fg:x="301920945" fg:w="8068206"/><text x="65.2003%" y="4575.50"></text></g><g><title>main::benchmark::get_node_id_id (8,068,206 samples, 1.74%)</title><rect x="64.9503%" y="4549" width="1.7357%" height="15" fill="rgb(231,168,22)" fg:x="301920945" fg:w="8068206"/><text x="65.2003%" y="4559.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (8,068,206 samples, 1.74%)</title><rect x="64.9503%" y="4533" width="1.7357%" height="15" fill="rgb(254,215,14)" fg:x="301920945" fg:w="8068206"/><text x="65.2003%" y="4543.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (8,068,206 samples, 1.74%)</title><rect x="64.9503%" y="4517" width="1.7357%" height="15" fill="rgb(211,115,16)" fg:x="301920945" fg:w="8068206"/><text x="65.2003%" y="4527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8,068,206 samples, 1.74%)</title><rect x="64.9503%" y="4501" width="1.7357%" height="15" fill="rgb(236,210,16)" fg:x="301920945" fg:w="8068206"/><text x="65.2003%" y="4511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8,068,206 samples, 1.74%)</title><rect x="64.9503%" y="4485" width="1.7357%" height="15" fill="rgb(221,94,12)" fg:x="301920945" fg:w="8068206"/><text x="65.2003%" y="4495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8,068,206 samples, 1.74%)</title><rect x="64.9503%" y="4469" width="1.7357%" height="15" fill="rgb(235,218,49)" fg:x="301920945" fg:w="8068206"/><text x="65.2003%" y="4479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3,359,969 samples, 0.72%)</title><rect x="65.9632%" y="4453" width="0.7228%" height="15" fill="rgb(217,114,14)" fg:x="306629182" fg:w="3359969"/><text x="66.2132%" y="4463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3,359,969 samples, 0.72%)</title><rect x="65.9632%" y="4437" width="0.7228%" height="15" fill="rgb(216,145,22)" fg:x="306629182" fg:w="3359969"/><text x="66.2132%" y="4447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3,359,969 samples, 0.72%)</title><rect x="65.9632%" y="4421" width="0.7228%" height="15" fill="rgb(217,112,39)" fg:x="306629182" fg:w="3359969"/><text x="66.2132%" y="4431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1,142,487 samples, 0.25%)</title><rect x="66.4402%" y="4405" width="0.2458%" height="15" fill="rgb(225,85,32)" fg:x="308846664" fg:w="1142487"/><text x="66.6902%" y="4415.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1,142,487 samples, 0.25%)</title><rect x="66.4402%" y="4389" width="0.2458%" height="15" fill="rgb(245,209,47)" fg:x="308846664" fg:w="1142487"/><text x="66.6902%" y="4399.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1,142,487 samples, 0.25%)</title><rect x="66.4402%" y="4373" width="0.2458%" height="15" fill="rgb(218,220,15)" fg:x="308846664" fg:w="1142487"/><text x="66.6902%" y="4383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,142,487 samples, 0.25%)</title><rect x="66.4402%" y="4357" width="0.2458%" height="15" fill="rgb(222,202,31)" fg:x="308846664" fg:w="1142487"/><text x="66.6902%" y="4367.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,142,487 samples, 0.25%)</title><rect x="66.4402%" y="4341" width="0.2458%" height="15" fill="rgb(243,203,4)" fg:x="308846664" fg:w="1142487"/><text x="66.6902%" y="4351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,142,487 samples, 0.25%)</title><rect x="66.4402%" y="4325" width="0.2458%" height="15" fill="rgb(237,92,17)" fg:x="308846664" fg:w="1142487"/><text x="66.6902%" y="4335.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1,142,487 samples, 0.25%)</title><rect x="66.4402%" y="4309" width="0.2458%" height="15" fill="rgb(231,119,7)" fg:x="308846664" fg:w="1142487"/><text x="66.6902%" y="4319.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,142,487 samples, 0.25%)</title><rect x="66.4402%" y="4293" width="0.2458%" height="15" fill="rgb(237,82,41)" fg:x="308846664" fg:w="1142487"/><text x="66.6902%" y="4303.50"></text></g><g><title>[libc.so.6] (1,142,487 samples, 0.25%)</title><rect x="66.4402%" y="4277" width="0.2458%" height="15" fill="rgb(226,81,48)" fg:x="308846664" fg:w="1142487"/><text x="66.6902%" y="4287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,128,817 samples, 0.46%)</title><rect x="66.6860%" y="4373" width="0.4580%" height="15" fill="rgb(234,70,51)" fg:x="309989151" fg:w="2128817"/><text x="66.9360%" y="4383.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (30,216,667 samples, 6.50%)</title><rect x="60.9062%" y="4581" width="6.5003%" height="15" fill="rgb(251,86,4)" fg:x="283121776" fg:w="30216667"/><text x="61.1562%" y="4591.50">main::ben..</text></g><g><title>main::benchmark::matches_tag_id (3,349,292 samples, 0.72%)</title><rect x="66.6860%" y="4565" width="0.7205%" height="15" fill="rgb(244,144,28)" fg:x="309989151" fg:w="3349292"/><text x="66.9360%" y="4575.50"></text></g><g><title>main::benchmark::get_node_tag_id (3,349,292 samples, 0.72%)</title><rect x="66.6860%" y="4549" width="0.7205%" height="15" fill="rgb(232,161,39)" fg:x="309989151" fg:w="3349292"/><text x="66.9360%" y="4559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3,349,292 samples, 0.72%)</title><rect x="66.6860%" y="4533" width="0.7205%" height="15" fill="rgb(247,34,51)" fg:x="309989151" fg:w="3349292"/><text x="66.9360%" y="4543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3,349,292 samples, 0.72%)</title><rect x="66.6860%" y="4517" width="0.7205%" height="15" fill="rgb(225,132,2)" fg:x="309989151" fg:w="3349292"/><text x="66.9360%" y="4527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3,349,292 samples, 0.72%)</title><rect x="66.6860%" y="4501" width="0.7205%" height="15" fill="rgb(209,159,44)" fg:x="309989151" fg:w="3349292"/><text x="66.9360%" y="4511.50"></text></g><g><title>hashbrown::map::make_hash (3,349,292 samples, 0.72%)</title><rect x="66.6860%" y="4485" width="0.7205%" height="15" fill="rgb(251,214,1)" fg:x="309989151" fg:w="3349292"/><text x="66.9360%" y="4495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,349,292 samples, 0.72%)</title><rect x="66.6860%" y="4469" width="0.7205%" height="15" fill="rgb(247,84,47)" fg:x="309989151" fg:w="3349292"/><text x="66.9360%" y="4479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3,349,292 samples, 0.72%)</title><rect x="66.6860%" y="4453" width="0.7205%" height="15" fill="rgb(240,111,43)" fg:x="309989151" fg:w="3349292"/><text x="66.9360%" y="4463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3,349,292 samples, 0.72%)</title><rect x="66.6860%" y="4437" width="0.7205%" height="15" fill="rgb(215,214,35)" fg:x="309989151" fg:w="3349292"/><text x="66.9360%" y="4447.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (3,349,292 samples, 0.72%)</title><rect x="66.6860%" y="4421" width="0.7205%" height="15" fill="rgb(248,207,23)" fg:x="309989151" fg:w="3349292"/><text x="66.9360%" y="4431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3,349,292 samples, 0.72%)</title><rect x="66.6860%" y="4405" width="0.7205%" height="15" fill="rgb(214,186,4)" fg:x="309989151" fg:w="3349292"/><text x="66.9360%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3,349,292 samples, 0.72%)</title><rect x="66.6860%" y="4389" width="0.7205%" height="15" fill="rgb(220,133,22)" fg:x="309989151" fg:w="3349292"/><text x="66.9360%" y="4399.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,220,475 samples, 0.26%)</title><rect x="67.1439%" y="4373" width="0.2626%" height="15" fill="rgb(239,134,19)" fg:x="312117968" fg:w="1220475"/><text x="67.3939%" y="4383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,220,475 samples, 0.26%)</title><rect x="67.1439%" y="4357" width="0.2626%" height="15" fill="rgb(250,140,9)" fg:x="312117968" fg:w="1220475"/><text x="67.3939%" y="4367.50"></text></g><g><title>core::hash::sip::u8to64_le (1,220,475 samples, 0.26%)</title><rect x="67.1439%" y="4341" width="0.2626%" height="15" fill="rgb(225,59,14)" fg:x="312117968" fg:w="1220475"/><text x="67.3939%" y="4351.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,396,494 samples, 0.52%)</title><rect x="68.1498%" y="4549" width="0.5155%" height="15" fill="rgb(214,152,51)" fg:x="316793816" fg:w="2396494"/><text x="68.3998%" y="4559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,396,494 samples, 0.52%)</title><rect x="68.1498%" y="4533" width="0.5155%" height="15" fill="rgb(251,227,43)" fg:x="316793816" fg:w="2396494"/><text x="68.3998%" y="4543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,396,494 samples, 0.52%)</title><rect x="68.1498%" y="4517" width="0.5155%" height="15" fill="rgb(241,96,17)" fg:x="316793816" fg:w="2396494"/><text x="68.3998%" y="4527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,396,494 samples, 0.52%)</title><rect x="68.1498%" y="4501" width="0.5155%" height="15" fill="rgb(234,198,43)" fg:x="316793816" fg:w="2396494"/><text x="68.3998%" y="4511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,396,494 samples, 0.52%)</title><rect x="68.1498%" y="4485" width="0.5155%" height="15" fill="rgb(220,108,29)" fg:x="316793816" fg:w="2396494"/><text x="68.3998%" y="4495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,396,494 samples, 0.52%)</title><rect x="68.1498%" y="4469" width="0.5155%" height="15" fill="rgb(226,163,33)" fg:x="316793816" fg:w="2396494"/><text x="68.3998%" y="4479.50"></text></g><g><title>alloc::alloc::dealloc (2,396,494 samples, 0.52%)</title><rect x="68.1498%" y="4453" width="0.5155%" height="15" fill="rgb(205,194,45)" fg:x="316793816" fg:w="2396494"/><text x="68.3998%" y="4463.50"></text></g><g><title>cfree (2,396,494 samples, 0.52%)</title><rect x="68.1498%" y="4437" width="0.5155%" height="15" fill="rgb(206,143,44)" fg:x="316793816" fg:w="2396494"/><text x="68.3998%" y="4447.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (5,820,422 samples, 1.25%)</title><rect x="68.6654%" y="4549" width="1.2521%" height="15" fill="rgb(236,136,36)" fg:x="319190310" fg:w="5820422"/><text x="68.9154%" y="4559.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1,012,735 samples, 0.22%)</title><rect x="70.1570%" y="4405" width="0.2179%" height="15" fill="rgb(249,172,42)" fg:x="326124255" fg:w="1012735"/><text x="70.4070%" y="4415.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_full (1,012,735 samples, 0.22%)</title><rect x="70.1570%" y="4389" width="0.2179%" height="15" fill="rgb(216,139,23)" fg:x="326124255" fg:w="1012735"/><text x="70.4070%" y="4399.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty_or_deleted (1,012,735 samples, 0.22%)</title><rect x="70.1570%" y="4373" width="0.2179%" height="15" fill="rgb(207,166,20)" fg:x="326124255" fg:w="1012735"/><text x="70.4070%" y="4383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,012,735 samples, 0.22%)</title><rect x="70.1570%" y="4357" width="0.2179%" height="15" fill="rgb(210,209,22)" fg:x="326124255" fg:w="1012735"/><text x="70.4070%" y="4367.50"></text></g><g><title>&lt;&amp;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2,161,796 samples, 0.47%)</title><rect x="70.1570%" y="4517" width="0.4651%" height="15" fill="rgb(232,118,20)" fg:x="326124255" fg:w="2161796"/><text x="70.4070%" y="4527.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (2,161,796 samples, 0.47%)</title><rect x="70.1570%" y="4501" width="0.4651%" height="15" fill="rgb(238,113,42)" fg:x="326124255" fg:w="2161796"/><text x="70.4070%" y="4511.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (2,161,796 samples, 0.47%)</title><rect x="70.1570%" y="4485" width="0.4651%" height="15" fill="rgb(231,42,5)" fg:x="326124255" fg:w="2161796"/><text x="70.4070%" y="4495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (2,161,796 samples, 0.47%)</title><rect x="70.1570%" y="4469" width="0.4651%" height="15" fill="rgb(243,166,24)" fg:x="326124255" fg:w="2161796"/><text x="70.4070%" y="4479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (2,161,796 samples, 0.47%)</title><rect x="70.1570%" y="4453" width="0.4651%" height="15" fill="rgb(237,226,12)" fg:x="326124255" fg:w="2161796"/><text x="70.4070%" y="4463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (2,161,796 samples, 0.47%)</title><rect x="70.1570%" y="4437" width="0.4651%" height="15" fill="rgb(229,133,24)" fg:x="326124255" fg:w="2161796"/><text x="70.4070%" y="4447.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (2,161,796 samples, 0.47%)</title><rect x="70.1570%" y="4421" width="0.4651%" height="15" fill="rgb(238,33,43)" fg:x="326124255" fg:w="2161796"/><text x="70.4070%" y="4431.50"></text></g><g><title>hashbrown::raw::RawTableInner::data_end (1,149,061 samples, 0.25%)</title><rect x="70.3749%" y="4405" width="0.2472%" height="15" fill="rgb(227,59,38)" fg:x="327136990" fg:w="1149061"/><text x="70.6249%" y="4415.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,180,473 samples, 0.25%)</title><rect x="70.6221%" y="4517" width="0.2539%" height="15" fill="rgb(230,97,0)" fg:x="328286051" fg:w="1180473"/><text x="70.8721%" y="4527.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,180,473 samples, 0.25%)</title><rect x="70.6221%" y="4501" width="0.2539%" height="15" fill="rgb(250,173,50)" fg:x="328286051" fg:w="1180473"/><text x="70.8721%" y="4511.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,180,473 samples, 0.25%)</title><rect x="70.6221%" y="4485" width="0.2539%" height="15" fill="rgb(240,15,50)" fg:x="328286051" fg:w="1180473"/><text x="70.8721%" y="4495.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,180,473 samples, 0.25%)</title><rect x="70.6221%" y="4469" width="0.2539%" height="15" fill="rgb(221,93,22)" fg:x="328286051" fg:w="1180473"/><text x="70.8721%" y="4479.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,180,473 samples, 0.25%)</title><rect x="70.6221%" y="4453" width="0.2539%" height="15" fill="rgb(245,180,53)" fg:x="328286051" fg:w="1180473"/><text x="70.8721%" y="4463.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,149,091 samples, 0.25%)</title><rect x="70.8760%" y="4437" width="0.2472%" height="15" fill="rgb(231,88,51)" fg:x="329466524" fg:w="1149091"/><text x="71.1260%" y="4447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,149,091 samples, 0.25%)</title><rect x="70.8760%" y="4421" width="0.2472%" height="15" fill="rgb(240,58,21)" fg:x="329466524" fg:w="1149091"/><text x="71.1260%" y="4431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,149,091 samples, 0.25%)</title><rect x="70.8760%" y="4405" width="0.2472%" height="15" fill="rgb(237,21,10)" fg:x="329466524" fg:w="1149091"/><text x="71.1260%" y="4415.50"></text></g><g><title>hashbrown::map::make_hash (2,289,575 samples, 0.49%)</title><rect x="70.8760%" y="4469" width="0.4925%" height="15" fill="rgb(218,43,11)" fg:x="329466524" fg:w="2289575"/><text x="71.1260%" y="4479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,289,575 samples, 0.49%)</title><rect x="70.8760%" y="4453" width="0.4925%" height="15" fill="rgb(218,221,29)" fg:x="329466524" fg:w="2289575"/><text x="71.1260%" y="4463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,140,484 samples, 0.25%)</title><rect x="71.1232%" y="4437" width="0.2453%" height="15" fill="rgb(214,118,42)" fg:x="330615615" fg:w="1140484"/><text x="71.3732%" y="4447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,140,484 samples, 0.25%)</title><rect x="71.1232%" y="4421" width="0.2453%" height="15" fill="rgb(251,200,26)" fg:x="330615615" fg:w="1140484"/><text x="71.3732%" y="4431.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,140,484 samples, 0.25%)</title><rect x="71.1232%" y="4405" width="0.2453%" height="15" fill="rgb(237,101,39)" fg:x="330615615" fg:w="1140484"/><text x="71.3732%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,140,484 samples, 0.25%)</title><rect x="71.1232%" y="4389" width="0.2453%" height="15" fill="rgb(251,117,11)" fg:x="330615615" fg:w="1140484"/><text x="71.3732%" y="4399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,140,484 samples, 0.25%)</title><rect x="71.1232%" y="4373" width="0.2453%" height="15" fill="rgb(216,223,23)" fg:x="330615615" fg:w="1140484"/><text x="71.3732%" y="4383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,140,484 samples, 0.25%)</title><rect x="71.1232%" y="4357" width="0.2453%" height="15" fill="rgb(251,54,12)" fg:x="330615615" fg:w="1140484"/><text x="71.3732%" y="4367.50"></text></g><g><title>core::hash::sip::u8to64_le (1,140,484 samples, 0.25%)</title><rect x="71.1232%" y="4341" width="0.2453%" height="15" fill="rgb(254,176,54)" fg:x="330615615" fg:w="1140484"/><text x="71.3732%" y="4351.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (1,215,775 samples, 0.26%)</title><rect x="71.3686%" y="4421" width="0.2615%" height="15" fill="rgb(210,32,8)" fg:x="331756099" fg:w="1215775"/><text x="71.6186%" y="4431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,215,775 samples, 0.26%)</title><rect x="71.3686%" y="4405" width="0.2615%" height="15" fill="rgb(235,52,38)" fg:x="331756099" fg:w="1215775"/><text x="71.6186%" y="4415.50"></text></g><g><title>hashbrown::control::tag::Tag::full (2,268,476 samples, 0.49%)</title><rect x="71.6301%" y="4421" width="0.4880%" height="15" fill="rgb(231,4,44)" fg:x="332971874" fg:w="2268476"/><text x="71.8801%" y="4431.50"></text></g><g><title>main::benchmark::matches_class_id (11,398,089 samples, 2.45%)</title><rect x="69.9175%" y="4549" width="2.4520%" height="15" fill="rgb(249,2,32)" fg:x="325010732" fg:w="11398089"/><text x="70.1675%" y="4559.50">ma..</text></g><g><title>main::benchmark::node_has_class_id (11,398,089 samples, 2.45%)</title><rect x="69.9175%" y="4533" width="2.4520%" height="15" fill="rgb(224,65,26)" fg:x="325010732" fg:w="11398089"/><text x="70.1675%" y="4543.50">ma..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6,942,297 samples, 1.49%)</title><rect x="70.8760%" y="4517" width="1.4935%" height="15" fill="rgb(250,73,40)" fg:x="329466524" fg:w="6942297"/><text x="71.1260%" y="4527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6,942,297 samples, 1.49%)</title><rect x="70.8760%" y="4501" width="1.4935%" height="15" fill="rgb(253,177,16)" fg:x="329466524" fg:w="6942297"/><text x="71.1260%" y="4511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6,942,297 samples, 1.49%)</title><rect x="70.8760%" y="4485" width="1.4935%" height="15" fill="rgb(217,32,34)" fg:x="329466524" fg:w="6942297"/><text x="71.1260%" y="4495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4,652,722 samples, 1.00%)</title><rect x="71.3686%" y="4469" width="1.0009%" height="15" fill="rgb(212,7,10)" fg:x="331756099" fg:w="4652722"/><text x="71.6186%" y="4479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4,652,722 samples, 1.00%)</title><rect x="71.3686%" y="4453" width="1.0009%" height="15" fill="rgb(245,89,8)" fg:x="331756099" fg:w="4652722"/><text x="71.6186%" y="4463.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4,652,722 samples, 1.00%)</title><rect x="71.3686%" y="4437" width="1.0009%" height="15" fill="rgb(237,16,53)" fg:x="331756099" fg:w="4652722"/><text x="71.6186%" y="4447.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (1,168,471 samples, 0.25%)</title><rect x="72.1181%" y="4421" width="0.2514%" height="15" fill="rgb(250,204,30)" fg:x="335240350" fg:w="1168471"/><text x="72.3681%" y="4431.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,247,692 samples, 0.27%)</title><rect x="72.3695%" y="4405" width="0.2684%" height="15" fill="rgb(208,77,27)" fg:x="336408821" fg:w="1247692"/><text x="72.6195%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,247,692 samples, 0.27%)</title><rect x="72.3695%" y="4389" width="0.2684%" height="15" fill="rgb(250,204,28)" fg:x="336408821" fg:w="1247692"/><text x="72.6195%" y="4399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,247,692 samples, 0.27%)</title><rect x="72.3695%" y="4373" width="0.2684%" height="15" fill="rgb(244,63,21)" fg:x="336408821" fg:w="1247692"/><text x="72.6195%" y="4383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,247,692 samples, 0.27%)</title><rect x="72.3695%" y="4357" width="0.2684%" height="15" fill="rgb(236,85,44)" fg:x="336408821" fg:w="1247692"/><text x="72.6195%" y="4367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,247,692 samples, 0.27%)</title><rect x="72.3695%" y="4341" width="0.2684%" height="15" fill="rgb(215,98,4)" fg:x="336408821" fg:w="1247692"/><text x="72.6195%" y="4351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,072,184 samples, 0.23%)</title><rect x="72.6379%" y="4325" width="0.2307%" height="15" fill="rgb(235,38,11)" fg:x="337656513" fg:w="1072184"/><text x="72.8879%" y="4335.50"></text></g><g><title>core::hash::sip::u8to64_le (1,072,184 samples, 0.23%)</title><rect x="72.6379%" y="4309" width="0.2307%" height="15" fill="rgb(254,186,25)" fg:x="337656513" fg:w="1072184"/><text x="72.8879%" y="4319.50"></text></g><g><title>hashbrown::map::make_hash (3,557,158 samples, 0.77%)</title><rect x="72.3695%" y="4437" width="0.7652%" height="15" fill="rgb(225,55,31)" fg:x="336408821" fg:w="3557158"/><text x="72.6195%" y="4447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,557,158 samples, 0.77%)</title><rect x="72.3695%" y="4421" width="0.7652%" height="15" fill="rgb(211,15,21)" fg:x="336408821" fg:w="3557158"/><text x="72.6195%" y="4431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,309,466 samples, 0.50%)</title><rect x="72.6379%" y="4405" width="0.4968%" height="15" fill="rgb(215,187,41)" fg:x="337656513" fg:w="2309466"/><text x="72.8879%" y="4415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2,309,466 samples, 0.50%)</title><rect x="72.6379%" y="4389" width="0.4968%" height="15" fill="rgb(248,69,32)" fg:x="337656513" fg:w="2309466"/><text x="72.8879%" y="4399.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (2,309,466 samples, 0.50%)</title><rect x="72.6379%" y="4373" width="0.4968%" height="15" fill="rgb(252,102,52)" fg:x="337656513" fg:w="2309466"/><text x="72.8879%" y="4383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2,309,466 samples, 0.50%)</title><rect x="72.6379%" y="4357" width="0.4968%" height="15" fill="rgb(253,140,32)" fg:x="337656513" fg:w="2309466"/><text x="72.8879%" y="4367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2,309,466 samples, 0.50%)</title><rect x="72.6379%" y="4341" width="0.4968%" height="15" fill="rgb(216,56,42)" fg:x="337656513" fg:w="2309466"/><text x="72.8879%" y="4351.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,237,282 samples, 0.27%)</title><rect x="72.8685%" y="4325" width="0.2662%" height="15" fill="rgb(216,184,14)" fg:x="338728697" fg:w="1237282"/><text x="73.1185%" y="4335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,237,282 samples, 0.27%)</title><rect x="72.8685%" y="4309" width="0.2662%" height="15" fill="rgb(237,187,27)" fg:x="338728697" fg:w="1237282"/><text x="73.1185%" y="4319.50"></text></g><g><title>core::cmp::min (1,237,282 samples, 0.27%)</title><rect x="72.8685%" y="4293" width="0.2662%" height="15" fill="rgb(219,65,3)" fg:x="338728697" fg:w="1237282"/><text x="73.1185%" y="4303.50"></text></g><g><title>core::cmp::Ord::min (1,237,282 samples, 0.27%)</title><rect x="72.8685%" y="4277" width="0.2662%" height="15" fill="rgb(245,83,25)" fg:x="338728697" fg:w="1237282"/><text x="73.1185%" y="4287.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,155,321 samples, 0.25%)</title><rect x="73.3955%" y="4389" width="0.2485%" height="15" fill="rgb(214,205,45)" fg:x="341178260" fg:w="1155321"/><text x="73.6455%" y="4399.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (1,155,321 samples, 0.25%)</title><rect x="73.3955%" y="4373" width="0.2485%" height="15" fill="rgb(241,20,18)" fg:x="341178260" fg:w="1155321"/><text x="73.6455%" y="4383.50"></text></g><g><title>main::benchmark::matches_id_id (7,059,369 samples, 1.52%)</title><rect x="72.3695%" y="4549" width="1.5186%" height="15" fill="rgb(232,163,23)" fg:x="336408821" fg:w="7059369"/><text x="72.6195%" y="4559.50"></text></g><g><title>main::benchmark::get_node_id_id (7,059,369 samples, 1.52%)</title><rect x="72.3695%" y="4533" width="1.5186%" height="15" fill="rgb(214,5,46)" fg:x="336408821" fg:w="7059369"/><text x="72.6195%" y="4543.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (7,059,369 samples, 1.52%)</title><rect x="72.3695%" y="4517" width="1.5186%" height="15" fill="rgb(229,78,17)" fg:x="336408821" fg:w="7059369"/><text x="72.6195%" y="4527.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (7,059,369 samples, 1.52%)</title><rect x="72.3695%" y="4501" width="1.5186%" height="15" fill="rgb(248,89,10)" fg:x="336408821" fg:w="7059369"/><text x="72.6195%" y="4511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7,059,369 samples, 1.52%)</title><rect x="72.3695%" y="4485" width="1.5186%" height="15" fill="rgb(248,54,15)" fg:x="336408821" fg:w="7059369"/><text x="72.6195%" y="4495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7,059,369 samples, 1.52%)</title><rect x="72.3695%" y="4469" width="1.5186%" height="15" fill="rgb(223,116,6)" fg:x="336408821" fg:w="7059369"/><text x="72.6195%" y="4479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7,059,369 samples, 1.52%)</title><rect x="72.3695%" y="4453" width="1.5186%" height="15" fill="rgb(205,125,38)" fg:x="336408821" fg:w="7059369"/><text x="72.6195%" y="4463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3,502,211 samples, 0.75%)</title><rect x="73.1347%" y="4437" width="0.7534%" height="15" fill="rgb(251,78,38)" fg:x="339965979" fg:w="3502211"/><text x="73.3847%" y="4447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3,502,211 samples, 0.75%)</title><rect x="73.1347%" y="4421" width="0.7534%" height="15" fill="rgb(253,78,28)" fg:x="339965979" fg:w="3502211"/><text x="73.3847%" y="4431.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3,502,211 samples, 0.75%)</title><rect x="73.1347%" y="4405" width="0.7534%" height="15" fill="rgb(209,120,3)" fg:x="339965979" fg:w="3502211"/><text x="73.3847%" y="4415.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (1,134,609 samples, 0.24%)</title><rect x="73.6440%" y="4389" width="0.2441%" height="15" fill="rgb(238,229,9)" fg:x="342333581" fg:w="1134609"/><text x="73.8940%" y="4399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,134,609 samples, 0.24%)</title><rect x="73.6440%" y="4373" width="0.2441%" height="15" fill="rgb(253,159,18)" fg:x="342333581" fg:w="1134609"/><text x="73.8940%" y="4383.50"></text></g><g><title>hashbrown::map::make_hash (2,398,618 samples, 0.52%)</title><rect x="73.8881%" y="4469" width="0.5160%" height="15" fill="rgb(244,42,34)" fg:x="343468190" fg:w="2398618"/><text x="74.1381%" y="4479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,398,618 samples, 0.52%)</title><rect x="73.8881%" y="4453" width="0.5160%" height="15" fill="rgb(224,8,7)" fg:x="343468190" fg:w="2398618"/><text x="74.1381%" y="4463.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2,398,618 samples, 0.52%)</title><rect x="73.8881%" y="4437" width="0.5160%" height="15" fill="rgb(210,201,45)" fg:x="343468190" fg:w="2398618"/><text x="74.1381%" y="4447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2,398,618 samples, 0.52%)</title><rect x="73.8881%" y="4421" width="0.5160%" height="15" fill="rgb(252,185,21)" fg:x="343468190" fg:w="2398618"/><text x="74.1381%" y="4431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2,398,618 samples, 0.52%)</title><rect x="73.8881%" y="4405" width="0.5160%" height="15" fill="rgb(223,131,1)" fg:x="343468190" fg:w="2398618"/><text x="74.1381%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,189,953 samples, 0.26%)</title><rect x="74.1481%" y="4389" width="0.2560%" height="15" fill="rgb(245,141,16)" fg:x="344676855" fg:w="1189953"/><text x="74.3981%" y="4399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,189,953 samples, 0.26%)</title><rect x="74.1481%" y="4373" width="0.2560%" height="15" fill="rgb(229,55,45)" fg:x="344676855" fg:w="1189953"/><text x="74.3981%" y="4383.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (34,839,037 samples, 7.49%)</title><rect x="67.4065%" y="4565" width="7.4947%" height="15" fill="rgb(208,92,15)" fg:x="313338443" fg:w="34839037"/><text x="67.6565%" y="4575.50">main::benc..</text></g><g><title>main::benchmark::matches_tag_id (4,709,290 samples, 1.01%)</title><rect x="73.8881%" y="4549" width="1.0131%" height="15" fill="rgb(234,185,47)" fg:x="343468190" fg:w="4709290"/><text x="74.1381%" y="4559.50"></text></g><g><title>main::benchmark::get_node_tag_id (4,709,290 samples, 1.01%)</title><rect x="73.8881%" y="4533" width="1.0131%" height="15" fill="rgb(253,104,50)" fg:x="343468190" fg:w="4709290"/><text x="74.1381%" y="4543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4,709,290 samples, 1.01%)</title><rect x="73.8881%" y="4517" width="1.0131%" height="15" fill="rgb(205,70,7)" fg:x="343468190" fg:w="4709290"/><text x="74.1381%" y="4527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4,709,290 samples, 1.01%)</title><rect x="73.8881%" y="4501" width="1.0131%" height="15" fill="rgb(240,178,43)" fg:x="343468190" fg:w="4709290"/><text x="74.1381%" y="4511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4,709,290 samples, 1.01%)</title><rect x="73.8881%" y="4485" width="1.0131%" height="15" fill="rgb(214,112,2)" fg:x="343468190" fg:w="4709290"/><text x="74.1381%" y="4495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2,310,672 samples, 0.50%)</title><rect x="74.4041%" y="4469" width="0.4971%" height="15" fill="rgb(206,46,17)" fg:x="345866808" fg:w="2310672"/><text x="74.6541%" y="4479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,310,672 samples, 0.50%)</title><rect x="74.4041%" y="4453" width="0.4971%" height="15" fill="rgb(225,220,16)" fg:x="345866808" fg:w="2310672"/><text x="74.6541%" y="4463.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2,310,672 samples, 0.50%)</title><rect x="74.4041%" y="4437" width="0.4971%" height="15" fill="rgb(238,65,40)" fg:x="345866808" fg:w="2310672"/><text x="74.6541%" y="4447.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,203,432 samples, 0.26%)</title><rect x="74.6423%" y="4421" width="0.2589%" height="15" fill="rgb(230,151,21)" fg:x="346974048" fg:w="1203432"/><text x="74.8923%" y="4431.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (1,203,432 samples, 0.26%)</title><rect x="74.6423%" y="4405" width="0.2589%" height="15" fill="rgb(218,58,49)" fg:x="346974048" fg:w="1203432"/><text x="74.8923%" y="4415.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (1,225,082 samples, 0.26%)</title><rect x="74.9012%" y="4533" width="0.2635%" height="15" fill="rgb(219,179,14)" fg:x="348177480" fg:w="1225082"/><text x="75.1512%" y="4543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1,225,082 samples, 0.26%)</title><rect x="74.9012%" y="4517" width="0.2635%" height="15" fill="rgb(223,72,1)" fg:x="348177480" fg:w="1225082"/><text x="75.1512%" y="4527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,225,082 samples, 0.26%)</title><rect x="74.9012%" y="4501" width="0.2635%" height="15" fill="rgb(238,126,10)" fg:x="348177480" fg:w="1225082"/><text x="75.1512%" y="4511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,225,082 samples, 0.26%)</title><rect x="74.9012%" y="4485" width="0.2635%" height="15" fill="rgb(224,206,38)" fg:x="348177480" fg:w="1225082"/><text x="75.1512%" y="4495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1,225,082 samples, 0.26%)</title><rect x="74.9012%" y="4469" width="0.2635%" height="15" fill="rgb(212,201,54)" fg:x="348177480" fg:w="1225082"/><text x="75.1512%" y="4479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1,225,082 samples, 0.26%)</title><rect x="74.9012%" y="4453" width="0.2635%" height="15" fill="rgb(218,154,48)" fg:x="348177480" fg:w="1225082"/><text x="75.1512%" y="4463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (1,225,082 samples, 0.26%)</title><rect x="74.9012%" y="4437" width="0.2635%" height="15" fill="rgb(232,93,24)" fg:x="348177480" fg:w="1225082"/><text x="75.1512%" y="4447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (1,225,082 samples, 0.26%)</title><rect x="74.9012%" y="4421" width="0.2635%" height="15" fill="rgb(245,30,21)" fg:x="348177480" fg:w="1225082"/><text x="75.1512%" y="4431.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,154,600 samples, 0.25%)</title><rect x="75.1647%" y="4501" width="0.2484%" height="15" fill="rgb(242,148,29)" fg:x="349402562" fg:w="1154600"/><text x="75.4147%" y="4511.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,154,600 samples, 0.25%)</title><rect x="75.1647%" y="4485" width="0.2484%" height="15" fill="rgb(244,153,54)" fg:x="349402562" fg:w="1154600"/><text x="75.4147%" y="4495.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,154,600 samples, 0.25%)</title><rect x="75.1647%" y="4469" width="0.2484%" height="15" fill="rgb(252,87,22)" fg:x="349402562" fg:w="1154600"/><text x="75.4147%" y="4479.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,154,600 samples, 0.25%)</title><rect x="75.1647%" y="4453" width="0.2484%" height="15" fill="rgb(210,51,29)" fg:x="349402562" fg:w="1154600"/><text x="75.4147%" y="4463.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,154,600 samples, 0.25%)</title><rect x="75.1647%" y="4437" width="0.2484%" height="15" fill="rgb(242,136,47)" fg:x="349402562" fg:w="1154600"/><text x="75.4147%" y="4447.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2,311,180 samples, 0.50%)</title><rect x="75.6800%" y="4421" width="0.4972%" height="15" fill="rgb(238,68,4)" fg:x="351797732" fg:w="2311180"/><text x="75.9300%" y="4431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2,311,180 samples, 0.50%)</title><rect x="75.6800%" y="4405" width="0.4972%" height="15" fill="rgb(242,161,30)" fg:x="351797732" fg:w="2311180"/><text x="75.9300%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2,311,180 samples, 0.50%)</title><rect x="75.6800%" y="4389" width="0.4972%" height="15" fill="rgb(218,58,44)" fg:x="351797732" fg:w="2311180"/><text x="75.9300%" y="4399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,106,010 samples, 0.24%)</title><rect x="75.9393%" y="4373" width="0.2379%" height="15" fill="rgb(252,125,32)" fg:x="353002902" fg:w="1106010"/><text x="76.1893%" y="4383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,106,010 samples, 0.24%)</title><rect x="75.9393%" y="4357" width="0.2379%" height="15" fill="rgb(219,178,0)" fg:x="353002902" fg:w="1106010"/><text x="76.1893%" y="4367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,169,245 samples, 0.25%)</title><rect x="76.1772%" y="4341" width="0.2515%" height="15" fill="rgb(213,152,7)" fg:x="354108912" fg:w="1169245"/><text x="76.4272%" y="4351.50"></text></g><g><title>core::hash::sip::u8to64_le (1,169,245 samples, 0.25%)</title><rect x="76.1772%" y="4325" width="0.2515%" height="15" fill="rgb(249,109,34)" fg:x="354108912" fg:w="1169245"/><text x="76.4272%" y="4335.50"></text></g><g><title>hashbrown::map::make_hash (5,864,714 samples, 1.26%)</title><rect x="75.4131%" y="4453" width="1.2616%" height="15" fill="rgb(232,96,21)" fg:x="350557162" fg:w="5864714"/><text x="75.6631%" y="4463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,624,144 samples, 0.99%)</title><rect x="75.6800%" y="4437" width="0.9948%" height="15" fill="rgb(228,27,39)" fg:x="351797732" fg:w="4624144"/><text x="75.9300%" y="4447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,312,964 samples, 0.50%)</title><rect x="76.1772%" y="4421" width="0.4976%" height="15" fill="rgb(211,182,52)" fg:x="354108912" fg:w="2312964"/><text x="76.4272%" y="4431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2,312,964 samples, 0.50%)</title><rect x="76.1772%" y="4405" width="0.4976%" height="15" fill="rgb(234,178,38)" fg:x="354108912" fg:w="2312964"/><text x="76.4272%" y="4415.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (2,312,964 samples, 0.50%)</title><rect x="76.1772%" y="4389" width="0.4976%" height="15" fill="rgb(221,111,3)" fg:x="354108912" fg:w="2312964"/><text x="76.4272%" y="4399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2,312,964 samples, 0.50%)</title><rect x="76.1772%" y="4373" width="0.4976%" height="15" fill="rgb(228,175,21)" fg:x="354108912" fg:w="2312964"/><text x="76.4272%" y="4383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2,312,964 samples, 0.50%)</title><rect x="76.1772%" y="4357" width="0.4976%" height="15" fill="rgb(228,174,43)" fg:x="354108912" fg:w="2312964"/><text x="76.4272%" y="4367.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,143,719 samples, 0.25%)</title><rect x="76.4287%" y="4341" width="0.2460%" height="15" fill="rgb(211,191,0)" fg:x="355278157" fg:w="1143719"/><text x="76.6787%" y="4351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,143,719 samples, 0.25%)</title><rect x="76.4287%" y="4325" width="0.2460%" height="15" fill="rgb(253,117,3)" fg:x="355278157" fg:w="1143719"/><text x="76.6787%" y="4335.50"></text></g><g><title>core::hash::sip::u8to64_le (1,143,719 samples, 0.25%)</title><rect x="76.4287%" y="4309" width="0.2460%" height="15" fill="rgb(241,127,19)" fg:x="355278157" fg:w="1143719"/><text x="76.6787%" y="4319.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,117,680 samples, 0.24%)</title><rect x="76.6748%" y="4405" width="0.2404%" height="15" fill="rgb(218,103,12)" fg:x="356421876" fg:w="1117680"/><text x="76.9248%" y="4415.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (1,117,680 samples, 0.24%)</title><rect x="76.6748%" y="4389" width="0.2404%" height="15" fill="rgb(236,214,43)" fg:x="356421876" fg:w="1117680"/><text x="76.9248%" y="4399.50"></text></g><g><title>main::benchmark::matches_class_id (10,577,775 samples, 2.28%)</title><rect x="75.1647%" y="4533" width="2.2755%" height="15" fill="rgb(244,144,19)" fg:x="349402562" fg:w="10577775"/><text x="75.4147%" y="4543.50">m..</text></g><g><title>main::benchmark::node_has_class_id (10,577,775 samples, 2.28%)</title><rect x="75.1647%" y="4517" width="2.2755%" height="15" fill="rgb(246,188,10)" fg:x="349402562" fg:w="10577775"/><text x="75.4147%" y="4527.50">m..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9,423,175 samples, 2.03%)</title><rect x="75.4131%" y="4501" width="2.0271%" height="15" fill="rgb(212,193,33)" fg:x="350557162" fg:w="9423175"/><text x="75.6631%" y="4511.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9,423,175 samples, 2.03%)</title><rect x="75.4131%" y="4485" width="2.0271%" height="15" fill="rgb(241,51,29)" fg:x="350557162" fg:w="9423175"/><text x="75.6631%" y="4495.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9,423,175 samples, 2.03%)</title><rect x="75.4131%" y="4469" width="2.0271%" height="15" fill="rgb(211,58,19)" fg:x="350557162" fg:w="9423175"/><text x="75.6631%" y="4479.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3,558,461 samples, 0.77%)</title><rect x="76.6748%" y="4453" width="0.7655%" height="15" fill="rgb(229,111,26)" fg:x="356421876" fg:w="3558461"/><text x="76.9248%" y="4463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3,558,461 samples, 0.77%)</title><rect x="76.6748%" y="4437" width="0.7655%" height="15" fill="rgb(213,115,40)" fg:x="356421876" fg:w="3558461"/><text x="76.9248%" y="4447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (3,558,461 samples, 0.77%)</title><rect x="76.6748%" y="4421" width="0.7655%" height="15" fill="rgb(209,56,44)" fg:x="356421876" fg:w="3558461"/><text x="76.9248%" y="4431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (2,440,781 samples, 0.53%)</title><rect x="76.9152%" y="4405" width="0.5251%" height="15" fill="rgb(230,108,32)" fg:x="357539556" fg:w="2440781"/><text x="77.1652%" y="4415.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (2,440,781 samples, 0.53%)</title><rect x="76.9152%" y="4389" width="0.5251%" height="15" fill="rgb(216,165,31)" fg:x="357539556" fg:w="2440781"/><text x="77.1652%" y="4399.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (2,440,781 samples, 0.53%)</title><rect x="76.9152%" y="4373" width="0.5251%" height="15" fill="rgb(218,122,21)" fg:x="357539556" fg:w="2440781"/><text x="77.1652%" y="4383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2,440,781 samples, 0.53%)</title><rect x="76.9152%" y="4357" width="0.5251%" height="15" fill="rgb(223,224,47)" fg:x="357539556" fg:w="2440781"/><text x="77.1652%" y="4367.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2,440,781 samples, 0.53%)</title><rect x="76.9152%" y="4341" width="0.5251%" height="15" fill="rgb(238,102,44)" fg:x="357539556" fg:w="2440781"/><text x="77.1652%" y="4351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2,440,781 samples, 0.53%)</title><rect x="76.9152%" y="4325" width="0.5251%" height="15" fill="rgb(236,46,40)" fg:x="357539556" fg:w="2440781"/><text x="77.1652%" y="4335.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (2,440,781 samples, 0.53%)</title><rect x="76.9152%" y="4309" width="0.5251%" height="15" fill="rgb(247,202,50)" fg:x="357539556" fg:w="2440781"/><text x="77.1652%" y="4319.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2,440,781 samples, 0.53%)</title><rect x="76.9152%" y="4293" width="0.5251%" height="15" fill="rgb(209,99,20)" fg:x="357539556" fg:w="2440781"/><text x="77.1652%" y="4303.50"></text></g><g><title>[libc.so.6] (1,178,219 samples, 0.25%)</title><rect x="77.1868%" y="4277" width="0.2535%" height="15" fill="rgb(252,27,34)" fg:x="358802118" fg:w="1178219"/><text x="77.4368%" y="4287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,191,535 samples, 0.26%)</title><rect x="77.4403%" y="4341" width="0.2563%" height="15" fill="rgb(215,206,23)" fg:x="359980337" fg:w="1191535"/><text x="77.6903%" y="4351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,191,535 samples, 0.26%)</title><rect x="77.4403%" y="4325" width="0.2563%" height="15" fill="rgb(212,135,36)" fg:x="359980337" fg:w="1191535"/><text x="77.6903%" y="4335.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (3,533,164 samples, 0.76%)</title><rect x="77.4403%" y="4389" width="0.7601%" height="15" fill="rgb(240,189,1)" fg:x="359980337" fg:w="3533164"/><text x="77.6903%" y="4399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3,533,164 samples, 0.76%)</title><rect x="77.4403%" y="4373" width="0.7601%" height="15" fill="rgb(242,56,20)" fg:x="359980337" fg:w="3533164"/><text x="77.6903%" y="4383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3,533,164 samples, 0.76%)</title><rect x="77.4403%" y="4357" width="0.7601%" height="15" fill="rgb(247,132,33)" fg:x="359980337" fg:w="3533164"/><text x="77.6903%" y="4367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2,341,629 samples, 0.50%)</title><rect x="77.6966%" y="4341" width="0.5037%" height="15" fill="rgb(208,149,11)" fg:x="361171872" fg:w="2341629"/><text x="77.9466%" y="4351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,126,097 samples, 0.24%)</title><rect x="77.9581%" y="4325" width="0.2423%" height="15" fill="rgb(211,33,11)" fg:x="362387404" fg:w="1126097"/><text x="78.2081%" y="4335.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (976,938 samples, 0.21%)</title><rect x="78.2003%" y="4389" width="0.2102%" height="15" fill="rgb(221,29,38)" fg:x="363513501" fg:w="976938"/><text x="78.4503%" y="4399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,334,911 samples, 0.72%)</title><rect x="78.4105%" y="4309" width="0.7174%" height="15" fill="rgb(206,182,49)" fg:x="364490439" fg:w="3334911"/><text x="78.6605%" y="4319.50"></text></g><g><title>core::hash::sip::u8to64_le (2,192,859 samples, 0.47%)</title><rect x="78.6562%" y="4293" width="0.4717%" height="15" fill="rgb(216,140,1)" fg:x="365632491" fg:w="2192859"/><text x="78.9062%" y="4303.50"></text></g><g><title>hashbrown::map::make_hash (10,344,718 samples, 2.23%)</title><rect x="77.4403%" y="4421" width="2.2254%" height="15" fill="rgb(232,57,40)" fg:x="359980337" fg:w="10344718"/><text x="77.6903%" y="4431.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (10,344,718 samples, 2.23%)</title><rect x="77.4403%" y="4405" width="2.2254%" height="15" fill="rgb(224,186,18)" fg:x="359980337" fg:w="10344718"/><text x="77.6903%" y="4415.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5,834,616 samples, 1.26%)</title><rect x="78.4105%" y="4389" width="1.2552%" height="15" fill="rgb(215,121,11)" fg:x="364490439" fg:w="5834616"/><text x="78.6605%" y="4399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (5,834,616 samples, 1.26%)</title><rect x="78.4105%" y="4373" width="1.2552%" height="15" fill="rgb(245,147,10)" fg:x="364490439" fg:w="5834616"/><text x="78.6605%" y="4383.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (5,834,616 samples, 1.26%)</title><rect x="78.4105%" y="4357" width="1.2552%" height="15" fill="rgb(238,153,13)" fg:x="364490439" fg:w="5834616"/><text x="78.6605%" y="4367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (5,834,616 samples, 1.26%)</title><rect x="78.4105%" y="4341" width="1.2552%" height="15" fill="rgb(233,108,0)" fg:x="364490439" fg:w="5834616"/><text x="78.6605%" y="4351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (5,834,616 samples, 1.26%)</title><rect x="78.4105%" y="4325" width="1.2552%" height="15" fill="rgb(212,157,17)" fg:x="364490439" fg:w="5834616"/><text x="78.6605%" y="4335.50"></text></g><g><title>core::hash::Hasher::write_u8 (2,499,705 samples, 0.54%)</title><rect x="79.1279%" y="4309" width="0.5377%" height="15" fill="rgb(225,213,38)" fg:x="367825350" fg:w="2499705"/><text x="79.3779%" y="4319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,499,705 samples, 0.54%)</title><rect x="79.1279%" y="4293" width="0.5377%" height="15" fill="rgb(248,16,11)" fg:x="367825350" fg:w="2499705"/><text x="79.3779%" y="4303.50"></text></g><g><title>core::hash::sip::u8to64_le (1,214,423 samples, 0.26%)</title><rect x="79.4044%" y="4277" width="0.2613%" height="15" fill="rgb(241,33,4)" fg:x="369110632" fg:w="1214423"/><text x="79.6544%" y="4287.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (24,261,784 samples, 5.22%)</title><rect x="74.9012%" y="4549" width="5.2193%" height="15" fill="rgb(222,26,43)" fg:x="348177480" fg:w="24261784"/><text x="75.1512%" y="4559.50">main::..</text></g><g><title>main::benchmark::matches_id_id (12,458,927 samples, 2.68%)</title><rect x="77.4403%" y="4533" width="2.6802%" height="15" fill="rgb(243,29,36)" fg:x="359980337" fg:w="12458927"/><text x="77.6903%" y="4543.50">ma..</text></g><g><title>main::benchmark::get_node_id_id (12,458,927 samples, 2.68%)</title><rect x="77.4403%" y="4517" width="2.6802%" height="15" fill="rgb(241,9,27)" fg:x="359980337" fg:w="12458927"/><text x="77.6903%" y="4527.50">ma..</text></g><g><title>core::option::Option&lt;T&gt;::and_then (12,458,927 samples, 2.68%)</title><rect x="77.4403%" y="4501" width="2.6802%" height="15" fill="rgb(205,117,26)" fg:x="359980337" fg:w="12458927"/><text x="77.6903%" y="4511.50">co..</text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (12,458,927 samples, 2.68%)</title><rect x="77.4403%" y="4485" width="2.6802%" height="15" fill="rgb(209,80,39)" fg:x="359980337" fg:w="12458927"/><text x="77.6903%" y="4495.50">ma..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12,458,927 samples, 2.68%)</title><rect x="77.4403%" y="4469" width="2.6802%" height="15" fill="rgb(239,155,6)" fg:x="359980337" fg:w="12458927"/><text x="77.6903%" y="4479.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (12,458,927 samples, 2.68%)</title><rect x="77.4403%" y="4453" width="2.6802%" height="15" fill="rgb(212,104,12)" fg:x="359980337" fg:w="12458927"/><text x="77.6903%" y="4463.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (12,458,927 samples, 2.68%)</title><rect x="77.4403%" y="4437" width="2.6802%" height="15" fill="rgb(234,204,3)" fg:x="359980337" fg:w="12458927"/><text x="77.6903%" y="4447.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2,114,209 samples, 0.45%)</title><rect x="79.6657%" y="4421" width="0.4548%" height="15" fill="rgb(251,218,7)" fg:x="370325055" fg:w="2114209"/><text x="79.9157%" y="4431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,114,209 samples, 0.45%)</title><rect x="79.6657%" y="4405" width="0.4548%" height="15" fill="rgb(221,81,32)" fg:x="370325055" fg:w="2114209"/><text x="79.9157%" y="4415.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2,114,209 samples, 0.45%)</title><rect x="79.6657%" y="4389" width="0.4548%" height="15" fill="rgb(214,152,26)" fg:x="370325055" fg:w="2114209"/><text x="79.9157%" y="4399.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load (963,904 samples, 0.21%)</title><rect x="79.9131%" y="4373" width="0.2074%" height="15" fill="rgb(223,22,3)" fg:x="371475360" fg:w="963904"/><text x="80.1631%" y="4383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (963,904 samples, 0.21%)</title><rect x="79.9131%" y="4357" width="0.2074%" height="15" fill="rgb(207,174,7)" fg:x="371475360" fg:w="963904"/><text x="80.1631%" y="4367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (963,904 samples, 0.21%)</title><rect x="79.9131%" y="4341" width="0.2074%" height="15" fill="rgb(224,19,52)" fg:x="371475360" fg:w="963904"/><text x="80.1631%" y="4351.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (1,244,579 samples, 0.27%)</title><rect x="80.3812%" y="4517" width="0.2677%" height="15" fill="rgb(228,24,14)" fg:x="373651198" fg:w="1244579"/><text x="80.6312%" y="4527.50"></text></g><g><title>css_bitvector_compiler::BitVector::with_capacity (1,150,647 samples, 0.25%)</title><rect x="80.6489%" y="4517" width="0.2475%" height="15" fill="rgb(230,153,43)" fg:x="374895777" fg:w="1150647"/><text x="80.8989%" y="4527.50"></text></g><g><title>alloc::vec::from_elem (1,150,647 samples, 0.25%)</title><rect x="80.6489%" y="4501" width="0.2475%" height="15" fill="rgb(231,106,12)" fg:x="374895777" fg:w="1150647"/><text x="80.8989%" y="4511.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,150,647 samples, 0.25%)</title><rect x="80.6489%" y="4485" width="0.2475%" height="15" fill="rgb(215,92,2)" fg:x="374895777" fg:w="1150647"/><text x="80.8989%" y="4495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1,150,647 samples, 0.25%)</title><rect x="80.6489%" y="4469" width="0.2475%" height="15" fill="rgb(249,143,25)" fg:x="374895777" fg:w="1150647"/><text x="80.8989%" y="4479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (1,150,647 samples, 0.25%)</title><rect x="80.6489%" y="4453" width="0.2475%" height="15" fill="rgb(252,7,35)" fg:x="374895777" fg:w="1150647"/><text x="80.8989%" y="4463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,150,647 samples, 0.25%)</title><rect x="80.6489%" y="4437" width="0.2475%" height="15" fill="rgb(216,69,40)" fg:x="374895777" fg:w="1150647"/><text x="80.8989%" y="4447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1,150,647 samples, 0.25%)</title><rect x="80.6489%" y="4421" width="0.2475%" height="15" fill="rgb(240,36,33)" fg:x="374895777" fg:w="1150647"/><text x="80.8989%" y="4431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,150,647 samples, 0.25%)</title><rect x="80.6489%" y="4405" width="0.2475%" height="15" fill="rgb(231,128,14)" fg:x="374895777" fg:w="1150647"/><text x="80.8989%" y="4415.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1,150,647 samples, 0.25%)</title><rect x="80.6489%" y="4389" width="0.2475%" height="15" fill="rgb(245,143,14)" fg:x="374895777" fg:w="1150647"/><text x="80.8989%" y="4399.50"></text></g><g><title>__libc_calloc (1,150,647 samples, 0.25%)</title><rect x="80.6489%" y="4373" width="0.2475%" height="15" fill="rgb(222,130,28)" fg:x="374895777" fg:w="1150647"/><text x="80.8989%" y="4383.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,231,315 samples, 0.26%)</title><rect x="80.8965%" y="4485" width="0.2649%" height="15" fill="rgb(212,10,48)" fg:x="376046424" fg:w="1231315"/><text x="81.1465%" y="4495.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,231,315 samples, 0.26%)</title><rect x="80.8965%" y="4469" width="0.2649%" height="15" fill="rgb(254,118,45)" fg:x="376046424" fg:w="1231315"/><text x="81.1465%" y="4479.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,231,315 samples, 0.26%)</title><rect x="80.8965%" y="4453" width="0.2649%" height="15" fill="rgb(228,6,45)" fg:x="376046424" fg:w="1231315"/><text x="81.1465%" y="4463.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,231,315 samples, 0.26%)</title><rect x="80.8965%" y="4437" width="0.2649%" height="15" fill="rgb(241,18,35)" fg:x="376046424" fg:w="1231315"/><text x="81.1465%" y="4447.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,231,315 samples, 0.26%)</title><rect x="80.8965%" y="4421" width="0.2649%" height="15" fill="rgb(227,214,53)" fg:x="376046424" fg:w="1231315"/><text x="81.1465%" y="4431.50"></text></g><g><title>main::benchmark::matches_class_id (2,421,713 samples, 0.52%)</title><rect x="80.8965%" y="4517" width="0.5210%" height="15" fill="rgb(224,107,51)" fg:x="376046424" fg:w="2421713"/><text x="81.1465%" y="4527.50"></text></g><g><title>main::benchmark::node_has_class_id (2,421,713 samples, 0.52%)</title><rect x="80.8965%" y="4501" width="0.5210%" height="15" fill="rgb(248,60,28)" fg:x="376046424" fg:w="2421713"/><text x="81.1465%" y="4511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,190,398 samples, 0.26%)</title><rect x="81.1614%" y="4485" width="0.2561%" height="15" fill="rgb(249,101,23)" fg:x="377277739" fg:w="1190398"/><text x="81.4114%" y="4495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,190,398 samples, 0.26%)</title><rect x="81.1614%" y="4469" width="0.2561%" height="15" fill="rgb(228,51,19)" fg:x="377277739" fg:w="1190398"/><text x="81.4114%" y="4479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,190,398 samples, 0.26%)</title><rect x="81.1614%" y="4453" width="0.2561%" height="15" fill="rgb(213,20,6)" fg:x="377277739" fg:w="1190398"/><text x="81.4114%" y="4463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,190,398 samples, 0.26%)</title><rect x="81.1614%" y="4437" width="0.2561%" height="15" fill="rgb(212,124,10)" fg:x="377277739" fg:w="1190398"/><text x="81.4114%" y="4447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,190,398 samples, 0.26%)</title><rect x="81.1614%" y="4421" width="0.2561%" height="15" fill="rgb(248,3,40)" fg:x="377277739" fg:w="1190398"/><text x="81.4114%" y="4431.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,190,398 samples, 0.26%)</title><rect x="81.1614%" y="4405" width="0.2561%" height="15" fill="rgb(223,178,23)" fg:x="377277739" fg:w="1190398"/><text x="81.4114%" y="4415.50"></text></g><g><title>hashbrown::control::tag::Tag::full (1,190,398 samples, 0.26%)</title><rect x="81.1614%" y="4389" width="0.2561%" height="15" fill="rgb(240,132,45)" fg:x="377277739" fg:w="1190398"/><text x="81.4114%" y="4399.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (3,552,229 samples, 0.76%)</title><rect x="81.4174%" y="4373" width="0.7642%" height="15" fill="rgb(245,164,36)" fg:x="378468137" fg:w="3552229"/><text x="81.6674%" y="4383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3,552,229 samples, 0.76%)</title><rect x="81.4174%" y="4357" width="0.7642%" height="15" fill="rgb(231,188,53)" fg:x="378468137" fg:w="3552229"/><text x="81.6674%" y="4367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3,552,229 samples, 0.76%)</title><rect x="81.4174%" y="4341" width="0.7642%" height="15" fill="rgb(237,198,39)" fg:x="378468137" fg:w="3552229"/><text x="81.6674%" y="4351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3,552,229 samples, 0.76%)</title><rect x="81.4174%" y="4325" width="0.7642%" height="15" fill="rgb(223,120,35)" fg:x="378468137" fg:w="3552229"/><text x="81.6674%" y="4335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2,330,836 samples, 0.50%)</title><rect x="81.6802%" y="4309" width="0.5014%" height="15" fill="rgb(253,107,49)" fg:x="379689530" fg:w="2330836"/><text x="81.9302%" y="4319.50"></text></g><g><title>hashbrown::map::make_hash (4,818,894 samples, 1.04%)</title><rect x="81.4174%" y="4405" width="1.0367%" height="15" fill="rgb(216,44,31)" fg:x="378468137" fg:w="4818894"/><text x="81.6674%" y="4415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,818,894 samples, 1.04%)</title><rect x="81.4174%" y="4389" width="1.0367%" height="15" fill="rgb(253,87,21)" fg:x="378468137" fg:w="4818894"/><text x="81.6674%" y="4399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,266,665 samples, 0.27%)</title><rect x="82.1816%" y="4373" width="0.2725%" height="15" fill="rgb(226,18,2)" fg:x="382020366" fg:w="1266665"/><text x="82.4316%" y="4383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,266,665 samples, 0.27%)</title><rect x="82.1816%" y="4357" width="0.2725%" height="15" fill="rgb(216,8,46)" fg:x="382020366" fg:w="1266665"/><text x="82.4316%" y="4367.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,266,665 samples, 0.27%)</title><rect x="82.1816%" y="4341" width="0.2725%" height="15" fill="rgb(226,140,39)" fg:x="382020366" fg:w="1266665"/><text x="82.4316%" y="4351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,266,665 samples, 0.27%)</title><rect x="82.1816%" y="4325" width="0.2725%" height="15" fill="rgb(221,194,54)" fg:x="382020366" fg:w="1266665"/><text x="82.4316%" y="4335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,266,665 samples, 0.27%)</title><rect x="82.1816%" y="4309" width="0.2725%" height="15" fill="rgb(213,92,11)" fg:x="382020366" fg:w="1266665"/><text x="82.4316%" y="4319.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,266,665 samples, 0.27%)</title><rect x="82.1816%" y="4293" width="0.2725%" height="15" fill="rgb(229,162,46)" fg:x="382020366" fg:w="1266665"/><text x="82.4316%" y="4303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,266,665 samples, 0.27%)</title><rect x="82.1816%" y="4277" width="0.2725%" height="15" fill="rgb(214,111,36)" fg:x="382020366" fg:w="1266665"/><text x="82.4316%" y="4287.50"></text></g><g><title>main::benchmark::matches_id_id (5,856,926 samples, 1.26%)</title><rect x="81.4174%" y="4517" width="1.2600%" height="15" fill="rgb(207,6,21)" fg:x="378468137" fg:w="5856926"/><text x="81.6674%" y="4527.50"></text></g><g><title>main::benchmark::get_node_id_id (5,856,926 samples, 1.26%)</title><rect x="81.4174%" y="4501" width="1.2600%" height="15" fill="rgb(213,127,38)" fg:x="378468137" fg:w="5856926"/><text x="81.6674%" y="4511.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (5,856,926 samples, 1.26%)</title><rect x="81.4174%" y="4485" width="1.2600%" height="15" fill="rgb(238,118,32)" fg:x="378468137" fg:w="5856926"/><text x="81.6674%" y="4495.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (5,856,926 samples, 1.26%)</title><rect x="81.4174%" y="4469" width="1.2600%" height="15" fill="rgb(240,139,39)" fg:x="378468137" fg:w="5856926"/><text x="81.6674%" y="4479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5,856,926 samples, 1.26%)</title><rect x="81.4174%" y="4453" width="1.2600%" height="15" fill="rgb(235,10,37)" fg:x="378468137" fg:w="5856926"/><text x="81.6674%" y="4463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5,856,926 samples, 1.26%)</title><rect x="81.4174%" y="4437" width="1.2600%" height="15" fill="rgb(249,171,38)" fg:x="378468137" fg:w="5856926"/><text x="81.6674%" y="4447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5,856,926 samples, 1.26%)</title><rect x="81.4174%" y="4421" width="1.2600%" height="15" fill="rgb(242,144,32)" fg:x="378468137" fg:w="5856926"/><text x="81.6674%" y="4431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,038,032 samples, 0.22%)</title><rect x="82.4541%" y="4405" width="0.2233%" height="15" fill="rgb(217,117,21)" fg:x="383287031" fg:w="1038032"/><text x="82.7041%" y="4415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,038,032 samples, 0.22%)</title><rect x="82.4541%" y="4389" width="0.2233%" height="15" fill="rgb(249,87,1)" fg:x="383287031" fg:w="1038032"/><text x="82.7041%" y="4399.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,038,032 samples, 0.22%)</title><rect x="82.4541%" y="4373" width="0.2233%" height="15" fill="rgb(248,196,48)" fg:x="383287031" fg:w="1038032"/><text x="82.7041%" y="4383.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (1,038,032 samples, 0.22%)</title><rect x="82.4541%" y="4357" width="0.2233%" height="15" fill="rgb(251,206,33)" fg:x="383287031" fg:w="1038032"/><text x="82.7041%" y="4367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,038,032 samples, 0.22%)</title><rect x="82.4541%" y="4341" width="0.2233%" height="15" fill="rgb(232,141,28)" fg:x="383287031" fg:w="1038032"/><text x="82.7041%" y="4351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,210,762 samples, 0.26%)</title><rect x="82.6774%" y="4405" width="0.2605%" height="15" fill="rgb(209,167,14)" fg:x="384325063" fg:w="1210762"/><text x="82.9274%" y="4415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,210,762 samples, 0.26%)</title><rect x="82.6774%" y="4389" width="0.2605%" height="15" fill="rgb(225,11,50)" fg:x="384325063" fg:w="1210762"/><text x="82.9274%" y="4399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,210,762 samples, 0.26%)</title><rect x="82.6774%" y="4373" width="0.2605%" height="15" fill="rgb(209,50,20)" fg:x="384325063" fg:w="1210762"/><text x="82.9274%" y="4383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,210,762 samples, 0.26%)</title><rect x="82.6774%" y="4357" width="0.2605%" height="15" fill="rgb(212,17,46)" fg:x="384325063" fg:w="1210762"/><text x="82.9274%" y="4367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,210,762 samples, 0.26%)</title><rect x="82.6774%" y="4341" width="0.2605%" height="15" fill="rgb(216,101,39)" fg:x="384325063" fg:w="1210762"/><text x="82.9274%" y="4351.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (14,266,419 samples, 3.07%)</title><rect x="80.1205%" y="4533" width="3.0690%" height="15" fill="rgb(212,228,48)" fg:x="372439264" fg:w="14266419"/><text x="80.3705%" y="4543.50">mai..</text></g><g><title>main::benchmark::matches_tag_id (2,380,620 samples, 0.51%)</title><rect x="82.6774%" y="4517" width="0.5121%" height="15" fill="rgb(250,6,50)" fg:x="384325063" fg:w="2380620"/><text x="82.9274%" y="4527.50"></text></g><g><title>main::benchmark::get_node_tag_id (2,380,620 samples, 0.51%)</title><rect x="82.6774%" y="4501" width="0.5121%" height="15" fill="rgb(250,160,48)" fg:x="384325063" fg:w="2380620"/><text x="82.9274%" y="4511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,380,620 samples, 0.51%)</title><rect x="82.6774%" y="4485" width="0.5121%" height="15" fill="rgb(244,216,33)" fg:x="384325063" fg:w="2380620"/><text x="82.9274%" y="4495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,380,620 samples, 0.51%)</title><rect x="82.6774%" y="4469" width="0.5121%" height="15" fill="rgb(207,157,5)" fg:x="384325063" fg:w="2380620"/><text x="82.9274%" y="4479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,380,620 samples, 0.51%)</title><rect x="82.6774%" y="4453" width="0.5121%" height="15" fill="rgb(228,199,8)" fg:x="384325063" fg:w="2380620"/><text x="82.9274%" y="4463.50"></text></g><g><title>hashbrown::map::make_hash (2,380,620 samples, 0.51%)</title><rect x="82.6774%" y="4437" width="0.5121%" height="15" fill="rgb(227,80,20)" fg:x="384325063" fg:w="2380620"/><text x="82.9274%" y="4447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,380,620 samples, 0.51%)</title><rect x="82.6774%" y="4421" width="0.5121%" height="15" fill="rgb(222,9,33)" fg:x="384325063" fg:w="2380620"/><text x="82.9274%" y="4431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,169,858 samples, 0.25%)</title><rect x="82.9379%" y="4405" width="0.2517%" height="15" fill="rgb(239,44,28)" fg:x="385535825" fg:w="1169858"/><text x="83.1879%" y="4415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,169,858 samples, 0.25%)</title><rect x="82.9379%" y="4389" width="0.2517%" height="15" fill="rgb(249,187,43)" fg:x="385535825" fg:w="1169858"/><text x="83.1879%" y="4399.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,169,858 samples, 0.25%)</title><rect x="82.9379%" y="4373" width="0.2517%" height="15" fill="rgb(216,141,28)" fg:x="385535825" fg:w="1169858"/><text x="83.1879%" y="4383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,169,858 samples, 0.25%)</title><rect x="82.9379%" y="4357" width="0.2517%" height="15" fill="rgb(230,154,53)" fg:x="385535825" fg:w="1169858"/><text x="83.1879%" y="4367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,169,858 samples, 0.25%)</title><rect x="82.9379%" y="4341" width="0.2517%" height="15" fill="rgb(227,82,4)" fg:x="385535825" fg:w="1169858"/><text x="83.1879%" y="4351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,169,858 samples, 0.25%)</title><rect x="82.9379%" y="4325" width="0.2517%" height="15" fill="rgb(220,107,16)" fg:x="385535825" fg:w="1169858"/><text x="83.1879%" y="4335.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (2,462,851 samples, 0.53%)</title><rect x="83.1895%" y="4501" width="0.5298%" height="15" fill="rgb(207,187,2)" fg:x="386705683" fg:w="2462851"/><text x="83.4395%" y="4511.50"></text></g><g><title>css_bitvector_compiler::BitVector::with_capacity (1,212,953 samples, 0.26%)</title><rect x="83.7193%" y="4501" width="0.2609%" height="15" fill="rgb(210,162,52)" fg:x="389168534" fg:w="1212953"/><text x="83.9693%" y="4511.50"></text></g><g><title>alloc::vec::from_elem (1,212,953 samples, 0.26%)</title><rect x="83.7193%" y="4485" width="0.2609%" height="15" fill="rgb(217,216,49)" fg:x="389168534" fg:w="1212953"/><text x="83.9693%" y="4495.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,212,953 samples, 0.26%)</title><rect x="83.7193%" y="4469" width="0.2609%" height="15" fill="rgb(218,146,49)" fg:x="389168534" fg:w="1212953"/><text x="83.9693%" y="4479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1,212,953 samples, 0.26%)</title><rect x="83.7193%" y="4453" width="0.2609%" height="15" fill="rgb(216,55,40)" fg:x="389168534" fg:w="1212953"/><text x="83.9693%" y="4463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (1,212,953 samples, 0.26%)</title><rect x="83.7193%" y="4437" width="0.2609%" height="15" fill="rgb(208,196,21)" fg:x="389168534" fg:w="1212953"/><text x="83.9693%" y="4447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,212,953 samples, 0.26%)</title><rect x="83.7193%" y="4421" width="0.2609%" height="15" fill="rgb(242,117,42)" fg:x="389168534" fg:w="1212953"/><text x="83.9693%" y="4431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1,212,953 samples, 0.26%)</title><rect x="83.7193%" y="4405" width="0.2609%" height="15" fill="rgb(210,11,23)" fg:x="389168534" fg:w="1212953"/><text x="83.9693%" y="4415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,212,953 samples, 0.26%)</title><rect x="83.7193%" y="4389" width="0.2609%" height="15" fill="rgb(217,110,2)" fg:x="389168534" fg:w="1212953"/><text x="83.9693%" y="4399.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1,212,953 samples, 0.26%)</title><rect x="83.7193%" y="4373" width="0.2609%" height="15" fill="rgb(229,77,54)" fg:x="389168534" fg:w="1212953"/><text x="83.9693%" y="4383.50"></text></g><g><title>__libc_calloc (1,212,953 samples, 0.26%)</title><rect x="83.7193%" y="4357" width="0.2609%" height="15" fill="rgb(218,53,16)" fg:x="389168534" fg:w="1212953"/><text x="83.9693%" y="4367.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (3,625,003 samples, 0.78%)</title><rect x="84.1723%" y="4357" width="0.7798%" height="15" fill="rgb(215,38,13)" fg:x="391274259" fg:w="3625003"/><text x="84.4223%" y="4367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3,625,003 samples, 0.78%)</title><rect x="84.1723%" y="4341" width="0.7798%" height="15" fill="rgb(235,42,18)" fg:x="391274259" fg:w="3625003"/><text x="84.4223%" y="4351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3,625,003 samples, 0.78%)</title><rect x="84.1723%" y="4325" width="0.7798%" height="15" fill="rgb(219,66,54)" fg:x="391274259" fg:w="3625003"/><text x="84.4223%" y="4335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2,419,880 samples, 0.52%)</title><rect x="84.4316%" y="4309" width="0.5206%" height="15" fill="rgb(222,205,4)" fg:x="392479382" fg:w="2419880"/><text x="84.6816%" y="4319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2,419,880 samples, 0.52%)</title><rect x="84.4316%" y="4293" width="0.5206%" height="15" fill="rgb(227,213,46)" fg:x="392479382" fg:w="2419880"/><text x="84.6816%" y="4303.50"></text></g><g><title>main::benchmark::matches_id_id (5,667,502 samples, 1.22%)</title><rect x="83.9803%" y="4501" width="1.2192%" height="15" fill="rgb(250,145,42)" fg:x="390381487" fg:w="5667502"/><text x="84.2303%" y="4511.50"></text></g><g><title>main::benchmark::get_node_id_id (5,667,502 samples, 1.22%)</title><rect x="83.9803%" y="4485" width="1.2192%" height="15" fill="rgb(219,15,2)" fg:x="390381487" fg:w="5667502"/><text x="84.2303%" y="4495.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (5,667,502 samples, 1.22%)</title><rect x="83.9803%" y="4469" width="1.2192%" height="15" fill="rgb(231,181,52)" fg:x="390381487" fg:w="5667502"/><text x="84.2303%" y="4479.50"></text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (5,667,502 samples, 1.22%)</title><rect x="83.9803%" y="4453" width="1.2192%" height="15" fill="rgb(235,1,42)" fg:x="390381487" fg:w="5667502"/><text x="84.2303%" y="4463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5,667,502 samples, 1.22%)</title><rect x="83.9803%" y="4437" width="1.2192%" height="15" fill="rgb(249,88,27)" fg:x="390381487" fg:w="5667502"/><text x="84.2303%" y="4447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5,667,502 samples, 1.22%)</title><rect x="83.9803%" y="4421" width="1.2192%" height="15" fill="rgb(235,145,16)" fg:x="390381487" fg:w="5667502"/><text x="84.2303%" y="4431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5,667,502 samples, 1.22%)</title><rect x="83.9803%" y="4405" width="1.2192%" height="15" fill="rgb(237,114,19)" fg:x="390381487" fg:w="5667502"/><text x="84.2303%" y="4415.50"></text></g><g><title>hashbrown::map::make_hash (5,667,502 samples, 1.22%)</title><rect x="83.9803%" y="4389" width="1.2192%" height="15" fill="rgb(238,51,50)" fg:x="390381487" fg:w="5667502"/><text x="84.2303%" y="4399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5,667,502 samples, 1.22%)</title><rect x="83.9803%" y="4373" width="1.2192%" height="15" fill="rgb(205,194,25)" fg:x="390381487" fg:w="5667502"/><text x="84.2303%" y="4383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,149,727 samples, 0.25%)</title><rect x="84.9522%" y="4357" width="0.2473%" height="15" fill="rgb(215,203,17)" fg:x="394899262" fg:w="1149727"/><text x="85.2022%" y="4367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,149,727 samples, 0.25%)</title><rect x="84.9522%" y="4341" width="0.2473%" height="15" fill="rgb(233,112,49)" fg:x="394899262" fg:w="1149727"/><text x="85.2022%" y="4351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,149,727 samples, 0.25%)</title><rect x="84.9522%" y="4325" width="0.2473%" height="15" fill="rgb(241,130,26)" fg:x="394899262" fg:w="1149727"/><text x="85.2022%" y="4335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,149,727 samples, 0.25%)</title><rect x="84.9522%" y="4309" width="0.2473%" height="15" fill="rgb(252,223,19)" fg:x="394899262" fg:w="1149727"/><text x="85.2022%" y="4319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,149,727 samples, 0.25%)</title><rect x="84.9522%" y="4293" width="0.2473%" height="15" fill="rgb(211,95,25)" fg:x="394899262" fg:w="1149727"/><text x="85.2022%" y="4303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,149,727 samples, 0.25%)</title><rect x="84.9522%" y="4277" width="0.2473%" height="15" fill="rgb(251,182,27)" fg:x="394899262" fg:w="1149727"/><text x="85.2022%" y="4287.50"></text></g><g><title>main::benchmark::process_node_generated_from_scratch (10,542,716 samples, 2.27%)</title><rect x="83.1895%" y="4517" width="2.2680%" height="15" fill="rgb(238,24,4)" fg:x="386705683" fg:w="10542716"/><text x="83.4395%" y="4527.50">m..</text></g><g><title>main::benchmark::matches_tag_id (1,199,410 samples, 0.26%)</title><rect x="85.1995%" y="4501" width="0.2580%" height="15" fill="rgb(224,220,25)" fg:x="396048989" fg:w="1199410"/><text x="85.4495%" y="4511.50"></text></g><g><title>main::benchmark::get_node_tag_id (1,199,410 samples, 0.26%)</title><rect x="85.1995%" y="4485" width="0.2580%" height="15" fill="rgb(239,133,26)" fg:x="396048989" fg:w="1199410"/><text x="85.4495%" y="4495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,199,410 samples, 0.26%)</title><rect x="85.1995%" y="4469" width="0.2580%" height="15" fill="rgb(211,94,48)" fg:x="396048989" fg:w="1199410"/><text x="85.4495%" y="4479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,199,410 samples, 0.26%)</title><rect x="85.1995%" y="4453" width="0.2580%" height="15" fill="rgb(239,87,6)" fg:x="396048989" fg:w="1199410"/><text x="85.4495%" y="4463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,199,410 samples, 0.26%)</title><rect x="85.1995%" y="4437" width="0.2580%" height="15" fill="rgb(227,62,0)" fg:x="396048989" fg:w="1199410"/><text x="85.4495%" y="4447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,199,410 samples, 0.26%)</title><rect x="85.1995%" y="4421" width="0.2580%" height="15" fill="rgb(211,226,4)" fg:x="396048989" fg:w="1199410"/><text x="85.4495%" y="4431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,199,410 samples, 0.26%)</title><rect x="85.1995%" y="4405" width="0.2580%" height="15" fill="rgb(253,38,52)" fg:x="396048989" fg:w="1199410"/><text x="85.4495%" y="4415.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1,199,410 samples, 0.26%)</title><rect x="85.1995%" y="4389" width="0.2580%" height="15" fill="rgb(229,126,40)" fg:x="396048989" fg:w="1199410"/><text x="85.4495%" y="4399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1,199,410 samples, 0.26%)</title><rect x="85.1995%" y="4373" width="0.2580%" height="15" fill="rgb(229,165,44)" fg:x="396048989" fg:w="1199410"/><text x="85.4495%" y="4383.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (1,199,410 samples, 0.26%)</title><rect x="85.1995%" y="4357" width="0.2580%" height="15" fill="rgb(247,95,47)" fg:x="396048989" fg:w="1199410"/><text x="85.4495%" y="4367.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1,199,410 samples, 0.26%)</title><rect x="85.1995%" y="4341" width="0.2580%" height="15" fill="rgb(216,140,30)" fg:x="396048989" fg:w="1199410"/><text x="85.4495%" y="4351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,199,410 samples, 0.26%)</title><rect x="85.1995%" y="4325" width="0.2580%" height="15" fill="rgb(246,214,8)" fg:x="396048989" fg:w="1199410"/><text x="85.4495%" y="4335.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,199,410 samples, 0.26%)</title><rect x="85.1995%" y="4309" width="0.2580%" height="15" fill="rgb(227,224,15)" fg:x="396048989" fg:w="1199410"/><text x="85.4495%" y="4319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,199,410 samples, 0.26%)</title><rect x="85.1995%" y="4293" width="0.2580%" height="15" fill="rgb(233,175,4)" fg:x="396048989" fg:w="1199410"/><text x="85.4495%" y="4303.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (1,199,410 samples, 0.26%)</title><rect x="85.1995%" y="4277" width="0.2580%" height="15" fill="rgb(221,66,45)" fg:x="396048989" fg:w="1199410"/><text x="85.4495%" y="4287.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,199,410 samples, 0.26%)</title><rect x="85.1995%" y="4261" width="0.2580%" height="15" fill="rgb(221,178,18)" fg:x="396048989" fg:w="1199410"/><text x="85.4495%" y="4271.50"></text></g><g><title>[libc.so.6] (1,199,410 samples, 0.26%)</title><rect x="85.1995%" y="4245" width="0.2580%" height="15" fill="rgb(213,81,29)" fg:x="396048989" fg:w="1199410"/><text x="85.4495%" y="4255.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (1,130,420 samples, 0.24%)</title><rect x="85.9708%" y="4485" width="0.2432%" height="15" fill="rgb(220,89,49)" fg:x="399634270" fg:w="1130420"/><text x="86.2208%" y="4495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2,311,081 samples, 0.50%)</title><rect x="86.2139%" y="4293" width="0.4972%" height="15" fill="rgb(227,60,33)" fg:x="400764690" fg:w="2311081"/><text x="86.4639%" y="4303.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4,746,364 samples, 1.02%)</title><rect x="86.2139%" y="4341" width="1.0211%" height="15" fill="rgb(205,113,12)" fg:x="400764690" fg:w="4746364"/><text x="86.4639%" y="4351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4,746,364 samples, 1.02%)</title><rect x="86.2139%" y="4325" width="1.0211%" height="15" fill="rgb(211,32,1)" fg:x="400764690" fg:w="4746364"/><text x="86.4639%" y="4335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4,746,364 samples, 1.02%)</title><rect x="86.2139%" y="4309" width="1.0211%" height="15" fill="rgb(246,2,12)" fg:x="400764690" fg:w="4746364"/><text x="86.4639%" y="4319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2,435,283 samples, 0.52%)</title><rect x="86.7111%" y="4293" width="0.5239%" height="15" fill="rgb(243,37,27)" fg:x="403075771" fg:w="2435283"/><text x="86.9611%" y="4303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2,435,283 samples, 0.52%)</title><rect x="86.7111%" y="4277" width="0.5239%" height="15" fill="rgb(248,211,31)" fg:x="403075771" fg:w="2435283"/><text x="86.9611%" y="4287.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (1,218,357 samples, 0.26%)</title><rect x="87.2350%" y="4341" width="0.2621%" height="15" fill="rgb(242,146,47)" fg:x="405511054" fg:w="1218357"/><text x="87.4850%" y="4351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1,099,064 samples, 0.24%)</title><rect x="87.4971%" y="4261" width="0.2364%" height="15" fill="rgb(206,70,20)" fg:x="406729411" fg:w="1099064"/><text x="87.7471%" y="4271.50"></text></g><g><title>core::hash::sip::u8to64_le (1,099,064 samples, 0.24%)</title><rect x="87.4971%" y="4245" width="0.2364%" height="15" fill="rgb(215,10,51)" fg:x="406729411" fg:w="1099064"/><text x="87.7471%" y="4255.50"></text></g><g><title>hashbrown::map::make_hash (8,260,983 samples, 1.78%)</title><rect x="86.2139%" y="4373" width="1.7771%" height="15" fill="rgb(243,178,53)" fg:x="400764690" fg:w="8260983"/><text x="86.4639%" y="4383.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (8,260,983 samples, 1.78%)</title><rect x="86.2139%" y="4357" width="1.7771%" height="15" fill="rgb(233,221,20)" fg:x="400764690" fg:w="8260983"/><text x="86.4639%" y="4367.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,296,262 samples, 0.49%)</title><rect x="87.4971%" y="4341" width="0.4940%" height="15" fill="rgb(218,95,35)" fg:x="406729411" fg:w="2296262"/><text x="87.7471%" y="4351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2,296,262 samples, 0.49%)</title><rect x="87.4971%" y="4325" width="0.4940%" height="15" fill="rgb(229,13,5)" fg:x="406729411" fg:w="2296262"/><text x="87.7471%" y="4335.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (2,296,262 samples, 0.49%)</title><rect x="87.4971%" y="4309" width="0.4940%" height="15" fill="rgb(252,164,30)" fg:x="406729411" fg:w="2296262"/><text x="87.7471%" y="4319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2,296,262 samples, 0.49%)</title><rect x="87.4971%" y="4293" width="0.4940%" height="15" fill="rgb(232,68,36)" fg:x="406729411" fg:w="2296262"/><text x="87.7471%" y="4303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2,296,262 samples, 0.49%)</title><rect x="87.4971%" y="4277" width="0.4940%" height="15" fill="rgb(219,59,54)" fg:x="406729411" fg:w="2296262"/><text x="87.7471%" y="4287.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,197,198 samples, 0.26%)</title><rect x="87.7335%" y="4261" width="0.2575%" height="15" fill="rgb(250,92,33)" fg:x="407828475" fg:w="1197198"/><text x="87.9835%" y="4271.50"></text></g><g><title>main::benchmark::matches_id_id (10,754,287 samples, 2.31%)</title><rect x="86.2139%" y="4485" width="2.3135%" height="15" fill="rgb(229,162,54)" fg:x="400764690" fg:w="10754287"/><text x="86.4639%" y="4495.50">m..</text></g><g><title>main::benchmark::get_node_id_id (10,754,287 samples, 2.31%)</title><rect x="86.2139%" y="4469" width="2.3135%" height="15" fill="rgb(244,114,52)" fg:x="400764690" fg:w="10754287"/><text x="86.4639%" y="4479.50">m..</text></g><g><title>core::option::Option&lt;T&gt;::and_then (10,754,287 samples, 2.31%)</title><rect x="86.2139%" y="4453" width="2.3135%" height="15" fill="rgb(212,211,43)" fg:x="400764690" fg:w="10754287"/><text x="86.4639%" y="4463.50">c..</text></g><g><title>main::benchmark::get_node_id_id::_{{closure}} (10,754,287 samples, 2.31%)</title><rect x="86.2139%" y="4437" width="2.3135%" height="15" fill="rgb(226,147,8)" fg:x="400764690" fg:w="10754287"/><text x="86.4639%" y="4447.50">m..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10,754,287 samples, 2.31%)</title><rect x="86.2139%" y="4421" width="2.3135%" height="15" fill="rgb(226,23,13)" fg:x="400764690" fg:w="10754287"/><text x="86.4639%" y="4431.50">s..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10,754,287 samples, 2.31%)</title><rect x="86.2139%" y="4405" width="2.3135%" height="15" fill="rgb(240,63,4)" fg:x="400764690" fg:w="10754287"/><text x="86.4639%" y="4415.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10,754,287 samples, 2.31%)</title><rect x="86.2139%" y="4389" width="2.3135%" height="15" fill="rgb(221,1,32)" fg:x="400764690" fg:w="10754287"/><text x="86.4639%" y="4399.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2,493,304 samples, 0.54%)</title><rect x="87.9911%" y="4373" width="0.5364%" height="15" fill="rgb(242,117,10)" fg:x="409025673" fg:w="2493304"/><text x="88.2411%" y="4383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,493,304 samples, 0.54%)</title><rect x="87.9911%" y="4357" width="0.5364%" height="15" fill="rgb(249,172,44)" fg:x="409025673" fg:w="2493304"/><text x="88.2411%" y="4367.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2,493,304 samples, 0.54%)</title><rect x="87.9911%" y="4341" width="0.5364%" height="15" fill="rgb(244,46,45)" fg:x="409025673" fg:w="2493304"/><text x="88.2411%" y="4351.50"></text></g><g><title>core::intrinsics::likely (1,267,345 samples, 0.27%)</title><rect x="88.2548%" y="4325" width="0.2726%" height="15" fill="rgb(206,43,17)" fg:x="410251632" fg:w="1267345"/><text x="88.5048%" y="4335.50"></text></g><g><title>main::benchmark::invoke_full_layout (236,446,190 samples, 50.87%)</title><rect x="37.9270%" y="4805" width="50.8652%" height="15" fill="rgb(239,218,39)" fg:x="176303209" fg:w="236446190"/><text x="38.1770%" y="4815.50">main::benchmark::invoke_full_layout</text></g><g><title>main::benchmark::process_tree_full_recompute (236,446,190 samples, 50.87%)</title><rect x="37.9270%" y="4789" width="50.8652%" height="15" fill="rgb(208,169,54)" fg:x="176303209" fg:w="236446190"/><text x="38.1770%" y="4799.50">main::benchmark::process_tree_full_recompute</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (236,446,190 samples, 50.87%)</title><rect x="37.9270%" y="4773" width="50.8652%" height="15" fill="rgb(247,25,42)" fg:x="176303209" fg:w="236446190"/><text x="38.1770%" y="4783.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (236,446,190 samples, 50.87%)</title><rect x="37.9270%" y="4757" width="50.8652%" height="15" fill="rgb(226,23,31)" fg:x="176303209" fg:w="236446190"/><text x="38.1770%" y="4767.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (235,278,198 samples, 50.61%)</title><rect x="38.1782%" y="4741" width="50.6139%" height="15" fill="rgb(247,16,28)" fg:x="177471201" fg:w="235278198"/><text x="38.4282%" y="4751.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (235,278,198 samples, 50.61%)</title><rect x="38.1782%" y="4725" width="50.6139%" height="15" fill="rgb(231,147,38)" fg:x="177471201" fg:w="235278198"/><text x="38.4282%" y="4735.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (227,444,598 samples, 48.93%)</title><rect x="39.8634%" y="4709" width="48.9287%" height="15" fill="rgb(253,81,48)" fg:x="185304801" fg:w="227444598"/><text x="40.1134%" y="4719.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (227,444,598 samples, 48.93%)</title><rect x="39.8634%" y="4693" width="48.9287%" height="15" fill="rgb(249,222,43)" fg:x="185304801" fg:w="227444598"/><text x="40.1134%" y="4703.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (226,237,963 samples, 48.67%)</title><rect x="40.1230%" y="4677" width="48.6691%" height="15" fill="rgb(221,3,27)" fg:x="186511436" fg:w="226237963"/><text x="40.3730%" y="4687.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (224,132,467 samples, 48.22%)</title><rect x="40.5760%" y="4661" width="48.2162%" height="15" fill="rgb(228,180,5)" fg:x="188616932" fg:w="224132467"/><text x="40.8260%" y="4671.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (218,611,741 samples, 47.03%)</title><rect x="41.7636%" y="4645" width="47.0285%" height="15" fill="rgb(227,131,42)" fg:x="194137658" fg:w="218611741"/><text x="42.0136%" y="4655.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (208,678,482 samples, 44.89%)</title><rect x="43.9005%" y="4629" width="44.8917%" height="15" fill="rgb(212,3,39)" fg:x="204070917" fg:w="208678482"/><text x="44.1505%" y="4639.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (189,356,064 samples, 40.73%)</title><rect x="48.0572%" y="4613" width="40.7350%" height="15" fill="rgb(226,45,5)" fg:x="223393335" fg:w="189356064"/><text x="48.3072%" y="4623.50">main::benchmark::process_tree_recursive_from_scratch</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (129,627,623 samples, 27.89%)</title><rect x="60.9062%" y="4597" width="27.8860%" height="15" fill="rgb(215,167,45)" fg:x="283121776" fg:w="129627623"/><text x="61.1562%" y="4607.50">main::benchmark::process_tree_recursive_from_..</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (99,410,956 samples, 21.39%)</title><rect x="67.4065%" y="4581" width="21.3856%" height="15" fill="rgb(250,218,53)" fg:x="313338443" fg:w="99410956"/><text x="67.6565%" y="4591.50">main::benchmark::process_tree_recu..</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (64,571,919 samples, 13.89%)</title><rect x="74.9012%" y="4565" width="13.8909%" height="15" fill="rgb(207,140,0)" fg:x="348177480" fg:w="64571919"/><text x="75.1512%" y="4575.50">main::benchmark::proc..</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (40,310,135 samples, 8.67%)</title><rect x="80.1205%" y="4549" width="8.6717%" height="15" fill="rgb(238,133,51)" fg:x="372439264" fg:w="40310135"/><text x="80.3705%" y="4559.50">main::benchm..</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (26,043,716 samples, 5.60%)</title><rect x="83.1895%" y="4533" width="5.6026%" height="15" fill="rgb(218,203,53)" fg:x="386705683" fg:w="26043716"/><text x="83.4395%" y="4543.50">main::b..</text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (15,501,000 samples, 3.33%)</title><rect x="85.4575%" y="4517" width="3.3346%" height="15" fill="rgb(226,184,25)" fg:x="397248399" fg:w="15501000"/><text x="85.7075%" y="4527.50">mai..</text></g><g><title>main::benchmark::process_node_generated_from_scratch (15,501,000 samples, 3.33%)</title><rect x="85.4575%" y="4501" width="3.3346%" height="15" fill="rgb(231,121,21)" fg:x="397248399" fg:w="15501000"/><text x="85.7075%" y="4511.50">mai..</text></g><g><title>main::benchmark::matches_tag_id (1,230,422 samples, 0.26%)</title><rect x="88.5274%" y="4485" width="0.2647%" height="15" fill="rgb(251,14,34)" fg:x="411518977" fg:w="1230422"/><text x="88.7774%" y="4495.50"></text></g><g><title>main::benchmark::get_node_tag_id (1,230,422 samples, 0.26%)</title><rect x="88.5274%" y="4469" width="0.2647%" height="15" fill="rgb(249,193,11)" fg:x="411518977" fg:w="1230422"/><text x="88.7774%" y="4479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,230,422 samples, 0.26%)</title><rect x="88.5274%" y="4453" width="0.2647%" height="15" fill="rgb(220,172,37)" fg:x="411518977" fg:w="1230422"/><text x="88.7774%" y="4463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,230,422 samples, 0.26%)</title><rect x="88.5274%" y="4437" width="0.2647%" height="15" fill="rgb(231,229,43)" fg:x="411518977" fg:w="1230422"/><text x="88.7774%" y="4447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,230,422 samples, 0.26%)</title><rect x="88.5274%" y="4421" width="0.2647%" height="15" fill="rgb(250,161,5)" fg:x="411518977" fg:w="1230422"/><text x="88.7774%" y="4431.50"></text></g><g><title>hashbrown::map::make_hash (1,230,422 samples, 0.26%)</title><rect x="88.5274%" y="4405" width="0.2647%" height="15" fill="rgb(218,225,18)" fg:x="411518977" fg:w="1230422"/><text x="88.7774%" y="4415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,230,422 samples, 0.26%)</title><rect x="88.5274%" y="4389" width="0.2647%" height="15" fill="rgb(245,45,42)" fg:x="411518977" fg:w="1230422"/><text x="88.7774%" y="4399.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,230,422 samples, 0.26%)</title><rect x="88.5274%" y="4373" width="0.2647%" height="15" fill="rgb(211,115,1)" fg:x="411518977" fg:w="1230422"/><text x="88.7774%" y="4383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,230,422 samples, 0.26%)</title><rect x="88.5274%" y="4357" width="0.2647%" height="15" fill="rgb(248,133,52)" fg:x="411518977" fg:w="1230422"/><text x="88.7774%" y="4367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,230,422 samples, 0.26%)</title><rect x="88.5274%" y="4341" width="0.2647%" height="15" fill="rgb(238,100,21)" fg:x="411518977" fg:w="1230422"/><text x="88.7774%" y="4351.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (990,043 samples, 0.21%)</title><rect x="88.7921%" y="4741" width="0.2130%" height="15" fill="rgb(247,144,11)" fg:x="412749399" fg:w="990043"/><text x="89.0421%" y="4751.50"></text></g><g><title>main::benchmark::matches_class_id (1,100,829 samples, 0.24%)</title><rect x="89.0051%" y="4741" width="0.2368%" height="15" fill="rgb(206,164,16)" fg:x="413739442" fg:w="1100829"/><text x="89.2551%" y="4751.50"></text></g><g><title>main::benchmark::benchmark_accumulated_modifications (313,422,556 samples, 67.42%)</title><rect x="22.0591%" y="4821" width="67.4246%" height="15" fill="rgb(222,34,3)" fg:x="102541467" fg:w="313422556"/><text x="22.3091%" y="4831.50">main::benchmark::benchmark_accumulated_modifications</text></g><g><title>main::benchmark::invoke_incremental_layout (3,214,624 samples, 0.69%)</title><rect x="88.7921%" y="4805" width="0.6915%" height="15" fill="rgb(248,82,4)" fg:x="412749399" fg:w="3214624"/><text x="89.0421%" y="4815.50"></text></g><g><title>main::benchmark::process_tree_incremental_with_stats (3,214,624 samples, 0.69%)</title><rect x="88.7921%" y="4789" width="0.6915%" height="15" fill="rgb(228,81,46)" fg:x="412749399" fg:w="3214624"/><text x="89.0421%" y="4799.50"></text></g><g><title>main::benchmark::process_tree_recursive_incremental (3,214,624 samples, 0.69%)</title><rect x="88.7921%" y="4773" width="0.6915%" height="15" fill="rgb(227,67,47)" fg:x="412749399" fg:w="3214624"/><text x="89.0421%" y="4783.50"></text></g><g><title>main::benchmark::process_node_generated_incremental (3,214,624 samples, 0.69%)</title><rect x="88.7921%" y="4757" width="0.6915%" height="15" fill="rgb(215,93,53)" fg:x="412749399" fg:w="3214624"/><text x="89.0421%" y="4767.50"></text></g><g><title>main::benchmark::matches_id_id (1,123,752 samples, 0.24%)</title><rect x="89.2419%" y="4741" width="0.2417%" height="15" fill="rgb(248,194,39)" fg:x="414840271" fg:w="1123752"/><text x="89.4919%" y="4751.50"></text></g><g><title>main::benchmark::get_node_id_id (1,123,752 samples, 0.24%)</title><rect x="89.2419%" y="4725" width="0.2417%" height="15" fill="rgb(215,5,19)" fg:x="414840271" fg:w="1123752"/><text x="89.4919%" y="4735.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1,123,752 samples, 0.24%)</title><rect x="89.2419%" y="4709" width="0.2417%" height="15" fill="rgb(226,215,51)" fg:x="414840271" fg:w="1123752"/><text x="89.4919%" y="4719.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (542,393 samples, 0.12%)</title><rect x="89.4837%" y="4629" width="0.1167%" height="15" fill="rgb(225,56,26)" fg:x="415964023" fg:w="542393"/><text x="89.7337%" y="4639.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (542,393 samples, 0.12%)</title><rect x="89.4837%" y="4613" width="0.1167%" height="15" fill="rgb(222,75,29)" fg:x="415964023" fg:w="542393"/><text x="89.7337%" y="4623.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (542,393 samples, 0.12%)</title><rect x="89.4837%" y="4597" width="0.1167%" height="15" fill="rgb(236,139,6)" fg:x="415964023" fg:w="542393"/><text x="89.7337%" y="4607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (940,503 samples, 0.20%)</title><rect x="89.6004%" y="4613" width="0.2023%" height="15" fill="rgb(223,137,36)" fg:x="416506416" fg:w="940503"/><text x="89.8504%" y="4623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (940,503 samples, 0.20%)</title><rect x="89.6004%" y="4597" width="0.2023%" height="15" fill="rgb(226,99,2)" fg:x="416506416" fg:w="940503"/><text x="89.8504%" y="4607.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (940,503 samples, 0.20%)</title><rect x="89.6004%" y="4581" width="0.2023%" height="15" fill="rgb(206,133,23)" fg:x="416506416" fg:w="940503"/><text x="89.8504%" y="4591.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (940,503 samples, 0.20%)</title><rect x="89.6004%" y="4565" width="0.2023%" height="15" fill="rgb(243,173,15)" fg:x="416506416" fg:w="940503"/><text x="89.8504%" y="4575.50"></text></g><g><title>malloc (940,503 samples, 0.20%)</title><rect x="89.6004%" y="4549" width="0.2023%" height="15" fill="rgb(228,69,28)" fg:x="416506416" fg:w="940503"/><text x="89.8504%" y="4559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (913,482 samples, 0.20%)</title><rect x="89.8027%" y="4293" width="0.1965%" height="15" fill="rgb(212,51,22)" fg:x="417446919" fg:w="913482"/><text x="90.0527%" y="4303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (913,482 samples, 0.20%)</title><rect x="89.8027%" y="4277" width="0.1965%" height="15" fill="rgb(227,113,0)" fg:x="417446919" fg:w="913482"/><text x="90.0527%" y="4287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (913,482 samples, 0.20%)</title><rect x="89.8027%" y="4261" width="0.1965%" height="15" fill="rgb(252,84,27)" fg:x="417446919" fg:w="913482"/><text x="90.0527%" y="4271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (913,482 samples, 0.20%)</title><rect x="89.8027%" y="4245" width="0.1965%" height="15" fill="rgb(223,145,39)" fg:x="417446919" fg:w="913482"/><text x="90.0527%" y="4255.50"></text></g><g><title>alloc::raw_vec::finish_grow (913,482 samples, 0.20%)</title><rect x="89.8027%" y="4229" width="0.1965%" height="15" fill="rgb(239,219,30)" fg:x="417446919" fg:w="913482"/><text x="90.0527%" y="4239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (913,482 samples, 0.20%)</title><rect x="89.8027%" y="4213" width="0.1965%" height="15" fill="rgb(224,196,39)" fg:x="417446919" fg:w="913482"/><text x="90.0527%" y="4223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (929,620 samples, 0.20%)</title><rect x="89.9992%" y="3541" width="0.2000%" height="15" fill="rgb(205,35,43)" fg:x="418360401" fg:w="929620"/><text x="90.2492%" y="3551.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (929,620 samples, 0.20%)</title><rect x="89.9992%" y="3525" width="0.2000%" height="15" fill="rgb(228,201,21)" fg:x="418360401" fg:w="929620"/><text x="90.2492%" y="3535.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (929,620 samples, 0.20%)</title><rect x="89.9992%" y="3509" width="0.2000%" height="15" fill="rgb(237,118,16)" fg:x="418360401" fg:w="929620"/><text x="90.2492%" y="3519.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (929,620 samples, 0.20%)</title><rect x="89.9992%" y="3493" width="0.2000%" height="15" fill="rgb(241,17,19)" fg:x="418360401" fg:w="929620"/><text x="90.2492%" y="3503.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (929,620 samples, 0.20%)</title><rect x="89.9992%" y="3477" width="0.2000%" height="15" fill="rgb(214,10,25)" fg:x="418360401" fg:w="929620"/><text x="90.2492%" y="3487.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (929,620 samples, 0.20%)</title><rect x="89.9992%" y="3461" width="0.2000%" height="15" fill="rgb(238,37,29)" fg:x="418360401" fg:w="929620"/><text x="90.2492%" y="3471.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (929,620 samples, 0.20%)</title><rect x="89.9992%" y="3445" width="0.2000%" height="15" fill="rgb(253,83,25)" fg:x="418360401" fg:w="929620"/><text x="90.2492%" y="3455.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (931,984 samples, 0.20%)</title><rect x="90.1992%" y="3333" width="0.2005%" height="15" fill="rgb(234,192,12)" fg:x="419290021" fg:w="931984"/><text x="90.4492%" y="3343.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (931,984 samples, 0.20%)</title><rect x="90.1992%" y="3317" width="0.2005%" height="15" fill="rgb(241,216,45)" fg:x="419290021" fg:w="931984"/><text x="90.4492%" y="3327.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (931,984 samples, 0.20%)</title><rect x="90.1992%" y="3301" width="0.2005%" height="15" fill="rgb(242,22,33)" fg:x="419290021" fg:w="931984"/><text x="90.4492%" y="3311.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (931,984 samples, 0.20%)</title><rect x="90.1992%" y="3285" width="0.2005%" height="15" fill="rgb(231,105,49)" fg:x="419290021" fg:w="931984"/><text x="90.4492%" y="3295.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (931,984 samples, 0.20%)</title><rect x="90.1992%" y="3269" width="0.2005%" height="15" fill="rgb(218,204,15)" fg:x="419290021" fg:w="931984"/><text x="90.4492%" y="3279.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (931,984 samples, 0.20%)</title><rect x="90.1992%" y="3253" width="0.2005%" height="15" fill="rgb(235,138,41)" fg:x="419290021" fg:w="931984"/><text x="90.4492%" y="3263.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (931,984 samples, 0.20%)</title><rect x="90.1992%" y="3237" width="0.2005%" height="15" fill="rgb(246,0,9)" fg:x="419290021" fg:w="931984"/><text x="90.4492%" y="3247.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,862,720 samples, 0.40%)</title><rect x="90.6019%" y="2709" width="0.4007%" height="15" fill="rgb(210,74,4)" fg:x="421162251" fg:w="1862720"/><text x="90.8519%" y="2719.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (932,890 samples, 0.20%)</title><rect x="90.8020%" y="2693" width="0.2007%" height="15" fill="rgb(250,60,41)" fg:x="422092081" fg:w="932890"/><text x="91.0520%" y="2703.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (932,890 samples, 0.20%)</title><rect x="90.8020%" y="2677" width="0.2007%" height="15" fill="rgb(220,115,12)" fg:x="422092081" fg:w="932890"/><text x="91.0520%" y="2687.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (932,890 samples, 0.20%)</title><rect x="90.8020%" y="2661" width="0.2007%" height="15" fill="rgb(237,100,13)" fg:x="422092081" fg:w="932890"/><text x="91.0520%" y="2671.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (932,890 samples, 0.20%)</title><rect x="90.8020%" y="2645" width="0.2007%" height="15" fill="rgb(213,55,26)" fg:x="422092081" fg:w="932890"/><text x="91.0520%" y="2655.50"></text></g><g><title>malloc (932,890 samples, 0.20%)</title><rect x="90.8020%" y="2629" width="0.2007%" height="15" fill="rgb(216,17,4)" fg:x="422092081" fg:w="932890"/><text x="91.0520%" y="2639.50"></text></g><g><title>[libc.so.6] (932,890 samples, 0.20%)</title><rect x="90.8020%" y="2613" width="0.2007%" height="15" fill="rgb(220,153,47)" fg:x="422092081" fg:w="932890"/><text x="91.0520%" y="2623.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (923,449 samples, 0.20%)</title><rect x="91.0027%" y="2645" width="0.1987%" height="15" fill="rgb(215,131,9)" fg:x="423024971" fg:w="923449"/><text x="91.2527%" y="2655.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (923,449 samples, 0.20%)</title><rect x="91.0027%" y="2629" width="0.1987%" height="15" fill="rgb(233,46,42)" fg:x="423024971" fg:w="923449"/><text x="91.2527%" y="2639.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (923,449 samples, 0.20%)</title><rect x="91.0027%" y="2613" width="0.1987%" height="15" fill="rgb(226,86,7)" fg:x="423024971" fg:w="923449"/><text x="91.2527%" y="2623.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (921,642 samples, 0.20%)</title><rect x="91.2013%" y="2229" width="0.1983%" height="15" fill="rgb(239,226,21)" fg:x="423948420" fg:w="921642"/><text x="91.4513%" y="2239.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (921,642 samples, 0.20%)</title><rect x="91.2013%" y="2213" width="0.1983%" height="15" fill="rgb(244,137,22)" fg:x="423948420" fg:w="921642"/><text x="91.4513%" y="2223.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1493" width="0.3654%" height="15" fill="rgb(211,139,35)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1503.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1477" width="0.3654%" height="15" fill="rgb(214,62,50)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1487.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1461" width="0.3654%" height="15" fill="rgb(212,113,44)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1471.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1445" width="0.3654%" height="15" fill="rgb(226,150,43)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1455.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1429" width="0.3654%" height="15" fill="rgb(250,71,37)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1439.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1413" width="0.3654%" height="15" fill="rgb(219,76,19)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1423.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1397" width="0.3654%" height="15" fill="rgb(250,39,11)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1407.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1381" width="0.3654%" height="15" fill="rgb(230,64,31)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1391.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1365" width="0.3654%" height="15" fill="rgb(208,222,23)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1375.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1349" width="0.3654%" height="15" fill="rgb(227,125,18)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1359.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1333" width="0.3654%" height="15" fill="rgb(234,210,9)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1343.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1317" width="0.3654%" height="15" fill="rgb(217,127,24)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1327.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1301" width="0.3654%" height="15" fill="rgb(239,141,48)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1311.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1285" width="0.3654%" height="15" fill="rgb(227,109,8)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1295.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1269" width="0.3654%" height="15" fill="rgb(235,184,23)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1279.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1253" width="0.3654%" height="15" fill="rgb(227,226,48)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1263.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1237" width="0.3654%" height="15" fill="rgb(206,150,11)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1247.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1221" width="0.3654%" height="15" fill="rgb(254,2,33)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1231.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1205" width="0.3654%" height="15" fill="rgb(243,160,20)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1215.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1189" width="0.3654%" height="15" fill="rgb(218,208,30)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1199.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1173" width="0.3654%" height="15" fill="rgb(224,120,49)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1183.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1157" width="0.3654%" height="15" fill="rgb(246,12,2)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1167.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1141" width="0.3654%" height="15" fill="rgb(236,117,3)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1151.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1125" width="0.3654%" height="15" fill="rgb(216,128,52)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1135.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1109" width="0.3654%" height="15" fill="rgb(246,145,19)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1119.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1093" width="0.3654%" height="15" fill="rgb(222,11,46)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1103.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1077" width="0.3654%" height="15" fill="rgb(245,82,36)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1087.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1061" width="0.3654%" height="15" fill="rgb(250,73,51)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1071.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1045" width="0.3654%" height="15" fill="rgb(221,189,23)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1055.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1029" width="0.3654%" height="15" fill="rgb(210,33,7)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1039.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="1013" width="0.3654%" height="15" fill="rgb(210,107,22)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1023.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,698,358 samples, 0.37%)</title><rect x="91.5981%" y="997" width="0.3654%" height="15" fill="rgb(222,116,37)" fg:x="425792878" fg:w="1698358"/><text x="91.8481%" y="1007.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (939,247 samples, 0.20%)</title><rect x="91.7614%" y="981" width="0.2021%" height="15" fill="rgb(254,17,48)" fg:x="426551989" fg:w="939247"/><text x="92.0114%" y="991.50"></text></g><g><title>serde::de::SeqAccess::next_element (939,247 samples, 0.20%)</title><rect x="91.7614%" y="965" width="0.2021%" height="15" fill="rgb(224,36,32)" fg:x="426551989" fg:w="939247"/><text x="92.0114%" y="975.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (939,247 samples, 0.20%)</title><rect x="91.7614%" y="949" width="0.2021%" height="15" fill="rgb(232,90,46)" fg:x="426551989" fg:w="939247"/><text x="92.0114%" y="959.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (939,247 samples, 0.20%)</title><rect x="91.7614%" y="933" width="0.2021%" height="15" fill="rgb(241,66,40)" fg:x="426551989" fg:w="939247"/><text x="92.0114%" y="943.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (939,247 samples, 0.20%)</title><rect x="91.7614%" y="917" width="0.2021%" height="15" fill="rgb(249,184,29)" fg:x="426551989" fg:w="939247"/><text x="92.0114%" y="927.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (939,247 samples, 0.20%)</title><rect x="91.7614%" y="901" width="0.2021%" height="15" fill="rgb(231,181,1)" fg:x="426551989" fg:w="939247"/><text x="92.0114%" y="911.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (939,247 samples, 0.20%)</title><rect x="91.7614%" y="885" width="0.2021%" height="15" fill="rgb(224,94,2)" fg:x="426551989" fg:w="939247"/><text x="92.0114%" y="895.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,623,009 samples, 0.56%)</title><rect x="91.5981%" y="1701" width="0.5643%" height="15" fill="rgb(229,170,15)" fg:x="425792878" fg:w="2623009"/><text x="91.8481%" y="1711.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,623,009 samples, 0.56%)</title><rect x="91.5981%" y="1685" width="0.5643%" height="15" fill="rgb(240,127,35)" fg:x="425792878" fg:w="2623009"/><text x="91.8481%" y="1695.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,623,009 samples, 0.56%)</title><rect x="91.5981%" y="1669" width="0.5643%" height="15" fill="rgb(248,196,34)" fg:x="425792878" fg:w="2623009"/><text x="91.8481%" y="1679.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,623,009 samples, 0.56%)</title><rect x="91.5981%" y="1653" width="0.5643%" height="15" fill="rgb(236,137,7)" fg:x="425792878" fg:w="2623009"/><text x="91.8481%" y="1663.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,623,009 samples, 0.56%)</title><rect x="91.5981%" y="1637" width="0.5643%" height="15" fill="rgb(235,127,16)" fg:x="425792878" fg:w="2623009"/><text x="91.8481%" y="1647.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,623,009 samples, 0.56%)</title><rect x="91.5981%" y="1621" width="0.5643%" height="15" fill="rgb(250,192,54)" fg:x="425792878" fg:w="2623009"/><text x="91.8481%" y="1631.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,623,009 samples, 0.56%)</title><rect x="91.5981%" y="1605" width="0.5643%" height="15" fill="rgb(218,98,20)" fg:x="425792878" fg:w="2623009"/><text x="91.8481%" y="1615.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,623,009 samples, 0.56%)</title><rect x="91.5981%" y="1589" width="0.5643%" height="15" fill="rgb(230,176,47)" fg:x="425792878" fg:w="2623009"/><text x="91.8481%" y="1599.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,623,009 samples, 0.56%)</title><rect x="91.5981%" y="1573" width="0.5643%" height="15" fill="rgb(244,2,33)" fg:x="425792878" fg:w="2623009"/><text x="91.8481%" y="1583.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,623,009 samples, 0.56%)</title><rect x="91.5981%" y="1557" width="0.5643%" height="15" fill="rgb(231,100,17)" fg:x="425792878" fg:w="2623009"/><text x="91.8481%" y="1567.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,623,009 samples, 0.56%)</title><rect x="91.5981%" y="1541" width="0.5643%" height="15" fill="rgb(245,23,12)" fg:x="425792878" fg:w="2623009"/><text x="91.8481%" y="1551.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,623,009 samples, 0.56%)</title><rect x="91.5981%" y="1525" width="0.5643%" height="15" fill="rgb(249,55,22)" fg:x="425792878" fg:w="2623009"/><text x="91.8481%" y="1535.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,623,009 samples, 0.56%)</title><rect x="91.5981%" y="1509" width="0.5643%" height="15" fill="rgb(207,134,9)" fg:x="425792878" fg:w="2623009"/><text x="91.8481%" y="1519.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (924,651 samples, 0.20%)</title><rect x="91.9635%" y="1493" width="0.1989%" height="15" fill="rgb(218,134,0)" fg:x="427491236" fg:w="924651"/><text x="92.2135%" y="1503.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (924,651 samples, 0.20%)</title><rect x="91.9635%" y="1477" width="0.1989%" height="15" fill="rgb(213,212,33)" fg:x="427491236" fg:w="924651"/><text x="92.2135%" y="1487.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (924,651 samples, 0.20%)</title><rect x="91.9635%" y="1461" width="0.1989%" height="15" fill="rgb(252,106,18)" fg:x="427491236" fg:w="924651"/><text x="92.2135%" y="1471.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (924,651 samples, 0.20%)</title><rect x="91.9635%" y="1445" width="0.1989%" height="15" fill="rgb(208,126,42)" fg:x="427491236" fg:w="924651"/><text x="92.2135%" y="1455.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (924,651 samples, 0.20%)</title><rect x="91.9635%" y="1429" width="0.1989%" height="15" fill="rgb(246,175,29)" fg:x="427491236" fg:w="924651"/><text x="92.2135%" y="1439.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (924,651 samples, 0.20%)</title><rect x="91.9635%" y="1413" width="0.1989%" height="15" fill="rgb(215,13,50)" fg:x="427491236" fg:w="924651"/><text x="92.2135%" y="1423.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (924,651 samples, 0.20%)</title><rect x="91.9635%" y="1397" width="0.1989%" height="15" fill="rgb(216,172,15)" fg:x="427491236" fg:w="924651"/><text x="92.2135%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (924,651 samples, 0.20%)</title><rect x="91.9635%" y="1381" width="0.1989%" height="15" fill="rgb(212,103,13)" fg:x="427491236" fg:w="924651"/><text x="92.2135%" y="1391.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (924,651 samples, 0.20%)</title><rect x="91.9635%" y="1365" width="0.1989%" height="15" fill="rgb(231,171,36)" fg:x="427491236" fg:w="924651"/><text x="92.2135%" y="1375.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (924,651 samples, 0.20%)</title><rect x="91.9635%" y="1349" width="0.1989%" height="15" fill="rgb(250,123,20)" fg:x="427491236" fg:w="924651"/><text x="92.2135%" y="1359.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,466,077 samples, 0.96%)</title><rect x="91.3996%" y="1813" width="0.9608%" height="15" fill="rgb(212,53,50)" fg:x="424870062" fg:w="4466077"/><text x="91.6496%" y="1823.50"></text></g><g><title>serde::de::SeqAccess::next_element (4,466,077 samples, 0.96%)</title><rect x="91.3996%" y="1797" width="0.9608%" height="15" fill="rgb(243,54,12)" fg:x="424870062" fg:w="4466077"/><text x="91.6496%" y="1807.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,466,077 samples, 0.96%)</title><rect x="91.3996%" y="1781" width="0.9608%" height="15" fill="rgb(234,101,34)" fg:x="424870062" fg:w="4466077"/><text x="91.6496%" y="1791.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,466,077 samples, 0.96%)</title><rect x="91.3996%" y="1765" width="0.9608%" height="15" fill="rgb(254,67,22)" fg:x="424870062" fg:w="4466077"/><text x="91.6496%" y="1775.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,466,077 samples, 0.96%)</title><rect x="91.3996%" y="1749" width="0.9608%" height="15" fill="rgb(250,35,47)" fg:x="424870062" fg:w="4466077"/><text x="91.6496%" y="1759.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,466,077 samples, 0.96%)</title><rect x="91.3996%" y="1733" width="0.9608%" height="15" fill="rgb(226,126,38)" fg:x="424870062" fg:w="4466077"/><text x="91.6496%" y="1743.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,466,077 samples, 0.96%)</title><rect x="91.3996%" y="1717" width="0.9608%" height="15" fill="rgb(216,138,53)" fg:x="424870062" fg:w="4466077"/><text x="91.6496%" y="1727.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (920,252 samples, 0.20%)</title><rect x="92.1624%" y="1701" width="0.1980%" height="15" fill="rgb(246,199,43)" fg:x="428415887" fg:w="920252"/><text x="92.4124%" y="1711.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (920,252 samples, 0.20%)</title><rect x="92.1624%" y="1685" width="0.1980%" height="15" fill="rgb(232,125,11)" fg:x="428415887" fg:w="920252"/><text x="92.4124%" y="1695.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (920,252 samples, 0.20%)</title><rect x="92.1624%" y="1669" width="0.1980%" height="15" fill="rgb(218,219,45)" fg:x="428415887" fg:w="920252"/><text x="92.4124%" y="1679.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (920,252 samples, 0.20%)</title><rect x="92.1624%" y="1653" width="0.1980%" height="15" fill="rgb(216,102,54)" fg:x="428415887" fg:w="920252"/><text x="92.4124%" y="1663.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (920,252 samples, 0.20%)</title><rect x="92.1624%" y="1637" width="0.1980%" height="15" fill="rgb(250,228,7)" fg:x="428415887" fg:w="920252"/><text x="92.4124%" y="1647.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (920,252 samples, 0.20%)</title><rect x="92.1624%" y="1621" width="0.1980%" height="15" fill="rgb(226,125,25)" fg:x="428415887" fg:w="920252"/><text x="92.4124%" y="1631.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (920,252 samples, 0.20%)</title><rect x="92.1624%" y="1605" width="0.1980%" height="15" fill="rgb(224,165,27)" fg:x="428415887" fg:w="920252"/><text x="92.4124%" y="1615.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (920,252 samples, 0.20%)</title><rect x="92.1624%" y="1589" width="0.1980%" height="15" fill="rgb(233,86,3)" fg:x="428415887" fg:w="920252"/><text x="92.4124%" y="1599.50"></text></g><g><title>core::intrinsics::copy (920,252 samples, 0.20%)</title><rect x="92.1624%" y="1573" width="0.1980%" height="15" fill="rgb(228,116,20)" fg:x="428415887" fg:w="920252"/><text x="92.4124%" y="1583.50"></text></g><g><title>[libc.so.6] (920,252 samples, 0.20%)</title><rect x="92.1624%" y="1557" width="0.1980%" height="15" fill="rgb(209,192,17)" fg:x="428415887" fg:w="920252"/><text x="92.4124%" y="1567.50"></text></g><g><title>serde::de::MapAccess::next_entry (6,133,224 samples, 1.32%)</title><rect x="91.2013%" y="2533" width="1.3194%" height="15" fill="rgb(224,88,34)" fg:x="423948420" fg:w="6133224"/><text x="91.4513%" y="2543.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (6,133,224 samples, 1.32%)</title><rect x="91.2013%" y="2517" width="1.3194%" height="15" fill="rgb(233,38,6)" fg:x="423948420" fg:w="6133224"/><text x="91.4513%" y="2527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6,133,224 samples, 1.32%)</title><rect x="91.2013%" y="2501" width="1.3194%" height="15" fill="rgb(212,59,30)" fg:x="423948420" fg:w="6133224"/><text x="91.4513%" y="2511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,133,224 samples, 1.32%)</title><rect x="91.2013%" y="2485" width="1.3194%" height="15" fill="rgb(213,80,3)" fg:x="423948420" fg:w="6133224"/><text x="91.4513%" y="2495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,133,224 samples, 1.32%)</title><rect x="91.2013%" y="2469" width="1.3194%" height="15" fill="rgb(251,178,7)" fg:x="423948420" fg:w="6133224"/><text x="91.4513%" y="2479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,133,224 samples, 1.32%)</title><rect x="91.2013%" y="2453" width="1.3194%" height="15" fill="rgb(213,154,26)" fg:x="423948420" fg:w="6133224"/><text x="91.4513%" y="2463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (6,133,224 samples, 1.32%)</title><rect x="91.2013%" y="2437" width="1.3194%" height="15" fill="rgb(238,165,49)" fg:x="423948420" fg:w="6133224"/><text x="91.4513%" y="2447.50"></text></g><g><title>serde::de::SeqAccess::next_element (6,133,224 samples, 1.32%)</title><rect x="91.2013%" y="2421" width="1.3194%" height="15" fill="rgb(248,91,46)" fg:x="423948420" fg:w="6133224"/><text x="91.4513%" y="2431.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (6,133,224 samples, 1.32%)</title><rect x="91.2013%" y="2405" width="1.3194%" height="15" fill="rgb(244,21,52)" fg:x="423948420" fg:w="6133224"/><text x="91.4513%" y="2415.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,133,224 samples, 1.32%)</title><rect x="91.2013%" y="2389" width="1.3194%" height="15" fill="rgb(247,122,20)" fg:x="423948420" fg:w="6133224"/><text x="91.4513%" y="2399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,133,224 samples, 1.32%)</title><rect x="91.2013%" y="2373" width="1.3194%" height="15" fill="rgb(218,27,9)" fg:x="423948420" fg:w="6133224"/><text x="91.4513%" y="2383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,133,224 samples, 1.32%)</title><rect x="91.2013%" y="2357" width="1.3194%" height="15" fill="rgb(246,7,6)" fg:x="423948420" fg:w="6133224"/><text x="91.4513%" y="2367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6,133,224 samples, 1.32%)</title><rect x="91.2013%" y="2341" width="1.3194%" height="15" fill="rgb(227,135,54)" fg:x="423948420" fg:w="6133224"/><text x="91.4513%" y="2351.50"></text></g><g><title>serde::de::MapAccess::next_entry (6,133,224 samples, 1.32%)</title><rect x="91.2013%" y="2325" width="1.3194%" height="15" fill="rgb(247,14,11)" fg:x="423948420" fg:w="6133224"/><text x="91.4513%" y="2335.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (6,133,224 samples, 1.32%)</title><rect x="91.2013%" y="2309" width="1.3194%" height="15" fill="rgb(206,149,34)" fg:x="423948420" fg:w="6133224"/><text x="91.4513%" y="2319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6,133,224 samples, 1.32%)</title><rect x="91.2013%" y="2293" width="1.3194%" height="15" fill="rgb(227,228,4)" fg:x="423948420" fg:w="6133224"/><text x="91.4513%" y="2303.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,133,224 samples, 1.32%)</title><rect x="91.2013%" y="2277" width="1.3194%" height="15" fill="rgb(238,218,28)" fg:x="423948420" fg:w="6133224"/><text x="91.4513%" y="2287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,133,224 samples, 1.32%)</title><rect x="91.2013%" y="2261" width="1.3194%" height="15" fill="rgb(252,86,40)" fg:x="423948420" fg:w="6133224"/><text x="91.4513%" y="2271.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,133,224 samples, 1.32%)</title><rect x="91.2013%" y="2245" width="1.3194%" height="15" fill="rgb(251,225,11)" fg:x="423948420" fg:w="6133224"/><text x="91.4513%" y="2255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="2229" width="1.1211%" height="15" fill="rgb(206,46,49)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="2239.50"></text></g><g><title>serde::de::SeqAccess::next_element (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="2213" width="1.1211%" height="15" fill="rgb(245,128,24)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="2223.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="2197" width="1.1211%" height="15" fill="rgb(219,177,34)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="2207.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="2181" width="1.1211%" height="15" fill="rgb(218,60,48)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="2191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="2165" width="1.1211%" height="15" fill="rgb(221,11,5)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="2175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="2149" width="1.1211%" height="15" fill="rgb(220,148,13)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="2159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="2133" width="1.1211%" height="15" fill="rgb(210,16,3)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="2143.50"></text></g><g><title>serde::de::MapAccess::next_entry (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="2117" width="1.1211%" height="15" fill="rgb(236,80,2)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="2127.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="2101" width="1.1211%" height="15" fill="rgb(239,129,19)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="2111.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="2085" width="1.1211%" height="15" fill="rgb(220,106,35)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="2095.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="2069" width="1.1211%" height="15" fill="rgb(252,139,45)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="2079.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="2053" width="1.1211%" height="15" fill="rgb(229,8,36)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="2063.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="2037" width="1.1211%" height="15" fill="rgb(230,126,33)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="2047.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="2021" width="1.1211%" height="15" fill="rgb(239,140,21)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="2031.50"></text></g><g><title>serde::de::SeqAccess::next_element (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="2005" width="1.1211%" height="15" fill="rgb(254,104,9)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="2015.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="1989" width="1.1211%" height="15" fill="rgb(239,52,14)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="1999.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="1973" width="1.1211%" height="15" fill="rgb(208,227,44)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="1983.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="1957" width="1.1211%" height="15" fill="rgb(246,18,19)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="1967.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="1941" width="1.1211%" height="15" fill="rgb(235,228,25)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="1951.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="1925" width="1.1211%" height="15" fill="rgb(240,156,20)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="1935.50"></text></g><g><title>serde::de::MapAccess::next_entry (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="1909" width="1.1211%" height="15" fill="rgb(224,8,20)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="1919.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="1893" width="1.1211%" height="15" fill="rgb(214,12,52)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="1903.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="1877" width="1.1211%" height="15" fill="rgb(211,220,47)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="1887.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="1861" width="1.1211%" height="15" fill="rgb(250,173,5)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="1871.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="1845" width="1.1211%" height="15" fill="rgb(250,125,52)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="1855.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,211,582 samples, 1.12%)</title><rect x="91.3996%" y="1829" width="1.1211%" height="15" fill="rgb(209,133,18)" fg:x="424870062" fg:w="5211582"/><text x="91.6496%" y="1839.50"></text></g><g><title>serde_json::de::ParserNumber::visit (745,505 samples, 0.16%)</title><rect x="92.3603%" y="1813" width="0.1604%" height="15" fill="rgb(216,173,22)" fg:x="429336139" fg:w="745505"/><text x="92.6103%" y="1823.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (6,568,214 samples, 1.41%)</title><rect x="91.2013%" y="2645" width="1.4130%" height="15" fill="rgb(205,3,22)" fg:x="423948420" fg:w="6568214"/><text x="91.4513%" y="2655.50"></text></g><g><title>serde::de::SeqAccess::next_element (6,568,214 samples, 1.41%)</title><rect x="91.2013%" y="2629" width="1.4130%" height="15" fill="rgb(248,22,20)" fg:x="423948420" fg:w="6568214"/><text x="91.4513%" y="2639.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (6,568,214 samples, 1.41%)</title><rect x="91.2013%" y="2613" width="1.4130%" height="15" fill="rgb(233,6,29)" fg:x="423948420" fg:w="6568214"/><text x="91.4513%" y="2623.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,568,214 samples, 1.41%)</title><rect x="91.2013%" y="2597" width="1.4130%" height="15" fill="rgb(240,22,54)" fg:x="423948420" fg:w="6568214"/><text x="91.4513%" y="2607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,568,214 samples, 1.41%)</title><rect x="91.2013%" y="2581" width="1.4130%" height="15" fill="rgb(231,133,32)" fg:x="423948420" fg:w="6568214"/><text x="91.4513%" y="2591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,568,214 samples, 1.41%)</title><rect x="91.2013%" y="2565" width="1.4130%" height="15" fill="rgb(248,193,4)" fg:x="423948420" fg:w="6568214"/><text x="91.4513%" y="2575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6,568,214 samples, 1.41%)</title><rect x="91.2013%" y="2549" width="1.4130%" height="15" fill="rgb(211,178,46)" fg:x="423948420" fg:w="6568214"/><text x="91.4513%" y="2559.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (434,990 samples, 0.09%)</title><rect x="92.5207%" y="2533" width="0.0936%" height="15" fill="rgb(224,5,42)" fg:x="430081644" fg:w="434990"/><text x="92.7707%" y="2543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (434,990 samples, 0.09%)</title><rect x="92.5207%" y="2517" width="0.0936%" height="15" fill="rgb(239,176,25)" fg:x="430081644" fg:w="434990"/><text x="92.7707%" y="2527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (434,990 samples, 0.09%)</title><rect x="92.5207%" y="2501" width="0.0936%" height="15" fill="rgb(245,187,50)" fg:x="430081644" fg:w="434990"/><text x="92.7707%" y="2511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (434,990 samples, 0.09%)</title><rect x="92.5207%" y="2485" width="0.0936%" height="15" fill="rgb(248,24,15)" fg:x="430081644" fg:w="434990"/><text x="92.7707%" y="2495.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (434,990 samples, 0.09%)</title><rect x="92.5207%" y="2469" width="0.0936%" height="15" fill="rgb(205,166,13)" fg:x="430081644" fg:w="434990"/><text x="92.7707%" y="2479.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (434,990 samples, 0.09%)</title><rect x="92.5207%" y="2453" width="0.0936%" height="15" fill="rgb(208,114,23)" fg:x="430081644" fg:w="434990"/><text x="92.7707%" y="2463.50"></text></g><g><title>serde::de::MapAccess::next_entry (9,953,534 samples, 2.14%)</title><rect x="90.6019%" y="2741" width="2.1412%" height="15" fill="rgb(239,127,18)" fg:x="421162251" fg:w="9953534"/><text x="90.8519%" y="2751.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (9,953,534 samples, 2.14%)</title><rect x="90.6019%" y="2725" width="2.1412%" height="15" fill="rgb(219,154,28)" fg:x="421162251" fg:w="9953534"/><text x="90.8519%" y="2735.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (8,090,814 samples, 1.74%)</title><rect x="91.0027%" y="2709" width="1.7405%" height="15" fill="rgb(225,157,23)" fg:x="423024971" fg:w="8090814"/><text x="91.2527%" y="2719.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8,090,814 samples, 1.74%)</title><rect x="91.0027%" y="2693" width="1.7405%" height="15" fill="rgb(219,8,6)" fg:x="423024971" fg:w="8090814"/><text x="91.2527%" y="2703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8,090,814 samples, 1.74%)</title><rect x="91.0027%" y="2677" width="1.7405%" height="15" fill="rgb(212,47,6)" fg:x="423024971" fg:w="8090814"/><text x="91.2527%" y="2687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8,090,814 samples, 1.74%)</title><rect x="91.0027%" y="2661" width="1.7405%" height="15" fill="rgb(224,190,4)" fg:x="423024971" fg:w="8090814"/><text x="91.2527%" y="2671.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_any_number (599,151 samples, 0.13%)</title><rect x="92.6143%" y="2645" width="0.1289%" height="15" fill="rgb(239,183,29)" fg:x="430516634" fg:w="599151"/><text x="92.8643%" y="2655.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (599,151 samples, 0.13%)</title><rect x="92.6143%" y="2629" width="0.1289%" height="15" fill="rgb(213,57,7)" fg:x="430516634" fg:w="599151"/><text x="92.8643%" y="2639.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::next_char (599,151 samples, 0.13%)</title><rect x="92.6143%" y="2613" width="0.1289%" height="15" fill="rgb(216,148,1)" fg:x="430516634" fg:w="599151"/><text x="92.8643%" y="2623.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::next (599,151 samples, 0.13%)</title><rect x="92.6143%" y="2597" width="0.1289%" height="15" fill="rgb(236,182,29)" fg:x="430516634" fg:w="599151"/><text x="92.8643%" y="2607.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::next (599,151 samples, 0.13%)</title><rect x="92.6143%" y="2581" width="0.1289%" height="15" fill="rgb(244,120,48)" fg:x="430516634" fg:w="599151"/><text x="92.8643%" y="2591.50"></text></g><g><title>serde::de::MapAccess::next_value (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2741" width="0.2028%" height="15" fill="rgb(206,71,34)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2751.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2725" width="0.2028%" height="15" fill="rgb(242,32,6)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2735.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2709" width="0.2028%" height="15" fill="rgb(241,35,3)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2693" width="0.2028%" height="15" fill="rgb(222,62,19)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2703.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2677" width="0.2028%" height="15" fill="rgb(223,110,41)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2687.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2661" width="0.2028%" height="15" fill="rgb(208,224,4)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2645" width="0.2028%" height="15" fill="rgb(241,137,19)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2655.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2629" width="0.2028%" height="15" fill="rgb(244,24,17)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2639.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2613" width="0.2028%" height="15" fill="rgb(245,178,49)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2623.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2597" width="0.2028%" height="15" fill="rgb(219,160,38)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2581" width="0.2028%" height="15" fill="rgb(228,137,14)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2565" width="0.2028%" height="15" fill="rgb(237,134,11)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2575.50"></text></g><g><title>alloc::slice::hack::to_vec (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2549" width="0.2028%" height="15" fill="rgb(211,126,44)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2533" width="0.2028%" height="15" fill="rgb(226,171,33)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2517" width="0.2028%" height="15" fill="rgb(253,99,13)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2501" width="0.2028%" height="15" fill="rgb(244,48,7)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2485" width="0.2028%" height="15" fill="rgb(244,217,54)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2469" width="0.2028%" height="15" fill="rgb(224,15,18)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2453" width="0.2028%" height="15" fill="rgb(244,99,12)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2437" width="0.2028%" height="15" fill="rgb(233,226,8)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2447.50"></text></g><g><title>alloc::alloc::alloc (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2421" width="0.2028%" height="15" fill="rgb(229,211,3)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2431.50"></text></g><g><title>malloc (942,805 samples, 0.20%)</title><rect x="92.7432%" y="2405" width="0.2028%" height="15" fill="rgb(216,140,21)" fg:x="431115785" fg:w="942805"/><text x="92.9932%" y="2415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (923,278 samples, 0.20%)</title><rect x="93.1463%" y="2709" width="0.1986%" height="15" fill="rgb(234,122,30)" fg:x="432989603" fg:w="923278"/><text x="93.3963%" y="2719.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (923,278 samples, 0.20%)</title><rect x="93.1463%" y="2693" width="0.1986%" height="15" fill="rgb(236,25,46)" fg:x="432989603" fg:w="923278"/><text x="93.3963%" y="2703.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (923,278 samples, 0.20%)</title><rect x="93.1463%" y="2677" width="0.1986%" height="15" fill="rgb(217,52,54)" fg:x="432989603" fg:w="923278"/><text x="93.3963%" y="2687.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (923,278 samples, 0.20%)</title><rect x="93.1463%" y="2661" width="0.1986%" height="15" fill="rgb(222,29,26)" fg:x="432989603" fg:w="923278"/><text x="93.3963%" y="2671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (13,681,682 samples, 2.94%)</title><rect x="90.6019%" y="2853" width="2.9433%" height="15" fill="rgb(216,177,29)" fg:x="421162251" fg:w="13681682"/><text x="90.8519%" y="2863.50">&lt;s..</text></g><g><title>serde::de::SeqAccess::next_element (13,681,682 samples, 2.94%)</title><rect x="90.6019%" y="2837" width="2.9433%" height="15" fill="rgb(247,136,51)" fg:x="421162251" fg:w="13681682"/><text x="90.8519%" y="2847.50">se..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (13,681,682 samples, 2.94%)</title><rect x="90.6019%" y="2821" width="2.9433%" height="15" fill="rgb(231,47,47)" fg:x="421162251" fg:w="13681682"/><text x="90.8519%" y="2831.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (13,681,682 samples, 2.94%)</title><rect x="90.6019%" y="2805" width="2.9433%" height="15" fill="rgb(211,192,36)" fg:x="421162251" fg:w="13681682"/><text x="90.8519%" y="2815.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13,681,682 samples, 2.94%)</title><rect x="90.6019%" y="2789" width="2.9433%" height="15" fill="rgb(229,156,32)" fg:x="421162251" fg:w="13681682"/><text x="90.8519%" y="2799.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13,681,682 samples, 2.94%)</title><rect x="90.6019%" y="2773" width="2.9433%" height="15" fill="rgb(248,213,20)" fg:x="421162251" fg:w="13681682"/><text x="90.8519%" y="2783.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13,681,682 samples, 2.94%)</title><rect x="90.6019%" y="2757" width="2.9433%" height="15" fill="rgb(217,64,7)" fg:x="421162251" fg:w="13681682"/><text x="90.8519%" y="2767.50">&lt;s..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (2,785,343 samples, 0.60%)</title><rect x="92.9460%" y="2741" width="0.5992%" height="15" fill="rgb(232,142,8)" fg:x="432058590" fg:w="2785343"/><text x="93.1960%" y="2751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2,785,343 samples, 0.60%)</title><rect x="92.9460%" y="2725" width="0.5992%" height="15" fill="rgb(224,92,44)" fg:x="432058590" fg:w="2785343"/><text x="93.1960%" y="2735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (931,052 samples, 0.20%)</title><rect x="93.3449%" y="2709" width="0.2003%" height="15" fill="rgb(214,169,17)" fg:x="433912881" fg:w="931052"/><text x="93.5949%" y="2719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (931,052 samples, 0.20%)</title><rect x="93.3449%" y="2693" width="0.2003%" height="15" fill="rgb(210,59,37)" fg:x="433912881" fg:w="931052"/><text x="93.5949%" y="2703.50"></text></g><g><title>serde::de::MapAccess::next_entry (14,611,840 samples, 3.14%)</title><rect x="90.6019%" y="2949" width="3.1434%" height="15" fill="rgb(214,116,48)" fg:x="421162251" fg:w="14611840"/><text x="90.8519%" y="2959.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (14,611,840 samples, 3.14%)</title><rect x="90.6019%" y="2933" width="3.1434%" height="15" fill="rgb(244,191,6)" fg:x="421162251" fg:w="14611840"/><text x="90.8519%" y="2943.50">ser..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (14,611,840 samples, 3.14%)</title><rect x="90.6019%" y="2917" width="3.1434%" height="15" fill="rgb(241,50,52)" fg:x="421162251" fg:w="14611840"/><text x="90.8519%" y="2927.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14,611,840 samples, 3.14%)</title><rect x="90.6019%" y="2901" width="3.1434%" height="15" fill="rgb(236,75,39)" fg:x="421162251" fg:w="14611840"/><text x="90.8519%" y="2911.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14,611,840 samples, 3.14%)</title><rect x="90.6019%" y="2885" width="3.1434%" height="15" fill="rgb(236,99,0)" fg:x="421162251" fg:w="14611840"/><text x="90.8519%" y="2895.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14,611,840 samples, 3.14%)</title><rect x="90.6019%" y="2869" width="3.1434%" height="15" fill="rgb(207,202,15)" fg:x="421162251" fg:w="14611840"/><text x="90.8519%" y="2879.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (930,158 samples, 0.20%)</title><rect x="93.5452%" y="2853" width="0.2001%" height="15" fill="rgb(233,207,14)" fg:x="434843933" fg:w="930158"/><text x="93.7952%" y="2863.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (930,158 samples, 0.20%)</title><rect x="93.5452%" y="2837" width="0.2001%" height="15" fill="rgb(226,27,51)" fg:x="434843933" fg:w="930158"/><text x="93.7952%" y="2847.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (930,158 samples, 0.20%)</title><rect x="93.5452%" y="2821" width="0.2001%" height="15" fill="rgb(206,104,42)" fg:x="434843933" fg:w="930158"/><text x="93.7952%" y="2831.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (930,158 samples, 0.20%)</title><rect x="93.5452%" y="2805" width="0.2001%" height="15" fill="rgb(212,225,4)" fg:x="434843933" fg:w="930158"/><text x="93.7952%" y="2815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (930,158 samples, 0.20%)</title><rect x="93.5452%" y="2789" width="0.2001%" height="15" fill="rgb(233,96,42)" fg:x="434843933" fg:w="930158"/><text x="93.7952%" y="2799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (930,158 samples, 0.20%)</title><rect x="93.5452%" y="2773" width="0.2001%" height="15" fill="rgb(229,21,32)" fg:x="434843933" fg:w="930158"/><text x="93.7952%" y="2783.50"></text></g><g><title>alloc::slice::hack::to_vec (930,158 samples, 0.20%)</title><rect x="93.5452%" y="2757" width="0.2001%" height="15" fill="rgb(226,216,24)" fg:x="434843933" fg:w="930158"/><text x="93.7952%" y="2767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (930,158 samples, 0.20%)</title><rect x="93.5452%" y="2741" width="0.2001%" height="15" fill="rgb(221,163,17)" fg:x="434843933" fg:w="930158"/><text x="93.7952%" y="2751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (930,158 samples, 0.20%)</title><rect x="93.5452%" y="2725" width="0.2001%" height="15" fill="rgb(216,216,42)" fg:x="434843933" fg:w="930158"/><text x="93.7952%" y="2735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (930,158 samples, 0.20%)</title><rect x="93.5452%" y="2709" width="0.2001%" height="15" fill="rgb(240,118,7)" fg:x="434843933" fg:w="930158"/><text x="93.7952%" y="2719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (930,158 samples, 0.20%)</title><rect x="93.5452%" y="2693" width="0.2001%" height="15" fill="rgb(221,67,37)" fg:x="434843933" fg:w="930158"/><text x="93.7952%" y="2703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (930,158 samples, 0.20%)</title><rect x="93.5452%" y="2677" width="0.2001%" height="15" fill="rgb(241,32,44)" fg:x="434843933" fg:w="930158"/><text x="93.7952%" y="2687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (930,158 samples, 0.20%)</title><rect x="93.5452%" y="2661" width="0.2001%" height="15" fill="rgb(235,204,43)" fg:x="434843933" fg:w="930158"/><text x="93.7952%" y="2671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (930,158 samples, 0.20%)</title><rect x="93.5452%" y="2645" width="0.2001%" height="15" fill="rgb(213,116,10)" fg:x="434843933" fg:w="930158"/><text x="93.7952%" y="2655.50"></text></g><g><title>alloc::alloc::alloc (930,158 samples, 0.20%)</title><rect x="93.5452%" y="2629" width="0.2001%" height="15" fill="rgb(239,15,48)" fg:x="434843933" fg:w="930158"/><text x="93.7952%" y="2639.50"></text></g><g><title>malloc (930,158 samples, 0.20%)</title><rect x="93.5452%" y="2613" width="0.2001%" height="15" fill="rgb(207,123,36)" fg:x="434843933" fg:w="930158"/><text x="93.7952%" y="2623.50"></text></g><g><title>serde::de::MapAccess::next_value (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2949" width="0.1915%" height="15" fill="rgb(209,103,30)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2959.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2933" width="0.1915%" height="15" fill="rgb(238,100,19)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2943.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2917" width="0.1915%" height="15" fill="rgb(244,30,14)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2927.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2901" width="0.1915%" height="15" fill="rgb(249,174,6)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2911.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2885" width="0.1915%" height="15" fill="rgb(235,213,41)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2895.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2869" width="0.1915%" height="15" fill="rgb(213,118,6)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2879.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2853" width="0.1915%" height="15" fill="rgb(235,44,51)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2863.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2837" width="0.1915%" height="15" fill="rgb(217,9,53)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2847.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2821" width="0.1915%" height="15" fill="rgb(237,172,34)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2831.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2805" width="0.1915%" height="15" fill="rgb(206,206,11)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2789" width="0.1915%" height="15" fill="rgb(214,149,29)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2773" width="0.1915%" height="15" fill="rgb(208,123,3)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2783.50"></text></g><g><title>alloc::slice::hack::to_vec (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2757" width="0.1915%" height="15" fill="rgb(229,126,4)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2741" width="0.1915%" height="15" fill="rgb(222,92,36)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2725" width="0.1915%" height="15" fill="rgb(216,39,41)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2709" width="0.1915%" height="15" fill="rgb(253,127,28)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2693" width="0.1915%" height="15" fill="rgb(249,152,51)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2677" width="0.1915%" height="15" fill="rgb(209,123,42)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2661" width="0.1915%" height="15" fill="rgb(241,118,22)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2645" width="0.1915%" height="15" fill="rgb(208,25,7)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2655.50"></text></g><g><title>alloc::alloc::alloc (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2629" width="0.1915%" height="15" fill="rgb(243,144,39)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2639.50"></text></g><g><title>__rust_alloc (890,205 samples, 0.19%)</title><rect x="93.7453%" y="2613" width="0.1915%" height="15" fill="rgb(250,50,5)" fg:x="435774091" fg:w="890205"/><text x="93.9953%" y="2623.50"></text></g><g><title>serde::de::MapAccess::next_entry (18,302,986 samples, 3.94%)</title><rect x="90.3997%" y="3157" width="3.9374%" height="15" fill="rgb(207,67,11)" fg:x="420222005" fg:w="18302986"/><text x="90.6497%" y="3167.50">serd..</text></g><g><title>serde::de::MapAccess::next_entry_seed (18,302,986 samples, 3.94%)</title><rect x="90.3997%" y="3141" width="3.9374%" height="15" fill="rgb(245,204,40)" fg:x="420222005" fg:w="18302986"/><text x="90.6497%" y="3151.50">serd..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (18,302,986 samples, 3.94%)</title><rect x="90.3997%" y="3125" width="3.9374%" height="15" fill="rgb(238,228,24)" fg:x="420222005" fg:w="18302986"/><text x="90.6497%" y="3135.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18,302,986 samples, 3.94%)</title><rect x="90.3997%" y="3109" width="3.9374%" height="15" fill="rgb(217,116,22)" fg:x="420222005" fg:w="18302986"/><text x="90.6497%" y="3119.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18,302,986 samples, 3.94%)</title><rect x="90.3997%" y="3093" width="3.9374%" height="15" fill="rgb(234,98,12)" fg:x="420222005" fg:w="18302986"/><text x="90.6497%" y="3103.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18,302,986 samples, 3.94%)</title><rect x="90.3997%" y="3077" width="3.9374%" height="15" fill="rgb(242,170,50)" fg:x="420222005" fg:w="18302986"/><text x="90.6497%" y="3087.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (18,302,986 samples, 3.94%)</title><rect x="90.3997%" y="3061" width="3.9374%" height="15" fill="rgb(235,7,5)" fg:x="420222005" fg:w="18302986"/><text x="90.6497%" y="3071.50">&lt;ser..</text></g><g><title>serde::de::SeqAccess::next_element (18,302,986 samples, 3.94%)</title><rect x="90.3997%" y="3045" width="3.9374%" height="15" fill="rgb(241,114,28)" fg:x="420222005" fg:w="18302986"/><text x="90.6497%" y="3055.50">serd..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (18,302,986 samples, 3.94%)</title><rect x="90.3997%" y="3029" width="3.9374%" height="15" fill="rgb(246,112,42)" fg:x="420222005" fg:w="18302986"/><text x="90.6497%" y="3039.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18,302,986 samples, 3.94%)</title><rect x="90.3997%" y="3013" width="3.9374%" height="15" fill="rgb(248,228,14)" fg:x="420222005" fg:w="18302986"/><text x="90.6497%" y="3023.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18,302,986 samples, 3.94%)</title><rect x="90.3997%" y="2997" width="3.9374%" height="15" fill="rgb(208,133,18)" fg:x="420222005" fg:w="18302986"/><text x="90.6497%" y="3007.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18,302,986 samples, 3.94%)</title><rect x="90.3997%" y="2981" width="3.9374%" height="15" fill="rgb(207,35,49)" fg:x="420222005" fg:w="18302986"/><text x="90.6497%" y="2991.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17,362,740 samples, 3.74%)</title><rect x="90.6019%" y="2965" width="3.7351%" height="15" fill="rgb(205,68,36)" fg:x="421162251" fg:w="17362740"/><text x="90.8519%" y="2975.50">&lt;ser..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,860,695 samples, 0.40%)</title><rect x="93.9368%" y="2949" width="0.4003%" height="15" fill="rgb(245,62,40)" fg:x="436664296" fg:w="1860695"/><text x="94.1868%" y="2959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,860,695 samples, 0.40%)</title><rect x="93.9368%" y="2933" width="0.4003%" height="15" fill="rgb(228,27,24)" fg:x="436664296" fg:w="1860695"/><text x="94.1868%" y="2943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (930,684 samples, 0.20%)</title><rect x="94.1369%" y="2917" width="0.2002%" height="15" fill="rgb(253,19,12)" fg:x="437594307" fg:w="930684"/><text x="94.3869%" y="2927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (930,684 samples, 0.20%)</title><rect x="94.1369%" y="2901" width="0.2002%" height="15" fill="rgb(232,28,20)" fg:x="437594307" fg:w="930684"/><text x="94.3869%" y="2911.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (930,684 samples, 0.20%)</title><rect x="94.1369%" y="2885" width="0.2002%" height="15" fill="rgb(218,35,51)" fg:x="437594307" fg:w="930684"/><text x="94.3869%" y="2895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (930,684 samples, 0.20%)</title><rect x="94.1369%" y="2869" width="0.2002%" height="15" fill="rgb(212,90,40)" fg:x="437594307" fg:w="930684"/><text x="94.3869%" y="2879.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (930,684 samples, 0.20%)</title><rect x="94.1369%" y="2853" width="0.2002%" height="15" fill="rgb(220,172,12)" fg:x="437594307" fg:w="930684"/><text x="94.3869%" y="2863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (930,684 samples, 0.20%)</title><rect x="94.1369%" y="2837" width="0.2002%" height="15" fill="rgb(226,159,20)" fg:x="437594307" fg:w="930684"/><text x="94.3869%" y="2847.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (930,684 samples, 0.20%)</title><rect x="94.1369%" y="2821" width="0.2002%" height="15" fill="rgb(234,205,16)" fg:x="437594307" fg:w="930684"/><text x="94.3869%" y="2831.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (930,684 samples, 0.20%)</title><rect x="94.1369%" y="2805" width="0.2002%" height="15" fill="rgb(207,9,39)" fg:x="437594307" fg:w="930684"/><text x="94.3869%" y="2815.50"></text></g><g><title>[libc.so.6] (930,684 samples, 0.20%)</title><rect x="94.1369%" y="2789" width="0.2002%" height="15" fill="rgb(249,143,15)" fg:x="437594307" fg:w="930684"/><text x="94.3869%" y="2799.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (19,241,831 samples, 4.14%)</title><rect x="90.3997%" y="3269" width="4.1394%" height="15" fill="rgb(253,133,29)" fg:x="420222005" fg:w="19241831"/><text x="90.6497%" y="3279.50">&lt;serd..</text></g><g><title>serde::de::SeqAccess::next_element (19,241,831 samples, 4.14%)</title><rect x="90.3997%" y="3253" width="4.1394%" height="15" fill="rgb(221,187,0)" fg:x="420222005" fg:w="19241831"/><text x="90.6497%" y="3263.50">serde..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (19,241,831 samples, 4.14%)</title><rect x="90.3997%" y="3237" width="4.1394%" height="15" fill="rgb(205,204,26)" fg:x="420222005" fg:w="19241831"/><text x="90.6497%" y="3247.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (19,241,831 samples, 4.14%)</title><rect x="90.3997%" y="3221" width="4.1394%" height="15" fill="rgb(224,68,54)" fg:x="420222005" fg:w="19241831"/><text x="90.6497%" y="3231.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (19,241,831 samples, 4.14%)</title><rect x="90.3997%" y="3205" width="4.1394%" height="15" fill="rgb(209,67,4)" fg:x="420222005" fg:w="19241831"/><text x="90.6497%" y="3215.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19,241,831 samples, 4.14%)</title><rect x="90.3997%" y="3189" width="4.1394%" height="15" fill="rgb(228,229,18)" fg:x="420222005" fg:w="19241831"/><text x="90.6497%" y="3199.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19,241,831 samples, 4.14%)</title><rect x="90.3997%" y="3173" width="4.1394%" height="15" fill="rgb(231,89,13)" fg:x="420222005" fg:w="19241831"/><text x="90.6497%" y="3183.50">&lt;serd..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (938,845 samples, 0.20%)</title><rect x="94.3371%" y="3157" width="0.2020%" height="15" fill="rgb(210,182,18)" fg:x="438524991" fg:w="938845"/><text x="94.5871%" y="3167.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (938,845 samples, 0.20%)</title><rect x="94.3371%" y="3141" width="0.2020%" height="15" fill="rgb(240,105,2)" fg:x="438524991" fg:w="938845"/><text x="94.5871%" y="3151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (938,845 samples, 0.20%)</title><rect x="94.3371%" y="3125" width="0.2020%" height="15" fill="rgb(207,170,50)" fg:x="438524991" fg:w="938845"/><text x="94.5871%" y="3135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (938,845 samples, 0.20%)</title><rect x="94.3371%" y="3109" width="0.2020%" height="15" fill="rgb(232,133,24)" fg:x="438524991" fg:w="938845"/><text x="94.5871%" y="3119.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (938,845 samples, 0.20%)</title><rect x="94.3371%" y="3093" width="0.2020%" height="15" fill="rgb(235,166,27)" fg:x="438524991" fg:w="938845"/><text x="94.5871%" y="3103.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (938,845 samples, 0.20%)</title><rect x="94.3371%" y="3077" width="0.2020%" height="15" fill="rgb(209,19,13)" fg:x="438524991" fg:w="938845"/><text x="94.5871%" y="3087.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (938,845 samples, 0.20%)</title><rect x="94.3371%" y="3061" width="0.2020%" height="15" fill="rgb(226,79,39)" fg:x="438524991" fg:w="938845"/><text x="94.5871%" y="3071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (938,845 samples, 0.20%)</title><rect x="94.3371%" y="3045" width="0.2020%" height="15" fill="rgb(222,163,10)" fg:x="438524991" fg:w="938845"/><text x="94.5871%" y="3055.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (938,845 samples, 0.20%)</title><rect x="94.3371%" y="3029" width="0.2020%" height="15" fill="rgb(214,44,19)" fg:x="438524991" fg:w="938845"/><text x="94.5871%" y="3039.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (938,845 samples, 0.20%)</title><rect x="94.3371%" y="3013" width="0.2020%" height="15" fill="rgb(210,217,13)" fg:x="438524991" fg:w="938845"/><text x="94.5871%" y="3023.50"></text></g><g><title>[libc.so.6] (938,845 samples, 0.20%)</title><rect x="94.3371%" y="2997" width="0.2020%" height="15" fill="rgb(237,61,54)" fg:x="438524991" fg:w="938845"/><text x="94.5871%" y="3007.50"></text></g><g><title>serde::de::MapAccess::next_entry (22,031,562 samples, 4.74%)</title><rect x="89.9992%" y="3781" width="4.7395%" height="15" fill="rgb(226,184,24)" fg:x="418360401" fg:w="22031562"/><text x="90.2492%" y="3791.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (22,031,562 samples, 4.74%)</title><rect x="89.9992%" y="3765" width="4.7395%" height="15" fill="rgb(223,226,4)" fg:x="418360401" fg:w="22031562"/><text x="90.2492%" y="3775.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (22,031,562 samples, 4.74%)</title><rect x="89.9992%" y="3749" width="4.7395%" height="15" fill="rgb(210,26,41)" fg:x="418360401" fg:w="22031562"/><text x="90.2492%" y="3759.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (22,031,562 samples, 4.74%)</title><rect x="89.9992%" y="3733" width="4.7395%" height="15" fill="rgb(220,221,6)" fg:x="418360401" fg:w="22031562"/><text x="90.2492%" y="3743.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (22,031,562 samples, 4.74%)</title><rect x="89.9992%" y="3717" width="4.7395%" height="15" fill="rgb(225,89,49)" fg:x="418360401" fg:w="22031562"/><text x="90.2492%" y="3727.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22,031,562 samples, 4.74%)</title><rect x="89.9992%" y="3701" width="4.7395%" height="15" fill="rgb(218,70,45)" fg:x="418360401" fg:w="22031562"/><text x="90.2492%" y="3711.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (22,031,562 samples, 4.74%)</title><rect x="89.9992%" y="3685" width="4.7395%" height="15" fill="rgb(238,166,21)" fg:x="418360401" fg:w="22031562"/><text x="90.2492%" y="3695.50">&lt;serde..</text></g><g><title>serde::de::SeqAccess::next_element (22,031,562 samples, 4.74%)</title><rect x="89.9992%" y="3669" width="4.7395%" height="15" fill="rgb(224,141,44)" fg:x="418360401" fg:w="22031562"/><text x="90.2492%" y="3679.50">serde:..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (22,031,562 samples, 4.74%)</title><rect x="89.9992%" y="3653" width="4.7395%" height="15" fill="rgb(230,12,49)" fg:x="418360401" fg:w="22031562"/><text x="90.2492%" y="3663.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (22,031,562 samples, 4.74%)</title><rect x="89.9992%" y="3637" width="4.7395%" height="15" fill="rgb(212,174,12)" fg:x="418360401" fg:w="22031562"/><text x="90.2492%" y="3647.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (22,031,562 samples, 4.74%)</title><rect x="89.9992%" y="3621" width="4.7395%" height="15" fill="rgb(246,67,9)" fg:x="418360401" fg:w="22031562"/><text x="90.2492%" y="3631.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22,031,562 samples, 4.74%)</title><rect x="89.9992%" y="3605" width="4.7395%" height="15" fill="rgb(239,35,23)" fg:x="418360401" fg:w="22031562"/><text x="90.2492%" y="3615.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (22,031,562 samples, 4.74%)</title><rect x="89.9992%" y="3589" width="4.7395%" height="15" fill="rgb(211,167,0)" fg:x="418360401" fg:w="22031562"/><text x="90.2492%" y="3599.50">&lt;serde..</text></g><g><title>serde::de::MapAccess::next_entry (22,031,562 samples, 4.74%)</title><rect x="89.9992%" y="3573" width="4.7395%" height="15" fill="rgb(225,119,45)" fg:x="418360401" fg:w="22031562"/><text x="90.2492%" y="3583.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (22,031,562 samples, 4.74%)</title><rect x="89.9992%" y="3557" width="4.7395%" height="15" fill="rgb(210,162,6)" fg:x="418360401" fg:w="22031562"/><text x="90.2492%" y="3567.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (21,101,942 samples, 4.54%)</title><rect x="90.1992%" y="3541" width="4.5395%" height="15" fill="rgb(208,118,35)" fg:x="419290021" fg:w="21101942"/><text x="90.4492%" y="3551.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (21,101,942 samples, 4.54%)</title><rect x="90.1992%" y="3525" width="4.5395%" height="15" fill="rgb(239,4,53)" fg:x="419290021" fg:w="21101942"/><text x="90.4492%" y="3535.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (21,101,942 samples, 4.54%)</title><rect x="90.1992%" y="3509" width="4.5395%" height="15" fill="rgb(213,130,21)" fg:x="419290021" fg:w="21101942"/><text x="90.4492%" y="3519.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (21,101,942 samples, 4.54%)</title><rect x="90.1992%" y="3493" width="4.5395%" height="15" fill="rgb(235,148,0)" fg:x="419290021" fg:w="21101942"/><text x="90.4492%" y="3503.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (21,101,942 samples, 4.54%)</title><rect x="90.1992%" y="3477" width="4.5395%" height="15" fill="rgb(244,224,18)" fg:x="419290021" fg:w="21101942"/><text x="90.4492%" y="3487.50">&lt;serd..</text></g><g><title>serde::de::SeqAccess::next_element (21,101,942 samples, 4.54%)</title><rect x="90.1992%" y="3461" width="4.5395%" height="15" fill="rgb(211,214,4)" fg:x="419290021" fg:w="21101942"/><text x="90.4492%" y="3471.50">serde..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (21,101,942 samples, 4.54%)</title><rect x="90.1992%" y="3445" width="4.5395%" height="15" fill="rgb(206,119,25)" fg:x="419290021" fg:w="21101942"/><text x="90.4492%" y="3455.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (21,101,942 samples, 4.54%)</title><rect x="90.1992%" y="3429" width="4.5395%" height="15" fill="rgb(243,93,47)" fg:x="419290021" fg:w="21101942"/><text x="90.4492%" y="3439.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (21,101,942 samples, 4.54%)</title><rect x="90.1992%" y="3413" width="4.5395%" height="15" fill="rgb(224,194,6)" fg:x="419290021" fg:w="21101942"/><text x="90.4492%" y="3423.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (21,101,942 samples, 4.54%)</title><rect x="90.1992%" y="3397" width="4.5395%" height="15" fill="rgb(243,229,6)" fg:x="419290021" fg:w="21101942"/><text x="90.4492%" y="3407.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (21,101,942 samples, 4.54%)</title><rect x="90.1992%" y="3381" width="4.5395%" height="15" fill="rgb(207,23,50)" fg:x="419290021" fg:w="21101942"/><text x="90.4492%" y="3391.50">&lt;serd..</text></g><g><title>serde::de::MapAccess::next_entry (21,101,942 samples, 4.54%)</title><rect x="90.1992%" y="3365" width="4.5395%" height="15" fill="rgb(253,192,32)" fg:x="419290021" fg:w="21101942"/><text x="90.4492%" y="3375.50">serde..</text></g><g><title>serde::de::MapAccess::next_entry_seed (21,101,942 samples, 4.54%)</title><rect x="90.1992%" y="3349" width="4.5395%" height="15" fill="rgb(213,21,6)" fg:x="419290021" fg:w="21101942"/><text x="90.4492%" y="3359.50">serde..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (20,169,958 samples, 4.34%)</title><rect x="90.3997%" y="3333" width="4.3390%" height="15" fill="rgb(243,151,13)" fg:x="420222005" fg:w="20169958"/><text x="90.6497%" y="3343.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (20,169,958 samples, 4.34%)</title><rect x="90.3997%" y="3317" width="4.3390%" height="15" fill="rgb(233,165,41)" fg:x="420222005" fg:w="20169958"/><text x="90.6497%" y="3327.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (20,169,958 samples, 4.34%)</title><rect x="90.3997%" y="3301" width="4.3390%" height="15" fill="rgb(246,176,45)" fg:x="420222005" fg:w="20169958"/><text x="90.6497%" y="3311.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20,169,958 samples, 4.34%)</title><rect x="90.3997%" y="3285" width="4.3390%" height="15" fill="rgb(217,170,52)" fg:x="420222005" fg:w="20169958"/><text x="90.6497%" y="3295.50">&lt;&amp;mut..</text></g><g><title>serde::de::Visitor::visit_borrowed_str (928,127 samples, 0.20%)</title><rect x="94.5390%" y="3269" width="0.1997%" height="15" fill="rgb(214,203,54)" fg:x="439463836" fg:w="928127"/><text x="94.7890%" y="3279.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (928,127 samples, 0.20%)</title><rect x="94.5390%" y="3253" width="0.1997%" height="15" fill="rgb(248,215,49)" fg:x="439463836" fg:w="928127"/><text x="94.7890%" y="3263.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (928,127 samples, 0.20%)</title><rect x="94.5390%" y="3237" width="0.1997%" height="15" fill="rgb(208,46,10)" fg:x="439463836" fg:w="928127"/><text x="94.7890%" y="3247.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (928,127 samples, 0.20%)</title><rect x="94.5390%" y="3221" width="0.1997%" height="15" fill="rgb(254,5,31)" fg:x="439463836" fg:w="928127"/><text x="94.7890%" y="3231.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (928,127 samples, 0.20%)</title><rect x="94.5390%" y="3205" width="0.1997%" height="15" fill="rgb(222,104,33)" fg:x="439463836" fg:w="928127"/><text x="94.7890%" y="3215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (928,127 samples, 0.20%)</title><rect x="94.5390%" y="3189" width="0.1997%" height="15" fill="rgb(248,49,16)" fg:x="439463836" fg:w="928127"/><text x="94.7890%" y="3199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (928,127 samples, 0.20%)</title><rect x="94.5390%" y="3173" width="0.1997%" height="15" fill="rgb(232,198,41)" fg:x="439463836" fg:w="928127"/><text x="94.7890%" y="3183.50"></text></g><g><title>alloc::slice::hack::to_vec (928,127 samples, 0.20%)</title><rect x="94.5390%" y="3157" width="0.1997%" height="15" fill="rgb(214,125,3)" fg:x="439463836" fg:w="928127"/><text x="94.7890%" y="3167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (928,127 samples, 0.20%)</title><rect x="94.5390%" y="3141" width="0.1997%" height="15" fill="rgb(229,220,28)" fg:x="439463836" fg:w="928127"/><text x="94.7890%" y="3151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (928,127 samples, 0.20%)</title><rect x="94.5390%" y="3125" width="0.1997%" height="15" fill="rgb(222,64,37)" fg:x="439463836" fg:w="928127"/><text x="94.7890%" y="3135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (928,127 samples, 0.20%)</title><rect x="94.5390%" y="3109" width="0.1997%" height="15" fill="rgb(249,184,13)" fg:x="439463836" fg:w="928127"/><text x="94.7890%" y="3119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (928,127 samples, 0.20%)</title><rect x="94.5390%" y="3093" width="0.1997%" height="15" fill="rgb(252,176,6)" fg:x="439463836" fg:w="928127"/><text x="94.7890%" y="3103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (928,127 samples, 0.20%)</title><rect x="94.5390%" y="3077" width="0.1997%" height="15" fill="rgb(228,153,7)" fg:x="439463836" fg:w="928127"/><text x="94.7890%" y="3087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (928,127 samples, 0.20%)</title><rect x="94.5390%" y="3061" width="0.1997%" height="15" fill="rgb(242,193,5)" fg:x="439463836" fg:w="928127"/><text x="94.7890%" y="3071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (928,127 samples, 0.20%)</title><rect x="94.5390%" y="3045" width="0.1997%" height="15" fill="rgb(232,140,9)" fg:x="439463836" fg:w="928127"/><text x="94.7890%" y="3055.50"></text></g><g><title>alloc::alloc::alloc (928,127 samples, 0.20%)</title><rect x="94.5390%" y="3029" width="0.1997%" height="15" fill="rgb(213,222,16)" fg:x="439463836" fg:w="928127"/><text x="94.7890%" y="3039.50"></text></g><g><title>malloc (928,127 samples, 0.20%)</title><rect x="94.5390%" y="3013" width="0.1997%" height="15" fill="rgb(222,75,50)" fg:x="439463836" fg:w="928127"/><text x="94.7890%" y="3023.50"></text></g><g><title>[libc.so.6] (928,127 samples, 0.20%)</title><rect x="94.5390%" y="2997" width="0.1997%" height="15" fill="rgb(205,180,2)" fg:x="439463836" fg:w="928127"/><text x="94.7890%" y="3007.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (23,411,724 samples, 5.04%)</title><rect x="89.8027%" y="4517" width="5.0364%" height="15" fill="rgb(216,34,7)" fg:x="417446919" fg:w="23411724"/><text x="90.0527%" y="4527.50">&lt;serde..</text></g><g><title>serde::de::SeqAccess::next_element (23,411,724 samples, 5.04%)</title><rect x="89.8027%" y="4501" width="5.0364%" height="15" fill="rgb(253,16,32)" fg:x="417446919" fg:w="23411724"/><text x="90.0527%" y="4511.50">serde:..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (23,411,724 samples, 5.04%)</title><rect x="89.8027%" y="4485" width="5.0364%" height="15" fill="rgb(208,97,28)" fg:x="417446919" fg:w="23411724"/><text x="90.0527%" y="4495.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (23,411,724 samples, 5.04%)</title><rect x="89.8027%" y="4469" width="5.0364%" height="15" fill="rgb(225,92,11)" fg:x="417446919" fg:w="23411724"/><text x="90.0527%" y="4479.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (23,411,724 samples, 5.04%)</title><rect x="89.8027%" y="4453" width="5.0364%" height="15" fill="rgb(243,38,12)" fg:x="417446919" fg:w="23411724"/><text x="90.0527%" y="4463.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23,411,724 samples, 5.04%)</title><rect x="89.8027%" y="4437" width="5.0364%" height="15" fill="rgb(208,139,16)" fg:x="417446919" fg:w="23411724"/><text x="90.0527%" y="4447.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (23,411,724 samples, 5.04%)</title><rect x="89.8027%" y="4421" width="5.0364%" height="15" fill="rgb(227,24,9)" fg:x="417446919" fg:w="23411724"/><text x="90.0527%" y="4431.50">&lt;serde..</text></g><g><title>serde::de::MapAccess::next_entry (23,411,724 samples, 5.04%)</title><rect x="89.8027%" y="4405" width="5.0364%" height="15" fill="rgb(206,62,11)" fg:x="417446919" fg:w="23411724"/><text x="90.0527%" y="4415.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (23,411,724 samples, 5.04%)</title><rect x="89.8027%" y="4389" width="5.0364%" height="15" fill="rgb(228,134,27)" fg:x="417446919" fg:w="23411724"/><text x="90.0527%" y="4399.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (23,411,724 samples, 5.04%)</title><rect x="89.8027%" y="4373" width="5.0364%" height="15" fill="rgb(205,55,33)" fg:x="417446919" fg:w="23411724"/><text x="90.0527%" y="4383.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (23,411,724 samples, 5.04%)</title><rect x="89.8027%" y="4357" width="5.0364%" height="15" fill="rgb(243,75,43)" fg:x="417446919" fg:w="23411724"/><text x="90.0527%" y="4367.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (23,411,724 samples, 5.04%)</title><rect x="89.8027%" y="4341" width="5.0364%" height="15" fill="rgb(223,27,42)" fg:x="417446919" fg:w="23411724"/><text x="90.0527%" y="4351.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (23,411,724 samples, 5.04%)</title><rect x="89.8027%" y="4325" width="5.0364%" height="15" fill="rgb(232,189,33)" fg:x="417446919" fg:w="23411724"/><text x="90.0527%" y="4335.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (23,411,724 samples, 5.04%)</title><rect x="89.8027%" y="4309" width="5.0364%" height="15" fill="rgb(210,9,39)" fg:x="417446919" fg:w="23411724"/><text x="90.0527%" y="4319.50">&lt;serde..</text></g><g><title>serde::de::SeqAccess::next_element (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="4293" width="4.8399%" height="15" fill="rgb(242,85,26)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="4303.50">serde:..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="4277" width="4.8399%" height="15" fill="rgb(248,44,4)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="4287.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="4261" width="4.8399%" height="15" fill="rgb(250,96,46)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="4271.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="4245" width="4.8399%" height="15" fill="rgb(229,116,26)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="4255.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="4229" width="4.8399%" height="15" fill="rgb(246,94,34)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="4239.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="4213" width="4.8399%" height="15" fill="rgb(251,73,21)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="4223.50">&lt;serde..</text></g><g><title>serde::de::MapAccess::next_entry (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="4197" width="4.8399%" height="15" fill="rgb(254,121,25)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="4207.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="4181" width="4.8399%" height="15" fill="rgb(215,161,49)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="4191.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="4165" width="4.8399%" height="15" fill="rgb(221,43,13)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="4175.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="4149" width="4.8399%" height="15" fill="rgb(249,5,37)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="4159.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="4133" width="4.8399%" height="15" fill="rgb(226,25,44)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="4143.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="4117" width="4.8399%" height="15" fill="rgb(238,189,16)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="4127.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="4101" width="4.8399%" height="15" fill="rgb(251,186,8)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="4111.50">&lt;serde..</text></g><g><title>serde::de::SeqAccess::next_element (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="4085" width="4.8399%" height="15" fill="rgb(254,34,31)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="4095.50">serde:..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="4069" width="4.8399%" height="15" fill="rgb(225,215,27)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="4079.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="4053" width="4.8399%" height="15" fill="rgb(221,192,48)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="4063.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="4037" width="4.8399%" height="15" fill="rgb(219,137,20)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="4047.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="4021" width="4.8399%" height="15" fill="rgb(219,84,11)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="4031.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="4005" width="4.8399%" height="15" fill="rgb(224,10,23)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="4015.50">&lt;serde..</text></g><g><title>serde::de::MapAccess::next_entry (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="3989" width="4.8399%" height="15" fill="rgb(248,22,39)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="3999.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="3973" width="4.8399%" height="15" fill="rgb(212,154,20)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="3983.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="3957" width="4.8399%" height="15" fill="rgb(236,199,50)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="3967.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="3941" width="4.8399%" height="15" fill="rgb(211,9,17)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="3951.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="3925" width="4.8399%" height="15" fill="rgb(243,216,36)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="3935.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="3909" width="4.8399%" height="15" fill="rgb(250,2,10)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="3919.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="3893" width="4.8399%" height="15" fill="rgb(226,50,48)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="3903.50">&lt;serde..</text></g><g><title>serde::de::SeqAccess::next_element (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="3877" width="4.8399%" height="15" fill="rgb(243,81,16)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="3887.50">serde:..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="3861" width="4.8399%" height="15" fill="rgb(250,14,2)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="3871.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="3845" width="4.8399%" height="15" fill="rgb(233,135,29)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="3855.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="3829" width="4.8399%" height="15" fill="rgb(224,64,43)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="3839.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="3813" width="4.8399%" height="15" fill="rgb(238,84,13)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="3823.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (22,498,242 samples, 4.84%)</title><rect x="89.9992%" y="3797" width="4.8399%" height="15" fill="rgb(253,48,26)" fg:x="418360401" fg:w="22498242"/><text x="90.2492%" y="3807.50">&lt;serde..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (466,680 samples, 0.10%)</title><rect x="94.7387%" y="3781" width="0.1004%" height="15" fill="rgb(205,223,31)" fg:x="440391963" fg:w="466680"/><text x="94.9887%" y="3791.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (466,680 samples, 0.10%)</title><rect x="94.7387%" y="3765" width="0.1004%" height="15" fill="rgb(221,41,32)" fg:x="440391963" fg:w="466680"/><text x="94.9887%" y="3775.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (466,680 samples, 0.10%)</title><rect x="94.7387%" y="3749" width="0.1004%" height="15" fill="rgb(213,158,31)" fg:x="440391963" fg:w="466680"/><text x="94.9887%" y="3759.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (466,680 samples, 0.10%)</title><rect x="94.7387%" y="3733" width="0.1004%" height="15" fill="rgb(245,126,43)" fg:x="440391963" fg:w="466680"/><text x="94.9887%" y="3743.50"></text></g><g><title>main::benchmark::parse_web_layout_trace (25,579,417 samples, 5.50%)</title><rect x="89.4837%" y="4821" width="5.5027%" height="15" fill="rgb(227,7,22)" fg:x="415964023" fg:w="25579417"/><text x="89.7337%" y="4831.50">main::b..</text></g><g><title>serde_json::de::from_str (25,579,417 samples, 5.50%)</title><rect x="89.4837%" y="4805" width="5.5027%" height="15" fill="rgb(252,90,44)" fg:x="415964023" fg:w="25579417"/><text x="89.7337%" y="4815.50">serde_j..</text></g><g><title>serde_json::de::from_trait (25,579,417 samples, 5.50%)</title><rect x="89.4837%" y="4789" width="5.5027%" height="15" fill="rgb(253,91,0)" fg:x="415964023" fg:w="25579417"/><text x="89.7337%" y="4799.50">serde_j..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (25,579,417 samples, 5.50%)</title><rect x="89.4837%" y="4773" width="5.5027%" height="15" fill="rgb(252,175,49)" fg:x="415964023" fg:w="25579417"/><text x="89.7337%" y="4783.50">serde_j..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (25,579,417 samples, 5.50%)</title><rect x="89.4837%" y="4757" width="5.5027%" height="15" fill="rgb(246,150,1)" fg:x="415964023" fg:w="25579417"/><text x="89.7337%" y="4767.50">&lt;&amp;mut s..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (25,579,417 samples, 5.50%)</title><rect x="89.4837%" y="4741" width="5.5027%" height="15" fill="rgb(241,192,25)" fg:x="415964023" fg:w="25579417"/><text x="89.7337%" y="4751.50">&lt;serde_..</text></g><g><title>serde::de::MapAccess::next_entry (25,579,417 samples, 5.50%)</title><rect x="89.4837%" y="4725" width="5.5027%" height="15" fill="rgb(239,187,11)" fg:x="415964023" fg:w="25579417"/><text x="89.7337%" y="4735.50">serde::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (25,579,417 samples, 5.50%)</title><rect x="89.4837%" y="4709" width="5.5027%" height="15" fill="rgb(218,202,51)" fg:x="415964023" fg:w="25579417"/><text x="89.7337%" y="4719.50">serde::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (25,579,417 samples, 5.50%)</title><rect x="89.4837%" y="4693" width="5.5027%" height="15" fill="rgb(225,176,8)" fg:x="415964023" fg:w="25579417"/><text x="89.7337%" y="4703.50">&lt;serde_..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (25,579,417 samples, 5.50%)</title><rect x="89.4837%" y="4677" width="5.5027%" height="15" fill="rgb(219,122,41)" fg:x="415964023" fg:w="25579417"/><text x="89.7337%" y="4687.50">&lt;core::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (25,579,417 samples, 5.50%)</title><rect x="89.4837%" y="4661" width="5.5027%" height="15" fill="rgb(248,140,20)" fg:x="415964023" fg:w="25579417"/><text x="89.7337%" y="4671.50">serde_j..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (25,579,417 samples, 5.50%)</title><rect x="89.4837%" y="4645" width="5.5027%" height="15" fill="rgb(245,41,37)" fg:x="415964023" fg:w="25579417"/><text x="89.7337%" y="4655.50">&lt;&amp;mut s..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (25,037,024 samples, 5.39%)</title><rect x="89.6004%" y="4629" width="5.3861%" height="15" fill="rgb(235,82,39)" fg:x="416506416" fg:w="25037024"/><text x="89.8504%" y="4639.50">&lt;serde_..</text></g><g><title>serde::de::MapAccess::next_entry (24,096,521 samples, 5.18%)</title><rect x="89.8027%" y="4613" width="5.1837%" height="15" fill="rgb(230,108,42)" fg:x="417446919" fg:w="24096521"/><text x="90.0527%" y="4623.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (24,096,521 samples, 5.18%)</title><rect x="89.8027%" y="4597" width="5.1837%" height="15" fill="rgb(215,150,50)" fg:x="417446919" fg:w="24096521"/><text x="90.0527%" y="4607.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (24,096,521 samples, 5.18%)</title><rect x="89.8027%" y="4581" width="5.1837%" height="15" fill="rgb(233,212,5)" fg:x="417446919" fg:w="24096521"/><text x="90.0527%" y="4591.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (24,096,521 samples, 5.18%)</title><rect x="89.8027%" y="4565" width="5.1837%" height="15" fill="rgb(245,80,22)" fg:x="417446919" fg:w="24096521"/><text x="90.0527%" y="4575.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (24,096,521 samples, 5.18%)</title><rect x="89.8027%" y="4549" width="5.1837%" height="15" fill="rgb(238,129,16)" fg:x="417446919" fg:w="24096521"/><text x="90.0527%" y="4559.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (24,096,521 samples, 5.18%)</title><rect x="89.8027%" y="4533" width="5.1837%" height="15" fill="rgb(240,19,0)" fg:x="417446919" fg:w="24096521"/><text x="90.0527%" y="4543.50">&lt;&amp;mut ..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::eat_char (684,797 samples, 0.15%)</title><rect x="94.8391%" y="4517" width="0.1473%" height="15" fill="rgb(232,42,35)" fg:x="440858643" fg:w="684797"/><text x="95.0891%" y="4527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::discard (684,797 samples, 0.15%)</title><rect x="94.8391%" y="4501" width="0.1473%" height="15" fill="rgb(223,130,24)" fg:x="440858643" fg:w="684797"/><text x="95.0891%" y="4511.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (684,797 samples, 0.15%)</title><rect x="94.8391%" y="4485" width="0.1473%" height="15" fill="rgb(237,16,22)" fg:x="440858643" fg:w="684797"/><text x="95.0891%" y="4495.50"></text></g><g><title>main::benchmark::print_web_layout_trace_summary (1,256,808 samples, 0.27%)</title><rect x="94.9864%" y="4821" width="0.2704%" height="15" fill="rgb(248,192,20)" fg:x="441543440" fg:w="1256808"/><text x="95.2364%" y="4831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,256,808 samples, 0.27%)</title><rect x="94.9864%" y="4805" width="0.2704%" height="15" fill="rgb(233,167,2)" fg:x="441543440" fg:w="1256808"/><text x="95.2364%" y="4815.50"></text></g><g><title>&lt;f64 as core::iter::traits::accum::Sum&gt;::sum (1,256,808 samples, 0.27%)</title><rect x="94.9864%" y="4789" width="0.2704%" height="15" fill="rgb(252,71,44)" fg:x="441543440" fg:w="1256808"/><text x="95.2364%" y="4799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,256,808 samples, 0.27%)</title><rect x="94.9864%" y="4773" width="0.2704%" height="15" fill="rgb(238,37,47)" fg:x="441543440" fg:w="1256808"/><text x="95.2364%" y="4783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,256,808 samples, 0.27%)</title><rect x="94.9864%" y="4757" width="0.2704%" height="15" fill="rgb(214,202,54)" fg:x="441543440" fg:w="1256808"/><text x="95.2364%" y="4767.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,256,808 samples, 0.27%)</title><rect x="94.9864%" y="4741" width="0.2704%" height="15" fill="rgb(254,165,40)" fg:x="441543440" fg:w="1256808"/><text x="95.2364%" y="4751.50"></text></g><g><title>&lt;f64 as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (1,256,808 samples, 0.27%)</title><rect x="94.9864%" y="4725" width="0.2704%" height="15" fill="rgb(246,173,38)" fg:x="441543440" fg:w="1256808"/><text x="95.2364%" y="4735.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,195,409 samples, 0.26%)</title><rect x="95.2568%" y="4661" width="0.2572%" height="15" fill="rgb(215,3,27)" fg:x="442800248" fg:w="1195409"/><text x="95.5068%" y="4671.50"></text></g><g><title>std::panic::catch_unwind (396,965,939 samples, 85.40%)</title><rect x="10.3839%" y="4965" width="85.3967%" height="15" fill="rgb(239,169,51)" fg:x="48269411" fg:w="396965939"/><text x="10.6339%" y="4975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (396,965,939 samples, 85.40%)</title><rect x="10.3839%" y="4949" width="85.3967%" height="15" fill="rgb(212,5,25)" fg:x="48269411" fg:w="396965939"/><text x="10.6339%" y="4959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (396,965,939 samples, 85.40%)</title><rect x="10.3839%" y="4933" width="85.3967%" height="15" fill="rgb(243,45,17)" fg:x="48269411" fg:w="396965939"/><text x="10.6339%" y="4943.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (396,965,939 samples, 85.40%)</title><rect x="10.3839%" y="4917" width="85.3967%" height="15" fill="rgb(242,97,9)" fg:x="48269411" fg:w="396965939"/><text x="10.6339%" y="4927.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (396,965,939 samples, 85.40%)</title><rect x="10.3839%" y="4901" width="85.3967%" height="15" fill="rgb(228,71,31)" fg:x="48269411" fg:w="396965939"/><text x="10.6339%" y="4911.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (396,965,939 samples, 85.40%)</title><rect x="10.3839%" y="4885" width="85.3967%" height="15" fill="rgb(252,184,16)" fg:x="48269411" fg:w="396965939"/><text x="10.6339%" y="4895.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (396,965,939 samples, 85.40%)</title><rect x="10.3839%" y="4869" width="85.3967%" height="15" fill="rgb(236,169,46)" fg:x="48269411" fg:w="396965939"/><text x="10.6339%" y="4879.50">core::ops::function::FnOnce::call_once</text></g><g><title>main::main (396,965,939 samples, 85.40%)</title><rect x="10.3839%" y="4853" width="85.3967%" height="15" fill="rgb(207,17,47)" fg:x="48269411" fg:w="396965939"/><text x="10.6339%" y="4863.50">main::main</text></g><g><title>main::benchmark::run_web_browser_layout_trace_benchmark (391,980,980 samples, 84.32%)</title><rect x="11.4563%" y="4837" width="84.3244%" height="15" fill="rgb(206,201,28)" fg:x="53254370" fg:w="391980980"/><text x="11.7063%" y="4847.50">main::benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>std::io::stdio::_print (2,435,102 samples, 0.52%)</title><rect x="95.2568%" y="4821" width="0.5238%" height="15" fill="rgb(224,184,23)" fg:x="442800248" fg:w="2435102"/><text x="95.5068%" y="4831.50"></text></g><g><title>std::io::stdio::print_to (2,435,102 samples, 0.52%)</title><rect x="95.2568%" y="4805" width="0.5238%" height="15" fill="rgb(208,139,48)" fg:x="442800248" fg:w="2435102"/><text x="95.5068%" y="4815.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (2,435,102 samples, 0.52%)</title><rect x="95.2568%" y="4789" width="0.5238%" height="15" fill="rgb(208,130,10)" fg:x="442800248" fg:w="2435102"/><text x="95.5068%" y="4799.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (2,435,102 samples, 0.52%)</title><rect x="95.2568%" y="4773" width="0.5238%" height="15" fill="rgb(211,213,45)" fg:x="442800248" fg:w="2435102"/><text x="95.5068%" y="4783.50"></text></g><g><title>std::io::Write::write_fmt (2,435,102 samples, 0.52%)</title><rect x="95.2568%" y="4757" width="0.5238%" height="15" fill="rgb(235,100,30)" fg:x="442800248" fg:w="2435102"/><text x="95.5068%" y="4767.50"></text></g><g><title>core::fmt::write (2,435,102 samples, 0.52%)</title><rect x="95.2568%" y="4741" width="0.5238%" height="15" fill="rgb(206,144,31)" fg:x="442800248" fg:w="2435102"/><text x="95.5068%" y="4751.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2,435,102 samples, 0.52%)</title><rect x="95.2568%" y="4725" width="0.5238%" height="15" fill="rgb(224,200,26)" fg:x="442800248" fg:w="2435102"/><text x="95.5068%" y="4735.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (2,435,102 samples, 0.52%)</title><rect x="95.2568%" y="4709" width="0.5238%" height="15" fill="rgb(247,104,53)" fg:x="442800248" fg:w="2435102"/><text x="95.5068%" y="4719.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (2,435,102 samples, 0.52%)</title><rect x="95.2568%" y="4693" width="0.5238%" height="15" fill="rgb(220,14,17)" fg:x="442800248" fg:w="2435102"/><text x="95.5068%" y="4703.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (2,435,102 samples, 0.52%)</title><rect x="95.2568%" y="4677" width="0.5238%" height="15" fill="rgb(230,140,40)" fg:x="442800248" fg:w="2435102"/><text x="95.5068%" y="4687.50"></text></g><g><title>core::slice::memchr::memrchr (1,239,693 samples, 0.27%)</title><rect x="95.5140%" y="4661" width="0.2667%" height="15" fill="rgb(229,2,41)" fg:x="443995657" fg:w="1239693"/><text x="95.7640%" y="4671.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,239,693 samples, 0.27%)</title><rect x="95.5140%" y="4645" width="0.2667%" height="15" fill="rgb(232,89,16)" fg:x="443995657" fg:w="1239693"/><text x="95.7640%" y="4655.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,239,693 samples, 0.27%)</title><rect x="95.5140%" y="4629" width="0.2667%" height="15" fill="rgb(247,59,52)" fg:x="443995657" fg:w="1239693"/><text x="95.7640%" y="4639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,239,693 samples, 0.27%)</title><rect x="95.5140%" y="4613" width="0.2667%" height="15" fill="rgb(226,110,21)" fg:x="443995657" fg:w="1239693"/><text x="95.7640%" y="4623.50"></text></g><g><title>_start (397,467,443 samples, 85.50%)</title><rect x="10.3839%" y="5109" width="85.5046%" height="15" fill="rgb(224,176,43)" fg:x="48269411" fg:w="397467443"/><text x="10.6339%" y="5119.50">_start</text></g><g><title>__libc_start_main (397,467,443 samples, 85.50%)</title><rect x="10.3839%" y="5093" width="85.5046%" height="15" fill="rgb(221,73,6)" fg:x="48269411" fg:w="397467443"/><text x="10.6339%" y="5103.50">__libc_start_main</text></g><g><title>[libc.so.6] (397,467,443 samples, 85.50%)</title><rect x="10.3839%" y="5077" width="85.5046%" height="15" fill="rgb(232,78,19)" fg:x="48269411" fg:w="397467443"/><text x="10.6339%" y="5087.50">[libc.so.6]</text></g><g><title>main (397,467,443 samples, 85.50%)</title><rect x="10.3839%" y="5061" width="85.5046%" height="15" fill="rgb(233,112,48)" fg:x="48269411" fg:w="397467443"/><text x="10.6339%" y="5071.50">main</text></g><g><title>std::rt::lang_start_internal (397,467,443 samples, 85.50%)</title><rect x="10.3839%" y="5045" width="85.5046%" height="15" fill="rgb(243,131,47)" fg:x="48269411" fg:w="397467443"/><text x="10.6339%" y="5055.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (397,467,443 samples, 85.50%)</title><rect x="10.3839%" y="5029" width="85.5046%" height="15" fill="rgb(226,51,1)" fg:x="48269411" fg:w="397467443"/><text x="10.6339%" y="5039.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (397,467,443 samples, 85.50%)</title><rect x="10.3839%" y="5013" width="85.5046%" height="15" fill="rgb(247,58,7)" fg:x="48269411" fg:w="397467443"/><text x="10.6339%" y="5023.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (397,467,443 samples, 85.50%)</title><rect x="10.3839%" y="4997" width="85.5046%" height="15" fill="rgb(209,7,32)" fg:x="48269411" fg:w="397467443"/><text x="10.6339%" y="5007.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (397,467,443 samples, 85.50%)</title><rect x="10.3839%" y="4981" width="85.5046%" height="15" fill="rgb(209,39,41)" fg:x="48269411" fg:w="397467443"/><text x="10.6339%" y="4991.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::rt::init (501,504 samples, 0.11%)</title><rect x="95.7806%" y="4965" width="0.1079%" height="15" fill="rgb(226,182,46)" fg:x="445235350" fg:w="501504"/><text x="96.0306%" y="4975.50"></text></g><g><title>std::sys::pal::unix::init (501,504 samples, 0.11%)</title><rect x="95.7806%" y="4949" width="0.1079%" height="15" fill="rgb(230,219,10)" fg:x="445235350" fg:w="501504"/><text x="96.0306%" y="4959.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::init (501,504 samples, 0.11%)</title><rect x="95.7806%" y="4933" width="0.1079%" height="15" fill="rgb(227,175,30)" fg:x="445235350" fg:w="501504"/><text x="96.0306%" y="4943.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard (501,504 samples, 0.11%)</title><rect x="95.7806%" y="4917" width="0.1079%" height="15" fill="rgb(217,2,50)" fg:x="445235350" fg:w="501504"/><text x="96.0306%" y="4927.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard_linux (501,504 samples, 0.11%)</title><rect x="95.7806%" y="4901" width="0.1079%" height="15" fill="rgb(229,160,0)" fg:x="445235350" fg:w="501504"/><text x="96.0306%" y="4911.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::stack_start_aligned (501,504 samples, 0.11%)</title><rect x="95.7806%" y="4885" width="0.1079%" height="15" fill="rgb(207,78,37)" fg:x="445235350" fg:w="501504"/><text x="96.0306%" y="4895.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack_start (501,504 samples, 0.11%)</title><rect x="95.7806%" y="4869" width="0.1079%" height="15" fill="rgb(225,57,0)" fg:x="445235350" fg:w="501504"/><text x="96.0306%" y="4879.50"></text></g><g><title>pthread_getattr_np (501,504 samples, 0.11%)</title><rect x="95.7806%" y="4853" width="0.1079%" height="15" fill="rgb(232,154,2)" fg:x="445235350" fg:w="501504"/><text x="96.0306%" y="4863.50"></text></g><g><title>pthread_attr_setaffinity_np (501,504 samples, 0.11%)</title><rect x="95.7806%" y="4837" width="0.1079%" height="15" fill="rgb(241,212,25)" fg:x="445235350" fg:w="501504"/><text x="96.0306%" y="4847.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.11%)</title><rect x="95.7806%" y="4821" width="0.1079%" height="15" fill="rgb(226,69,20)" fg:x="445235350" fg:w="501504"/><text x="96.0306%" y="4831.50"></text></g><g><title>__libc_calloc (501,504 samples, 0.11%)</title><rect x="95.7806%" y="4805" width="0.1079%" height="15" fill="rgb(247,184,54)" fg:x="445235350" fg:w="501504"/><text x="96.0306%" y="4815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (924,406 samples, 0.20%)</title><rect x="95.8885%" y="5109" width="0.1989%" height="15" fill="rgb(210,145,0)" fg:x="445736854" fg:w="924406"/><text x="96.1385%" y="5119.50"></text></g><g><title>cfree (2,333,774 samples, 0.50%)</title><rect x="96.0874%" y="5109" width="0.5020%" height="15" fill="rgb(253,82,12)" fg:x="446661260" fg:w="2333774"/><text x="96.3374%" y="5119.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,431,310 samples, 0.52%)</title><rect x="96.5894%" y="5109" width="0.5230%" height="15" fill="rgb(245,42,11)" fg:x="448995034" fg:w="2431310"/><text x="96.8394%" y="5119.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,431,310 samples, 0.52%)</title><rect x="96.5894%" y="5093" width="0.5230%" height="15" fill="rgb(219,147,32)" fg:x="448995034" fg:w="2431310"/><text x="96.8394%" y="5103.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2,431,310 samples, 0.52%)</title><rect x="96.5894%" y="5077" width="0.5230%" height="15" fill="rgb(246,12,7)" fg:x="448995034" fg:w="2431310"/><text x="96.8394%" y="5087.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (2,431,310 samples, 0.52%)</title><rect x="96.5894%" y="5061" width="0.5230%" height="15" fill="rgb(243,50,9)" fg:x="448995034" fg:w="2431310"/><text x="96.8394%" y="5071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2,431,310 samples, 0.52%)</title><rect x="96.5894%" y="5045" width="0.5230%" height="15" fill="rgb(219,149,6)" fg:x="448995034" fg:w="2431310"/><text x="96.8394%" y="5055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2,431,310 samples, 0.52%)</title><rect x="96.5894%" y="5029" width="0.5230%" height="15" fill="rgb(241,51,42)" fg:x="448995034" fg:w="2431310"/><text x="96.8394%" y="5039.50"></text></g><g><title>core::hash::Hasher::write_u8 (1,219,850 samples, 0.26%)</title><rect x="96.8500%" y="5013" width="0.2624%" height="15" fill="rgb(226,128,27)" fg:x="450206494" fg:w="1219850"/><text x="97.1000%" y="5023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,161,207 samples, 0.25%)</title><rect x="97.1125%" y="5109" width="0.2498%" height="15" fill="rgb(244,144,4)" fg:x="451426344" fg:w="1161207"/><text x="97.3625%" y="5119.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,215,322 samples, 0.26%)</title><rect x="97.3623%" y="5109" width="0.2614%" height="15" fill="rgb(221,4,13)" fg:x="452587551" fg:w="1215322"/><text x="97.6123%" y="5119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,215,322 samples, 0.26%)</title><rect x="97.3623%" y="5093" width="0.2614%" height="15" fill="rgb(208,170,28)" fg:x="452587551" fg:w="1215322"/><text x="97.6123%" y="5103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,215,322 samples, 0.26%)</title><rect x="97.3623%" y="5077" width="0.2614%" height="15" fill="rgb(226,131,13)" fg:x="452587551" fg:w="1215322"/><text x="97.6123%" y="5087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,215,322 samples, 0.26%)</title><rect x="97.3623%" y="5061" width="0.2614%" height="15" fill="rgb(215,72,41)" fg:x="452587551" fg:w="1215322"/><text x="97.6123%" y="5071.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,215,322 samples, 0.26%)</title><rect x="97.3623%" y="5045" width="0.2614%" height="15" fill="rgb(243,108,20)" fg:x="452587551" fg:w="1215322"/><text x="97.6123%" y="5055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,215,322 samples, 0.26%)</title><rect x="97.3623%" y="5029" width="0.2614%" height="15" fill="rgb(230,189,17)" fg:x="452587551" fg:w="1215322"/><text x="97.6123%" y="5039.50"></text></g><g><title>alloc::alloc::dealloc (1,215,322 samples, 0.26%)</title><rect x="97.3623%" y="5013" width="0.2614%" height="15" fill="rgb(220,50,17)" fg:x="452587551" fg:w="1215322"/><text x="97.6123%" y="5023.50"></text></g><g><title>css_bitvector_compiler::BitVector::is_bit_set (2,288,033 samples, 0.49%)</title><rect x="97.6237%" y="5109" width="0.4922%" height="15" fill="rgb(248,152,48)" fg:x="453802873" fg:w="2288033"/><text x="97.8737%" y="5119.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,181,335 samples, 0.25%)</title><rect x="98.1159%" y="5109" width="0.2541%" height="15" fill="rgb(244,91,11)" fg:x="456090906" fg:w="1181335"/><text x="98.3659%" y="5119.50"></text></g><g><title>main::benchmark::node_has_class_id (3,136,240 samples, 0.67%)</title><rect x="98.3701%" y="5109" width="0.6747%" height="15" fill="rgb(220,157,5)" fg:x="457272241" fg:w="3136240"/><text x="98.6201%" y="5119.50"></text></g><g><title>main::benchmark::process_tree_recursive_from_scratch (1,086,670 samples, 0.23%)</title><rect x="99.0447%" y="5109" width="0.2338%" height="15" fill="rgb(253,137,8)" fg:x="460408481" fg:w="1086670"/><text x="99.2947%" y="5119.50"></text></g><g><title>malloc (1,246,760 samples, 0.27%)</title><rect x="99.2785%" y="5109" width="0.2682%" height="15" fill="rgb(217,137,51)" fg:x="461495151" fg:w="1246760"/><text x="99.5285%" y="5119.50"></text></g><g><title>all (464,849,014 samples, 100%)</title><rect x="0.0000%" y="5141" width="100.0000%" height="15" fill="rgb(218,209,53)" fg:x="0" fg:w="464849014"/><text x="0.2500%" y="5151.50"></text></g><g><title>main (464,849,014 samples, 100.00%)</title><rect x="0.0000%" y="5125" width="100.0000%" height="15" fill="rgb(249,137,25)" fg:x="0" fg:w="464849014"/><text x="0.2500%" y="5135.50">main</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,107,103 samples, 0.45%)</title><rect x="99.5467%" y="5109" width="0.4533%" height="15" fill="rgb(239,155,26)" fg:x="462741911" fg:w="2107103"/><text x="99.7967%" y="5119.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,315,614 samples, 0.28%)</title><rect x="99.7170%" y="5093" width="0.2830%" height="15" fill="rgb(227,85,46)" fg:x="463533400" fg:w="1315614"/><text x="99.9670%" y="5103.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (938,710 samples, 0.20%)</title><rect x="99.7981%" y="5077" width="0.2019%" height="15" fill="rgb(251,107,43)" fg:x="463910304" fg:w="938710"/><text x="100.0481%" y="5087.50"></text></g><g><title>serde::de::SeqAccess::next_element (938,710 samples, 0.20%)</title><rect x="99.7981%" y="5061" width="0.2019%" height="15" fill="rgb(234,170,33)" fg:x="463910304" fg:w="938710"/><text x="100.0481%" y="5071.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (938,710 samples, 0.20%)</title><rect x="99.7981%" y="5045" width="0.2019%" height="15" fill="rgb(206,29,35)" fg:x="463910304" fg:w="938710"/><text x="100.0481%" y="5055.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (938,710 samples, 0.20%)</title><rect x="99.7981%" y="5029" width="0.2019%" height="15" fill="rgb(227,138,25)" fg:x="463910304" fg:w="938710"/><text x="100.0481%" y="5039.50"></text></g></svg></svg>