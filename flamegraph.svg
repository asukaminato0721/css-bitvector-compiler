<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2326" onload="init(evt)" viewBox="0 0 1200 2326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2326" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2309.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2309.00"> </text><svg id="frames" x="10" width="1180" total_samples="331558849"><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,195,294 samples, 0.36%)</title><rect x="0.0000%" y="2245" width="0.3605%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1195294"/><text x="0.2500%" y="2255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,389,206 samples, 0.72%)</title><rect x="0.3605%" y="2245" width="0.7206%" height="15" fill="rgb(217,0,24)" fg:x="1195294" fg:w="2389206"/><text x="0.6105%" y="2255.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,285,141 samples, 0.39%)</title><rect x="1.0811%" y="2245" width="0.3876%" height="15" fill="rgb(221,193,54)" fg:x="3584500" fg:w="1285141"/><text x="1.3311%" y="2255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,103,385 samples, 0.33%)</title><rect x="1.4687%" y="2245" width="0.3328%" height="15" fill="rgb(248,212,6)" fg:x="4869641" fg:w="1103385"/><text x="1.7187%" y="2255.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,103,385 samples, 0.33%)</title><rect x="1.4687%" y="2229" width="0.3328%" height="15" fill="rgb(208,68,35)" fg:x="4869641" fg:w="1103385"/><text x="1.7187%" y="2239.50"></text></g><g><title>[libc.so.6] (1,973,334 samples, 0.60%)</title><rect x="1.8015%" y="2245" width="0.5952%" height="15" fill="rgb(232,128,0)" fg:x="5973026" fg:w="1973334"/><text x="2.0515%" y="2255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,035,568 samples, 0.31%)</title><rect x="3.0389%" y="2229" width="0.3123%" height="15" fill="rgb(207,160,47)" fg:x="10075881" fg:w="1035568"/><text x="3.2889%" y="2239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,300,806 samples, 0.39%)</title><rect x="3.3513%" y="2229" width="0.3923%" height="15" fill="rgb(228,23,34)" fg:x="11111449" fg:w="1300806"/><text x="3.6013%" y="2239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,756,009 samples, 1.13%)</title><rect x="3.7436%" y="2229" width="1.1328%" height="15" fill="rgb(218,30,26)" fg:x="12412255" fg:w="3756009"/><text x="3.9936%" y="2239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,512,887 samples, 0.76%)</title><rect x="4.1185%" y="2213" width="0.7579%" height="15" fill="rgb(220,122,19)" fg:x="13655377" fg:w="2512887"/><text x="4.3685%" y="2223.50"></text></g><g><title>alloc::slice::hack::to_vec (2,512,887 samples, 0.76%)</title><rect x="4.1185%" y="2197" width="0.7579%" height="15" fill="rgb(250,228,42)" fg:x="13655377" fg:w="2512887"/><text x="4.3685%" y="2207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,512,887 samples, 0.76%)</title><rect x="4.1185%" y="2181" width="0.7579%" height="15" fill="rgb(240,193,28)" fg:x="13655377" fg:w="2512887"/><text x="4.3685%" y="2191.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (2,512,887 samples, 0.76%)</title><rect x="4.1185%" y="2165" width="0.7579%" height="15" fill="rgb(216,20,37)" fg:x="13655377" fg:w="2512887"/><text x="4.3685%" y="2175.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,256,103 samples, 0.38%)</title><rect x="4.4976%" y="2149" width="0.3788%" height="15" fill="rgb(206,188,39)" fg:x="14912161" fg:w="1256103"/><text x="4.7476%" y="2159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,256,103 samples, 0.38%)</title><rect x="4.4976%" y="2133" width="0.3788%" height="15" fill="rgb(217,207,13)" fg:x="14912161" fg:w="1256103"/><text x="4.7476%" y="2143.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,256,103 samples, 0.38%)</title><rect x="4.4976%" y="2117" width="0.3788%" height="15" fill="rgb(231,73,38)" fg:x="14912161" fg:w="1256103"/><text x="4.7476%" y="2127.50"></text></g><g><title>alloc::slice::hack::to_vec (1,256,103 samples, 0.38%)</title><rect x="4.4976%" y="2101" width="0.3788%" height="15" fill="rgb(225,20,46)" fg:x="14912161" fg:w="1256103"/><text x="4.7476%" y="2111.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,256,103 samples, 0.38%)</title><rect x="4.4976%" y="2085" width="0.3788%" height="15" fill="rgb(210,31,41)" fg:x="14912161" fg:w="1256103"/><text x="4.7476%" y="2095.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,256,103 samples, 0.38%)</title><rect x="4.4976%" y="2069" width="0.3788%" height="15" fill="rgb(221,200,47)" fg:x="14912161" fg:w="1256103"/><text x="4.7476%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,256,103 samples, 0.38%)</title><rect x="4.4976%" y="2053" width="0.3788%" height="15" fill="rgb(226,26,5)" fg:x="14912161" fg:w="1256103"/><text x="4.7476%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,256,103 samples, 0.38%)</title><rect x="4.4976%" y="2037" width="0.3788%" height="15" fill="rgb(249,33,26)" fg:x="14912161" fg:w="1256103"/><text x="4.7476%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,256,103 samples, 0.38%)</title><rect x="4.4976%" y="2021" width="0.3788%" height="15" fill="rgb(235,183,28)" fg:x="14912161" fg:w="1256103"/><text x="4.7476%" y="2031.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,256,103 samples, 0.38%)</title><rect x="4.4976%" y="2005" width="0.3788%" height="15" fill="rgb(221,5,38)" fg:x="14912161" fg:w="1256103"/><text x="4.7476%" y="2015.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,256,103 samples, 0.38%)</title><rect x="4.4976%" y="1989" width="0.3788%" height="15" fill="rgb(247,18,42)" fg:x="14912161" fg:w="1256103"/><text x="4.7476%" y="1999.50"></text></g><g><title>alloc::alloc::alloc (1,256,103 samples, 0.38%)</title><rect x="4.4976%" y="1973" width="0.3788%" height="15" fill="rgb(241,131,45)" fg:x="14912161" fg:w="1256103"/><text x="4.7476%" y="1983.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,262,284 samples, 0.38%)</title><rect x="4.8764%" y="2229" width="0.3807%" height="15" fill="rgb(249,31,29)" fg:x="16168264" fg:w="1262284"/><text x="5.1264%" y="2239.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,262,284 samples, 0.38%)</title><rect x="4.8764%" y="2213" width="0.3807%" height="15" fill="rgb(225,111,53)" fg:x="16168264" fg:w="1262284"/><text x="5.1264%" y="2223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,262,284 samples, 0.38%)</title><rect x="4.8764%" y="2197" width="0.3807%" height="15" fill="rgb(238,160,17)" fg:x="16168264" fg:w="1262284"/><text x="5.1264%" y="2207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1,262,284 samples, 0.38%)</title><rect x="4.8764%" y="2181" width="0.3807%" height="15" fill="rgb(214,148,48)" fg:x="16168264" fg:w="1262284"/><text x="5.1264%" y="2191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,262,284 samples, 0.38%)</title><rect x="4.8764%" y="2165" width="0.3807%" height="15" fill="rgb(232,36,49)" fg:x="16168264" fg:w="1262284"/><text x="5.1264%" y="2175.50"></text></g><g><title>[unknown] (1,276,170 samples, 0.38%)</title><rect x="5.2572%" y="2229" width="0.3849%" height="15" fill="rgb(209,103,24)" fg:x="17430548" fg:w="1276170"/><text x="5.5072%" y="2239.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::new (1,276,170 samples, 0.38%)</title><rect x="5.2572%" y="2213" width="0.3849%" height="15" fill="rgb(229,88,8)" fg:x="17430548" fg:w="1276170"/><text x="5.5072%" y="2223.50"></text></g><g><title>benchmark::clear_dirty_flags (1,122,590 samples, 0.34%)</title><rect x="5.6421%" y="2229" width="0.3386%" height="15" fill="rgb(213,181,19)" fg:x="18706718" fg:w="1122590"/><text x="5.8921%" y="2239.50"></text></g><g><title>cfree (1,102,190 samples, 0.33%)</title><rect x="5.9806%" y="2229" width="0.3324%" height="15" fill="rgb(254,191,54)" fg:x="19829308" fg:w="1102190"/><text x="6.2306%" y="2239.50"></text></g><g><title>[unknown] (14,227,786 samples, 4.29%)</title><rect x="2.3967%" y="2245" width="4.2912%" height="15" fill="rgb(241,83,37)" fg:x="7946360" fg:w="14227786"/><text x="2.6467%" y="2255.50">[unkn..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,242,648 samples, 0.37%)</title><rect x="6.3131%" y="2229" width="0.3748%" height="15" fill="rgb(233,36,39)" fg:x="20931498" fg:w="1242648"/><text x="6.5631%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,242,648 samples, 0.37%)</title><rect x="6.3131%" y="2213" width="0.3748%" height="15" fill="rgb(226,3,54)" fg:x="20931498" fg:w="1242648"/><text x="6.5631%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,242,648 samples, 0.37%)</title><rect x="6.3131%" y="2197" width="0.3748%" height="15" fill="rgb(245,192,40)" fg:x="20931498" fg:w="1242648"/><text x="6.5631%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,242,648 samples, 0.37%)</title><rect x="6.3131%" y="2181" width="0.3748%" height="15" fill="rgb(238,167,29)" fg:x="20931498" fg:w="1242648"/><text x="6.5631%" y="2191.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,242,648 samples, 0.37%)</title><rect x="6.3131%" y="2165" width="0.3748%" height="15" fill="rgb(232,182,51)" fg:x="20931498" fg:w="1242648"/><text x="6.5631%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,242,648 samples, 0.37%)</title><rect x="6.3131%" y="2149" width="0.3748%" height="15" fill="rgb(231,60,39)" fg:x="20931498" fg:w="1242648"/><text x="6.5631%" y="2159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,242,648 samples, 0.37%)</title><rect x="6.3131%" y="2133" width="0.3748%" height="15" fill="rgb(208,69,12)" fg:x="20931498" fg:w="1242648"/><text x="6.5631%" y="2143.50"></text></g><g><title>alloc::alloc::dealloc (1,242,648 samples, 0.37%)</title><rect x="6.3131%" y="2117" width="0.3748%" height="15" fill="rgb(235,93,37)" fg:x="20931498" fg:w="1242648"/><text x="6.5631%" y="2127.50"></text></g><g><title>__rdl_dealloc (1,244,699 samples, 0.38%)</title><rect x="6.6878%" y="2245" width="0.3754%" height="15" fill="rgb(213,116,39)" fg:x="22174146" fg:w="1244699"/><text x="6.9378%" y="2255.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,244,699 samples, 0.38%)</title><rect x="6.6878%" y="2229" width="0.3754%" height="15" fill="rgb(222,207,29)" fg:x="22174146" fg:w="1244699"/><text x="6.9378%" y="2239.50"></text></g><g><title>__rdl_alloc (1,209,411 samples, 0.36%)</title><rect x="7.0633%" y="1045" width="0.3648%" height="15" fill="rgb(206,96,30)" fg:x="23418845" fg:w="1209411"/><text x="7.3133%" y="1055.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,209,411 samples, 0.36%)</title><rect x="7.0633%" y="1029" width="0.3648%" height="15" fill="rgb(218,138,4)" fg:x="23418845" fg:w="1209411"/><text x="7.3133%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,437,954 samples, 1.04%)</title><rect x="7.0633%" y="1237" width="1.0369%" height="15" fill="rgb(250,191,14)" fg:x="23418845" fg:w="3437954"/><text x="7.3133%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,437,954 samples, 1.04%)</title><rect x="7.0633%" y="1221" width="1.0369%" height="15" fill="rgb(239,60,40)" fg:x="23418845" fg:w="3437954"/><text x="7.3133%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,437,954 samples, 1.04%)</title><rect x="7.0633%" y="1205" width="1.0369%" height="15" fill="rgb(206,27,48)" fg:x="23418845" fg:w="3437954"/><text x="7.3133%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (3,437,954 samples, 1.04%)</title><rect x="7.0633%" y="1189" width="1.0369%" height="15" fill="rgb(225,35,8)" fg:x="23418845" fg:w="3437954"/><text x="7.3133%" y="1199.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,437,954 samples, 1.04%)</title><rect x="7.0633%" y="1173" width="1.0369%" height="15" fill="rgb(250,213,24)" fg:x="23418845" fg:w="3437954"/><text x="7.3133%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,437,954 samples, 1.04%)</title><rect x="7.0633%" y="1157" width="1.0369%" height="15" fill="rgb(247,123,22)" fg:x="23418845" fg:w="3437954"/><text x="7.3133%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,437,954 samples, 1.04%)</title><rect x="7.0633%" y="1141" width="1.0369%" height="15" fill="rgb(231,138,38)" fg:x="23418845" fg:w="3437954"/><text x="7.3133%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,437,954 samples, 1.04%)</title><rect x="7.0633%" y="1125" width="1.0369%" height="15" fill="rgb(231,145,46)" fg:x="23418845" fg:w="3437954"/><text x="7.3133%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,437,954 samples, 1.04%)</title><rect x="7.0633%" y="1109" width="1.0369%" height="15" fill="rgb(251,118,11)" fg:x="23418845" fg:w="3437954"/><text x="7.3133%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,437,954 samples, 1.04%)</title><rect x="7.0633%" y="1093" width="1.0369%" height="15" fill="rgb(217,147,25)" fg:x="23418845" fg:w="3437954"/><text x="7.3133%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,437,954 samples, 1.04%)</title><rect x="7.0633%" y="1077" width="1.0369%" height="15" fill="rgb(247,81,37)" fg:x="23418845" fg:w="3437954"/><text x="7.3133%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (3,437,954 samples, 1.04%)</title><rect x="7.0633%" y="1061" width="1.0369%" height="15" fill="rgb(209,12,38)" fg:x="23418845" fg:w="3437954"/><text x="7.3133%" y="1071.50"></text></g><g><title>malloc (2,228,543 samples, 0.67%)</title><rect x="7.4280%" y="1045" width="0.6721%" height="15" fill="rgb(227,1,9)" fg:x="24628256" fg:w="2228543"/><text x="7.6780%" y="1055.50"></text></g><g><title>[libc.so.6] (1,162,196 samples, 0.35%)</title><rect x="7.7496%" y="1029" width="0.3505%" height="15" fill="rgb(248,47,43)" fg:x="25694603" fg:w="1162196"/><text x="7.9996%" y="1039.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,680,068 samples, 1.41%)</title><rect x="7.0633%" y="1301" width="1.4115%" height="15" fill="rgb(221,10,30)" fg:x="23418845" fg:w="4680068"/><text x="7.3133%" y="1311.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (4,680,068 samples, 1.41%)</title><rect x="7.0633%" y="1285" width="1.4115%" height="15" fill="rgb(210,229,1)" fg:x="23418845" fg:w="4680068"/><text x="7.3133%" y="1295.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (4,680,068 samples, 1.41%)</title><rect x="7.0633%" y="1269" width="1.4115%" height="15" fill="rgb(222,148,37)" fg:x="23418845" fg:w="4680068"/><text x="7.3133%" y="1279.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4,680,068 samples, 1.41%)</title><rect x="7.0633%" y="1253" width="1.4115%" height="15" fill="rgb(234,67,33)" fg:x="23418845" fg:w="4680068"/><text x="7.3133%" y="1263.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="1237" width="0.3746%" height="15" fill="rgb(247,98,35)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="1221" width="0.3746%" height="15" fill="rgb(247,138,52)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="1205" width="0.3746%" height="15" fill="rgb(213,79,30)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="1189" width="0.3746%" height="15" fill="rgb(246,177,23)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="1199.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="1173" width="0.3746%" height="15" fill="rgb(230,62,27)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="1183.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="1157" width="0.3746%" height="15" fill="rgb(216,154,8)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="1167.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="1141" width="0.3746%" height="15" fill="rgb(244,35,45)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="1125" width="0.3746%" height="15" fill="rgb(251,115,12)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="1109" width="0.3746%" height="15" fill="rgb(240,54,50)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="1119.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="1093" width="0.3746%" height="15" fill="rgb(233,84,52)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="1077" width="0.3746%" height="15" fill="rgb(207,117,47)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="1061" width="0.3746%" height="15" fill="rgb(249,43,39)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="1045" width="0.3746%" height="15" fill="rgb(209,38,44)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="1029" width="0.3746%" height="15" fill="rgb(236,212,23)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="1039.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="1013" width="0.3746%" height="15" fill="rgb(242,79,21)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="1023.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="997" width="0.3746%" height="15" fill="rgb(211,96,35)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="981" width="0.3746%" height="15" fill="rgb(253,215,40)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="965" width="0.3746%" height="15" fill="rgb(211,81,21)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="975.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="949" width="0.3746%" height="15" fill="rgb(208,190,38)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="933" width="0.3746%" height="15" fill="rgb(235,213,38)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="917" width="0.3746%" height="15" fill="rgb(237,122,38)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="901" width="0.3746%" height="15" fill="rgb(244,218,35)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="885" width="0.3746%" height="15" fill="rgb(240,68,47)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="895.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="869" width="0.3746%" height="15" fill="rgb(210,16,53)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="879.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="853" width="0.3746%" height="15" fill="rgb(235,124,12)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="837" width="0.3746%" height="15" fill="rgb(224,169,11)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="847.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="821" width="0.3746%" height="15" fill="rgb(250,166,2)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="831.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="805" width="0.3746%" height="15" fill="rgb(242,216,29)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="789" width="0.3746%" height="15" fill="rgb(230,116,27)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="773" width="0.3746%" height="15" fill="rgb(228,99,48)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="757" width="0.3746%" height="15" fill="rgb(253,11,6)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="741" width="0.3746%" height="15" fill="rgb(247,143,39)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="751.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="725" width="0.3746%" height="15" fill="rgb(236,97,10)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="735.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="709" width="0.3746%" height="15" fill="rgb(233,208,19)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="693" width="0.3746%" height="15" fill="rgb(216,164,2)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="677" width="0.3746%" height="15" fill="rgb(220,129,5)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="687.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="661" width="0.3746%" height="15" fill="rgb(242,17,10)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="645" width="0.3746%" height="15" fill="rgb(242,107,0)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="629" width="0.3746%" height="15" fill="rgb(251,28,31)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="613" width="0.3746%" height="15" fill="rgb(233,223,10)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="597" width="0.3746%" height="15" fill="rgb(215,21,27)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="581" width="0.3746%" height="15" fill="rgb(232,23,21)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="591.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="565" width="0.3746%" height="15" fill="rgb(244,5,23)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="549" width="0.3746%" height="15" fill="rgb(226,81,46)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="533" width="0.3746%" height="15" fill="rgb(247,70,30)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="517" width="0.3746%" height="15" fill="rgb(212,68,19)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="501" width="0.3746%" height="15" fill="rgb(240,187,13)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="485" width="0.3746%" height="15" fill="rgb(223,113,26)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="469" width="0.3746%" height="15" fill="rgb(206,192,2)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="453" width="0.3746%" height="15" fill="rgb(241,108,4)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="463.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="437" width="0.3746%" height="15" fill="rgb(247,173,49)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="447.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="421" width="0.3746%" height="15" fill="rgb(224,114,35)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="405" width="0.3746%" height="15" fill="rgb(245,159,27)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="389" width="0.3746%" height="15" fill="rgb(245,172,44)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="373" width="0.3746%" height="15" fill="rgb(236,23,11)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="357" width="0.3746%" height="15" fill="rgb(205,117,38)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="341" width="0.3746%" height="15" fill="rgb(237,72,25)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="325" width="0.3746%" height="15" fill="rgb(244,70,9)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="309" width="0.3746%" height="15" fill="rgb(217,125,39)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="293" width="0.3746%" height="15" fill="rgb(235,36,10)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="277" width="0.3746%" height="15" fill="rgb(251,123,47)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="261" width="0.3746%" height="15" fill="rgb(221,13,13)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="245" width="0.3746%" height="15" fill="rgb(238,131,9)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="229" width="0.3746%" height="15" fill="rgb(211,50,8)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="213" width="0.3746%" height="15" fill="rgb(245,182,24)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="197" width="0.3746%" height="15" fill="rgb(242,14,37)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="207.50"></text></g><g><title>malloc (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="181" width="0.3746%" height="15" fill="rgb(246,228,12)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="191.50"></text></g><g><title>[libc.so.6] (1,242,114 samples, 0.37%)</title><rect x="8.1002%" y="165" width="0.3746%" height="15" fill="rgb(213,55,15)" fg:x="26856799" fg:w="1242114"/><text x="8.3502%" y="175.50"></text></g><g><title>&lt;benchmark::LayoutFrame as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1957" width="1.6848%" height="15" fill="rgb(209,9,3)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1967.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1941" width="1.6848%" height="15" fill="rgb(230,59,30)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1951.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1925" width="1.6848%" height="15" fill="rgb(209,121,21)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1935.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1909" width="1.6848%" height="15" fill="rgb(220,109,13)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1919.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1893" width="1.6848%" height="15" fill="rgb(232,18,1)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1903.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1877" width="1.6848%" height="15" fill="rgb(215,41,42)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1887.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1861" width="1.6848%" height="15" fill="rgb(224,123,36)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1845" width="1.6848%" height="15" fill="rgb(240,125,3)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1855.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1829" width="1.6848%" height="15" fill="rgb(205,98,50)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1839.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1813" width="1.6848%" height="15" fill="rgb(205,185,37)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1797" width="1.6848%" height="15" fill="rgb(238,207,15)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1807.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1781" width="1.6848%" height="15" fill="rgb(213,199,42)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1791.50"></text></g><g><title>alloc::slice::hack::to_vec (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1765" width="1.6848%" height="15" fill="rgb(235,201,11)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1775.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1749" width="1.6848%" height="15" fill="rgb(207,46,11)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1759.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1733" width="1.6848%" height="15" fill="rgb(241,35,35)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1743.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1717" width="1.6848%" height="15" fill="rgb(243,32,47)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1727.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1701" width="1.6848%" height="15" fill="rgb(247,202,23)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1711.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1685" width="1.6848%" height="15" fill="rgb(219,102,11)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1695.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1669" width="1.6848%" height="15" fill="rgb(243,110,44)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1653" width="1.6848%" height="15" fill="rgb(222,74,54)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1663.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1637" width="1.6848%" height="15" fill="rgb(216,99,12)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1647.50"></text></g><g><title>alloc::slice::hack::to_vec (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1621" width="1.6848%" height="15" fill="rgb(226,22,26)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1631.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1605" width="1.6848%" height="15" fill="rgb(217,163,10)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1615.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1589" width="1.6848%" height="15" fill="rgb(213,25,53)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1599.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1573" width="1.6848%" height="15" fill="rgb(252,105,26)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1583.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1557" width="1.6848%" height="15" fill="rgb(220,39,43)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1567.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1541" width="1.6848%" height="15" fill="rgb(229,68,48)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1551.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1525" width="1.6848%" height="15" fill="rgb(252,8,32)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1509" width="1.6848%" height="15" fill="rgb(223,20,43)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1519.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1493" width="1.6848%" height="15" fill="rgb(229,81,49)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1503.50"></text></g><g><title>alloc::slice::hack::to_vec (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1477" width="1.6848%" height="15" fill="rgb(236,28,36)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1487.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1461" width="1.6848%" height="15" fill="rgb(249,185,26)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1471.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1445" width="1.6848%" height="15" fill="rgb(249,174,33)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1455.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1429" width="1.6848%" height="15" fill="rgb(233,201,37)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1439.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1413" width="1.6848%" height="15" fill="rgb(221,78,26)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1423.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1397" width="1.6848%" height="15" fill="rgb(250,127,30)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1407.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1381" width="1.6848%" height="15" fill="rgb(230,49,44)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1365" width="1.6848%" height="15" fill="rgb(229,67,23)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1375.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1349" width="1.6848%" height="15" fill="rgb(249,83,47)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1359.50"></text></g><g><title>alloc::slice::hack::to_vec (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1333" width="1.6848%" height="15" fill="rgb(215,43,3)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1343.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,586,079 samples, 1.68%)</title><rect x="7.0633%" y="1317" width="1.6848%" height="15" fill="rgb(238,154,13)" fg:x="23418845" fg:w="5586079"/><text x="7.3133%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (906,011 samples, 0.27%)</title><rect x="8.4748%" y="1301" width="0.2733%" height="15" fill="rgb(219,56,2)" fg:x="28098913" fg:w="906011"/><text x="8.7248%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (906,011 samples, 0.27%)</title><rect x="8.4748%" y="1285" width="0.2733%" height="15" fill="rgb(233,0,4)" fg:x="28098913" fg:w="906011"/><text x="8.7248%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (906,011 samples, 0.27%)</title><rect x="8.4748%" y="1269" width="0.2733%" height="15" fill="rgb(235,30,7)" fg:x="28098913" fg:w="906011"/><text x="8.7248%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (906,011 samples, 0.27%)</title><rect x="8.4748%" y="1253" width="0.2733%" height="15" fill="rgb(250,79,13)" fg:x="28098913" fg:w="906011"/><text x="8.7248%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (906,011 samples, 0.27%)</title><rect x="8.4748%" y="1237" width="0.2733%" height="15" fill="rgb(211,146,34)" fg:x="28098913" fg:w="906011"/><text x="8.7248%" y="1247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (906,011 samples, 0.27%)</title><rect x="8.4748%" y="1221" width="0.2733%" height="15" fill="rgb(228,22,38)" fg:x="28098913" fg:w="906011"/><text x="8.7248%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (906,011 samples, 0.27%)</title><rect x="8.4748%" y="1205" width="0.2733%" height="15" fill="rgb(235,168,5)" fg:x="28098913" fg:w="906011"/><text x="8.7248%" y="1215.50"></text></g><g><title>malloc (906,011 samples, 0.27%)</title><rect x="8.4748%" y="1189" width="0.2733%" height="15" fill="rgb(221,155,16)" fg:x="28098913" fg:w="906011"/><text x="8.7248%" y="1199.50"></text></g><g><title>[libc.so.6] (906,011 samples, 0.27%)</title><rect x="8.4748%" y="1173" width="0.2733%" height="15" fill="rgb(215,215,53)" fg:x="28098913" fg:w="906011"/><text x="8.7248%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,204,567 samples, 0.36%)</title><rect x="8.7480%" y="1909" width="0.3633%" height="15" fill="rgb(223,4,10)" fg:x="29004924" fg:w="1204567"/><text x="8.9980%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,204,567 samples, 0.36%)</title><rect x="8.7480%" y="1893" width="0.3633%" height="15" fill="rgb(234,103,6)" fg:x="29004924" fg:w="1204567"/><text x="8.9980%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,204,567 samples, 0.36%)</title><rect x="8.7480%" y="1877" width="0.3633%" height="15" fill="rgb(227,97,0)" fg:x="29004924" fg:w="1204567"/><text x="8.9980%" y="1887.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,204,567 samples, 0.36%)</title><rect x="8.7480%" y="1861" width="0.3633%" height="15" fill="rgb(234,150,53)" fg:x="29004924" fg:w="1204567"/><text x="8.9980%" y="1871.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,043,532 samples, 0.31%)</title><rect x="9.1114%" y="661" width="0.3147%" height="15" fill="rgb(228,201,54)" fg:x="30209491" fg:w="1043532"/><text x="9.3614%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (1,043,532 samples, 0.31%)</title><rect x="9.1114%" y="645" width="0.3147%" height="15" fill="rgb(222,22,37)" fg:x="30209491" fg:w="1043532"/><text x="9.3614%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (1,043,532 samples, 0.31%)</title><rect x="9.1114%" y="629" width="0.3147%" height="15" fill="rgb(237,53,32)" fg:x="30209491" fg:w="1043532"/><text x="9.3614%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1,043,532 samples, 0.31%)</title><rect x="9.1114%" y="613" width="0.3147%" height="15" fill="rgb(233,25,53)" fg:x="30209491" fg:w="1043532"/><text x="9.3614%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,043,532 samples, 0.31%)</title><rect x="9.1114%" y="597" width="0.3147%" height="15" fill="rgb(210,40,34)" fg:x="30209491" fg:w="1043532"/><text x="9.3614%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (1,043,532 samples, 0.31%)</title><rect x="9.1114%" y="581" width="0.3147%" height="15" fill="rgb(241,220,44)" fg:x="30209491" fg:w="1043532"/><text x="9.3614%" y="591.50"></text></g><g><title>cfree (1,043,532 samples, 0.31%)</title><rect x="9.1114%" y="565" width="0.3147%" height="15" fill="rgb(235,28,35)" fg:x="30209491" fg:w="1043532"/><text x="9.3614%" y="575.50"></text></g><g><title>[libc.so.6] (1,043,532 samples, 0.31%)</title><rect x="9.1114%" y="549" width="0.3147%" height="15" fill="rgb(210,56,17)" fg:x="30209491" fg:w="1043532"/><text x="9.3614%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,177,839 samples, 0.66%)</title><rect x="9.1114%" y="821" width="0.6568%" height="15" fill="rgb(224,130,29)" fg:x="30209491" fg:w="2177839"/><text x="9.3614%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,177,839 samples, 0.66%)</title><rect x="9.1114%" y="805" width="0.6568%" height="15" fill="rgb(235,212,8)" fg:x="30209491" fg:w="2177839"/><text x="9.3614%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,177,839 samples, 0.66%)</title><rect x="9.1114%" y="789" width="0.6568%" height="15" fill="rgb(223,33,50)" fg:x="30209491" fg:w="2177839"/><text x="9.3614%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,177,839 samples, 0.66%)</title><rect x="9.1114%" y="773" width="0.6568%" height="15" fill="rgb(219,149,13)" fg:x="30209491" fg:w="2177839"/><text x="9.3614%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,177,839 samples, 0.66%)</title><rect x="9.1114%" y="757" width="0.6568%" height="15" fill="rgb(250,156,29)" fg:x="30209491" fg:w="2177839"/><text x="9.3614%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,177,839 samples, 0.66%)</title><rect x="9.1114%" y="741" width="0.6568%" height="15" fill="rgb(216,193,19)" fg:x="30209491" fg:w="2177839"/><text x="9.3614%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,177,839 samples, 0.66%)</title><rect x="9.1114%" y="725" width="0.6568%" height="15" fill="rgb(216,135,14)" fg:x="30209491" fg:w="2177839"/><text x="9.3614%" y="735.50"></text></g><g><title>core::mem::drop (2,177,839 samples, 0.66%)</title><rect x="9.1114%" y="709" width="0.6568%" height="15" fill="rgb(241,47,5)" fg:x="30209491" fg:w="2177839"/><text x="9.3614%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,177,839 samples, 0.66%)</title><rect x="9.1114%" y="693" width="0.6568%" height="15" fill="rgb(233,42,35)" fg:x="30209491" fg:w="2177839"/><text x="9.3614%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,177,839 samples, 0.66%)</title><rect x="9.1114%" y="677" width="0.6568%" height="15" fill="rgb(231,13,6)" fg:x="30209491" fg:w="2177839"/><text x="9.3614%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="661" width="0.3421%" height="15" fill="rgb(207,181,40)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="645" width="0.3421%" height="15" fill="rgb(254,173,49)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="629" width="0.3421%" height="15" fill="rgb(221,1,38)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="639.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="613" width="0.3421%" height="15" fill="rgb(206,124,46)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="597" width="0.3421%" height="15" fill="rgb(249,21,11)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="581" width="0.3421%" height="15" fill="rgb(222,201,40)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="565" width="0.3421%" height="15" fill="rgb(235,61,29)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="549" width="0.3421%" height="15" fill="rgb(219,207,3)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="533" width="0.3421%" height="15" fill="rgb(222,56,46)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="517" width="0.3421%" height="15" fill="rgb(239,76,54)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="501" width="0.3421%" height="15" fill="rgb(231,124,27)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="485" width="0.3421%" height="15" fill="rgb(249,195,6)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="495.50"></text></g><g><title>core::mem::drop (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="469" width="0.3421%" height="15" fill="rgb(237,174,47)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="453" width="0.3421%" height="15" fill="rgb(206,201,31)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="437" width="0.3421%" height="15" fill="rgb(231,57,52)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="421" width="0.3421%" height="15" fill="rgb(248,177,22)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="405" width="0.3421%" height="15" fill="rgb(215,211,37)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="389" width="0.3421%" height="15" fill="rgb(241,128,51)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="399.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="373" width="0.3421%" height="15" fill="rgb(227,165,31)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="357" width="0.3421%" height="15" fill="rgb(228,167,24)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="341" width="0.3421%" height="15" fill="rgb(228,143,12)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="325" width="0.3421%" height="15" fill="rgb(249,149,8)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="309" width="0.3421%" height="15" fill="rgb(243,35,44)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="319.50"></text></g><g><title>core::mem::drop (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="293" width="0.3421%" height="15" fill="rgb(246,89,9)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="277" width="0.3421%" height="15" fill="rgb(233,213,13)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="261" width="0.3421%" height="15" fill="rgb(233,141,41)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="245" width="0.3421%" height="15" fill="rgb(239,167,4)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="255.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="229" width="0.3421%" height="15" fill="rgb(209,217,16)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="239.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="213" width="0.3421%" height="15" fill="rgb(219,88,35)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="223.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="197" width="0.3421%" height="15" fill="rgb(220,193,23)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="181" width="0.3421%" height="15" fill="rgb(230,90,52)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="165" width="0.3421%" height="15" fill="rgb(252,106,19)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="175.50"></text></g><g><title>cfree (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="149" width="0.3421%" height="15" fill="rgb(206,74,20)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="159.50"></text></g><g><title>[libc.so.6] (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="133" width="0.3421%" height="15" fill="rgb(230,138,44)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="143.50"></text></g><g><title>[libc.so.6] (1,134,307 samples, 0.34%)</title><rect x="9.4261%" y="117" width="0.3421%" height="15" fill="rgb(235,182,43)" fg:x="31253023" fg:w="1134307"/><text x="9.6761%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,378,081 samples, 1.02%)</title><rect x="9.1114%" y="1061" width="1.0188%" height="15" fill="rgb(242,16,51)" fg:x="30209491" fg:w="3378081"/><text x="9.3614%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,378,081 samples, 1.02%)</title><rect x="9.1114%" y="1045" width="1.0188%" height="15" fill="rgb(248,9,4)" fg:x="30209491" fg:w="3378081"/><text x="9.3614%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,378,081 samples, 1.02%)</title><rect x="9.1114%" y="1029" width="1.0188%" height="15" fill="rgb(210,31,22)" fg:x="30209491" fg:w="3378081"/><text x="9.3614%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,378,081 samples, 1.02%)</title><rect x="9.1114%" y="1013" width="1.0188%" height="15" fill="rgb(239,54,39)" fg:x="30209491" fg:w="3378081"/><text x="9.3614%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,378,081 samples, 1.02%)</title><rect x="9.1114%" y="997" width="1.0188%" height="15" fill="rgb(230,99,41)" fg:x="30209491" fg:w="3378081"/><text x="9.3614%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,378,081 samples, 1.02%)</title><rect x="9.1114%" y="981" width="1.0188%" height="15" fill="rgb(253,106,12)" fg:x="30209491" fg:w="3378081"/><text x="9.3614%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,378,081 samples, 1.02%)</title><rect x="9.1114%" y="965" width="1.0188%" height="15" fill="rgb(213,46,41)" fg:x="30209491" fg:w="3378081"/><text x="9.3614%" y="975.50"></text></g><g><title>core::mem::drop (3,378,081 samples, 1.02%)</title><rect x="9.1114%" y="949" width="1.0188%" height="15" fill="rgb(215,133,35)" fg:x="30209491" fg:w="3378081"/><text x="9.3614%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,378,081 samples, 1.02%)</title><rect x="9.1114%" y="933" width="1.0188%" height="15" fill="rgb(213,28,5)" fg:x="30209491" fg:w="3378081"/><text x="9.3614%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,378,081 samples, 1.02%)</title><rect x="9.1114%" y="917" width="1.0188%" height="15" fill="rgb(215,77,49)" fg:x="30209491" fg:w="3378081"/><text x="9.3614%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,378,081 samples, 1.02%)</title><rect x="9.1114%" y="901" width="1.0188%" height="15" fill="rgb(248,100,22)" fg:x="30209491" fg:w="3378081"/><text x="9.3614%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,378,081 samples, 1.02%)</title><rect x="9.1114%" y="885" width="1.0188%" height="15" fill="rgb(208,67,9)" fg:x="30209491" fg:w="3378081"/><text x="9.3614%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,378,081 samples, 1.02%)</title><rect x="9.1114%" y="869" width="1.0188%" height="15" fill="rgb(219,133,21)" fg:x="30209491" fg:w="3378081"/><text x="9.3614%" y="879.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,378,081 samples, 1.02%)</title><rect x="9.1114%" y="853" width="1.0188%" height="15" fill="rgb(246,46,29)" fg:x="30209491" fg:w="3378081"/><text x="9.3614%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,378,081 samples, 1.02%)</title><rect x="9.1114%" y="837" width="1.0188%" height="15" fill="rgb(246,185,52)" fg:x="30209491" fg:w="3378081"/><text x="9.3614%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,200,242 samples, 0.36%)</title><rect x="9.7682%" y="821" width="0.3620%" height="15" fill="rgb(252,136,11)" fg:x="32387330" fg:w="1200242"/><text x="10.0182%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,200,242 samples, 0.36%)</title><rect x="9.7682%" y="805" width="0.3620%" height="15" fill="rgb(219,138,53)" fg:x="32387330" fg:w="1200242"/><text x="10.0182%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,200,242 samples, 0.36%)</title><rect x="9.7682%" y="789" width="0.3620%" height="15" fill="rgb(211,51,23)" fg:x="32387330" fg:w="1200242"/><text x="10.0182%" y="799.50"></text></g><g><title>core::mem::drop (1,200,242 samples, 0.36%)</title><rect x="9.7682%" y="773" width="0.3620%" height="15" fill="rgb(247,221,28)" fg:x="32387330" fg:w="1200242"/><text x="10.0182%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,200,242 samples, 0.36%)</title><rect x="9.7682%" y="757" width="0.3620%" height="15" fill="rgb(251,222,45)" fg:x="32387330" fg:w="1200242"/><text x="10.0182%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,200,242 samples, 0.36%)</title><rect x="9.7682%" y="741" width="0.3620%" height="15" fill="rgb(217,162,53)" fg:x="32387330" fg:w="1200242"/><text x="10.0182%" y="751.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,200,242 samples, 0.36%)</title><rect x="9.7682%" y="725" width="0.3620%" height="15" fill="rgb(229,93,14)" fg:x="32387330" fg:w="1200242"/><text x="10.0182%" y="735.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,200,242 samples, 0.36%)</title><rect x="9.7682%" y="709" width="0.3620%" height="15" fill="rgb(209,67,49)" fg:x="32387330" fg:w="1200242"/><text x="10.0182%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,200,242 samples, 0.36%)</title><rect x="9.7682%" y="693" width="0.3620%" height="15" fill="rgb(213,87,29)" fg:x="32387330" fg:w="1200242"/><text x="10.0182%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,200,242 samples, 0.36%)</title><rect x="9.7682%" y="677" width="0.3620%" height="15" fill="rgb(205,151,52)" fg:x="32387330" fg:w="1200242"/><text x="10.0182%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,200,242 samples, 0.36%)</title><rect x="9.7682%" y="661" width="0.3620%" height="15" fill="rgb(253,215,39)" fg:x="32387330" fg:w="1200242"/><text x="10.0182%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,200,242 samples, 0.36%)</title><rect x="9.7682%" y="645" width="0.3620%" height="15" fill="rgb(221,220,41)" fg:x="32387330" fg:w="1200242"/><text x="10.0182%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,200,242 samples, 0.36%)</title><rect x="9.7682%" y="629" width="0.3620%" height="15" fill="rgb(218,133,21)" fg:x="32387330" fg:w="1200242"/><text x="10.0182%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,200,242 samples, 0.36%)</title><rect x="9.7682%" y="613" width="0.3620%" height="15" fill="rgb(221,193,43)" fg:x="32387330" fg:w="1200242"/><text x="10.0182%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (1,200,242 samples, 0.36%)</title><rect x="9.7682%" y="597" width="0.3620%" height="15" fill="rgb(240,128,52)" fg:x="32387330" fg:w="1200242"/><text x="10.0182%" y="607.50"></text></g><g><title>cfree (1,200,242 samples, 0.36%)</title><rect x="9.7682%" y="581" width="0.3620%" height="15" fill="rgb(253,114,12)" fg:x="32387330" fg:w="1200242"/><text x="10.0182%" y="591.50"></text></g><g><title>[libc.so.6] (1,200,242 samples, 0.36%)</title><rect x="9.7682%" y="565" width="0.3620%" height="15" fill="rgb(215,223,47)" fg:x="32387330" fg:w="1200242"/><text x="10.0182%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (5,843,935 samples, 1.76%)</title><rect x="8.7480%" y="1957" width="1.7626%" height="15" fill="rgb(248,225,23)" fg:x="29004924" fg:w="5843935"/><text x="8.9980%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (5,843,935 samples, 1.76%)</title><rect x="8.7480%" y="1941" width="1.7626%" height="15" fill="rgb(250,108,0)" fg:x="29004924" fg:w="5843935"/><text x="8.9980%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (5,843,935 samples, 1.76%)</title><rect x="8.7480%" y="1925" width="1.7626%" height="15" fill="rgb(228,208,7)" fg:x="29004924" fg:w="5843935"/><text x="8.9980%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1909" width="1.3993%" height="15" fill="rgb(244,45,10)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1893" width="1.3993%" height="15" fill="rgb(207,125,25)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1877" width="1.3993%" height="15" fill="rgb(210,195,18)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1887.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1861" width="1.3993%" height="15" fill="rgb(249,80,12)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1871.50"></text></g><g><title>core::mem::drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1845" width="1.3993%" height="15" fill="rgb(221,65,9)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1829" width="1.3993%" height="15" fill="rgb(235,49,36)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1839.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1813" width="1.3993%" height="15" fill="rgb(225,32,20)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1823.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1797" width="1.3993%" height="15" fill="rgb(215,141,46)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1781" width="1.3993%" height="15" fill="rgb(250,160,47)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1791.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1765" width="1.3993%" height="15" fill="rgb(216,222,40)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1775.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1749" width="1.3993%" height="15" fill="rgb(234,217,39)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1733" width="1.3993%" height="15" fill="rgb(207,178,40)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1717" width="1.3993%" height="15" fill="rgb(221,136,13)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1701" width="1.3993%" height="15" fill="rgb(249,199,10)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1711.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1685" width="1.3993%" height="15" fill="rgb(249,222,13)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1695.50"></text></g><g><title>core::mem::drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1669" width="1.3993%" height="15" fill="rgb(244,185,38)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1653" width="1.3993%" height="15" fill="rgb(236,202,9)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1663.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1637" width="1.3993%" height="15" fill="rgb(250,229,37)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1647.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1621" width="1.3993%" height="15" fill="rgb(206,174,23)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1605" width="1.3993%" height="15" fill="rgb(211,33,43)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1589" width="1.3993%" height="15" fill="rgb(245,58,50)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1599.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1573" width="1.3993%" height="15" fill="rgb(244,68,36)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1557" width="1.3993%" height="15" fill="rgb(232,229,15)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1541" width="1.3993%" height="15" fill="rgb(254,30,23)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1525" width="1.3993%" height="15" fill="rgb(235,160,14)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1509" width="1.3993%" height="15" fill="rgb(212,155,44)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1493" width="1.3993%" height="15" fill="rgb(226,2,50)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1477" width="1.3993%" height="15" fill="rgb(234,177,6)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1461" width="1.3993%" height="15" fill="rgb(217,24,9)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1471.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1445" width="1.3993%" height="15" fill="rgb(220,13,46)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1455.50"></text></g><g><title>core::mem::drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1429" width="1.3993%" height="15" fill="rgb(239,221,27)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1413" width="1.3993%" height="15" fill="rgb(222,198,25)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1423.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1397" width="1.3993%" height="15" fill="rgb(211,99,13)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1407.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1381" width="1.3993%" height="15" fill="rgb(232,111,31)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1365" width="1.3993%" height="15" fill="rgb(245,82,37)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1375.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1349" width="1.3993%" height="15" fill="rgb(227,149,46)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1359.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1333" width="1.3993%" height="15" fill="rgb(218,36,50)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1317" width="1.3993%" height="15" fill="rgb(226,80,48)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1301" width="1.3993%" height="15" fill="rgb(238,224,15)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1285" width="1.3993%" height="15" fill="rgb(241,136,10)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1269" width="1.3993%" height="15" fill="rgb(208,32,45)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1253" width="1.3993%" height="15" fill="rgb(207,135,9)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1237" width="1.3993%" height="15" fill="rgb(206,86,44)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1221" width="1.3993%" height="15" fill="rgb(245,177,15)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1231.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1205" width="1.3993%" height="15" fill="rgb(206,64,50)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1215.50"></text></g><g><title>core::mem::drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1189" width="1.3993%" height="15" fill="rgb(234,36,40)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1173" width="1.3993%" height="15" fill="rgb(213,64,8)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1157" width="1.3993%" height="15" fill="rgb(210,75,36)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1167.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1141" width="1.3993%" height="15" fill="rgb(229,88,21)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1125" width="1.3993%" height="15" fill="rgb(252,204,47)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1109" width="1.3993%" height="15" fill="rgb(208,77,27)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1119.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1093" width="1.3993%" height="15" fill="rgb(221,76,26)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,639,368 samples, 1.40%)</title><rect x="9.1114%" y="1077" width="1.3993%" height="15" fill="rgb(225,139,18)" fg:x="30209491" fg:w="4639368"/><text x="9.3614%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,261,287 samples, 0.38%)</title><rect x="10.1302%" y="1061" width="0.3804%" height="15" fill="rgb(230,137,11)" fg:x="33587572" fg:w="1261287"/><text x="10.3802%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,261,287 samples, 0.38%)</title><rect x="10.1302%" y="1045" width="0.3804%" height="15" fill="rgb(212,28,1)" fg:x="33587572" fg:w="1261287"/><text x="10.3802%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,261,287 samples, 0.38%)</title><rect x="10.1302%" y="1029" width="0.3804%" height="15" fill="rgb(248,164,17)" fg:x="33587572" fg:w="1261287"/><text x="10.3802%" y="1039.50"></text></g><g><title>core::mem::drop (1,261,287 samples, 0.38%)</title><rect x="10.1302%" y="1013" width="0.3804%" height="15" fill="rgb(222,171,42)" fg:x="33587572" fg:w="1261287"/><text x="10.3802%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,261,287 samples, 0.38%)</title><rect x="10.1302%" y="997" width="0.3804%" height="15" fill="rgb(243,84,45)" fg:x="33587572" fg:w="1261287"/><text x="10.3802%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,261,287 samples, 0.38%)</title><rect x="10.1302%" y="981" width="0.3804%" height="15" fill="rgb(252,49,23)" fg:x="33587572" fg:w="1261287"/><text x="10.3802%" y="991.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,261,287 samples, 0.38%)</title><rect x="10.1302%" y="965" width="0.3804%" height="15" fill="rgb(215,19,7)" fg:x="33587572" fg:w="1261287"/><text x="10.3802%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (1,261,287 samples, 0.38%)</title><rect x="10.1302%" y="949" width="0.3804%" height="15" fill="rgb(238,81,41)" fg:x="33587572" fg:w="1261287"/><text x="10.3802%" y="959.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (1,261,287 samples, 0.38%)</title><rect x="10.1302%" y="933" width="0.3804%" height="15" fill="rgb(210,199,37)" fg:x="33587572" fg:w="1261287"/><text x="10.3802%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1,261,287 samples, 0.38%)</title><rect x="10.1302%" y="917" width="0.3804%" height="15" fill="rgb(244,192,49)" fg:x="33587572" fg:w="1261287"/><text x="10.3802%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,261,287 samples, 0.38%)</title><rect x="10.1302%" y="901" width="0.3804%" height="15" fill="rgb(226,211,11)" fg:x="33587572" fg:w="1261287"/><text x="10.3802%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (1,261,287 samples, 0.38%)</title><rect x="10.1302%" y="885" width="0.3804%" height="15" fill="rgb(236,162,54)" fg:x="33587572" fg:w="1261287"/><text x="10.3802%" y="895.50"></text></g><g><title>cfree (1,261,287 samples, 0.38%)</title><rect x="10.1302%" y="869" width="0.3804%" height="15" fill="rgb(220,229,9)" fg:x="33587572" fg:w="1261287"/><text x="10.3802%" y="879.50"></text></g><g><title>[libc.so.6] (1,261,287 samples, 0.38%)</title><rect x="10.1302%" y="853" width="0.3804%" height="15" fill="rgb(250,87,22)" fg:x="33587572" fg:w="1261287"/><text x="10.3802%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,516,705 samples, 0.76%)</title><rect x="10.5106%" y="1925" width="0.7591%" height="15" fill="rgb(239,43,17)" fg:x="34848859" fg:w="2516705"/><text x="10.7606%" y="1935.50"></text></g><g><title>benchmark::extract_path_from_command::_{{closure}} (2,516,705 samples, 0.76%)</title><rect x="10.5106%" y="1909" width="0.7591%" height="15" fill="rgb(231,177,25)" fg:x="34848859" fg:w="2516705"/><text x="10.7606%" y="1919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,516,705 samples, 0.76%)</title><rect x="10.5106%" y="1893" width="0.7591%" height="15" fill="rgb(219,179,1)" fg:x="34848859" fg:w="2516705"/><text x="10.7606%" y="1903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,516,705 samples, 0.76%)</title><rect x="10.5106%" y="1877" width="0.7591%" height="15" fill="rgb(238,219,53)" fg:x="34848859" fg:w="2516705"/><text x="10.7606%" y="1887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,516,705 samples, 0.76%)</title><rect x="10.5106%" y="1861" width="0.7591%" height="15" fill="rgb(232,167,36)" fg:x="34848859" fg:w="2516705"/><text x="10.7606%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,516,705 samples, 0.76%)</title><rect x="10.5106%" y="1845" width="0.7591%" height="15" fill="rgb(244,19,51)" fg:x="34848859" fg:w="2516705"/><text x="10.7606%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,516,705 samples, 0.76%)</title><rect x="10.5106%" y="1829" width="0.7591%" height="15" fill="rgb(224,6,22)" fg:x="34848859" fg:w="2516705"/><text x="10.7606%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2,516,705 samples, 0.76%)</title><rect x="10.5106%" y="1813" width="0.7591%" height="15" fill="rgb(224,145,5)" fg:x="34848859" fg:w="2516705"/><text x="10.7606%" y="1823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,259,589 samples, 0.38%)</title><rect x="10.8898%" y="1797" width="0.3799%" height="15" fill="rgb(234,130,49)" fg:x="36105975" fg:w="1259589"/><text x="11.1398%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,259,589 samples, 0.38%)</title><rect x="10.8898%" y="1781" width="0.3799%" height="15" fill="rgb(254,6,2)" fg:x="36105975" fg:w="1259589"/><text x="11.1398%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,259,589 samples, 0.38%)</title><rect x="10.8898%" y="1765" width="0.3799%" height="15" fill="rgb(208,96,46)" fg:x="36105975" fg:w="1259589"/><text x="11.1398%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,259,589 samples, 0.38%)</title><rect x="10.8898%" y="1749" width="0.3799%" height="15" fill="rgb(239,3,39)" fg:x="36105975" fg:w="1259589"/><text x="11.1398%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,259,589 samples, 0.38%)</title><rect x="10.8898%" y="1733" width="0.3799%" height="15" fill="rgb(233,210,1)" fg:x="36105975" fg:w="1259589"/><text x="11.1398%" y="1743.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,259,589 samples, 0.38%)</title><rect x="10.8898%" y="1717" width="0.3799%" height="15" fill="rgb(244,137,37)" fg:x="36105975" fg:w="1259589"/><text x="11.1398%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,259,589 samples, 0.38%)</title><rect x="10.8898%" y="1701" width="0.3799%" height="15" fill="rgb(240,136,2)" fg:x="36105975" fg:w="1259589"/><text x="11.1398%" y="1711.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,259,589 samples, 0.38%)</title><rect x="10.8898%" y="1685" width="0.3799%" height="15" fill="rgb(239,18,37)" fg:x="36105975" fg:w="1259589"/><text x="11.1398%" y="1695.50"></text></g><g><title>alloc::alloc::realloc (1,259,589 samples, 0.38%)</title><rect x="10.8898%" y="1669" width="0.3799%" height="15" fill="rgb(218,185,22)" fg:x="36105975" fg:w="1259589"/><text x="11.1398%" y="1679.50"></text></g><g><title>realloc (1,259,589 samples, 0.38%)</title><rect x="10.8898%" y="1653" width="0.3799%" height="15" fill="rgb(225,218,4)" fg:x="36105975" fg:w="1259589"/><text x="11.1398%" y="1663.50"></text></g><g><title>[libc.so.6] (1,259,589 samples, 0.38%)</title><rect x="10.8898%" y="1637" width="0.3799%" height="15" fill="rgb(230,182,32)" fg:x="36105975" fg:w="1259589"/><text x="11.1398%" y="1647.50"></text></g><g><title>[libc.so.6] (1,259,589 samples, 0.38%)</title><rect x="10.8898%" y="1621" width="0.3799%" height="15" fill="rgb(242,56,43)" fg:x="36105975" fg:w="1259589"/><text x="11.1398%" y="1631.50"></text></g><g><title>benchmark::extract_path_from_command (3,781,328 samples, 1.14%)</title><rect x="10.5106%" y="1941" width="1.1405%" height="15" fill="rgb(233,99,24)" fg:x="34848859" fg:w="3781328"/><text x="10.7606%" y="1951.50"></text></g><g><title>serde_json::value::Value::get (1,264,623 samples, 0.38%)</title><rect x="11.2697%" y="1925" width="0.3814%" height="15" fill="rgb(234,209,42)" fg:x="37365564" fg:w="1264623"/><text x="11.5197%" y="1935.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,264,623 samples, 0.38%)</title><rect x="11.2697%" y="1909" width="0.3814%" height="15" fill="rgb(227,7,12)" fg:x="37365564" fg:w="1264623"/><text x="11.5197%" y="1919.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,264,623 samples, 0.38%)</title><rect x="11.2697%" y="1893" width="0.3814%" height="15" fill="rgb(245,203,43)" fg:x="37365564" fg:w="1264623"/><text x="11.5197%" y="1903.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,264,623 samples, 0.38%)</title><rect x="11.2697%" y="1877" width="0.3814%" height="15" fill="rgb(238,205,33)" fg:x="37365564" fg:w="1264623"/><text x="11.5197%" y="1887.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,264,623 samples, 0.38%)</title><rect x="11.2697%" y="1861" width="0.3814%" height="15" fill="rgb(231,56,7)" fg:x="37365564" fg:w="1264623"/><text x="11.5197%" y="1871.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,264,623 samples, 0.38%)</title><rect x="11.2697%" y="1845" width="0.3814%" height="15" fill="rgb(244,186,29)" fg:x="37365564" fg:w="1264623"/><text x="11.5197%" y="1855.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,264,623 samples, 0.38%)</title><rect x="11.2697%" y="1829" width="0.3814%" height="15" fill="rgb(234,111,31)" fg:x="37365564" fg:w="1264623"/><text x="11.5197%" y="1839.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,264,623 samples, 0.38%)</title><rect x="11.2697%" y="1813" width="0.3814%" height="15" fill="rgb(241,149,10)" fg:x="37365564" fg:w="1264623"/><text x="11.5197%" y="1823.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,264,623 samples, 0.38%)</title><rect x="11.2697%" y="1797" width="0.3814%" height="15" fill="rgb(249,206,44)" fg:x="37365564" fg:w="1264623"/><text x="11.5197%" y="1807.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,264,623 samples, 0.38%)</title><rect x="11.2697%" y="1781" width="0.3814%" height="15" fill="rgb(251,153,30)" fg:x="37365564" fg:w="1264623"/><text x="11.5197%" y="1791.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,264,623 samples, 0.38%)</title><rect x="11.2697%" y="1765" width="0.3814%" height="15" fill="rgb(239,152,38)" fg:x="37365564" fg:w="1264623"/><text x="11.5197%" y="1775.50"></text></g><g><title>[libc.so.6] (1,264,623 samples, 0.38%)</title><rect x="11.2697%" y="1749" width="0.3814%" height="15" fill="rgb(249,139,47)" fg:x="37365564" fg:w="1264623"/><text x="11.5197%" y="1759.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,229,160 samples, 0.37%)</title><rect x="11.6511%" y="1925" width="0.3707%" height="15" fill="rgb(244,64,35)" fg:x="38630187" fg:w="1229160"/><text x="11.9011%" y="1935.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (1,229,160 samples, 0.37%)</title><rect x="11.6511%" y="1909" width="0.3707%" height="15" fill="rgb(216,46,15)" fg:x="38630187" fg:w="1229160"/><text x="11.9011%" y="1919.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,229,160 samples, 0.37%)</title><rect x="11.6511%" y="1893" width="0.3707%" height="15" fill="rgb(250,74,19)" fg:x="38630187" fg:w="1229160"/><text x="11.9011%" y="1903.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,229,160 samples, 0.37%)</title><rect x="11.6511%" y="1877" width="0.3707%" height="15" fill="rgb(249,42,33)" fg:x="38630187" fg:w="1229160"/><text x="11.9011%" y="1887.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,229,160 samples, 0.37%)</title><rect x="11.6511%" y="1861" width="0.3707%" height="15" fill="rgb(242,149,17)" fg:x="38630187" fg:w="1229160"/><text x="11.9011%" y="1871.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,229,160 samples, 0.37%)</title><rect x="11.6511%" y="1845" width="0.3707%" height="15" fill="rgb(244,29,21)" fg:x="38630187" fg:w="1229160"/><text x="11.9011%" y="1855.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,229,160 samples, 0.37%)</title><rect x="11.6511%" y="1829" width="0.3707%" height="15" fill="rgb(220,130,37)" fg:x="38630187" fg:w="1229160"/><text x="11.9011%" y="1839.50"></text></g><g><title>alloc::slice::hack::to_vec (1,229,160 samples, 0.37%)</title><rect x="11.6511%" y="1813" width="0.3707%" height="15" fill="rgb(211,67,2)" fg:x="38630187" fg:w="1229160"/><text x="11.9011%" y="1823.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,229,160 samples, 0.37%)</title><rect x="11.6511%" y="1797" width="0.3707%" height="15" fill="rgb(235,68,52)" fg:x="38630187" fg:w="1229160"/><text x="11.9011%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,229,160 samples, 0.37%)</title><rect x="11.6511%" y="1781" width="0.3707%" height="15" fill="rgb(246,142,3)" fg:x="38630187" fg:w="1229160"/><text x="11.9011%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,229,160 samples, 0.37%)</title><rect x="11.6511%" y="1765" width="0.3707%" height="15" fill="rgb(241,25,7)" fg:x="38630187" fg:w="1229160"/><text x="11.9011%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,229,160 samples, 0.37%)</title><rect x="11.6511%" y="1749" width="0.3707%" height="15" fill="rgb(242,119,39)" fg:x="38630187" fg:w="1229160"/><text x="11.9011%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,229,160 samples, 0.37%)</title><rect x="11.6511%" y="1733" width="0.3707%" height="15" fill="rgb(241,98,45)" fg:x="38630187" fg:w="1229160"/><text x="11.9011%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,229,160 samples, 0.37%)</title><rect x="11.6511%" y="1717" width="0.3707%" height="15" fill="rgb(254,28,30)" fg:x="38630187" fg:w="1229160"/><text x="11.9011%" y="1727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,229,160 samples, 0.37%)</title><rect x="11.6511%" y="1701" width="0.3707%" height="15" fill="rgb(241,142,54)" fg:x="38630187" fg:w="1229160"/><text x="11.9011%" y="1711.50"></text></g><g><title>alloc::alloc::alloc (1,229,160 samples, 0.37%)</title><rect x="11.6511%" y="1685" width="0.3707%" height="15" fill="rgb(222,85,15)" fg:x="38630187" fg:w="1229160"/><text x="11.9011%" y="1695.50"></text></g><g><title>malloc (1,229,160 samples, 0.37%)</title><rect x="11.6511%" y="1669" width="0.3707%" height="15" fill="rgb(210,85,47)" fg:x="38630187" fg:w="1229160"/><text x="11.9011%" y="1679.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,486,898 samples, 1.05%)</title><rect x="12.0218%" y="1925" width="1.0517%" height="15" fill="rgb(224,206,25)" fg:x="39859347" fg:w="3486898"/><text x="12.2718%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3,486,898 samples, 1.05%)</title><rect x="12.0218%" y="1909" width="1.0517%" height="15" fill="rgb(243,201,19)" fg:x="39859347" fg:w="3486898"/><text x="12.2718%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (3,486,898 samples, 1.05%)</title><rect x="12.0218%" y="1893" width="1.0517%" height="15" fill="rgb(236,59,4)" fg:x="39859347" fg:w="3486898"/><text x="12.2718%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,486,898 samples, 1.05%)</title><rect x="12.0218%" y="1877" width="1.0517%" height="15" fill="rgb(254,179,45)" fg:x="39859347" fg:w="3486898"/><text x="12.2718%" y="1887.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,486,898 samples, 1.05%)</title><rect x="12.0218%" y="1861" width="1.0517%" height="15" fill="rgb(226,14,10)" fg:x="39859347" fg:w="3486898"/><text x="12.2718%" y="1871.50"></text></g><g><title>malloc (3,486,898 samples, 1.05%)</title><rect x="12.0218%" y="1845" width="1.0517%" height="15" fill="rgb(244,27,41)" fg:x="39859347" fg:w="3486898"/><text x="12.2718%" y="1855.50"></text></g><g><title>[libc.so.6] (3,486,898 samples, 1.05%)</title><rect x="12.0218%" y="1829" width="1.0517%" height="15" fill="rgb(235,35,32)" fg:x="39859347" fg:w="3486898"/><text x="12.2718%" y="1839.50"></text></g><g><title>[libc.so.6] (2,511,530 samples, 0.76%)</title><rect x="12.3160%" y="1813" width="0.7575%" height="15" fill="rgb(218,68,31)" fg:x="40834715" fg:w="2511530"/><text x="12.5660%" y="1823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,235,024 samples, 0.37%)</title><rect x="13.0735%" y="1909" width="0.3725%" height="15" fill="rgb(207,120,37)" fg:x="43346245" fg:w="1235024"/><text x="13.3235%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,235,024 samples, 0.37%)</title><rect x="13.0735%" y="1893" width="0.3725%" height="15" fill="rgb(227,98,0)" fg:x="43346245" fg:w="1235024"/><text x="13.3235%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,235,024 samples, 0.37%)</title><rect x="13.0735%" y="1877" width="0.3725%" height="15" fill="rgb(207,7,3)" fg:x="43346245" fg:w="1235024"/><text x="13.3235%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,235,024 samples, 0.37%)</title><rect x="13.0735%" y="1861" width="0.3725%" height="15" fill="rgb(206,98,19)" fg:x="43346245" fg:w="1235024"/><text x="13.3235%" y="1871.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,235,024 samples, 0.37%)</title><rect x="13.0735%" y="1845" width="0.3725%" height="15" fill="rgb(217,5,26)" fg:x="43346245" fg:w="1235024"/><text x="13.3235%" y="1855.50"></text></g><g><title>malloc (1,235,024 samples, 0.37%)</title><rect x="13.0735%" y="1829" width="0.3725%" height="15" fill="rgb(235,190,38)" fg:x="43346245" fg:w="1235024"/><text x="13.3235%" y="1839.50"></text></g><g><title>[libc.so.6] (1,235,024 samples, 0.37%)</title><rect x="13.0735%" y="1813" width="0.3725%" height="15" fill="rgb(247,86,24)" fg:x="43346245" fg:w="1235024"/><text x="13.3235%" y="1823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,261,184 samples, 0.38%)</title><rect x="13.4460%" y="1893" width="0.3804%" height="15" fill="rgb(205,101,16)" fg:x="44581269" fg:w="1261184"/><text x="13.6960%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,261,184 samples, 0.38%)</title><rect x="13.4460%" y="1877" width="0.3804%" height="15" fill="rgb(246,168,33)" fg:x="44581269" fg:w="1261184"/><text x="13.6960%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,261,184 samples, 0.38%)</title><rect x="13.4460%" y="1861" width="0.3804%" height="15" fill="rgb(231,114,1)" fg:x="44581269" fg:w="1261184"/><text x="13.6960%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,261,184 samples, 0.38%)</title><rect x="13.4460%" y="1845" width="0.3804%" height="15" fill="rgb(207,184,53)" fg:x="44581269" fg:w="1261184"/><text x="13.6960%" y="1855.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,261,184 samples, 0.38%)</title><rect x="13.4460%" y="1829" width="0.3804%" height="15" fill="rgb(224,95,51)" fg:x="44581269" fg:w="1261184"/><text x="13.6960%" y="1839.50"></text></g><g><title>malloc (1,261,184 samples, 0.38%)</title><rect x="13.4460%" y="1813" width="0.3804%" height="15" fill="rgb(212,188,45)" fg:x="44581269" fg:w="1261184"/><text x="13.6960%" y="1823.50"></text></g><g><title>[libc.so.6] (1,261,184 samples, 0.38%)</title><rect x="13.4460%" y="1797" width="0.3804%" height="15" fill="rgb(223,154,38)" fg:x="44581269" fg:w="1261184"/><text x="13.6960%" y="1807.50"></text></g><g><title>[libc.so.6] (1,261,184 samples, 0.38%)</title><rect x="13.4460%" y="1781" width="0.3804%" height="15" fill="rgb(251,22,52)" fg:x="44581269" fg:w="1261184"/><text x="13.6960%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,205,351 samples, 0.36%)</title><rect x="13.8263%" y="1877" width="0.3635%" height="15" fill="rgb(229,209,22)" fg:x="45842453" fg:w="1205351"/><text x="14.0763%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,205,351 samples, 0.36%)</title><rect x="13.8263%" y="1861" width="0.3635%" height="15" fill="rgb(234,138,34)" fg:x="45842453" fg:w="1205351"/><text x="14.0763%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,205,351 samples, 0.36%)</title><rect x="13.8263%" y="1845" width="0.3635%" height="15" fill="rgb(212,95,11)" fg:x="45842453" fg:w="1205351"/><text x="14.0763%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,205,351 samples, 0.36%)</title><rect x="13.8263%" y="1829" width="0.3635%" height="15" fill="rgb(240,179,47)" fg:x="45842453" fg:w="1205351"/><text x="14.0763%" y="1839.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,205,351 samples, 0.36%)</title><rect x="13.8263%" y="1813" width="0.3635%" height="15" fill="rgb(240,163,11)" fg:x="45842453" fg:w="1205351"/><text x="14.0763%" y="1823.50"></text></g><g><title>malloc (1,205,351 samples, 0.36%)</title><rect x="13.8263%" y="1797" width="0.3635%" height="15" fill="rgb(236,37,12)" fg:x="45842453" fg:w="1205351"/><text x="14.0763%" y="1807.50"></text></g><g><title>[libc.so.6] (1,205,351 samples, 0.36%)</title><rect x="13.8263%" y="1781" width="0.3635%" height="15" fill="rgb(232,164,16)" fg:x="45842453" fg:w="1205351"/><text x="14.0763%" y="1791.50"></text></g><g><title>[libc.so.6] (1,205,351 samples, 0.36%)</title><rect x="13.8263%" y="1765" width="0.3635%" height="15" fill="rgb(244,205,15)" fg:x="45842453" fg:w="1205351"/><text x="14.0763%" y="1775.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (919,565 samples, 0.28%)</title><rect x="14.1899%" y="1861" width="0.2773%" height="15" fill="rgb(223,117,47)" fg:x="47047804" fg:w="919565"/><text x="14.4399%" y="1871.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (919,565 samples, 0.28%)</title><rect x="14.1899%" y="1845" width="0.2773%" height="15" fill="rgb(244,107,35)" fg:x="47047804" fg:w="919565"/><text x="14.4399%" y="1855.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (919,565 samples, 0.28%)</title><rect x="14.1899%" y="1829" width="0.2773%" height="15" fill="rgb(205,140,8)" fg:x="47047804" fg:w="919565"/><text x="14.4399%" y="1839.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (919,565 samples, 0.28%)</title><rect x="14.1899%" y="1813" width="0.2773%" height="15" fill="rgb(228,84,46)" fg:x="47047804" fg:w="919565"/><text x="14.4399%" y="1823.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (919,565 samples, 0.28%)</title><rect x="14.1899%" y="1797" width="0.2773%" height="15" fill="rgb(254,188,9)" fg:x="47047804" fg:w="919565"/><text x="14.4399%" y="1807.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (919,565 samples, 0.28%)</title><rect x="14.1899%" y="1781" width="0.2773%" height="15" fill="rgb(206,112,54)" fg:x="47047804" fg:w="919565"/><text x="14.4399%" y="1791.50"></text></g><g><title>core::slice::index::get_offset_len_noubcheck (919,565 samples, 0.28%)</title><rect x="14.1899%" y="1765" width="0.2773%" height="15" fill="rgb(216,84,49)" fg:x="47047804" fg:w="919565"/><text x="14.4399%" y="1775.50"></text></g><g><title>core::slice::index::get_noubcheck (919,565 samples, 0.28%)</title><rect x="14.1899%" y="1749" width="0.2773%" height="15" fill="rgb(214,194,35)" fg:x="47047804" fg:w="919565"/><text x="14.4399%" y="1759.50"></text></g><g><title>benchmark::json_to_html_node (1,214,463 samples, 0.37%)</title><rect x="14.4672%" y="1829" width="0.3663%" height="15" fill="rgb(249,28,3)" fg:x="47967369" fg:w="1214463"/><text x="14.7172%" y="1839.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::new (1,214,463 samples, 0.37%)</title><rect x="14.4672%" y="1813" width="0.3663%" height="15" fill="rgb(222,56,52)" fg:x="47967369" fg:w="1214463"/><text x="14.7172%" y="1823.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1,214,463 samples, 0.37%)</title><rect x="14.4672%" y="1797" width="0.3663%" height="15" fill="rgb(245,217,50)" fg:x="47967369" fg:w="1214463"/><text x="14.7172%" y="1807.50"></text></g><g><title>alloc::str::convert_while_ascii (1,214,463 samples, 0.37%)</title><rect x="14.4672%" y="1781" width="0.3663%" height="15" fill="rgb(213,201,24)" fg:x="47967369" fg:w="1214463"/><text x="14.7172%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,214,463 samples, 0.37%)</title><rect x="14.4672%" y="1765" width="0.3663%" height="15" fill="rgb(248,116,28)" fg:x="47967369" fg:w="1214463"/><text x="14.7172%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,214,463 samples, 0.37%)</title><rect x="14.4672%" y="1749" width="0.3663%" height="15" fill="rgb(219,72,43)" fg:x="47967369" fg:w="1214463"/><text x="14.7172%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,214,463 samples, 0.37%)</title><rect x="14.4672%" y="1733" width="0.3663%" height="15" fill="rgb(209,138,14)" fg:x="47967369" fg:w="1214463"/><text x="14.7172%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,214,463 samples, 0.37%)</title><rect x="14.4672%" y="1717" width="0.3663%" height="15" fill="rgb(222,18,33)" fg:x="47967369" fg:w="1214463"/><text x="14.7172%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,214,463 samples, 0.37%)</title><rect x="14.4672%" y="1701" width="0.3663%" height="15" fill="rgb(213,199,7)" fg:x="47967369" fg:w="1214463"/><text x="14.7172%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,214,463 samples, 0.37%)</title><rect x="14.4672%" y="1685" width="0.3663%" height="15" fill="rgb(250,110,10)" fg:x="47967369" fg:w="1214463"/><text x="14.7172%" y="1695.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,214,463 samples, 0.37%)</title><rect x="14.4672%" y="1669" width="0.3663%" height="15" fill="rgb(248,123,6)" fg:x="47967369" fg:w="1214463"/><text x="14.7172%" y="1679.50"></text></g><g><title>alloc::alloc::alloc (1,214,463 samples, 0.37%)</title><rect x="14.4672%" y="1653" width="0.3663%" height="15" fill="rgb(206,91,31)" fg:x="47967369" fg:w="1214463"/><text x="14.7172%" y="1663.50"></text></g><g><title>malloc (1,214,463 samples, 0.37%)</title><rect x="14.4672%" y="1637" width="0.3663%" height="15" fill="rgb(211,154,13)" fg:x="47967369" fg:w="1214463"/><text x="14.7172%" y="1647.50"></text></g><g><title>[libc.so.6] (1,214,463 samples, 0.37%)</title><rect x="14.4672%" y="1621" width="0.3663%" height="15" fill="rgb(225,148,7)" fg:x="47967369" fg:w="1214463"/><text x="14.7172%" y="1631.50"></text></g><g><title>benchmark::json_to_html_node (3,461,506 samples, 1.04%)</title><rect x="14.1899%" y="1877" width="1.0440%" height="15" fill="rgb(220,160,43)" fg:x="47047804" fg:w="3461506"/><text x="14.4399%" y="1887.50"></text></g><g><title>benchmark::json_to_html_node (2,541,941 samples, 0.77%)</title><rect x="14.4672%" y="1861" width="0.7667%" height="15" fill="rgb(213,52,39)" fg:x="47967369" fg:w="2541941"/><text x="14.7172%" y="1871.50"></text></g><g><title>benchmark::json_to_html_node (2,541,941 samples, 0.77%)</title><rect x="14.4672%" y="1845" width="0.7667%" height="15" fill="rgb(243,137,7)" fg:x="47967369" fg:w="2541941"/><text x="14.7172%" y="1855.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1829" width="0.4004%" height="15" fill="rgb(230,79,13)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1839.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1813" width="0.4004%" height="15" fill="rgb(247,105,23)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1823.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1797" width="0.4004%" height="15" fill="rgb(223,179,41)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1807.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1781" width="0.4004%" height="15" fill="rgb(218,9,34)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1791.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1765" width="0.4004%" height="15" fill="rgb(222,106,8)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1749" width="0.4004%" height="15" fill="rgb(211,220,0)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1733" width="0.4004%" height="15" fill="rgb(229,52,16)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1717" width="0.4004%" height="15" fill="rgb(212,155,18)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1701" width="0.4004%" height="15" fill="rgb(242,21,14)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1711.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1685" width="0.4004%" height="15" fill="rgb(222,19,48)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1695.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1669" width="0.4004%" height="15" fill="rgb(232,45,27)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1653" width="0.4004%" height="15" fill="rgb(249,103,42)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1663.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1637" width="0.4004%" height="15" fill="rgb(246,81,33)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1647.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1621" width="0.4004%" height="15" fill="rgb(252,33,42)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1631.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1605" width="0.4004%" height="15" fill="rgb(209,212,41)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1589" width="0.4004%" height="15" fill="rgb(207,154,6)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1599.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1573" width="0.4004%" height="15" fill="rgb(223,64,47)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1583.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1557" width="0.4004%" height="15" fill="rgb(211,161,38)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1541" width="0.4004%" height="15" fill="rgb(219,138,40)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1525" width="0.4004%" height="15" fill="rgb(241,228,46)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1509" width="0.4004%" height="15" fill="rgb(223,209,38)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1493" width="0.4004%" height="15" fill="rgb(236,164,45)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1477" width="0.4004%" height="15" fill="rgb(231,15,5)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1487.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1461" width="0.4004%" height="15" fill="rgb(252,35,15)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1471.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1445" width="0.4004%" height="15" fill="rgb(248,181,18)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1455.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1429" width="0.4004%" height="15" fill="rgb(233,39,42)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1439.50"></text></g><g><title>alloc::alloc::alloc (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1413" width="0.4004%" height="15" fill="rgb(238,110,33)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1423.50"></text></g><g><title>malloc (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1397" width="0.4004%" height="15" fill="rgb(233,195,10)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1407.50"></text></g><g><title>[libc.so.6] (1,327,478 samples, 0.40%)</title><rect x="14.8335%" y="1381" width="0.4004%" height="15" fill="rgb(254,105,3)" fg:x="49181832" fg:w="1327478"/><text x="15.0835%" y="1391.50"></text></g><g><title>benchmark::json_to_html_node (13,141,863 samples, 3.96%)</title><rect x="11.6511%" y="1941" width="3.9637%" height="15" fill="rgb(221,225,9)" fg:x="38630187" fg:w="13141863"/><text x="11.9011%" y="1951.50">benc..</text></g><g><title>benchmark::json_to_html_node (8,425,805 samples, 2.54%)</title><rect x="13.0735%" y="1925" width="2.5413%" height="15" fill="rgb(224,227,45)" fg:x="43346245" fg:w="8425805"/><text x="13.3235%" y="1935.50">be..</text></g><g><title>benchmark::json_to_html_node (7,190,781 samples, 2.17%)</title><rect x="13.4460%" y="1909" width="2.1688%" height="15" fill="rgb(229,198,43)" fg:x="44581269" fg:w="7190781"/><text x="13.6960%" y="1919.50">b..</text></g><g><title>benchmark::json_to_html_node (5,929,597 samples, 1.79%)</title><rect x="13.8263%" y="1893" width="1.7884%" height="15" fill="rgb(206,209,35)" fg:x="45842453" fg:w="5929597"/><text x="14.0763%" y="1903.50">b..</text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (1,262,740 samples, 0.38%)</title><rect x="15.2339%" y="1877" width="0.3808%" height="15" fill="rgb(245,195,53)" fg:x="50509310" fg:w="1262740"/><text x="15.4839%" y="1887.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,262,740 samples, 0.38%)</title><rect x="15.2339%" y="1861" width="0.3808%" height="15" fill="rgb(240,92,26)" fg:x="50509310" fg:w="1262740"/><text x="15.4839%" y="1871.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,262,740 samples, 0.38%)</title><rect x="15.2339%" y="1845" width="0.3808%" height="15" fill="rgb(207,40,23)" fg:x="50509310" fg:w="1262740"/><text x="15.4839%" y="1855.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,262,740 samples, 0.38%)</title><rect x="15.2339%" y="1829" width="0.3808%" height="15" fill="rgb(223,111,35)" fg:x="50509310" fg:w="1262740"/><text x="15.4839%" y="1839.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,262,740 samples, 0.38%)</title><rect x="15.2339%" y="1813" width="0.3808%" height="15" fill="rgb(229,147,28)" fg:x="50509310" fg:w="1262740"/><text x="15.4839%" y="1823.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,262,740 samples, 0.38%)</title><rect x="15.2339%" y="1797" width="0.3808%" height="15" fill="rgb(211,29,28)" fg:x="50509310" fg:w="1262740"/><text x="15.4839%" y="1807.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,262,740 samples, 0.38%)</title><rect x="15.2339%" y="1781" width="0.3808%" height="15" fill="rgb(228,72,33)" fg:x="50509310" fg:w="1262740"/><text x="15.4839%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,262,740 samples, 0.38%)</title><rect x="15.2339%" y="1765" width="0.3808%" height="15" fill="rgb(205,214,31)" fg:x="50509310" fg:w="1262740"/><text x="15.4839%" y="1775.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,262,740 samples, 0.38%)</title><rect x="15.2339%" y="1749" width="0.3808%" height="15" fill="rgb(224,111,15)" fg:x="50509310" fg:w="1262740"/><text x="15.4839%" y="1759.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,262,740 samples, 0.38%)</title><rect x="15.2339%" y="1733" width="0.3808%" height="15" fill="rgb(253,21,26)" fg:x="50509310" fg:w="1262740"/><text x="15.4839%" y="1743.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,262,740 samples, 0.38%)</title><rect x="15.2339%" y="1717" width="0.3808%" height="15" fill="rgb(245,139,43)" fg:x="50509310" fg:w="1262740"/><text x="15.4839%" y="1727.50"></text></g><g><title>[libc.so.6] (1,262,740 samples, 0.38%)</title><rect x="15.2339%" y="1701" width="0.3808%" height="15" fill="rgb(252,170,7)" fg:x="50509310" fg:w="1262740"/><text x="15.4839%" y="1711.50"></text></g><g><title>benchmark::apply_frame_modifications (18,196,336 samples, 5.49%)</title><rect x="10.5106%" y="1957" width="5.4881%" height="15" fill="rgb(231,118,14)" fg:x="34848859" fg:w="18196336"/><text x="10.7606%" y="1967.50">benchma..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,273,145 samples, 0.38%)</title><rect x="15.6147%" y="1941" width="0.3840%" height="15" fill="rgb(238,83,0)" fg:x="51772050" fg:w="1273145"/><text x="15.8647%" y="1951.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,273,145 samples, 0.38%)</title><rect x="15.6147%" y="1925" width="0.3840%" height="15" fill="rgb(221,39,39)" fg:x="51772050" fg:w="1273145"/><text x="15.8647%" y="1935.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,273,145 samples, 0.38%)</title><rect x="15.6147%" y="1909" width="0.3840%" height="15" fill="rgb(222,119,46)" fg:x="51772050" fg:w="1273145"/><text x="15.8647%" y="1919.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,273,145 samples, 0.38%)</title><rect x="15.6147%" y="1893" width="0.3840%" height="15" fill="rgb(222,165,49)" fg:x="51772050" fg:w="1273145"/><text x="15.8647%" y="1903.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,273,145 samples, 0.38%)</title><rect x="15.6147%" y="1877" width="0.3840%" height="15" fill="rgb(219,113,52)" fg:x="51772050" fg:w="1273145"/><text x="15.8647%" y="1887.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,273,145 samples, 0.38%)</title><rect x="15.6147%" y="1861" width="0.3840%" height="15" fill="rgb(214,7,15)" fg:x="51772050" fg:w="1273145"/><text x="15.8647%" y="1871.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,273,145 samples, 0.38%)</title><rect x="15.6147%" y="1845" width="0.3840%" height="15" fill="rgb(235,32,4)" fg:x="51772050" fg:w="1273145"/><text x="15.8647%" y="1855.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,273,145 samples, 0.38%)</title><rect x="15.6147%" y="1829" width="0.3840%" height="15" fill="rgb(238,90,54)" fg:x="51772050" fg:w="1273145"/><text x="15.8647%" y="1839.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,273,145 samples, 0.38%)</title><rect x="15.6147%" y="1813" width="0.3840%" height="15" fill="rgb(213,208,19)" fg:x="51772050" fg:w="1273145"/><text x="15.8647%" y="1823.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,273,145 samples, 0.38%)</title><rect x="15.6147%" y="1797" width="0.3840%" height="15" fill="rgb(233,156,4)" fg:x="51772050" fg:w="1273145"/><text x="15.8647%" y="1807.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,260,539 samples, 0.38%)</title><rect x="16.3776%" y="1685" width="0.3802%" height="15" fill="rgb(207,194,5)" fg:x="54301259" fg:w="1260539"/><text x="16.6276%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,260,539 samples, 0.38%)</title><rect x="16.3776%" y="1669" width="0.3802%" height="15" fill="rgb(206,111,30)" fg:x="54301259" fg:w="1260539"/><text x="16.6276%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,260,539 samples, 0.38%)</title><rect x="16.3776%" y="1653" width="0.3802%" height="15" fill="rgb(243,70,54)" fg:x="54301259" fg:w="1260539"/><text x="16.6276%" y="1663.50"></text></g><g><title>alloc::slice::hack::to_vec (1,260,539 samples, 0.38%)</title><rect x="16.3776%" y="1637" width="0.3802%" height="15" fill="rgb(242,28,8)" fg:x="54301259" fg:w="1260539"/><text x="16.6276%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,260,539 samples, 0.38%)</title><rect x="16.3776%" y="1621" width="0.3802%" height="15" fill="rgb(219,106,18)" fg:x="54301259" fg:w="1260539"/><text x="16.6276%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,260,539 samples, 0.38%)</title><rect x="16.3776%" y="1605" width="0.3802%" height="15" fill="rgb(244,222,10)" fg:x="54301259" fg:w="1260539"/><text x="16.6276%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,260,539 samples, 0.38%)</title><rect x="16.3776%" y="1589" width="0.3802%" height="15" fill="rgb(236,179,52)" fg:x="54301259" fg:w="1260539"/><text x="16.6276%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,260,539 samples, 0.38%)</title><rect x="16.3776%" y="1573" width="0.3802%" height="15" fill="rgb(213,23,39)" fg:x="54301259" fg:w="1260539"/><text x="16.6276%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,260,539 samples, 0.38%)</title><rect x="16.3776%" y="1557" width="0.3802%" height="15" fill="rgb(238,48,10)" fg:x="54301259" fg:w="1260539"/><text x="16.6276%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,260,539 samples, 0.38%)</title><rect x="16.3776%" y="1541" width="0.3802%" height="15" fill="rgb(251,196,23)" fg:x="54301259" fg:w="1260539"/><text x="16.6276%" y="1551.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,260,539 samples, 0.38%)</title><rect x="16.3776%" y="1525" width="0.3802%" height="15" fill="rgb(250,152,24)" fg:x="54301259" fg:w="1260539"/><text x="16.6276%" y="1535.50"></text></g><g><title>alloc::alloc::alloc (1,260,539 samples, 0.38%)</title><rect x="16.3776%" y="1509" width="0.3802%" height="15" fill="rgb(209,150,17)" fg:x="54301259" fg:w="1260539"/><text x="16.6276%" y="1519.50"></text></g><g><title>malloc (1,260,539 samples, 0.38%)</title><rect x="16.3776%" y="1493" width="0.3802%" height="15" fill="rgb(234,202,34)" fg:x="54301259" fg:w="1260539"/><text x="16.6276%" y="1503.50"></text></g><g><title>[libc.so.6] (1,260,539 samples, 0.38%)</title><rect x="16.3776%" y="1477" width="0.3802%" height="15" fill="rgb(253,148,53)" fg:x="54301259" fg:w="1260539"/><text x="16.6276%" y="1487.50"></text></g><g><title>__rust_alloc (1,258,873 samples, 0.38%)</title><rect x="17.1377%" y="1333" width="0.3797%" height="15" fill="rgb(218,129,16)" fg:x="56821587" fg:w="1258873"/><text x="17.3877%" y="1343.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4,966,985 samples, 1.50%)</title><rect x="17.1377%" y="1525" width="1.4981%" height="15" fill="rgb(216,85,19)" fg:x="56821587" fg:w="4966985"/><text x="17.3877%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,966,985 samples, 1.50%)</title><rect x="17.1377%" y="1509" width="1.4981%" height="15" fill="rgb(235,228,7)" fg:x="56821587" fg:w="4966985"/><text x="17.3877%" y="1519.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,966,985 samples, 1.50%)</title><rect x="17.1377%" y="1493" width="1.4981%" height="15" fill="rgb(245,175,0)" fg:x="56821587" fg:w="4966985"/><text x="17.3877%" y="1503.50"></text></g><g><title>alloc::slice::hack::to_vec (4,966,985 samples, 1.50%)</title><rect x="17.1377%" y="1477" width="1.4981%" height="15" fill="rgb(208,168,36)" fg:x="56821587" fg:w="4966985"/><text x="17.3877%" y="1487.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,966,985 samples, 1.50%)</title><rect x="17.1377%" y="1461" width="1.4981%" height="15" fill="rgb(246,171,24)" fg:x="56821587" fg:w="4966985"/><text x="17.3877%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,966,985 samples, 1.50%)</title><rect x="17.1377%" y="1445" width="1.4981%" height="15" fill="rgb(215,142,24)" fg:x="56821587" fg:w="4966985"/><text x="17.3877%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,966,985 samples, 1.50%)</title><rect x="17.1377%" y="1429" width="1.4981%" height="15" fill="rgb(250,187,7)" fg:x="56821587" fg:w="4966985"/><text x="17.3877%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,966,985 samples, 1.50%)</title><rect x="17.1377%" y="1413" width="1.4981%" height="15" fill="rgb(228,66,33)" fg:x="56821587" fg:w="4966985"/><text x="17.3877%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,966,985 samples, 1.50%)</title><rect x="17.1377%" y="1397" width="1.4981%" height="15" fill="rgb(234,215,21)" fg:x="56821587" fg:w="4966985"/><text x="17.3877%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,966,985 samples, 1.50%)</title><rect x="17.1377%" y="1381" width="1.4981%" height="15" fill="rgb(222,191,20)" fg:x="56821587" fg:w="4966985"/><text x="17.3877%" y="1391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4,966,985 samples, 1.50%)</title><rect x="17.1377%" y="1365" width="1.4981%" height="15" fill="rgb(245,79,54)" fg:x="56821587" fg:w="4966985"/><text x="17.3877%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (4,966,985 samples, 1.50%)</title><rect x="17.1377%" y="1349" width="1.4981%" height="15" fill="rgb(240,10,37)" fg:x="56821587" fg:w="4966985"/><text x="17.3877%" y="1359.50"></text></g><g><title>malloc (3,708,112 samples, 1.12%)</title><rect x="17.5174%" y="1333" width="1.1184%" height="15" fill="rgb(214,192,32)" fg:x="58080460" fg:w="3708112"/><text x="17.7674%" y="1343.50"></text></g><g><title>[libc.so.6] (2,468,873 samples, 0.74%)</title><rect x="17.8912%" y="1317" width="0.7446%" height="15" fill="rgb(209,36,54)" fg:x="59319699" fg:w="2468873"/><text x="18.1412%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,274,671 samples, 0.38%)</title><rect x="18.6358%" y="1461" width="0.3844%" height="15" fill="rgb(220,10,11)" fg:x="61788572" fg:w="1274671"/><text x="18.8858%" y="1471.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,274,671 samples, 0.38%)</title><rect x="18.6358%" y="1445" width="0.3844%" height="15" fill="rgb(221,106,17)" fg:x="61788572" fg:w="1274671"/><text x="18.8858%" y="1455.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,274,671 samples, 0.38%)</title><rect x="18.6358%" y="1429" width="0.3844%" height="15" fill="rgb(251,142,44)" fg:x="61788572" fg:w="1274671"/><text x="18.8858%" y="1439.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,274,671 samples, 0.38%)</title><rect x="18.6358%" y="1413" width="0.3844%" height="15" fill="rgb(238,13,15)" fg:x="61788572" fg:w="1274671"/><text x="18.8858%" y="1423.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,526,558 samples, 0.76%)</title><rect x="19.0202%" y="1445" width="0.7620%" height="15" fill="rgb(208,107,27)" fg:x="63063243" fg:w="2526558"/><text x="19.2702%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,526,558 samples, 0.76%)</title><rect x="19.0202%" y="1429" width="0.7620%" height="15" fill="rgb(205,136,37)" fg:x="63063243" fg:w="2526558"/><text x="19.2702%" y="1439.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,526,558 samples, 0.76%)</title><rect x="19.0202%" y="1413" width="0.7620%" height="15" fill="rgb(250,205,27)" fg:x="63063243" fg:w="2526558"/><text x="19.2702%" y="1423.50"></text></g><g><title>alloc::slice::hack::to_vec (2,526,558 samples, 0.76%)</title><rect x="19.0202%" y="1397" width="0.7620%" height="15" fill="rgb(210,80,43)" fg:x="63063243" fg:w="2526558"/><text x="19.2702%" y="1407.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,526,558 samples, 0.76%)</title><rect x="19.0202%" y="1381" width="0.7620%" height="15" fill="rgb(247,160,36)" fg:x="63063243" fg:w="2526558"/><text x="19.2702%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,526,558 samples, 0.76%)</title><rect x="19.0202%" y="1365" width="0.7620%" height="15" fill="rgb(234,13,49)" fg:x="63063243" fg:w="2526558"/><text x="19.2702%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,526,558 samples, 0.76%)</title><rect x="19.0202%" y="1349" width="0.7620%" height="15" fill="rgb(234,122,0)" fg:x="63063243" fg:w="2526558"/><text x="19.2702%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,526,558 samples, 0.76%)</title><rect x="19.0202%" y="1333" width="0.7620%" height="15" fill="rgb(207,146,38)" fg:x="63063243" fg:w="2526558"/><text x="19.2702%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,526,558 samples, 0.76%)</title><rect x="19.0202%" y="1317" width="0.7620%" height="15" fill="rgb(207,177,25)" fg:x="63063243" fg:w="2526558"/><text x="19.2702%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,526,558 samples, 0.76%)</title><rect x="19.0202%" y="1301" width="0.7620%" height="15" fill="rgb(211,178,42)" fg:x="63063243" fg:w="2526558"/><text x="19.2702%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,526,558 samples, 0.76%)</title><rect x="19.0202%" y="1285" width="0.7620%" height="15" fill="rgb(230,69,54)" fg:x="63063243" fg:w="2526558"/><text x="19.2702%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (2,526,558 samples, 0.76%)</title><rect x="19.0202%" y="1269" width="0.7620%" height="15" fill="rgb(214,135,41)" fg:x="63063243" fg:w="2526558"/><text x="19.2702%" y="1279.50"></text></g><g><title>malloc (2,526,558 samples, 0.76%)</title><rect x="19.0202%" y="1253" width="0.7620%" height="15" fill="rgb(237,67,25)" fg:x="63063243" fg:w="2526558"/><text x="19.2702%" y="1263.50"></text></g><g><title>[libc.so.6] (2,526,558 samples, 0.76%)</title><rect x="19.0202%" y="1237" width="0.7620%" height="15" fill="rgb(222,189,50)" fg:x="63063243" fg:w="2526558"/><text x="19.2702%" y="1247.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,778,731 samples, 1.14%)</title><rect x="19.7823%" y="1365" width="1.1397%" height="15" fill="rgb(245,148,34)" fg:x="65589801" fg:w="3778731"/><text x="20.0323%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,518,949 samples, 0.76%)</title><rect x="20.1622%" y="1349" width="0.7597%" height="15" fill="rgb(222,29,6)" fg:x="66849583" fg:w="2518949"/><text x="20.4122%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,518,949 samples, 0.76%)</title><rect x="20.1622%" y="1333" width="0.7597%" height="15" fill="rgb(221,189,43)" fg:x="66849583" fg:w="2518949"/><text x="20.4122%" y="1343.50"></text></g><g><title>alloc::slice::hack::to_vec (2,518,949 samples, 0.76%)</title><rect x="20.1622%" y="1317" width="0.7597%" height="15" fill="rgb(207,36,27)" fg:x="66849583" fg:w="2518949"/><text x="20.4122%" y="1327.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,518,949 samples, 0.76%)</title><rect x="20.1622%" y="1301" width="0.7597%" height="15" fill="rgb(217,90,24)" fg:x="66849583" fg:w="2518949"/><text x="20.4122%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,518,949 samples, 0.76%)</title><rect x="20.1622%" y="1285" width="0.7597%" height="15" fill="rgb(224,66,35)" fg:x="66849583" fg:w="2518949"/><text x="20.4122%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,518,949 samples, 0.76%)</title><rect x="20.1622%" y="1269" width="0.7597%" height="15" fill="rgb(221,13,50)" fg:x="66849583" fg:w="2518949"/><text x="20.4122%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,518,949 samples, 0.76%)</title><rect x="20.1622%" y="1253" width="0.7597%" height="15" fill="rgb(236,68,49)" fg:x="66849583" fg:w="2518949"/><text x="20.4122%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,518,949 samples, 0.76%)</title><rect x="20.1622%" y="1237" width="0.7597%" height="15" fill="rgb(229,146,28)" fg:x="66849583" fg:w="2518949"/><text x="20.4122%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,518,949 samples, 0.76%)</title><rect x="20.1622%" y="1221" width="0.7597%" height="15" fill="rgb(225,31,38)" fg:x="66849583" fg:w="2518949"/><text x="20.4122%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,518,949 samples, 0.76%)</title><rect x="20.1622%" y="1205" width="0.7597%" height="15" fill="rgb(250,208,3)" fg:x="66849583" fg:w="2518949"/><text x="20.4122%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (2,518,949 samples, 0.76%)</title><rect x="20.1622%" y="1189" width="0.7597%" height="15" fill="rgb(246,54,23)" fg:x="66849583" fg:w="2518949"/><text x="20.4122%" y="1199.50"></text></g><g><title>malloc (2,518,949 samples, 0.76%)</title><rect x="20.1622%" y="1173" width="0.7597%" height="15" fill="rgb(243,76,11)" fg:x="66849583" fg:w="2518949"/><text x="20.4122%" y="1183.50"></text></g><g><title>[libc.so.6] (1,257,000 samples, 0.38%)</title><rect x="20.5428%" y="1157" width="0.3791%" height="15" fill="rgb(245,21,50)" fg:x="68111532" fg:w="1257000"/><text x="20.7928%" y="1167.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,491,230 samples, 0.75%)</title><rect x="20.9219%" y="1205" width="0.7514%" height="15" fill="rgb(228,9,43)" fg:x="69368532" fg:w="2491230"/><text x="21.1719%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,258,079 samples, 0.38%)</title><rect x="21.2939%" y="1189" width="0.3794%" height="15" fill="rgb(208,100,47)" fg:x="70601683" fg:w="1258079"/><text x="21.5439%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,258,079 samples, 0.38%)</title><rect x="21.2939%" y="1173" width="0.3794%" height="15" fill="rgb(232,26,8)" fg:x="70601683" fg:w="1258079"/><text x="21.5439%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (1,258,079 samples, 0.38%)</title><rect x="21.2939%" y="1157" width="0.3794%" height="15" fill="rgb(216,166,38)" fg:x="70601683" fg:w="1258079"/><text x="21.5439%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,258,079 samples, 0.38%)</title><rect x="21.2939%" y="1141" width="0.3794%" height="15" fill="rgb(251,202,51)" fg:x="70601683" fg:w="1258079"/><text x="21.5439%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,258,079 samples, 0.38%)</title><rect x="21.2939%" y="1125" width="0.3794%" height="15" fill="rgb(254,216,34)" fg:x="70601683" fg:w="1258079"/><text x="21.5439%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,258,079 samples, 0.38%)</title><rect x="21.2939%" y="1109" width="0.3794%" height="15" fill="rgb(251,32,27)" fg:x="70601683" fg:w="1258079"/><text x="21.5439%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,258,079 samples, 0.38%)</title><rect x="21.2939%" y="1093" width="0.3794%" height="15" fill="rgb(208,127,28)" fg:x="70601683" fg:w="1258079"/><text x="21.5439%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,258,079 samples, 0.38%)</title><rect x="21.2939%" y="1077" width="0.3794%" height="15" fill="rgb(224,137,22)" fg:x="70601683" fg:w="1258079"/><text x="21.5439%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,258,079 samples, 0.38%)</title><rect x="21.2939%" y="1061" width="0.3794%" height="15" fill="rgb(254,70,32)" fg:x="70601683" fg:w="1258079"/><text x="21.5439%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,258,079 samples, 0.38%)</title><rect x="21.2939%" y="1045" width="0.3794%" height="15" fill="rgb(229,75,37)" fg:x="70601683" fg:w="1258079"/><text x="21.5439%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (1,258,079 samples, 0.38%)</title><rect x="21.2939%" y="1029" width="0.3794%" height="15" fill="rgb(252,64,23)" fg:x="70601683" fg:w="1258079"/><text x="21.5439%" y="1039.50"></text></g><g><title>malloc (1,258,079 samples, 0.38%)</title><rect x="21.2939%" y="1013" width="0.3794%" height="15" fill="rgb(232,162,48)" fg:x="70601683" fg:w="1258079"/><text x="21.5439%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,265,019 samples, 0.38%)</title><rect x="22.0526%" y="981" width="0.3815%" height="15" fill="rgb(246,160,12)" fg:x="73117314" fg:w="1265019"/><text x="22.3026%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,734,529 samples, 1.13%)</title><rect x="22.4341%" y="805" width="1.1264%" height="15" fill="rgb(247,166,0)" fg:x="74382333" fg:w="3734529"/><text x="22.6841%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,256,494 samples, 0.38%)</title><rect x="23.1815%" y="789" width="0.3790%" height="15" fill="rgb(249,219,21)" fg:x="76860368" fg:w="1256494"/><text x="23.4315%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,256,494 samples, 0.38%)</title><rect x="23.1815%" y="773" width="0.3790%" height="15" fill="rgb(205,209,3)" fg:x="76860368" fg:w="1256494"/><text x="23.4315%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (1,256,494 samples, 0.38%)</title><rect x="23.1815%" y="757" width="0.3790%" height="15" fill="rgb(243,44,1)" fg:x="76860368" fg:w="1256494"/><text x="23.4315%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,256,494 samples, 0.38%)</title><rect x="23.1815%" y="741" width="0.3790%" height="15" fill="rgb(206,159,16)" fg:x="76860368" fg:w="1256494"/><text x="23.4315%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,256,494 samples, 0.38%)</title><rect x="23.1815%" y="725" width="0.3790%" height="15" fill="rgb(244,77,30)" fg:x="76860368" fg:w="1256494"/><text x="23.4315%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,256,494 samples, 0.38%)</title><rect x="23.1815%" y="709" width="0.3790%" height="15" fill="rgb(218,69,12)" fg:x="76860368" fg:w="1256494"/><text x="23.4315%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,256,494 samples, 0.38%)</title><rect x="23.1815%" y="693" width="0.3790%" height="15" fill="rgb(212,87,7)" fg:x="76860368" fg:w="1256494"/><text x="23.4315%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,256,494 samples, 0.38%)</title><rect x="23.1815%" y="677" width="0.3790%" height="15" fill="rgb(245,114,25)" fg:x="76860368" fg:w="1256494"/><text x="23.4315%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,256,494 samples, 0.38%)</title><rect x="23.1815%" y="661" width="0.3790%" height="15" fill="rgb(210,61,42)" fg:x="76860368" fg:w="1256494"/><text x="23.4315%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,256,494 samples, 0.38%)</title><rect x="23.1815%" y="645" width="0.3790%" height="15" fill="rgb(211,52,33)" fg:x="76860368" fg:w="1256494"/><text x="23.4315%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1,256,494 samples, 0.38%)</title><rect x="23.1815%" y="629" width="0.3790%" height="15" fill="rgb(234,58,33)" fg:x="76860368" fg:w="1256494"/><text x="23.4315%" y="639.50"></text></g><g><title>malloc (1,256,494 samples, 0.38%)</title><rect x="23.1815%" y="613" width="0.3790%" height="15" fill="rgb(220,115,36)" fg:x="76860368" fg:w="1256494"/><text x="23.4315%" y="623.50"></text></g><g><title>[libc.so.6] (1,256,494 samples, 0.38%)</title><rect x="23.1815%" y="597" width="0.3790%" height="15" fill="rgb(243,153,54)" fg:x="76860368" fg:w="1256494"/><text x="23.4315%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,263,110 samples, 0.38%)</title><rect x="23.5605%" y="581" width="0.3810%" height="15" fill="rgb(251,47,18)" fg:x="78116862" fg:w="1263110"/><text x="23.8105%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,225,528 samples, 0.37%)</title><rect x="24.3218%" y="485" width="0.3696%" height="15" fill="rgb(242,102,42)" fg:x="80640993" fg:w="1225528"/><text x="24.5718%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,225,528 samples, 0.37%)</title><rect x="24.3218%" y="469" width="0.3696%" height="15" fill="rgb(234,31,38)" fg:x="80640993" fg:w="1225528"/><text x="24.5718%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1,225,528 samples, 0.37%)</title><rect x="24.3218%" y="453" width="0.3696%" height="15" fill="rgb(221,117,51)" fg:x="80640993" fg:w="1225528"/><text x="24.5718%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,225,528 samples, 0.37%)</title><rect x="24.3218%" y="437" width="0.3696%" height="15" fill="rgb(212,20,18)" fg:x="80640993" fg:w="1225528"/><text x="24.5718%" y="447.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,225,528 samples, 0.37%)</title><rect x="24.3218%" y="421" width="0.3696%" height="15" fill="rgb(245,133,36)" fg:x="80640993" fg:w="1225528"/><text x="24.5718%" y="431.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,225,528 samples, 0.37%)</title><rect x="24.3218%" y="405" width="0.3696%" height="15" fill="rgb(212,6,19)" fg:x="80640993" fg:w="1225528"/><text x="24.5718%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,225,528 samples, 0.37%)</title><rect x="24.3218%" y="389" width="0.3696%" height="15" fill="rgb(218,1,36)" fg:x="80640993" fg:w="1225528"/><text x="24.5718%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,225,528 samples, 0.37%)</title><rect x="24.3218%" y="373" width="0.3696%" height="15" fill="rgb(246,84,54)" fg:x="80640993" fg:w="1225528"/><text x="24.5718%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,225,528 samples, 0.37%)</title><rect x="24.3218%" y="357" width="0.3696%" height="15" fill="rgb(242,110,6)" fg:x="80640993" fg:w="1225528"/><text x="24.5718%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1,225,528 samples, 0.37%)</title><rect x="24.3218%" y="341" width="0.3696%" height="15" fill="rgb(214,47,5)" fg:x="80640993" fg:w="1225528"/><text x="24.5718%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,225,528 samples, 0.37%)</title><rect x="24.3218%" y="325" width="0.3696%" height="15" fill="rgb(218,159,25)" fg:x="80640993" fg:w="1225528"/><text x="24.5718%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,225,528 samples, 0.37%)</title><rect x="24.3218%" y="309" width="0.3696%" height="15" fill="rgb(215,211,28)" fg:x="80640993" fg:w="1225528"/><text x="24.5718%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,225,528 samples, 0.37%)</title><rect x="24.3218%" y="293" width="0.3696%" height="15" fill="rgb(238,59,32)" fg:x="80640993" fg:w="1225528"/><text x="24.5718%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,225,528 samples, 0.37%)</title><rect x="24.3218%" y="277" width="0.3696%" height="15" fill="rgb(226,82,3)" fg:x="80640993" fg:w="1225528"/><text x="24.5718%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,225,528 samples, 0.37%)</title><rect x="24.3218%" y="261" width="0.3696%" height="15" fill="rgb(240,164,32)" fg:x="80640993" fg:w="1225528"/><text x="24.5718%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,225,528 samples, 0.37%)</title><rect x="24.3218%" y="245" width="0.3696%" height="15" fill="rgb(232,46,7)" fg:x="80640993" fg:w="1225528"/><text x="24.5718%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,225,528 samples, 0.37%)</title><rect x="24.3218%" y="229" width="0.3696%" height="15" fill="rgb(229,129,53)" fg:x="80640993" fg:w="1225528"/><text x="24.5718%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1,225,528 samples, 0.37%)</title><rect x="24.3218%" y="213" width="0.3696%" height="15" fill="rgb(234,188,29)" fg:x="80640993" fg:w="1225528"/><text x="24.5718%" y="223.50"></text></g><g><title>malloc (1,225,528 samples, 0.37%)</title><rect x="24.3218%" y="197" width="0.3696%" height="15" fill="rgb(246,141,4)" fg:x="80640993" fg:w="1225528"/><text x="24.5718%" y="207.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (3,749,852 samples, 1.13%)</title><rect x="24.3218%" y="501" width="1.1310%" height="15" fill="rgb(229,23,39)" fg:x="80640993" fg:w="3749852"/><text x="24.5718%" y="511.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,524,324 samples, 0.76%)</title><rect x="24.6914%" y="485" width="0.7614%" height="15" fill="rgb(206,12,3)" fg:x="81866521" fg:w="2524324"/><text x="24.9414%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,524,324 samples, 0.76%)</title><rect x="24.6914%" y="469" width="0.7614%" height="15" fill="rgb(252,226,20)" fg:x="81866521" fg:w="2524324"/><text x="24.9414%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,524,324 samples, 0.76%)</title><rect x="24.6914%" y="453" width="0.7614%" height="15" fill="rgb(216,123,35)" fg:x="81866521" fg:w="2524324"/><text x="24.9414%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2,524,324 samples, 0.76%)</title><rect x="24.6914%" y="437" width="0.7614%" height="15" fill="rgb(212,68,40)" fg:x="81866521" fg:w="2524324"/><text x="24.9414%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,524,324 samples, 0.76%)</title><rect x="24.6914%" y="421" width="0.7614%" height="15" fill="rgb(254,125,32)" fg:x="81866521" fg:w="2524324"/><text x="24.9414%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,524,324 samples, 0.76%)</title><rect x="24.6914%" y="405" width="0.7614%" height="15" fill="rgb(253,97,22)" fg:x="81866521" fg:w="2524324"/><text x="24.9414%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,524,324 samples, 0.76%)</title><rect x="24.6914%" y="389" width="0.7614%" height="15" fill="rgb(241,101,14)" fg:x="81866521" fg:w="2524324"/><text x="24.9414%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,524,324 samples, 0.76%)</title><rect x="24.6914%" y="373" width="0.7614%" height="15" fill="rgb(238,103,29)" fg:x="81866521" fg:w="2524324"/><text x="24.9414%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,524,324 samples, 0.76%)</title><rect x="24.6914%" y="357" width="0.7614%" height="15" fill="rgb(233,195,47)" fg:x="81866521" fg:w="2524324"/><text x="24.9414%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,524,324 samples, 0.76%)</title><rect x="24.6914%" y="341" width="0.7614%" height="15" fill="rgb(246,218,30)" fg:x="81866521" fg:w="2524324"/><text x="24.9414%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,524,324 samples, 0.76%)</title><rect x="24.6914%" y="325" width="0.7614%" height="15" fill="rgb(219,145,47)" fg:x="81866521" fg:w="2524324"/><text x="24.9414%" y="335.50"></text></g><g><title>alloc::alloc::alloc (2,524,324 samples, 0.76%)</title><rect x="24.6914%" y="309" width="0.7614%" height="15" fill="rgb(243,12,26)" fg:x="81866521" fg:w="2524324"/><text x="24.9414%" y="319.50"></text></g><g><title>malloc (2,524,324 samples, 0.76%)</title><rect x="24.6914%" y="293" width="0.7614%" height="15" fill="rgb(214,87,16)" fg:x="81866521" fg:w="2524324"/><text x="24.9414%" y="303.50"></text></g><g><title>[libc.so.6] (1,270,929 samples, 0.38%)</title><rect x="25.0694%" y="277" width="0.3833%" height="15" fill="rgb(208,99,42)" fg:x="83119916" fg:w="1270929"/><text x="25.3194%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,275,960 samples, 1.89%)</title><rect x="23.9414%" y="565" width="1.8929%" height="15" fill="rgb(253,99,2)" fg:x="79379972" fg:w="6275960"/><text x="24.1914%" y="575.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,275,960 samples, 1.89%)</title><rect x="23.9414%" y="549" width="1.8929%" height="15" fill="rgb(220,168,23)" fg:x="79379972" fg:w="6275960"/><text x="24.1914%" y="559.50">a..</text></g><g><title>alloc::slice::hack::to_vec (6,275,960 samples, 1.89%)</title><rect x="23.9414%" y="533" width="1.8929%" height="15" fill="rgb(242,38,24)" fg:x="79379972" fg:w="6275960"/><text x="24.1914%" y="543.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,275,960 samples, 1.89%)</title><rect x="23.9414%" y="517" width="1.8929%" height="15" fill="rgb(225,182,9)" fg:x="79379972" fg:w="6275960"/><text x="24.1914%" y="527.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,265,087 samples, 0.38%)</title><rect x="25.4528%" y="501" width="0.3816%" height="15" fill="rgb(243,178,37)" fg:x="84390845" fg:w="1265087"/><text x="25.7028%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,265,087 samples, 0.38%)</title><rect x="25.4528%" y="485" width="0.3816%" height="15" fill="rgb(232,139,19)" fg:x="84390845" fg:w="1265087"/><text x="25.7028%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,265,087 samples, 0.38%)</title><rect x="25.4528%" y="469" width="0.3816%" height="15" fill="rgb(225,201,24)" fg:x="84390845" fg:w="1265087"/><text x="25.7028%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,265,087 samples, 0.38%)</title><rect x="25.4528%" y="453" width="0.3816%" height="15" fill="rgb(221,47,46)" fg:x="84390845" fg:w="1265087"/><text x="25.7028%" y="463.50"></text></g><g><title>alloc::raw_vec::layout_array (1,265,087 samples, 0.38%)</title><rect x="25.4528%" y="437" width="0.3816%" height="15" fill="rgb(249,23,13)" fg:x="84390845" fg:w="1265087"/><text x="25.7028%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1,265,087 samples, 0.38%)</title><rect x="25.4528%" y="421" width="0.3816%" height="15" fill="rgb(219,9,5)" fg:x="84390845" fg:w="1265087"/><text x="25.7028%" y="431.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,260,090 samples, 0.38%)</title><rect x="25.8343%" y="565" width="0.3801%" height="15" fill="rgb(254,171,16)" fg:x="85655932" fg:w="1260090"/><text x="26.0843%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,260,090 samples, 0.38%)</title><rect x="25.8343%" y="549" width="0.3801%" height="15" fill="rgb(230,171,20)" fg:x="85655932" fg:w="1260090"/><text x="26.0843%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,260,090 samples, 0.38%)</title><rect x="25.8343%" y="533" width="0.3801%" height="15" fill="rgb(210,71,41)" fg:x="85655932" fg:w="1260090"/><text x="26.0843%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1,260,090 samples, 0.38%)</title><rect x="25.8343%" y="517" width="0.3801%" height="15" fill="rgb(206,173,20)" fg:x="85655932" fg:w="1260090"/><text x="26.0843%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,260,090 samples, 0.38%)</title><rect x="25.8343%" y="501" width="0.3801%" height="15" fill="rgb(233,88,34)" fg:x="85655932" fg:w="1260090"/><text x="26.0843%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,260,090 samples, 0.38%)</title><rect x="25.8343%" y="485" width="0.3801%" height="15" fill="rgb(223,209,46)" fg:x="85655932" fg:w="1260090"/><text x="26.0843%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,260,090 samples, 0.38%)</title><rect x="25.8343%" y="469" width="0.3801%" height="15" fill="rgb(250,43,18)" fg:x="85655932" fg:w="1260090"/><text x="26.0843%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,260,090 samples, 0.38%)</title><rect x="25.8343%" y="453" width="0.3801%" height="15" fill="rgb(208,13,10)" fg:x="85655932" fg:w="1260090"/><text x="26.0843%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,260,090 samples, 0.38%)</title><rect x="25.8343%" y="437" width="0.3801%" height="15" fill="rgb(212,200,36)" fg:x="85655932" fg:w="1260090"/><text x="26.0843%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,260,090 samples, 0.38%)</title><rect x="25.8343%" y="421" width="0.3801%" height="15" fill="rgb(225,90,30)" fg:x="85655932" fg:w="1260090"/><text x="26.0843%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,260,090 samples, 0.38%)</title><rect x="25.8343%" y="405" width="0.3801%" height="15" fill="rgb(236,182,39)" fg:x="85655932" fg:w="1260090"/><text x="26.0843%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1,260,090 samples, 0.38%)</title><rect x="25.8343%" y="389" width="0.3801%" height="15" fill="rgb(212,144,35)" fg:x="85655932" fg:w="1260090"/><text x="26.0843%" y="399.50"></text></g><g><title>malloc (1,260,090 samples, 0.38%)</title><rect x="25.8343%" y="373" width="0.3801%" height="15" fill="rgb(228,63,44)" fg:x="85655932" fg:w="1260090"/><text x="26.0843%" y="383.50"></text></g><g><title>[libc.so.6] (1,260,090 samples, 0.38%)</title><rect x="25.8343%" y="357" width="0.3801%" height="15" fill="rgb(228,109,6)" fg:x="85655932" fg:w="1260090"/><text x="26.0843%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,046,886 samples, 3.03%)</title><rect x="23.5605%" y="645" width="3.0302%" height="15" fill="rgb(238,117,24)" fg:x="78116862" fg:w="10046886"/><text x="23.8105%" y="655.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,046,886 samples, 3.03%)</title><rect x="23.5605%" y="629" width="3.0302%" height="15" fill="rgb(242,26,26)" fg:x="78116862" fg:w="10046886"/><text x="23.8105%" y="639.50">all..</text></g><g><title>alloc::slice::hack::to_vec (10,046,886 samples, 3.03%)</title><rect x="23.5605%" y="613" width="3.0302%" height="15" fill="rgb(221,92,48)" fg:x="78116862" fg:w="10046886"/><text x="23.8105%" y="623.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,046,886 samples, 3.03%)</title><rect x="23.5605%" y="597" width="3.0302%" height="15" fill="rgb(209,209,32)" fg:x="78116862" fg:w="10046886"/><text x="23.8105%" y="607.50">&lt;T ..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (8,783,776 samples, 2.65%)</title><rect x="23.9414%" y="581" width="2.6492%" height="15" fill="rgb(221,70,22)" fg:x="79379972" fg:w="8783776"/><text x="24.1914%" y="591.50">&lt;c..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,247,726 samples, 0.38%)</title><rect x="26.2144%" y="565" width="0.3763%" height="15" fill="rgb(248,145,5)" fg:x="86916022" fg:w="1247726"/><text x="26.4644%" y="575.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,247,726 samples, 0.38%)</title><rect x="26.2144%" y="549" width="0.3763%" height="15" fill="rgb(226,116,26)" fg:x="86916022" fg:w="1247726"/><text x="26.4644%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,247,726 samples, 0.38%)</title><rect x="26.2144%" y="533" width="0.3763%" height="15" fill="rgb(244,5,17)" fg:x="86916022" fg:w="1247726"/><text x="26.4644%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,247,726 samples, 0.38%)</title><rect x="26.2144%" y="517" width="0.3763%" height="15" fill="rgb(252,159,33)" fg:x="86916022" fg:w="1247726"/><text x="26.4644%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,247,726 samples, 0.38%)</title><rect x="26.2144%" y="501" width="0.3763%" height="15" fill="rgb(206,71,0)" fg:x="86916022" fg:w="1247726"/><text x="26.4644%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,247,726 samples, 0.38%)</title><rect x="26.2144%" y="485" width="0.3763%" height="15" fill="rgb(233,118,54)" fg:x="86916022" fg:w="1247726"/><text x="26.4644%" y="495.50"></text></g><g><title>core::clone::Clone::clone (1,247,726 samples, 0.38%)</title><rect x="26.2144%" y="469" width="0.3763%" height="15" fill="rgb(234,83,48)" fg:x="86916022" fg:w="1247726"/><text x="26.4644%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,247,726 samples, 0.38%)</title><rect x="26.2144%" y="453" width="0.3763%" height="15" fill="rgb(228,3,54)" fg:x="86916022" fg:w="1247726"/><text x="26.4644%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,247,726 samples, 0.38%)</title><rect x="26.2144%" y="437" width="0.3763%" height="15" fill="rgb(226,155,13)" fg:x="86916022" fg:w="1247726"/><text x="26.4644%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,247,726 samples, 0.38%)</title><rect x="26.2144%" y="421" width="0.3763%" height="15" fill="rgb(241,28,37)" fg:x="86916022" fg:w="1247726"/><text x="26.4644%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1,247,726 samples, 0.38%)</title><rect x="26.2144%" y="405" width="0.3763%" height="15" fill="rgb(233,93,10)" fg:x="86916022" fg:w="1247726"/><text x="26.4644%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,247,726 samples, 0.38%)</title><rect x="26.2144%" y="389" width="0.3763%" height="15" fill="rgb(225,113,19)" fg:x="86916022" fg:w="1247726"/><text x="26.4644%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,247,726 samples, 0.38%)</title><rect x="26.2144%" y="373" width="0.3763%" height="15" fill="rgb(241,2,18)" fg:x="86916022" fg:w="1247726"/><text x="26.4644%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,247,726 samples, 0.38%)</title><rect x="26.2144%" y="357" width="0.3763%" height="15" fill="rgb(228,207,21)" fg:x="86916022" fg:w="1247726"/><text x="26.4644%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,247,726 samples, 0.38%)</title><rect x="26.2144%" y="341" width="0.3763%" height="15" fill="rgb(213,211,35)" fg:x="86916022" fg:w="1247726"/><text x="26.4644%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,247,726 samples, 0.38%)</title><rect x="26.2144%" y="325" width="0.3763%" height="15" fill="rgb(209,83,10)" fg:x="86916022" fg:w="1247726"/><text x="26.4644%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,247,726 samples, 0.38%)</title><rect x="26.2144%" y="309" width="0.3763%" height="15" fill="rgb(209,164,1)" fg:x="86916022" fg:w="1247726"/><text x="26.4644%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,247,726 samples, 0.38%)</title><rect x="26.2144%" y="293" width="0.3763%" height="15" fill="rgb(213,184,43)" fg:x="86916022" fg:w="1247726"/><text x="26.4644%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1,247,726 samples, 0.38%)</title><rect x="26.2144%" y="277" width="0.3763%" height="15" fill="rgb(231,61,34)" fg:x="86916022" fg:w="1247726"/><text x="26.4644%" y="287.50"></text></g><g><title>malloc (1,247,726 samples, 0.38%)</title><rect x="26.2144%" y="261" width="0.3763%" height="15" fill="rgb(235,75,3)" fg:x="86916022" fg:w="1247726"/><text x="26.4644%" y="271.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,211,792 samples, 0.37%)</title><rect x="26.5907%" y="645" width="0.3655%" height="15" fill="rgb(220,106,47)" fg:x="88163748" fg:w="1211792"/><text x="26.8407%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,211,792 samples, 0.37%)</title><rect x="26.5907%" y="629" width="0.3655%" height="15" fill="rgb(210,196,33)" fg:x="88163748" fg:w="1211792"/><text x="26.8407%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,211,792 samples, 0.37%)</title><rect x="26.5907%" y="613" width="0.3655%" height="15" fill="rgb(229,154,42)" fg:x="88163748" fg:w="1211792"/><text x="26.8407%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1,211,792 samples, 0.37%)</title><rect x="26.5907%" y="597" width="0.3655%" height="15" fill="rgb(228,114,26)" fg:x="88163748" fg:w="1211792"/><text x="26.8407%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,211,792 samples, 0.37%)</title><rect x="26.5907%" y="581" width="0.3655%" height="15" fill="rgb(208,144,1)" fg:x="88163748" fg:w="1211792"/><text x="26.8407%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,211,792 samples, 0.37%)</title><rect x="26.5907%" y="565" width="0.3655%" height="15" fill="rgb(239,112,37)" fg:x="88163748" fg:w="1211792"/><text x="26.8407%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,211,792 samples, 0.37%)</title><rect x="26.5907%" y="549" width="0.3655%" height="15" fill="rgb(210,96,50)" fg:x="88163748" fg:w="1211792"/><text x="26.8407%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,211,792 samples, 0.37%)</title><rect x="26.5907%" y="533" width="0.3655%" height="15" fill="rgb(222,178,2)" fg:x="88163748" fg:w="1211792"/><text x="26.8407%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,211,792 samples, 0.37%)</title><rect x="26.5907%" y="517" width="0.3655%" height="15" fill="rgb(226,74,18)" fg:x="88163748" fg:w="1211792"/><text x="26.8407%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,211,792 samples, 0.37%)</title><rect x="26.5907%" y="501" width="0.3655%" height="15" fill="rgb(225,67,54)" fg:x="88163748" fg:w="1211792"/><text x="26.8407%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,211,792 samples, 0.37%)</title><rect x="26.5907%" y="485" width="0.3655%" height="15" fill="rgb(251,92,32)" fg:x="88163748" fg:w="1211792"/><text x="26.8407%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1,211,792 samples, 0.37%)</title><rect x="26.5907%" y="469" width="0.3655%" height="15" fill="rgb(228,149,22)" fg:x="88163748" fg:w="1211792"/><text x="26.8407%" y="479.50"></text></g><g><title>malloc (1,211,792 samples, 0.37%)</title><rect x="26.5907%" y="453" width="0.3655%" height="15" fill="rgb(243,54,13)" fg:x="88163748" fg:w="1211792"/><text x="26.8407%" y="463.50"></text></g><g><title>[libc.so.6] (1,211,792 samples, 0.37%)</title><rect x="26.5907%" y="437" width="0.3655%" height="15" fill="rgb(243,180,28)" fg:x="88163748" fg:w="1211792"/><text x="26.8407%" y="447.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (13,683,703 samples, 4.13%)</title><rect x="23.5605%" y="661" width="4.1271%" height="15" fill="rgb(208,167,24)" fg:x="78116862" fg:w="13683703"/><text x="23.8105%" y="671.50">&lt;css..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,425,025 samples, 0.73%)</title><rect x="26.9562%" y="645" width="0.7314%" height="15" fill="rgb(245,73,45)" fg:x="89375540" fg:w="2425025"/><text x="27.2062%" y="655.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,425,025 samples, 0.73%)</title><rect x="26.9562%" y="629" width="0.7314%" height="15" fill="rgb(237,203,48)" fg:x="89375540" fg:w="2425025"/><text x="27.2062%" y="639.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,425,025 samples, 0.73%)</title><rect x="26.9562%" y="613" width="0.7314%" height="15" fill="rgb(211,197,16)" fg:x="89375540" fg:w="2425025"/><text x="27.2062%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,425,025 samples, 0.73%)</title><rect x="26.9562%" y="597" width="0.7314%" height="15" fill="rgb(243,99,51)" fg:x="89375540" fg:w="2425025"/><text x="27.2062%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,425,025 samples, 0.73%)</title><rect x="26.9562%" y="581" width="0.7314%" height="15" fill="rgb(215,123,29)" fg:x="89375540" fg:w="2425025"/><text x="27.2062%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,425,025 samples, 0.73%)</title><rect x="26.9562%" y="565" width="0.7314%" height="15" fill="rgb(239,186,37)" fg:x="89375540" fg:w="2425025"/><text x="27.2062%" y="575.50"></text></g><g><title>core::clone::Clone::clone (2,425,025 samples, 0.73%)</title><rect x="26.9562%" y="549" width="0.7314%" height="15" fill="rgb(252,136,39)" fg:x="89375540" fg:w="2425025"/><text x="27.2062%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,425,025 samples, 0.73%)</title><rect x="26.9562%" y="533" width="0.7314%" height="15" fill="rgb(223,213,32)" fg:x="89375540" fg:w="2425025"/><text x="27.2062%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,425,025 samples, 0.73%)</title><rect x="26.9562%" y="517" width="0.7314%" height="15" fill="rgb(233,115,5)" fg:x="89375540" fg:w="2425025"/><text x="27.2062%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,425,025 samples, 0.73%)</title><rect x="26.9562%" y="501" width="0.7314%" height="15" fill="rgb(207,226,44)" fg:x="89375540" fg:w="2425025"/><text x="27.2062%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2,425,025 samples, 0.73%)</title><rect x="26.9562%" y="485" width="0.7314%" height="15" fill="rgb(208,126,0)" fg:x="89375540" fg:w="2425025"/><text x="27.2062%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,425,025 samples, 0.73%)</title><rect x="26.9562%" y="469" width="0.7314%" height="15" fill="rgb(244,66,21)" fg:x="89375540" fg:w="2425025"/><text x="27.2062%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,425,025 samples, 0.73%)</title><rect x="26.9562%" y="453" width="0.7314%" height="15" fill="rgb(222,97,12)" fg:x="89375540" fg:w="2425025"/><text x="27.2062%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,425,025 samples, 0.73%)</title><rect x="26.9562%" y="437" width="0.7314%" height="15" fill="rgb(219,213,19)" fg:x="89375540" fg:w="2425025"/><text x="27.2062%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,425,025 samples, 0.73%)</title><rect x="26.9562%" y="421" width="0.7314%" height="15" fill="rgb(252,169,30)" fg:x="89375540" fg:w="2425025"/><text x="27.2062%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,425,025 samples, 0.73%)</title><rect x="26.9562%" y="405" width="0.7314%" height="15" fill="rgb(206,32,51)" fg:x="89375540" fg:w="2425025"/><text x="27.2062%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,425,025 samples, 0.73%)</title><rect x="26.9562%" y="389" width="0.7314%" height="15" fill="rgb(250,172,42)" fg:x="89375540" fg:w="2425025"/><text x="27.2062%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,425,025 samples, 0.73%)</title><rect x="26.9562%" y="373" width="0.7314%" height="15" fill="rgb(209,34,43)" fg:x="89375540" fg:w="2425025"/><text x="27.2062%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2,425,025 samples, 0.73%)</title><rect x="26.9562%" y="357" width="0.7314%" height="15" fill="rgb(223,11,35)" fg:x="89375540" fg:w="2425025"/><text x="27.2062%" y="367.50"></text></g><g><title>malloc (2,425,025 samples, 0.73%)</title><rect x="26.9562%" y="341" width="0.7314%" height="15" fill="rgb(251,219,26)" fg:x="89375540" fg:w="2425025"/><text x="27.2062%" y="351.50"></text></g><g><title>[libc.so.6] (1,190,550 samples, 0.36%)</title><rect x="27.3285%" y="325" width="0.3591%" height="15" fill="rgb(231,119,3)" fg:x="90610015" fg:w="1190550"/><text x="27.5785%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14,949,845 samples, 4.51%)</title><rect x="23.5605%" y="725" width="4.5090%" height="15" fill="rgb(216,97,11)" fg:x="78116862" fg:w="14949845"/><text x="23.8105%" y="735.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14,949,845 samples, 4.51%)</title><rect x="23.5605%" y="709" width="4.5090%" height="15" fill="rgb(223,59,9)" fg:x="78116862" fg:w="14949845"/><text x="23.8105%" y="719.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (14,949,845 samples, 4.51%)</title><rect x="23.5605%" y="693" width="4.5090%" height="15" fill="rgb(233,93,31)" fg:x="78116862" fg:w="14949845"/><text x="23.8105%" y="703.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14,949,845 samples, 4.51%)</title><rect x="23.5605%" y="677" width="4.5090%" height="15" fill="rgb(239,81,33)" fg:x="78116862" fg:w="14949845"/><text x="23.8105%" y="687.50">&lt;T as..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,266,142 samples, 0.38%)</title><rect x="27.6876%" y="661" width="0.3819%" height="15" fill="rgb(213,120,34)" fg:x="91800565" fg:w="1266142"/><text x="27.9376%" y="671.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (16,218,572 samples, 4.89%)</title><rect x="23.5605%" y="741" width="4.8916%" height="15" fill="rgb(243,49,53)" fg:x="78116862" fg:w="16218572"/><text x="23.8105%" y="751.50">&lt;css_b..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,268,727 samples, 0.38%)</title><rect x="28.0694%" y="725" width="0.3827%" height="15" fill="rgb(247,216,33)" fg:x="93066707" fg:w="1268727"/><text x="28.3194%" y="735.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,268,727 samples, 0.38%)</title><rect x="28.0694%" y="709" width="0.3827%" height="15" fill="rgb(226,26,14)" fg:x="93066707" fg:w="1268727"/><text x="28.3194%" y="719.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,268,727 samples, 0.38%)</title><rect x="28.0694%" y="693" width="0.3827%" height="15" fill="rgb(215,49,53)" fg:x="93066707" fg:w="1268727"/><text x="28.3194%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,268,727 samples, 0.38%)</title><rect x="28.0694%" y="677" width="0.3827%" height="15" fill="rgb(245,162,40)" fg:x="93066707" fg:w="1268727"/><text x="28.3194%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,268,727 samples, 0.38%)</title><rect x="28.0694%" y="661" width="0.3827%" height="15" fill="rgb(229,68,17)" fg:x="93066707" fg:w="1268727"/><text x="28.3194%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,268,727 samples, 0.38%)</title><rect x="28.0694%" y="645" width="0.3827%" height="15" fill="rgb(213,182,10)" fg:x="93066707" fg:w="1268727"/><text x="28.3194%" y="655.50"></text></g><g><title>core::clone::Clone::clone (1,268,727 samples, 0.38%)</title><rect x="28.0694%" y="629" width="0.3827%" height="15" fill="rgb(245,125,30)" fg:x="93066707" fg:w="1268727"/><text x="28.3194%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,268,727 samples, 0.38%)</title><rect x="28.0694%" y="613" width="0.3827%" height="15" fill="rgb(232,202,2)" fg:x="93066707" fg:w="1268727"/><text x="28.3194%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,268,727 samples, 0.38%)</title><rect x="28.0694%" y="597" width="0.3827%" height="15" fill="rgb(237,140,51)" fg:x="93066707" fg:w="1268727"/><text x="28.3194%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,268,727 samples, 0.38%)</title><rect x="28.0694%" y="581" width="0.3827%" height="15" fill="rgb(236,157,25)" fg:x="93066707" fg:w="1268727"/><text x="28.3194%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1,268,727 samples, 0.38%)</title><rect x="28.0694%" y="565" width="0.3827%" height="15" fill="rgb(219,209,0)" fg:x="93066707" fg:w="1268727"/><text x="28.3194%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,268,727 samples, 0.38%)</title><rect x="28.0694%" y="549" width="0.3827%" height="15" fill="rgb(240,116,54)" fg:x="93066707" fg:w="1268727"/><text x="28.3194%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,268,727 samples, 0.38%)</title><rect x="28.0694%" y="533" width="0.3827%" height="15" fill="rgb(216,10,36)" fg:x="93066707" fg:w="1268727"/><text x="28.3194%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,268,727 samples, 0.38%)</title><rect x="28.0694%" y="517" width="0.3827%" height="15" fill="rgb(222,72,44)" fg:x="93066707" fg:w="1268727"/><text x="28.3194%" y="527.50"></text></g><g><title>[libc.so.6] (1,268,727 samples, 0.38%)</title><rect x="28.0694%" y="501" width="0.3827%" height="15" fill="rgb(232,159,9)" fg:x="93066707" fg:w="1268727"/><text x="28.3194%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18,747,766 samples, 5.65%)</title><rect x="23.5605%" y="805" width="5.6544%" height="15" fill="rgb(210,39,32)" fg:x="78116862" fg:w="18747766"/><text x="23.8105%" y="815.50">&lt;alloc:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18,747,766 samples, 5.65%)</title><rect x="23.5605%" y="789" width="5.6544%" height="15" fill="rgb(216,194,45)" fg:x="78116862" fg:w="18747766"/><text x="23.8105%" y="799.50">alloc::..</text></g><g><title>alloc::slice::hack::to_vec (18,747,766 samples, 5.65%)</title><rect x="23.5605%" y="773" width="5.6544%" height="15" fill="rgb(218,18,35)" fg:x="78116862" fg:w="18747766"/><text x="23.8105%" y="783.50">alloc::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18,747,766 samples, 5.65%)</title><rect x="23.5605%" y="757" width="5.6544%" height="15" fill="rgb(207,83,51)" fg:x="78116862" fg:w="18747766"/><text x="23.8105%" y="767.50">&lt;T as a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,529,194 samples, 0.76%)</title><rect x="28.4521%" y="741" width="0.7628%" height="15" fill="rgb(225,63,43)" fg:x="94335434" fg:w="2529194"/><text x="28.7021%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,529,194 samples, 0.76%)</title><rect x="28.4521%" y="725" width="0.7628%" height="15" fill="rgb(207,57,36)" fg:x="94335434" fg:w="2529194"/><text x="28.7021%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,529,194 samples, 0.76%)</title><rect x="28.4521%" y="709" width="0.7628%" height="15" fill="rgb(216,99,33)" fg:x="94335434" fg:w="2529194"/><text x="28.7021%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,529,194 samples, 0.76%)</title><rect x="28.4521%" y="693" width="0.7628%" height="15" fill="rgb(225,42,16)" fg:x="94335434" fg:w="2529194"/><text x="28.7021%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,529,194 samples, 0.76%)</title><rect x="28.4521%" y="677" width="0.7628%" height="15" fill="rgb(220,201,45)" fg:x="94335434" fg:w="2529194"/><text x="28.7021%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,529,194 samples, 0.76%)</title><rect x="28.4521%" y="661" width="0.7628%" height="15" fill="rgb(225,33,4)" fg:x="94335434" fg:w="2529194"/><text x="28.7021%" y="671.50"></text></g><g><title>alloc::alloc::alloc (2,529,194 samples, 0.76%)</title><rect x="28.4521%" y="645" width="0.7628%" height="15" fill="rgb(224,33,50)" fg:x="94335434" fg:w="2529194"/><text x="28.7021%" y="655.50"></text></g><g><title>malloc (2,529,194 samples, 0.76%)</title><rect x="28.4521%" y="629" width="0.7628%" height="15" fill="rgb(246,198,51)" fg:x="94335434" fg:w="2529194"/><text x="28.7021%" y="639.50"></text></g><g><title>[libc.so.6] (2,529,194 samples, 0.76%)</title><rect x="28.4521%" y="613" width="0.7628%" height="15" fill="rgb(205,22,4)" fg:x="94335434" fg:w="2529194"/><text x="28.7021%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,310,797 samples, 0.40%)</title><rect x="29.2149%" y="741" width="0.3953%" height="15" fill="rgb(206,3,8)" fg:x="96864628" fg:w="1310797"/><text x="29.4649%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,310,797 samples, 0.40%)</title><rect x="29.2149%" y="725" width="0.3953%" height="15" fill="rgb(251,23,15)" fg:x="96864628" fg:w="1310797"/><text x="29.4649%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1,310,797 samples, 0.40%)</title><rect x="29.2149%" y="709" width="0.3953%" height="15" fill="rgb(252,88,28)" fg:x="96864628" fg:w="1310797"/><text x="29.4649%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,310,797 samples, 0.40%)</title><rect x="29.2149%" y="693" width="0.3953%" height="15" fill="rgb(212,127,14)" fg:x="96864628" fg:w="1310797"/><text x="29.4649%" y="703.50"></text></g><g><title>[libc.so.6] (1,310,797 samples, 0.40%)</title><rect x="29.2149%" y="677" width="0.3953%" height="15" fill="rgb(247,145,37)" fg:x="96864628" fg:w="1310797"/><text x="29.4649%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25,046,760 samples, 7.55%)</title><rect x="22.4341%" y="885" width="7.5542%" height="15" fill="rgb(209,117,53)" fg:x="74382333" fg:w="25046760"/><text x="22.6841%" y="895.50">&lt;alloc::ve..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25,046,760 samples, 7.55%)</title><rect x="22.4341%" y="869" width="7.5542%" height="15" fill="rgb(212,90,42)" fg:x="74382333" fg:w="25046760"/><text x="22.6841%" y="879.50">alloc::sli..</text></g><g><title>alloc::slice::hack::to_vec (25,046,760 samples, 7.55%)</title><rect x="22.4341%" y="853" width="7.5542%" height="15" fill="rgb(218,164,37)" fg:x="74382333" fg:w="25046760"/><text x="22.6841%" y="863.50">alloc::sli..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25,046,760 samples, 7.55%)</title><rect x="22.4341%" y="837" width="7.5542%" height="15" fill="rgb(246,65,34)" fg:x="74382333" fg:w="25046760"/><text x="22.6841%" y="847.50">&lt;T as allo..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (25,046,760 samples, 7.55%)</title><rect x="22.4341%" y="821" width="7.5542%" height="15" fill="rgb(231,100,33)" fg:x="74382333" fg:w="25046760"/><text x="22.6841%" y="831.50">&lt;css_bitve..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,564,465 samples, 0.77%)</title><rect x="29.2149%" y="805" width="0.7735%" height="15" fill="rgb(228,126,14)" fg:x="96864628" fg:w="2564465"/><text x="29.4649%" y="815.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,564,465 samples, 0.77%)</title><rect x="29.2149%" y="789" width="0.7735%" height="15" fill="rgb(215,173,21)" fg:x="96864628" fg:w="2564465"/><text x="29.4649%" y="799.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,564,465 samples, 0.77%)</title><rect x="29.2149%" y="773" width="0.7735%" height="15" fill="rgb(210,6,40)" fg:x="96864628" fg:w="2564465"/><text x="29.4649%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,564,465 samples, 0.77%)</title><rect x="29.2149%" y="757" width="0.7735%" height="15" fill="rgb(212,48,18)" fg:x="96864628" fg:w="2564465"/><text x="29.4649%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,253,668 samples, 0.38%)</title><rect x="29.6103%" y="741" width="0.3781%" height="15" fill="rgb(230,214,11)" fg:x="98175425" fg:w="1253668"/><text x="29.8603%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,253,668 samples, 0.38%)</title><rect x="29.6103%" y="725" width="0.3781%" height="15" fill="rgb(254,105,39)" fg:x="98175425" fg:w="1253668"/><text x="29.8603%" y="735.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,253,668 samples, 0.38%)</title><rect x="29.6103%" y="709" width="0.3781%" height="15" fill="rgb(245,158,5)" fg:x="98175425" fg:w="1253668"/><text x="29.8603%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,253,668 samples, 0.38%)</title><rect x="29.6103%" y="693" width="0.3781%" height="15" fill="rgb(249,208,11)" fg:x="98175425" fg:w="1253668"/><text x="29.8603%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,253,668 samples, 0.38%)</title><rect x="29.6103%" y="677" width="0.3781%" height="15" fill="rgb(210,39,28)" fg:x="98175425" fg:w="1253668"/><text x="29.8603%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1,253,668 samples, 0.38%)</title><rect x="29.6103%" y="661" width="0.3781%" height="15" fill="rgb(211,56,53)" fg:x="98175425" fg:w="1253668"/><text x="29.8603%" y="671.50"></text></g><g><title>malloc (1,253,668 samples, 0.38%)</title><rect x="29.6103%" y="645" width="0.3781%" height="15" fill="rgb(226,201,30)" fg:x="98175425" fg:w="1253668"/><text x="29.8603%" y="655.50"></text></g><g><title>[libc.so.6] (1,253,668 samples, 0.38%)</title><rect x="29.6103%" y="629" width="0.3781%" height="15" fill="rgb(239,101,34)" fg:x="98175425" fg:w="1253668"/><text x="29.8603%" y="639.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,255,009 samples, 0.38%)</title><rect x="29.9884%" y="885" width="0.3785%" height="15" fill="rgb(226,209,5)" fg:x="99429093" fg:w="1255009"/><text x="30.2384%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,255,009 samples, 0.38%)</title><rect x="29.9884%" y="869" width="0.3785%" height="15" fill="rgb(250,105,47)" fg:x="99429093" fg:w="1255009"/><text x="30.2384%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,255,009 samples, 0.38%)</title><rect x="29.9884%" y="853" width="0.3785%" height="15" fill="rgb(230,72,3)" fg:x="99429093" fg:w="1255009"/><text x="30.2384%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,255,009 samples, 0.38%)</title><rect x="29.9884%" y="837" width="0.3785%" height="15" fill="rgb(232,218,39)" fg:x="99429093" fg:w="1255009"/><text x="30.2384%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (1,255,009 samples, 0.38%)</title><rect x="29.9884%" y="821" width="0.3785%" height="15" fill="rgb(248,166,6)" fg:x="99429093" fg:w="1255009"/><text x="30.2384%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,255,009 samples, 0.38%)</title><rect x="29.9884%" y="805" width="0.3785%" height="15" fill="rgb(247,89,20)" fg:x="99429093" fg:w="1255009"/><text x="30.2384%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,255,009 samples, 0.38%)</title><rect x="29.9884%" y="789" width="0.3785%" height="15" fill="rgb(248,130,54)" fg:x="99429093" fg:w="1255009"/><text x="30.2384%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,255,009 samples, 0.38%)</title><rect x="29.9884%" y="773" width="0.3785%" height="15" fill="rgb(234,196,4)" fg:x="99429093" fg:w="1255009"/><text x="30.2384%" y="783.50"></text></g><g><title>[libc.so.6] (1,255,009 samples, 0.38%)</title><rect x="29.9884%" y="757" width="0.3785%" height="15" fill="rgb(250,143,31)" fg:x="99429093" fg:w="1255009"/><text x="30.2384%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (28,835,531 samples, 8.70%)</title><rect x="22.4341%" y="965" width="8.6970%" height="15" fill="rgb(211,110,34)" fg:x="74382333" fg:w="28835531"/><text x="22.6841%" y="975.50">&lt;alloc::vec:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28,835,531 samples, 8.70%)</title><rect x="22.4341%" y="949" width="8.6970%" height="15" fill="rgb(215,124,48)" fg:x="74382333" fg:w="28835531"/><text x="22.6841%" y="959.50">alloc::slice..</text></g><g><title>alloc::slice::hack::to_vec (28,835,531 samples, 8.70%)</title><rect x="22.4341%" y="933" width="8.6970%" height="15" fill="rgb(216,46,13)" fg:x="74382333" fg:w="28835531"/><text x="22.6841%" y="943.50">alloc::slice..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28,835,531 samples, 8.70%)</title><rect x="22.4341%" y="917" width="8.6970%" height="15" fill="rgb(205,184,25)" fg:x="74382333" fg:w="28835531"/><text x="22.6841%" y="927.50">&lt;T as alloc:..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (28,835,531 samples, 8.70%)</title><rect x="22.4341%" y="901" width="8.6970%" height="15" fill="rgb(228,1,10)" fg:x="74382333" fg:w="28835531"/><text x="22.6841%" y="911.50">&lt;css_bitvect..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,533,762 samples, 0.76%)</title><rect x="30.3669%" y="885" width="0.7642%" height="15" fill="rgb(213,116,27)" fg:x="100684102" fg:w="2533762"/><text x="30.6169%" y="895.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,533,762 samples, 0.76%)</title><rect x="30.3669%" y="869" width="0.7642%" height="15" fill="rgb(241,95,50)" fg:x="100684102" fg:w="2533762"/><text x="30.6169%" y="879.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,533,762 samples, 0.76%)</title><rect x="30.3669%" y="853" width="0.7642%" height="15" fill="rgb(238,48,32)" fg:x="100684102" fg:w="2533762"/><text x="30.6169%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,533,762 samples, 0.76%)</title><rect x="30.3669%" y="837" width="0.7642%" height="15" fill="rgb(235,113,49)" fg:x="100684102" fg:w="2533762"/><text x="30.6169%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,269,696 samples, 0.38%)</title><rect x="30.7481%" y="821" width="0.3829%" height="15" fill="rgb(205,127,43)" fg:x="101948168" fg:w="1269696"/><text x="30.9981%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,269,696 samples, 0.38%)</title><rect x="30.7481%" y="805" width="0.3829%" height="15" fill="rgb(250,162,2)" fg:x="101948168" fg:w="1269696"/><text x="30.9981%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1,269,696 samples, 0.38%)</title><rect x="30.7481%" y="789" width="0.3829%" height="15" fill="rgb(220,13,41)" fg:x="101948168" fg:w="1269696"/><text x="30.9981%" y="799.50"></text></g><g><title>core::clone::Clone::clone (1,254,855 samples, 0.38%)</title><rect x="31.1311%" y="869" width="0.3785%" height="15" fill="rgb(249,221,25)" fg:x="103217864" fg:w="1254855"/><text x="31.3811%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,254,855 samples, 0.38%)</title><rect x="31.1311%" y="853" width="0.3785%" height="15" fill="rgb(215,208,19)" fg:x="103217864" fg:w="1254855"/><text x="31.3811%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,254,855 samples, 0.38%)</title><rect x="31.1311%" y="837" width="0.3785%" height="15" fill="rgb(236,175,2)" fg:x="103217864" fg:w="1254855"/><text x="31.3811%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,254,855 samples, 0.38%)</title><rect x="31.1311%" y="821" width="0.3785%" height="15" fill="rgb(241,52,2)" fg:x="103217864" fg:w="1254855"/><text x="31.3811%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (1,254,855 samples, 0.38%)</title><rect x="31.1311%" y="805" width="0.3785%" height="15" fill="rgb(248,140,14)" fg:x="103217864" fg:w="1254855"/><text x="31.3811%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,254,855 samples, 0.38%)</title><rect x="31.1311%" y="789" width="0.3785%" height="15" fill="rgb(253,22,42)" fg:x="103217864" fg:w="1254855"/><text x="31.3811%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,254,855 samples, 0.38%)</title><rect x="31.1311%" y="773" width="0.3785%" height="15" fill="rgb(234,61,47)" fg:x="103217864" fg:w="1254855"/><text x="31.3811%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,254,855 samples, 0.38%)</title><rect x="31.1311%" y="757" width="0.3785%" height="15" fill="rgb(208,226,15)" fg:x="103217864" fg:w="1254855"/><text x="31.3811%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,254,855 samples, 0.38%)</title><rect x="31.1311%" y="741" width="0.3785%" height="15" fill="rgb(217,221,4)" fg:x="103217864" fg:w="1254855"/><text x="31.3811%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,254,855 samples, 0.38%)</title><rect x="31.1311%" y="725" width="0.3785%" height="15" fill="rgb(212,174,34)" fg:x="103217864" fg:w="1254855"/><text x="31.3811%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,254,855 samples, 0.38%)</title><rect x="31.1311%" y="709" width="0.3785%" height="15" fill="rgb(253,83,4)" fg:x="103217864" fg:w="1254855"/><text x="31.3811%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,254,855 samples, 0.38%)</title><rect x="31.1311%" y="693" width="0.3785%" height="15" fill="rgb(250,195,49)" fg:x="103217864" fg:w="1254855"/><text x="31.3811%" y="703.50"></text></g><g><title>alloc::alloc::alloc (1,254,855 samples, 0.38%)</title><rect x="31.1311%" y="677" width="0.3785%" height="15" fill="rgb(241,192,25)" fg:x="103217864" fg:w="1254855"/><text x="31.3811%" y="687.50"></text></g><g><title>malloc (1,254,855 samples, 0.38%)</title><rect x="31.1311%" y="661" width="0.3785%" height="15" fill="rgb(208,124,10)" fg:x="103217864" fg:w="1254855"/><text x="31.3811%" y="671.50"></text></g><g><title>[libc.so.6] (1,254,855 samples, 0.38%)</title><rect x="31.1311%" y="645" width="0.3785%" height="15" fill="rgb(222,33,0)" fg:x="103217864" fg:w="1254855"/><text x="31.3811%" y="655.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (31,256,783 samples, 9.43%)</title><rect x="22.4341%" y="981" width="9.4272%" height="15" fill="rgb(234,209,28)" fg:x="74382333" fg:w="31256783"/><text x="22.6841%" y="991.50">&lt;css_bitvecto..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,421,252 samples, 0.73%)</title><rect x="31.1311%" y="965" width="0.7303%" height="15" fill="rgb(224,11,23)" fg:x="103217864" fg:w="2421252"/><text x="31.3811%" y="975.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,421,252 samples, 0.73%)</title><rect x="31.1311%" y="949" width="0.7303%" height="15" fill="rgb(232,99,1)" fg:x="103217864" fg:w="2421252"/><text x="31.3811%" y="959.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,421,252 samples, 0.73%)</title><rect x="31.1311%" y="933" width="0.7303%" height="15" fill="rgb(237,95,45)" fg:x="103217864" fg:w="2421252"/><text x="31.3811%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,421,252 samples, 0.73%)</title><rect x="31.1311%" y="917" width="0.7303%" height="15" fill="rgb(208,109,11)" fg:x="103217864" fg:w="2421252"/><text x="31.3811%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,421,252 samples, 0.73%)</title><rect x="31.1311%" y="901" width="0.7303%" height="15" fill="rgb(216,190,48)" fg:x="103217864" fg:w="2421252"/><text x="31.3811%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,421,252 samples, 0.73%)</title><rect x="31.1311%" y="885" width="0.7303%" height="15" fill="rgb(251,171,36)" fg:x="103217864" fg:w="2421252"/><text x="31.3811%" y="895.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1,166,397 samples, 0.35%)</title><rect x="31.5096%" y="869" width="0.3518%" height="15" fill="rgb(230,62,22)" fg:x="104472719" fg:w="1166397"/><text x="31.7596%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1,166,397 samples, 0.35%)</title><rect x="31.5096%" y="853" width="0.3518%" height="15" fill="rgb(225,114,35)" fg:x="104472719" fg:w="1166397"/><text x="31.7596%" y="863.50"></text></g><g><title>core::ptr::write (1,166,397 samples, 0.35%)</title><rect x="31.5096%" y="837" width="0.3518%" height="15" fill="rgb(215,118,42)" fg:x="104472719" fg:w="1166397"/><text x="31.7596%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (33,742,208 samples, 10.18%)</title><rect x="22.0526%" y="1045" width="10.1768%" height="15" fill="rgb(243,119,21)" fg:x="73117314" fg:w="33742208"/><text x="22.3026%" y="1055.50">&lt;alloc::vec::Ve..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (33,742,208 samples, 10.18%)</title><rect x="22.0526%" y="1029" width="10.1768%" height="15" fill="rgb(252,177,53)" fg:x="73117314" fg:w="33742208"/><text x="22.3026%" y="1039.50">alloc::slice::&lt;..</text></g><g><title>alloc::slice::hack::to_vec (33,742,208 samples, 10.18%)</title><rect x="22.0526%" y="1013" width="10.1768%" height="15" fill="rgb(237,209,29)" fg:x="73117314" fg:w="33742208"/><text x="22.3026%" y="1023.50">alloc::slice::h..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (33,742,208 samples, 10.18%)</title><rect x="22.0526%" y="997" width="10.1768%" height="15" fill="rgb(212,65,23)" fg:x="73117314" fg:w="33742208"/><text x="22.3026%" y="1007.50">&lt;T as alloc::sl..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,220,406 samples, 0.37%)</title><rect x="31.8613%" y="981" width="0.3681%" height="15" fill="rgb(230,222,46)" fg:x="105639116" fg:w="1220406"/><text x="32.1113%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,220,406 samples, 0.37%)</title><rect x="31.8613%" y="965" width="0.3681%" height="15" fill="rgb(215,135,32)" fg:x="105639116" fg:w="1220406"/><text x="32.1113%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,220,406 samples, 0.37%)</title><rect x="31.8613%" y="949" width="0.3681%" height="15" fill="rgb(246,101,22)" fg:x="105639116" fg:w="1220406"/><text x="32.1113%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,220,406 samples, 0.37%)</title><rect x="31.8613%" y="933" width="0.3681%" height="15" fill="rgb(206,107,13)" fg:x="105639116" fg:w="1220406"/><text x="32.1113%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,220,406 samples, 0.37%)</title><rect x="31.8613%" y="917" width="0.3681%" height="15" fill="rgb(250,100,44)" fg:x="105639116" fg:w="1220406"/><text x="32.1113%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,220,406 samples, 0.37%)</title><rect x="31.8613%" y="901" width="0.3681%" height="15" fill="rgb(231,147,38)" fg:x="105639116" fg:w="1220406"/><text x="32.1113%" y="911.50"></text></g><g><title>alloc::alloc::alloc (1,220,406 samples, 0.37%)</title><rect x="31.8613%" y="885" width="0.3681%" height="15" fill="rgb(229,8,40)" fg:x="105639116" fg:w="1220406"/><text x="32.1113%" y="895.50"></text></g><g><title>malloc (1,220,406 samples, 0.37%)</title><rect x="31.8613%" y="869" width="0.3681%" height="15" fill="rgb(221,135,30)" fg:x="105639116" fg:w="1220406"/><text x="32.1113%" y="879.50"></text></g><g><title>[libc.so.6] (1,220,406 samples, 0.37%)</title><rect x="31.8613%" y="853" width="0.3681%" height="15" fill="rgb(249,193,18)" fg:x="105639116" fg:w="1220406"/><text x="32.1113%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,267,368 samples, 0.38%)</title><rect x="32.2294%" y="1045" width="0.3822%" height="15" fill="rgb(209,133,39)" fg:x="106859522" fg:w="1267368"/><text x="32.4794%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,267,368 samples, 0.38%)</title><rect x="32.2294%" y="1029" width="0.3822%" height="15" fill="rgb(232,100,14)" fg:x="106859522" fg:w="1267368"/><text x="32.4794%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,267,368 samples, 0.38%)</title><rect x="32.2294%" y="1013" width="0.3822%" height="15" fill="rgb(224,185,1)" fg:x="106859522" fg:w="1267368"/><text x="32.4794%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,267,368 samples, 0.38%)</title><rect x="32.2294%" y="997" width="0.3822%" height="15" fill="rgb(223,139,8)" fg:x="106859522" fg:w="1267368"/><text x="32.4794%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (1,267,368 samples, 0.38%)</title><rect x="32.2294%" y="981" width="0.3822%" height="15" fill="rgb(232,213,38)" fg:x="106859522" fg:w="1267368"/><text x="32.4794%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,267,368 samples, 0.38%)</title><rect x="32.2294%" y="965" width="0.3822%" height="15" fill="rgb(207,94,22)" fg:x="106859522" fg:w="1267368"/><text x="32.4794%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,267,368 samples, 0.38%)</title><rect x="32.2294%" y="949" width="0.3822%" height="15" fill="rgb(219,183,54)" fg:x="106859522" fg:w="1267368"/><text x="32.4794%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,267,368 samples, 0.38%)</title><rect x="32.2294%" y="933" width="0.3822%" height="15" fill="rgb(216,185,54)" fg:x="106859522" fg:w="1267368"/><text x="32.4794%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,267,368 samples, 0.38%)</title><rect x="32.2294%" y="917" width="0.3822%" height="15" fill="rgb(254,217,39)" fg:x="106859522" fg:w="1267368"/><text x="32.4794%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,267,368 samples, 0.38%)</title><rect x="32.2294%" y="901" width="0.3822%" height="15" fill="rgb(240,178,23)" fg:x="106859522" fg:w="1267368"/><text x="32.4794%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,267,368 samples, 0.38%)</title><rect x="32.2294%" y="885" width="0.3822%" height="15" fill="rgb(218,11,47)" fg:x="106859522" fg:w="1267368"/><text x="32.4794%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,267,368 samples, 0.38%)</title><rect x="32.2294%" y="869" width="0.3822%" height="15" fill="rgb(218,51,51)" fg:x="106859522" fg:w="1267368"/><text x="32.4794%" y="879.50"></text></g><g><title>alloc::alloc::alloc (1,267,368 samples, 0.38%)</title><rect x="32.2294%" y="853" width="0.3822%" height="15" fill="rgb(238,126,27)" fg:x="106859522" fg:w="1267368"/><text x="32.4794%" y="863.50"></text></g><g><title>malloc (1,267,368 samples, 0.38%)</title><rect x="32.2294%" y="837" width="0.3822%" height="15" fill="rgb(249,202,22)" fg:x="106859522" fg:w="1267368"/><text x="32.4794%" y="847.50"></text></g><g><title>[libc.so.6] (1,267,368 samples, 0.38%)</title><rect x="32.2294%" y="821" width="0.3822%" height="15" fill="rgb(254,195,49)" fg:x="106859522" fg:w="1267368"/><text x="32.4794%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (37,523,946 samples, 11.32%)</title><rect x="21.6733%" y="1125" width="11.3174%" height="15" fill="rgb(208,123,14)" fg:x="71859762" fg:w="37523946"/><text x="21.9233%" y="1135.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37,523,946 samples, 11.32%)</title><rect x="21.6733%" y="1109" width="11.3174%" height="15" fill="rgb(224,200,8)" fg:x="71859762" fg:w="37523946"/><text x="21.9233%" y="1119.50">alloc::slice::&lt;im..</text></g><g><title>alloc::slice::hack::to_vec (37,523,946 samples, 11.32%)</title><rect x="21.6733%" y="1093" width="11.3174%" height="15" fill="rgb(217,61,36)" fg:x="71859762" fg:w="37523946"/><text x="21.9233%" y="1103.50">alloc::slice::hac..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37,523,946 samples, 11.32%)</title><rect x="21.6733%" y="1077" width="11.3174%" height="15" fill="rgb(206,35,45)" fg:x="71859762" fg:w="37523946"/><text x="21.9233%" y="1087.50">&lt;T as alloc::slic..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (36,266,394 samples, 10.94%)</title><rect x="22.0526%" y="1061" width="10.9381%" height="15" fill="rgb(217,65,33)" fg:x="73117314" fg:w="36266394"/><text x="22.3026%" y="1071.50">&lt;css_bitvector_c..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,256,818 samples, 0.38%)</title><rect x="32.6117%" y="1045" width="0.3791%" height="15" fill="rgb(222,158,48)" fg:x="108126890" fg:w="1256818"/><text x="32.8617%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,256,818 samples, 0.38%)</title><rect x="32.6117%" y="1029" width="0.3791%" height="15" fill="rgb(254,2,54)" fg:x="108126890" fg:w="1256818"/><text x="32.8617%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,256,818 samples, 0.38%)</title><rect x="32.6117%" y="1013" width="0.3791%" height="15" fill="rgb(250,143,38)" fg:x="108126890" fg:w="1256818"/><text x="32.8617%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (1,256,818 samples, 0.38%)</title><rect x="32.6117%" y="997" width="0.3791%" height="15" fill="rgb(248,25,0)" fg:x="108126890" fg:w="1256818"/><text x="32.8617%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,256,818 samples, 0.38%)</title><rect x="32.6117%" y="981" width="0.3791%" height="15" fill="rgb(206,152,27)" fg:x="108126890" fg:w="1256818"/><text x="32.8617%" y="991.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,256,818 samples, 0.38%)</title><rect x="32.6117%" y="965" width="0.3791%" height="15" fill="rgb(240,77,30)" fg:x="108126890" fg:w="1256818"/><text x="32.8617%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,256,818 samples, 0.38%)</title><rect x="32.6117%" y="949" width="0.3791%" height="15" fill="rgb(231,5,3)" fg:x="108126890" fg:w="1256818"/><text x="32.8617%" y="959.50"></text></g><g><title>[libc.so.6] (1,256,818 samples, 0.38%)</title><rect x="32.6117%" y="933" width="0.3791%" height="15" fill="rgb(207,226,32)" fg:x="108126890" fg:w="1256818"/><text x="32.8617%" y="943.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,533,447 samples, 0.76%)</title><rect x="32.9907%" y="1125" width="0.7641%" height="15" fill="rgb(222,207,47)" fg:x="109383708" fg:w="2533447"/><text x="33.2407%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,268,805 samples, 0.38%)</title><rect x="33.3722%" y="1109" width="0.3827%" height="15" fill="rgb(229,115,45)" fg:x="110648350" fg:w="1268805"/><text x="33.6222%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,268,805 samples, 0.38%)</title><rect x="33.3722%" y="1093" width="0.3827%" height="15" fill="rgb(224,191,6)" fg:x="110648350" fg:w="1268805"/><text x="33.6222%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,268,805 samples, 0.38%)</title><rect x="33.3722%" y="1077" width="0.3827%" height="15" fill="rgb(230,227,24)" fg:x="110648350" fg:w="1268805"/><text x="33.6222%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (1,268,805 samples, 0.38%)</title><rect x="33.3722%" y="1061" width="0.3827%" height="15" fill="rgb(228,80,19)" fg:x="110648350" fg:w="1268805"/><text x="33.6222%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,268,805 samples, 0.38%)</title><rect x="33.3722%" y="1045" width="0.3827%" height="15" fill="rgb(247,229,0)" fg:x="110648350" fg:w="1268805"/><text x="33.6222%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,268,805 samples, 0.38%)</title><rect x="33.3722%" y="1029" width="0.3827%" height="15" fill="rgb(237,194,15)" fg:x="110648350" fg:w="1268805"/><text x="33.6222%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,268,805 samples, 0.38%)</title><rect x="33.3722%" y="1013" width="0.3827%" height="15" fill="rgb(219,203,20)" fg:x="110648350" fg:w="1268805"/><text x="33.6222%" y="1023.50"></text></g><g><title>[libc.so.6] (1,268,805 samples, 0.38%)</title><rect x="33.3722%" y="997" width="0.3827%" height="15" fill="rgb(234,128,8)" fg:x="110648350" fg:w="1268805"/><text x="33.6222%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (42,562,154 samples, 12.84%)</title><rect x="21.6733%" y="1205" width="12.8370%" height="15" fill="rgb(248,202,8)" fg:x="71859762" fg:w="42562154"/><text x="21.9233%" y="1215.50">&lt;alloc::vec::Vec&lt;T,..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (42,562,154 samples, 12.84%)</title><rect x="21.6733%" y="1189" width="12.8370%" height="15" fill="rgb(206,104,37)" fg:x="71859762" fg:w="42562154"/><text x="21.9233%" y="1199.50">alloc::slice::&lt;impl..</text></g><g><title>alloc::slice::hack::to_vec (42,562,154 samples, 12.84%)</title><rect x="21.6733%" y="1173" width="12.8370%" height="15" fill="rgb(223,8,27)" fg:x="71859762" fg:w="42562154"/><text x="21.9233%" y="1183.50">alloc::slice::hack:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (42,562,154 samples, 12.84%)</title><rect x="21.6733%" y="1157" width="12.8370%" height="15" fill="rgb(216,217,28)" fg:x="71859762" fg:w="42562154"/><text x="21.9233%" y="1167.50">&lt;T as alloc::slice:..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (42,562,154 samples, 12.84%)</title><rect x="21.6733%" y="1141" width="12.8370%" height="15" fill="rgb(249,199,1)" fg:x="71859762" fg:w="42562154"/><text x="21.9233%" y="1151.50">&lt;css_bitvector_comp..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,504,761 samples, 0.76%)</title><rect x="33.7548%" y="1125" width="0.7554%" height="15" fill="rgb(240,85,17)" fg:x="111917155" fg:w="2504761"/><text x="34.0048%" y="1135.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,504,761 samples, 0.76%)</title><rect x="33.7548%" y="1109" width="0.7554%" height="15" fill="rgb(206,108,45)" fg:x="111917155" fg:w="2504761"/><text x="34.0048%" y="1119.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,504,761 samples, 0.76%)</title><rect x="33.7548%" y="1093" width="0.7554%" height="15" fill="rgb(245,210,41)" fg:x="111917155" fg:w="2504761"/><text x="34.0048%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,504,761 samples, 0.76%)</title><rect x="33.7548%" y="1077" width="0.7554%" height="15" fill="rgb(206,13,37)" fg:x="111917155" fg:w="2504761"/><text x="34.0048%" y="1087.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,504,761 samples, 0.76%)</title><rect x="33.7548%" y="1061" width="0.7554%" height="15" fill="rgb(250,61,18)" fg:x="111917155" fg:w="2504761"/><text x="34.0048%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,504,761 samples, 0.76%)</title><rect x="33.7548%" y="1045" width="0.7554%" height="15" fill="rgb(235,172,48)" fg:x="111917155" fg:w="2504761"/><text x="34.0048%" y="1055.50"></text></g><g><title>core::clone::Clone::clone (2,504,761 samples, 0.76%)</title><rect x="33.7548%" y="1029" width="0.7554%" height="15" fill="rgb(249,201,17)" fg:x="111917155" fg:w="2504761"/><text x="34.0048%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,504,761 samples, 0.76%)</title><rect x="33.7548%" y="1013" width="0.7554%" height="15" fill="rgb(219,208,6)" fg:x="111917155" fg:w="2504761"/><text x="34.0048%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,504,761 samples, 0.76%)</title><rect x="33.7548%" y="997" width="0.7554%" height="15" fill="rgb(248,31,23)" fg:x="111917155" fg:w="2504761"/><text x="34.0048%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,504,761 samples, 0.76%)</title><rect x="33.7548%" y="981" width="0.7554%" height="15" fill="rgb(245,15,42)" fg:x="111917155" fg:w="2504761"/><text x="34.0048%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (2,504,761 samples, 0.76%)</title><rect x="33.7548%" y="965" width="0.7554%" height="15" fill="rgb(222,217,39)" fg:x="111917155" fg:w="2504761"/><text x="34.0048%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,504,761 samples, 0.76%)</title><rect x="33.7548%" y="949" width="0.7554%" height="15" fill="rgb(210,219,27)" fg:x="111917155" fg:w="2504761"/><text x="34.0048%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,504,761 samples, 0.76%)</title><rect x="33.7548%" y="933" width="0.7554%" height="15" fill="rgb(252,166,36)" fg:x="111917155" fg:w="2504761"/><text x="34.0048%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,504,761 samples, 0.76%)</title><rect x="33.7548%" y="917" width="0.7554%" height="15" fill="rgb(245,132,34)" fg:x="111917155" fg:w="2504761"/><text x="34.0048%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,504,761 samples, 0.76%)</title><rect x="33.7548%" y="901" width="0.7554%" height="15" fill="rgb(236,54,3)" fg:x="111917155" fg:w="2504761"/><text x="34.0048%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,504,761 samples, 0.76%)</title><rect x="33.7548%" y="885" width="0.7554%" height="15" fill="rgb(241,173,43)" fg:x="111917155" fg:w="2504761"/><text x="34.0048%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,504,761 samples, 0.76%)</title><rect x="33.7548%" y="869" width="0.7554%" height="15" fill="rgb(215,190,9)" fg:x="111917155" fg:w="2504761"/><text x="34.0048%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,504,761 samples, 0.76%)</title><rect x="33.7548%" y="853" width="0.7554%" height="15" fill="rgb(242,101,16)" fg:x="111917155" fg:w="2504761"/><text x="34.0048%" y="863.50"></text></g><g><title>alloc::alloc::alloc (2,504,761 samples, 0.76%)</title><rect x="33.7548%" y="837" width="0.7554%" height="15" fill="rgb(223,190,21)" fg:x="111917155" fg:w="2504761"/><text x="34.0048%" y="847.50"></text></g><g><title>malloc (2,504,761 samples, 0.76%)</title><rect x="33.7548%" y="821" width="0.7554%" height="15" fill="rgb(215,228,25)" fg:x="111917155" fg:w="2504761"/><text x="34.0048%" y="831.50"></text></g><g><title>[libc.so.6] (2,504,761 samples, 0.76%)</title><rect x="33.7548%" y="805" width="0.7554%" height="15" fill="rgb(225,36,22)" fg:x="111917155" fg:w="2504761"/><text x="34.0048%" y="815.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,521,322 samples, 0.76%)</title><rect x="34.5103%" y="1205" width="0.7604%" height="15" fill="rgb(251,106,46)" fg:x="114421916" fg:w="2521322"/><text x="34.7603%" y="1215.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,259,098 samples, 0.38%)</title><rect x="34.8910%" y="1189" width="0.3798%" height="15" fill="rgb(208,90,1)" fg:x="115684140" fg:w="1259098"/><text x="35.1410%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,259,098 samples, 0.38%)</title><rect x="34.8910%" y="1173" width="0.3798%" height="15" fill="rgb(243,10,4)" fg:x="115684140" fg:w="1259098"/><text x="35.1410%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,259,098 samples, 0.38%)</title><rect x="34.8910%" y="1157" width="0.3798%" height="15" fill="rgb(212,137,27)" fg:x="115684140" fg:w="1259098"/><text x="35.1410%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (1,259,098 samples, 0.38%)</title><rect x="34.8910%" y="1141" width="0.3798%" height="15" fill="rgb(231,220,49)" fg:x="115684140" fg:w="1259098"/><text x="35.1410%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,259,098 samples, 0.38%)</title><rect x="34.8910%" y="1125" width="0.3798%" height="15" fill="rgb(237,96,20)" fg:x="115684140" fg:w="1259098"/><text x="35.1410%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,259,098 samples, 0.38%)</title><rect x="34.8910%" y="1109" width="0.3798%" height="15" fill="rgb(239,229,30)" fg:x="115684140" fg:w="1259098"/><text x="35.1410%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,259,098 samples, 0.38%)</title><rect x="34.8910%" y="1093" width="0.3798%" height="15" fill="rgb(219,65,33)" fg:x="115684140" fg:w="1259098"/><text x="35.1410%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,259,098 samples, 0.38%)</title><rect x="34.8910%" y="1077" width="0.3798%" height="15" fill="rgb(243,134,7)" fg:x="115684140" fg:w="1259098"/><text x="35.1410%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,259,098 samples, 0.38%)</title><rect x="34.8910%" y="1061" width="0.3798%" height="15" fill="rgb(216,177,54)" fg:x="115684140" fg:w="1259098"/><text x="35.1410%" y="1071.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (50,088,912 samples, 15.11%)</title><rect x="20.9219%" y="1221" width="15.1071%" height="15" fill="rgb(211,160,20)" fg:x="69368532" fg:w="50088912"/><text x="21.1719%" y="1231.50">&lt;css_bitvector_compiler..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,514,206 samples, 0.76%)</title><rect x="35.2707%" y="1205" width="0.7583%" height="15" fill="rgb(239,85,39)" fg:x="116943238" fg:w="2514206"/><text x="35.5207%" y="1215.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,514,206 samples, 0.76%)</title><rect x="35.2707%" y="1189" width="0.7583%" height="15" fill="rgb(232,125,22)" fg:x="116943238" fg:w="2514206"/><text x="35.5207%" y="1199.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,514,206 samples, 0.76%)</title><rect x="35.2707%" y="1173" width="0.7583%" height="15" fill="rgb(244,57,34)" fg:x="116943238" fg:w="2514206"/><text x="35.5207%" y="1183.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,514,206 samples, 0.76%)</title><rect x="35.2707%" y="1157" width="0.7583%" height="15" fill="rgb(214,203,32)" fg:x="116943238" fg:w="2514206"/><text x="35.5207%" y="1167.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,514,206 samples, 0.76%)</title><rect x="35.2707%" y="1141" width="0.7583%" height="15" fill="rgb(207,58,43)" fg:x="116943238" fg:w="2514206"/><text x="35.5207%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,514,206 samples, 0.76%)</title><rect x="35.2707%" y="1125" width="0.7583%" height="15" fill="rgb(215,193,15)" fg:x="116943238" fg:w="2514206"/><text x="35.5207%" y="1135.50"></text></g><g><title>core::clone::Clone::clone (2,514,206 samples, 0.76%)</title><rect x="35.2707%" y="1109" width="0.7583%" height="15" fill="rgb(232,15,44)" fg:x="116943238" fg:w="2514206"/><text x="35.5207%" y="1119.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,514,206 samples, 0.76%)</title><rect x="35.2707%" y="1093" width="0.7583%" height="15" fill="rgb(212,3,48)" fg:x="116943238" fg:w="2514206"/><text x="35.5207%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,514,206 samples, 0.76%)</title><rect x="35.2707%" y="1077" width="0.7583%" height="15" fill="rgb(218,128,7)" fg:x="116943238" fg:w="2514206"/><text x="35.5207%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,514,206 samples, 0.76%)</title><rect x="35.2707%" y="1061" width="0.7583%" height="15" fill="rgb(226,216,39)" fg:x="116943238" fg:w="2514206"/><text x="35.5207%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (2,514,206 samples, 0.76%)</title><rect x="35.2707%" y="1045" width="0.7583%" height="15" fill="rgb(243,47,51)" fg:x="116943238" fg:w="2514206"/><text x="35.5207%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,514,206 samples, 0.76%)</title><rect x="35.2707%" y="1029" width="0.7583%" height="15" fill="rgb(241,183,40)" fg:x="116943238" fg:w="2514206"/><text x="35.5207%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,514,206 samples, 0.76%)</title><rect x="35.2707%" y="1013" width="0.7583%" height="15" fill="rgb(231,217,32)" fg:x="116943238" fg:w="2514206"/><text x="35.5207%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,514,206 samples, 0.76%)</title><rect x="35.2707%" y="997" width="0.7583%" height="15" fill="rgb(229,61,38)" fg:x="116943238" fg:w="2514206"/><text x="35.5207%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,514,206 samples, 0.76%)</title><rect x="35.2707%" y="981" width="0.7583%" height="15" fill="rgb(225,210,5)" fg:x="116943238" fg:w="2514206"/><text x="35.5207%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,514,206 samples, 0.76%)</title><rect x="35.2707%" y="965" width="0.7583%" height="15" fill="rgb(231,79,45)" fg:x="116943238" fg:w="2514206"/><text x="35.5207%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,514,206 samples, 0.76%)</title><rect x="35.2707%" y="949" width="0.7583%" height="15" fill="rgb(224,100,7)" fg:x="116943238" fg:w="2514206"/><text x="35.5207%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,514,206 samples, 0.76%)</title><rect x="35.2707%" y="933" width="0.7583%" height="15" fill="rgb(241,198,18)" fg:x="116943238" fg:w="2514206"/><text x="35.5207%" y="943.50"></text></g><g><title>alloc::alloc::alloc (2,514,206 samples, 0.76%)</title><rect x="35.2707%" y="917" width="0.7583%" height="15" fill="rgb(252,97,53)" fg:x="116943238" fg:w="2514206"/><text x="35.5207%" y="927.50"></text></g><g><title>malloc (2,514,206 samples, 0.76%)</title><rect x="35.2707%" y="901" width="0.7583%" height="15" fill="rgb(220,88,7)" fg:x="116943238" fg:w="2514206"/><text x="35.5207%" y="911.50"></text></g><g><title>[libc.so.6] (2,514,206 samples, 0.76%)</title><rect x="35.2707%" y="885" width="0.7583%" height="15" fill="rgb(213,176,14)" fg:x="116943238" fg:w="2514206"/><text x="35.5207%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (51,350,799 samples, 15.49%)</title><rect x="20.9219%" y="1285" width="15.4877%" height="15" fill="rgb(246,73,7)" fg:x="69368532" fg:w="51350799"/><text x="21.1719%" y="1295.50">&lt;alloc::vec::Vec&lt;T,A&gt; as..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (51,350,799 samples, 15.49%)</title><rect x="20.9219%" y="1269" width="15.4877%" height="15" fill="rgb(245,64,36)" fg:x="69368532" fg:w="51350799"/><text x="21.1719%" y="1279.50">alloc::slice::&lt;impl [T]&gt;..</text></g><g><title>alloc::slice::hack::to_vec (51,350,799 samples, 15.49%)</title><rect x="20.9219%" y="1253" width="15.4877%" height="15" fill="rgb(245,80,10)" fg:x="69368532" fg:w="51350799"/><text x="21.1719%" y="1263.50">alloc::slice::hack::to_v..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (51,350,799 samples, 15.49%)</title><rect x="20.9219%" y="1237" width="15.4877%" height="15" fill="rgb(232,107,50)" fg:x="69368532" fg:w="51350799"/><text x="21.1719%" y="1247.50">&lt;T as alloc::slice::hack..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,261,887 samples, 0.38%)</title><rect x="36.0290%" y="1221" width="0.3806%" height="15" fill="rgb(253,3,0)" fg:x="119457444" fg:w="1261887"/><text x="36.2790%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,261,887 samples, 0.38%)</title><rect x="36.0290%" y="1205" width="0.3806%" height="15" fill="rgb(212,99,53)" fg:x="119457444" fg:w="1261887"/><text x="36.2790%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,261,887 samples, 0.38%)</title><rect x="36.0290%" y="1189" width="0.3806%" height="15" fill="rgb(249,111,54)" fg:x="119457444" fg:w="1261887"/><text x="36.2790%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,261,887 samples, 0.38%)</title><rect x="36.0290%" y="1173" width="0.3806%" height="15" fill="rgb(249,55,30)" fg:x="119457444" fg:w="1261887"/><text x="36.2790%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,261,887 samples, 0.38%)</title><rect x="36.0290%" y="1157" width="0.3806%" height="15" fill="rgb(237,47,42)" fg:x="119457444" fg:w="1261887"/><text x="36.2790%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,261,887 samples, 0.38%)</title><rect x="36.0290%" y="1141" width="0.3806%" height="15" fill="rgb(211,20,18)" fg:x="119457444" fg:w="1261887"/><text x="36.2790%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (1,261,887 samples, 0.38%)</title><rect x="36.0290%" y="1125" width="0.3806%" height="15" fill="rgb(231,203,46)" fg:x="119457444" fg:w="1261887"/><text x="36.2790%" y="1135.50"></text></g><g><title>malloc (1,261,887 samples, 0.38%)</title><rect x="36.0290%" y="1109" width="0.3806%" height="15" fill="rgb(237,142,3)" fg:x="119457444" fg:w="1261887"/><text x="36.2790%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (53,769,098 samples, 16.22%)</title><rect x="20.9219%" y="1365" width="16.2171%" height="15" fill="rgb(241,107,1)" fg:x="69368532" fg:w="53769098"/><text x="21.1719%" y="1375.50">&lt;alloc::vec::Vec&lt;T,A&gt; as ..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (53,769,098 samples, 16.22%)</title><rect x="20.9219%" y="1349" width="16.2171%" height="15" fill="rgb(229,83,13)" fg:x="69368532" fg:w="53769098"/><text x="21.1719%" y="1359.50">alloc::slice::&lt;impl [T]&gt;:..</text></g><g><title>alloc::slice::hack::to_vec (53,769,098 samples, 16.22%)</title><rect x="20.9219%" y="1333" width="16.2171%" height="15" fill="rgb(241,91,40)" fg:x="69368532" fg:w="53769098"/><text x="21.1719%" y="1343.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (53,769,098 samples, 16.22%)</title><rect x="20.9219%" y="1317" width="16.2171%" height="15" fill="rgb(225,3,45)" fg:x="69368532" fg:w="53769098"/><text x="21.1719%" y="1327.50">&lt;T as alloc::slice::hack:..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (53,769,098 samples, 16.22%)</title><rect x="20.9219%" y="1301" width="16.2171%" height="15" fill="rgb(244,223,14)" fg:x="69368532" fg:w="53769098"/><text x="21.1719%" y="1311.50">&lt;css_bitvector_compiler::..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,418,299 samples, 0.73%)</title><rect x="36.4096%" y="1285" width="0.7294%" height="15" fill="rgb(224,124,37)" fg:x="120719331" fg:w="2418299"/><text x="36.6596%" y="1295.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,418,299 samples, 0.73%)</title><rect x="36.4096%" y="1269" width="0.7294%" height="15" fill="rgb(251,171,30)" fg:x="120719331" fg:w="2418299"/><text x="36.6596%" y="1279.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,263,747 samples, 0.38%)</title><rect x="36.7578%" y="1253" width="0.3812%" height="15" fill="rgb(236,46,54)" fg:x="121873883" fg:w="1263747"/><text x="37.0078%" y="1263.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,263,747 samples, 0.38%)</title><rect x="36.7578%" y="1237" width="0.3812%" height="15" fill="rgb(245,213,5)" fg:x="121873883" fg:w="1263747"/><text x="37.0078%" y="1247.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,263,747 samples, 0.38%)</title><rect x="36.7578%" y="1221" width="0.3812%" height="15" fill="rgb(230,144,27)" fg:x="121873883" fg:w="1263747"/><text x="37.0078%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,263,747 samples, 0.38%)</title><rect x="36.7578%" y="1205" width="0.3812%" height="15" fill="rgb(220,86,6)" fg:x="121873883" fg:w="1263747"/><text x="37.0078%" y="1215.50"></text></g><g><title>core::clone::Clone::clone (1,263,747 samples, 0.38%)</title><rect x="36.7578%" y="1189" width="0.3812%" height="15" fill="rgb(240,20,13)" fg:x="121873883" fg:w="1263747"/><text x="37.0078%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,263,747 samples, 0.38%)</title><rect x="36.7578%" y="1173" width="0.3812%" height="15" fill="rgb(217,89,34)" fg:x="121873883" fg:w="1263747"/><text x="37.0078%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,263,747 samples, 0.38%)</title><rect x="36.7578%" y="1157" width="0.3812%" height="15" fill="rgb(229,13,5)" fg:x="121873883" fg:w="1263747"/><text x="37.0078%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,263,747 samples, 0.38%)</title><rect x="36.7578%" y="1141" width="0.3812%" height="15" fill="rgb(244,67,35)" fg:x="121873883" fg:w="1263747"/><text x="37.0078%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (1,263,747 samples, 0.38%)</title><rect x="36.7578%" y="1125" width="0.3812%" height="15" fill="rgb(221,40,2)" fg:x="121873883" fg:w="1263747"/><text x="37.0078%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,263,747 samples, 0.38%)</title><rect x="36.7578%" y="1109" width="0.3812%" height="15" fill="rgb(237,157,21)" fg:x="121873883" fg:w="1263747"/><text x="37.0078%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,263,747 samples, 0.38%)</title><rect x="36.7578%" y="1093" width="0.3812%" height="15" fill="rgb(222,94,11)" fg:x="121873883" fg:w="1263747"/><text x="37.0078%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,263,747 samples, 0.38%)</title><rect x="36.7578%" y="1077" width="0.3812%" height="15" fill="rgb(249,113,6)" fg:x="121873883" fg:w="1263747"/><text x="37.0078%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,263,747 samples, 0.38%)</title><rect x="36.7578%" y="1061" width="0.3812%" height="15" fill="rgb(238,137,36)" fg:x="121873883" fg:w="1263747"/><text x="37.0078%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,263,747 samples, 0.38%)</title><rect x="36.7578%" y="1045" width="0.3812%" height="15" fill="rgb(210,102,26)" fg:x="121873883" fg:w="1263747"/><text x="37.0078%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,263,747 samples, 0.38%)</title><rect x="36.7578%" y="1029" width="0.3812%" height="15" fill="rgb(218,30,30)" fg:x="121873883" fg:w="1263747"/><text x="37.0078%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,263,747 samples, 0.38%)</title><rect x="36.7578%" y="1013" width="0.3812%" height="15" fill="rgb(214,67,26)" fg:x="121873883" fg:w="1263747"/><text x="37.0078%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (1,263,747 samples, 0.38%)</title><rect x="36.7578%" y="997" width="0.3812%" height="15" fill="rgb(251,9,53)" fg:x="121873883" fg:w="1263747"/><text x="37.0078%" y="1007.50"></text></g><g><title>malloc (1,263,747 samples, 0.38%)</title><rect x="36.7578%" y="981" width="0.3812%" height="15" fill="rgb(228,204,25)" fg:x="121873883" fg:w="1263747"/><text x="37.0078%" y="991.50"></text></g><g><title>[libc.so.6] (1,263,747 samples, 0.38%)</title><rect x="36.7578%" y="965" width="0.3812%" height="15" fill="rgb(207,153,8)" fg:x="121873883" fg:w="1263747"/><text x="37.0078%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,784,944 samples, 1.14%)</title><rect x="37.1390%" y="1365" width="1.1416%" height="15" fill="rgb(242,9,16)" fg:x="123137630" fg:w="3784944"/><text x="37.3890%" y="1375.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,248,793 samples, 0.38%)</title><rect x="37.9039%" y="1349" width="0.3766%" height="15" fill="rgb(217,211,10)" fg:x="125673781" fg:w="1248793"/><text x="38.1539%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,248,793 samples, 0.38%)</title><rect x="37.9039%" y="1333" width="0.3766%" height="15" fill="rgb(219,228,52)" fg:x="125673781" fg:w="1248793"/><text x="38.1539%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,248,793 samples, 0.38%)</title><rect x="37.9039%" y="1317" width="0.3766%" height="15" fill="rgb(231,92,29)" fg:x="125673781" fg:w="1248793"/><text x="38.1539%" y="1327.50"></text></g><g><title>alloc::slice::hack::to_vec (1,248,793 samples, 0.38%)</title><rect x="37.9039%" y="1301" width="0.3766%" height="15" fill="rgb(232,8,23)" fg:x="125673781" fg:w="1248793"/><text x="38.1539%" y="1311.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,248,793 samples, 0.38%)</title><rect x="37.9039%" y="1285" width="0.3766%" height="15" fill="rgb(216,211,34)" fg:x="125673781" fg:w="1248793"/><text x="38.1539%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,248,793 samples, 0.38%)</title><rect x="37.9039%" y="1269" width="0.3766%" height="15" fill="rgb(236,151,0)" fg:x="125673781" fg:w="1248793"/><text x="38.1539%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,248,793 samples, 0.38%)</title><rect x="37.9039%" y="1253" width="0.3766%" height="15" fill="rgb(209,168,3)" fg:x="125673781" fg:w="1248793"/><text x="38.1539%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,248,793 samples, 0.38%)</title><rect x="37.9039%" y="1237" width="0.3766%" height="15" fill="rgb(208,129,28)" fg:x="125673781" fg:w="1248793"/><text x="38.1539%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,248,793 samples, 0.38%)</title><rect x="37.9039%" y="1221" width="0.3766%" height="15" fill="rgb(229,78,22)" fg:x="125673781" fg:w="1248793"/><text x="38.1539%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,248,793 samples, 0.38%)</title><rect x="37.9039%" y="1205" width="0.3766%" height="15" fill="rgb(228,187,13)" fg:x="125673781" fg:w="1248793"/><text x="38.1539%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,248,793 samples, 0.38%)</title><rect x="37.9039%" y="1189" width="0.3766%" height="15" fill="rgb(240,119,24)" fg:x="125673781" fg:w="1248793"/><text x="38.1539%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (1,248,793 samples, 0.38%)</title><rect x="37.9039%" y="1173" width="0.3766%" height="15" fill="rgb(209,194,42)" fg:x="125673781" fg:w="1248793"/><text x="38.1539%" y="1183.50"></text></g><g><title>malloc (1,248,793 samples, 0.38%)</title><rect x="37.9039%" y="1157" width="0.3766%" height="15" fill="rgb(247,200,46)" fg:x="125673781" fg:w="1248793"/><text x="38.1539%" y="1167.50"></text></g><g><title>[libc.so.6] (1,248,793 samples, 0.38%)</title><rect x="37.9039%" y="1141" width="0.3766%" height="15" fill="rgb(218,76,16)" fg:x="125673781" fg:w="1248793"/><text x="38.1539%" y="1151.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,520,179 samples, 0.76%)</title><rect x="38.2806%" y="1365" width="0.7601%" height="15" fill="rgb(225,21,48)" fg:x="126922574" fg:w="2520179"/><text x="38.5306%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,520,179 samples, 0.76%)</title><rect x="38.2806%" y="1349" width="0.7601%" height="15" fill="rgb(239,223,50)" fg:x="126922574" fg:w="2520179"/><text x="38.5306%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,520,179 samples, 0.76%)</title><rect x="38.2806%" y="1333" width="0.7601%" height="15" fill="rgb(244,45,21)" fg:x="126922574" fg:w="2520179"/><text x="38.5306%" y="1343.50"></text></g><g><title>alloc::slice::hack::to_vec (2,520,179 samples, 0.76%)</title><rect x="38.2806%" y="1317" width="0.7601%" height="15" fill="rgb(232,33,43)" fg:x="126922574" fg:w="2520179"/><text x="38.5306%" y="1327.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,520,179 samples, 0.76%)</title><rect x="38.2806%" y="1301" width="0.7601%" height="15" fill="rgb(209,8,3)" fg:x="126922574" fg:w="2520179"/><text x="38.5306%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,520,179 samples, 0.76%)</title><rect x="38.2806%" y="1285" width="0.7601%" height="15" fill="rgb(214,25,53)" fg:x="126922574" fg:w="2520179"/><text x="38.5306%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,520,179 samples, 0.76%)</title><rect x="38.2806%" y="1269" width="0.7601%" height="15" fill="rgb(254,186,54)" fg:x="126922574" fg:w="2520179"/><text x="38.5306%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,520,179 samples, 0.76%)</title><rect x="38.2806%" y="1253" width="0.7601%" height="15" fill="rgb(208,174,49)" fg:x="126922574" fg:w="2520179"/><text x="38.5306%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,520,179 samples, 0.76%)</title><rect x="38.2806%" y="1237" width="0.7601%" height="15" fill="rgb(233,191,51)" fg:x="126922574" fg:w="2520179"/><text x="38.5306%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,520,179 samples, 0.76%)</title><rect x="38.2806%" y="1221" width="0.7601%" height="15" fill="rgb(222,134,10)" fg:x="126922574" fg:w="2520179"/><text x="38.5306%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,520,179 samples, 0.76%)</title><rect x="38.2806%" y="1205" width="0.7601%" height="15" fill="rgb(230,226,20)" fg:x="126922574" fg:w="2520179"/><text x="38.5306%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (2,520,179 samples, 0.76%)</title><rect x="38.2806%" y="1189" width="0.7601%" height="15" fill="rgb(251,111,25)" fg:x="126922574" fg:w="2520179"/><text x="38.5306%" y="1199.50"></text></g><g><title>malloc (2,520,179 samples, 0.76%)</title><rect x="38.2806%" y="1173" width="0.7601%" height="15" fill="rgb(224,40,46)" fg:x="126922574" fg:w="2520179"/><text x="38.5306%" y="1183.50"></text></g><g><title>[libc.so.6] (1,258,743 samples, 0.38%)</title><rect x="38.6610%" y="1157" width="0.3796%" height="15" fill="rgb(236,108,47)" fg:x="128184010" fg:w="1258743"/><text x="38.9110%" y="1167.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,778,873 samples, 1.14%)</title><rect x="39.0407%" y="1301" width="1.1397%" height="15" fill="rgb(234,93,0)" fg:x="129442753" fg:w="3778873"/><text x="39.2907%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,778,873 samples, 1.14%)</title><rect x="39.0407%" y="1285" width="1.1397%" height="15" fill="rgb(224,213,32)" fg:x="129442753" fg:w="3778873"/><text x="39.2907%" y="1295.50"></text></g><g><title>core::clone::Clone::clone (3,778,873 samples, 1.14%)</title><rect x="39.0407%" y="1269" width="1.1397%" height="15" fill="rgb(251,11,48)" fg:x="129442753" fg:w="3778873"/><text x="39.2907%" y="1279.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,778,873 samples, 1.14%)</title><rect x="39.0407%" y="1253" width="1.1397%" height="15" fill="rgb(236,173,5)" fg:x="129442753" fg:w="3778873"/><text x="39.2907%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,778,873 samples, 1.14%)</title><rect x="39.0407%" y="1237" width="1.1397%" height="15" fill="rgb(230,95,12)" fg:x="129442753" fg:w="3778873"/><text x="39.2907%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,778,873 samples, 1.14%)</title><rect x="39.0407%" y="1221" width="1.1397%" height="15" fill="rgb(232,209,1)" fg:x="129442753" fg:w="3778873"/><text x="39.2907%" y="1231.50"></text></g><g><title>alloc::slice::hack::to_vec (3,778,873 samples, 1.14%)</title><rect x="39.0407%" y="1205" width="1.1397%" height="15" fill="rgb(232,6,1)" fg:x="129442753" fg:w="3778873"/><text x="39.2907%" y="1215.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,778,873 samples, 1.14%)</title><rect x="39.0407%" y="1189" width="1.1397%" height="15" fill="rgb(210,224,50)" fg:x="129442753" fg:w="3778873"/><text x="39.2907%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,778,873 samples, 1.14%)</title><rect x="39.0407%" y="1173" width="1.1397%" height="15" fill="rgb(228,127,35)" fg:x="129442753" fg:w="3778873"/><text x="39.2907%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,778,873 samples, 1.14%)</title><rect x="39.0407%" y="1157" width="1.1397%" height="15" fill="rgb(245,102,45)" fg:x="129442753" fg:w="3778873"/><text x="39.2907%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,778,873 samples, 1.14%)</title><rect x="39.0407%" y="1141" width="1.1397%" height="15" fill="rgb(214,1,49)" fg:x="129442753" fg:w="3778873"/><text x="39.2907%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,778,873 samples, 1.14%)</title><rect x="39.0407%" y="1125" width="1.1397%" height="15" fill="rgb(226,163,40)" fg:x="129442753" fg:w="3778873"/><text x="39.2907%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,778,873 samples, 1.14%)</title><rect x="39.0407%" y="1109" width="1.1397%" height="15" fill="rgb(239,212,28)" fg:x="129442753" fg:w="3778873"/><text x="39.2907%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,778,873 samples, 1.14%)</title><rect x="39.0407%" y="1093" width="1.1397%" height="15" fill="rgb(220,20,13)" fg:x="129442753" fg:w="3778873"/><text x="39.2907%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (3,778,873 samples, 1.14%)</title><rect x="39.0407%" y="1077" width="1.1397%" height="15" fill="rgb(210,164,35)" fg:x="129442753" fg:w="3778873"/><text x="39.2907%" y="1087.50"></text></g><g><title>malloc (3,778,873 samples, 1.14%)</title><rect x="39.0407%" y="1061" width="1.1397%" height="15" fill="rgb(248,109,41)" fg:x="129442753" fg:w="3778873"/><text x="39.2907%" y="1071.50"></text></g><g><title>[libc.so.6] (1,259,802 samples, 0.38%)</title><rect x="39.8004%" y="1045" width="0.3800%" height="15" fill="rgb(238,23,50)" fg:x="131961824" fg:w="1259802"/><text x="40.0504%" y="1055.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (68,903,516 samples, 20.78%)</title><rect x="19.7823%" y="1381" width="20.7817%" height="15" fill="rgb(211,48,49)" fg:x="65589801" fg:w="68903516"/><text x="20.0323%" y="1391.50">&lt;css_bitvector_compiler::HtmlNode..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (5,050,564 samples, 1.52%)</title><rect x="39.0407%" y="1365" width="1.5233%" height="15" fill="rgb(223,36,21)" fg:x="129442753" fg:w="5050564"/><text x="39.2907%" y="1375.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (5,050,564 samples, 1.52%)</title><rect x="39.0407%" y="1349" width="1.5233%" height="15" fill="rgb(207,123,46)" fg:x="129442753" fg:w="5050564"/><text x="39.2907%" y="1359.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5,050,564 samples, 1.52%)</title><rect x="39.0407%" y="1333" width="1.5233%" height="15" fill="rgb(240,218,32)" fg:x="129442753" fg:w="5050564"/><text x="39.2907%" y="1343.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,050,564 samples, 1.52%)</title><rect x="39.0407%" y="1317" width="1.5233%" height="15" fill="rgb(252,5,43)" fg:x="129442753" fg:w="5050564"/><text x="39.2907%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,271,691 samples, 0.38%)</title><rect x="40.1804%" y="1301" width="0.3835%" height="15" fill="rgb(252,84,19)" fg:x="133221626" fg:w="1271691"/><text x="40.4304%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,271,691 samples, 0.38%)</title><rect x="40.1804%" y="1285" width="0.3835%" height="15" fill="rgb(243,152,39)" fg:x="133221626" fg:w="1271691"/><text x="40.4304%" y="1295.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,271,691 samples, 0.38%)</title><rect x="40.1804%" y="1269" width="0.3835%" height="15" fill="rgb(234,160,15)" fg:x="133221626" fg:w="1271691"/><text x="40.4304%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,271,691 samples, 0.38%)</title><rect x="40.1804%" y="1253" width="0.3835%" height="15" fill="rgb(237,34,20)" fg:x="133221626" fg:w="1271691"/><text x="40.4304%" y="1263.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,271,691 samples, 0.38%)</title><rect x="40.1804%" y="1237" width="0.3835%" height="15" fill="rgb(229,97,13)" fg:x="133221626" fg:w="1271691"/><text x="40.4304%" y="1247.50"></text></g><g><title>alloc::alloc::alloc (1,271,691 samples, 0.38%)</title><rect x="40.1804%" y="1221" width="0.3835%" height="15" fill="rgb(234,71,50)" fg:x="133221626" fg:w="1271691"/><text x="40.4304%" y="1231.50"></text></g><g><title>malloc (1,271,691 samples, 0.38%)</title><rect x="40.1804%" y="1205" width="0.3835%" height="15" fill="rgb(253,155,4)" fg:x="133221626" fg:w="1271691"/><text x="40.4304%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (70,041,986 samples, 21.13%)</title><rect x="19.7823%" y="1445" width="21.1251%" height="15" fill="rgb(222,185,37)" fg:x="65589801" fg:w="70041986"/><text x="20.0323%" y="1455.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::cl..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (70,041,986 samples, 21.13%)</title><rect x="19.7823%" y="1429" width="21.1251%" height="15" fill="rgb(251,177,13)" fg:x="65589801" fg:w="70041986"/><text x="20.0323%" y="1439.50">alloc::slice::&lt;impl [T]&gt;::to_vec_..</text></g><g><title>alloc::slice::hack::to_vec (70,041,986 samples, 21.13%)</title><rect x="19.7823%" y="1413" width="21.1251%" height="15" fill="rgb(250,179,40)" fg:x="65589801" fg:w="70041986"/><text x="20.0323%" y="1423.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (70,041,986 samples, 21.13%)</title><rect x="19.7823%" y="1397" width="21.1251%" height="15" fill="rgb(242,44,2)" fg:x="65589801" fg:w="70041986"/><text x="20.0323%" y="1407.50">&lt;T as alloc::slice::hack::Convert..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,138,470 samples, 0.34%)</title><rect x="40.5639%" y="1381" width="0.3434%" height="15" fill="rgb(216,177,13)" fg:x="134493317" fg:w="1138470"/><text x="40.8139%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,138,470 samples, 0.34%)</title><rect x="40.5639%" y="1365" width="0.3434%" height="15" fill="rgb(216,106,43)" fg:x="134493317" fg:w="1138470"/><text x="40.8139%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,138,470 samples, 0.34%)</title><rect x="40.5639%" y="1349" width="0.3434%" height="15" fill="rgb(216,183,2)" fg:x="134493317" fg:w="1138470"/><text x="40.8139%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,138,470 samples, 0.34%)</title><rect x="40.5639%" y="1333" width="0.3434%" height="15" fill="rgb(249,75,3)" fg:x="134493317" fg:w="1138470"/><text x="40.8139%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,138,470 samples, 0.34%)</title><rect x="40.5639%" y="1317" width="0.3434%" height="15" fill="rgb(219,67,39)" fg:x="134493317" fg:w="1138470"/><text x="40.8139%" y="1327.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,138,470 samples, 0.34%)</title><rect x="40.5639%" y="1301" width="0.3434%" height="15" fill="rgb(253,228,2)" fg:x="134493317" fg:w="1138470"/><text x="40.8139%" y="1311.50"></text></g><g><title>alloc::alloc::alloc (1,138,470 samples, 0.34%)</title><rect x="40.5639%" y="1285" width="0.3434%" height="15" fill="rgb(235,138,27)" fg:x="134493317" fg:w="1138470"/><text x="40.8139%" y="1295.50"></text></g><g><title>malloc (1,138,470 samples, 0.34%)</title><rect x="40.5639%" y="1269" width="0.3434%" height="15" fill="rgb(236,97,51)" fg:x="134493317" fg:w="1138470"/><text x="40.8139%" y="1279.50"></text></g><g><title>[libc.so.6] (1,138,470 samples, 0.34%)</title><rect x="40.5639%" y="1253" width="0.3434%" height="15" fill="rgb(240,80,30)" fg:x="134493317" fg:w="1138470"/><text x="40.8139%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,069,117 samples, 1.83%)</title><rect x="40.9073%" y="1349" width="1.8305%" height="15" fill="rgb(230,178,19)" fg:x="135631787" fg:w="6069117"/><text x="41.1573%" y="1359.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,069,117 samples, 1.83%)</title><rect x="40.9073%" y="1333" width="1.8305%" height="15" fill="rgb(210,190,27)" fg:x="135631787" fg:w="6069117"/><text x="41.1573%" y="1343.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,069,117 samples, 1.83%)</title><rect x="40.9073%" y="1317" width="1.8305%" height="15" fill="rgb(222,107,31)" fg:x="135631787" fg:w="6069117"/><text x="41.1573%" y="1327.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,069,117 samples, 1.83%)</title><rect x="40.9073%" y="1301" width="1.8305%" height="15" fill="rgb(216,127,34)" fg:x="135631787" fg:w="6069117"/><text x="41.1573%" y="1311.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,069,117 samples, 1.83%)</title><rect x="40.9073%" y="1285" width="1.8305%" height="15" fill="rgb(234,116,52)" fg:x="135631787" fg:w="6069117"/><text x="41.1573%" y="1295.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (6,069,117 samples, 1.83%)</title><rect x="40.9073%" y="1269" width="1.8305%" height="15" fill="rgb(222,124,15)" fg:x="135631787" fg:w="6069117"/><text x="41.1573%" y="1279.50">a..</text></g><g><title>alloc::alloc::alloc (6,069,117 samples, 1.83%)</title><rect x="40.9073%" y="1253" width="1.8305%" height="15" fill="rgb(231,179,28)" fg:x="135631787" fg:w="6069117"/><text x="41.1573%" y="1263.50">a..</text></g><g><title>malloc (6,069,117 samples, 1.83%)</title><rect x="40.9073%" y="1237" width="1.8305%" height="15" fill="rgb(226,93,45)" fg:x="135631787" fg:w="6069117"/><text x="41.1573%" y="1247.50">m..</text></g><g><title>[libc.so.6] (3,550,991 samples, 1.07%)</title><rect x="41.6668%" y="1221" width="1.0710%" height="15" fill="rgb(215,8,51)" fg:x="138149913" fg:w="3550991"/><text x="41.9168%" y="1231.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (9,846,508 samples, 2.97%)</title><rect x="40.9073%" y="1445" width="2.9698%" height="15" fill="rgb(223,106,5)" fg:x="135631787" fg:w="9846508"/><text x="41.1573%" y="1455.50">&lt;co..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9,846,508 samples, 2.97%)</title><rect x="40.9073%" y="1429" width="2.9698%" height="15" fill="rgb(250,191,5)" fg:x="135631787" fg:w="9846508"/><text x="41.1573%" y="1439.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,846,508 samples, 2.97%)</title><rect x="40.9073%" y="1413" width="2.9698%" height="15" fill="rgb(242,132,44)" fg:x="135631787" fg:w="9846508"/><text x="41.1573%" y="1423.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,846,508 samples, 2.97%)</title><rect x="40.9073%" y="1397" width="2.9698%" height="15" fill="rgb(251,152,29)" fg:x="135631787" fg:w="9846508"/><text x="41.1573%" y="1407.50">all..</text></g><g><title>alloc::slice::hack::to_vec (9,846,508 samples, 2.97%)</title><rect x="40.9073%" y="1381" width="2.9698%" height="15" fill="rgb(218,179,5)" fg:x="135631787" fg:w="9846508"/><text x="41.1573%" y="1391.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,846,508 samples, 2.97%)</title><rect x="40.9073%" y="1365" width="2.9698%" height="15" fill="rgb(227,67,19)" fg:x="135631787" fg:w="9846508"/><text x="41.1573%" y="1375.50">&lt;T ..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,777,391 samples, 1.14%)</title><rect x="42.7378%" y="1349" width="1.1393%" height="15" fill="rgb(233,119,31)" fg:x="141700904" fg:w="3777391"/><text x="42.9878%" y="1359.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,777,391 samples, 1.14%)</title><rect x="42.7378%" y="1333" width="1.1393%" height="15" fill="rgb(241,120,22)" fg:x="141700904" fg:w="3777391"/><text x="42.9878%" y="1343.50"></text></g><g><title>[libc.so.6] (3,777,391 samples, 1.14%)</title><rect x="42.7378%" y="1317" width="1.1393%" height="15" fill="rgb(224,102,30)" fg:x="141700904" fg:w="3777391"/><text x="42.9878%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,034,265 samples, 1.52%)</title><rect x="43.8771%" y="1365" width="1.5184%" height="15" fill="rgb(210,164,37)" fg:x="145478295" fg:w="5034265"/><text x="44.1271%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,034,265 samples, 1.52%)</title><rect x="43.8771%" y="1349" width="1.5184%" height="15" fill="rgb(226,191,16)" fg:x="145478295" fg:w="5034265"/><text x="44.1271%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,034,265 samples, 1.52%)</title><rect x="43.8771%" y="1333" width="1.5184%" height="15" fill="rgb(214,40,45)" fg:x="145478295" fg:w="5034265"/><text x="44.1271%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,034,265 samples, 1.52%)</title><rect x="43.8771%" y="1317" width="1.5184%" height="15" fill="rgb(244,29,26)" fg:x="145478295" fg:w="5034265"/><text x="44.1271%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,034,265 samples, 1.52%)</title><rect x="43.8771%" y="1301" width="1.5184%" height="15" fill="rgb(216,16,5)" fg:x="145478295" fg:w="5034265"/><text x="44.1271%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,034,265 samples, 1.52%)</title><rect x="43.8771%" y="1285" width="1.5184%" height="15" fill="rgb(249,76,35)" fg:x="145478295" fg:w="5034265"/><text x="44.1271%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (5,034,265 samples, 1.52%)</title><rect x="43.8771%" y="1269" width="1.5184%" height="15" fill="rgb(207,11,44)" fg:x="145478295" fg:w="5034265"/><text x="44.1271%" y="1279.50"></text></g><g><title>malloc (5,034,265 samples, 1.52%)</title><rect x="43.8771%" y="1253" width="1.5184%" height="15" fill="rgb(228,190,49)" fg:x="145478295" fg:w="5034265"/><text x="44.1271%" y="1263.50"></text></g><g><title>[libc.so.6] (2,490,758 samples, 0.75%)</title><rect x="44.6442%" y="1237" width="0.7512%" height="15" fill="rgb(214,173,12)" fg:x="148021802" fg:w="2490758"/><text x="44.8942%" y="1247.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (7,519,577 samples, 2.27%)</title><rect x="43.8771%" y="1445" width="2.2679%" height="15" fill="rgb(218,26,35)" fg:x="145478295" fg:w="7519577"/><text x="44.1271%" y="1455.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,519,577 samples, 2.27%)</title><rect x="43.8771%" y="1429" width="2.2679%" height="15" fill="rgb(220,200,19)" fg:x="145478295" fg:w="7519577"/><text x="44.1271%" y="1439.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,519,577 samples, 2.27%)</title><rect x="43.8771%" y="1413" width="2.2679%" height="15" fill="rgb(239,95,49)" fg:x="145478295" fg:w="7519577"/><text x="44.1271%" y="1423.50">a..</text></g><g><title>alloc::slice::hack::to_vec (7,519,577 samples, 2.27%)</title><rect x="43.8771%" y="1397" width="2.2679%" height="15" fill="rgb(235,85,53)" fg:x="145478295" fg:w="7519577"/><text x="44.1271%" y="1407.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,519,577 samples, 2.27%)</title><rect x="43.8771%" y="1381" width="2.2679%" height="15" fill="rgb(233,133,31)" fg:x="145478295" fg:w="7519577"/><text x="44.1271%" y="1391.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,485,312 samples, 0.75%)</title><rect x="45.3954%" y="1365" width="0.7496%" height="15" fill="rgb(218,25,20)" fg:x="150512560" fg:w="2485312"/><text x="45.6454%" y="1375.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,485,312 samples, 0.75%)</title><rect x="45.3954%" y="1349" width="0.7496%" height="15" fill="rgb(252,210,38)" fg:x="150512560" fg:w="2485312"/><text x="45.6454%" y="1359.50"></text></g><g><title>[libc.so.6] (1,236,777 samples, 0.37%)</title><rect x="45.7720%" y="1333" width="0.3730%" height="15" fill="rgb(242,134,21)" fg:x="151761095" fg:w="1236777"/><text x="46.0220%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (93,726,832 samples, 28.27%)</title><rect x="18.6358%" y="1525" width="28.2685%" height="15" fill="rgb(213,28,48)" fg:x="61788572" fg:w="93726832"/><text x="18.8858%" y="1535.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (93,726,832 samples, 28.27%)</title><rect x="18.6358%" y="1509" width="28.2685%" height="15" fill="rgb(250,196,2)" fg:x="61788572" fg:w="93726832"/><text x="18.8858%" y="1519.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (93,726,832 samples, 28.27%)</title><rect x="18.6358%" y="1493" width="28.2685%" height="15" fill="rgb(227,5,17)" fg:x="61788572" fg:w="93726832"/><text x="18.8858%" y="1503.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (93,726,832 samples, 28.27%)</title><rect x="18.6358%" y="1477" width="28.2685%" height="15" fill="rgb(221,226,24)" fg:x="61788572" fg:w="93726832"/><text x="18.8858%" y="1487.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (92,452,161 samples, 27.88%)</title><rect x="19.0202%" y="1461" width="27.8841%" height="15" fill="rgb(211,5,48)" fg:x="63063243" fg:w="92452161"/><text x="19.2702%" y="1471.50">&lt;css_bitvector_compiler::HtmlNode as core::cl..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,517,532 samples, 0.76%)</title><rect x="46.1450%" y="1445" width="0.7593%" height="15" fill="rgb(219,150,6)" fg:x="152997872" fg:w="2517532"/><text x="46.3950%" y="1455.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,517,532 samples, 0.76%)</title><rect x="46.1450%" y="1429" width="0.7593%" height="15" fill="rgb(251,46,16)" fg:x="152997872" fg:w="2517532"/><text x="46.3950%" y="1439.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,517,532 samples, 0.76%)</title><rect x="46.1450%" y="1413" width="0.7593%" height="15" fill="rgb(220,204,40)" fg:x="152997872" fg:w="2517532"/><text x="46.3950%" y="1423.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,258,338 samples, 0.38%)</title><rect x="46.5248%" y="1397" width="0.3795%" height="15" fill="rgb(211,85,2)" fg:x="154257066" fg:w="1258338"/><text x="46.7748%" y="1407.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,258,623 samples, 0.38%)</title><rect x="46.9043%" y="1525" width="0.3796%" height="15" fill="rgb(229,17,7)" fg:x="155515404" fg:w="1258623"/><text x="47.1543%" y="1535.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,258,623 samples, 0.38%)</title><rect x="46.9043%" y="1509" width="0.3796%" height="15" fill="rgb(239,72,28)" fg:x="155515404" fg:w="1258623"/><text x="47.1543%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,258,623 samples, 0.38%)</title><rect x="46.9043%" y="1493" width="0.3796%" height="15" fill="rgb(230,47,54)" fg:x="155515404" fg:w="1258623"/><text x="47.1543%" y="1503.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,258,623 samples, 0.38%)</title><rect x="46.9043%" y="1477" width="0.3796%" height="15" fill="rgb(214,50,8)" fg:x="155515404" fg:w="1258623"/><text x="47.1543%" y="1487.50"></text></g><g><title>alloc::slice::hack::to_vec (1,258,623 samples, 0.38%)</title><rect x="46.9043%" y="1461" width="0.3796%" height="15" fill="rgb(216,198,43)" fg:x="155515404" fg:w="1258623"/><text x="47.1543%" y="1471.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,258,623 samples, 0.38%)</title><rect x="46.9043%" y="1445" width="0.3796%" height="15" fill="rgb(234,20,35)" fg:x="155515404" fg:w="1258623"/><text x="47.1543%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,258,623 samples, 0.38%)</title><rect x="46.9043%" y="1429" width="0.3796%" height="15" fill="rgb(254,45,19)" fg:x="155515404" fg:w="1258623"/><text x="47.1543%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,258,623 samples, 0.38%)</title><rect x="46.9043%" y="1413" width="0.3796%" height="15" fill="rgb(219,14,44)" fg:x="155515404" fg:w="1258623"/><text x="47.1543%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,258,623 samples, 0.38%)</title><rect x="46.9043%" y="1397" width="0.3796%" height="15" fill="rgb(217,220,26)" fg:x="155515404" fg:w="1258623"/><text x="47.1543%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,258,623 samples, 0.38%)</title><rect x="46.9043%" y="1381" width="0.3796%" height="15" fill="rgb(213,158,28)" fg:x="155515404" fg:w="1258623"/><text x="47.1543%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,258,623 samples, 0.38%)</title><rect x="46.9043%" y="1365" width="0.3796%" height="15" fill="rgb(252,51,52)" fg:x="155515404" fg:w="1258623"/><text x="47.1543%" y="1375.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,258,623 samples, 0.38%)</title><rect x="46.9043%" y="1349" width="0.3796%" height="15" fill="rgb(246,89,16)" fg:x="155515404" fg:w="1258623"/><text x="47.1543%" y="1359.50"></text></g><g><title>alloc::alloc::alloc (1,258,623 samples, 0.38%)</title><rect x="46.9043%" y="1333" width="0.3796%" height="15" fill="rgb(216,158,49)" fg:x="155515404" fg:w="1258623"/><text x="47.1543%" y="1343.50"></text></g><g><title>malloc (1,258,623 samples, 0.38%)</title><rect x="46.9043%" y="1317" width="0.3796%" height="15" fill="rgb(236,107,19)" fg:x="155515404" fg:w="1258623"/><text x="47.1543%" y="1327.50"></text></g><g><title>[libc.so.6] (1,258,623 samples, 0.38%)</title><rect x="46.9043%" y="1301" width="0.3796%" height="15" fill="rgb(228,185,30)" fg:x="155515404" fg:w="1258623"/><text x="47.1543%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (101,214,381 samples, 30.53%)</title><rect x="17.1377%" y="1605" width="30.5268%" height="15" fill="rgb(246,134,8)" fg:x="56821587" fg:w="101214381"/><text x="17.3877%" y="1615.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (101,214,381 samples, 30.53%)</title><rect x="17.1377%" y="1589" width="30.5268%" height="15" fill="rgb(214,143,50)" fg:x="56821587" fg:w="101214381"/><text x="17.3877%" y="1599.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (101,214,381 samples, 30.53%)</title><rect x="17.1377%" y="1573" width="30.5268%" height="15" fill="rgb(228,75,8)" fg:x="56821587" fg:w="101214381"/><text x="17.3877%" y="1583.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (101,214,381 samples, 30.53%)</title><rect x="17.1377%" y="1557" width="30.5268%" height="15" fill="rgb(207,175,4)" fg:x="56821587" fg:w="101214381"/><text x="17.3877%" y="1567.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (101,214,381 samples, 30.53%)</title><rect x="17.1377%" y="1541" width="30.5268%" height="15" fill="rgb(205,108,24)" fg:x="56821587" fg:w="101214381"/><text x="17.3877%" y="1551.50">&lt;css_bitvector_compiler::HtmlNode as core::clone:..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,261,941 samples, 0.38%)</title><rect x="47.2839%" y="1525" width="0.3806%" height="15" fill="rgb(244,120,49)" fg:x="156774027" fg:w="1261941"/><text x="47.5339%" y="1535.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,261,941 samples, 0.38%)</title><rect x="47.2839%" y="1509" width="0.3806%" height="15" fill="rgb(223,47,38)" fg:x="156774027" fg:w="1261941"/><text x="47.5339%" y="1519.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,261,941 samples, 0.38%)</title><rect x="47.2839%" y="1493" width="0.3806%" height="15" fill="rgb(229,179,11)" fg:x="156774027" fg:w="1261941"/><text x="47.5339%" y="1503.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,261,941 samples, 0.38%)</title><rect x="47.2839%" y="1477" width="0.3806%" height="15" fill="rgb(231,122,1)" fg:x="156774027" fg:w="1261941"/><text x="47.5339%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,261,941 samples, 0.38%)</title><rect x="47.2839%" y="1461" width="0.3806%" height="15" fill="rgb(245,119,9)" fg:x="156774027" fg:w="1261941"/><text x="47.5339%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,261,941 samples, 0.38%)</title><rect x="47.2839%" y="1445" width="0.3806%" height="15" fill="rgb(241,163,25)" fg:x="156774027" fg:w="1261941"/><text x="47.5339%" y="1455.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,261,941 samples, 0.38%)</title><rect x="47.2839%" y="1429" width="0.3806%" height="15" fill="rgb(217,214,3)" fg:x="156774027" fg:w="1261941"/><text x="47.5339%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,261,941 samples, 0.38%)</title><rect x="47.2839%" y="1413" width="0.3806%" height="15" fill="rgb(240,86,28)" fg:x="156774027" fg:w="1261941"/><text x="47.5339%" y="1423.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,261,941 samples, 0.38%)</title><rect x="47.2839%" y="1397" width="0.3806%" height="15" fill="rgb(215,47,9)" fg:x="156774027" fg:w="1261941"/><text x="47.5339%" y="1407.50"></text></g><g><title>alloc::alloc::alloc (1,261,941 samples, 0.38%)</title><rect x="47.2839%" y="1381" width="0.3806%" height="15" fill="rgb(252,25,45)" fg:x="156774027" fg:w="1261941"/><text x="47.5339%" y="1391.50"></text></g><g><title>malloc (1,261,941 samples, 0.38%)</title><rect x="47.2839%" y="1365" width="0.3806%" height="15" fill="rgb(251,164,9)" fg:x="156774027" fg:w="1261941"/><text x="47.5339%" y="1375.50"></text></g><g><title>[libc.so.6] (1,261,941 samples, 0.38%)</title><rect x="47.2839%" y="1349" width="0.3806%" height="15" fill="rgb(233,194,0)" fg:x="156774027" fg:w="1261941"/><text x="47.5339%" y="1359.50"></text></g><g><title>__rdl_alloc (1,271,839 samples, 0.38%)</title><rect x="47.6645%" y="1413" width="0.3836%" height="15" fill="rgb(249,111,24)" fg:x="158035968" fg:w="1271839"/><text x="47.9145%" y="1423.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,271,839 samples, 0.38%)</title><rect x="47.6645%" y="1397" width="0.3836%" height="15" fill="rgb(250,223,3)" fg:x="158035968" fg:w="1271839"/><text x="47.9145%" y="1407.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,525,033 samples, 0.76%)</title><rect x="47.6645%" y="1605" width="0.7616%" height="15" fill="rgb(236,178,37)" fg:x="158035968" fg:w="2525033"/><text x="47.9145%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,525,033 samples, 0.76%)</title><rect x="47.6645%" y="1589" width="0.7616%" height="15" fill="rgb(241,158,50)" fg:x="158035968" fg:w="2525033"/><text x="47.9145%" y="1599.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,525,033 samples, 0.76%)</title><rect x="47.6645%" y="1573" width="0.7616%" height="15" fill="rgb(213,121,41)" fg:x="158035968" fg:w="2525033"/><text x="47.9145%" y="1583.50"></text></g><g><title>alloc::slice::hack::to_vec (2,525,033 samples, 0.76%)</title><rect x="47.6645%" y="1557" width="0.7616%" height="15" fill="rgb(240,92,3)" fg:x="158035968" fg:w="2525033"/><text x="47.9145%" y="1567.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,525,033 samples, 0.76%)</title><rect x="47.6645%" y="1541" width="0.7616%" height="15" fill="rgb(205,123,3)" fg:x="158035968" fg:w="2525033"/><text x="47.9145%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,525,033 samples, 0.76%)</title><rect x="47.6645%" y="1525" width="0.7616%" height="15" fill="rgb(205,97,47)" fg:x="158035968" fg:w="2525033"/><text x="47.9145%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,525,033 samples, 0.76%)</title><rect x="47.6645%" y="1509" width="0.7616%" height="15" fill="rgb(247,152,14)" fg:x="158035968" fg:w="2525033"/><text x="47.9145%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,525,033 samples, 0.76%)</title><rect x="47.6645%" y="1493" width="0.7616%" height="15" fill="rgb(248,195,53)" fg:x="158035968" fg:w="2525033"/><text x="47.9145%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,525,033 samples, 0.76%)</title><rect x="47.6645%" y="1477" width="0.7616%" height="15" fill="rgb(226,201,16)" fg:x="158035968" fg:w="2525033"/><text x="47.9145%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,525,033 samples, 0.76%)</title><rect x="47.6645%" y="1461" width="0.7616%" height="15" fill="rgb(205,98,0)" fg:x="158035968" fg:w="2525033"/><text x="47.9145%" y="1471.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,525,033 samples, 0.76%)</title><rect x="47.6645%" y="1445" width="0.7616%" height="15" fill="rgb(214,191,48)" fg:x="158035968" fg:w="2525033"/><text x="47.9145%" y="1455.50"></text></g><g><title>alloc::alloc::alloc (2,525,033 samples, 0.76%)</title><rect x="47.6645%" y="1429" width="0.7616%" height="15" fill="rgb(237,112,39)" fg:x="158035968" fg:w="2525033"/><text x="47.9145%" y="1439.50"></text></g><g><title>malloc (1,253,194 samples, 0.38%)</title><rect x="48.0481%" y="1413" width="0.3780%" height="15" fill="rgb(247,203,27)" fg:x="159307807" fg:w="1253194"/><text x="48.2981%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (106,260,909 samples, 32.05%)</title><rect x="16.7577%" y="1685" width="32.0489%" height="15" fill="rgb(235,124,28)" fg:x="55561798" fg:w="106260909"/><text x="17.0077%" y="1695.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (106,260,909 samples, 32.05%)</title><rect x="16.7577%" y="1669" width="32.0489%" height="15" fill="rgb(208,207,46)" fg:x="55561798" fg:w="106260909"/><text x="17.0077%" y="1679.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (106,260,909 samples, 32.05%)</title><rect x="16.7577%" y="1653" width="32.0489%" height="15" fill="rgb(234,176,4)" fg:x="55561798" fg:w="106260909"/><text x="17.0077%" y="1663.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (106,260,909 samples, 32.05%)</title><rect x="16.7577%" y="1637" width="32.0489%" height="15" fill="rgb(230,133,28)" fg:x="55561798" fg:w="106260909"/><text x="17.0077%" y="1647.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (105,001,120 samples, 31.67%)</title><rect x="17.1377%" y="1621" width="31.6689%" height="15" fill="rgb(211,137,40)" fg:x="56821587" fg:w="105001120"/><text x="17.3877%" y="1631.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::C..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,261,706 samples, 0.38%)</title><rect x="48.4261%" y="1605" width="0.3805%" height="15" fill="rgb(254,35,13)" fg:x="160561001" fg:w="1261706"/><text x="48.6761%" y="1615.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,261,706 samples, 0.38%)</title><rect x="48.4261%" y="1589" width="0.3805%" height="15" fill="rgb(225,49,51)" fg:x="160561001" fg:w="1261706"/><text x="48.6761%" y="1599.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,261,706 samples, 0.38%)</title><rect x="48.4261%" y="1573" width="0.3805%" height="15" fill="rgb(251,10,15)" fg:x="160561001" fg:w="1261706"/><text x="48.6761%" y="1583.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,261,706 samples, 0.38%)</title><rect x="48.4261%" y="1557" width="0.3805%" height="15" fill="rgb(228,207,15)" fg:x="160561001" fg:w="1261706"/><text x="48.6761%" y="1567.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,261,706 samples, 0.38%)</title><rect x="48.4261%" y="1541" width="0.3805%" height="15" fill="rgb(241,99,19)" fg:x="160561001" fg:w="1261706"/><text x="48.6761%" y="1551.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,261,706 samples, 0.38%)</title><rect x="48.4261%" y="1525" width="0.3805%" height="15" fill="rgb(207,104,49)" fg:x="160561001" fg:w="1261706"/><text x="48.6761%" y="1535.50"></text></g><g><title>core::clone::Clone::clone (1,261,706 samples, 0.38%)</title><rect x="48.4261%" y="1509" width="0.3805%" height="15" fill="rgb(234,99,18)" fg:x="160561001" fg:w="1261706"/><text x="48.6761%" y="1519.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,261,706 samples, 0.38%)</title><rect x="48.4261%" y="1493" width="0.3805%" height="15" fill="rgb(213,191,49)" fg:x="160561001" fg:w="1261706"/><text x="48.6761%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,261,706 samples, 0.38%)</title><rect x="48.4261%" y="1477" width="0.3805%" height="15" fill="rgb(210,226,19)" fg:x="160561001" fg:w="1261706"/><text x="48.6761%" y="1487.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,261,706 samples, 0.38%)</title><rect x="48.4261%" y="1461" width="0.3805%" height="15" fill="rgb(229,97,18)" fg:x="160561001" fg:w="1261706"/><text x="48.6761%" y="1471.50"></text></g><g><title>alloc::slice::hack::to_vec (1,261,706 samples, 0.38%)</title><rect x="48.4261%" y="1445" width="0.3805%" height="15" fill="rgb(211,167,15)" fg:x="160561001" fg:w="1261706"/><text x="48.6761%" y="1455.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,261,706 samples, 0.38%)</title><rect x="48.4261%" y="1429" width="0.3805%" height="15" fill="rgb(210,169,34)" fg:x="160561001" fg:w="1261706"/><text x="48.6761%" y="1439.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,261,706 samples, 0.38%)</title><rect x="48.4261%" y="1413" width="0.3805%" height="15" fill="rgb(241,121,31)" fg:x="160561001" fg:w="1261706"/><text x="48.6761%" y="1423.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,261,706 samples, 0.38%)</title><rect x="48.4261%" y="1397" width="0.3805%" height="15" fill="rgb(232,40,11)" fg:x="160561001" fg:w="1261706"/><text x="48.6761%" y="1407.50"></text></g><g><title>[libc.so.6] (1,261,706 samples, 0.38%)</title><rect x="48.4261%" y="1381" width="0.3805%" height="15" fill="rgb(205,86,26)" fg:x="160561001" fg:w="1261706"/><text x="48.6761%" y="1391.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (969,656 samples, 0.29%)</title><rect x="48.8066%" y="1685" width="0.2925%" height="15" fill="rgb(231,126,28)" fg:x="161822707" fg:w="969656"/><text x="49.0566%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (969,656 samples, 0.29%)</title><rect x="48.8066%" y="1669" width="0.2925%" height="15" fill="rgb(219,221,18)" fg:x="161822707" fg:w="969656"/><text x="49.0566%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (969,656 samples, 0.29%)</title><rect x="48.8066%" y="1653" width="0.2925%" height="15" fill="rgb(211,40,0)" fg:x="161822707" fg:w="969656"/><text x="49.0566%" y="1663.50"></text></g><g><title>alloc::slice::hack::to_vec (969,656 samples, 0.29%)</title><rect x="48.8066%" y="1637" width="0.2925%" height="15" fill="rgb(239,85,43)" fg:x="161822707" fg:w="969656"/><text x="49.0566%" y="1647.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (969,656 samples, 0.29%)</title><rect x="48.8066%" y="1621" width="0.2925%" height="15" fill="rgb(231,55,21)" fg:x="161822707" fg:w="969656"/><text x="49.0566%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (969,656 samples, 0.29%)</title><rect x="48.8066%" y="1605" width="0.2925%" height="15" fill="rgb(225,184,43)" fg:x="161822707" fg:w="969656"/><text x="49.0566%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (969,656 samples, 0.29%)</title><rect x="48.8066%" y="1589" width="0.2925%" height="15" fill="rgb(251,158,41)" fg:x="161822707" fg:w="969656"/><text x="49.0566%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (969,656 samples, 0.29%)</title><rect x="48.8066%" y="1573" width="0.2925%" height="15" fill="rgb(234,159,37)" fg:x="161822707" fg:w="969656"/><text x="49.0566%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (969,656 samples, 0.29%)</title><rect x="48.8066%" y="1557" width="0.2925%" height="15" fill="rgb(216,204,22)" fg:x="161822707" fg:w="969656"/><text x="49.0566%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (969,656 samples, 0.29%)</title><rect x="48.8066%" y="1541" width="0.2925%" height="15" fill="rgb(214,17,3)" fg:x="161822707" fg:w="969656"/><text x="49.0566%" y="1551.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (969,656 samples, 0.29%)</title><rect x="48.8066%" y="1525" width="0.2925%" height="15" fill="rgb(212,111,17)" fg:x="161822707" fg:w="969656"/><text x="49.0566%" y="1535.50"></text></g><g><title>alloc::alloc::alloc (969,656 samples, 0.29%)</title><rect x="48.8066%" y="1509" width="0.2925%" height="15" fill="rgb(221,157,24)" fg:x="161822707" fg:w="969656"/><text x="49.0566%" y="1519.50"></text></g><g><title>malloc (969,656 samples, 0.29%)</title><rect x="48.8066%" y="1493" width="0.2925%" height="15" fill="rgb(252,16,13)" fg:x="161822707" fg:w="969656"/><text x="49.0566%" y="1503.50"></text></g><g><title>[libc.so.6] (969,656 samples, 0.29%)</title><rect x="48.8066%" y="1477" width="0.2925%" height="15" fill="rgb(221,62,2)" fg:x="161822707" fg:w="969656"/><text x="49.0566%" y="1487.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,257,143 samples, 0.38%)</title><rect x="49.0991%" y="1685" width="0.3792%" height="15" fill="rgb(247,87,22)" fg:x="162792363" fg:w="1257143"/><text x="49.3491%" y="1695.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,257,143 samples, 0.38%)</title><rect x="49.0991%" y="1669" width="0.3792%" height="15" fill="rgb(215,73,9)" fg:x="162792363" fg:w="1257143"/><text x="49.3491%" y="1679.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,257,143 samples, 0.38%)</title><rect x="49.0991%" y="1653" width="0.3792%" height="15" fill="rgb(207,175,33)" fg:x="162792363" fg:w="1257143"/><text x="49.3491%" y="1663.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,257,143 samples, 0.38%)</title><rect x="49.0991%" y="1637" width="0.3792%" height="15" fill="rgb(243,129,54)" fg:x="162792363" fg:w="1257143"/><text x="49.3491%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,257,143 samples, 0.38%)</title><rect x="49.0991%" y="1621" width="0.3792%" height="15" fill="rgb(227,119,45)" fg:x="162792363" fg:w="1257143"/><text x="49.3491%" y="1631.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,257,143 samples, 0.38%)</title><rect x="49.0991%" y="1605" width="0.3792%" height="15" fill="rgb(205,109,36)" fg:x="162792363" fg:w="1257143"/><text x="49.3491%" y="1615.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,257,143 samples, 0.38%)</title><rect x="49.0991%" y="1589" width="0.3792%" height="15" fill="rgb(205,6,39)" fg:x="162792363" fg:w="1257143"/><text x="49.3491%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,257,143 samples, 0.38%)</title><rect x="49.0991%" y="1573" width="0.3792%" height="15" fill="rgb(221,32,16)" fg:x="162792363" fg:w="1257143"/><text x="49.3491%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,257,143 samples, 0.38%)</title><rect x="49.0991%" y="1557" width="0.3792%" height="15" fill="rgb(228,144,50)" fg:x="162792363" fg:w="1257143"/><text x="49.3491%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (1,257,143 samples, 0.38%)</title><rect x="49.0991%" y="1541" width="0.3792%" height="15" fill="rgb(229,201,53)" fg:x="162792363" fg:w="1257143"/><text x="49.3491%" y="1551.50"></text></g><g><title>malloc (1,257,143 samples, 0.38%)</title><rect x="49.0991%" y="1525" width="0.3792%" height="15" fill="rgb(249,153,27)" fg:x="162792363" fg:w="1257143"/><text x="49.3491%" y="1535.50"></text></g><g><title>[libc.so.6] (1,257,143 samples, 0.38%)</title><rect x="49.0991%" y="1509" width="0.3792%" height="15" fill="rgb(227,106,25)" fg:x="162792363" fg:w="1257143"/><text x="49.3491%" y="1519.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (112,266,756 samples, 33.86%)</title><rect x="15.9987%" y="1701" width="33.8603%" height="15" fill="rgb(230,65,29)" fg:x="53045195" fg:w="112266756"/><text x="16.2487%" y="1711.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone..</text></g><g><title>malloc (1,262,445 samples, 0.38%)</title><rect x="49.4782%" y="1685" width="0.3808%" height="15" fill="rgb(221,57,46)" fg:x="164049506" fg:w="1262445"/><text x="49.7282%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,277,822 samples, 0.39%)</title><rect x="49.8590%" y="1701" width="0.3854%" height="15" fill="rgb(229,161,17)" fg:x="165311951" fg:w="1277822"/><text x="50.1090%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,277,822 samples, 0.39%)</title><rect x="49.8590%" y="1685" width="0.3854%" height="15" fill="rgb(222,213,11)" fg:x="165311951" fg:w="1277822"/><text x="50.1090%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,277,822 samples, 0.39%)</title><rect x="49.8590%" y="1669" width="0.3854%" height="15" fill="rgb(235,35,13)" fg:x="165311951" fg:w="1277822"/><text x="50.1090%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,277,822 samples, 0.39%)</title><rect x="49.8590%" y="1653" width="0.3854%" height="15" fill="rgb(233,158,34)" fg:x="165311951" fg:w="1277822"/><text x="50.1090%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,277,822 samples, 0.39%)</title><rect x="49.8590%" y="1637" width="0.3854%" height="15" fill="rgb(215,151,48)" fg:x="165311951" fg:w="1277822"/><text x="50.1090%" y="1647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,277,822 samples, 0.39%)</title><rect x="49.8590%" y="1621" width="0.3854%" height="15" fill="rgb(229,84,14)" fg:x="165311951" fg:w="1277822"/><text x="50.1090%" y="1631.50"></text></g><g><title>alloc::alloc::alloc (1,277,822 samples, 0.39%)</title><rect x="49.8590%" y="1605" width="0.3854%" height="15" fill="rgb(229,68,14)" fg:x="165311951" fg:w="1277822"/><text x="50.1090%" y="1615.50"></text></g><g><title>malloc (1,277,822 samples, 0.39%)</title><rect x="49.8590%" y="1589" width="0.3854%" height="15" fill="rgb(243,106,26)" fg:x="165311951" fg:w="1277822"/><text x="50.1090%" y="1599.50"></text></g><g><title>[libc.so.6] (1,277,822 samples, 0.39%)</title><rect x="49.8590%" y="1573" width="0.3854%" height="15" fill="rgb(206,45,38)" fg:x="165311951" fg:w="1277822"/><text x="50.1090%" y="1583.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (117,316,457 samples, 35.38%)</title><rect x="15.9987%" y="1941" width="35.3833%" height="15" fill="rgb(226,6,15)" fg:x="53045195" fg:w="117316457"/><text x="16.2487%" y="1951.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (117,316,457 samples, 35.38%)</title><rect x="15.9987%" y="1925" width="35.3833%" height="15" fill="rgb(232,22,54)" fg:x="53045195" fg:w="117316457"/><text x="16.2487%" y="1935.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (117,316,457 samples, 35.38%)</title><rect x="15.9987%" y="1909" width="35.3833%" height="15" fill="rgb(229,222,32)" fg:x="53045195" fg:w="117316457"/><text x="16.2487%" y="1919.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (117,316,457 samples, 35.38%)</title><rect x="15.9987%" y="1893" width="35.3833%" height="15" fill="rgb(228,62,29)" fg:x="53045195" fg:w="117316457"/><text x="16.2487%" y="1903.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (117,316,457 samples, 35.38%)</title><rect x="15.9987%" y="1877" width="35.3833%" height="15" fill="rgb(251,103,34)" fg:x="53045195" fg:w="117316457"/><text x="16.2487%" y="1887.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (117,316,457 samples, 35.38%)</title><rect x="15.9987%" y="1861" width="35.3833%" height="15" fill="rgb(233,12,30)" fg:x="53045195" fg:w="117316457"/><text x="16.2487%" y="1871.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (117,316,457 samples, 35.38%)</title><rect x="15.9987%" y="1845" width="35.3833%" height="15" fill="rgb(238,52,0)" fg:x="53045195" fg:w="117316457"/><text x="16.2487%" y="1855.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (117,316,457 samples, 35.38%)</title><rect x="15.9987%" y="1829" width="35.3833%" height="15" fill="rgb(223,98,5)" fg:x="53045195" fg:w="117316457"/><text x="16.2487%" y="1839.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (117,316,457 samples, 35.38%)</title><rect x="15.9987%" y="1813" width="35.3833%" height="15" fill="rgb(228,75,37)" fg:x="53045195" fg:w="117316457"/><text x="16.2487%" y="1823.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (117,316,457 samples, 35.38%)</title><rect x="15.9987%" y="1797" width="35.3833%" height="15" fill="rgb(205,115,49)" fg:x="53045195" fg:w="117316457"/><text x="16.2487%" y="1807.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (117,316,457 samples, 35.38%)</title><rect x="15.9987%" y="1781" width="35.3833%" height="15" fill="rgb(250,154,43)" fg:x="53045195" fg:w="117316457"/><text x="16.2487%" y="1791.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (117,316,457 samples, 35.38%)</title><rect x="15.9987%" y="1765" width="35.3833%" height="15" fill="rgb(226,43,29)" fg:x="53045195" fg:w="117316457"/><text x="16.2487%" y="1775.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (117,316,457 samples, 35.38%)</title><rect x="15.9987%" y="1749" width="35.3833%" height="15" fill="rgb(249,228,39)" fg:x="53045195" fg:w="117316457"/><text x="16.2487%" y="1759.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (117,316,457 samples, 35.38%)</title><rect x="15.9987%" y="1733" width="35.3833%" height="15" fill="rgb(216,79,43)" fg:x="53045195" fg:w="117316457"/><text x="16.2487%" y="1743.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (117,316,457 samples, 35.38%)</title><rect x="15.9987%" y="1717" width="35.3833%" height="15" fill="rgb(228,95,12)" fg:x="53045195" fg:w="117316457"/><text x="16.2487%" y="1727.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3,771,879 samples, 1.14%)</title><rect x="50.2444%" y="1701" width="1.1376%" height="15" fill="rgb(249,221,15)" fg:x="166589773" fg:w="3771879"/><text x="50.4944%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (1,262,368 samples, 0.38%)</title><rect x="51.3820%" y="1925" width="0.3807%" height="15" fill="rgb(233,34,13)" fg:x="170361652" fg:w="1262368"/><text x="51.6320%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,262,368 samples, 0.38%)</title><rect x="51.3820%" y="1909" width="0.3807%" height="15" fill="rgb(214,103,39)" fg:x="170361652" fg:w="1262368"/><text x="51.6320%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,262,368 samples, 0.38%)</title><rect x="51.3820%" y="1893" width="0.3807%" height="15" fill="rgb(251,126,39)" fg:x="170361652" fg:w="1262368"/><text x="51.6320%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,262,368 samples, 0.38%)</title><rect x="51.3820%" y="1877" width="0.3807%" height="15" fill="rgb(214,216,36)" fg:x="170361652" fg:w="1262368"/><text x="51.6320%" y="1887.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,262,368 samples, 0.38%)</title><rect x="51.3820%" y="1861" width="0.3807%" height="15" fill="rgb(220,221,8)" fg:x="170361652" fg:w="1262368"/><text x="51.6320%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,262,368 samples, 0.38%)</title><rect x="51.3820%" y="1845" width="0.3807%" height="15" fill="rgb(240,216,3)" fg:x="170361652" fg:w="1262368"/><text x="51.6320%" y="1855.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,262,368 samples, 0.38%)</title><rect x="51.3820%" y="1829" width="0.3807%" height="15" fill="rgb(232,218,17)" fg:x="170361652" fg:w="1262368"/><text x="51.6320%" y="1839.50"></text></g><g><title>alloc::alloc::realloc (1,262,368 samples, 0.38%)</title><rect x="51.3820%" y="1813" width="0.3807%" height="15" fill="rgb(229,163,45)" fg:x="170361652" fg:w="1262368"/><text x="51.6320%" y="1823.50"></text></g><g><title>realloc (1,262,368 samples, 0.38%)</title><rect x="51.3820%" y="1797" width="0.3807%" height="15" fill="rgb(231,110,42)" fg:x="170361652" fg:w="1262368"/><text x="51.6320%" y="1807.50"></text></g><g><title>[libc.so.6] (1,262,368 samples, 0.38%)</title><rect x="51.3820%" y="1781" width="0.3807%" height="15" fill="rgb(208,170,48)" fg:x="170361652" fg:w="1262368"/><text x="51.6320%" y="1791.50"></text></g><g><title>[libc.so.6] (1,262,368 samples, 0.38%)</title><rect x="51.3820%" y="1765" width="0.3807%" height="15" fill="rgb(239,116,25)" fg:x="170361652" fg:w="1262368"/><text x="51.6320%" y="1775.50"></text></g><g><title>benchmark::extract_path_from_command (1,259,954 samples, 0.38%)</title><rect x="51.7628%" y="1925" width="0.3800%" height="15" fill="rgb(219,200,50)" fg:x="171624020" fg:w="1259954"/><text x="52.0128%" y="1935.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,259,954 samples, 0.38%)</title><rect x="51.7628%" y="1909" width="0.3800%" height="15" fill="rgb(245,200,0)" fg:x="171624020" fg:w="1259954"/><text x="52.0128%" y="1919.50"></text></g><g><title>benchmark::extract_path_from_command::_{{closure}} (1,259,954 samples, 0.38%)</title><rect x="51.7628%" y="1893" width="0.3800%" height="15" fill="rgb(245,119,33)" fg:x="171624020" fg:w="1259954"/><text x="52.0128%" y="1903.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,259,954 samples, 0.38%)</title><rect x="51.7628%" y="1877" width="0.3800%" height="15" fill="rgb(231,125,12)" fg:x="171624020" fg:w="1259954"/><text x="52.0128%" y="1887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,259,954 samples, 0.38%)</title><rect x="51.7628%" y="1861" width="0.3800%" height="15" fill="rgb(216,96,41)" fg:x="171624020" fg:w="1259954"/><text x="52.0128%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,259,954 samples, 0.38%)</title><rect x="51.7628%" y="1845" width="0.3800%" height="15" fill="rgb(248,43,45)" fg:x="171624020" fg:w="1259954"/><text x="52.0128%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,259,954 samples, 0.38%)</title><rect x="51.7628%" y="1829" width="0.3800%" height="15" fill="rgb(217,222,7)" fg:x="171624020" fg:w="1259954"/><text x="52.0128%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,259,954 samples, 0.38%)</title><rect x="51.7628%" y="1813" width="0.3800%" height="15" fill="rgb(233,28,6)" fg:x="171624020" fg:w="1259954"/><text x="52.0128%" y="1823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,259,954 samples, 0.38%)</title><rect x="51.7628%" y="1797" width="0.3800%" height="15" fill="rgb(231,218,15)" fg:x="171624020" fg:w="1259954"/><text x="52.0128%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,259,954 samples, 0.38%)</title><rect x="51.7628%" y="1781" width="0.3800%" height="15" fill="rgb(226,171,48)" fg:x="171624020" fg:w="1259954"/><text x="52.0128%" y="1791.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,259,954 samples, 0.38%)</title><rect x="51.7628%" y="1765" width="0.3800%" height="15" fill="rgb(235,201,9)" fg:x="171624020" fg:w="1259954"/><text x="52.0128%" y="1775.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (1,259,954 samples, 0.38%)</title><rect x="51.7628%" y="1749" width="0.3800%" height="15" fill="rgb(217,80,15)" fg:x="171624020" fg:w="1259954"/><text x="52.0128%" y="1759.50"></text></g><g><title>[libc.so.6] (1,078,415 samples, 0.33%)</title><rect x="52.1428%" y="1877" width="0.3253%" height="15" fill="rgb(219,152,8)" fg:x="172883974" fg:w="1078415"/><text x="52.3928%" y="1887.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (1,010,586 samples, 0.30%)</title><rect x="52.4680%" y="1845" width="0.3048%" height="15" fill="rgb(243,107,38)" fg:x="173962389" fg:w="1010586"/><text x="52.7180%" y="1855.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (1,010,586 samples, 0.30%)</title><rect x="52.4680%" y="1829" width="0.3048%" height="15" fill="rgb(231,17,5)" fg:x="173962389" fg:w="1010586"/><text x="52.7180%" y="1839.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1,010,586 samples, 0.30%)</title><rect x="52.4680%" y="1813" width="0.3048%" height="15" fill="rgb(209,25,54)" fg:x="173962389" fg:w="1010586"/><text x="52.7180%" y="1823.50"></text></g><g><title>alloc::string::String::push_str (1,010,586 samples, 0.30%)</title><rect x="52.4680%" y="1797" width="0.3048%" height="15" fill="rgb(219,0,2)" fg:x="173962389" fg:w="1010586"/><text x="52.7180%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,010,586 samples, 0.30%)</title><rect x="52.4680%" y="1781" width="0.3048%" height="15" fill="rgb(246,9,5)" fg:x="173962389" fg:w="1010586"/><text x="52.7180%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,010,586 samples, 0.30%)</title><rect x="52.4680%" y="1765" width="0.3048%" height="15" fill="rgb(226,159,4)" fg:x="173962389" fg:w="1010586"/><text x="52.7180%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,010,586 samples, 0.30%)</title><rect x="52.4680%" y="1749" width="0.3048%" height="15" fill="rgb(219,175,34)" fg:x="173962389" fg:w="1010586"/><text x="52.7180%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,010,586 samples, 0.30%)</title><rect x="52.4680%" y="1733" width="0.3048%" height="15" fill="rgb(236,10,46)" fg:x="173962389" fg:w="1010586"/><text x="52.7180%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,010,586 samples, 0.30%)</title><rect x="52.4680%" y="1717" width="0.3048%" height="15" fill="rgb(240,211,16)" fg:x="173962389" fg:w="1010586"/><text x="52.7180%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,010,586 samples, 0.30%)</title><rect x="52.4680%" y="1701" width="0.3048%" height="15" fill="rgb(205,3,43)" fg:x="173962389" fg:w="1010586"/><text x="52.7180%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,010,586 samples, 0.30%)</title><rect x="52.4680%" y="1685" width="0.3048%" height="15" fill="rgb(245,7,22)" fg:x="173962389" fg:w="1010586"/><text x="52.7180%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,010,586 samples, 0.30%)</title><rect x="52.4680%" y="1669" width="0.3048%" height="15" fill="rgb(239,132,32)" fg:x="173962389" fg:w="1010586"/><text x="52.7180%" y="1679.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,010,586 samples, 0.30%)</title><rect x="52.4680%" y="1653" width="0.3048%" height="15" fill="rgb(228,202,34)" fg:x="173962389" fg:w="1010586"/><text x="52.7180%" y="1663.50"></text></g><g><title>malloc (1,010,586 samples, 0.30%)</title><rect x="52.4680%" y="1637" width="0.3048%" height="15" fill="rgb(254,200,22)" fg:x="173962389" fg:w="1010586"/><text x="52.7180%" y="1647.50"></text></g><g><title>[libc.so.6] (1,010,586 samples, 0.30%)</title><rect x="52.4680%" y="1621" width="0.3048%" height="15" fill="rgb(219,10,39)" fg:x="173962389" fg:w="1010586"/><text x="52.7180%" y="1631.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (2,215,597 samples, 0.67%)</title><rect x="52.4680%" y="1861" width="0.6682%" height="15" fill="rgb(226,210,39)" fg:x="173962389" fg:w="2215597"/><text x="52.7180%" y="1871.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (1,205,011 samples, 0.36%)</title><rect x="52.7728%" y="1845" width="0.3634%" height="15" fill="rgb(208,219,16)" fg:x="174972975" fg:w="1205011"/><text x="53.0228%" y="1855.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,205,011 samples, 0.36%)</title><rect x="52.7728%" y="1829" width="0.3634%" height="15" fill="rgb(216,158,51)" fg:x="174972975" fg:w="1205011"/><text x="53.0228%" y="1839.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,205,011 samples, 0.36%)</title><rect x="52.7728%" y="1813" width="0.3634%" height="15" fill="rgb(233,14,44)" fg:x="174972975" fg:w="1205011"/><text x="53.0228%" y="1823.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,205,011 samples, 0.36%)</title><rect x="52.7728%" y="1797" width="0.3634%" height="15" fill="rgb(237,97,39)" fg:x="174972975" fg:w="1205011"/><text x="53.0228%" y="1807.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,205,011 samples, 0.36%)</title><rect x="52.7728%" y="1781" width="0.3634%" height="15" fill="rgb(218,198,43)" fg:x="174972975" fg:w="1205011"/><text x="53.0228%" y="1791.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,205,011 samples, 0.36%)</title><rect x="52.7728%" y="1765" width="0.3634%" height="15" fill="rgb(231,104,20)" fg:x="174972975" fg:w="1205011"/><text x="53.0228%" y="1775.50"></text></g><g><title>alloc::slice::hack::to_vec (1,205,011 samples, 0.36%)</title><rect x="52.7728%" y="1749" width="0.3634%" height="15" fill="rgb(254,36,13)" fg:x="174972975" fg:w="1205011"/><text x="53.0228%" y="1759.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,205,011 samples, 0.36%)</title><rect x="52.7728%" y="1733" width="0.3634%" height="15" fill="rgb(248,14,50)" fg:x="174972975" fg:w="1205011"/><text x="53.0228%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,205,011 samples, 0.36%)</title><rect x="52.7728%" y="1717" width="0.3634%" height="15" fill="rgb(217,107,29)" fg:x="174972975" fg:w="1205011"/><text x="53.0228%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,205,011 samples, 0.36%)</title><rect x="52.7728%" y="1701" width="0.3634%" height="15" fill="rgb(251,169,33)" fg:x="174972975" fg:w="1205011"/><text x="53.0228%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,205,011 samples, 0.36%)</title><rect x="52.7728%" y="1685" width="0.3634%" height="15" fill="rgb(217,108,32)" fg:x="174972975" fg:w="1205011"/><text x="53.0228%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,205,011 samples, 0.36%)</title><rect x="52.7728%" y="1669" width="0.3634%" height="15" fill="rgb(219,66,42)" fg:x="174972975" fg:w="1205011"/><text x="53.0228%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,205,011 samples, 0.36%)</title><rect x="52.7728%" y="1653" width="0.3634%" height="15" fill="rgb(206,180,7)" fg:x="174972975" fg:w="1205011"/><text x="53.0228%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,205,011 samples, 0.36%)</title><rect x="52.7728%" y="1637" width="0.3634%" height="15" fill="rgb(208,226,31)" fg:x="174972975" fg:w="1205011"/><text x="53.0228%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (1,205,011 samples, 0.36%)</title><rect x="52.7728%" y="1621" width="0.3634%" height="15" fill="rgb(218,26,49)" fg:x="174972975" fg:w="1205011"/><text x="53.0228%" y="1631.50"></text></g><g><title>malloc (1,205,011 samples, 0.36%)</title><rect x="52.7728%" y="1605" width="0.3634%" height="15" fill="rgb(233,197,48)" fg:x="174972975" fg:w="1205011"/><text x="53.0228%" y="1615.50"></text></g><g><title>[libc.so.6] (1,205,011 samples, 0.36%)</title><rect x="52.7728%" y="1589" width="0.3634%" height="15" fill="rgb(252,181,51)" fg:x="174972975" fg:w="1205011"/><text x="53.0228%" y="1599.50"></text></g><g><title>[libc.so.6] (1,232,113 samples, 0.37%)</title><rect x="53.1363%" y="1813" width="0.3716%" height="15" fill="rgb(253,90,19)" fg:x="176177986" fg:w="1232113"/><text x="53.3863%" y="1823.50"></text></g><g><title>benchmark::json_to_html_node (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1813" width="0.3577%" height="15" fill="rgb(215,171,30)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1823.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1797" width="0.3577%" height="15" fill="rgb(214,222,9)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1807.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1781" width="0.3577%" height="15" fill="rgb(223,3,22)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1791.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1765" width="0.3577%" height="15" fill="rgb(225,196,46)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1775.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1749" width="0.3577%" height="15" fill="rgb(209,110,37)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1759.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1733" width="0.3577%" height="15" fill="rgb(249,89,12)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1717" width="0.3577%" height="15" fill="rgb(226,27,33)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1701" width="0.3577%" height="15" fill="rgb(213,82,22)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1685" width="0.3577%" height="15" fill="rgb(248,140,0)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1669" width="0.3577%" height="15" fill="rgb(228,106,3)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1679.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1653" width="0.3577%" height="15" fill="rgb(209,23,37)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1637" width="0.3577%" height="15" fill="rgb(241,93,50)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1621" width="0.3577%" height="15" fill="rgb(253,46,43)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1605" width="0.3577%" height="15" fill="rgb(226,206,43)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1615.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1589" width="0.3577%" height="15" fill="rgb(217,54,7)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1599.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1573" width="0.3577%" height="15" fill="rgb(223,5,52)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1583.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1557" width="0.3577%" height="15" fill="rgb(206,52,46)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1567.50"></text></g><g><title>core::str::pattern::Searcher::next_match (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1541" width="0.3577%" height="15" fill="rgb(253,136,11)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1551.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1525" width="0.3577%" height="15" fill="rgb(208,106,33)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1535.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1509" width="0.3577%" height="15" fill="rgb(206,54,4)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1519.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::FnMut&lt;(char,)&gt;&gt;::call_mut (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1493" width="0.3577%" height="15" fill="rgb(213,3,15)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1503.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::Fn&lt;(char,)&gt;&gt;::call (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1477" width="0.3577%" height="15" fill="rgb(252,211,39)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1487.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (1,186,038 samples, 0.36%)</title><rect x="53.5079%" y="1461" width="0.3577%" height="15" fill="rgb(223,6,36)" fg:x="177410099" fg:w="1186038"/><text x="53.7579%" y="1471.50"></text></g><g><title>benchmark::json_to_html_node (3,345,578 samples, 1.01%)</title><rect x="53.1363%" y="1845" width="1.0090%" height="15" fill="rgb(252,169,45)" fg:x="176177986" fg:w="3345578"/><text x="53.3863%" y="1855.50"></text></g><g><title>benchmark::json_to_html_node (3,345,578 samples, 1.01%)</title><rect x="53.1363%" y="1829" width="1.0090%" height="15" fill="rgb(212,48,26)" fg:x="176177986" fg:w="3345578"/><text x="53.3863%" y="1839.50"></text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (927,427 samples, 0.28%)</title><rect x="53.8656%" y="1813" width="0.2797%" height="15" fill="rgb(251,102,48)" fg:x="178596137" fg:w="927427"/><text x="54.1156%" y="1823.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (927,427 samples, 0.28%)</title><rect x="53.8656%" y="1797" width="0.2797%" height="15" fill="rgb(243,208,16)" fg:x="178596137" fg:w="927427"/><text x="54.1156%" y="1807.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (927,427 samples, 0.28%)</title><rect x="53.8656%" y="1781" width="0.2797%" height="15" fill="rgb(219,96,24)" fg:x="178596137" fg:w="927427"/><text x="54.1156%" y="1791.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (927,427 samples, 0.28%)</title><rect x="53.8656%" y="1765" width="0.2797%" height="15" fill="rgb(219,33,29)" fg:x="178596137" fg:w="927427"/><text x="54.1156%" y="1775.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (927,427 samples, 0.28%)</title><rect x="53.8656%" y="1749" width="0.2797%" height="15" fill="rgb(223,176,5)" fg:x="178596137" fg:w="927427"/><text x="54.1156%" y="1759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (927,427 samples, 0.28%)</title><rect x="53.8656%" y="1733" width="0.2797%" height="15" fill="rgb(228,140,14)" fg:x="178596137" fg:w="927427"/><text x="54.1156%" y="1743.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (927,427 samples, 0.28%)</title><rect x="53.8656%" y="1717" width="0.2797%" height="15" fill="rgb(217,179,31)" fg:x="178596137" fg:w="927427"/><text x="54.1156%" y="1727.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (927,427 samples, 0.28%)</title><rect x="53.8656%" y="1701" width="0.2797%" height="15" fill="rgb(230,9,30)" fg:x="178596137" fg:w="927427"/><text x="54.1156%" y="1711.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (927,427 samples, 0.28%)</title><rect x="53.8656%" y="1685" width="0.2797%" height="15" fill="rgb(230,136,20)" fg:x="178596137" fg:w="927427"/><text x="54.1156%" y="1695.50"></text></g><g><title>benchmark::json_to_html_node (4,578,794 samples, 1.38%)</title><rect x="53.1363%" y="1861" width="1.3810%" height="15" fill="rgb(215,210,22)" fg:x="176177986" fg:w="4578794"/><text x="53.3863%" y="1871.50"></text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (1,233,216 samples, 0.37%)</title><rect x="54.1453%" y="1845" width="0.3719%" height="15" fill="rgb(218,43,5)" fg:x="179523564" fg:w="1233216"/><text x="54.3953%" y="1855.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,233,216 samples, 0.37%)</title><rect x="54.1453%" y="1829" width="0.3719%" height="15" fill="rgb(216,11,5)" fg:x="179523564" fg:w="1233216"/><text x="54.3953%" y="1839.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,233,216 samples, 0.37%)</title><rect x="54.1453%" y="1813" width="0.3719%" height="15" fill="rgb(209,82,29)" fg:x="179523564" fg:w="1233216"/><text x="54.3953%" y="1823.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,233,216 samples, 0.37%)</title><rect x="54.1453%" y="1797" width="0.3719%" height="15" fill="rgb(244,115,12)" fg:x="179523564" fg:w="1233216"/><text x="54.3953%" y="1807.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,233,216 samples, 0.37%)</title><rect x="54.1453%" y="1781" width="0.3719%" height="15" fill="rgb(222,82,18)" fg:x="179523564" fg:w="1233216"/><text x="54.3953%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,233,216 samples, 0.37%)</title><rect x="54.1453%" y="1765" width="0.3719%" height="15" fill="rgb(249,227,8)" fg:x="179523564" fg:w="1233216"/><text x="54.3953%" y="1775.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,233,216 samples, 0.37%)</title><rect x="54.1453%" y="1749" width="0.3719%" height="15" fill="rgb(253,141,45)" fg:x="179523564" fg:w="1233216"/><text x="54.3953%" y="1759.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,233,216 samples, 0.37%)</title><rect x="54.1453%" y="1733" width="0.3719%" height="15" fill="rgb(234,184,4)" fg:x="179523564" fg:w="1233216"/><text x="54.3953%" y="1743.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,233,216 samples, 0.37%)</title><rect x="54.1453%" y="1717" width="0.3719%" height="15" fill="rgb(218,194,23)" fg:x="179523564" fg:w="1233216"/><text x="54.3953%" y="1727.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,233,216 samples, 0.37%)</title><rect x="54.1453%" y="1701" width="0.3719%" height="15" fill="rgb(235,66,41)" fg:x="179523564" fg:w="1233216"/><text x="54.3953%" y="1711.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,233,216 samples, 0.37%)</title><rect x="54.1453%" y="1685" width="0.3719%" height="15" fill="rgb(245,217,1)" fg:x="179523564" fg:w="1233216"/><text x="54.3953%" y="1695.50"></text></g><g><title>benchmark::json_to_html_node (8,053,415 samples, 2.43%)</title><rect x="52.4680%" y="1877" width="2.4290%" height="15" fill="rgb(229,91,1)" fg:x="173962389" fg:w="8053415"/><text x="52.7180%" y="1887.50">be..</text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (1,259,024 samples, 0.38%)</title><rect x="54.5173%" y="1861" width="0.3797%" height="15" fill="rgb(207,101,30)" fg:x="180756780" fg:w="1259024"/><text x="54.7673%" y="1871.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,259,024 samples, 0.38%)</title><rect x="54.5173%" y="1845" width="0.3797%" height="15" fill="rgb(223,82,49)" fg:x="180756780" fg:w="1259024"/><text x="54.7673%" y="1855.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,259,024 samples, 0.38%)</title><rect x="54.5173%" y="1829" width="0.3797%" height="15" fill="rgb(218,167,17)" fg:x="180756780" fg:w="1259024"/><text x="54.7673%" y="1839.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,259,024 samples, 0.38%)</title><rect x="54.5173%" y="1813" width="0.3797%" height="15" fill="rgb(208,103,14)" fg:x="180756780" fg:w="1259024"/><text x="54.7673%" y="1823.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,259,024 samples, 0.38%)</title><rect x="54.5173%" y="1797" width="0.3797%" height="15" fill="rgb(238,20,8)" fg:x="180756780" fg:w="1259024"/><text x="54.7673%" y="1807.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,259,024 samples, 0.38%)</title><rect x="54.5173%" y="1781" width="0.3797%" height="15" fill="rgb(218,80,54)" fg:x="180756780" fg:w="1259024"/><text x="54.7673%" y="1791.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,259,024 samples, 0.38%)</title><rect x="54.5173%" y="1765" width="0.3797%" height="15" fill="rgb(240,144,17)" fg:x="180756780" fg:w="1259024"/><text x="54.7673%" y="1775.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,259,024 samples, 0.38%)</title><rect x="54.5173%" y="1749" width="0.3797%" height="15" fill="rgb(245,27,50)" fg:x="180756780" fg:w="1259024"/><text x="54.7673%" y="1759.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (1,259,024 samples, 0.38%)</title><rect x="54.5173%" y="1733" width="0.3797%" height="15" fill="rgb(251,51,7)" fg:x="180756780" fg:w="1259024"/><text x="54.7673%" y="1743.50"></text></g><g><title>benchmark::json_to_html_node (10,394,968 samples, 3.14%)</title><rect x="52.1428%" y="1909" width="3.1352%" height="15" fill="rgb(245,217,29)" fg:x="172883974" fg:w="10394968"/><text x="52.3928%" y="1919.50">ben..</text></g><g><title>benchmark::json_to_html_node (10,394,968 samples, 3.14%)</title><rect x="52.1428%" y="1893" width="3.1352%" height="15" fill="rgb(221,176,29)" fg:x="172883974" fg:w="10394968"/><text x="52.3928%" y="1903.50">ben..</text></g><g><title>css_bitvector_compiler::HtmlNode::new (1,263,138 samples, 0.38%)</title><rect x="54.8970%" y="1877" width="0.3810%" height="15" fill="rgb(212,180,24)" fg:x="182015804" fg:w="1263138"/><text x="55.1470%" y="1887.50"></text></g><g><title>css_bitvector_compiler::BitVector::new (1,263,138 samples, 0.38%)</title><rect x="54.8970%" y="1861" width="0.3810%" height="15" fill="rgb(254,24,2)" fg:x="182015804" fg:w="1263138"/><text x="55.1470%" y="1871.50"></text></g><g><title>alloc::vec::from_elem (1,263,138 samples, 0.38%)</title><rect x="54.8970%" y="1845" width="0.3810%" height="15" fill="rgb(230,100,2)" fg:x="182015804" fg:w="1263138"/><text x="55.1470%" y="1855.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,263,138 samples, 0.38%)</title><rect x="54.8970%" y="1829" width="0.3810%" height="15" fill="rgb(219,142,25)" fg:x="182015804" fg:w="1263138"/><text x="55.1470%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1,263,138 samples, 0.38%)</title><rect x="54.8970%" y="1813" width="0.3810%" height="15" fill="rgb(240,73,43)" fg:x="182015804" fg:w="1263138"/><text x="55.1470%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (1,263,138 samples, 0.38%)</title><rect x="54.8970%" y="1797" width="0.3810%" height="15" fill="rgb(214,114,15)" fg:x="182015804" fg:w="1263138"/><text x="55.1470%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,263,138 samples, 0.38%)</title><rect x="54.8970%" y="1781" width="0.3810%" height="15" fill="rgb(207,130,4)" fg:x="182015804" fg:w="1263138"/><text x="55.1470%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1,263,138 samples, 0.38%)</title><rect x="54.8970%" y="1765" width="0.3810%" height="15" fill="rgb(221,25,40)" fg:x="182015804" fg:w="1263138"/><text x="55.1470%" y="1775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,263,138 samples, 0.38%)</title><rect x="54.8970%" y="1749" width="0.3810%" height="15" fill="rgb(241,184,7)" fg:x="182015804" fg:w="1263138"/><text x="55.1470%" y="1759.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1,263,138 samples, 0.38%)</title><rect x="54.8970%" y="1733" width="0.3810%" height="15" fill="rgb(235,159,4)" fg:x="182015804" fg:w="1263138"/><text x="55.1470%" y="1743.50"></text></g><g><title>__libc_calloc (1,263,138 samples, 0.38%)</title><rect x="54.8970%" y="1717" width="0.3810%" height="15" fill="rgb(214,87,48)" fg:x="182015804" fg:w="1263138"/><text x="55.1470%" y="1727.50"></text></g><g><title>[libc.so.6] (1,263,138 samples, 0.38%)</title><rect x="54.8970%" y="1701" width="0.3810%" height="15" fill="rgb(246,198,24)" fg:x="182015804" fg:w="1263138"/><text x="55.1470%" y="1711.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (1,233,609 samples, 0.37%)</title><rect x="55.2780%" y="1765" width="0.3721%" height="15" fill="rgb(209,66,40)" fg:x="183278942" fg:w="1233609"/><text x="55.5280%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,233,609 samples, 0.37%)</title><rect x="55.2780%" y="1749" width="0.3721%" height="15" fill="rgb(233,147,39)" fg:x="183278942" fg:w="1233609"/><text x="55.5280%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,233,609 samples, 0.37%)</title><rect x="55.2780%" y="1733" width="0.3721%" height="15" fill="rgb(231,145,52)" fg:x="183278942" fg:w="1233609"/><text x="55.5280%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,233,609 samples, 0.37%)</title><rect x="55.2780%" y="1717" width="0.3721%" height="15" fill="rgb(206,20,26)" fg:x="183278942" fg:w="1233609"/><text x="55.5280%" y="1727.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,233,609 samples, 0.37%)</title><rect x="55.2780%" y="1701" width="0.3721%" height="15" fill="rgb(238,220,4)" fg:x="183278942" fg:w="1233609"/><text x="55.5280%" y="1711.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1,233,609 samples, 0.37%)</title><rect x="55.2780%" y="1685" width="0.3721%" height="15" fill="rgb(252,195,42)" fg:x="183278942" fg:w="1233609"/><text x="55.5280%" y="1695.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (1,233,609 samples, 0.37%)</title><rect x="55.2780%" y="1669" width="0.3721%" height="15" fill="rgb(209,10,6)" fg:x="183278942" fg:w="1233609"/><text x="55.5280%" y="1679.50"></text></g><g><title>core::str::pattern::Searcher::next_match (1,233,609 samples, 0.37%)</title><rect x="55.2780%" y="1653" width="0.3721%" height="15" fill="rgb(229,3,52)" fg:x="183278942" fg:w="1233609"/><text x="55.5280%" y="1663.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (1,233,609 samples, 0.37%)</title><rect x="55.2780%" y="1637" width="0.3721%" height="15" fill="rgb(253,49,37)" fg:x="183278942" fg:w="1233609"/><text x="55.5280%" y="1647.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1,233,609 samples, 0.37%)</title><rect x="55.2780%" y="1621" width="0.3721%" height="15" fill="rgb(240,103,49)" fg:x="183278942" fg:w="1233609"/><text x="55.5280%" y="1631.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1,233,609 samples, 0.37%)</title><rect x="55.2780%" y="1605" width="0.3721%" height="15" fill="rgb(250,182,30)" fg:x="183278942" fg:w="1233609"/><text x="55.5280%" y="1615.50"></text></g><g><title>core::str::validations::next_code_point (1,233,609 samples, 0.37%)</title><rect x="55.2780%" y="1589" width="0.3721%" height="15" fill="rgb(248,8,30)" fg:x="183278942" fg:w="1233609"/><text x="55.5280%" y="1599.50"></text></g><g><title>benchmark::json_to_html_node::_{{closure}} (1,266,753 samples, 0.38%)</title><rect x="55.6500%" y="1749" width="0.3821%" height="15" fill="rgb(237,120,30)" fg:x="184512551" fg:w="1266753"/><text x="55.9000%" y="1759.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,266,753 samples, 0.38%)</title><rect x="55.6500%" y="1733" width="0.3821%" height="15" fill="rgb(221,146,34)" fg:x="184512551" fg:w="1266753"/><text x="55.9000%" y="1743.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (1,266,753 samples, 0.38%)</title><rect x="55.6500%" y="1717" width="0.3821%" height="15" fill="rgb(242,55,13)" fg:x="184512551" fg:w="1266753"/><text x="55.9000%" y="1727.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,266,753 samples, 0.38%)</title><rect x="55.6500%" y="1701" width="0.3821%" height="15" fill="rgb(242,112,31)" fg:x="184512551" fg:w="1266753"/><text x="55.9000%" y="1711.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,266,753 samples, 0.38%)</title><rect x="55.6500%" y="1685" width="0.3821%" height="15" fill="rgb(249,192,27)" fg:x="184512551" fg:w="1266753"/><text x="55.9000%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,266,753 samples, 0.38%)</title><rect x="55.6500%" y="1669" width="0.3821%" height="15" fill="rgb(208,204,44)" fg:x="184512551" fg:w="1266753"/><text x="55.9000%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,266,753 samples, 0.38%)</title><rect x="55.6500%" y="1653" width="0.3821%" height="15" fill="rgb(208,93,54)" fg:x="184512551" fg:w="1266753"/><text x="55.9000%" y="1663.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,266,753 samples, 0.38%)</title><rect x="55.6500%" y="1637" width="0.3821%" height="15" fill="rgb(242,1,31)" fg:x="184512551" fg:w="1266753"/><text x="55.9000%" y="1647.50"></text></g><g><title>alloc::slice::hack::to_vec (1,266,753 samples, 0.38%)</title><rect x="55.6500%" y="1621" width="0.3821%" height="15" fill="rgb(241,83,25)" fg:x="184512551" fg:w="1266753"/><text x="55.9000%" y="1631.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,266,753 samples, 0.38%)</title><rect x="55.6500%" y="1605" width="0.3821%" height="15" fill="rgb(205,169,50)" fg:x="184512551" fg:w="1266753"/><text x="55.9000%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,266,753 samples, 0.38%)</title><rect x="55.6500%" y="1589" width="0.3821%" height="15" fill="rgb(239,186,37)" fg:x="184512551" fg:w="1266753"/><text x="55.9000%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,266,753 samples, 0.38%)</title><rect x="55.6500%" y="1573" width="0.3821%" height="15" fill="rgb(205,221,10)" fg:x="184512551" fg:w="1266753"/><text x="55.9000%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,266,753 samples, 0.38%)</title><rect x="55.6500%" y="1557" width="0.3821%" height="15" fill="rgb(218,196,15)" fg:x="184512551" fg:w="1266753"/><text x="55.9000%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,266,753 samples, 0.38%)</title><rect x="55.6500%" y="1541" width="0.3821%" height="15" fill="rgb(218,196,35)" fg:x="184512551" fg:w="1266753"/><text x="55.9000%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,266,753 samples, 0.38%)</title><rect x="55.6500%" y="1525" width="0.3821%" height="15" fill="rgb(233,63,24)" fg:x="184512551" fg:w="1266753"/><text x="55.9000%" y="1535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,266,753 samples, 0.38%)</title><rect x="55.6500%" y="1509" width="0.3821%" height="15" fill="rgb(225,8,4)" fg:x="184512551" fg:w="1266753"/><text x="55.9000%" y="1519.50"></text></g><g><title>alloc::alloc::alloc (1,266,753 samples, 0.38%)</title><rect x="55.6500%" y="1493" width="0.3821%" height="15" fill="rgb(234,105,35)" fg:x="184512551" fg:w="1266753"/><text x="55.9000%" y="1503.50"></text></g><g><title>malloc (1,266,753 samples, 0.38%)</title><rect x="55.6500%" y="1477" width="0.3821%" height="15" fill="rgb(236,21,32)" fg:x="184512551" fg:w="1266753"/><text x="55.9000%" y="1487.50"></text></g><g><title>[libc.so.6] (1,266,753 samples, 0.38%)</title><rect x="55.6500%" y="1461" width="0.3821%" height="15" fill="rgb(228,109,6)" fg:x="184512551" fg:w="1266753"/><text x="55.9000%" y="1471.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,761,566 samples, 1.13%)</title><rect x="55.2780%" y="1909" width="1.1345%" height="15" fill="rgb(229,215,31)" fg:x="183278942" fg:w="3761566"/><text x="55.5280%" y="1919.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,761,566 samples, 1.13%)</title><rect x="55.2780%" y="1893" width="1.1345%" height="15" fill="rgb(221,52,54)" fg:x="183278942" fg:w="3761566"/><text x="55.5280%" y="1903.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3,761,566 samples, 1.13%)</title><rect x="55.2780%" y="1877" width="1.1345%" height="15" fill="rgb(252,129,43)" fg:x="183278942" fg:w="3761566"/><text x="55.5280%" y="1887.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3,761,566 samples, 1.13%)</title><rect x="55.2780%" y="1861" width="1.1345%" height="15" fill="rgb(248,183,27)" fg:x="183278942" fg:w="3761566"/><text x="55.5280%" y="1871.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3,761,566 samples, 1.13%)</title><rect x="55.2780%" y="1845" width="1.1345%" height="15" fill="rgb(250,0,22)" fg:x="183278942" fg:w="3761566"/><text x="55.5280%" y="1855.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,761,566 samples, 1.13%)</title><rect x="55.2780%" y="1829" width="1.1345%" height="15" fill="rgb(213,166,10)" fg:x="183278942" fg:w="3761566"/><text x="55.5280%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,761,566 samples, 1.13%)</title><rect x="55.2780%" y="1813" width="1.1345%" height="15" fill="rgb(207,163,36)" fg:x="183278942" fg:w="3761566"/><text x="55.5280%" y="1823.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,761,566 samples, 1.13%)</title><rect x="55.2780%" y="1797" width="1.1345%" height="15" fill="rgb(208,122,22)" fg:x="183278942" fg:w="3761566"/><text x="55.5280%" y="1807.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3,761,566 samples, 1.13%)</title><rect x="55.2780%" y="1781" width="1.1345%" height="15" fill="rgb(207,104,49)" fg:x="183278942" fg:w="3761566"/><text x="55.5280%" y="1791.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,527,957 samples, 0.76%)</title><rect x="55.6500%" y="1765" width="0.7624%" height="15" fill="rgb(248,211,50)" fg:x="184512551" fg:w="2527957"/><text x="55.9000%" y="1775.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,261,204 samples, 0.38%)</title><rect x="56.0321%" y="1749" width="0.3804%" height="15" fill="rgb(217,13,45)" fg:x="185779304" fg:w="1261204"/><text x="56.2821%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,261,204 samples, 0.38%)</title><rect x="56.0321%" y="1733" width="0.3804%" height="15" fill="rgb(211,216,49)" fg:x="185779304" fg:w="1261204"/><text x="56.2821%" y="1743.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1,261,204 samples, 0.38%)</title><rect x="56.0321%" y="1717" width="0.3804%" height="15" fill="rgb(221,58,53)" fg:x="185779304" fg:w="1261204"/><text x="56.2821%" y="1727.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,261,204 samples, 0.38%)</title><rect x="56.0321%" y="1701" width="0.3804%" height="15" fill="rgb(220,112,41)" fg:x="185779304" fg:w="1261204"/><text x="56.2821%" y="1711.50"></text></g><g><title>hashbrown::map::make_hash (1,261,204 samples, 0.38%)</title><rect x="56.0321%" y="1685" width="0.3804%" height="15" fill="rgb(236,38,28)" fg:x="185779304" fg:w="1261204"/><text x="56.2821%" y="1695.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,261,204 samples, 0.38%)</title><rect x="56.0321%" y="1669" width="0.3804%" height="15" fill="rgb(227,195,22)" fg:x="185779304" fg:w="1261204"/><text x="56.2821%" y="1679.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,261,204 samples, 0.38%)</title><rect x="56.0321%" y="1653" width="0.3804%" height="15" fill="rgb(214,55,33)" fg:x="185779304" fg:w="1261204"/><text x="56.2821%" y="1663.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1,261,204 samples, 0.38%)</title><rect x="56.0321%" y="1637" width="0.3804%" height="15" fill="rgb(248,80,13)" fg:x="185779304" fg:w="1261204"/><text x="56.2821%" y="1647.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1,261,204 samples, 0.38%)</title><rect x="56.0321%" y="1621" width="0.3804%" height="15" fill="rgb(238,52,6)" fg:x="185779304" fg:w="1261204"/><text x="56.2821%" y="1631.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1,261,204 samples, 0.38%)</title><rect x="56.0321%" y="1605" width="0.3804%" height="15" fill="rgb(224,198,47)" fg:x="185779304" fg:w="1261204"/><text x="56.2821%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1,261,204 samples, 0.38%)</title><rect x="56.0321%" y="1589" width="0.3804%" height="15" fill="rgb(233,171,20)" fg:x="185779304" fg:w="1261204"/><text x="56.2821%" y="1599.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1,261,204 samples, 0.38%)</title><rect x="56.0321%" y="1573" width="0.3804%" height="15" fill="rgb(241,30,25)" fg:x="185779304" fg:w="1261204"/><text x="56.2821%" y="1583.50"></text></g><g><title>benchmark::json_to_html_node (15,168,118 samples, 4.57%)</title><rect x="52.1428%" y="1925" width="4.5748%" height="15" fill="rgb(207,171,38)" fg:x="172883974" fg:w="15168118"/><text x="52.3928%" y="1935.50">bench..</text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (1,011,584 samples, 0.31%)</title><rect x="56.4125%" y="1909" width="0.3051%" height="15" fill="rgb(234,70,1)" fg:x="187040508" fg:w="1011584"/><text x="56.6625%" y="1919.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,011,584 samples, 0.31%)</title><rect x="56.4125%" y="1893" width="0.3051%" height="15" fill="rgb(232,178,18)" fg:x="187040508" fg:w="1011584"/><text x="56.6625%" y="1903.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,011,584 samples, 0.31%)</title><rect x="56.4125%" y="1877" width="0.3051%" height="15" fill="rgb(241,78,40)" fg:x="187040508" fg:w="1011584"/><text x="56.6625%" y="1887.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,011,584 samples, 0.31%)</title><rect x="56.4125%" y="1861" width="0.3051%" height="15" fill="rgb(222,35,25)" fg:x="187040508" fg:w="1011584"/><text x="56.6625%" y="1871.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,011,584 samples, 0.31%)</title><rect x="56.4125%" y="1845" width="0.3051%" height="15" fill="rgb(207,92,16)" fg:x="187040508" fg:w="1011584"/><text x="56.6625%" y="1855.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,011,584 samples, 0.31%)</title><rect x="56.4125%" y="1829" width="0.3051%" height="15" fill="rgb(216,59,51)" fg:x="187040508" fg:w="1011584"/><text x="56.6625%" y="1839.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,011,584 samples, 0.31%)</title><rect x="56.4125%" y="1813" width="0.3051%" height="15" fill="rgb(213,80,28)" fg:x="187040508" fg:w="1011584"/><text x="56.6625%" y="1823.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,011,584 samples, 0.31%)</title><rect x="56.4125%" y="1797" width="0.3051%" height="15" fill="rgb(220,93,7)" fg:x="187040508" fg:w="1011584"/><text x="56.6625%" y="1807.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,011,584 samples, 0.31%)</title><rect x="56.4125%" y="1781" width="0.3051%" height="15" fill="rgb(225,24,44)" fg:x="187040508" fg:w="1011584"/><text x="56.6625%" y="1791.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,011,584 samples, 0.31%)</title><rect x="56.4125%" y="1765" width="0.3051%" height="15" fill="rgb(243,74,40)" fg:x="187040508" fg:w="1011584"/><text x="56.6625%" y="1775.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,011,584 samples, 0.31%)</title><rect x="56.4125%" y="1749" width="0.3051%" height="15" fill="rgb(228,39,7)" fg:x="187040508" fg:w="1011584"/><text x="56.6625%" y="1759.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (1,011,584 samples, 0.31%)</title><rect x="56.4125%" y="1733" width="0.3051%" height="15" fill="rgb(227,79,8)" fg:x="187040508" fg:w="1011584"/><text x="56.6625%" y="1743.50"></text></g><g><title>benchmark::apply_frame_modifications (18,904,364 samples, 5.70%)</title><rect x="51.3820%" y="1941" width="5.7017%" height="15" fill="rgb(236,58,11)" fg:x="170361652" fg:w="18904364"/><text x="51.6320%" y="1951.50">benchma..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (1,213,924 samples, 0.37%)</title><rect x="56.7176%" y="1925" width="0.3661%" height="15" fill="rgb(249,63,35)" fg:x="188052092" fg:w="1213924"/><text x="56.9676%" y="1935.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (1,213,924 samples, 0.37%)</title><rect x="56.7176%" y="1909" width="0.3661%" height="15" fill="rgb(252,114,16)" fg:x="188052092" fg:w="1213924"/><text x="56.9676%" y="1919.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (1,213,924 samples, 0.37%)</title><rect x="56.7176%" y="1893" width="0.3661%" height="15" fill="rgb(254,151,24)" fg:x="188052092" fg:w="1213924"/><text x="56.9676%" y="1903.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (1,213,924 samples, 0.37%)</title><rect x="56.7176%" y="1877" width="0.3661%" height="15" fill="rgb(253,54,39)" fg:x="188052092" fg:w="1213924"/><text x="56.9676%" y="1887.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,213,924 samples, 0.37%)</title><rect x="56.7176%" y="1861" width="0.3661%" height="15" fill="rgb(243,25,45)" fg:x="188052092" fg:w="1213924"/><text x="56.9676%" y="1871.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,213,924 samples, 0.37%)</title><rect x="56.7176%" y="1845" width="0.3661%" height="15" fill="rgb(234,134,9)" fg:x="188052092" fg:w="1213924"/><text x="56.9676%" y="1855.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1,213,924 samples, 0.37%)</title><rect x="56.7176%" y="1829" width="0.3661%" height="15" fill="rgb(227,166,31)" fg:x="188052092" fg:w="1213924"/><text x="56.9676%" y="1839.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,213,924 samples, 0.37%)</title><rect x="56.7176%" y="1813" width="0.3661%" height="15" fill="rgb(245,143,41)" fg:x="188052092" fg:w="1213924"/><text x="56.9676%" y="1823.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (1,213,924 samples, 0.37%)</title><rect x="56.7176%" y="1797" width="0.3661%" height="15" fill="rgb(238,181,32)" fg:x="188052092" fg:w="1213924"/><text x="56.9676%" y="1807.50"></text></g><g><title>benchmark::clear_dirty_flags (1,263,507 samples, 0.38%)</title><rect x="57.0837%" y="1941" width="0.3811%" height="15" fill="rgb(224,113,18)" fg:x="189266016" fg:w="1263507"/><text x="57.3337%" y="1951.50"></text></g><g><title>benchmark::clear_dirty_flags (1,263,507 samples, 0.38%)</title><rect x="57.0837%" y="1925" width="0.3811%" height="15" fill="rgb(240,229,28)" fg:x="189266016" fg:w="1263507"/><text x="57.3337%" y="1935.50"></text></g><g><title>benchmark::clear_dirty_flags (1,263,507 samples, 0.38%)</title><rect x="57.0837%" y="1909" width="0.3811%" height="15" fill="rgb(250,185,3)" fg:x="189266016" fg:w="1263507"/><text x="57.3337%" y="1919.50"></text></g><g><title>benchmark::clear_dirty_flags (1,263,507 samples, 0.38%)</title><rect x="57.0837%" y="1893" width="0.3811%" height="15" fill="rgb(212,59,25)" fg:x="189266016" fg:w="1263507"/><text x="57.3337%" y="1903.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,263,507 samples, 0.38%)</title><rect x="57.0837%" y="1877" width="0.3811%" height="15" fill="rgb(221,87,20)" fg:x="189266016" fg:w="1263507"/><text x="57.3337%" y="1887.50"></text></g><g><title>benchmark::count_nodes (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1941" width="0.7607%" height="15" fill="rgb(213,74,28)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1951.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1925" width="0.7607%" height="15" fill="rgb(224,132,34)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1935.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1909" width="0.7607%" height="15" fill="rgb(222,101,24)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1919.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1893" width="0.7607%" height="15" fill="rgb(254,142,4)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1903.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1877" width="0.7607%" height="15" fill="rgb(230,229,49)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1887.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1861" width="0.7607%" height="15" fill="rgb(238,70,47)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1871.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1845" width="0.7607%" height="15" fill="rgb(231,160,17)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1855.50"></text></g><g><title>benchmark::count_nodes (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1829" width="0.7607%" height="15" fill="rgb(218,68,53)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1813" width="0.7607%" height="15" fill="rgb(236,111,10)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1823.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1797" width="0.7607%" height="15" fill="rgb(224,34,41)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1781" width="0.7607%" height="15" fill="rgb(241,118,19)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1791.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1765" width="0.7607%" height="15" fill="rgb(238,129,25)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1775.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1749" width="0.7607%" height="15" fill="rgb(238,22,31)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1759.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1733" width="0.7607%" height="15" fill="rgb(222,174,48)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1743.50"></text></g><g><title>benchmark::count_nodes (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1717" width="0.7607%" height="15" fill="rgb(206,152,40)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1701" width="0.7607%" height="15" fill="rgb(218,99,54)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1711.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1685" width="0.7607%" height="15" fill="rgb(220,174,26)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1669" width="0.7607%" height="15" fill="rgb(245,116,9)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1679.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1653" width="0.7607%" height="15" fill="rgb(209,72,35)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1663.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1637" width="0.7607%" height="15" fill="rgb(226,126,21)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1647.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1621" width="0.7607%" height="15" fill="rgb(227,192,1)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1631.50"></text></g><g><title>benchmark::count_nodes (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1605" width="0.7607%" height="15" fill="rgb(237,180,29)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1589" width="0.7607%" height="15" fill="rgb(230,197,35)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1599.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1573" width="0.7607%" height="15" fill="rgb(246,193,31)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1557" width="0.7607%" height="15" fill="rgb(241,36,4)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1567.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1541" width="0.7607%" height="15" fill="rgb(241,130,17)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1551.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1525" width="0.7607%" height="15" fill="rgb(206,137,32)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1535.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1509" width="0.7607%" height="15" fill="rgb(237,228,51)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1519.50"></text></g><g><title>benchmark::count_nodes (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1493" width="0.7607%" height="15" fill="rgb(243,6,42)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1477" width="0.7607%" height="15" fill="rgb(251,74,28)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1487.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1461" width="0.7607%" height="15" fill="rgb(218,20,49)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1471.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1445" width="0.7607%" height="15" fill="rgb(238,28,14)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1455.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1429" width="0.7607%" height="15" fill="rgb(229,40,46)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1439.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1413" width="0.7607%" height="15" fill="rgb(244,195,20)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1423.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1397" width="0.7607%" height="15" fill="rgb(253,56,35)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1407.50"></text></g><g><title>benchmark::count_nodes (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1381" width="0.7607%" height="15" fill="rgb(210,149,44)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1365" width="0.7607%" height="15" fill="rgb(240,135,12)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1375.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1349" width="0.7607%" height="15" fill="rgb(251,24,50)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1333" width="0.7607%" height="15" fill="rgb(243,200,47)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1343.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1317" width="0.7607%" height="15" fill="rgb(224,166,26)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1327.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1301" width="0.7607%" height="15" fill="rgb(233,0,47)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1311.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1285" width="0.7607%" height="15" fill="rgb(253,80,5)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1295.50"></text></g><g><title>benchmark::count_nodes (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1269" width="0.7607%" height="15" fill="rgb(214,133,25)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1253" width="0.7607%" height="15" fill="rgb(209,27,14)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1263.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1237" width="0.7607%" height="15" fill="rgb(219,102,51)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1221" width="0.7607%" height="15" fill="rgb(237,18,16)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1231.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1205" width="0.7607%" height="15" fill="rgb(241,85,17)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1215.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1189" width="0.7607%" height="15" fill="rgb(236,90,42)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1199.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1173" width="0.7607%" height="15" fill="rgb(249,57,21)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1183.50"></text></g><g><title>benchmark::count_nodes (2,522,245 samples, 0.76%)</title><rect x="57.4648%" y="1157" width="0.7607%" height="15" fill="rgb(243,12,36)" fg:x="190529523" fg:w="2522245"/><text x="57.7148%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,259,609 samples, 0.38%)</title><rect x="57.8456%" y="1141" width="0.3799%" height="15" fill="rgb(253,128,47)" fg:x="191792159" fg:w="1259609"/><text x="58.0956%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,259,609 samples, 0.38%)</title><rect x="57.8456%" y="1125" width="0.3799%" height="15" fill="rgb(207,33,20)" fg:x="191792159" fg:w="1259609"/><text x="58.0956%" y="1135.50"></text></g><g><title>benchmark::invoke_bitvector_layout (1,099,384 samples, 0.33%)</title><rect x="58.2255%" y="1941" width="0.3316%" height="15" fill="rgb(233,215,35)" fg:x="193051768" fg:w="1099384"/><text x="58.4755%" y="1951.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_bitvector_incremental_with_stats (1,099,384 samples, 0.33%)</title><rect x="58.2255%" y="1925" width="0.3316%" height="15" fill="rgb(249,188,52)" fg:x="193051768" fg:w="1099384"/><text x="58.4755%" y="1935.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_recursive_bitvector_incremental (1,099,384 samples, 0.33%)</title><rect x="58.2255%" y="1909" width="0.3316%" height="15" fill="rgb(225,12,32)" fg:x="193051768" fg:w="1099384"/><text x="58.4755%" y="1919.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_recursive_bitvector_incremental (1,099,384 samples, 0.33%)</title><rect x="58.2255%" y="1893" width="0.3316%" height="15" fill="rgb(247,98,14)" fg:x="193051768" fg:w="1099384"/><text x="58.4755%" y="1903.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_node_generated_bitvector_incremental (1,099,384 samples, 0.33%)</title><rect x="58.2255%" y="1877" width="0.3316%" height="15" fill="rgb(247,219,48)" fg:x="193051768" fg:w="1099384"/><text x="58.4755%" y="1887.50"></text></g><g><title>css_bitvector_compiler::BitVector::with_capacity (1,099,384 samples, 0.33%)</title><rect x="58.2255%" y="1861" width="0.3316%" height="15" fill="rgb(253,60,48)" fg:x="193051768" fg:w="1099384"/><text x="58.4755%" y="1871.50"></text></g><g><title>alloc::vec::from_elem (1,099,384 samples, 0.33%)</title><rect x="58.2255%" y="1845" width="0.3316%" height="15" fill="rgb(245,15,52)" fg:x="193051768" fg:w="1099384"/><text x="58.4755%" y="1855.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,099,384 samples, 0.33%)</title><rect x="58.2255%" y="1829" width="0.3316%" height="15" fill="rgb(220,133,28)" fg:x="193051768" fg:w="1099384"/><text x="58.4755%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1,099,384 samples, 0.33%)</title><rect x="58.2255%" y="1813" width="0.3316%" height="15" fill="rgb(217,180,4)" fg:x="193051768" fg:w="1099384"/><text x="58.4755%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (1,099,384 samples, 0.33%)</title><rect x="58.2255%" y="1797" width="0.3316%" height="15" fill="rgb(251,24,1)" fg:x="193051768" fg:w="1099384"/><text x="58.4755%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,099,384 samples, 0.33%)</title><rect x="58.2255%" y="1781" width="0.3316%" height="15" fill="rgb(212,185,49)" fg:x="193051768" fg:w="1099384"/><text x="58.4755%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1,099,384 samples, 0.33%)</title><rect x="58.2255%" y="1765" width="0.3316%" height="15" fill="rgb(215,175,22)" fg:x="193051768" fg:w="1099384"/><text x="58.4755%" y="1775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,099,384 samples, 0.33%)</title><rect x="58.2255%" y="1749" width="0.3316%" height="15" fill="rgb(250,205,14)" fg:x="193051768" fg:w="1099384"/><text x="58.4755%" y="1759.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1,099,384 samples, 0.33%)</title><rect x="58.2255%" y="1733" width="0.3316%" height="15" fill="rgb(225,211,22)" fg:x="193051768" fg:w="1099384"/><text x="58.4755%" y="1743.50"></text></g><g><title>__libc_calloc (1,099,384 samples, 0.33%)</title><rect x="58.2255%" y="1717" width="0.3316%" height="15" fill="rgb(251,179,42)" fg:x="193051768" fg:w="1099384"/><text x="58.4755%" y="1727.50"></text></g><g><title>benchmark::invoke_trivector_layout (1,261,029 samples, 0.38%)</title><rect x="58.5571%" y="1941" width="0.3803%" height="15" fill="rgb(208,216,51)" fg:x="194151152" fg:w="1261029"/><text x="58.8071%" y="1951.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_tree_incremental_with_stats (1,261,029 samples, 0.38%)</title><rect x="58.5571%" y="1925" width="0.3803%" height="15" fill="rgb(235,36,11)" fg:x="194151152" fg:w="1261029"/><text x="58.8071%" y="1935.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_tree_recursive_incremental (1,261,029 samples, 0.38%)</title><rect x="58.5571%" y="1909" width="0.3803%" height="15" fill="rgb(213,189,28)" fg:x="194151152" fg:w="1261029"/><text x="58.8071%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,222,535 samples, 0.37%)</title><rect x="58.9374%" y="1605" width="0.3687%" height="15" fill="rgb(227,203,42)" fg:x="195412181" fg:w="1222535"/><text x="59.1874%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,222,535 samples, 0.37%)</title><rect x="58.9374%" y="1589" width="0.3687%" height="15" fill="rgb(244,72,36)" fg:x="195412181" fg:w="1222535"/><text x="59.1874%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,222,535 samples, 0.37%)</title><rect x="58.9374%" y="1573" width="0.3687%" height="15" fill="rgb(213,53,17)" fg:x="195412181" fg:w="1222535"/><text x="59.1874%" y="1583.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,222,535 samples, 0.37%)</title><rect x="58.9374%" y="1557" width="0.3687%" height="15" fill="rgb(207,167,3)" fg:x="195412181" fg:w="1222535"/><text x="59.1874%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,222,535 samples, 0.37%)</title><rect x="58.9374%" y="1541" width="0.3687%" height="15" fill="rgb(216,98,30)" fg:x="195412181" fg:w="1222535"/><text x="59.1874%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,222,535 samples, 0.37%)</title><rect x="58.9374%" y="1525" width="0.3687%" height="15" fill="rgb(236,123,15)" fg:x="195412181" fg:w="1222535"/><text x="59.1874%" y="1535.50"></text></g><g><title>alloc::alloc::dealloc (1,222,535 samples, 0.37%)</title><rect x="58.9374%" y="1509" width="0.3687%" height="15" fill="rgb(248,81,50)" fg:x="195412181" fg:w="1222535"/><text x="59.1874%" y="1519.50"></text></g><g><title>cfree (1,222,535 samples, 0.37%)</title><rect x="58.9374%" y="1493" width="0.3687%" height="15" fill="rgb(214,120,4)" fg:x="195412181" fg:w="1222535"/><text x="59.1874%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,517,730 samples, 0.76%)</title><rect x="59.3061%" y="1541" width="0.7594%" height="15" fill="rgb(208,179,34)" fg:x="196634716" fg:w="2517730"/><text x="59.5561%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,517,730 samples, 0.76%)</title><rect x="59.3061%" y="1525" width="0.7594%" height="15" fill="rgb(227,140,7)" fg:x="196634716" fg:w="2517730"/><text x="59.5561%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,517,730 samples, 0.76%)</title><rect x="59.3061%" y="1509" width="0.7594%" height="15" fill="rgb(214,22,6)" fg:x="196634716" fg:w="2517730"/><text x="59.5561%" y="1519.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,517,730 samples, 0.76%)</title><rect x="59.3061%" y="1493" width="0.7594%" height="15" fill="rgb(207,137,27)" fg:x="196634716" fg:w="2517730"/><text x="59.5561%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,517,730 samples, 0.76%)</title><rect x="59.3061%" y="1477" width="0.7594%" height="15" fill="rgb(210,8,46)" fg:x="196634716" fg:w="2517730"/><text x="59.5561%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,517,730 samples, 0.76%)</title><rect x="59.3061%" y="1461" width="0.7594%" height="15" fill="rgb(240,16,54)" fg:x="196634716" fg:w="2517730"/><text x="59.5561%" y="1471.50"></text></g><g><title>alloc::alloc::dealloc (2,517,730 samples, 0.76%)</title><rect x="59.3061%" y="1445" width="0.7594%" height="15" fill="rgb(211,209,29)" fg:x="196634716" fg:w="2517730"/><text x="59.5561%" y="1455.50"></text></g><g><title>cfree (2,517,730 samples, 0.76%)</title><rect x="59.3061%" y="1429" width="0.7594%" height="15" fill="rgb(226,228,24)" fg:x="196634716" fg:w="2517730"/><text x="59.5561%" y="1439.50"></text></g><g><title>[libc.so.6] (1,258,749 samples, 0.38%)</title><rect x="59.6858%" y="1413" width="0.3796%" height="15" fill="rgb(222,84,9)" fg:x="197893697" fg:w="1258749"/><text x="59.9358%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,259,615 samples, 0.38%)</title><rect x="60.0655%" y="1477" width="0.3799%" height="15" fill="rgb(234,203,30)" fg:x="199152446" fg:w="1259615"/><text x="60.3155%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,259,615 samples, 0.38%)</title><rect x="60.0655%" y="1461" width="0.3799%" height="15" fill="rgb(238,109,14)" fg:x="199152446" fg:w="1259615"/><text x="60.3155%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,259,615 samples, 0.38%)</title><rect x="60.0655%" y="1445" width="0.3799%" height="15" fill="rgb(233,206,34)" fg:x="199152446" fg:w="1259615"/><text x="60.3155%" y="1455.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,259,615 samples, 0.38%)</title><rect x="60.0655%" y="1429" width="0.3799%" height="15" fill="rgb(220,167,47)" fg:x="199152446" fg:w="1259615"/><text x="60.3155%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,259,615 samples, 0.38%)</title><rect x="60.0655%" y="1413" width="0.3799%" height="15" fill="rgb(238,105,10)" fg:x="199152446" fg:w="1259615"/><text x="60.3155%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,259,615 samples, 0.38%)</title><rect x="60.0655%" y="1397" width="0.3799%" height="15" fill="rgb(213,227,17)" fg:x="199152446" fg:w="1259615"/><text x="60.3155%" y="1407.50"></text></g><g><title>alloc::alloc::dealloc (1,259,615 samples, 0.38%)</title><rect x="60.0655%" y="1381" width="0.3799%" height="15" fill="rgb(217,132,38)" fg:x="199152446" fg:w="1259615"/><text x="60.3155%" y="1391.50"></text></g><g><title>cfree (1,259,615 samples, 0.38%)</title><rect x="60.0655%" y="1365" width="0.3799%" height="15" fill="rgb(242,146,4)" fg:x="199152446" fg:w="1259615"/><text x="60.3155%" y="1375.50"></text></g><g><title>[libc.so.6] (1,259,615 samples, 0.38%)</title><rect x="60.0655%" y="1349" width="0.3799%" height="15" fill="rgb(212,61,9)" fg:x="199152446" fg:w="1259615"/><text x="60.3155%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (991,355 samples, 0.30%)</title><rect x="60.8286%" y="1285" width="0.2990%" height="15" fill="rgb(247,126,22)" fg:x="201682525" fg:w="991355"/><text x="61.0786%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (991,355 samples, 0.30%)</title><rect x="60.8286%" y="1269" width="0.2990%" height="15" fill="rgb(220,196,2)" fg:x="201682525" fg:w="991355"/><text x="61.0786%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (991,355 samples, 0.30%)</title><rect x="60.8286%" y="1253" width="0.2990%" height="15" fill="rgb(208,46,4)" fg:x="201682525" fg:w="991355"/><text x="61.0786%" y="1263.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (991,355 samples, 0.30%)</title><rect x="60.8286%" y="1237" width="0.2990%" height="15" fill="rgb(252,104,46)" fg:x="201682525" fg:w="991355"/><text x="61.0786%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (991,355 samples, 0.30%)</title><rect x="60.8286%" y="1221" width="0.2990%" height="15" fill="rgb(237,152,48)" fg:x="201682525" fg:w="991355"/><text x="61.0786%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (991,355 samples, 0.30%)</title><rect x="60.8286%" y="1205" width="0.2990%" height="15" fill="rgb(221,59,37)" fg:x="201682525" fg:w="991355"/><text x="61.0786%" y="1215.50"></text></g><g><title>alloc::alloc::dealloc (991,355 samples, 0.30%)</title><rect x="60.8286%" y="1189" width="0.2990%" height="15" fill="rgb(209,202,51)" fg:x="201682525" fg:w="991355"/><text x="61.0786%" y="1199.50"></text></g><g><title>cfree (991,355 samples, 0.30%)</title><rect x="60.8286%" y="1173" width="0.2990%" height="15" fill="rgb(228,81,30)" fg:x="201682525" fg:w="991355"/><text x="61.0786%" y="1183.50"></text></g><g><title>[libc.so.6] (991,355 samples, 0.30%)</title><rect x="60.8286%" y="1157" width="0.2990%" height="15" fill="rgb(227,42,39)" fg:x="201682525" fg:w="991355"/><text x="61.0786%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1,260,532 samples, 0.38%)</title><rect x="61.1276%" y="1125" width="0.3802%" height="15" fill="rgb(221,26,2)" fg:x="202673880" fg:w="1260532"/><text x="61.3776%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1,260,532 samples, 0.38%)</title><rect x="61.1276%" y="1109" width="0.3802%" height="15" fill="rgb(254,61,31)" fg:x="202673880" fg:w="1260532"/><text x="61.3776%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (1,260,532 samples, 0.38%)</title><rect x="61.1276%" y="1093" width="0.3802%" height="15" fill="rgb(222,173,38)" fg:x="202673880" fg:w="1260532"/><text x="61.3776%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (1,260,532 samples, 0.38%)</title><rect x="61.1276%" y="1077" width="0.3802%" height="15" fill="rgb(218,50,12)" fg:x="202673880" fg:w="1260532"/><text x="61.3776%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,265,785 samples, 0.38%)</title><rect x="61.5078%" y="1093" width="0.3818%" height="15" fill="rgb(223,88,40)" fg:x="203934412" fg:w="1265785"/><text x="61.7578%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,265,785 samples, 0.38%)</title><rect x="61.5078%" y="1077" width="0.3818%" height="15" fill="rgb(237,54,19)" fg:x="203934412" fg:w="1265785"/><text x="61.7578%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,265,785 samples, 0.38%)</title><rect x="61.5078%" y="1061" width="0.3818%" height="15" fill="rgb(251,129,25)" fg:x="203934412" fg:w="1265785"/><text x="61.7578%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,265,785 samples, 0.38%)</title><rect x="61.5078%" y="1045" width="0.3818%" height="15" fill="rgb(238,97,19)" fg:x="203934412" fg:w="1265785"/><text x="61.7578%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,265,785 samples, 0.38%)</title><rect x="61.5078%" y="1029" width="0.3818%" height="15" fill="rgb(240,169,18)" fg:x="203934412" fg:w="1265785"/><text x="61.7578%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,265,785 samples, 0.38%)</title><rect x="61.5078%" y="1013" width="0.3818%" height="15" fill="rgb(230,187,49)" fg:x="203934412" fg:w="1265785"/><text x="61.7578%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (1,265,785 samples, 0.38%)</title><rect x="61.5078%" y="997" width="0.3818%" height="15" fill="rgb(209,44,26)" fg:x="203934412" fg:w="1265785"/><text x="61.7578%" y="1007.50"></text></g><g><title>cfree (1,265,785 samples, 0.38%)</title><rect x="61.5078%" y="981" width="0.3818%" height="15" fill="rgb(244,0,6)" fg:x="203934412" fg:w="1265785"/><text x="61.7578%" y="991.50"></text></g><g><title>[libc.so.6] (1,265,785 samples, 0.38%)</title><rect x="61.5078%" y="965" width="0.3818%" height="15" fill="rgb(248,18,21)" fg:x="203934412" fg:w="1265785"/><text x="61.7578%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,101,816 samples, 0.33%)</title><rect x="61.8895%" y="837" width="0.3323%" height="15" fill="rgb(245,180,19)" fg:x="205200197" fg:w="1101816"/><text x="62.1395%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,101,816 samples, 0.33%)</title><rect x="61.8895%" y="821" width="0.3323%" height="15" fill="rgb(252,118,36)" fg:x="205200197" fg:w="1101816"/><text x="62.1395%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,101,816 samples, 0.33%)</title><rect x="61.8895%" y="805" width="0.3323%" height="15" fill="rgb(210,224,19)" fg:x="205200197" fg:w="1101816"/><text x="62.1395%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,101,816 samples, 0.33%)</title><rect x="61.8895%" y="789" width="0.3323%" height="15" fill="rgb(218,30,24)" fg:x="205200197" fg:w="1101816"/><text x="62.1395%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,101,816 samples, 0.33%)</title><rect x="61.8895%" y="773" width="0.3323%" height="15" fill="rgb(219,75,50)" fg:x="205200197" fg:w="1101816"/><text x="62.1395%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,101,816 samples, 0.33%)</title><rect x="61.8895%" y="757" width="0.3323%" height="15" fill="rgb(234,72,50)" fg:x="205200197" fg:w="1101816"/><text x="62.1395%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (1,101,816 samples, 0.33%)</title><rect x="61.8895%" y="741" width="0.3323%" height="15" fill="rgb(219,100,48)" fg:x="205200197" fg:w="1101816"/><text x="62.1395%" y="751.50"></text></g><g><title>cfree (1,101,816 samples, 0.33%)</title><rect x="61.8895%" y="725" width="0.3323%" height="15" fill="rgb(253,5,41)" fg:x="205200197" fg:w="1101816"/><text x="62.1395%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,243,196 samples, 0.37%)</title><rect x="62.2218%" y="773" width="0.3750%" height="15" fill="rgb(247,181,11)" fg:x="206302013" fg:w="1243196"/><text x="62.4718%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,243,196 samples, 0.37%)</title><rect x="62.2218%" y="757" width="0.3750%" height="15" fill="rgb(222,223,25)" fg:x="206302013" fg:w="1243196"/><text x="62.4718%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,243,196 samples, 0.37%)</title><rect x="62.2218%" y="741" width="0.3750%" height="15" fill="rgb(214,198,28)" fg:x="206302013" fg:w="1243196"/><text x="62.4718%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,243,196 samples, 0.37%)</title><rect x="62.2218%" y="725" width="0.3750%" height="15" fill="rgb(230,46,43)" fg:x="206302013" fg:w="1243196"/><text x="62.4718%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,243,196 samples, 0.37%)</title><rect x="62.2218%" y="709" width="0.3750%" height="15" fill="rgb(233,65,53)" fg:x="206302013" fg:w="1243196"/><text x="62.4718%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,243,196 samples, 0.37%)</title><rect x="62.2218%" y="693" width="0.3750%" height="15" fill="rgb(221,121,27)" fg:x="206302013" fg:w="1243196"/><text x="62.4718%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (1,243,196 samples, 0.37%)</title><rect x="62.2218%" y="677" width="0.3750%" height="15" fill="rgb(247,70,47)" fg:x="206302013" fg:w="1243196"/><text x="62.4718%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,505,873 samples, 0.76%)</title><rect x="62.2218%" y="821" width="0.7558%" height="15" fill="rgb(228,85,35)" fg:x="206302013" fg:w="2505873"/><text x="62.4718%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,505,873 samples, 0.76%)</title><rect x="62.2218%" y="805" width="0.7558%" height="15" fill="rgb(209,50,18)" fg:x="206302013" fg:w="2505873"/><text x="62.4718%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,505,873 samples, 0.76%)</title><rect x="62.2218%" y="789" width="0.7558%" height="15" fill="rgb(250,19,35)" fg:x="206302013" fg:w="2505873"/><text x="62.4718%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,262,677 samples, 0.38%)</title><rect x="62.5968%" y="773" width="0.3808%" height="15" fill="rgb(253,107,29)" fg:x="207545209" fg:w="1262677"/><text x="62.8468%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,262,677 samples, 0.38%)</title><rect x="62.5968%" y="757" width="0.3808%" height="15" fill="rgb(252,179,29)" fg:x="207545209" fg:w="1262677"/><text x="62.8468%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,262,677 samples, 0.38%)</title><rect x="62.5968%" y="741" width="0.3808%" height="15" fill="rgb(238,194,6)" fg:x="207545209" fg:w="1262677"/><text x="62.8468%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,262,677 samples, 0.38%)</title><rect x="62.5968%" y="725" width="0.3808%" height="15" fill="rgb(238,164,29)" fg:x="207545209" fg:w="1262677"/><text x="62.8468%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,262,677 samples, 0.38%)</title><rect x="62.5968%" y="709" width="0.3808%" height="15" fill="rgb(224,25,9)" fg:x="207545209" fg:w="1262677"/><text x="62.8468%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,262,677 samples, 0.38%)</title><rect x="62.5968%" y="693" width="0.3808%" height="15" fill="rgb(244,153,23)" fg:x="207545209" fg:w="1262677"/><text x="62.8468%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,262,677 samples, 0.38%)</title><rect x="62.5968%" y="677" width="0.3808%" height="15" fill="rgb(212,203,14)" fg:x="207545209" fg:w="1262677"/><text x="62.8468%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1,262,677 samples, 0.38%)</title><rect x="62.5968%" y="661" width="0.3808%" height="15" fill="rgb(220,164,20)" fg:x="207545209" fg:w="1262677"/><text x="62.8468%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1,262,677 samples, 0.38%)</title><rect x="62.5968%" y="645" width="0.3808%" height="15" fill="rgb(222,203,48)" fg:x="207545209" fg:w="1262677"/><text x="62.8468%" y="655.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load_aligned (1,262,677 samples, 0.38%)</title><rect x="62.5968%" y="629" width="0.3808%" height="15" fill="rgb(215,159,22)" fg:x="207545209" fg:w="1262677"/><text x="62.8468%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1,262,677 samples, 0.38%)</title><rect x="62.5968%" y="613" width="0.3808%" height="15" fill="rgb(216,183,47)" fg:x="207545209" fg:w="1262677"/><text x="62.8468%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,018,203 samples, 1.51%)</title><rect x="62.2218%" y="837" width="1.5135%" height="15" fill="rgb(229,195,25)" fg:x="206302013" fg:w="5018203"/><text x="62.4718%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,512,330 samples, 0.76%)</title><rect x="62.9776%" y="821" width="0.7577%" height="15" fill="rgb(224,132,51)" fg:x="208807886" fg:w="2512330"/><text x="63.2276%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,512,330 samples, 0.76%)</title><rect x="62.9776%" y="805" width="0.7577%" height="15" fill="rgb(240,63,7)" fg:x="208807886" fg:w="2512330"/><text x="63.2276%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,512,330 samples, 0.76%)</title><rect x="62.9776%" y="789" width="0.7577%" height="15" fill="rgb(249,182,41)" fg:x="208807886" fg:w="2512330"/><text x="63.2276%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,512,330 samples, 0.76%)</title><rect x="62.9776%" y="773" width="0.7577%" height="15" fill="rgb(243,47,26)" fg:x="208807886" fg:w="2512330"/><text x="63.2276%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (2,512,330 samples, 0.76%)</title><rect x="62.9776%" y="757" width="0.7577%" height="15" fill="rgb(233,48,2)" fg:x="208807886" fg:w="2512330"/><text x="63.2276%" y="767.50"></text></g><g><title>cfree (2,512,330 samples, 0.76%)</title><rect x="62.9776%" y="741" width="0.7577%" height="15" fill="rgb(244,165,34)" fg:x="208807886" fg:w="2512330"/><text x="63.2276%" y="751.50"></text></g><g><title>[libc.so.6] (1,253,729 samples, 0.38%)</title><rect x="63.3572%" y="725" width="0.3781%" height="15" fill="rgb(207,89,7)" fg:x="210066487" fg:w="1253729"/><text x="63.6072%" y="735.50"></text></g><g><title>[libc.so.6] (1,253,729 samples, 0.38%)</title><rect x="63.3572%" y="709" width="0.3781%" height="15" fill="rgb(244,117,36)" fg:x="210066487" fg:w="1253729"/><text x="63.6072%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,365,442 samples, 2.22%)</title><rect x="61.8895%" y="885" width="2.2215%" height="15" fill="rgb(226,144,34)" fg:x="205200197" fg:w="7365442"/><text x="62.1395%" y="895.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (7,365,442 samples, 2.22%)</title><rect x="61.8895%" y="869" width="2.2215%" height="15" fill="rgb(213,23,19)" fg:x="205200197" fg:w="7365442"/><text x="62.1395%" y="879.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (7,365,442 samples, 2.22%)</title><rect x="61.8895%" y="853" width="2.2215%" height="15" fill="rgb(217,75,12)" fg:x="205200197" fg:w="7365442"/><text x="62.1395%" y="863.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,245,423 samples, 0.38%)</title><rect x="63.7354%" y="837" width="0.3756%" height="15" fill="rgb(224,159,17)" fg:x="211320216" fg:w="1245423"/><text x="63.9854%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,245,423 samples, 0.38%)</title><rect x="63.7354%" y="821" width="0.3756%" height="15" fill="rgb(217,118,1)" fg:x="211320216" fg:w="1245423"/><text x="63.9854%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,245,423 samples, 0.38%)</title><rect x="63.7354%" y="805" width="0.3756%" height="15" fill="rgb(232,180,48)" fg:x="211320216" fg:w="1245423"/><text x="63.9854%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,245,423 samples, 0.38%)</title><rect x="63.7354%" y="789" width="0.3756%" height="15" fill="rgb(230,27,33)" fg:x="211320216" fg:w="1245423"/><text x="63.9854%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,245,423 samples, 0.38%)</title><rect x="63.7354%" y="773" width="0.3756%" height="15" fill="rgb(205,31,21)" fg:x="211320216" fg:w="1245423"/><text x="63.9854%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,245,423 samples, 0.38%)</title><rect x="63.7354%" y="757" width="0.3756%" height="15" fill="rgb(253,59,4)" fg:x="211320216" fg:w="1245423"/><text x="63.9854%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,245,423 samples, 0.38%)</title><rect x="63.7354%" y="741" width="0.3756%" height="15" fill="rgb(224,201,9)" fg:x="211320216" fg:w="1245423"/><text x="63.9854%" y="751.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,245,423 samples, 0.38%)</title><rect x="63.7354%" y="725" width="0.3756%" height="15" fill="rgb(229,206,30)" fg:x="211320216" fg:w="1245423"/><text x="63.9854%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,245,423 samples, 0.38%)</title><rect x="63.7354%" y="709" width="0.3756%" height="15" fill="rgb(212,67,47)" fg:x="211320216" fg:w="1245423"/><text x="63.9854%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,245,423 samples, 0.38%)</title><rect x="63.7354%" y="693" width="0.3756%" height="15" fill="rgb(211,96,50)" fg:x="211320216" fg:w="1245423"/><text x="63.9854%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,245,423 samples, 0.38%)</title><rect x="63.7354%" y="677" width="0.3756%" height="15" fill="rgb(252,114,18)" fg:x="211320216" fg:w="1245423"/><text x="63.9854%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,245,423 samples, 0.38%)</title><rect x="63.7354%" y="661" width="0.3756%" height="15" fill="rgb(223,58,37)" fg:x="211320216" fg:w="1245423"/><text x="63.9854%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,245,423 samples, 0.38%)</title><rect x="63.7354%" y="645" width="0.3756%" height="15" fill="rgb(237,70,4)" fg:x="211320216" fg:w="1245423"/><text x="63.9854%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,245,423 samples, 0.38%)</title><rect x="63.7354%" y="629" width="0.3756%" height="15" fill="rgb(244,85,46)" fg:x="211320216" fg:w="1245423"/><text x="63.9854%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,245,423 samples, 0.38%)</title><rect x="63.7354%" y="613" width="0.3756%" height="15" fill="rgb(223,39,52)" fg:x="211320216" fg:w="1245423"/><text x="63.9854%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,245,423 samples, 0.38%)</title><rect x="63.7354%" y="597" width="0.3756%" height="15" fill="rgb(218,200,14)" fg:x="211320216" fg:w="1245423"/><text x="63.9854%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (1,245,423 samples, 0.38%)</title><rect x="63.7354%" y="581" width="0.3756%" height="15" fill="rgb(208,171,16)" fg:x="211320216" fg:w="1245423"/><text x="63.9854%" y="591.50"></text></g><g><title>cfree (1,245,423 samples, 0.38%)</title><rect x="63.7354%" y="565" width="0.3756%" height="15" fill="rgb(234,200,18)" fg:x="211320216" fg:w="1245423"/><text x="63.9854%" y="575.50"></text></g><g><title>[libc.so.6] (1,245,423 samples, 0.38%)</title><rect x="63.7354%" y="549" width="0.3756%" height="15" fill="rgb(228,45,11)" fg:x="211320216" fg:w="1245423"/><text x="63.9854%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (8,635,540 samples, 2.60%)</title><rect x="61.8895%" y="901" width="2.6045%" height="15" fill="rgb(237,182,11)" fg:x="205200197" fg:w="8635540"/><text x="62.1395%" y="911.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,270,098 samples, 0.38%)</title><rect x="64.1110%" y="885" width="0.3831%" height="15" fill="rgb(241,175,49)" fg:x="212565639" fg:w="1270098"/><text x="64.3610%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,270,098 samples, 0.38%)</title><rect x="64.1110%" y="869" width="0.3831%" height="15" fill="rgb(247,38,35)" fg:x="212565639" fg:w="1270098"/><text x="64.3610%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,270,098 samples, 0.38%)</title><rect x="64.1110%" y="853" width="0.3831%" height="15" fill="rgb(228,39,49)" fg:x="212565639" fg:w="1270098"/><text x="64.3610%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,270,098 samples, 0.38%)</title><rect x="64.1110%" y="837" width="0.3831%" height="15" fill="rgb(226,101,26)" fg:x="212565639" fg:w="1270098"/><text x="64.3610%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (1,270,098 samples, 0.38%)</title><rect x="64.1110%" y="821" width="0.3831%" height="15" fill="rgb(206,141,19)" fg:x="212565639" fg:w="1270098"/><text x="64.3610%" y="831.50"></text></g><g><title>cfree (1,270,098 samples, 0.38%)</title><rect x="64.1110%" y="805" width="0.3831%" height="15" fill="rgb(211,200,13)" fg:x="212565639" fg:w="1270098"/><text x="64.3610%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,701,008 samples, 2.93%)</title><rect x="61.8895%" y="965" width="2.9259%" height="15" fill="rgb(241,121,6)" fg:x="205200197" fg:w="9701008"/><text x="62.1395%" y="975.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,701,008 samples, 2.93%)</title><rect x="61.8895%" y="949" width="2.9259%" height="15" fill="rgb(234,221,29)" fg:x="205200197" fg:w="9701008"/><text x="62.1395%" y="959.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,701,008 samples, 2.93%)</title><rect x="61.8895%" y="933" width="2.9259%" height="15" fill="rgb(229,136,5)" fg:x="205200197" fg:w="9701008"/><text x="62.1395%" y="943.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,701,008 samples, 2.93%)</title><rect x="61.8895%" y="917" width="2.9259%" height="15" fill="rgb(238,36,11)" fg:x="205200197" fg:w="9701008"/><text x="62.1395%" y="927.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,065,468 samples, 0.32%)</title><rect x="64.4941%" y="901" width="0.3214%" height="15" fill="rgb(251,55,41)" fg:x="213835737" fg:w="1065468"/><text x="64.7441%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,065,468 samples, 0.32%)</title><rect x="64.4941%" y="885" width="0.3214%" height="15" fill="rgb(242,34,40)" fg:x="213835737" fg:w="1065468"/><text x="64.7441%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,065,468 samples, 0.32%)</title><rect x="64.4941%" y="869" width="0.3214%" height="15" fill="rgb(215,42,17)" fg:x="213835737" fg:w="1065468"/><text x="64.7441%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,065,468 samples, 0.32%)</title><rect x="64.4941%" y="853" width="0.3214%" height="15" fill="rgb(207,44,46)" fg:x="213835737" fg:w="1065468"/><text x="64.7441%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,065,468 samples, 0.32%)</title><rect x="64.4941%" y="837" width="0.3214%" height="15" fill="rgb(211,206,28)" fg:x="213835737" fg:w="1065468"/><text x="64.7441%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,065,468 samples, 0.32%)</title><rect x="64.4941%" y="821" width="0.3214%" height="15" fill="rgb(237,167,16)" fg:x="213835737" fg:w="1065468"/><text x="64.7441%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,065,468 samples, 0.32%)</title><rect x="64.4941%" y="805" width="0.3214%" height="15" fill="rgb(233,66,6)" fg:x="213835737" fg:w="1065468"/><text x="64.7441%" y="815.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,065,468 samples, 0.32%)</title><rect x="64.4941%" y="789" width="0.3214%" height="15" fill="rgb(246,123,29)" fg:x="213835737" fg:w="1065468"/><text x="64.7441%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,065,468 samples, 0.32%)</title><rect x="64.4941%" y="773" width="0.3214%" height="15" fill="rgb(209,62,40)" fg:x="213835737" fg:w="1065468"/><text x="64.7441%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,065,468 samples, 0.32%)</title><rect x="64.4941%" y="757" width="0.3214%" height="15" fill="rgb(218,4,25)" fg:x="213835737" fg:w="1065468"/><text x="64.7441%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,065,468 samples, 0.32%)</title><rect x="64.4941%" y="741" width="0.3214%" height="15" fill="rgb(253,91,49)" fg:x="213835737" fg:w="1065468"/><text x="64.7441%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,065,468 samples, 0.32%)</title><rect x="64.4941%" y="725" width="0.3214%" height="15" fill="rgb(228,155,29)" fg:x="213835737" fg:w="1065468"/><text x="64.7441%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,065,468 samples, 0.32%)</title><rect x="64.4941%" y="709" width="0.3214%" height="15" fill="rgb(243,57,37)" fg:x="213835737" fg:w="1065468"/><text x="64.7441%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,065,468 samples, 0.32%)</title><rect x="64.4941%" y="693" width="0.3214%" height="15" fill="rgb(244,167,17)" fg:x="213835737" fg:w="1065468"/><text x="64.7441%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,065,468 samples, 0.32%)</title><rect x="64.4941%" y="677" width="0.3214%" height="15" fill="rgb(207,181,38)" fg:x="213835737" fg:w="1065468"/><text x="64.7441%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,065,468 samples, 0.32%)</title><rect x="64.4941%" y="661" width="0.3214%" height="15" fill="rgb(211,8,23)" fg:x="213835737" fg:w="1065468"/><text x="64.7441%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (1,065,468 samples, 0.32%)</title><rect x="64.4941%" y="645" width="0.3214%" height="15" fill="rgb(235,11,44)" fg:x="213835737" fg:w="1065468"/><text x="64.7441%" y="655.50"></text></g><g><title>cfree (1,065,468 samples, 0.32%)</title><rect x="64.4941%" y="629" width="0.3214%" height="15" fill="rgb(248,18,52)" fg:x="213835737" fg:w="1065468"/><text x="64.7441%" y="639.50"></text></g><g><title>__rust_dealloc (1,262,058 samples, 0.38%)</title><rect x="65.1963%" y="693" width="0.3806%" height="15" fill="rgb(208,4,7)" fg:x="216164063" fg:w="1262058"/><text x="65.4463%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,445,037 samples, 4.06%)</title><rect x="61.8895%" y="1013" width="4.0551%" height="15" fill="rgb(240,17,39)" fg:x="205200197" fg:w="13445037"/><text x="62.1395%" y="1023.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (13,445,037 samples, 4.06%)</title><rect x="61.8895%" y="997" width="4.0551%" height="15" fill="rgb(207,170,3)" fg:x="205200197" fg:w="13445037"/><text x="62.1395%" y="1007.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (13,445,037 samples, 4.06%)</title><rect x="61.8895%" y="981" width="4.0551%" height="15" fill="rgb(236,100,52)" fg:x="205200197" fg:w="13445037"/><text x="62.1395%" y="991.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,744,029 samples, 1.13%)</title><rect x="64.8154%" y="965" width="1.1292%" height="15" fill="rgb(246,78,51)" fg:x="214901205" fg:w="3744029"/><text x="65.0654%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,744,029 samples, 1.13%)</title><rect x="64.8154%" y="949" width="1.1292%" height="15" fill="rgb(211,17,15)" fg:x="214901205" fg:w="3744029"/><text x="65.0654%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,744,029 samples, 1.13%)</title><rect x="64.8154%" y="933" width="1.1292%" height="15" fill="rgb(209,59,46)" fg:x="214901205" fg:w="3744029"/><text x="65.0654%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,744,029 samples, 1.13%)</title><rect x="64.8154%" y="917" width="1.1292%" height="15" fill="rgb(210,92,25)" fg:x="214901205" fg:w="3744029"/><text x="65.0654%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,744,029 samples, 1.13%)</title><rect x="64.8154%" y="901" width="1.1292%" height="15" fill="rgb(238,174,52)" fg:x="214901205" fg:w="3744029"/><text x="65.0654%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,744,029 samples, 1.13%)</title><rect x="64.8154%" y="885" width="1.1292%" height="15" fill="rgb(230,73,7)" fg:x="214901205" fg:w="3744029"/><text x="65.0654%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3,744,029 samples, 1.13%)</title><rect x="64.8154%" y="869" width="1.1292%" height="15" fill="rgb(243,124,40)" fg:x="214901205" fg:w="3744029"/><text x="65.0654%" y="879.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3,744,029 samples, 1.13%)</title><rect x="64.8154%" y="853" width="1.1292%" height="15" fill="rgb(244,170,11)" fg:x="214901205" fg:w="3744029"/><text x="65.0654%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3,744,029 samples, 1.13%)</title><rect x="64.8154%" y="837" width="1.1292%" height="15" fill="rgb(207,114,54)" fg:x="214901205" fg:w="3744029"/><text x="65.0654%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (3,744,029 samples, 1.13%)</title><rect x="64.8154%" y="821" width="1.1292%" height="15" fill="rgb(205,42,20)" fg:x="214901205" fg:w="3744029"/><text x="65.0654%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,744,029 samples, 1.13%)</title><rect x="64.8154%" y="805" width="1.1292%" height="15" fill="rgb(230,30,28)" fg:x="214901205" fg:w="3744029"/><text x="65.0654%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,744,029 samples, 1.13%)</title><rect x="64.8154%" y="789" width="1.1292%" height="15" fill="rgb(205,73,54)" fg:x="214901205" fg:w="3744029"/><text x="65.0654%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,744,029 samples, 1.13%)</title><rect x="64.8154%" y="773" width="1.1292%" height="15" fill="rgb(254,227,23)" fg:x="214901205" fg:w="3744029"/><text x="65.0654%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,744,029 samples, 1.13%)</title><rect x="64.8154%" y="757" width="1.1292%" height="15" fill="rgb(228,202,34)" fg:x="214901205" fg:w="3744029"/><text x="65.0654%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,481,171 samples, 0.75%)</title><rect x="65.1963%" y="741" width="0.7483%" height="15" fill="rgb(222,225,37)" fg:x="216164063" fg:w="2481171"/><text x="65.4463%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,481,171 samples, 0.75%)</title><rect x="65.1963%" y="725" width="0.7483%" height="15" fill="rgb(221,14,54)" fg:x="216164063" fg:w="2481171"/><text x="65.4463%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (2,481,171 samples, 0.75%)</title><rect x="65.1963%" y="709" width="0.7483%" height="15" fill="rgb(254,102,2)" fg:x="216164063" fg:w="2481171"/><text x="65.4463%" y="719.50"></text></g><g><title>cfree (1,219,113 samples, 0.37%)</title><rect x="65.5769%" y="693" width="0.3677%" height="15" fill="rgb(232,104,17)" fg:x="217426121" fg:w="1219113"/><text x="65.8269%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,707,640 samples, 4.44%)</title><rect x="61.8895%" y="1077" width="4.4359%" height="15" fill="rgb(250,220,14)" fg:x="205200197" fg:w="14707640"/><text x="62.1395%" y="1087.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (14,707,640 samples, 4.44%)</title><rect x="61.8895%" y="1061" width="4.4359%" height="15" fill="rgb(241,158,9)" fg:x="205200197" fg:w="14707640"/><text x="62.1395%" y="1071.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (14,707,640 samples, 4.44%)</title><rect x="61.8895%" y="1045" width="4.4359%" height="15" fill="rgb(246,9,43)" fg:x="205200197" fg:w="14707640"/><text x="62.1395%" y="1055.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (14,707,640 samples, 4.44%)</title><rect x="61.8895%" y="1029" width="4.4359%" height="15" fill="rgb(206,73,33)" fg:x="205200197" fg:w="14707640"/><text x="62.1395%" y="1039.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,262,603 samples, 0.38%)</title><rect x="65.9446%" y="1013" width="0.3808%" height="15" fill="rgb(222,79,8)" fg:x="218645234" fg:w="1262603"/><text x="66.1946%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,262,603 samples, 0.38%)</title><rect x="65.9446%" y="997" width="0.3808%" height="15" fill="rgb(234,8,54)" fg:x="218645234" fg:w="1262603"/><text x="66.1946%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,262,603 samples, 0.38%)</title><rect x="65.9446%" y="981" width="0.3808%" height="15" fill="rgb(209,134,38)" fg:x="218645234" fg:w="1262603"/><text x="66.1946%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,262,603 samples, 0.38%)</title><rect x="65.9446%" y="965" width="0.3808%" height="15" fill="rgb(230,127,29)" fg:x="218645234" fg:w="1262603"/><text x="66.1946%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (1,262,603 samples, 0.38%)</title><rect x="65.9446%" y="949" width="0.3808%" height="15" fill="rgb(242,44,41)" fg:x="218645234" fg:w="1262603"/><text x="66.1946%" y="959.50"></text></g><g><title>cfree (1,262,603 samples, 0.38%)</title><rect x="65.9446%" y="933" width="0.3808%" height="15" fill="rgb(222,56,43)" fg:x="218645234" fg:w="1262603"/><text x="66.1946%" y="943.50"></text></g><g><title>[libc.so.6] (1,262,603 samples, 0.38%)</title><rect x="65.9446%" y="917" width="0.3808%" height="15" fill="rgb(238,39,47)" fg:x="218645234" fg:w="1262603"/><text x="66.1946%" y="927.50"></text></g><g><title>[libc.so.6] (1,262,603 samples, 0.38%)</title><rect x="65.9446%" y="901" width="0.3808%" height="15" fill="rgb(226,79,43)" fg:x="218645234" fg:w="1262603"/><text x="66.1946%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22,005,215 samples, 6.64%)</title><rect x="60.4454%" y="1333" width="6.6369%" height="15" fill="rgb(242,105,53)" fg:x="200412061" fg:w="22005215"/><text x="60.6954%" y="1343.50">&lt;alloc::v..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (22,005,215 samples, 6.64%)</title><rect x="60.4454%" y="1317" width="6.6369%" height="15" fill="rgb(251,132,46)" fg:x="200412061" fg:w="22005215"/><text x="60.6954%" y="1327.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (22,005,215 samples, 6.64%)</title><rect x="60.4454%" y="1301" width="6.6369%" height="15" fill="rgb(231,77,14)" fg:x="200412061" fg:w="22005215"/><text x="60.6954%" y="1311.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (19,743,396 samples, 5.95%)</title><rect x="61.1276%" y="1285" width="5.9547%" height="15" fill="rgb(240,135,9)" fg:x="202673880" fg:w="19743396"/><text x="61.3776%" y="1295.50">core::pt..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19,743,396 samples, 5.95%)</title><rect x="61.1276%" y="1269" width="5.9547%" height="15" fill="rgb(248,109,14)" fg:x="202673880" fg:w="19743396"/><text x="61.3776%" y="1279.50">&lt;alloc::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (19,743,396 samples, 5.95%)</title><rect x="61.1276%" y="1253" width="5.9547%" height="15" fill="rgb(227,146,52)" fg:x="202673880" fg:w="19743396"/><text x="61.3776%" y="1263.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (19,743,396 samples, 5.95%)</title><rect x="61.1276%" y="1237" width="5.9547%" height="15" fill="rgb(232,54,3)" fg:x="202673880" fg:w="19743396"/><text x="61.3776%" y="1247.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (19,743,396 samples, 5.95%)</title><rect x="61.1276%" y="1221" width="5.9547%" height="15" fill="rgb(229,201,43)" fg:x="202673880" fg:w="19743396"/><text x="61.3776%" y="1231.50">core::pt..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19,743,396 samples, 5.95%)</title><rect x="61.1276%" y="1205" width="5.9547%" height="15" fill="rgb(252,161,33)" fg:x="202673880" fg:w="19743396"/><text x="61.3776%" y="1215.50">&lt;alloc::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (19,743,396 samples, 5.95%)</title><rect x="61.1276%" y="1189" width="5.9547%" height="15" fill="rgb(226,146,40)" fg:x="202673880" fg:w="19743396"/><text x="61.3776%" y="1199.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (19,743,396 samples, 5.95%)</title><rect x="61.1276%" y="1173" width="5.9547%" height="15" fill="rgb(219,47,25)" fg:x="202673880" fg:w="19743396"/><text x="61.3776%" y="1183.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (19,743,396 samples, 5.95%)</title><rect x="61.1276%" y="1157" width="5.9547%" height="15" fill="rgb(250,135,13)" fg:x="202673880" fg:w="19743396"/><text x="61.3776%" y="1167.50">core::pt..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19,743,396 samples, 5.95%)</title><rect x="61.1276%" y="1141" width="5.9547%" height="15" fill="rgb(219,229,18)" fg:x="202673880" fg:w="19743396"/><text x="61.3776%" y="1151.50">&lt;alloc::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (18,482,864 samples, 5.57%)</title><rect x="61.5078%" y="1125" width="5.5745%" height="15" fill="rgb(217,152,27)" fg:x="203934412" fg:w="18482864"/><text x="61.7578%" y="1135.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (18,482,864 samples, 5.57%)</title><rect x="61.5078%" y="1109" width="5.5745%" height="15" fill="rgb(225,71,47)" fg:x="203934412" fg:w="18482864"/><text x="61.7578%" y="1119.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (17,217,079 samples, 5.19%)</title><rect x="61.8895%" y="1093" width="5.1928%" height="15" fill="rgb(220,139,14)" fg:x="205200197" fg:w="17217079"/><text x="62.1395%" y="1103.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,509,439 samples, 0.76%)</title><rect x="66.3254%" y="1077" width="0.7569%" height="15" fill="rgb(247,54,32)" fg:x="219907837" fg:w="2509439"/><text x="66.5754%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,509,439 samples, 0.76%)</title><rect x="66.3254%" y="1061" width="0.7569%" height="15" fill="rgb(252,131,39)" fg:x="219907837" fg:w="2509439"/><text x="66.5754%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,509,439 samples, 0.76%)</title><rect x="66.3254%" y="1045" width="0.7569%" height="15" fill="rgb(210,108,39)" fg:x="219907837" fg:w="2509439"/><text x="66.5754%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,509,439 samples, 0.76%)</title><rect x="66.3254%" y="1029" width="0.7569%" height="15" fill="rgb(205,23,29)" fg:x="219907837" fg:w="2509439"/><text x="66.5754%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (2,509,439 samples, 0.76%)</title><rect x="66.3254%" y="1013" width="0.7569%" height="15" fill="rgb(246,139,46)" fg:x="219907837" fg:w="2509439"/><text x="66.5754%" y="1023.50"></text></g><g><title>cfree (2,509,439 samples, 0.76%)</title><rect x="66.3254%" y="997" width="0.7569%" height="15" fill="rgb(250,81,26)" fg:x="219907837" fg:w="2509439"/><text x="66.5754%" y="1007.50"></text></g><g><title>[libc.so.6] (1,264,199 samples, 0.38%)</title><rect x="66.7010%" y="981" width="0.3813%" height="15" fill="rgb(214,104,7)" fg:x="221153077" fg:w="1264199"/><text x="66.9510%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (23,262,487 samples, 7.02%)</title><rect x="60.4454%" y="1349" width="7.0161%" height="15" fill="rgb(233,189,8)" fg:x="200412061" fg:w="23262487"/><text x="60.6954%" y="1359.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,257,272 samples, 0.38%)</title><rect x="67.0823%" y="1333" width="0.3792%" height="15" fill="rgb(228,141,17)" fg:x="222417276" fg:w="1257272"/><text x="67.3323%" y="1343.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,257,272 samples, 0.38%)</title><rect x="67.0823%" y="1317" width="0.3792%" height="15" fill="rgb(247,157,1)" fg:x="222417276" fg:w="1257272"/><text x="67.3323%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,257,272 samples, 0.38%)</title><rect x="67.0823%" y="1301" width="0.3792%" height="15" fill="rgb(249,225,5)" fg:x="222417276" fg:w="1257272"/><text x="67.3323%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,257,272 samples, 0.38%)</title><rect x="67.0823%" y="1285" width="0.3792%" height="15" fill="rgb(242,55,13)" fg:x="222417276" fg:w="1257272"/><text x="67.3323%" y="1295.50"></text></g><g><title>alloc::alloc::dealloc (1,257,272 samples, 0.38%)</title><rect x="67.0823%" y="1269" width="0.3792%" height="15" fill="rgb(230,49,50)" fg:x="222417276" fg:w="1257272"/><text x="67.3323%" y="1279.50"></text></g><g><title>cfree (1,257,272 samples, 0.38%)</title><rect x="67.0823%" y="1253" width="0.3792%" height="15" fill="rgb(241,111,38)" fg:x="222417276" fg:w="1257272"/><text x="67.3323%" y="1263.50"></text></g><g><title>[libc.so.6] (1,257,272 samples, 0.38%)</title><rect x="67.0823%" y="1237" width="0.3792%" height="15" fill="rgb(252,155,4)" fg:x="222417276" fg:w="1257272"/><text x="67.3323%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,302,489 samples, 0.39%)</title><rect x="67.4615%" y="1253" width="0.3928%" height="15" fill="rgb(212,69,32)" fg:x="223674548" fg:w="1302489"/><text x="67.7115%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1,260,755 samples, 0.38%)</title><rect x="67.8543%" y="1253" width="0.3803%" height="15" fill="rgb(243,107,47)" fg:x="224977037" fg:w="1260755"/><text x="68.1043%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,260,755 samples, 0.38%)</title><rect x="67.8543%" y="1237" width="0.3803%" height="15" fill="rgb(247,130,12)" fg:x="224977037" fg:w="1260755"/><text x="68.1043%" y="1247.50"></text></g><g><title>alloc::alloc::dealloc (1,260,755 samples, 0.38%)</title><rect x="67.8543%" y="1221" width="0.3803%" height="15" fill="rgb(233,74,16)" fg:x="224977037" fg:w="1260755"/><text x="68.1043%" y="1231.50"></text></g><g><title>cfree (1,260,755 samples, 0.38%)</title><rect x="67.8543%" y="1205" width="0.3803%" height="15" fill="rgb(208,58,18)" fg:x="224977037" fg:w="1260755"/><text x="68.1043%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27,089,743 samples, 8.17%)</title><rect x="60.4454%" y="1397" width="8.1704%" height="15" fill="rgb(242,225,1)" fg:x="200412061" fg:w="27089743"/><text x="60.6954%" y="1407.50">&lt;alloc::vec..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (27,089,743 samples, 8.17%)</title><rect x="60.4454%" y="1381" width="8.1704%" height="15" fill="rgb(249,39,40)" fg:x="200412061" fg:w="27089743"/><text x="60.6954%" y="1391.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (27,089,743 samples, 8.17%)</title><rect x="60.4454%" y="1365" width="8.1704%" height="15" fill="rgb(207,72,44)" fg:x="200412061" fg:w="27089743"/><text x="60.6954%" y="1375.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,827,256 samples, 1.15%)</title><rect x="67.4615%" y="1349" width="1.1543%" height="15" fill="rgb(215,193,12)" fg:x="223674548" fg:w="3827256"/><text x="67.7115%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,827,256 samples, 1.15%)</title><rect x="67.4615%" y="1333" width="1.1543%" height="15" fill="rgb(248,41,39)" fg:x="223674548" fg:w="3827256"/><text x="67.7115%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,827,256 samples, 1.15%)</title><rect x="67.4615%" y="1317" width="1.1543%" height="15" fill="rgb(253,85,4)" fg:x="223674548" fg:w="3827256"/><text x="67.7115%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,827,256 samples, 1.15%)</title><rect x="67.4615%" y="1301" width="1.1543%" height="15" fill="rgb(243,70,31)" fg:x="223674548" fg:w="3827256"/><text x="67.7115%" y="1311.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,827,256 samples, 1.15%)</title><rect x="67.4615%" y="1285" width="1.1543%" height="15" fill="rgb(253,195,26)" fg:x="223674548" fg:w="3827256"/><text x="67.7115%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,827,256 samples, 1.15%)</title><rect x="67.4615%" y="1269" width="1.1543%" height="15" fill="rgb(243,42,11)" fg:x="223674548" fg:w="3827256"/><text x="67.7115%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (1,264,012 samples, 0.38%)</title><rect x="68.2346%" y="1253" width="0.3812%" height="15" fill="rgb(239,66,17)" fg:x="226237792" fg:w="1264012"/><text x="68.4846%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28,270,042 samples, 8.53%)</title><rect x="60.4454%" y="1461" width="8.5264%" height="15" fill="rgb(217,132,21)" fg:x="200412061" fg:w="28270042"/><text x="60.6954%" y="1471.50">&lt;alloc::vec:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (28,270,042 samples, 8.53%)</title><rect x="60.4454%" y="1445" width="8.5264%" height="15" fill="rgb(252,202,21)" fg:x="200412061" fg:w="28270042"/><text x="60.6954%" y="1455.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (28,270,042 samples, 8.53%)</title><rect x="60.4454%" y="1429" width="8.5264%" height="15" fill="rgb(233,98,36)" fg:x="200412061" fg:w="28270042"/><text x="60.6954%" y="1439.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (28,270,042 samples, 8.53%)</title><rect x="60.4454%" y="1413" width="8.5264%" height="15" fill="rgb(216,153,54)" fg:x="200412061" fg:w="28270042"/><text x="60.6954%" y="1423.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,180,299 samples, 0.36%)</title><rect x="68.6158%" y="1397" width="0.3560%" height="15" fill="rgb(250,99,7)" fg:x="227501804" fg:w="1180299"/><text x="68.8658%" y="1407.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,180,299 samples, 0.36%)</title><rect x="68.6158%" y="1381" width="0.3560%" height="15" fill="rgb(207,56,50)" fg:x="227501804" fg:w="1180299"/><text x="68.8658%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,180,299 samples, 0.36%)</title><rect x="68.6158%" y="1365" width="0.3560%" height="15" fill="rgb(244,61,34)" fg:x="227501804" fg:w="1180299"/><text x="68.8658%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,180,299 samples, 0.36%)</title><rect x="68.6158%" y="1349" width="0.3560%" height="15" fill="rgb(241,50,38)" fg:x="227501804" fg:w="1180299"/><text x="68.8658%" y="1359.50"></text></g><g><title>alloc::alloc::dealloc (1,180,299 samples, 0.36%)</title><rect x="68.6158%" y="1333" width="0.3560%" height="15" fill="rgb(212,166,30)" fg:x="227501804" fg:w="1180299"/><text x="68.8658%" y="1343.50"></text></g><g><title>cfree (1,180,299 samples, 0.36%)</title><rect x="68.6158%" y="1317" width="0.3560%" height="15" fill="rgb(249,127,32)" fg:x="227501804" fg:w="1180299"/><text x="68.8658%" y="1327.50"></text></g><g><title>[libc.so.6] (1,180,299 samples, 0.36%)</title><rect x="68.6158%" y="1301" width="0.3560%" height="15" fill="rgb(209,103,0)" fg:x="227501804" fg:w="1180299"/><text x="68.8658%" y="1311.50"></text></g><g><title>[libc.so.6] (1,180,299 samples, 0.36%)</title><rect x="68.6158%" y="1285" width="0.3560%" height="15" fill="rgb(238,209,51)" fg:x="227501804" fg:w="1180299"/><text x="68.8658%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (29,539,660 samples, 8.91%)</title><rect x="60.4454%" y="1477" width="8.9093%" height="15" fill="rgb(237,56,23)" fg:x="200412061" fg:w="29539660"/><text x="60.6954%" y="1487.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,269,618 samples, 0.38%)</title><rect x="68.9718%" y="1461" width="0.3829%" height="15" fill="rgb(215,153,46)" fg:x="228682103" fg:w="1269618"/><text x="69.2218%" y="1471.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,269,618 samples, 0.38%)</title><rect x="68.9718%" y="1445" width="0.3829%" height="15" fill="rgb(224,49,31)" fg:x="228682103" fg:w="1269618"/><text x="69.2218%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,269,618 samples, 0.38%)</title><rect x="68.9718%" y="1429" width="0.3829%" height="15" fill="rgb(250,18,42)" fg:x="228682103" fg:w="1269618"/><text x="69.2218%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,269,618 samples, 0.38%)</title><rect x="68.9718%" y="1413" width="0.3829%" height="15" fill="rgb(215,176,39)" fg:x="228682103" fg:w="1269618"/><text x="69.2218%" y="1423.50"></text></g><g><title>alloc::alloc::dealloc (1,269,618 samples, 0.38%)</title><rect x="68.9718%" y="1397" width="0.3829%" height="15" fill="rgb(223,77,29)" fg:x="228682103" fg:w="1269618"/><text x="69.2218%" y="1407.50"></text></g><g><title>cfree (1,269,618 samples, 0.38%)</title><rect x="68.9718%" y="1381" width="0.3829%" height="15" fill="rgb(234,94,52)" fg:x="228682103" fg:w="1269618"/><text x="69.2218%" y="1391.50"></text></g><g><title>[libc.so.6] (1,269,618 samples, 0.38%)</title><rect x="68.9718%" y="1365" width="0.3829%" height="15" fill="rgb(220,154,50)" fg:x="228682103" fg:w="1269618"/><text x="69.2218%" y="1375.50"></text></g><g><title>[libc.so.6] (1,269,618 samples, 0.38%)</title><rect x="68.9718%" y="1349" width="0.3829%" height="15" fill="rgb(212,11,10)" fg:x="228682103" fg:w="1269618"/><text x="69.2218%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,495,689 samples, 0.75%)</title><rect x="69.3547%" y="1477" width="0.7527%" height="15" fill="rgb(205,166,19)" fg:x="229951721" fg:w="2495689"/><text x="69.6047%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,261,072 samples, 0.38%)</title><rect x="69.7271%" y="1461" width="0.3803%" height="15" fill="rgb(244,198,16)" fg:x="231186338" fg:w="1261072"/><text x="69.9771%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,261,072 samples, 0.38%)</title><rect x="69.7271%" y="1445" width="0.3803%" height="15" fill="rgb(219,69,12)" fg:x="231186338" fg:w="1261072"/><text x="69.9771%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,261,072 samples, 0.38%)</title><rect x="69.7271%" y="1429" width="0.3803%" height="15" fill="rgb(245,30,7)" fg:x="231186338" fg:w="1261072"/><text x="69.9771%" y="1439.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,261,072 samples, 0.38%)</title><rect x="69.7271%" y="1413" width="0.3803%" height="15" fill="rgb(218,221,48)" fg:x="231186338" fg:w="1261072"/><text x="69.9771%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,261,072 samples, 0.38%)</title><rect x="69.7271%" y="1397" width="0.3803%" height="15" fill="rgb(216,66,15)" fg:x="231186338" fg:w="1261072"/><text x="69.9771%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,261,072 samples, 0.38%)</title><rect x="69.7271%" y="1381" width="0.3803%" height="15" fill="rgb(226,122,50)" fg:x="231186338" fg:w="1261072"/><text x="69.9771%" y="1391.50"></text></g><g><title>alloc::alloc::dealloc (1,261,072 samples, 0.38%)</title><rect x="69.7271%" y="1365" width="0.3803%" height="15" fill="rgb(239,156,16)" fg:x="231186338" fg:w="1261072"/><text x="69.9771%" y="1375.50"></text></g><g><title>cfree (1,261,072 samples, 0.38%)</title><rect x="69.7271%" y="1349" width="0.3803%" height="15" fill="rgb(224,27,38)" fg:x="231186338" fg:w="1261072"/><text x="69.9771%" y="1359.50"></text></g><g><title>[libc.so.6] (1,261,072 samples, 0.38%)</title><rect x="69.7271%" y="1333" width="0.3803%" height="15" fill="rgb(224,39,27)" fg:x="231186338" fg:w="1261072"/><text x="69.9771%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;css_bitvector_compiler::BitVector&gt;&gt; (1,264,023 samples, 0.38%)</title><rect x="70.1074%" y="1477" width="0.3812%" height="15" fill="rgb(215,92,29)" fg:x="232447410" fg:w="1264023"/><text x="70.3574%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,520,532 samples, 0.76%)</title><rect x="70.4887%" y="1477" width="0.7602%" height="15" fill="rgb(207,159,16)" fg:x="233711433" fg:w="2520532"/><text x="70.7387%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,520,532 samples, 0.76%)</title><rect x="70.4887%" y="1461" width="0.7602%" height="15" fill="rgb(238,163,47)" fg:x="233711433" fg:w="2520532"/><text x="70.7387%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,520,532 samples, 0.76%)</title><rect x="70.4887%" y="1445" width="0.7602%" height="15" fill="rgb(219,91,49)" fg:x="233711433" fg:w="2520532"/><text x="70.7387%" y="1455.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,520,532 samples, 0.76%)</title><rect x="70.4887%" y="1429" width="0.7602%" height="15" fill="rgb(227,167,31)" fg:x="233711433" fg:w="2520532"/><text x="70.7387%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,520,532 samples, 0.76%)</title><rect x="70.4887%" y="1413" width="0.7602%" height="15" fill="rgb(234,80,54)" fg:x="233711433" fg:w="2520532"/><text x="70.7387%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,520,532 samples, 0.76%)</title><rect x="70.4887%" y="1397" width="0.7602%" height="15" fill="rgb(212,114,2)" fg:x="233711433" fg:w="2520532"/><text x="70.7387%" y="1407.50"></text></g><g><title>alloc::alloc::dealloc (2,520,532 samples, 0.76%)</title><rect x="70.4887%" y="1381" width="0.7602%" height="15" fill="rgb(234,50,24)" fg:x="233711433" fg:w="2520532"/><text x="70.7387%" y="1391.50"></text></g><g><title>cfree (1,260,815 samples, 0.38%)</title><rect x="70.8686%" y="1365" width="0.3803%" height="15" fill="rgb(221,68,8)" fg:x="234971150" fg:w="1260815"/><text x="71.1186%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (38,349,995 samples, 11.57%)</title><rect x="60.0655%" y="1541" width="11.5666%" height="15" fill="rgb(254,180,31)" fg:x="199152446" fg:w="38349995"/><text x="60.3155%" y="1551.50">core::ptr::drop_i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38,349,995 samples, 11.57%)</title><rect x="60.0655%" y="1525" width="11.5666%" height="15" fill="rgb(247,130,50)" fg:x="199152446" fg:w="38349995"/><text x="60.3155%" y="1535.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (38,349,995 samples, 11.57%)</title><rect x="60.0655%" y="1509" width="11.5666%" height="15" fill="rgb(211,109,4)" fg:x="199152446" fg:w="38349995"/><text x="60.3155%" y="1519.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (38,349,995 samples, 11.57%)</title><rect x="60.0655%" y="1493" width="11.5666%" height="15" fill="rgb(238,50,21)" fg:x="199152446" fg:w="38349995"/><text x="60.3155%" y="1503.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,270,476 samples, 0.38%)</title><rect x="71.2489%" y="1477" width="0.3832%" height="15" fill="rgb(225,57,45)" fg:x="236231965" fg:w="1270476"/><text x="71.4989%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,270,476 samples, 0.38%)</title><rect x="71.2489%" y="1461" width="0.3832%" height="15" fill="rgb(209,196,50)" fg:x="236231965" fg:w="1270476"/><text x="71.4989%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,270,476 samples, 0.38%)</title><rect x="71.2489%" y="1445" width="0.3832%" height="15" fill="rgb(242,140,13)" fg:x="236231965" fg:w="1270476"/><text x="71.4989%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,270,476 samples, 0.38%)</title><rect x="71.2489%" y="1429" width="0.3832%" height="15" fill="rgb(217,111,7)" fg:x="236231965" fg:w="1270476"/><text x="71.4989%" y="1439.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,270,476 samples, 0.38%)</title><rect x="71.2489%" y="1413" width="0.3832%" height="15" fill="rgb(253,193,51)" fg:x="236231965" fg:w="1270476"/><text x="71.4989%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,270,476 samples, 0.38%)</title><rect x="71.2489%" y="1397" width="0.3832%" height="15" fill="rgb(252,70,29)" fg:x="236231965" fg:w="1270476"/><text x="71.4989%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,270,476 samples, 0.38%)</title><rect x="71.2489%" y="1381" width="0.3832%" height="15" fill="rgb(232,127,12)" fg:x="236231965" fg:w="1270476"/><text x="71.4989%" y="1391.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,270,476 samples, 0.38%)</title><rect x="71.2489%" y="1365" width="0.3832%" height="15" fill="rgb(211,180,21)" fg:x="236231965" fg:w="1270476"/><text x="71.4989%" y="1375.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,270,476 samples, 0.38%)</title><rect x="71.2489%" y="1349" width="0.3832%" height="15" fill="rgb(229,72,13)" fg:x="236231965" fg:w="1270476"/><text x="71.4989%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,270,476 samples, 0.38%)</title><rect x="71.2489%" y="1333" width="0.3832%" height="15" fill="rgb(240,211,49)" fg:x="236231965" fg:w="1270476"/><text x="71.4989%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,270,476 samples, 0.38%)</title><rect x="71.2489%" y="1317" width="0.3832%" height="15" fill="rgb(219,149,40)" fg:x="236231965" fg:w="1270476"/><text x="71.4989%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,270,476 samples, 0.38%)</title><rect x="71.2489%" y="1301" width="0.3832%" height="15" fill="rgb(210,127,46)" fg:x="236231965" fg:w="1270476"/><text x="71.4989%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,270,476 samples, 0.38%)</title><rect x="71.2489%" y="1285" width="0.3832%" height="15" fill="rgb(220,106,7)" fg:x="236231965" fg:w="1270476"/><text x="71.4989%" y="1295.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,270,476 samples, 0.38%)</title><rect x="71.2489%" y="1269" width="0.3832%" height="15" fill="rgb(249,31,22)" fg:x="236231965" fg:w="1270476"/><text x="71.4989%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,270,476 samples, 0.38%)</title><rect x="71.2489%" y="1253" width="0.3832%" height="15" fill="rgb(253,1,49)" fg:x="236231965" fg:w="1270476"/><text x="71.4989%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,270,476 samples, 0.38%)</title><rect x="71.2489%" y="1237" width="0.3832%" height="15" fill="rgb(227,144,33)" fg:x="236231965" fg:w="1270476"/><text x="71.4989%" y="1247.50"></text></g><g><title>alloc::alloc::dealloc (1,270,476 samples, 0.38%)</title><rect x="71.2489%" y="1221" width="0.3832%" height="15" fill="rgb(249,163,44)" fg:x="236231965" fg:w="1270476"/><text x="71.4989%" y="1231.50"></text></g><g><title>cfree (1,270,476 samples, 0.38%)</title><rect x="71.2489%" y="1205" width="0.3832%" height="15" fill="rgb(234,15,39)" fg:x="236231965" fg:w="1270476"/><text x="71.4989%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,265,971 samples, 0.38%)</title><rect x="71.6321%" y="1541" width="0.3818%" height="15" fill="rgb(207,66,16)" fg:x="237502441" fg:w="1265971"/><text x="71.8821%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,265,971 samples, 0.38%)</title><rect x="71.6321%" y="1525" width="0.3818%" height="15" fill="rgb(233,112,24)" fg:x="237502441" fg:w="1265971"/><text x="71.8821%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,265,971 samples, 0.38%)</title><rect x="71.6321%" y="1509" width="0.3818%" height="15" fill="rgb(230,90,22)" fg:x="237502441" fg:w="1265971"/><text x="71.8821%" y="1519.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,265,971 samples, 0.38%)</title><rect x="71.6321%" y="1493" width="0.3818%" height="15" fill="rgb(229,61,13)" fg:x="237502441" fg:w="1265971"/><text x="71.8821%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,265,971 samples, 0.38%)</title><rect x="71.6321%" y="1477" width="0.3818%" height="15" fill="rgb(225,57,24)" fg:x="237502441" fg:w="1265971"/><text x="71.8821%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,265,971 samples, 0.38%)</title><rect x="71.6321%" y="1461" width="0.3818%" height="15" fill="rgb(208,169,48)" fg:x="237502441" fg:w="1265971"/><text x="71.8821%" y="1471.50"></text></g><g><title>alloc::alloc::dealloc (1,265,971 samples, 0.38%)</title><rect x="71.6321%" y="1445" width="0.3818%" height="15" fill="rgb(244,218,51)" fg:x="237502441" fg:w="1265971"/><text x="71.8821%" y="1455.50"></text></g><g><title>cfree (1,265,971 samples, 0.38%)</title><rect x="71.6321%" y="1429" width="0.3818%" height="15" fill="rgb(214,148,10)" fg:x="237502441" fg:w="1265971"/><text x="71.8821%" y="1439.50"></text></g><g><title>[libc.so.6] (1,265,971 samples, 0.38%)</title><rect x="71.6321%" y="1413" width="0.3818%" height="15" fill="rgb(225,174,27)" fg:x="237502441" fg:w="1265971"/><text x="71.8821%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (43,266,168 samples, 13.05%)</title><rect x="59.3061%" y="1589" width="13.0493%" height="15" fill="rgb(230,96,26)" fg:x="196634716" fg:w="43266168"/><text x="59.5561%" y="1599.50">&lt;alloc::vec::Vec&lt;T,A..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (43,266,168 samples, 13.05%)</title><rect x="59.3061%" y="1573" width="13.0493%" height="15" fill="rgb(232,10,30)" fg:x="196634716" fg:w="43266168"/><text x="59.5561%" y="1583.50">core::ptr::drop_in_p..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (43,266,168 samples, 13.05%)</title><rect x="59.3061%" y="1557" width="13.0493%" height="15" fill="rgb(222,8,50)" fg:x="196634716" fg:w="43266168"/><text x="59.5561%" y="1567.50">core::ptr::drop_in_p..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,132,472 samples, 0.34%)</title><rect x="72.0139%" y="1541" width="0.3416%" height="15" fill="rgb(213,81,27)" fg:x="238768412" fg:w="1132472"/><text x="72.2639%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,132,472 samples, 0.34%)</title><rect x="72.0139%" y="1525" width="0.3416%" height="15" fill="rgb(245,50,10)" fg:x="238768412" fg:w="1132472"/><text x="72.2639%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,132,472 samples, 0.34%)</title><rect x="72.0139%" y="1509" width="0.3416%" height="15" fill="rgb(216,100,18)" fg:x="238768412" fg:w="1132472"/><text x="72.2639%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,132,472 samples, 0.34%)</title><rect x="72.0139%" y="1493" width="0.3416%" height="15" fill="rgb(236,147,54)" fg:x="238768412" fg:w="1132472"/><text x="72.2639%" y="1503.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,132,472 samples, 0.34%)</title><rect x="72.0139%" y="1477" width="0.3416%" height="15" fill="rgb(205,143,26)" fg:x="238768412" fg:w="1132472"/><text x="72.2639%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,132,472 samples, 0.34%)</title><rect x="72.0139%" y="1461" width="0.3416%" height="15" fill="rgb(236,26,9)" fg:x="238768412" fg:w="1132472"/><text x="72.2639%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (1,132,472 samples, 0.34%)</title><rect x="72.0139%" y="1445" width="0.3416%" height="15" fill="rgb(221,165,53)" fg:x="238768412" fg:w="1132472"/><text x="72.2639%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (58,116,051 samples, 17.53%)</title><rect x="59.3061%" y="1605" width="17.5281%" height="15" fill="rgb(214,110,17)" fg:x="196634716" fg:w="58116051"/><text x="59.5561%" y="1615.50">core::ptr::drop_in_place&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (14,849,883 samples, 4.48%)</title><rect x="72.3554%" y="1589" width="4.4788%" height="15" fill="rgb(237,197,12)" fg:x="239900884" fg:w="14849883"/><text x="72.6054%" y="1599.50">core:..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,849,883 samples, 4.48%)</title><rect x="72.3554%" y="1573" width="4.4788%" height="15" fill="rgb(205,84,17)" fg:x="239900884" fg:w="14849883"/><text x="72.6054%" y="1583.50">&lt;allo..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (14,849,883 samples, 4.48%)</title><rect x="72.3554%" y="1557" width="4.4788%" height="15" fill="rgb(237,18,45)" fg:x="239900884" fg:w="14849883"/><text x="72.6054%" y="1567.50">alloc..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14,849,883 samples, 4.48%)</title><rect x="72.3554%" y="1541" width="4.4788%" height="15" fill="rgb(221,87,14)" fg:x="239900884" fg:w="14849883"/><text x="72.6054%" y="1551.50">&lt;allo..</text></g><g><title>alloc::alloc::dealloc (14,849,883 samples, 4.48%)</title><rect x="72.3554%" y="1525" width="4.4788%" height="15" fill="rgb(238,186,15)" fg:x="239900884" fg:w="14849883"/><text x="72.6054%" y="1535.50">alloc..</text></g><g><title>cfree (14,849,883 samples, 4.48%)</title><rect x="72.3554%" y="1509" width="4.4788%" height="15" fill="rgb(208,115,11)" fg:x="239900884" fg:w="14849883"/><text x="72.6054%" y="1519.50">cfree</text></g><g><title>[libc.so.6] (14,849,883 samples, 4.48%)</title><rect x="72.3554%" y="1493" width="4.4788%" height="15" fill="rgb(254,175,0)" fg:x="239900884" fg:w="14849883"/><text x="72.6054%" y="1503.50">[libc..</text></g><g><title>[libc.so.6] (13,568,899 samples, 4.09%)</title><rect x="72.7418%" y="1477" width="4.0925%" height="15" fill="rgb(227,24,42)" fg:x="241181868" fg:w="13568899"/><text x="72.9918%" y="1487.50">[lib..</text></g><g><title>[libc.so.6] (2,483,770 samples, 0.75%)</title><rect x="76.0851%" y="1461" width="0.7491%" height="15" fill="rgb(223,211,37)" fg:x="252266997" fg:w="2483770"/><text x="76.3351%" y="1471.50"></text></g><g><title>__rust_dealloc (1,293,142 samples, 0.39%)</title><rect x="76.8343%" y="1477" width="0.3900%" height="15" fill="rgb(235,49,27)" fg:x="254750767" fg:w="1293142"/><text x="77.0843%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,526,598 samples, 0.76%)</title><rect x="76.8343%" y="1605" width="0.7620%" height="15" fill="rgb(254,97,51)" fg:x="254750767" fg:w="2526598"/><text x="77.0843%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,526,598 samples, 0.76%)</title><rect x="76.8343%" y="1589" width="0.7620%" height="15" fill="rgb(249,51,40)" fg:x="254750767" fg:w="2526598"/><text x="77.0843%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,526,598 samples, 0.76%)</title><rect x="76.8343%" y="1573" width="0.7620%" height="15" fill="rgb(210,128,45)" fg:x="254750767" fg:w="2526598"/><text x="77.0843%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,526,598 samples, 0.76%)</title><rect x="76.8343%" y="1557" width="0.7620%" height="15" fill="rgb(224,137,50)" fg:x="254750767" fg:w="2526598"/><text x="77.0843%" y="1567.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,526,598 samples, 0.76%)</title><rect x="76.8343%" y="1541" width="0.7620%" height="15" fill="rgb(242,15,9)" fg:x="254750767" fg:w="2526598"/><text x="77.0843%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,526,598 samples, 0.76%)</title><rect x="76.8343%" y="1525" width="0.7620%" height="15" fill="rgb(233,187,41)" fg:x="254750767" fg:w="2526598"/><text x="77.0843%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,526,598 samples, 0.76%)</title><rect x="76.8343%" y="1509" width="0.7620%" height="15" fill="rgb(227,2,29)" fg:x="254750767" fg:w="2526598"/><text x="77.0843%" y="1519.50"></text></g><g><title>alloc::alloc::dealloc (2,526,598 samples, 0.76%)</title><rect x="76.8343%" y="1493" width="0.7620%" height="15" fill="rgb(222,70,3)" fg:x="254750767" fg:w="2526598"/><text x="77.0843%" y="1503.50"></text></g><g><title>cfree (1,233,456 samples, 0.37%)</title><rect x="77.2243%" y="1477" width="0.3720%" height="15" fill="rgb(213,11,42)" fg:x="256043909" fg:w="1233456"/><text x="77.4743%" y="1487.50"></text></g><g><title>[libc.so.6] (1,233,456 samples, 0.37%)</title><rect x="77.2243%" y="1461" width="0.3720%" height="15" fill="rgb(225,150,9)" fg:x="256043909" fg:w="1233456"/><text x="77.4743%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (63,120,943 samples, 19.04%)</title><rect x="58.9374%" y="1669" width="19.0376%" height="15" fill="rgb(230,162,45)" fg:x="195412181" fg:w="63120943"/><text x="59.1874%" y="1679.50">core::ptr::drop_in_place&lt;alloc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (63,120,943 samples, 19.04%)</title><rect x="58.9374%" y="1653" width="19.0376%" height="15" fill="rgb(222,14,52)" fg:x="195412181" fg:w="63120943"/><text x="59.1874%" y="1663.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (63,120,943 samples, 19.04%)</title><rect x="58.9374%" y="1637" width="19.0376%" height="15" fill="rgb(254,198,14)" fg:x="195412181" fg:w="63120943"/><text x="59.1874%" y="1647.50">core::ptr::drop_in_place&lt;[css_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (63,120,943 samples, 19.04%)</title><rect x="58.9374%" y="1621" width="19.0376%" height="15" fill="rgb(220,217,30)" fg:x="195412181" fg:w="63120943"/><text x="59.1874%" y="1631.50">core::ptr::drop_in_place&lt;css_b..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,255,759 samples, 0.38%)</title><rect x="77.5963%" y="1605" width="0.3787%" height="15" fill="rgb(215,146,41)" fg:x="257277365" fg:w="1255759"/><text x="77.8463%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,255,759 samples, 0.38%)</title><rect x="77.5963%" y="1589" width="0.3787%" height="15" fill="rgb(217,27,36)" fg:x="257277365" fg:w="1255759"/><text x="77.8463%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,255,759 samples, 0.38%)</title><rect x="77.5963%" y="1573" width="0.3787%" height="15" fill="rgb(219,218,39)" fg:x="257277365" fg:w="1255759"/><text x="77.8463%" y="1583.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,255,759 samples, 0.38%)</title><rect x="77.5963%" y="1557" width="0.3787%" height="15" fill="rgb(219,4,42)" fg:x="257277365" fg:w="1255759"/><text x="77.8463%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,255,759 samples, 0.38%)</title><rect x="77.5963%" y="1541" width="0.3787%" height="15" fill="rgb(249,119,36)" fg:x="257277365" fg:w="1255759"/><text x="77.8463%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,255,759 samples, 0.38%)</title><rect x="77.5963%" y="1525" width="0.3787%" height="15" fill="rgb(209,23,33)" fg:x="257277365" fg:w="1255759"/><text x="77.8463%" y="1535.50"></text></g><g><title>alloc::alloc::dealloc (1,255,759 samples, 0.38%)</title><rect x="77.5963%" y="1509" width="0.3787%" height="15" fill="rgb(211,10,0)" fg:x="257277365" fg:w="1255759"/><text x="77.8463%" y="1519.50"></text></g><g><title>cfree (1,255,759 samples, 0.38%)</title><rect x="77.5963%" y="1493" width="0.3787%" height="15" fill="rgb(208,99,37)" fg:x="257277365" fg:w="1255759"/><text x="77.8463%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (64,385,707 samples, 19.42%)</title><rect x="58.9374%" y="1717" width="19.4191%" height="15" fill="rgb(213,132,31)" fg:x="195412181" fg:w="64385707"/><text x="59.1874%" y="1727.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (64,385,707 samples, 19.42%)</title><rect x="58.9374%" y="1701" width="19.4191%" height="15" fill="rgb(243,129,40)" fg:x="195412181" fg:w="64385707"/><text x="59.1874%" y="1711.50">core::ptr::drop_in_place&lt;[css_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (64,385,707 samples, 19.42%)</title><rect x="58.9374%" y="1685" width="19.4191%" height="15" fill="rgb(210,66,33)" fg:x="195412181" fg:w="64385707"/><text x="59.1874%" y="1695.50">core::ptr::drop_in_place&lt;css_b..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,264,764 samples, 0.38%)</title><rect x="77.9750%" y="1669" width="0.3815%" height="15" fill="rgb(209,189,4)" fg:x="258533124" fg:w="1264764"/><text x="78.2250%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,264,764 samples, 0.38%)</title><rect x="77.9750%" y="1653" width="0.3815%" height="15" fill="rgb(214,107,37)" fg:x="258533124" fg:w="1264764"/><text x="78.2250%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,264,764 samples, 0.38%)</title><rect x="77.9750%" y="1637" width="0.3815%" height="15" fill="rgb(245,88,54)" fg:x="258533124" fg:w="1264764"/><text x="78.2250%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,264,764 samples, 0.38%)</title><rect x="77.9750%" y="1621" width="0.3815%" height="15" fill="rgb(205,146,20)" fg:x="258533124" fg:w="1264764"/><text x="78.2250%" y="1631.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,264,764 samples, 0.38%)</title><rect x="77.9750%" y="1605" width="0.3815%" height="15" fill="rgb(220,161,25)" fg:x="258533124" fg:w="1264764"/><text x="78.2250%" y="1615.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,264,764 samples, 0.38%)</title><rect x="77.9750%" y="1589" width="0.3815%" height="15" fill="rgb(215,152,15)" fg:x="258533124" fg:w="1264764"/><text x="78.2250%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (65,631,786 samples, 19.79%)</title><rect x="58.9374%" y="1733" width="19.7949%" height="15" fill="rgb(233,192,44)" fg:x="195412181" fg:w="65631786"/><text x="59.1874%" y="1743.50">core::ptr::drop_in_place&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,246,079 samples, 0.38%)</title><rect x="78.3565%" y="1717" width="0.3758%" height="15" fill="rgb(240,170,46)" fg:x="259797888" fg:w="1246079"/><text x="78.6065%" y="1727.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,246,079 samples, 0.38%)</title><rect x="78.3565%" y="1701" width="0.3758%" height="15" fill="rgb(207,104,33)" fg:x="259797888" fg:w="1246079"/><text x="78.6065%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,246,079 samples, 0.38%)</title><rect x="78.3565%" y="1685" width="0.3758%" height="15" fill="rgb(219,21,39)" fg:x="259797888" fg:w="1246079"/><text x="78.6065%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,246,079 samples, 0.38%)</title><rect x="78.3565%" y="1669" width="0.3758%" height="15" fill="rgb(214,133,29)" fg:x="259797888" fg:w="1246079"/><text x="78.6065%" y="1679.50"></text></g><g><title>alloc::alloc::dealloc (1,246,079 samples, 0.38%)</title><rect x="78.3565%" y="1653" width="0.3758%" height="15" fill="rgb(226,93,6)" fg:x="259797888" fg:w="1246079"/><text x="78.6065%" y="1663.50"></text></g><g><title>cfree (1,246,079 samples, 0.38%)</title><rect x="78.3565%" y="1637" width="0.3758%" height="15" fill="rgb(252,222,34)" fg:x="259797888" fg:w="1246079"/><text x="78.6065%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,218,041 samples, 0.37%)</title><rect x="78.7323%" y="1733" width="0.3674%" height="15" fill="rgb(252,92,48)" fg:x="261043967" fg:w="1218041"/><text x="78.9823%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,218,041 samples, 0.37%)</title><rect x="78.7323%" y="1717" width="0.3674%" height="15" fill="rgb(245,223,24)" fg:x="261043967" fg:w="1218041"/><text x="78.9823%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,218,041 samples, 0.37%)</title><rect x="78.7323%" y="1701" width="0.3674%" height="15" fill="rgb(205,176,3)" fg:x="261043967" fg:w="1218041"/><text x="78.9823%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,218,041 samples, 0.37%)</title><rect x="78.7323%" y="1685" width="0.3674%" height="15" fill="rgb(235,151,15)" fg:x="261043967" fg:w="1218041"/><text x="78.9823%" y="1695.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,218,041 samples, 0.37%)</title><rect x="78.7323%" y="1669" width="0.3674%" height="15" fill="rgb(237,209,11)" fg:x="261043967" fg:w="1218041"/><text x="78.9823%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,218,041 samples, 0.37%)</title><rect x="78.7323%" y="1653" width="0.3674%" height="15" fill="rgb(243,227,24)" fg:x="261043967" fg:w="1218041"/><text x="78.9823%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,218,041 samples, 0.37%)</title><rect x="78.7323%" y="1637" width="0.3674%" height="15" fill="rgb(239,193,16)" fg:x="261043967" fg:w="1218041"/><text x="78.9823%" y="1647.50"></text></g><g><title>alloc::alloc::dealloc (1,218,041 samples, 0.37%)</title><rect x="78.7323%" y="1621" width="0.3674%" height="15" fill="rgb(231,27,9)" fg:x="261043967" fg:w="1218041"/><text x="78.9823%" y="1631.50"></text></g><g><title>cfree (1,218,041 samples, 0.37%)</title><rect x="78.7323%" y="1605" width="0.3674%" height="15" fill="rgb(219,169,10)" fg:x="261043967" fg:w="1218041"/><text x="78.9823%" y="1615.50"></text></g><g><title>[libc.so.6] (1,218,041 samples, 0.37%)</title><rect x="78.7323%" y="1589" width="0.3674%" height="15" fill="rgb(244,229,43)" fg:x="261043967" fg:w="1218041"/><text x="78.9823%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (68,039,457 samples, 20.52%)</title><rect x="58.9374%" y="1941" width="20.5211%" height="15" fill="rgb(254,38,20)" fg:x="195412181" fg:w="68039457"/><text x="59.1874%" y="1951.50">core::ptr::drop_in_place&lt;css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (68,039,457 samples, 20.52%)</title><rect x="58.9374%" y="1925" width="20.5211%" height="15" fill="rgb(250,47,30)" fg:x="195412181" fg:w="68039457"/><text x="59.1874%" y="1935.50">core::ptr::drop_in_place&lt;alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (68,039,457 samples, 20.52%)</title><rect x="58.9374%" y="1909" width="20.5211%" height="15" fill="rgb(224,124,36)" fg:x="195412181" fg:w="68039457"/><text x="59.1874%" y="1919.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::o..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (68,039,457 samples, 20.52%)</title><rect x="58.9374%" y="1893" width="20.5211%" height="15" fill="rgb(246,68,51)" fg:x="195412181" fg:w="68039457"/><text x="59.1874%" y="1903.50">core::ptr::drop_in_place&lt;[css_bi..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (68,039,457 samples, 20.52%)</title><rect x="58.9374%" y="1877" width="20.5211%" height="15" fill="rgb(253,43,49)" fg:x="195412181" fg:w="68039457"/><text x="59.1874%" y="1887.50">core::ptr::drop_in_place&lt;css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (68,039,457 samples, 20.52%)</title><rect x="58.9374%" y="1861" width="20.5211%" height="15" fill="rgb(219,54,36)" fg:x="195412181" fg:w="68039457"/><text x="59.1874%" y="1871.50">core::ptr::drop_in_place&lt;alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (68,039,457 samples, 20.52%)</title><rect x="58.9374%" y="1845" width="20.5211%" height="15" fill="rgb(227,133,34)" fg:x="195412181" fg:w="68039457"/><text x="59.1874%" y="1855.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::o..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (68,039,457 samples, 20.52%)</title><rect x="58.9374%" y="1829" width="20.5211%" height="15" fill="rgb(247,227,15)" fg:x="195412181" fg:w="68039457"/><text x="59.1874%" y="1839.50">core::ptr::drop_in_place&lt;[css_bi..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (68,039,457 samples, 20.52%)</title><rect x="58.9374%" y="1813" width="20.5211%" height="15" fill="rgb(229,96,14)" fg:x="195412181" fg:w="68039457"/><text x="59.1874%" y="1823.50">core::ptr::drop_in_place&lt;css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (68,039,457 samples, 20.52%)</title><rect x="58.9374%" y="1797" width="20.5211%" height="15" fill="rgb(220,79,17)" fg:x="195412181" fg:w="68039457"/><text x="59.1874%" y="1807.50">core::ptr::drop_in_place&lt;alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (68,039,457 samples, 20.52%)</title><rect x="58.9374%" y="1781" width="20.5211%" height="15" fill="rgb(205,131,53)" fg:x="195412181" fg:w="68039457"/><text x="59.1874%" y="1791.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::o..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (68,039,457 samples, 20.52%)</title><rect x="58.9374%" y="1765" width="20.5211%" height="15" fill="rgb(209,50,29)" fg:x="195412181" fg:w="68039457"/><text x="59.1874%" y="1775.50">core::ptr::drop_in_place&lt;[css_bi..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (68,039,457 samples, 20.52%)</title><rect x="58.9374%" y="1749" width="20.5211%" height="15" fill="rgb(245,86,46)" fg:x="195412181" fg:w="68039457"/><text x="59.1874%" y="1759.50">core::ptr::drop_in_place&lt;css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,189,630 samples, 0.36%)</title><rect x="79.0997%" y="1733" width="0.3588%" height="15" fill="rgb(235,66,46)" fg:x="262262008" fg:w="1189630"/><text x="79.3497%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,189,630 samples, 0.36%)</title><rect x="79.0997%" y="1717" width="0.3588%" height="15" fill="rgb(232,148,31)" fg:x="262262008" fg:w="1189630"/><text x="79.3497%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,189,630 samples, 0.36%)</title><rect x="79.0997%" y="1701" width="0.3588%" height="15" fill="rgb(217,149,8)" fg:x="262262008" fg:w="1189630"/><text x="79.3497%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,189,630 samples, 0.36%)</title><rect x="79.0997%" y="1685" width="0.3588%" height="15" fill="rgb(209,183,11)" fg:x="262262008" fg:w="1189630"/><text x="79.3497%" y="1695.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,189,630 samples, 0.36%)</title><rect x="79.0997%" y="1669" width="0.3588%" height="15" fill="rgb(208,55,20)" fg:x="262262008" fg:w="1189630"/><text x="79.3497%" y="1679.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,189,630 samples, 0.36%)</title><rect x="79.0997%" y="1653" width="0.3588%" height="15" fill="rgb(218,39,14)" fg:x="262262008" fg:w="1189630"/><text x="79.3497%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (1,189,630 samples, 0.36%)</title><rect x="79.0997%" y="1637" width="0.3588%" height="15" fill="rgb(216,169,33)" fg:x="262262008" fg:w="1189630"/><text x="79.3497%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,273,190 samples, 0.38%)</title><rect x="79.4585%" y="1861" width="0.3840%" height="15" fill="rgb(233,80,24)" fg:x="263451638" fg:w="1273190"/><text x="79.7085%" y="1871.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,273,190 samples, 0.38%)</title><rect x="79.4585%" y="1845" width="0.3840%" height="15" fill="rgb(213,179,31)" fg:x="263451638" fg:w="1273190"/><text x="79.7085%" y="1855.50"></text></g><g><title>benchmark::benchmark_accumulated_modifications (214,193,716 samples, 64.60%)</title><rect x="15.9987%" y="1957" width="64.6020%" height="15" fill="rgb(209,19,5)" fg:x="53045195" fg:w="214193716"/><text x="16.2487%" y="1967.50">benchmark::benchmark_accumulated_modifications</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,787,273 samples, 1.14%)</title><rect x="79.4585%" y="1941" width="1.1423%" height="15" fill="rgb(219,18,35)" fg:x="263451638" fg:w="3787273"/><text x="79.7085%" y="1951.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,787,273 samples, 1.14%)</title><rect x="79.4585%" y="1925" width="1.1423%" height="15" fill="rgb(209,169,16)" fg:x="263451638" fg:w="3787273"/><text x="79.7085%" y="1935.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,787,273 samples, 1.14%)</title><rect x="79.4585%" y="1909" width="1.1423%" height="15" fill="rgb(245,90,51)" fg:x="263451638" fg:w="3787273"/><text x="79.7085%" y="1919.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,787,273 samples, 1.14%)</title><rect x="79.4585%" y="1893" width="1.1423%" height="15" fill="rgb(220,99,45)" fg:x="263451638" fg:w="3787273"/><text x="79.7085%" y="1903.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,787,273 samples, 1.14%)</title><rect x="79.4585%" y="1877" width="1.1423%" height="15" fill="rgb(249,89,25)" fg:x="263451638" fg:w="3787273"/><text x="79.7085%" y="1887.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,514,083 samples, 0.76%)</title><rect x="79.8425%" y="1861" width="0.7583%" height="15" fill="rgb(239,193,0)" fg:x="264724828" fg:w="2514083"/><text x="80.0925%" y="1871.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,514,083 samples, 0.76%)</title><rect x="79.8425%" y="1845" width="0.7583%" height="15" fill="rgb(231,126,1)" fg:x="264724828" fg:w="2514083"/><text x="80.0925%" y="1855.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,254,067 samples, 0.38%)</title><rect x="80.2225%" y="1829" width="0.3782%" height="15" fill="rgb(243,166,3)" fg:x="265984844" fg:w="1254067"/><text x="80.4725%" y="1839.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,254,067 samples, 0.38%)</title><rect x="80.2225%" y="1813" width="0.3782%" height="15" fill="rgb(223,22,34)" fg:x="265984844" fg:w="1254067"/><text x="80.4725%" y="1823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,254,067 samples, 0.38%)</title><rect x="80.2225%" y="1797" width="0.3782%" height="15" fill="rgb(251,52,51)" fg:x="265984844" fg:w="1254067"/><text x="80.4725%" y="1807.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (711,032 samples, 0.21%)</title><rect x="80.9394%" y="1813" width="0.2145%" height="15" fill="rgb(221,165,28)" fg:x="268361741" fg:w="711032"/><text x="81.1894%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (711,032 samples, 0.21%)</title><rect x="80.9394%" y="1797" width="0.2145%" height="15" fill="rgb(218,121,47)" fg:x="268361741" fg:w="711032"/><text x="81.1894%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (711,032 samples, 0.21%)</title><rect x="80.9394%" y="1781" width="0.2145%" height="15" fill="rgb(209,120,9)" fg:x="268361741" fg:w="711032"/><text x="81.1894%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (711,032 samples, 0.21%)</title><rect x="80.9394%" y="1765" width="0.2145%" height="15" fill="rgb(236,68,12)" fg:x="268361741" fg:w="711032"/><text x="81.1894%" y="1775.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (711,032 samples, 0.21%)</title><rect x="80.9394%" y="1749" width="0.2145%" height="15" fill="rgb(225,194,26)" fg:x="268361741" fg:w="711032"/><text x="81.1894%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (711,032 samples, 0.21%)</title><rect x="80.9394%" y="1733" width="0.2145%" height="15" fill="rgb(231,84,39)" fg:x="268361741" fg:w="711032"/><text x="81.1894%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (711,032 samples, 0.21%)</title><rect x="80.9394%" y="1717" width="0.2145%" height="15" fill="rgb(210,11,45)" fg:x="268361741" fg:w="711032"/><text x="81.1894%" y="1727.50"></text></g><g><title>alloc::alloc::dealloc (711,032 samples, 0.21%)</title><rect x="80.9394%" y="1701" width="0.2145%" height="15" fill="rgb(224,54,52)" fg:x="268361741" fg:w="711032"/><text x="81.1894%" y="1711.50"></text></g><g><title>cfree (711,032 samples, 0.21%)</title><rect x="80.9394%" y="1685" width="0.2145%" height="15" fill="rgb(238,102,14)" fg:x="268361741" fg:w="711032"/><text x="81.1894%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,961,511 samples, 0.89%)</title><rect x="80.6007%" y="1941" width="0.8932%" height="15" fill="rgb(243,160,52)" fg:x="267238911" fg:w="2961511"/><text x="80.8507%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,961,511 samples, 0.89%)</title><rect x="80.6007%" y="1925" width="0.8932%" height="15" fill="rgb(216,114,19)" fg:x="267238911" fg:w="2961511"/><text x="80.8507%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,961,511 samples, 0.89%)</title><rect x="80.6007%" y="1909" width="0.8932%" height="15" fill="rgb(244,166,37)" fg:x="267238911" fg:w="2961511"/><text x="80.8507%" y="1919.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,961,511 samples, 0.89%)</title><rect x="80.6007%" y="1893" width="0.8932%" height="15" fill="rgb(246,29,44)" fg:x="267238911" fg:w="2961511"/><text x="80.8507%" y="1903.50"></text></g><g><title>core::mem::drop (2,961,511 samples, 0.89%)</title><rect x="80.6007%" y="1877" width="0.8932%" height="15" fill="rgb(215,56,53)" fg:x="267238911" fg:w="2961511"/><text x="80.8507%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,961,511 samples, 0.89%)</title><rect x="80.6007%" y="1861" width="0.8932%" height="15" fill="rgb(217,60,2)" fg:x="267238911" fg:w="2961511"/><text x="80.8507%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,961,511 samples, 0.89%)</title><rect x="80.6007%" y="1845" width="0.8932%" height="15" fill="rgb(207,26,24)" fg:x="267238911" fg:w="2961511"/><text x="80.8507%" y="1855.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,961,511 samples, 0.89%)</title><rect x="80.6007%" y="1829" width="0.8932%" height="15" fill="rgb(252,210,15)" fg:x="267238911" fg:w="2961511"/><text x="80.8507%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,127,649 samples, 0.34%)</title><rect x="81.1539%" y="1813" width="0.3401%" height="15" fill="rgb(253,209,26)" fg:x="269072773" fg:w="1127649"/><text x="81.4039%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,127,649 samples, 0.34%)</title><rect x="81.1539%" y="1797" width="0.3401%" height="15" fill="rgb(238,170,14)" fg:x="269072773" fg:w="1127649"/><text x="81.4039%" y="1807.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,127,649 samples, 0.34%)</title><rect x="81.1539%" y="1781" width="0.3401%" height="15" fill="rgb(216,178,15)" fg:x="269072773" fg:w="1127649"/><text x="81.4039%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,127,649 samples, 0.34%)</title><rect x="81.1539%" y="1765" width="0.3401%" height="15" fill="rgb(250,197,2)" fg:x="269072773" fg:w="1127649"/><text x="81.4039%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,127,649 samples, 0.34%)</title><rect x="81.1539%" y="1749" width="0.3401%" height="15" fill="rgb(212,70,42)" fg:x="269072773" fg:w="1127649"/><text x="81.4039%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,127,649 samples, 0.34%)</title><rect x="81.1539%" y="1733" width="0.3401%" height="15" fill="rgb(227,213,9)" fg:x="269072773" fg:w="1127649"/><text x="81.4039%" y="1743.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,127,649 samples, 0.34%)</title><rect x="81.1539%" y="1717" width="0.3401%" height="15" fill="rgb(245,99,25)" fg:x="269072773" fg:w="1127649"/><text x="81.4039%" y="1727.50"></text></g><g><title>core::mem::drop (1,127,649 samples, 0.34%)</title><rect x="81.1539%" y="1701" width="0.3401%" height="15" fill="rgb(250,82,29)" fg:x="269072773" fg:w="1127649"/><text x="81.4039%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,127,649 samples, 0.34%)</title><rect x="81.1539%" y="1685" width="0.3401%" height="15" fill="rgb(241,226,54)" fg:x="269072773" fg:w="1127649"/><text x="81.4039%" y="1695.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,127,649 samples, 0.34%)</title><rect x="81.1539%" y="1669" width="0.3401%" height="15" fill="rgb(221,99,41)" fg:x="269072773" fg:w="1127649"/><text x="81.4039%" y="1679.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,127,649 samples, 0.34%)</title><rect x="81.1539%" y="1653" width="0.3401%" height="15" fill="rgb(213,90,21)" fg:x="269072773" fg:w="1127649"/><text x="81.4039%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,127,649 samples, 0.34%)</title><rect x="81.1539%" y="1637" width="0.3401%" height="15" fill="rgb(205,208,24)" fg:x="269072773" fg:w="1127649"/><text x="81.4039%" y="1647.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,127,649 samples, 0.34%)</title><rect x="81.1539%" y="1621" width="0.3401%" height="15" fill="rgb(246,31,12)" fg:x="269072773" fg:w="1127649"/><text x="81.4039%" y="1631.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,127,649 samples, 0.34%)</title><rect x="81.1539%" y="1605" width="0.3401%" height="15" fill="rgb(213,154,6)" fg:x="269072773" fg:w="1127649"/><text x="81.4039%" y="1615.50"></text></g><g><title>cfree (1,127,649 samples, 0.34%)</title><rect x="81.1539%" y="1589" width="0.3401%" height="15" fill="rgb(222,163,29)" fg:x="269072773" fg:w="1127649"/><text x="81.4039%" y="1599.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (946,893 samples, 0.29%)</title><rect x="81.4940%" y="1829" width="0.2856%" height="15" fill="rgb(227,201,8)" fg:x="270200422" fg:w="946893"/><text x="81.7440%" y="1839.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (946,893 samples, 0.29%)</title><rect x="81.4940%" y="1813" width="0.2856%" height="15" fill="rgb(233,9,32)" fg:x="270200422" fg:w="946893"/><text x="81.7440%" y="1823.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (946,893 samples, 0.29%)</title><rect x="81.4940%" y="1797" width="0.2856%" height="15" fill="rgb(217,54,24)" fg:x="270200422" fg:w="946893"/><text x="81.7440%" y="1807.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (946,893 samples, 0.29%)</title><rect x="81.4940%" y="1781" width="0.2856%" height="15" fill="rgb(235,192,0)" fg:x="270200422" fg:w="946893"/><text x="81.7440%" y="1791.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (946,893 samples, 0.29%)</title><rect x="81.4940%" y="1765" width="0.2856%" height="15" fill="rgb(235,45,9)" fg:x="270200422" fg:w="946893"/><text x="81.7440%" y="1775.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (946,893 samples, 0.29%)</title><rect x="81.4940%" y="1749" width="0.2856%" height="15" fill="rgb(246,42,40)" fg:x="270200422" fg:w="946893"/><text x="81.7440%" y="1759.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (946,893 samples, 0.29%)</title><rect x="81.4940%" y="1733" width="0.2856%" height="15" fill="rgb(248,111,24)" fg:x="270200422" fg:w="946893"/><text x="81.7440%" y="1743.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (946,893 samples, 0.29%)</title><rect x="81.4940%" y="1717" width="0.2856%" height="15" fill="rgb(249,65,22)" fg:x="270200422" fg:w="946893"/><text x="81.7440%" y="1727.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (946,893 samples, 0.29%)</title><rect x="81.4940%" y="1701" width="0.2856%" height="15" fill="rgb(238,111,51)" fg:x="270200422" fg:w="946893"/><text x="81.7440%" y="1711.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (946,893 samples, 0.29%)</title><rect x="81.4940%" y="1685" width="0.2856%" height="15" fill="rgb(250,118,22)" fg:x="270200422" fg:w="946893"/><text x="81.7440%" y="1695.50"></text></g><g><title>alloc::slice::hack::to_vec (946,893 samples, 0.29%)</title><rect x="81.4940%" y="1669" width="0.2856%" height="15" fill="rgb(234,84,26)" fg:x="270200422" fg:w="946893"/><text x="81.7440%" y="1679.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (946,893 samples, 0.29%)</title><rect x="81.4940%" y="1653" width="0.2856%" height="15" fill="rgb(243,172,12)" fg:x="270200422" fg:w="946893"/><text x="81.7440%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (946,893 samples, 0.29%)</title><rect x="81.4940%" y="1637" width="0.2856%" height="15" fill="rgb(236,150,49)" fg:x="270200422" fg:w="946893"/><text x="81.7440%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (946,893 samples, 0.29%)</title><rect x="81.4940%" y="1621" width="0.2856%" height="15" fill="rgb(225,197,26)" fg:x="270200422" fg:w="946893"/><text x="81.7440%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (946,893 samples, 0.29%)</title><rect x="81.4940%" y="1605" width="0.2856%" height="15" fill="rgb(214,17,42)" fg:x="270200422" fg:w="946893"/><text x="81.7440%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (946,893 samples, 0.29%)</title><rect x="81.4940%" y="1589" width="0.2856%" height="15" fill="rgb(224,165,40)" fg:x="270200422" fg:w="946893"/><text x="81.7440%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (946,893 samples, 0.29%)</title><rect x="81.4940%" y="1573" width="0.2856%" height="15" fill="rgb(246,100,4)" fg:x="270200422" fg:w="946893"/><text x="81.7440%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (946,893 samples, 0.29%)</title><rect x="81.4940%" y="1557" width="0.2856%" height="15" fill="rgb(222,103,0)" fg:x="270200422" fg:w="946893"/><text x="81.7440%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (946,893 samples, 0.29%)</title><rect x="81.4940%" y="1541" width="0.2856%" height="15" fill="rgb(227,189,26)" fg:x="270200422" fg:w="946893"/><text x="81.7440%" y="1551.50"></text></g><g><title>malloc (946,893 samples, 0.29%)</title><rect x="81.4940%" y="1525" width="0.2856%" height="15" fill="rgb(214,202,17)" fg:x="270200422" fg:w="946893"/><text x="81.7440%" y="1535.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (937,137 samples, 0.28%)</title><rect x="82.4328%" y="1525" width="0.2826%" height="15" fill="rgb(229,111,3)" fg:x="273313123" fg:w="937137"/><text x="82.6828%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (937,137 samples, 0.28%)</title><rect x="82.4328%" y="1509" width="0.2826%" height="15" fill="rgb(229,172,15)" fg:x="273313123" fg:w="937137"/><text x="82.6828%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (937,137 samples, 0.28%)</title><rect x="82.4328%" y="1493" width="0.2826%" height="15" fill="rgb(230,224,35)" fg:x="273313123" fg:w="937137"/><text x="82.6828%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (937,137 samples, 0.28%)</title><rect x="82.4328%" y="1477" width="0.2826%" height="15" fill="rgb(251,141,6)" fg:x="273313123" fg:w="937137"/><text x="82.6828%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (937,137 samples, 0.28%)</title><rect x="82.4328%" y="1461" width="0.2826%" height="15" fill="rgb(225,208,6)" fg:x="273313123" fg:w="937137"/><text x="82.6828%" y="1471.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (937,137 samples, 0.28%)</title><rect x="82.4328%" y="1445" width="0.2826%" height="15" fill="rgb(246,181,16)" fg:x="273313123" fg:w="937137"/><text x="82.6828%" y="1455.50"></text></g><g><title>alloc::alloc::alloc (937,137 samples, 0.28%)</title><rect x="82.4328%" y="1429" width="0.2826%" height="15" fill="rgb(227,129,36)" fg:x="273313123" fg:w="937137"/><text x="82.6828%" y="1439.50"></text></g><g><title>malloc (937,137 samples, 0.28%)</title><rect x="82.4328%" y="1413" width="0.2826%" height="15" fill="rgb(248,117,24)" fg:x="273313123" fg:w="937137"/><text x="82.6828%" y="1423.50"></text></g><g><title>[libc.so.6] (937,137 samples, 0.28%)</title><rect x="82.4328%" y="1397" width="0.2826%" height="15" fill="rgb(214,185,35)" fg:x="273313123" fg:w="937137"/><text x="82.6828%" y="1407.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (2,038,920 samples, 0.61%)</title><rect x="82.4328%" y="1637" width="0.6149%" height="15" fill="rgb(236,150,34)" fg:x="273313123" fg:w="2038920"/><text x="82.6828%" y="1647.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2,038,920 samples, 0.61%)</title><rect x="82.4328%" y="1621" width="0.6149%" height="15" fill="rgb(243,228,27)" fg:x="273313123" fg:w="2038920"/><text x="82.6828%" y="1631.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2,038,920 samples, 0.61%)</title><rect x="82.4328%" y="1605" width="0.6149%" height="15" fill="rgb(245,77,44)" fg:x="273313123" fg:w="2038920"/><text x="82.6828%" y="1615.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,038,920 samples, 0.61%)</title><rect x="82.4328%" y="1589" width="0.6149%" height="15" fill="rgb(235,214,42)" fg:x="273313123" fg:w="2038920"/><text x="82.6828%" y="1599.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,038,920 samples, 0.61%)</title><rect x="82.4328%" y="1573" width="0.6149%" height="15" fill="rgb(221,74,3)" fg:x="273313123" fg:w="2038920"/><text x="82.6828%" y="1583.50"></text></g><g><title>alloc::slice::hack::to_vec (2,038,920 samples, 0.61%)</title><rect x="82.4328%" y="1557" width="0.6149%" height="15" fill="rgb(206,121,29)" fg:x="273313123" fg:w="2038920"/><text x="82.6828%" y="1567.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,038,920 samples, 0.61%)</title><rect x="82.4328%" y="1541" width="0.6149%" height="15" fill="rgb(249,131,53)" fg:x="273313123" fg:w="2038920"/><text x="82.6828%" y="1551.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,101,783 samples, 0.33%)</title><rect x="82.7154%" y="1525" width="0.3323%" height="15" fill="rgb(236,170,29)" fg:x="274250260" fg:w="1101783"/><text x="82.9654%" y="1535.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,101,783 samples, 0.33%)</title><rect x="82.7154%" y="1509" width="0.3323%" height="15" fill="rgb(247,96,15)" fg:x="274250260" fg:w="1101783"/><text x="82.9654%" y="1519.50"></text></g><g><title>[libc.so.6] (1,101,783 samples, 0.33%)</title><rect x="82.7154%" y="1493" width="0.3323%" height="15" fill="rgb(211,210,7)" fg:x="274250260" fg:w="1101783"/><text x="82.9654%" y="1503.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5,106,614 samples, 1.54%)</title><rect x="82.1053%" y="1717" width="1.5402%" height="15" fill="rgb(240,88,50)" fg:x="272227481" fg:w="5106614"/><text x="82.3553%" y="1727.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,020,972 samples, 1.21%)</title><rect x="82.4328%" y="1701" width="1.2127%" height="15" fill="rgb(209,229,26)" fg:x="273313123" fg:w="4020972"/><text x="82.6828%" y="1711.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (4,020,972 samples, 1.21%)</title><rect x="82.4328%" y="1685" width="1.2127%" height="15" fill="rgb(210,68,23)" fg:x="273313123" fg:w="4020972"/><text x="82.6828%" y="1695.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (4,020,972 samples, 1.21%)</title><rect x="82.4328%" y="1669" width="1.2127%" height="15" fill="rgb(229,180,13)" fg:x="273313123" fg:w="4020972"/><text x="82.6828%" y="1679.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,020,972 samples, 1.21%)</title><rect x="82.4328%" y="1653" width="1.2127%" height="15" fill="rgb(236,53,44)" fg:x="273313123" fg:w="4020972"/><text x="82.6828%" y="1663.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,982,052 samples, 0.60%)</title><rect x="83.0477%" y="1637" width="0.5978%" height="15" fill="rgb(244,214,29)" fg:x="275352043" fg:w="1982052"/><text x="83.2977%" y="1647.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,982,052 samples, 0.60%)</title><rect x="83.0477%" y="1621" width="0.5978%" height="15" fill="rgb(220,75,29)" fg:x="275352043" fg:w="1982052"/><text x="83.2977%" y="1631.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (874,597 samples, 0.26%)</title><rect x="83.3817%" y="1605" width="0.2638%" height="15" fill="rgb(214,183,37)" fg:x="276459498" fg:w="874597"/><text x="83.6317%" y="1615.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,130,423 samples, 0.34%)</title><rect x="83.9828%" y="1509" width="0.3409%" height="15" fill="rgb(239,117,29)" fg:x="278452323" fg:w="1130423"/><text x="84.2328%" y="1519.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,130,423 samples, 0.34%)</title><rect x="83.9828%" y="1493" width="0.3409%" height="15" fill="rgb(237,171,35)" fg:x="278452323" fg:w="1130423"/><text x="84.2328%" y="1503.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,130,423 samples, 0.34%)</title><rect x="83.9828%" y="1477" width="0.3409%" height="15" fill="rgb(229,178,53)" fg:x="278452323" fg:w="1130423"/><text x="84.2328%" y="1487.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,130,423 samples, 0.34%)</title><rect x="83.9828%" y="1461" width="0.3409%" height="15" fill="rgb(210,102,19)" fg:x="278452323" fg:w="1130423"/><text x="84.2328%" y="1471.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,130,423 samples, 0.34%)</title><rect x="83.9828%" y="1445" width="0.3409%" height="15" fill="rgb(235,127,22)" fg:x="278452323" fg:w="1130423"/><text x="84.2328%" y="1455.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1,130,423 samples, 0.34%)</title><rect x="83.9828%" y="1429" width="0.3409%" height="15" fill="rgb(244,31,31)" fg:x="278452323" fg:w="1130423"/><text x="84.2328%" y="1439.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,130,423 samples, 0.34%)</title><rect x="83.9828%" y="1413" width="0.3409%" height="15" fill="rgb(231,43,21)" fg:x="278452323" fg:w="1130423"/><text x="84.2328%" y="1423.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,130,423 samples, 0.34%)</title><rect x="83.9828%" y="1397" width="0.3409%" height="15" fill="rgb(217,131,35)" fg:x="278452323" fg:w="1130423"/><text x="84.2328%" y="1407.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,130,423 samples, 0.34%)</title><rect x="83.9828%" y="1381" width="0.3409%" height="15" fill="rgb(221,149,4)" fg:x="278452323" fg:w="1130423"/><text x="84.2328%" y="1391.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,130,423 samples, 0.34%)</title><rect x="83.9828%" y="1365" width="0.3409%" height="15" fill="rgb(232,170,28)" fg:x="278452323" fg:w="1130423"/><text x="84.2328%" y="1375.50"></text></g><g><title>alloc::slice::hack::to_vec (1,130,423 samples, 0.34%)</title><rect x="83.9828%" y="1349" width="0.3409%" height="15" fill="rgb(238,56,10)" fg:x="278452323" fg:w="1130423"/><text x="84.2328%" y="1359.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,130,423 samples, 0.34%)</title><rect x="83.9828%" y="1333" width="0.3409%" height="15" fill="rgb(235,196,14)" fg:x="278452323" fg:w="1130423"/><text x="84.2328%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,130,423 samples, 0.34%)</title><rect x="83.9828%" y="1317" width="0.3409%" height="15" fill="rgb(216,45,48)" fg:x="278452323" fg:w="1130423"/><text x="84.2328%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,130,423 samples, 0.34%)</title><rect x="83.9828%" y="1301" width="0.3409%" height="15" fill="rgb(238,213,17)" fg:x="278452323" fg:w="1130423"/><text x="84.2328%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,130,423 samples, 0.34%)</title><rect x="83.9828%" y="1285" width="0.3409%" height="15" fill="rgb(212,13,2)" fg:x="278452323" fg:w="1130423"/><text x="84.2328%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,130,423 samples, 0.34%)</title><rect x="83.9828%" y="1269" width="0.3409%" height="15" fill="rgb(240,114,20)" fg:x="278452323" fg:w="1130423"/><text x="84.2328%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,130,423 samples, 0.34%)</title><rect x="83.9828%" y="1253" width="0.3409%" height="15" fill="rgb(228,41,40)" fg:x="278452323" fg:w="1130423"/><text x="84.2328%" y="1263.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,130,423 samples, 0.34%)</title><rect x="83.9828%" y="1237" width="0.3409%" height="15" fill="rgb(244,132,35)" fg:x="278452323" fg:w="1130423"/><text x="84.2328%" y="1247.50"></text></g><g><title>alloc::alloc::alloc (1,130,423 samples, 0.34%)</title><rect x="83.9828%" y="1221" width="0.3409%" height="15" fill="rgb(253,189,4)" fg:x="278452323" fg:w="1130423"/><text x="84.2328%" y="1231.50"></text></g><g><title>malloc (1,130,423 samples, 0.34%)</title><rect x="83.9828%" y="1205" width="0.3409%" height="15" fill="rgb(224,37,19)" fg:x="278452323" fg:w="1130423"/><text x="84.2328%" y="1215.50"></text></g><g><title>[libc.so.6] (1,130,423 samples, 0.34%)</title><rect x="83.9828%" y="1189" width="0.3409%" height="15" fill="rgb(235,223,18)" fg:x="278452323" fg:w="1130423"/><text x="84.2328%" y="1199.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (542,306 samples, 0.16%)</title><rect x="84.3237%" y="1445" width="0.1636%" height="15" fill="rgb(235,163,25)" fg:x="279582746" fg:w="542306"/><text x="84.5737%" y="1455.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (542,306 samples, 0.16%)</title><rect x="84.3237%" y="1429" width="0.1636%" height="15" fill="rgb(217,145,28)" fg:x="279582746" fg:w="542306"/><text x="84.5737%" y="1439.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (542,306 samples, 0.16%)</title><rect x="84.3237%" y="1413" width="0.1636%" height="15" fill="rgb(223,223,32)" fg:x="279582746" fg:w="542306"/><text x="84.5737%" y="1423.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,045,918 samples, 0.32%)</title><rect x="84.4873%" y="1237" width="0.3155%" height="15" fill="rgb(227,189,39)" fg:x="280125052" fg:w="1045918"/><text x="84.7373%" y="1247.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,045,918 samples, 0.32%)</title><rect x="84.4873%" y="1221" width="0.3155%" height="15" fill="rgb(248,10,22)" fg:x="280125052" fg:w="1045918"/><text x="84.7373%" y="1231.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,045,918 samples, 0.32%)</title><rect x="84.4873%" y="1205" width="0.3155%" height="15" fill="rgb(248,46,39)" fg:x="280125052" fg:w="1045918"/><text x="84.7373%" y="1215.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1,045,918 samples, 0.32%)</title><rect x="84.4873%" y="1189" width="0.3155%" height="15" fill="rgb(248,113,48)" fg:x="280125052" fg:w="1045918"/><text x="84.7373%" y="1199.50"></text></g><g><title>core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1,045,918 samples, 0.32%)</title><rect x="84.4873%" y="1173" width="0.3155%" height="15" fill="rgb(245,16,25)" fg:x="280125052" fg:w="1045918"/><text x="84.7373%" y="1183.50"></text></g><g><title>core::result::Result&lt;&amp;T,E&gt;::copied (1,045,918 samples, 0.32%)</title><rect x="84.4873%" y="1157" width="0.3155%" height="15" fill="rgb(249,152,16)" fg:x="280125052" fg:w="1045918"/><text x="84.7373%" y="1167.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,165,505 samples, 0.65%)</title><rect x="84.8027%" y="1093" width="0.6531%" height="15" fill="rgb(250,16,1)" fg:x="281170970" fg:w="2165505"/><text x="85.0527%" y="1103.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,165,505 samples, 0.65%)</title><rect x="84.8027%" y="1077" width="0.6531%" height="15" fill="rgb(249,138,3)" fg:x="281170970" fg:w="2165505"/><text x="85.0527%" y="1087.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2,165,505 samples, 0.65%)</title><rect x="84.8027%" y="1061" width="0.6531%" height="15" fill="rgb(227,71,41)" fg:x="281170970" fg:w="2165505"/><text x="85.0527%" y="1071.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (2,165,505 samples, 0.65%)</title><rect x="84.8027%" y="1045" width="0.6531%" height="15" fill="rgb(209,184,23)" fg:x="281170970" fg:w="2165505"/><text x="85.0527%" y="1055.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,165,505 samples, 0.65%)</title><rect x="84.8027%" y="1029" width="0.6531%" height="15" fill="rgb(223,215,31)" fg:x="281170970" fg:w="2165505"/><text x="85.0527%" y="1039.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (2,165,505 samples, 0.65%)</title><rect x="84.8027%" y="1013" width="0.6531%" height="15" fill="rgb(210,146,28)" fg:x="281170970" fg:w="2165505"/><text x="85.0527%" y="1023.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2,165,505 samples, 0.65%)</title><rect x="84.8027%" y="997" width="0.6531%" height="15" fill="rgb(209,183,41)" fg:x="281170970" fg:w="2165505"/><text x="85.0527%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2,165,505 samples, 0.65%)</title><rect x="84.8027%" y="981" width="0.6531%" height="15" fill="rgb(209,224,45)" fg:x="281170970" fg:w="2165505"/><text x="85.0527%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,165,505 samples, 0.65%)</title><rect x="84.8027%" y="965" width="0.6531%" height="15" fill="rgb(224,209,51)" fg:x="281170970" fg:w="2165505"/><text x="85.0527%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,165,505 samples, 0.65%)</title><rect x="84.8027%" y="949" width="0.6531%" height="15" fill="rgb(223,17,39)" fg:x="281170970" fg:w="2165505"/><text x="85.0527%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (2,165,505 samples, 0.65%)</title><rect x="84.8027%" y="933" width="0.6531%" height="15" fill="rgb(234,204,37)" fg:x="281170970" fg:w="2165505"/><text x="85.0527%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,165,505 samples, 0.65%)</title><rect x="84.8027%" y="917" width="0.6531%" height="15" fill="rgb(236,120,5)" fg:x="281170970" fg:w="2165505"/><text x="85.0527%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,165,505 samples, 0.65%)</title><rect x="84.8027%" y="901" width="0.6531%" height="15" fill="rgb(248,97,27)" fg:x="281170970" fg:w="2165505"/><text x="85.0527%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,165,505 samples, 0.65%)</title><rect x="84.8027%" y="885" width="0.6531%" height="15" fill="rgb(240,66,17)" fg:x="281170970" fg:w="2165505"/><text x="85.0527%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,165,505 samples, 0.65%)</title><rect x="84.8027%" y="869" width="0.6531%" height="15" fill="rgb(210,79,3)" fg:x="281170970" fg:w="2165505"/><text x="85.0527%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,165,505 samples, 0.65%)</title><rect x="84.8027%" y="853" width="0.6531%" height="15" fill="rgb(214,176,27)" fg:x="281170970" fg:w="2165505"/><text x="85.0527%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,133,445 samples, 0.34%)</title><rect x="85.1140%" y="837" width="0.3419%" height="15" fill="rgb(235,185,3)" fg:x="282203030" fg:w="1133445"/><text x="85.3640%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,133,445 samples, 0.34%)</title><rect x="85.1140%" y="821" width="0.3419%" height="15" fill="rgb(227,24,12)" fg:x="282203030" fg:w="1133445"/><text x="85.3640%" y="831.50"></text></g><g><title>alloc::alloc::alloc (1,133,445 samples, 0.34%)</title><rect x="85.1140%" y="805" width="0.3419%" height="15" fill="rgb(252,169,48)" fg:x="282203030" fg:w="1133445"/><text x="85.3640%" y="815.50"></text></g><g><title>malloc (1,133,445 samples, 0.34%)</title><rect x="85.1140%" y="789" width="0.3419%" height="15" fill="rgb(212,65,1)" fg:x="282203030" fg:w="1133445"/><text x="85.3640%" y="799.50"></text></g><g><title>[libc.so.6] (1,133,445 samples, 0.34%)</title><rect x="85.1140%" y="773" width="0.3419%" height="15" fill="rgb(242,39,24)" fg:x="282203030" fg:w="1133445"/><text x="85.3640%" y="783.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (885,529 samples, 0.27%)</title><rect x="85.4559%" y="1029" width="0.2671%" height="15" fill="rgb(249,32,23)" fg:x="283336475" fg:w="885529"/><text x="85.7059%" y="1039.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (885,529 samples, 0.27%)</title><rect x="85.4559%" y="1013" width="0.2671%" height="15" fill="rgb(251,195,23)" fg:x="283336475" fg:w="885529"/><text x="85.7059%" y="1023.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (885,529 samples, 0.27%)</title><rect x="85.4559%" y="997" width="0.2671%" height="15" fill="rgb(236,174,8)" fg:x="283336475" fg:w="885529"/><text x="85.7059%" y="1007.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (885,529 samples, 0.27%)</title><rect x="85.4559%" y="981" width="0.2671%" height="15" fill="rgb(220,197,8)" fg:x="283336475" fg:w="885529"/><text x="85.7059%" y="991.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (885,529 samples, 0.27%)</title><rect x="85.4559%" y="965" width="0.2671%" height="15" fill="rgb(240,108,37)" fg:x="283336475" fg:w="885529"/><text x="85.7059%" y="975.50"></text></g><g><title>malloc (885,529 samples, 0.27%)</title><rect x="85.4559%" y="949" width="0.2671%" height="15" fill="rgb(232,176,24)" fg:x="283336475" fg:w="885529"/><text x="85.7059%" y="959.50"></text></g><g><title>[libc.so.6] (885,529 samples, 0.27%)</title><rect x="85.4559%" y="933" width="0.2671%" height="15" fill="rgb(243,35,29)" fg:x="283336475" fg:w="885529"/><text x="85.7059%" y="943.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,071,100 samples, 0.32%)</title><rect x="86.2178%" y="677" width="0.3230%" height="15" fill="rgb(210,37,18)" fg:x="285862907" fg:w="1071100"/><text x="86.4678%" y="687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,071,100 samples, 0.32%)</title><rect x="86.2178%" y="661" width="0.3230%" height="15" fill="rgb(224,184,40)" fg:x="285862907" fg:w="1071100"/><text x="86.4678%" y="671.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,071,100 samples, 0.32%)</title><rect x="86.2178%" y="645" width="0.3230%" height="15" fill="rgb(236,39,29)" fg:x="285862907" fg:w="1071100"/><text x="86.4678%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,071,100 samples, 0.32%)</title><rect x="86.2178%" y="629" width="0.3230%" height="15" fill="rgb(232,48,39)" fg:x="285862907" fg:w="1071100"/><text x="86.4678%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,071,100 samples, 0.32%)</title><rect x="86.2178%" y="613" width="0.3230%" height="15" fill="rgb(236,34,42)" fg:x="285862907" fg:w="1071100"/><text x="86.4678%" y="623.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,071,100 samples, 0.32%)</title><rect x="86.2178%" y="597" width="0.3230%" height="15" fill="rgb(243,106,37)" fg:x="285862907" fg:w="1071100"/><text x="86.4678%" y="607.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,071,100 samples, 0.32%)</title><rect x="86.2178%" y="581" width="0.3230%" height="15" fill="rgb(218,96,6)" fg:x="285862907" fg:w="1071100"/><text x="86.4678%" y="591.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,071,100 samples, 0.32%)</title><rect x="86.2178%" y="565" width="0.3230%" height="15" fill="rgb(235,130,12)" fg:x="285862907" fg:w="1071100"/><text x="86.4678%" y="575.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1,071,100 samples, 0.32%)</title><rect x="86.2178%" y="549" width="0.3230%" height="15" fill="rgb(231,95,0)" fg:x="285862907" fg:w="1071100"/><text x="86.4678%" y="559.50"></text></g><g><title>core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1,071,100 samples, 0.32%)</title><rect x="86.2178%" y="533" width="0.3230%" height="15" fill="rgb(228,12,23)" fg:x="285862907" fg:w="1071100"/><text x="86.4678%" y="543.50"></text></g><g><title>core::result::Result&lt;&amp;T,E&gt;::copied (1,071,100 samples, 0.32%)</title><rect x="86.2178%" y="517" width="0.3230%" height="15" fill="rgb(216,12,1)" fg:x="285862907" fg:w="1071100"/><text x="86.4678%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,016,404 samples, 0.31%)</title><rect x="86.5409%" y="405" width="0.3066%" height="15" fill="rgb(219,59,3)" fg:x="286934007" fg:w="1016404"/><text x="86.7909%" y="415.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,016,404 samples, 0.31%)</title><rect x="86.5409%" y="389" width="0.3066%" height="15" fill="rgb(215,208,46)" fg:x="286934007" fg:w="1016404"/><text x="86.7909%" y="399.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,016,404 samples, 0.31%)</title><rect x="86.5409%" y="373" width="0.3066%" height="15" fill="rgb(254,224,29)" fg:x="286934007" fg:w="1016404"/><text x="86.7909%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,016,404 samples, 0.31%)</title><rect x="86.5409%" y="357" width="0.3066%" height="15" fill="rgb(232,14,29)" fg:x="286934007" fg:w="1016404"/><text x="86.7909%" y="367.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,016,404 samples, 0.31%)</title><rect x="86.5409%" y="341" width="0.3066%" height="15" fill="rgb(208,45,52)" fg:x="286934007" fg:w="1016404"/><text x="86.7909%" y="351.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,016,404 samples, 0.31%)</title><rect x="86.5409%" y="325" width="0.3066%" height="15" fill="rgb(234,191,28)" fg:x="286934007" fg:w="1016404"/><text x="86.7909%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,016,404 samples, 0.31%)</title><rect x="86.5409%" y="309" width="0.3066%" height="15" fill="rgb(244,67,43)" fg:x="286934007" fg:w="1016404"/><text x="86.7909%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (754,010 samples, 0.23%)</title><rect x="86.8475%" y="405" width="0.2274%" height="15" fill="rgb(236,189,24)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="415.50"></text></g><g><title>serde::de::MapAccess::next_value (754,010 samples, 0.23%)</title><rect x="86.8475%" y="389" width="0.2274%" height="15" fill="rgb(239,214,33)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (754,010 samples, 0.23%)</title><rect x="86.8475%" y="373" width="0.2274%" height="15" fill="rgb(226,176,41)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="383.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (754,010 samples, 0.23%)</title><rect x="86.8475%" y="357" width="0.2274%" height="15" fill="rgb(248,47,8)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (754,010 samples, 0.23%)</title><rect x="86.8475%" y="341" width="0.2274%" height="15" fill="rgb(218,81,44)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (754,010 samples, 0.23%)</title><rect x="86.8475%" y="325" width="0.2274%" height="15" fill="rgb(213,98,6)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="335.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (754,010 samples, 0.23%)</title><rect x="86.8475%" y="309" width="0.2274%" height="15" fill="rgb(222,85,22)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (754,010 samples, 0.23%)</title><rect x="86.8475%" y="293" width="0.2274%" height="15" fill="rgb(239,46,39)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (754,010 samples, 0.23%)</title><rect x="86.8475%" y="277" width="0.2274%" height="15" fill="rgb(237,12,29)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="287.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (754,010 samples, 0.23%)</title><rect x="86.8475%" y="261" width="0.2274%" height="15" fill="rgb(214,77,8)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (754,010 samples, 0.23%)</title><rect x="86.8475%" y="245" width="0.2274%" height="15" fill="rgb(217,168,37)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (754,010 samples, 0.23%)</title><rect x="86.8475%" y="229" width="0.2274%" height="15" fill="rgb(221,217,23)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (754,010 samples, 0.23%)</title><rect x="86.8475%" y="213" width="0.2274%" height="15" fill="rgb(243,229,36)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (754,010 samples, 0.23%)</title><rect x="86.8475%" y="197" width="0.2274%" height="15" fill="rgb(251,163,40)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (754,010 samples, 0.23%)</title><rect x="86.8475%" y="181" width="0.2274%" height="15" fill="rgb(237,222,12)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (754,010 samples, 0.23%)</title><rect x="86.8475%" y="165" width="0.2274%" height="15" fill="rgb(248,132,6)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (754,010 samples, 0.23%)</title><rect x="86.8475%" y="149" width="0.2274%" height="15" fill="rgb(227,167,50)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (754,010 samples, 0.23%)</title><rect x="86.8475%" y="133" width="0.2274%" height="15" fill="rgb(242,84,37)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (754,010 samples, 0.23%)</title><rect x="86.8475%" y="117" width="0.2274%" height="15" fill="rgb(212,4,50)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (754,010 samples, 0.23%)</title><rect x="86.8475%" y="101" width="0.2274%" height="15" fill="rgb(230,228,32)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (754,010 samples, 0.23%)</title><rect x="86.8475%" y="85" width="0.2274%" height="15" fill="rgb(248,217,23)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="95.50"></text></g><g><title>alloc::alloc::alloc (754,010 samples, 0.23%)</title><rect x="86.8475%" y="69" width="0.2274%" height="15" fill="rgb(238,197,32)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="79.50"></text></g><g><title>malloc (754,010 samples, 0.23%)</title><rect x="86.8475%" y="53" width="0.2274%" height="15" fill="rgb(236,106,1)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="63.50"></text></g><g><title>[libc.so.6] (754,010 samples, 0.23%)</title><rect x="86.8475%" y="37" width="0.2274%" height="15" fill="rgb(219,228,13)" fg:x="287950411" fg:w="754010"/><text x="87.0975%" y="47.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (938,199 samples, 0.28%)</title><rect x="87.0749%" y="405" width="0.2830%" height="15" fill="rgb(238,30,35)" fg:x="288704421" fg:w="938199"/><text x="87.3249%" y="415.50"></text></g><g><title>serde::de::SeqAccess::next_element (938,199 samples, 0.28%)</title><rect x="87.0749%" y="389" width="0.2830%" height="15" fill="rgb(236,70,23)" fg:x="288704421" fg:w="938199"/><text x="87.3249%" y="399.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (938,199 samples, 0.28%)</title><rect x="87.0749%" y="373" width="0.2830%" height="15" fill="rgb(249,104,48)" fg:x="288704421" fg:w="938199"/><text x="87.3249%" y="383.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (938,199 samples, 0.28%)</title><rect x="87.0749%" y="357" width="0.2830%" height="15" fill="rgb(254,117,50)" fg:x="288704421" fg:w="938199"/><text x="87.3249%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (938,199 samples, 0.28%)</title><rect x="87.0749%" y="341" width="0.2830%" height="15" fill="rgb(223,152,4)" fg:x="288704421" fg:w="938199"/><text x="87.3249%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (938,199 samples, 0.28%)</title><rect x="87.0749%" y="325" width="0.2830%" height="15" fill="rgb(245,6,2)" fg:x="288704421" fg:w="938199"/><text x="87.3249%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (938,199 samples, 0.28%)</title><rect x="87.0749%" y="309" width="0.2830%" height="15" fill="rgb(249,150,24)" fg:x="288704421" fg:w="938199"/><text x="87.3249%" y="319.50"></text></g><g><title>serde::de::MapAccess::next_entry (938,199 samples, 0.28%)</title><rect x="87.0749%" y="293" width="0.2830%" height="15" fill="rgb(228,185,42)" fg:x="288704421" fg:w="938199"/><text x="87.3249%" y="303.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (938,199 samples, 0.28%)</title><rect x="87.0749%" y="277" width="0.2830%" height="15" fill="rgb(226,39,33)" fg:x="288704421" fg:w="938199"/><text x="87.3249%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (938,199 samples, 0.28%)</title><rect x="87.0749%" y="261" width="0.2830%" height="15" fill="rgb(221,166,19)" fg:x="288704421" fg:w="938199"/><text x="87.3249%" y="271.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (938,199 samples, 0.28%)</title><rect x="87.0749%" y="245" width="0.2830%" height="15" fill="rgb(209,109,2)" fg:x="288704421" fg:w="938199"/><text x="87.3249%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (938,199 samples, 0.28%)</title><rect x="87.0749%" y="229" width="0.2830%" height="15" fill="rgb(252,216,26)" fg:x="288704421" fg:w="938199"/><text x="87.3249%" y="239.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (938,199 samples, 0.28%)</title><rect x="87.0749%" y="213" width="0.2830%" height="15" fill="rgb(227,173,36)" fg:x="288704421" fg:w="938199"/><text x="87.3249%" y="223.50"></text></g><g><title>serde::de::MapAccess::next_entry (3,730,480 samples, 1.13%)</title><rect x="86.5409%" y="501" width="1.1251%" height="15" fill="rgb(209,90,7)" fg:x="286934007" fg:w="3730480"/><text x="86.7909%" y="511.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (3,730,480 samples, 1.13%)</title><rect x="86.5409%" y="485" width="1.1251%" height="15" fill="rgb(250,194,11)" fg:x="286934007" fg:w="3730480"/><text x="86.7909%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3,730,480 samples, 1.13%)</title><rect x="86.5409%" y="469" width="1.1251%" height="15" fill="rgb(220,72,50)" fg:x="286934007" fg:w="3730480"/><text x="86.7909%" y="479.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,730,480 samples, 1.13%)</title><rect x="86.5409%" y="453" width="1.1251%" height="15" fill="rgb(222,106,48)" fg:x="286934007" fg:w="3730480"/><text x="86.7909%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,730,480 samples, 1.13%)</title><rect x="86.5409%" y="437" width="1.1251%" height="15" fill="rgb(216,220,45)" fg:x="286934007" fg:w="3730480"/><text x="86.7909%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,730,480 samples, 1.13%)</title><rect x="86.5409%" y="421" width="1.1251%" height="15" fill="rgb(234,112,18)" fg:x="286934007" fg:w="3730480"/><text x="86.7909%" y="431.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (1,021,867 samples, 0.31%)</title><rect x="87.3578%" y="405" width="0.3082%" height="15" fill="rgb(206,179,9)" fg:x="289642620" fg:w="1021867"/><text x="87.6078%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (1,021,867 samples, 0.31%)</title><rect x="87.3578%" y="389" width="0.3082%" height="15" fill="rgb(215,115,40)" fg:x="289642620" fg:w="1021867"/><text x="87.6078%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,021,867 samples, 0.31%)</title><rect x="87.3578%" y="373" width="0.3082%" height="15" fill="rgb(222,69,34)" fg:x="289642620" fg:w="1021867"/><text x="87.6078%" y="383.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,021,867 samples, 0.31%)</title><rect x="87.3578%" y="357" width="0.3082%" height="15" fill="rgb(209,161,10)" fg:x="289642620" fg:w="1021867"/><text x="87.6078%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,021,867 samples, 0.31%)</title><rect x="87.3578%" y="341" width="0.3082%" height="15" fill="rgb(217,6,38)" fg:x="289642620" fg:w="1021867"/><text x="87.6078%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,021,867 samples, 0.31%)</title><rect x="87.3578%" y="325" width="0.3082%" height="15" fill="rgb(229,229,48)" fg:x="289642620" fg:w="1021867"/><text x="87.6078%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,021,867 samples, 0.31%)</title><rect x="87.3578%" y="309" width="0.3082%" height="15" fill="rgb(225,21,28)" fg:x="289642620" fg:w="1021867"/><text x="87.6078%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1,021,867 samples, 0.31%)</title><rect x="87.3578%" y="293" width="0.3082%" height="15" fill="rgb(206,33,13)" fg:x="289642620" fg:w="1021867"/><text x="87.6078%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,021,867 samples, 0.31%)</title><rect x="87.3578%" y="277" width="0.3082%" height="15" fill="rgb(242,178,17)" fg:x="289642620" fg:w="1021867"/><text x="87.6078%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,021,867 samples, 0.31%)</title><rect x="87.3578%" y="261" width="0.3082%" height="15" fill="rgb(220,162,5)" fg:x="289642620" fg:w="1021867"/><text x="87.6078%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,021,867 samples, 0.31%)</title><rect x="87.3578%" y="245" width="0.3082%" height="15" fill="rgb(210,33,43)" fg:x="289642620" fg:w="1021867"/><text x="87.6078%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,021,867 samples, 0.31%)</title><rect x="87.3578%" y="229" width="0.3082%" height="15" fill="rgb(216,116,54)" fg:x="289642620" fg:w="1021867"/><text x="87.6078%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,021,867 samples, 0.31%)</title><rect x="87.3578%" y="213" width="0.3082%" height="15" fill="rgb(249,92,24)" fg:x="289642620" fg:w="1021867"/><text x="87.6078%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,021,867 samples, 0.31%)</title><rect x="87.3578%" y="197" width="0.3082%" height="15" fill="rgb(231,189,14)" fg:x="289642620" fg:w="1021867"/><text x="87.6078%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,021,867 samples, 0.31%)</title><rect x="87.3578%" y="181" width="0.3082%" height="15" fill="rgb(230,8,41)" fg:x="289642620" fg:w="1021867"/><text x="87.6078%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1,021,867 samples, 0.31%)</title><rect x="87.3578%" y="165" width="0.3082%" height="15" fill="rgb(249,7,27)" fg:x="289642620" fg:w="1021867"/><text x="87.6078%" y="175.50"></text></g><g><title>malloc (1,021,867 samples, 0.31%)</title><rect x="87.3578%" y="149" width="0.3082%" height="15" fill="rgb(232,86,5)" fg:x="289642620" fg:w="1021867"/><text x="87.6078%" y="159.50"></text></g><g><title>[libc.so.6] (1,021,867 samples, 0.31%)</title><rect x="87.3578%" y="133" width="0.3082%" height="15" fill="rgb(224,175,18)" fg:x="289642620" fg:w="1021867"/><text x="87.6078%" y="143.50"></text></g><g><title>serde::de::MapAccess::next_entry (6,453,385 samples, 1.95%)</title><rect x="85.9616%" y="917" width="1.9464%" height="15" fill="rgb(220,129,12)" fg:x="285013325" fg:w="6453385"/><text x="86.2116%" y="927.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (6,453,385 samples, 1.95%)</title><rect x="85.9616%" y="901" width="1.9464%" height="15" fill="rgb(210,19,36)" fg:x="285013325" fg:w="6453385"/><text x="86.2116%" y="911.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5,603,803 samples, 1.69%)</title><rect x="86.2178%" y="885" width="1.6901%" height="15" fill="rgb(219,96,14)" fg:x="285862907" fg:w="5603803"/><text x="86.4678%" y="895.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,603,803 samples, 1.69%)</title><rect x="86.2178%" y="869" width="1.6901%" height="15" fill="rgb(249,106,1)" fg:x="285862907" fg:w="5603803"/><text x="86.4678%" y="879.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,603,803 samples, 1.69%)</title><rect x="86.2178%" y="853" width="1.6901%" height="15" fill="rgb(249,155,20)" fg:x="285862907" fg:w="5603803"/><text x="86.4678%" y="863.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,603,803 samples, 1.69%)</title><rect x="86.2178%" y="837" width="1.6901%" height="15" fill="rgb(244,168,9)" fg:x="285862907" fg:w="5603803"/><text x="86.4678%" y="847.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (5,603,803 samples, 1.69%)</title><rect x="86.2178%" y="821" width="1.6901%" height="15" fill="rgb(216,23,50)" fg:x="285862907" fg:w="5603803"/><text x="86.4678%" y="831.50"></text></g><g><title>serde::de::SeqAccess::next_element (5,603,803 samples, 1.69%)</title><rect x="86.2178%" y="805" width="1.6901%" height="15" fill="rgb(224,219,20)" fg:x="285862907" fg:w="5603803"/><text x="86.4678%" y="815.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (5,603,803 samples, 1.69%)</title><rect x="86.2178%" y="789" width="1.6901%" height="15" fill="rgb(222,156,15)" fg:x="285862907" fg:w="5603803"/><text x="86.4678%" y="799.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,603,803 samples, 1.69%)</title><rect x="86.2178%" y="773" width="1.6901%" height="15" fill="rgb(231,97,17)" fg:x="285862907" fg:w="5603803"/><text x="86.4678%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,603,803 samples, 1.69%)</title><rect x="86.2178%" y="757" width="1.6901%" height="15" fill="rgb(218,70,48)" fg:x="285862907" fg:w="5603803"/><text x="86.4678%" y="767.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,603,803 samples, 1.69%)</title><rect x="86.2178%" y="741" width="1.6901%" height="15" fill="rgb(212,196,52)" fg:x="285862907" fg:w="5603803"/><text x="86.4678%" y="751.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5,603,803 samples, 1.69%)</title><rect x="86.2178%" y="725" width="1.6901%" height="15" fill="rgb(243,203,18)" fg:x="285862907" fg:w="5603803"/><text x="86.4678%" y="735.50"></text></g><g><title>serde::de::MapAccess::next_entry (5,603,803 samples, 1.69%)</title><rect x="86.2178%" y="709" width="1.6901%" height="15" fill="rgb(252,125,41)" fg:x="285862907" fg:w="5603803"/><text x="86.4678%" y="719.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (5,603,803 samples, 1.69%)</title><rect x="86.2178%" y="693" width="1.6901%" height="15" fill="rgb(223,180,33)" fg:x="285862907" fg:w="5603803"/><text x="86.4678%" y="703.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,532,703 samples, 1.37%)</title><rect x="86.5409%" y="677" width="1.3671%" height="15" fill="rgb(254,159,46)" fg:x="286934007" fg:w="4532703"/><text x="86.7909%" y="687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,532,703 samples, 1.37%)</title><rect x="86.5409%" y="661" width="1.3671%" height="15" fill="rgb(254,38,10)" fg:x="286934007" fg:w="4532703"/><text x="86.7909%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,532,703 samples, 1.37%)</title><rect x="86.5409%" y="645" width="1.3671%" height="15" fill="rgb(208,217,32)" fg:x="286934007" fg:w="4532703"/><text x="86.7909%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,532,703 samples, 1.37%)</title><rect x="86.5409%" y="629" width="1.3671%" height="15" fill="rgb(221,120,13)" fg:x="286934007" fg:w="4532703"/><text x="86.7909%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,532,703 samples, 1.37%)</title><rect x="86.5409%" y="613" width="1.3671%" height="15" fill="rgb(246,54,52)" fg:x="286934007" fg:w="4532703"/><text x="86.7909%" y="623.50"></text></g><g><title>serde::de::SeqAccess::next_element (4,532,703 samples, 1.37%)</title><rect x="86.5409%" y="597" width="1.3671%" height="15" fill="rgb(242,34,25)" fg:x="286934007" fg:w="4532703"/><text x="86.7909%" y="607.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,532,703 samples, 1.37%)</title><rect x="86.5409%" y="581" width="1.3671%" height="15" fill="rgb(247,209,9)" fg:x="286934007" fg:w="4532703"/><text x="86.7909%" y="591.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,532,703 samples, 1.37%)</title><rect x="86.5409%" y="565" width="1.3671%" height="15" fill="rgb(228,71,26)" fg:x="286934007" fg:w="4532703"/><text x="86.7909%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,532,703 samples, 1.37%)</title><rect x="86.5409%" y="549" width="1.3671%" height="15" fill="rgb(222,145,49)" fg:x="286934007" fg:w="4532703"/><text x="86.7909%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,532,703 samples, 1.37%)</title><rect x="86.5409%" y="533" width="1.3671%" height="15" fill="rgb(218,121,17)" fg:x="286934007" fg:w="4532703"/><text x="86.7909%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,532,703 samples, 1.37%)</title><rect x="86.5409%" y="517" width="1.3671%" height="15" fill="rgb(244,50,7)" fg:x="286934007" fg:w="4532703"/><text x="86.7909%" y="527.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (802,223 samples, 0.24%)</title><rect x="87.6660%" y="501" width="0.2420%" height="15" fill="rgb(246,229,37)" fg:x="290664487" fg:w="802223"/><text x="87.9160%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (802,223 samples, 0.24%)</title><rect x="87.6660%" y="485" width="0.2420%" height="15" fill="rgb(225,18,5)" fg:x="290664487" fg:w="802223"/><text x="87.9160%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (802,223 samples, 0.24%)</title><rect x="87.6660%" y="469" width="0.2420%" height="15" fill="rgb(213,204,8)" fg:x="290664487" fg:w="802223"/><text x="87.9160%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (802,223 samples, 0.24%)</title><rect x="87.6660%" y="453" width="0.2420%" height="15" fill="rgb(238,103,6)" fg:x="290664487" fg:w="802223"/><text x="87.9160%" y="463.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (802,223 samples, 0.24%)</title><rect x="87.6660%" y="437" width="0.2420%" height="15" fill="rgb(222,25,35)" fg:x="290664487" fg:w="802223"/><text x="87.9160%" y="447.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (802,223 samples, 0.24%)</title><rect x="87.6660%" y="421" width="0.2420%" height="15" fill="rgb(213,203,35)" fg:x="290664487" fg:w="802223"/><text x="87.9160%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (802,223 samples, 0.24%)</title><rect x="87.6660%" y="405" width="0.2420%" height="15" fill="rgb(221,79,53)" fg:x="290664487" fg:w="802223"/><text x="87.9160%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (802,223 samples, 0.24%)</title><rect x="87.6660%" y="389" width="0.2420%" height="15" fill="rgb(243,200,35)" fg:x="290664487" fg:w="802223"/><text x="87.9160%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (802,223 samples, 0.24%)</title><rect x="87.6660%" y="373" width="0.2420%" height="15" fill="rgb(248,60,25)" fg:x="290664487" fg:w="802223"/><text x="87.9160%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (802,223 samples, 0.24%)</title><rect x="87.6660%" y="357" width="0.2420%" height="15" fill="rgb(227,53,46)" fg:x="290664487" fg:w="802223"/><text x="87.9160%" y="367.50"></text></g><g><title>alloc::alloc::alloc (802,223 samples, 0.24%)</title><rect x="87.6660%" y="341" width="0.2420%" height="15" fill="rgb(216,120,32)" fg:x="290664487" fg:w="802223"/><text x="87.9160%" y="351.50"></text></g><g><title>malloc (802,223 samples, 0.24%)</title><rect x="87.6660%" y="325" width="0.2420%" height="15" fill="rgb(220,134,1)" fg:x="290664487" fg:w="802223"/><text x="87.9160%" y="335.50"></text></g><g><title>[libc.so.6] (802,223 samples, 0.24%)</title><rect x="87.6660%" y="309" width="0.2420%" height="15" fill="rgb(237,168,5)" fg:x="290664487" fg:w="802223"/><text x="87.9160%" y="319.50"></text></g><g><title>serde::de::MapAccess::next_entry (12,249,242 samples, 3.69%)</title><rect x="84.8027%" y="1125" width="3.6944%" height="15" fill="rgb(231,100,33)" fg:x="281170970" fg:w="12249242"/><text x="85.0527%" y="1135.50">serd..</text></g><g><title>serde::de::MapAccess::next_entry_seed (12,249,242 samples, 3.69%)</title><rect x="84.8027%" y="1109" width="3.6944%" height="15" fill="rgb(236,177,47)" fg:x="281170970" fg:w="12249242"/><text x="85.0527%" y="1119.50">serd..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (10,083,737 samples, 3.04%)</title><rect x="85.4559%" y="1093" width="3.0413%" height="15" fill="rgb(235,7,49)" fg:x="283336475" fg:w="10083737"/><text x="85.7059%" y="1103.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,083,737 samples, 3.04%)</title><rect x="85.4559%" y="1077" width="3.0413%" height="15" fill="rgb(232,119,22)" fg:x="283336475" fg:w="10083737"/><text x="85.7059%" y="1087.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,083,737 samples, 3.04%)</title><rect x="85.4559%" y="1061" width="3.0413%" height="15" fill="rgb(254,73,53)" fg:x="283336475" fg:w="10083737"/><text x="85.7059%" y="1071.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,083,737 samples, 3.04%)</title><rect x="85.4559%" y="1045" width="3.0413%" height="15" fill="rgb(251,35,20)" fg:x="283336475" fg:w="10083737"/><text x="85.7059%" y="1055.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (9,198,208 samples, 2.77%)</title><rect x="85.7229%" y="1029" width="2.7742%" height="15" fill="rgb(241,119,20)" fg:x="284222004" fg:w="9198208"/><text x="85.9729%" y="1039.50">&lt;s..</text></g><g><title>serde::de::SeqAccess::next_element (9,198,208 samples, 2.77%)</title><rect x="85.7229%" y="1013" width="2.7742%" height="15" fill="rgb(207,102,14)" fg:x="284222004" fg:w="9198208"/><text x="85.9729%" y="1023.50">se..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (9,198,208 samples, 2.77%)</title><rect x="85.7229%" y="997" width="2.7742%" height="15" fill="rgb(248,201,50)" fg:x="284222004" fg:w="9198208"/><text x="85.9729%" y="1007.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8,406,887 samples, 2.54%)</title><rect x="85.9616%" y="981" width="2.5356%" height="15" fill="rgb(222,185,44)" fg:x="285013325" fg:w="8406887"/><text x="86.2116%" y="991.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8,406,887 samples, 2.54%)</title><rect x="85.9616%" y="965" width="2.5356%" height="15" fill="rgb(218,107,18)" fg:x="285013325" fg:w="8406887"/><text x="86.2116%" y="975.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8,406,887 samples, 2.54%)</title><rect x="85.9616%" y="949" width="2.5356%" height="15" fill="rgb(237,177,39)" fg:x="285013325" fg:w="8406887"/><text x="86.2116%" y="959.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8,406,887 samples, 2.54%)</title><rect x="85.9616%" y="933" width="2.5356%" height="15" fill="rgb(246,69,6)" fg:x="285013325" fg:w="8406887"/><text x="86.2116%" y="943.50">&lt;s..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,953,502 samples, 0.59%)</title><rect x="87.9080%" y="917" width="0.5892%" height="15" fill="rgb(234,208,37)" fg:x="291466710" fg:w="1953502"/><text x="88.1580%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,953,502 samples, 0.59%)</title><rect x="87.9080%" y="901" width="0.5892%" height="15" fill="rgb(225,4,6)" fg:x="291466710" fg:w="1953502"/><text x="88.1580%" y="911.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,021,245 samples, 0.31%)</title><rect x="88.1892%" y="885" width="0.3080%" height="15" fill="rgb(233,45,0)" fg:x="292398967" fg:w="1021245"/><text x="88.4392%" y="895.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,021,245 samples, 0.31%)</title><rect x="88.1892%" y="869" width="0.3080%" height="15" fill="rgb(226,136,5)" fg:x="292398967" fg:w="1021245"/><text x="88.4392%" y="879.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (14,168,934 samples, 4.27%)</title><rect x="84.8027%" y="1237" width="4.2734%" height="15" fill="rgb(211,91,47)" fg:x="281170970" fg:w="14168934"/><text x="85.0527%" y="1247.50">&lt;serd..</text></g><g><title>serde::de::SeqAccess::next_element (14,168,934 samples, 4.27%)</title><rect x="84.8027%" y="1221" width="4.2734%" height="15" fill="rgb(242,88,51)" fg:x="281170970" fg:w="14168934"/><text x="85.0527%" y="1231.50">serde..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (14,168,934 samples, 4.27%)</title><rect x="84.8027%" y="1205" width="4.2734%" height="15" fill="rgb(230,91,28)" fg:x="281170970" fg:w="14168934"/><text x="85.0527%" y="1215.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14,168,934 samples, 4.27%)</title><rect x="84.8027%" y="1189" width="4.2734%" height="15" fill="rgb(254,186,29)" fg:x="281170970" fg:w="14168934"/><text x="85.0527%" y="1199.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14,168,934 samples, 4.27%)</title><rect x="84.8027%" y="1173" width="4.2734%" height="15" fill="rgb(238,6,4)" fg:x="281170970" fg:w="14168934"/><text x="85.0527%" y="1183.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14,168,934 samples, 4.27%)</title><rect x="84.8027%" y="1157" width="4.2734%" height="15" fill="rgb(221,151,16)" fg:x="281170970" fg:w="14168934"/><text x="85.0527%" y="1167.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14,168,934 samples, 4.27%)</title><rect x="84.8027%" y="1141" width="4.2734%" height="15" fill="rgb(251,143,52)" fg:x="281170970" fg:w="14168934"/><text x="85.0527%" y="1151.50">&lt;serd..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,919,692 samples, 0.58%)</title><rect x="88.4972%" y="1125" width="0.5790%" height="15" fill="rgb(206,90,15)" fg:x="293420212" fg:w="1919692"/><text x="88.7472%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,919,692 samples, 0.58%)</title><rect x="88.4972%" y="1109" width="0.5790%" height="15" fill="rgb(218,35,8)" fg:x="293420212" fg:w="1919692"/><text x="88.7472%" y="1119.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,919,692 samples, 0.58%)</title><rect x="88.4972%" y="1093" width="0.5790%" height="15" fill="rgb(239,215,6)" fg:x="293420212" fg:w="1919692"/><text x="88.7472%" y="1103.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,919,692 samples, 0.58%)</title><rect x="88.4972%" y="1077" width="0.5790%" height="15" fill="rgb(245,116,39)" fg:x="293420212" fg:w="1919692"/><text x="88.7472%" y="1087.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push_with_handle (820,581 samples, 0.25%)</title><rect x="88.8287%" y="1061" width="0.2475%" height="15" fill="rgb(242,65,28)" fg:x="294519323" fg:w="820581"/><text x="89.0787%" y="1071.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (820,581 samples, 0.25%)</title><rect x="88.8287%" y="1045" width="0.2475%" height="15" fill="rgb(252,132,53)" fg:x="294519323" fg:w="820581"/><text x="89.0787%" y="1055.50"></text></g><g><title>serde::de::MapAccess::next_entry (16,223,903 samples, 4.89%)</title><rect x="84.4873%" y="1333" width="4.8932%" height="15" fill="rgb(224,159,50)" fg:x="280125052" fg:w="16223903"/><text x="84.7373%" y="1343.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (16,223,903 samples, 4.89%)</title><rect x="84.4873%" y="1317" width="4.8932%" height="15" fill="rgb(224,93,4)" fg:x="280125052" fg:w="16223903"/><text x="84.7373%" y="1327.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (16,223,903 samples, 4.89%)</title><rect x="84.4873%" y="1301" width="4.8932%" height="15" fill="rgb(208,81,34)" fg:x="280125052" fg:w="16223903"/><text x="84.7373%" y="1311.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (16,223,903 samples, 4.89%)</title><rect x="84.4873%" y="1285" width="4.8932%" height="15" fill="rgb(233,92,54)" fg:x="280125052" fg:w="16223903"/><text x="84.7373%" y="1295.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (16,223,903 samples, 4.89%)</title><rect x="84.4873%" y="1269" width="4.8932%" height="15" fill="rgb(237,21,14)" fg:x="280125052" fg:w="16223903"/><text x="84.7373%" y="1279.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16,223,903 samples, 4.89%)</title><rect x="84.4873%" y="1253" width="4.8932%" height="15" fill="rgb(249,128,51)" fg:x="280125052" fg:w="16223903"/><text x="84.7373%" y="1263.50">&lt;&amp;mut ..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1,009,051 samples, 0.30%)</title><rect x="89.0762%" y="1237" width="0.3043%" height="15" fill="rgb(223,129,24)" fg:x="295339904" fg:w="1009051"/><text x="89.3262%" y="1247.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (1,009,051 samples, 0.30%)</title><rect x="89.0762%" y="1221" width="0.3043%" height="15" fill="rgb(231,168,25)" fg:x="295339904" fg:w="1009051"/><text x="89.3262%" y="1231.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1,009,051 samples, 0.30%)</title><rect x="89.0762%" y="1205" width="0.3043%" height="15" fill="rgb(224,39,20)" fg:x="295339904" fg:w="1009051"/><text x="89.3262%" y="1215.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1,009,051 samples, 0.30%)</title><rect x="89.0762%" y="1189" width="0.3043%" height="15" fill="rgb(225,152,53)" fg:x="295339904" fg:w="1009051"/><text x="89.3262%" y="1199.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (17,067,140 samples, 5.15%)</title><rect x="84.4873%" y="1445" width="5.1475%" height="15" fill="rgb(252,17,24)" fg:x="280125052" fg:w="17067140"/><text x="84.7373%" y="1455.50">&lt;serde..</text></g><g><title>serde::de::SeqAccess::next_element (17,067,140 samples, 5.15%)</title><rect x="84.4873%" y="1429" width="5.1475%" height="15" fill="rgb(250,114,30)" fg:x="280125052" fg:w="17067140"/><text x="84.7373%" y="1439.50">serde:..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (17,067,140 samples, 5.15%)</title><rect x="84.4873%" y="1413" width="5.1475%" height="15" fill="rgb(229,5,4)" fg:x="280125052" fg:w="17067140"/><text x="84.7373%" y="1423.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (17,067,140 samples, 5.15%)</title><rect x="84.4873%" y="1397" width="5.1475%" height="15" fill="rgb(225,176,49)" fg:x="280125052" fg:w="17067140"/><text x="84.7373%" y="1407.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (17,067,140 samples, 5.15%)</title><rect x="84.4873%" y="1381" width="5.1475%" height="15" fill="rgb(224,221,49)" fg:x="280125052" fg:w="17067140"/><text x="84.7373%" y="1391.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17,067,140 samples, 5.15%)</title><rect x="84.4873%" y="1365" width="5.1475%" height="15" fill="rgb(253,169,27)" fg:x="280125052" fg:w="17067140"/><text x="84.7373%" y="1375.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17,067,140 samples, 5.15%)</title><rect x="84.4873%" y="1349" width="5.1475%" height="15" fill="rgb(211,206,16)" fg:x="280125052" fg:w="17067140"/><text x="84.7373%" y="1359.50">&lt;serde..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (843,237 samples, 0.25%)</title><rect x="89.3805%" y="1333" width="0.2543%" height="15" fill="rgb(244,87,35)" fg:x="296348955" fg:w="843237"/><text x="89.6305%" y="1343.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (843,237 samples, 0.25%)</title><rect x="89.3805%" y="1317" width="0.2543%" height="15" fill="rgb(246,28,10)" fg:x="296348955" fg:w="843237"/><text x="89.6305%" y="1327.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (843,237 samples, 0.25%)</title><rect x="89.3805%" y="1301" width="0.2543%" height="15" fill="rgb(229,12,44)" fg:x="296348955" fg:w="843237"/><text x="89.6305%" y="1311.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (843,237 samples, 0.25%)</title><rect x="89.3805%" y="1285" width="0.2543%" height="15" fill="rgb(210,145,37)" fg:x="296348955" fg:w="843237"/><text x="89.6305%" y="1295.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (843,237 samples, 0.25%)</title><rect x="89.3805%" y="1269" width="0.2543%" height="15" fill="rgb(227,112,52)" fg:x="296348955" fg:w="843237"/><text x="89.6305%" y="1279.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (843,237 samples, 0.25%)</title><rect x="89.3805%" y="1253" width="0.2543%" height="15" fill="rgb(238,155,34)" fg:x="296348955" fg:w="843237"/><text x="89.6305%" y="1263.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (843,237 samples, 0.25%)</title><rect x="89.3805%" y="1237" width="0.2543%" height="15" fill="rgb(239,226,36)" fg:x="296348955" fg:w="843237"/><text x="89.6305%" y="1247.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (843,237 samples, 0.25%)</title><rect x="89.3805%" y="1221" width="0.2543%" height="15" fill="rgb(230,16,23)" fg:x="296348955" fg:w="843237"/><text x="89.6305%" y="1231.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (843,237 samples, 0.25%)</title><rect x="89.3805%" y="1205" width="0.2543%" height="15" fill="rgb(236,171,36)" fg:x="296348955" fg:w="843237"/><text x="89.6305%" y="1215.50"></text></g><g><title>serde::de::MapAccess::next_entry (19,845,195 samples, 5.99%)</title><rect x="83.9828%" y="1541" width="5.9854%" height="15" fill="rgb(221,22,14)" fg:x="278452323" fg:w="19845195"/><text x="84.2328%" y="1551.50">serde::d..</text></g><g><title>serde::de::MapAccess::next_entry_seed (19,845,195 samples, 5.99%)</title><rect x="83.9828%" y="1525" width="5.9854%" height="15" fill="rgb(242,43,11)" fg:x="278452323" fg:w="19845195"/><text x="84.2328%" y="1535.50">serde::d..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (18,714,772 samples, 5.64%)</title><rect x="84.3237%" y="1509" width="5.6445%" height="15" fill="rgb(232,69,23)" fg:x="279582746" fg:w="18714772"/><text x="84.5737%" y="1519.50">&lt;serde_..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18,714,772 samples, 5.64%)</title><rect x="84.3237%" y="1493" width="5.6445%" height="15" fill="rgb(216,180,54)" fg:x="279582746" fg:w="18714772"/><text x="84.5737%" y="1503.50">&lt;core::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18,714,772 samples, 5.64%)</title><rect x="84.3237%" y="1477" width="5.6445%" height="15" fill="rgb(216,5,24)" fg:x="279582746" fg:w="18714772"/><text x="84.5737%" y="1487.50">serde_j..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18,714,772 samples, 5.64%)</title><rect x="84.3237%" y="1461" width="5.6445%" height="15" fill="rgb(225,89,9)" fg:x="279582746" fg:w="18714772"/><text x="84.5737%" y="1471.50">&lt;&amp;mut s..</text></g><g><title>serde::de::Visitor::visit_borrowed_str (1,105,326 samples, 0.33%)</title><rect x="89.6348%" y="1445" width="0.3334%" height="15" fill="rgb(243,75,33)" fg:x="297192192" fg:w="1105326"/><text x="89.8848%" y="1455.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (1,105,326 samples, 0.33%)</title><rect x="89.6348%" y="1429" width="0.3334%" height="15" fill="rgb(247,141,45)" fg:x="297192192" fg:w="1105326"/><text x="89.8848%" y="1439.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,105,326 samples, 0.33%)</title><rect x="89.6348%" y="1413" width="0.3334%" height="15" fill="rgb(232,177,36)" fg:x="297192192" fg:w="1105326"/><text x="89.8848%" y="1423.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,105,326 samples, 0.33%)</title><rect x="89.6348%" y="1397" width="0.3334%" height="15" fill="rgb(219,125,36)" fg:x="297192192" fg:w="1105326"/><text x="89.8848%" y="1407.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,105,326 samples, 0.33%)</title><rect x="89.6348%" y="1381" width="0.3334%" height="15" fill="rgb(227,94,9)" fg:x="297192192" fg:w="1105326"/><text x="89.8848%" y="1391.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,105,326 samples, 0.33%)</title><rect x="89.6348%" y="1365" width="0.3334%" height="15" fill="rgb(240,34,52)" fg:x="297192192" fg:w="1105326"/><text x="89.8848%" y="1375.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,105,326 samples, 0.33%)</title><rect x="89.6348%" y="1349" width="0.3334%" height="15" fill="rgb(216,45,12)" fg:x="297192192" fg:w="1105326"/><text x="89.8848%" y="1359.50"></text></g><g><title>alloc::slice::hack::to_vec (1,105,326 samples, 0.33%)</title><rect x="89.6348%" y="1333" width="0.3334%" height="15" fill="rgb(246,21,19)" fg:x="297192192" fg:w="1105326"/><text x="89.8848%" y="1343.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,105,326 samples, 0.33%)</title><rect x="89.6348%" y="1317" width="0.3334%" height="15" fill="rgb(213,98,42)" fg:x="297192192" fg:w="1105326"/><text x="89.8848%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,105,326 samples, 0.33%)</title><rect x="89.6348%" y="1301" width="0.3334%" height="15" fill="rgb(250,136,47)" fg:x="297192192" fg:w="1105326"/><text x="89.8848%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,105,326 samples, 0.33%)</title><rect x="89.6348%" y="1285" width="0.3334%" height="15" fill="rgb(251,124,27)" fg:x="297192192" fg:w="1105326"/><text x="89.8848%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,105,326 samples, 0.33%)</title><rect x="89.6348%" y="1269" width="0.3334%" height="15" fill="rgb(229,180,14)" fg:x="297192192" fg:w="1105326"/><text x="89.8848%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,105,326 samples, 0.33%)</title><rect x="89.6348%" y="1253" width="0.3334%" height="15" fill="rgb(245,216,25)" fg:x="297192192" fg:w="1105326"/><text x="89.8848%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,105,326 samples, 0.33%)</title><rect x="89.6348%" y="1237" width="0.3334%" height="15" fill="rgb(251,43,5)" fg:x="297192192" fg:w="1105326"/><text x="89.8848%" y="1247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,105,326 samples, 0.33%)</title><rect x="89.6348%" y="1221" width="0.3334%" height="15" fill="rgb(250,128,24)" fg:x="297192192" fg:w="1105326"/><text x="89.8848%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (1,105,326 samples, 0.33%)</title><rect x="89.6348%" y="1205" width="0.3334%" height="15" fill="rgb(217,117,27)" fg:x="297192192" fg:w="1105326"/><text x="89.8848%" y="1215.50"></text></g><g><title>malloc (1,105,326 samples, 0.33%)</title><rect x="89.6348%" y="1189" width="0.3334%" height="15" fill="rgb(245,147,4)" fg:x="297192192" fg:w="1105326"/><text x="89.8848%" y="1199.50"></text></g><g><title>[libc.so.6] (1,105,326 samples, 0.33%)</title><rect x="89.6348%" y="1173" width="0.3334%" height="15" fill="rgb(242,201,35)" fg:x="297192192" fg:w="1105326"/><text x="89.8848%" y="1183.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (20,825,605 samples, 6.28%)</title><rect x="83.9828%" y="1653" width="6.2811%" height="15" fill="rgb(218,181,1)" fg:x="278452323" fg:w="20825605"/><text x="84.2328%" y="1663.50">&lt;serde_j..</text></g><g><title>serde::de::SeqAccess::next_element (20,825,605 samples, 6.28%)</title><rect x="83.9828%" y="1637" width="6.2811%" height="15" fill="rgb(222,6,29)" fg:x="278452323" fg:w="20825605"/><text x="84.2328%" y="1647.50">serde::d..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (20,825,605 samples, 6.28%)</title><rect x="83.9828%" y="1621" width="6.2811%" height="15" fill="rgb(208,186,3)" fg:x="278452323" fg:w="20825605"/><text x="84.2328%" y="1631.50">&lt;serde_j..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (20,825,605 samples, 6.28%)</title><rect x="83.9828%" y="1605" width="6.2811%" height="15" fill="rgb(216,36,26)" fg:x="278452323" fg:w="20825605"/><text x="84.2328%" y="1615.50">&lt;core::m..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (20,825,605 samples, 6.28%)</title><rect x="83.9828%" y="1589" width="6.2811%" height="15" fill="rgb(248,201,23)" fg:x="278452323" fg:w="20825605"/><text x="84.2328%" y="1599.50">serde_js..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20,825,605 samples, 6.28%)</title><rect x="83.9828%" y="1573" width="6.2811%" height="15" fill="rgb(251,170,31)" fg:x="278452323" fg:w="20825605"/><text x="84.2328%" y="1583.50">&lt;&amp;mut se..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (20,825,605 samples, 6.28%)</title><rect x="83.9828%" y="1557" width="6.2811%" height="15" fill="rgb(207,110,25)" fg:x="278452323" fg:w="20825605"/><text x="84.2328%" y="1567.50">&lt;serde_j..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (980,410 samples, 0.30%)</title><rect x="89.9682%" y="1541" width="0.2957%" height="15" fill="rgb(250,54,15)" fg:x="298297518" fg:w="980410"/><text x="90.2182%" y="1551.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (980,410 samples, 0.30%)</title><rect x="89.9682%" y="1525" width="0.2957%" height="15" fill="rgb(227,68,33)" fg:x="298297518" fg:w="980410"/><text x="90.2182%" y="1535.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (980,410 samples, 0.30%)</title><rect x="89.9682%" y="1509" width="0.2957%" height="15" fill="rgb(238,34,41)" fg:x="298297518" fg:w="980410"/><text x="90.2182%" y="1519.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (980,410 samples, 0.30%)</title><rect x="89.9682%" y="1493" width="0.2957%" height="15" fill="rgb(220,11,15)" fg:x="298297518" fg:w="980410"/><text x="90.2182%" y="1503.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (980,410 samples, 0.30%)</title><rect x="89.9682%" y="1477" width="0.2957%" height="15" fill="rgb(246,111,35)" fg:x="298297518" fg:w="980410"/><text x="90.2182%" y="1487.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (980,410 samples, 0.30%)</title><rect x="89.9682%" y="1461" width="0.2957%" height="15" fill="rgb(209,88,53)" fg:x="298297518" fg:w="980410"/><text x="90.2182%" y="1471.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (980,410 samples, 0.30%)</title><rect x="89.9682%" y="1445" width="0.2957%" height="15" fill="rgb(231,185,47)" fg:x="298297518" fg:w="980410"/><text x="90.2182%" y="1455.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (980,410 samples, 0.30%)</title><rect x="89.9682%" y="1429" width="0.2957%" height="15" fill="rgb(233,154,1)" fg:x="298297518" fg:w="980410"/><text x="90.2182%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (980,410 samples, 0.30%)</title><rect x="89.9682%" y="1413" width="0.2957%" height="15" fill="rgb(225,15,46)" fg:x="298297518" fg:w="980410"/><text x="90.2182%" y="1423.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (980,410 samples, 0.30%)</title><rect x="89.9682%" y="1397" width="0.2957%" height="15" fill="rgb(211,135,41)" fg:x="298297518" fg:w="980410"/><text x="90.2182%" y="1407.50"></text></g><g><title>alloc::alloc::alloc (980,410 samples, 0.30%)</title><rect x="89.9682%" y="1381" width="0.2957%" height="15" fill="rgb(208,54,0)" fg:x="298297518" fg:w="980410"/><text x="90.2182%" y="1391.50"></text></g><g><title>malloc (980,410 samples, 0.30%)</title><rect x="89.9682%" y="1365" width="0.2957%" height="15" fill="rgb(244,136,14)" fg:x="298297518" fg:w="980410"/><text x="90.2182%" y="1375.50"></text></g><g><title>[libc.so.6] (980,410 samples, 0.30%)</title><rect x="89.9682%" y="1349" width="0.2957%" height="15" fill="rgb(241,56,14)" fg:x="298297518" fg:w="980410"/><text x="90.2182%" y="1359.50"></text></g><g><title>serde::de::MapAccess::next_entry (27,957,662 samples, 8.43%)</title><rect x="82.1053%" y="1749" width="8.4322%" height="15" fill="rgb(205,80,24)" fg:x="272227481" fg:w="27957662"/><text x="82.3553%" y="1759.50">serde::de::M..</text></g><g><title>serde::de::MapAccess::next_entry_seed (27,957,662 samples, 8.43%)</title><rect x="82.1053%" y="1733" width="8.4322%" height="15" fill="rgb(220,57,4)" fg:x="272227481" fg:w="27957662"/><text x="82.3553%" y="1743.50">serde::de::M..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (22,851,048 samples, 6.89%)</title><rect x="83.6455%" y="1717" width="6.8920%" height="15" fill="rgb(226,193,50)" fg:x="277334095" fg:w="22851048"/><text x="83.8955%" y="1727.50">&lt;serde_js..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (22,851,048 samples, 6.89%)</title><rect x="83.6455%" y="1701" width="6.8920%" height="15" fill="rgb(231,168,22)" fg:x="277334095" fg:w="22851048"/><text x="83.8955%" y="1711.50">&lt;core::ma..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (22,851,048 samples, 6.89%)</title><rect x="83.6455%" y="1685" width="6.8920%" height="15" fill="rgb(254,215,14)" fg:x="277334095" fg:w="22851048"/><text x="83.8955%" y="1695.50">serde_jso..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22,851,048 samples, 6.89%)</title><rect x="83.6455%" y="1669" width="6.8920%" height="15" fill="rgb(211,115,16)" fg:x="277334095" fg:w="22851048"/><text x="83.8955%" y="1679.50">&lt;&amp;mut ser..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_any_number (907,215 samples, 0.27%)</title><rect x="90.2639%" y="1653" width="0.2736%" height="15" fill="rgb(236,210,16)" fg:x="299277928" fg:w="907215"/><text x="90.5139%" y="1663.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (907,215 samples, 0.27%)</title><rect x="90.2639%" y="1637" width="0.2736%" height="15" fill="rgb(221,94,12)" fg:x="299277928" fg:w="907215"/><text x="90.5139%" y="1647.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (31,153,929 samples, 9.40%)</title><rect x="81.7795%" y="1765" width="9.3962%" height="15" fill="rgb(235,218,49)" fg:x="271147315" fg:w="31153929"/><text x="82.0295%" y="1775.50">&lt;serde_json::..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (2,116,101 samples, 0.64%)</title><rect x="90.5375%" y="1749" width="0.6382%" height="15" fill="rgb(217,114,14)" fg:x="300185143" fg:w="2116101"/><text x="90.7875%" y="1759.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2,116,101 samples, 0.64%)</title><rect x="90.5375%" y="1733" width="0.6382%" height="15" fill="rgb(216,145,22)" fg:x="300185143" fg:w="2116101"/><text x="90.7875%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2,116,101 samples, 0.64%)</title><rect x="90.5375%" y="1717" width="0.6382%" height="15" fill="rgb(217,112,39)" fg:x="300185143" fg:w="2116101"/><text x="90.7875%" y="1727.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (2,116,101 samples, 0.64%)</title><rect x="90.5375%" y="1701" width="0.6382%" height="15" fill="rgb(225,85,32)" fg:x="300185143" fg:w="2116101"/><text x="90.7875%" y="1711.50"></text></g><g><title>serde::de::MapAccess::next_entry (33,210,789 samples, 10.02%)</title><rect x="81.4940%" y="1861" width="10.0166%" height="15" fill="rgb(245,209,47)" fg:x="270200422" fg:w="33210789"/><text x="81.7440%" y="1871.50">serde::de::Map..</text></g><g><title>serde::de::MapAccess::next_entry_seed (33,210,789 samples, 10.02%)</title><rect x="81.4940%" y="1845" width="10.0166%" height="15" fill="rgb(218,220,15)" fg:x="270200422" fg:w="33210789"/><text x="81.7440%" y="1855.50">serde::de::Map..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (32,263,896 samples, 9.73%)</title><rect x="81.7795%" y="1829" width="9.7310%" height="15" fill="rgb(222,202,31)" fg:x="271147315" fg:w="32263896"/><text x="82.0295%" y="1839.50">&lt;serde_json::d..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (32,263,896 samples, 9.73%)</title><rect x="81.7795%" y="1813" width="9.7310%" height="15" fill="rgb(243,203,4)" fg:x="271147315" fg:w="32263896"/><text x="82.0295%" y="1823.50">&lt;core::marker:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (32,263,896 samples, 9.73%)</title><rect x="81.7795%" y="1797" width="9.7310%" height="15" fill="rgb(237,92,17)" fg:x="271147315" fg:w="32263896"/><text x="82.0295%" y="1807.50">serde_json::va..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (32,263,896 samples, 9.73%)</title><rect x="81.7795%" y="1781" width="9.7310%" height="15" fill="rgb(231,119,7)" fg:x="271147315" fg:w="32263896"/><text x="82.0295%" y="1791.50">&lt;&amp;mut serde_js..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,109,967 samples, 0.33%)</title><rect x="91.1757%" y="1765" width="0.3348%" height="15" fill="rgb(237,82,41)" fg:x="302301244" fg:w="1109967"/><text x="91.4257%" y="1775.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,109,967 samples, 0.33%)</title><rect x="91.1757%" y="1749" width="0.3348%" height="15" fill="rgb(226,81,48)" fg:x="302301244" fg:w="1109967"/><text x="91.4257%" y="1759.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,109,967 samples, 0.33%)</title><rect x="91.1757%" y="1733" width="0.3348%" height="15" fill="rgb(234,70,51)" fg:x="302301244" fg:w="1109967"/><text x="91.4257%" y="1743.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,109,967 samples, 0.33%)</title><rect x="91.1757%" y="1717" width="0.3348%" height="15" fill="rgb(251,86,4)" fg:x="302301244" fg:w="1109967"/><text x="91.4257%" y="1727.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,109,967 samples, 0.33%)</title><rect x="91.1757%" y="1701" width="0.3348%" height="15" fill="rgb(244,144,28)" fg:x="302301244" fg:w="1109967"/><text x="91.4257%" y="1711.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,109,967 samples, 0.33%)</title><rect x="91.1757%" y="1685" width="0.3348%" height="15" fill="rgb(232,161,39)" fg:x="302301244" fg:w="1109967"/><text x="91.4257%" y="1695.50"></text></g><g><title>serde_json::de::ParserNumber::visit (1,109,967 samples, 0.33%)</title><rect x="91.1757%" y="1669" width="0.3348%" height="15" fill="rgb(247,34,51)" fg:x="302301244" fg:w="1109967"/><text x="91.4257%" y="1679.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_u64 (1,109,967 samples, 0.33%)</title><rect x="91.1757%" y="1653" width="0.3348%" height="15" fill="rgb(225,132,2)" fg:x="302301244" fg:w="1109967"/><text x="91.4257%" y="1663.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1,027,238 samples, 0.31%)</title><rect x="91.5105%" y="1829" width="0.3098%" height="15" fill="rgb(209,159,44)" fg:x="303411211" fg:w="1027238"/><text x="91.7605%" y="1839.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,Type&gt;::borrow_mut (1,027,238 samples, 0.31%)</title><rect x="91.5105%" y="1813" width="0.3098%" height="15" fill="rgb(251,214,1)" fg:x="303411211" fg:w="1027238"/><text x="91.7605%" y="1823.50"></text></g><g><title>serde_json::de::from_str (35,323,776 samples, 10.65%)</title><rect x="81.4940%" y="1941" width="10.6538%" height="15" fill="rgb(247,84,47)" fg:x="270200422" fg:w="35323776"/><text x="81.7440%" y="1951.50">serde_json::de::..</text></g><g><title>serde_json::de::from_trait (35,323,776 samples, 10.65%)</title><rect x="81.4940%" y="1925" width="10.6538%" height="15" fill="rgb(240,111,43)" fg:x="270200422" fg:w="35323776"/><text x="81.7440%" y="1935.50">serde_json::de::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (35,323,776 samples, 10.65%)</title><rect x="81.4940%" y="1909" width="10.6538%" height="15" fill="rgb(215,214,35)" fg:x="270200422" fg:w="35323776"/><text x="81.7440%" y="1919.50">serde_json::valu..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (35,323,776 samples, 10.65%)</title><rect x="81.4940%" y="1893" width="10.6538%" height="15" fill="rgb(248,207,23)" fg:x="270200422" fg:w="35323776"/><text x="81.7440%" y="1903.50">&lt;&amp;mut serde_json..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (35,323,776 samples, 10.65%)</title><rect x="81.4940%" y="1877" width="10.6538%" height="15" fill="rgb(214,186,4)" fg:x="270200422" fg:w="35323776"/><text x="81.7440%" y="1887.50">&lt;serde_json::val..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (2,112,987 samples, 0.64%)</title><rect x="91.5105%" y="1861" width="0.6373%" height="15" fill="rgb(220,133,22)" fg:x="303411211" fg:w="2112987"/><text x="91.7605%" y="1871.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2,112,987 samples, 0.64%)</title><rect x="91.5105%" y="1845" width="0.6373%" height="15" fill="rgb(239,134,19)" fg:x="303411211" fg:w="2112987"/><text x="91.7605%" y="1855.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,085,749 samples, 0.33%)</title><rect x="91.8203%" y="1829" width="0.3275%" height="15" fill="rgb(250,140,9)" fg:x="304438449" fg:w="1085749"/><text x="92.0703%" y="1839.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,085,749 samples, 0.33%)</title><rect x="91.8203%" y="1813" width="0.3275%" height="15" fill="rgb(225,59,14)" fg:x="304438449" fg:w="1085749"/><text x="92.0703%" y="1823.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1,085,749 samples, 0.33%)</title><rect x="91.8203%" y="1797" width="0.3275%" height="15" fill="rgb(214,152,51)" fg:x="304438449" fg:w="1085749"/><text x="92.0703%" y="1807.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (1,085,749 samples, 0.33%)</title><rect x="91.8203%" y="1781" width="0.3275%" height="15" fill="rgb(251,227,43)" fg:x="304438449" fg:w="1085749"/><text x="92.0703%" y="1791.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (1,085,749 samples, 0.33%)</title><rect x="91.8203%" y="1765" width="0.3275%" height="15" fill="rgb(241,96,17)" fg:x="304438449" fg:w="1085749"/><text x="92.0703%" y="1775.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (1,085,749 samples, 0.33%)</title><rect x="91.8203%" y="1749" width="0.3275%" height="15" fill="rgb(234,198,43)" fg:x="304438449" fg:w="1085749"/><text x="92.0703%" y="1759.50"></text></g><g><title>core::intrinsics::copy (1,085,749 samples, 0.33%)</title><rect x="91.8203%" y="1733" width="0.3275%" height="15" fill="rgb(220,108,29)" fg:x="304438449" fg:w="1085749"/><text x="92.0703%" y="1743.50"></text></g><g><title>[libc.so.6] (1,085,749 samples, 0.33%)</title><rect x="91.8203%" y="1717" width="0.3275%" height="15" fill="rgb(226,163,33)" fg:x="304438449" fg:w="1085749"/><text x="92.0703%" y="1727.50"></text></g><g><title>benchmark::parse_web_layout_trace (38,736,663 samples, 11.68%)</title><rect x="80.6007%" y="1957" width="11.6832%" height="15" fill="rgb(205,194,45)" fg:x="267238911" fg:w="38736663"/><text x="80.8507%" y="1967.50">benchmark::parse_..</text></g><g><title>std::fs::read_to_string (451,376 samples, 0.14%)</title><rect x="92.1478%" y="1941" width="0.1361%" height="15" fill="rgb(206,143,44)" fg:x="305524198" fg:w="451376"/><text x="92.3978%" y="1951.50"></text></g><g><title>std::fs::read_to_string::inner (451,376 samples, 0.14%)</title><rect x="92.1478%" y="1925" width="0.1361%" height="15" fill="rgb(236,136,36)" fg:x="305524198" fg:w="451376"/><text x="92.3978%" y="1935.50"></text></g><g><title>std::io::default_read_to_string (451,376 samples, 0.14%)</title><rect x="92.1478%" y="1909" width="0.1361%" height="15" fill="rgb(249,172,42)" fg:x="305524198" fg:w="451376"/><text x="92.3978%" y="1919.50"></text></g><g><title>std::io::append_to_string (451,376 samples, 0.14%)</title><rect x="92.1478%" y="1893" width="0.1361%" height="15" fill="rgb(216,139,23)" fg:x="305524198" fg:w="451376"/><text x="92.3978%" y="1903.50"></text></g><g><title>core::str::converts::from_utf8 (451,376 samples, 0.14%)</title><rect x="92.1478%" y="1877" width="0.1361%" height="15" fill="rgb(207,166,20)" fg:x="305524198" fg:w="451376"/><text x="92.3978%" y="1887.50"></text></g><g><title>core::str::validations::run_utf8_validation (451,376 samples, 0.14%)</title><rect x="92.1478%" y="1861" width="0.1361%" height="15" fill="rgb(210,209,22)" fg:x="305524198" fg:w="451376"/><text x="92.3978%" y="1871.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,187,571 samples, 0.36%)</title><rect x="92.2839%" y="1109" width="0.3582%" height="15" fill="rgb(232,118,20)" fg:x="305975574" fg:w="1187571"/><text x="92.5339%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,187,571 samples, 0.36%)</title><rect x="92.2839%" y="1093" width="0.3582%" height="15" fill="rgb(238,113,42)" fg:x="305975574" fg:w="1187571"/><text x="92.5339%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,187,571 samples, 0.36%)</title><rect x="92.2839%" y="1077" width="0.3582%" height="15" fill="rgb(231,42,5)" fg:x="305975574" fg:w="1187571"/><text x="92.5339%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,187,571 samples, 0.36%)</title><rect x="92.2839%" y="1061" width="0.3582%" height="15" fill="rgb(243,166,24)" fg:x="305975574" fg:w="1187571"/><text x="92.5339%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,187,571 samples, 0.36%)</title><rect x="92.2839%" y="1045" width="0.3582%" height="15" fill="rgb(237,226,12)" fg:x="305975574" fg:w="1187571"/><text x="92.5339%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,187,571 samples, 0.36%)</title><rect x="92.2839%" y="1029" width="0.3582%" height="15" fill="rgb(229,133,24)" fg:x="305975574" fg:w="1187571"/><text x="92.5339%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,187,571 samples, 0.36%)</title><rect x="92.2839%" y="1013" width="0.3582%" height="15" fill="rgb(238,33,43)" fg:x="305975574" fg:w="1187571"/><text x="92.5339%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (1,187,571 samples, 0.36%)</title><rect x="92.2839%" y="997" width="0.3582%" height="15" fill="rgb(227,59,38)" fg:x="305975574" fg:w="1187571"/><text x="92.5339%" y="1007.50"></text></g><g><title>cfree (1,187,571 samples, 0.36%)</title><rect x="92.2839%" y="981" width="0.3582%" height="15" fill="rgb(230,97,0)" fg:x="305975574" fg:w="1187571"/><text x="92.5339%" y="991.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,176,659 samples, 0.35%)</title><rect x="92.6421%" y="869" width="0.3549%" height="15" fill="rgb(250,173,50)" fg:x="307163145" fg:w="1176659"/><text x="92.8921%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,176,659 samples, 0.35%)</title><rect x="92.6421%" y="853" width="0.3549%" height="15" fill="rgb(240,15,50)" fg:x="307163145" fg:w="1176659"/><text x="92.8921%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,176,659 samples, 0.35%)</title><rect x="92.6421%" y="837" width="0.3549%" height="15" fill="rgb(221,93,22)" fg:x="307163145" fg:w="1176659"/><text x="92.8921%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,176,659 samples, 0.35%)</title><rect x="92.6421%" y="821" width="0.3549%" height="15" fill="rgb(245,180,53)" fg:x="307163145" fg:w="1176659"/><text x="92.8921%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,176,659 samples, 0.35%)</title><rect x="92.6421%" y="805" width="0.3549%" height="15" fill="rgb(231,88,51)" fg:x="307163145" fg:w="1176659"/><text x="92.8921%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,176,659 samples, 0.35%)</title><rect x="92.6421%" y="789" width="0.3549%" height="15" fill="rgb(240,58,21)" fg:x="307163145" fg:w="1176659"/><text x="92.8921%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,176,659 samples, 0.35%)</title><rect x="92.6421%" y="773" width="0.3549%" height="15" fill="rgb(237,21,10)" fg:x="307163145" fg:w="1176659"/><text x="92.8921%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (1,176,659 samples, 0.35%)</title><rect x="92.6421%" y="757" width="0.3549%" height="15" fill="rgb(218,43,11)" fg:x="307163145" fg:w="1176659"/><text x="92.8921%" y="767.50"></text></g><g><title>cfree (1,176,659 samples, 0.35%)</title><rect x="92.6421%" y="741" width="0.3549%" height="15" fill="rgb(218,221,29)" fg:x="307163145" fg:w="1176659"/><text x="92.8921%" y="751.50"></text></g><g><title>[libc.so.6] (1,176,659 samples, 0.35%)</title><rect x="92.6421%" y="725" width="0.3549%" height="15" fill="rgb(214,118,42)" fg:x="307163145" fg:w="1176659"/><text x="92.8921%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,178,558 samples, 0.36%)</title><rect x="92.9970%" y="645" width="0.3555%" height="15" fill="rgb(251,200,26)" fg:x="308339804" fg:w="1178558"/><text x="93.2470%" y="655.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,178,558 samples, 0.36%)</title><rect x="92.9970%" y="629" width="0.3555%" height="15" fill="rgb(237,101,39)" fg:x="308339804" fg:w="1178558"/><text x="93.2470%" y="639.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1,178,558 samples, 0.36%)</title><rect x="92.9970%" y="613" width="0.3555%" height="15" fill="rgb(251,117,11)" fg:x="308339804" fg:w="1178558"/><text x="93.2470%" y="623.50"></text></g><g><title>alloc::collections::btree::mem::replace (1,178,558 samples, 0.36%)</title><rect x="92.9970%" y="597" width="0.3555%" height="15" fill="rgb(216,223,23)" fg:x="308339804" fg:w="1178558"/><text x="93.2470%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1,178,558 samples, 0.36%)</title><rect x="92.9970%" y="581" width="0.3555%" height="15" fill="rgb(251,54,12)" fg:x="308339804" fg:w="1178558"/><text x="93.2470%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1,178,558 samples, 0.36%)</title><rect x="92.9970%" y="565" width="0.3555%" height="15" fill="rgb(254,176,54)" fg:x="308339804" fg:w="1178558"/><text x="93.2470%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (1,178,558 samples, 0.36%)</title><rect x="92.9970%" y="549" width="0.3555%" height="15" fill="rgb(210,32,8)" fg:x="308339804" fg:w="1178558"/><text x="93.2470%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (1,178,558 samples, 0.36%)</title><rect x="92.9970%" y="533" width="0.3555%" height="15" fill="rgb(235,52,38)" fg:x="308339804" fg:w="1178558"/><text x="93.2470%" y="543.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (1,178,558 samples, 0.36%)</title><rect x="92.9970%" y="517" width="0.3555%" height="15" fill="rgb(231,4,44)" fg:x="308339804" fg:w="1178558"/><text x="93.2470%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1941" width="1.4329%" height="15" fill="rgb(249,2,32)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1925" width="1.4329%" height="15" fill="rgb(224,65,26)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1909" width="1.4329%" height="15" fill="rgb(250,73,40)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1893" width="1.4329%" height="15" fill="rgb(253,177,16)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1877" width="1.4329%" height="15" fill="rgb(217,32,34)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1861" width="1.4329%" height="15" fill="rgb(212,7,10)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1845" width="1.4329%" height="15" fill="rgb(245,89,8)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1855.50"></text></g><g><title>core::mem::drop (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1829" width="1.4329%" height="15" fill="rgb(237,16,53)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1813" width="1.4329%" height="15" fill="rgb(250,204,30)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1797" width="1.4329%" height="15" fill="rgb(208,77,27)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1807.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1781" width="1.4329%" height="15" fill="rgb(250,204,28)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1765" width="1.4329%" height="15" fill="rgb(244,63,21)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1775.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1749" width="1.4329%" height="15" fill="rgb(236,85,44)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1759.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1733" width="1.4329%" height="15" fill="rgb(215,98,4)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1717" width="1.4329%" height="15" fill="rgb(235,38,11)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1701" width="1.4329%" height="15" fill="rgb(254,186,25)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1685" width="1.4329%" height="15" fill="rgb(225,55,31)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1695.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1669" width="1.4329%" height="15" fill="rgb(211,15,21)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1679.50"></text></g><g><title>core::mem::drop (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1653" width="1.4329%" height="15" fill="rgb(215,187,41)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1637" width="1.4329%" height="15" fill="rgb(248,69,32)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1647.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1621" width="1.4329%" height="15" fill="rgb(252,102,52)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1631.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1605" width="1.4329%" height="15" fill="rgb(253,140,32)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1589" width="1.4329%" height="15" fill="rgb(216,56,42)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1599.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1573" width="1.4329%" height="15" fill="rgb(216,184,14)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1583.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1557" width="1.4329%" height="15" fill="rgb(237,187,27)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1541" width="1.4329%" height="15" fill="rgb(219,65,3)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1525" width="1.4329%" height="15" fill="rgb(245,83,25)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1509" width="1.4329%" height="15" fill="rgb(214,205,45)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1493" width="1.4329%" height="15" fill="rgb(241,20,18)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1477" width="1.4329%" height="15" fill="rgb(232,163,23)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1461" width="1.4329%" height="15" fill="rgb(214,5,46)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1445" width="1.4329%" height="15" fill="rgb(229,78,17)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1455.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1429" width="1.4329%" height="15" fill="rgb(248,89,10)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1439.50"></text></g><g><title>core::mem::drop (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1413" width="1.4329%" height="15" fill="rgb(248,54,15)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1397" width="1.4329%" height="15" fill="rgb(223,116,6)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1407.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1381" width="1.4329%" height="15" fill="rgb(205,125,38)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1391.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1365" width="1.4329%" height="15" fill="rgb(251,78,38)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1349" width="1.4329%" height="15" fill="rgb(253,78,28)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1359.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1333" width="1.4329%" height="15" fill="rgb(209,120,3)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1343.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1317" width="1.4329%" height="15" fill="rgb(238,229,9)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1301" width="1.4329%" height="15" fill="rgb(253,159,18)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1285" width="1.4329%" height="15" fill="rgb(244,42,34)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1269" width="1.4329%" height="15" fill="rgb(224,8,7)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1253" width="1.4329%" height="15" fill="rgb(210,201,45)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1237" width="1.4329%" height="15" fill="rgb(252,185,21)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1221" width="1.4329%" height="15" fill="rgb(223,131,1)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1205" width="1.4329%" height="15" fill="rgb(245,141,16)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1215.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1189" width="1.4329%" height="15" fill="rgb(229,55,45)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1199.50"></text></g><g><title>core::mem::drop (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1173" width="1.4329%" height="15" fill="rgb(208,92,15)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1157" width="1.4329%" height="15" fill="rgb(234,185,47)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1141" width="1.4329%" height="15" fill="rgb(253,104,50)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,750,917 samples, 1.43%)</title><rect x="92.2839%" y="1125" width="1.4329%" height="15" fill="rgb(205,70,7)" fg:x="305975574" fg:w="4750917"/><text x="92.5339%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,563,346 samples, 1.07%)</title><rect x="92.6421%" y="1109" width="1.0747%" height="15" fill="rgb(240,178,43)" fg:x="307163145" fg:w="3563346"/><text x="92.8921%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,563,346 samples, 1.07%)</title><rect x="92.6421%" y="1093" width="1.0747%" height="15" fill="rgb(214,112,2)" fg:x="307163145" fg:w="3563346"/><text x="92.8921%" y="1103.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,563,346 samples, 1.07%)</title><rect x="92.6421%" y="1077" width="1.0747%" height="15" fill="rgb(206,46,17)" fg:x="307163145" fg:w="3563346"/><text x="92.8921%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,563,346 samples, 1.07%)</title><rect x="92.6421%" y="1061" width="1.0747%" height="15" fill="rgb(225,220,16)" fg:x="307163145" fg:w="3563346"/><text x="92.8921%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,563,346 samples, 1.07%)</title><rect x="92.6421%" y="1045" width="1.0747%" height="15" fill="rgb(238,65,40)" fg:x="307163145" fg:w="3563346"/><text x="92.8921%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,563,346 samples, 1.07%)</title><rect x="92.6421%" y="1029" width="1.0747%" height="15" fill="rgb(230,151,21)" fg:x="307163145" fg:w="3563346"/><text x="92.8921%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,563,346 samples, 1.07%)</title><rect x="92.6421%" y="1013" width="1.0747%" height="15" fill="rgb(218,58,49)" fg:x="307163145" fg:w="3563346"/><text x="92.8921%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,563,346 samples, 1.07%)</title><rect x="92.6421%" y="997" width="1.0747%" height="15" fill="rgb(219,179,14)" fg:x="307163145" fg:w="3563346"/><text x="92.8921%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,563,346 samples, 1.07%)</title><rect x="92.6421%" y="981" width="1.0747%" height="15" fill="rgb(223,72,1)" fg:x="307163145" fg:w="3563346"/><text x="92.8921%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,563,346 samples, 1.07%)</title><rect x="92.6421%" y="965" width="1.0747%" height="15" fill="rgb(238,126,10)" fg:x="307163145" fg:w="3563346"/><text x="92.8921%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,563,346 samples, 1.07%)</title><rect x="92.6421%" y="949" width="1.0747%" height="15" fill="rgb(224,206,38)" fg:x="307163145" fg:w="3563346"/><text x="92.8921%" y="959.50"></text></g><g><title>core::mem::drop (3,563,346 samples, 1.07%)</title><rect x="92.6421%" y="933" width="1.0747%" height="15" fill="rgb(212,201,54)" fg:x="307163145" fg:w="3563346"/><text x="92.8921%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,563,346 samples, 1.07%)</title><rect x="92.6421%" y="917" width="1.0747%" height="15" fill="rgb(218,154,48)" fg:x="307163145" fg:w="3563346"/><text x="92.8921%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,563,346 samples, 1.07%)</title><rect x="92.6421%" y="901" width="1.0747%" height="15" fill="rgb(232,93,24)" fg:x="307163145" fg:w="3563346"/><text x="92.8921%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,563,346 samples, 1.07%)</title><rect x="92.6421%" y="885" width="1.0747%" height="15" fill="rgb(245,30,21)" fg:x="307163145" fg:w="3563346"/><text x="92.8921%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,386,687 samples, 0.72%)</title><rect x="92.9970%" y="869" width="0.7198%" height="15" fill="rgb(242,148,29)" fg:x="308339804" fg:w="2386687"/><text x="93.2470%" y="879.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,386,687 samples, 0.72%)</title><rect x="92.9970%" y="853" width="0.7198%" height="15" fill="rgb(244,153,54)" fg:x="308339804" fg:w="2386687"/><text x="93.2470%" y="863.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,386,687 samples, 0.72%)</title><rect x="92.9970%" y="837" width="0.7198%" height="15" fill="rgb(252,87,22)" fg:x="308339804" fg:w="2386687"/><text x="93.2470%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,386,687 samples, 0.72%)</title><rect x="92.9970%" y="821" width="0.7198%" height="15" fill="rgb(210,51,29)" fg:x="308339804" fg:w="2386687"/><text x="93.2470%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,386,687 samples, 0.72%)</title><rect x="92.9970%" y="805" width="0.7198%" height="15" fill="rgb(242,136,47)" fg:x="308339804" fg:w="2386687"/><text x="93.2470%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,386,687 samples, 0.72%)</title><rect x="92.9970%" y="789" width="0.7198%" height="15" fill="rgb(238,68,4)" fg:x="308339804" fg:w="2386687"/><text x="93.2470%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,386,687 samples, 0.72%)</title><rect x="92.9970%" y="773" width="0.7198%" height="15" fill="rgb(242,161,30)" fg:x="308339804" fg:w="2386687"/><text x="93.2470%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,386,687 samples, 0.72%)</title><rect x="92.9970%" y="757" width="0.7198%" height="15" fill="rgb(218,58,44)" fg:x="308339804" fg:w="2386687"/><text x="93.2470%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,386,687 samples, 0.72%)</title><rect x="92.9970%" y="741" width="0.7198%" height="15" fill="rgb(252,125,32)" fg:x="308339804" fg:w="2386687"/><text x="93.2470%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,386,687 samples, 0.72%)</title><rect x="92.9970%" y="725" width="0.7198%" height="15" fill="rgb(219,178,0)" fg:x="308339804" fg:w="2386687"/><text x="93.2470%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,386,687 samples, 0.72%)</title><rect x="92.9970%" y="709" width="0.7198%" height="15" fill="rgb(213,152,7)" fg:x="308339804" fg:w="2386687"/><text x="93.2470%" y="719.50"></text></g><g><title>core::mem::drop (2,386,687 samples, 0.72%)</title><rect x="92.9970%" y="693" width="0.7198%" height="15" fill="rgb(249,109,34)" fg:x="308339804" fg:w="2386687"/><text x="93.2470%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,386,687 samples, 0.72%)</title><rect x="92.9970%" y="677" width="0.7198%" height="15" fill="rgb(232,96,21)" fg:x="308339804" fg:w="2386687"/><text x="93.2470%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,386,687 samples, 0.72%)</title><rect x="92.9970%" y="661" width="0.7198%" height="15" fill="rgb(228,27,39)" fg:x="308339804" fg:w="2386687"/><text x="93.2470%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,208,129 samples, 0.36%)</title><rect x="93.3525%" y="645" width="0.3644%" height="15" fill="rgb(211,182,52)" fg:x="309518362" fg:w="1208129"/><text x="93.6025%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,208,129 samples, 0.36%)</title><rect x="93.3525%" y="629" width="0.3644%" height="15" fill="rgb(234,178,38)" fg:x="309518362" fg:w="1208129"/><text x="93.6025%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,208,129 samples, 0.36%)</title><rect x="93.3525%" y="613" width="0.3644%" height="15" fill="rgb(221,111,3)" fg:x="309518362" fg:w="1208129"/><text x="93.6025%" y="623.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,208,129 samples, 0.36%)</title><rect x="93.3525%" y="597" width="0.3644%" height="15" fill="rgb(228,175,21)" fg:x="309518362" fg:w="1208129"/><text x="93.6025%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,208,129 samples, 0.36%)</title><rect x="93.3525%" y="581" width="0.3644%" height="15" fill="rgb(228,174,43)" fg:x="309518362" fg:w="1208129"/><text x="93.6025%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,208,129 samples, 0.36%)</title><rect x="93.3525%" y="565" width="0.3644%" height="15" fill="rgb(211,191,0)" fg:x="309518362" fg:w="1208129"/><text x="93.6025%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,208,129 samples, 0.36%)</title><rect x="93.3525%" y="549" width="0.3644%" height="15" fill="rgb(253,117,3)" fg:x="309518362" fg:w="1208129"/><text x="93.6025%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,208,129 samples, 0.36%)</title><rect x="93.3525%" y="533" width="0.3644%" height="15" fill="rgb(241,127,19)" fg:x="309518362" fg:w="1208129"/><text x="93.6025%" y="543.50"></text></g><g><title>core::mem::drop (1,208,129 samples, 0.36%)</title><rect x="93.3525%" y="517" width="0.3644%" height="15" fill="rgb(218,103,12)" fg:x="309518362" fg:w="1208129"/><text x="93.6025%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,208,129 samples, 0.36%)</title><rect x="93.3525%" y="501" width="0.3644%" height="15" fill="rgb(236,214,43)" fg:x="309518362" fg:w="1208129"/><text x="93.6025%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,208,129 samples, 0.36%)</title><rect x="93.3525%" y="485" width="0.3644%" height="15" fill="rgb(244,144,19)" fg:x="309518362" fg:w="1208129"/><text x="93.6025%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,208,129 samples, 0.36%)</title><rect x="93.3525%" y="469" width="0.3644%" height="15" fill="rgb(246,188,10)" fg:x="309518362" fg:w="1208129"/><text x="93.6025%" y="479.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,208,129 samples, 0.36%)</title><rect x="93.3525%" y="453" width="0.3644%" height="15" fill="rgb(212,193,33)" fg:x="309518362" fg:w="1208129"/><text x="93.6025%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,208,129 samples, 0.36%)</title><rect x="93.3525%" y="437" width="0.3644%" height="15" fill="rgb(241,51,29)" fg:x="309518362" fg:w="1208129"/><text x="93.6025%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,208,129 samples, 0.36%)</title><rect x="93.3525%" y="421" width="0.3644%" height="15" fill="rgb(211,58,19)" fg:x="309518362" fg:w="1208129"/><text x="93.6025%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,208,129 samples, 0.36%)</title><rect x="93.3525%" y="405" width="0.3644%" height="15" fill="rgb(229,111,26)" fg:x="309518362" fg:w="1208129"/><text x="93.6025%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,208,129 samples, 0.36%)</title><rect x="93.3525%" y="389" width="0.3644%" height="15" fill="rgb(213,115,40)" fg:x="309518362" fg:w="1208129"/><text x="93.6025%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,208,129 samples, 0.36%)</title><rect x="93.3525%" y="373" width="0.3644%" height="15" fill="rgb(209,56,44)" fg:x="309518362" fg:w="1208129"/><text x="93.6025%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,208,129 samples, 0.36%)</title><rect x="93.3525%" y="357" width="0.3644%" height="15" fill="rgb(230,108,32)" fg:x="309518362" fg:w="1208129"/><text x="93.6025%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (1,208,129 samples, 0.36%)</title><rect x="93.3525%" y="341" width="0.3644%" height="15" fill="rgb(216,165,31)" fg:x="309518362" fg:w="1208129"/><text x="93.6025%" y="351.50"></text></g><g><title>cfree (1,208,129 samples, 0.36%)</title><rect x="93.3525%" y="325" width="0.3644%" height="15" fill="rgb(218,122,21)" fg:x="309518362" fg:w="1208129"/><text x="93.6025%" y="335.50"></text></g><g><title>_start (292,292,692 samples, 88.16%)</title><rect x="7.0633%" y="2245" width="88.1571%" height="15" fill="rgb(223,224,47)" fg:x="23418845" fg:w="292292692"/><text x="7.3133%" y="2255.50">_start</text></g><g><title>__libc_start_main (292,292,692 samples, 88.16%)</title><rect x="7.0633%" y="2229" width="88.1571%" height="15" fill="rgb(238,102,44)" fg:x="23418845" fg:w="292292692"/><text x="7.3133%" y="2239.50">__libc_start_main</text></g><g><title>[libc.so.6] (292,292,692 samples, 88.16%)</title><rect x="7.0633%" y="2213" width="88.1571%" height="15" fill="rgb(236,46,40)" fg:x="23418845" fg:w="292292692"/><text x="7.3133%" y="2223.50">[libc.so.6]</text></g><g><title>main (292,292,692 samples, 88.16%)</title><rect x="7.0633%" y="2197" width="88.1571%" height="15" fill="rgb(247,202,50)" fg:x="23418845" fg:w="292292692"/><text x="7.3133%" y="2207.50">main</text></g><g><title>std::rt::lang_start_internal (292,292,692 samples, 88.16%)</title><rect x="7.0633%" y="2181" width="88.1571%" height="15" fill="rgb(209,99,20)" fg:x="23418845" fg:w="292292692"/><text x="7.3133%" y="2191.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (292,292,692 samples, 88.16%)</title><rect x="7.0633%" y="2165" width="88.1571%" height="15" fill="rgb(252,27,34)" fg:x="23418845" fg:w="292292692"/><text x="7.3133%" y="2175.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (292,292,692 samples, 88.16%)</title><rect x="7.0633%" y="2149" width="88.1571%" height="15" fill="rgb(215,206,23)" fg:x="23418845" fg:w="292292692"/><text x="7.3133%" y="2159.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (292,292,692 samples, 88.16%)</title><rect x="7.0633%" y="2133" width="88.1571%" height="15" fill="rgb(212,135,36)" fg:x="23418845" fg:w="292292692"/><text x="7.3133%" y="2143.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (292,292,692 samples, 88.16%)</title><rect x="7.0633%" y="2117" width="88.1571%" height="15" fill="rgb(240,189,1)" fg:x="23418845" fg:w="292292692"/><text x="7.3133%" y="2127.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (292,292,692 samples, 88.16%)</title><rect x="7.0633%" y="2101" width="88.1571%" height="15" fill="rgb(242,56,20)" fg:x="23418845" fg:w="292292692"/><text x="7.3133%" y="2111.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (292,292,692 samples, 88.16%)</title><rect x="7.0633%" y="2085" width="88.1571%" height="15" fill="rgb(247,132,33)" fg:x="23418845" fg:w="292292692"/><text x="7.3133%" y="2095.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (292,292,692 samples, 88.16%)</title><rect x="7.0633%" y="2069" width="88.1571%" height="15" fill="rgb(208,149,11)" fg:x="23418845" fg:w="292292692"/><text x="7.3133%" y="2079.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (292,292,692 samples, 88.16%)</title><rect x="7.0633%" y="2053" width="88.1571%" height="15" fill="rgb(211,33,11)" fg:x="23418845" fg:w="292292692"/><text x="7.3133%" y="2063.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (292,292,692 samples, 88.16%)</title><rect x="7.0633%" y="2037" width="88.1571%" height="15" fill="rgb(221,29,38)" fg:x="23418845" fg:w="292292692"/><text x="7.3133%" y="2047.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (292,292,692 samples, 88.16%)</title><rect x="7.0633%" y="2021" width="88.1571%" height="15" fill="rgb(206,182,49)" fg:x="23418845" fg:w="292292692"/><text x="7.3133%" y="2031.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (292,292,692 samples, 88.16%)</title><rect x="7.0633%" y="2005" width="88.1571%" height="15" fill="rgb(216,140,1)" fg:x="23418845" fg:w="292292692"/><text x="7.3133%" y="2015.50">core::ops::function::FnOnce::call_once</text></g><g><title>benchmark::main (292,292,692 samples, 88.16%)</title><rect x="7.0633%" y="1989" width="88.1571%" height="15" fill="rgb(232,57,40)" fg:x="23418845" fg:w="292292692"/><text x="7.3133%" y="1999.50">benchmark::main</text></g><g><title>benchmark::run_web_browser_layout_trace_benchmark (292,292,692 samples, 88.16%)</title><rect x="7.0633%" y="1973" width="88.1571%" height="15" fill="rgb(224,186,18)" fg:x="23418845" fg:w="292292692"/><text x="7.3133%" y="1983.50">benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::LayoutFrame&gt;&gt; (9,735,963 samples, 2.94%)</title><rect x="92.2839%" y="1957" width="2.9364%" height="15" fill="rgb(215,121,11)" fg:x="305975574" fg:w="9735963"/><text x="92.5339%" y="1967.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;benchmark::LayoutFrame&gt;&gt; (4,985,046 samples, 1.50%)</title><rect x="93.7168%" y="1941" width="1.5035%" height="15" fill="rgb(245,147,10)" fg:x="310726491" fg:w="4985046"/><text x="93.9668%" y="1951.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,985,046 samples, 1.50%)</title><rect x="93.7168%" y="1925" width="1.5035%" height="15" fill="rgb(238,153,13)" fg:x="310726491" fg:w="4985046"/><text x="93.9668%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,985,046 samples, 1.50%)</title><rect x="93.7168%" y="1909" width="1.5035%" height="15" fill="rgb(233,108,0)" fg:x="310726491" fg:w="4985046"/><text x="93.9668%" y="1919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,985,046 samples, 1.50%)</title><rect x="93.7168%" y="1893" width="1.5035%" height="15" fill="rgb(212,157,17)" fg:x="310726491" fg:w="4985046"/><text x="93.9668%" y="1903.50"></text></g><g><title>alloc::alloc::dealloc (4,985,046 samples, 1.50%)</title><rect x="93.7168%" y="1877" width="1.5035%" height="15" fill="rgb(225,213,38)" fg:x="310726491" fg:w="4985046"/><text x="93.9668%" y="1887.50"></text></g><g><title>cfree (4,985,046 samples, 1.50%)</title><rect x="93.7168%" y="1861" width="1.5035%" height="15" fill="rgb(248,16,11)" fg:x="310726491" fg:w="4985046"/><text x="93.9668%" y="1871.50"></text></g><g><title>[libc.so.6] (4,985,046 samples, 1.50%)</title><rect x="93.7168%" y="1845" width="1.5035%" height="15" fill="rgb(241,33,4)" fg:x="310726491" fg:w="4985046"/><text x="93.9668%" y="1855.50"></text></g><g><title>[libc.so.6] (4,985,046 samples, 1.50%)</title><rect x="93.7168%" y="1829" width="1.5035%" height="15" fill="rgb(222,26,43)" fg:x="310726491" fg:w="4985046"/><text x="93.9668%" y="1839.50"></text></g><g><title>[libc.so.6] (3,714,618 samples, 1.12%)</title><rect x="94.1000%" y="1813" width="1.1203%" height="15" fill="rgb(243,29,36)" fg:x="311996919" fg:w="3714618"/><text x="94.3500%" y="1823.50"></text></g><g><title>benchmark::apply_frame_modifications (983,366 samples, 0.30%)</title><rect x="95.2204%" y="2245" width="0.2966%" height="15" fill="rgb(241,9,27)" fg:x="315711537" fg:w="983366"/><text x="95.4704%" y="2255.50"></text></g><g><title>benchmark::json_to_html_node (1,095,426 samples, 0.33%)</title><rect x="95.5170%" y="2245" width="0.3304%" height="15" fill="rgb(205,117,26)" fg:x="316694903" fg:w="1095426"/><text x="95.7670%" y="2255.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,095,426 samples, 0.33%)</title><rect x="95.5170%" y="2229" width="0.3304%" height="15" fill="rgb(209,80,39)" fg:x="316694903" fg:w="1095426"/><text x="95.7670%" y="2239.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (1,095,426 samples, 0.33%)</title><rect x="95.5170%" y="2213" width="0.3304%" height="15" fill="rgb(239,155,6)" fg:x="316694903" fg:w="1095426"/><text x="95.7670%" y="2223.50"></text></g><g><title>cfree (2,525,027 samples, 0.76%)</title><rect x="95.8473%" y="2245" width="0.7616%" height="15" fill="rgb(212,104,12)" fg:x="317790329" fg:w="2525027"/><text x="96.0973%" y="2255.50"></text></g><g><title>[libc.so.6] (1,261,370 samples, 0.38%)</title><rect x="96.2285%" y="2229" width="0.3804%" height="15" fill="rgb(234,204,3)" fg:x="319053986" fg:w="1261370"/><text x="96.4785%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,521,343 samples, 0.76%)</title><rect x="96.6089%" y="2245" width="0.7605%" height="15" fill="rgb(251,218,7)" fg:x="320315356" fg:w="2521343"/><text x="96.8589%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,265,819 samples, 0.38%)</title><rect x="96.9876%" y="2229" width="0.3818%" height="15" fill="rgb(221,81,32)" fg:x="321570880" fg:w="1265819"/><text x="97.2376%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,265,819 samples, 0.38%)</title><rect x="96.9876%" y="2213" width="0.3818%" height="15" fill="rgb(214,152,26)" fg:x="321570880" fg:w="1265819"/><text x="97.2376%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,265,819 samples, 0.38%)</title><rect x="96.9876%" y="2197" width="0.3818%" height="15" fill="rgb(223,22,3)" fg:x="321570880" fg:w="1265819"/><text x="97.2376%" y="2207.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,265,819 samples, 0.38%)</title><rect x="96.9876%" y="2181" width="0.3818%" height="15" fill="rgb(207,174,7)" fg:x="321570880" fg:w="1265819"/><text x="97.2376%" y="2191.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,265,819 samples, 0.38%)</title><rect x="96.9876%" y="2165" width="0.3818%" height="15" fill="rgb(224,19,52)" fg:x="321570880" fg:w="1265819"/><text x="97.2376%" y="2175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,265,819 samples, 0.38%)</title><rect x="96.9876%" y="2149" width="0.3818%" height="15" fill="rgb(228,24,14)" fg:x="321570880" fg:w="1265819"/><text x="97.2376%" y="2159.50"></text></g><g><title>alloc::alloc::dealloc (1,265,819 samples, 0.38%)</title><rect x="96.9876%" y="2133" width="0.3818%" height="15" fill="rgb(230,153,43)" fg:x="321570880" fg:w="1265819"/><text x="97.2376%" y="2143.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1,033,711 samples, 0.31%)</title><rect x="97.3694%" y="2245" width="0.3118%" height="15" fill="rgb(231,106,12)" fg:x="322836699" fg:w="1033711"/><text x="97.6194%" y="2255.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,230,893 samples, 0.37%)</title><rect x="97.6811%" y="2245" width="0.3712%" height="15" fill="rgb(215,92,2)" fg:x="323870410" fg:w="1230893"/><text x="97.9311%" y="2255.50"></text></g><g><title>malloc (4,954,526 samples, 1.49%)</title><rect x="98.0524%" y="2245" width="1.4943%" height="15" fill="rgb(249,143,25)" fg:x="325101303" fg:w="4954526"/><text x="98.3024%" y="2255.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_number (404,548 samples, 0.12%)</title><rect x="99.5467%" y="2245" width="0.1220%" height="15" fill="rgb(252,7,35)" fg:x="330055829" fg:w="404548"/><text x="99.7967%" y="2255.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek_or_null (404,548 samples, 0.12%)</title><rect x="99.5467%" y="2229" width="0.1220%" height="15" fill="rgb(216,69,40)" fg:x="330055829" fg:w="404548"/><text x="99.7967%" y="2239.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (404,548 samples, 0.12%)</title><rect x="99.5467%" y="2213" width="0.1220%" height="15" fill="rgb(240,36,33)" fg:x="330055829" fg:w="404548"/><text x="99.7967%" y="2223.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (404,548 samples, 0.12%)</title><rect x="99.5467%" y="2197" width="0.1220%" height="15" fill="rgb(231,128,14)" fg:x="330055829" fg:w="404548"/><text x="99.7967%" y="2207.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (404,548 samples, 0.12%)</title><rect x="99.5467%" y="2181" width="0.1220%" height="15" fill="rgb(245,143,14)" fg:x="330055829" fg:w="404548"/><text x="99.7967%" y="2191.50"></text></g><g><title>all (331,558,849 samples, 100%)</title><rect x="0.0000%" y="2277" width="100.0000%" height="15" fill="rgb(222,130,28)" fg:x="0" fg:w="331558849"/><text x="0.2500%" y="2287.50"></text></g><g><title>benchmark (331,558,849 samples, 100.00%)</title><rect x="0.0000%" y="2261" width="100.0000%" height="15" fill="rgb(212,10,48)" fg:x="0" fg:w="331558849"/><text x="0.2500%" y="2271.50">benchmark</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,098,472 samples, 0.33%)</title><rect x="99.6687%" y="2245" width="0.3313%" height="15" fill="rgb(254,118,45)" fg:x="330460377" fg:w="1098472"/><text x="99.9187%" y="2255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,098,472 samples, 0.33%)</title><rect x="99.6687%" y="2229" width="0.3313%" height="15" fill="rgb(228,6,45)" fg:x="330460377" fg:w="1098472"/><text x="99.9187%" y="2239.50"></text></g></svg></svg>