<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="3142" onload="init(evt)" viewBox="0 0 1200 3142" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="3142" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="3125.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="3125.00"> </text><svg id="frames" x="10" width="1180" total_samples="247103635"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,095,590 samples, 1.25%)</title><rect x="0.0000%" y="3061" width="1.2527%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3095590"/><text x="0.2500%" y="3071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,095,590 samples, 1.25%)</title><rect x="0.0000%" y="3045" width="1.2527%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="3095590"/><text x="0.2500%" y="3055.50"></text></g><g><title>alloc::slice::hack::to_vec (3,095,590 samples, 1.25%)</title><rect x="0.0000%" y="3029" width="1.2527%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="3095590"/><text x="0.2500%" y="3039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,095,590 samples, 1.25%)</title><rect x="0.0000%" y="3013" width="1.2527%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="3095590"/><text x="0.2500%" y="3023.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (3,095,590 samples, 1.25%)</title><rect x="0.0000%" y="2997" width="1.2527%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="3095590"/><text x="0.2500%" y="3007.50"></text></g><g><title>[libc.so.6] (6,047,562 samples, 2.45%)</title><rect x="1.2527%" y="3061" width="2.4474%" height="15" fill="rgb(232,128,0)" fg:x="3095590" fg:w="6047562"/><text x="1.5027%" y="3071.50">[l..</text></g><g><title>[libc.so.6] (3,123,638 samples, 1.26%)</title><rect x="3.7001%" y="3045" width="1.2641%" height="15" fill="rgb(207,160,47)" fg:x="9143152" fg:w="3123638"/><text x="3.9501%" y="3055.50"></text></g><g><title>[unknown] (6,167,123 samples, 2.50%)</title><rect x="3.7001%" y="3061" width="2.4958%" height="15" fill="rgb(228,23,34)" fg:x="9143152" fg:w="6167123"/><text x="3.9501%" y="3071.50">[u..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,043,485 samples, 1.23%)</title><rect x="4.9642%" y="3045" width="1.2317%" height="15" fill="rgb(218,30,26)" fg:x="12266790" fg:w="3043485"/><text x="5.2142%" y="3055.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (3,043,485 samples, 1.23%)</title><rect x="4.9642%" y="3029" width="1.2317%" height="15" fill="rgb(220,122,19)" fg:x="12266790" fg:w="3043485"/><text x="5.2142%" y="3039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (3,043,485 samples, 1.23%)</title><rect x="4.9642%" y="3013" width="1.2317%" height="15" fill="rgb(250,228,42)" fg:x="12266790" fg:w="3043485"/><text x="5.2142%" y="3023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (3,043,485 samples, 1.23%)</title><rect x="4.9642%" y="2997" width="1.2317%" height="15" fill="rgb(240,193,28)" fg:x="12266790" fg:w="3043485"/><text x="5.2142%" y="3007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,043,485 samples, 1.23%)</title><rect x="4.9642%" y="2981" width="1.2317%" height="15" fill="rgb(216,20,37)" fg:x="12266790" fg:w="3043485"/><text x="5.2142%" y="2991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,043,485 samples, 1.23%)</title><rect x="4.9642%" y="2965" width="1.2317%" height="15" fill="rgb(206,188,39)" fg:x="12266790" fg:w="3043485"/><text x="5.2142%" y="2975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,043,485 samples, 1.23%)</title><rect x="4.9642%" y="2949" width="1.2317%" height="15" fill="rgb(217,207,13)" fg:x="12266790" fg:w="3043485"/><text x="5.2142%" y="2959.50"></text></g><g><title>alloc::alloc::dealloc (3,043,485 samples, 1.23%)</title><rect x="4.9642%" y="2933" width="1.2317%" height="15" fill="rgb(231,73,38)" fg:x="12266790" fg:w="3043485"/><text x="5.2142%" y="2943.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,095,063 samples, 1.25%)</title><rect x="6.1959%" y="2693" width="1.2525%" height="15" fill="rgb(225,20,46)" fg:x="15310275" fg:w="3095063"/><text x="6.4459%" y="2703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,095,063 samples, 1.25%)</title><rect x="6.1959%" y="2677" width="1.2525%" height="15" fill="rgb(210,31,41)" fg:x="15310275" fg:w="3095063"/><text x="6.4459%" y="2687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,095,063 samples, 1.25%)</title><rect x="6.1959%" y="2661" width="1.2525%" height="15" fill="rgb(221,200,47)" fg:x="15310275" fg:w="3095063"/><text x="6.4459%" y="2671.50"></text></g><g><title>alloc::slice::hack::to_vec (3,095,063 samples, 1.25%)</title><rect x="6.1959%" y="2645" width="1.2525%" height="15" fill="rgb(226,26,5)" fg:x="15310275" fg:w="3095063"/><text x="6.4459%" y="2655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,095,063 samples, 1.25%)</title><rect x="6.1959%" y="2629" width="1.2525%" height="15" fill="rgb(249,33,26)" fg:x="15310275" fg:w="3095063"/><text x="6.4459%" y="2639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,095,063 samples, 1.25%)</title><rect x="6.1959%" y="2613" width="1.2525%" height="15" fill="rgb(235,183,28)" fg:x="15310275" fg:w="3095063"/><text x="6.4459%" y="2623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,095,063 samples, 1.25%)</title><rect x="6.1959%" y="2597" width="1.2525%" height="15" fill="rgb(221,5,38)" fg:x="15310275" fg:w="3095063"/><text x="6.4459%" y="2607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,095,063 samples, 1.25%)</title><rect x="6.1959%" y="2581" width="1.2525%" height="15" fill="rgb(247,18,42)" fg:x="15310275" fg:w="3095063"/><text x="6.4459%" y="2591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,095,063 samples, 1.25%)</title><rect x="6.1959%" y="2565" width="1.2525%" height="15" fill="rgb(241,131,45)" fg:x="15310275" fg:w="3095063"/><text x="6.4459%" y="2575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,095,063 samples, 1.25%)</title><rect x="6.1959%" y="2549" width="1.2525%" height="15" fill="rgb(249,31,29)" fg:x="15310275" fg:w="3095063"/><text x="6.4459%" y="2559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,095,063 samples, 1.25%)</title><rect x="6.1959%" y="2533" width="1.2525%" height="15" fill="rgb(225,111,53)" fg:x="15310275" fg:w="3095063"/><text x="6.4459%" y="2543.50"></text></g><g><title>alloc::alloc::alloc (3,095,063 samples, 1.25%)</title><rect x="6.1959%" y="2517" width="1.2525%" height="15" fill="rgb(238,160,17)" fg:x="15310275" fg:w="3095063"/><text x="6.4459%" y="2527.50"></text></g><g><title>malloc (3,095,063 samples, 1.25%)</title><rect x="6.1959%" y="2501" width="1.2525%" height="15" fill="rgb(214,148,48)" fg:x="15310275" fg:w="3095063"/><text x="6.4459%" y="2511.50"></text></g><g><title>[libc.so.6] (3,095,063 samples, 1.25%)</title><rect x="6.1959%" y="2485" width="1.2525%" height="15" fill="rgb(232,36,49)" fg:x="15310275" fg:w="3095063"/><text x="6.4459%" y="2495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,021,768 samples, 1.22%)</title><rect x="8.4159%" y="2197" width="1.2229%" height="15" fill="rgb(209,103,24)" fg:x="20796025" fg:w="3021768"/><text x="8.6659%" y="2207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,021,768 samples, 1.22%)</title><rect x="8.4159%" y="2181" width="1.2229%" height="15" fill="rgb(229,88,8)" fg:x="20796025" fg:w="3021768"/><text x="8.6659%" y="2191.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,021,768 samples, 1.22%)</title><rect x="8.4159%" y="2165" width="1.2229%" height="15" fill="rgb(213,181,19)" fg:x="20796025" fg:w="3021768"/><text x="8.6659%" y="2175.50"></text></g><g><title>alloc::slice::hack::to_vec (3,021,768 samples, 1.22%)</title><rect x="8.4159%" y="2149" width="1.2229%" height="15" fill="rgb(254,191,54)" fg:x="20796025" fg:w="3021768"/><text x="8.6659%" y="2159.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,021,768 samples, 1.22%)</title><rect x="8.4159%" y="2133" width="1.2229%" height="15" fill="rgb(241,83,37)" fg:x="20796025" fg:w="3021768"/><text x="8.6659%" y="2143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,021,768 samples, 1.22%)</title><rect x="8.4159%" y="2117" width="1.2229%" height="15" fill="rgb(233,36,39)" fg:x="20796025" fg:w="3021768"/><text x="8.6659%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,021,768 samples, 1.22%)</title><rect x="8.4159%" y="2101" width="1.2229%" height="15" fill="rgb(226,3,54)" fg:x="20796025" fg:w="3021768"/><text x="8.6659%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,021,768 samples, 1.22%)</title><rect x="8.4159%" y="2085" width="1.2229%" height="15" fill="rgb(245,192,40)" fg:x="20796025" fg:w="3021768"/><text x="8.6659%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,021,768 samples, 1.22%)</title><rect x="8.4159%" y="2069" width="1.2229%" height="15" fill="rgb(238,167,29)" fg:x="20796025" fg:w="3021768"/><text x="8.6659%" y="2079.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,021,768 samples, 1.22%)</title><rect x="8.4159%" y="2053" width="1.2229%" height="15" fill="rgb(232,182,51)" fg:x="20796025" fg:w="3021768"/><text x="8.6659%" y="2063.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,021,768 samples, 1.22%)</title><rect x="8.4159%" y="2037" width="1.2229%" height="15" fill="rgb(231,60,39)" fg:x="20796025" fg:w="3021768"/><text x="8.6659%" y="2047.50"></text></g><g><title>alloc::alloc::alloc (3,021,768 samples, 1.22%)</title><rect x="8.4159%" y="2021" width="1.2229%" height="15" fill="rgb(208,69,12)" fg:x="20796025" fg:w="3021768"/><text x="8.6659%" y="2031.50"></text></g><g><title>malloc (3,021,768 samples, 1.22%)</title><rect x="8.4159%" y="2005" width="1.2229%" height="15" fill="rgb(235,93,37)" fg:x="20796025" fg:w="3021768"/><text x="8.6659%" y="2015.50"></text></g><g><title>[libc.so.6] (3,021,768 samples, 1.22%)</title><rect x="8.4159%" y="1989" width="1.2229%" height="15" fill="rgb(213,116,39)" fg:x="20796025" fg:w="3021768"/><text x="8.6659%" y="1999.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,466,204 samples, 1.00%)</title><rect x="9.6388%" y="2053" width="0.9980%" height="15" fill="rgb(222,207,29)" fg:x="23817793" fg:w="2466204"/><text x="9.8888%" y="2063.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,466,204 samples, 1.00%)</title><rect x="9.6388%" y="2037" width="0.9980%" height="15" fill="rgb(206,96,30)" fg:x="23817793" fg:w="2466204"/><text x="9.8888%" y="2047.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,466,204 samples, 1.00%)</title><rect x="9.6388%" y="2021" width="0.9980%" height="15" fill="rgb(218,138,4)" fg:x="23817793" fg:w="2466204"/><text x="9.8888%" y="2031.50"></text></g><g><title>alloc::slice::hack::to_vec (2,466,204 samples, 1.00%)</title><rect x="9.6388%" y="2005" width="0.9980%" height="15" fill="rgb(250,191,14)" fg:x="23817793" fg:w="2466204"/><text x="9.8888%" y="2015.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,466,204 samples, 1.00%)</title><rect x="9.6388%" y="1989" width="0.9980%" height="15" fill="rgb(239,60,40)" fg:x="23817793" fg:w="2466204"/><text x="9.8888%" y="1999.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,466,204 samples, 1.00%)</title><rect x="9.6388%" y="1973" width="0.9980%" height="15" fill="rgb(206,27,48)" fg:x="23817793" fg:w="2466204"/><text x="9.8888%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,466,204 samples, 1.00%)</title><rect x="9.6388%" y="1957" width="0.9980%" height="15" fill="rgb(225,35,8)" fg:x="23817793" fg:w="2466204"/><text x="9.8888%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,466,204 samples, 1.00%)</title><rect x="9.6388%" y="1941" width="0.9980%" height="15" fill="rgb(250,213,24)" fg:x="23817793" fg:w="2466204"/><text x="9.8888%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,466,204 samples, 1.00%)</title><rect x="9.6388%" y="1925" width="0.9980%" height="15" fill="rgb(247,123,22)" fg:x="23817793" fg:w="2466204"/><text x="9.8888%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,466,204 samples, 1.00%)</title><rect x="9.6388%" y="1909" width="0.9980%" height="15" fill="rgb(231,138,38)" fg:x="23817793" fg:w="2466204"/><text x="9.8888%" y="1919.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,466,204 samples, 1.00%)</title><rect x="9.6388%" y="1893" width="0.9980%" height="15" fill="rgb(231,145,46)" fg:x="23817793" fg:w="2466204"/><text x="9.8888%" y="1903.50"></text></g><g><title>alloc::alloc::alloc (2,466,204 samples, 1.00%)</title><rect x="9.6388%" y="1877" width="0.9980%" height="15" fill="rgb(251,118,11)" fg:x="23817793" fg:w="2466204"/><text x="9.8888%" y="1887.50"></text></g><g><title>malloc (2,466,204 samples, 1.00%)</title><rect x="9.6388%" y="1861" width="0.9980%" height="15" fill="rgb(217,147,25)" fg:x="23817793" fg:w="2466204"/><text x="9.8888%" y="1871.50"></text></g><g><title>[libc.so.6] (2,466,204 samples, 1.00%)</title><rect x="9.6388%" y="1845" width="0.9980%" height="15" fill="rgb(247,81,37)" fg:x="23817793" fg:w="2466204"/><text x="9.8888%" y="1855.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,021,050 samples, 3.25%)</title><rect x="8.4159%" y="2485" width="3.2460%" height="15" fill="rgb(209,12,38)" fg:x="20796025" fg:w="8021050"/><text x="8.6659%" y="2495.50">&lt;se..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,021,050 samples, 3.25%)</title><rect x="8.4159%" y="2469" width="3.2460%" height="15" fill="rgb(227,1,9)" fg:x="20796025" fg:w="8021050"/><text x="8.6659%" y="2479.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,021,050 samples, 3.25%)</title><rect x="8.4159%" y="2453" width="3.2460%" height="15" fill="rgb(248,47,43)" fg:x="20796025" fg:w="8021050"/><text x="8.6659%" y="2463.50">all..</text></g><g><title>alloc::slice::hack::to_vec (8,021,050 samples, 3.25%)</title><rect x="8.4159%" y="2437" width="3.2460%" height="15" fill="rgb(221,10,30)" fg:x="20796025" fg:w="8021050"/><text x="8.6659%" y="2447.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,021,050 samples, 3.25%)</title><rect x="8.4159%" y="2421" width="3.2460%" height="15" fill="rgb(210,229,1)" fg:x="20796025" fg:w="8021050"/><text x="8.6659%" y="2431.50">&lt;T ..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,021,050 samples, 3.25%)</title><rect x="8.4159%" y="2405" width="3.2460%" height="15" fill="rgb(222,148,37)" fg:x="20796025" fg:w="8021050"/><text x="8.6659%" y="2415.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (8,021,050 samples, 3.25%)</title><rect x="8.4159%" y="2389" width="3.2460%" height="15" fill="rgb(234,67,33)" fg:x="20796025" fg:w="8021050"/><text x="8.6659%" y="2399.50">&lt;se..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (8,021,050 samples, 3.25%)</title><rect x="8.4159%" y="2373" width="3.2460%" height="15" fill="rgb(247,98,35)" fg:x="20796025" fg:w="8021050"/><text x="8.6659%" y="2383.50">&lt;al..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8,021,050 samples, 3.25%)</title><rect x="8.4159%" y="2357" width="3.2460%" height="15" fill="rgb(247,138,52)" fg:x="20796025" fg:w="8021050"/><text x="8.6659%" y="2367.50">&lt;al..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,021,050 samples, 3.25%)</title><rect x="8.4159%" y="2341" width="3.2460%" height="15" fill="rgb(213,79,30)" fg:x="20796025" fg:w="8021050"/><text x="8.6659%" y="2351.50">&lt;se..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,021,050 samples, 3.25%)</title><rect x="8.4159%" y="2325" width="3.2460%" height="15" fill="rgb(246,177,23)" fg:x="20796025" fg:w="8021050"/><text x="8.6659%" y="2335.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,021,050 samples, 3.25%)</title><rect x="8.4159%" y="2309" width="3.2460%" height="15" fill="rgb(230,62,27)" fg:x="20796025" fg:w="8021050"/><text x="8.6659%" y="2319.50">all..</text></g><g><title>alloc::slice::hack::to_vec (8,021,050 samples, 3.25%)</title><rect x="8.4159%" y="2293" width="3.2460%" height="15" fill="rgb(216,154,8)" fg:x="20796025" fg:w="8021050"/><text x="8.6659%" y="2303.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,021,050 samples, 3.25%)</title><rect x="8.4159%" y="2277" width="3.2460%" height="15" fill="rgb(244,35,45)" fg:x="20796025" fg:w="8021050"/><text x="8.6659%" y="2287.50">&lt;T ..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,021,050 samples, 3.25%)</title><rect x="8.4159%" y="2261" width="3.2460%" height="15" fill="rgb(251,115,12)" fg:x="20796025" fg:w="8021050"/><text x="8.6659%" y="2271.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (8,021,050 samples, 3.25%)</title><rect x="8.4159%" y="2245" width="3.2460%" height="15" fill="rgb(240,54,50)" fg:x="20796025" fg:w="8021050"/><text x="8.6659%" y="2255.50">&lt;se..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (8,021,050 samples, 3.25%)</title><rect x="8.4159%" y="2229" width="3.2460%" height="15" fill="rgb(233,84,52)" fg:x="20796025" fg:w="8021050"/><text x="8.6659%" y="2239.50">&lt;al..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8,021,050 samples, 3.25%)</title><rect x="8.4159%" y="2213" width="3.2460%" height="15" fill="rgb(207,117,47)" fg:x="20796025" fg:w="8021050"/><text x="8.6659%" y="2223.50">&lt;al..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,999,282 samples, 2.02%)</title><rect x="9.6388%" y="2197" width="2.0232%" height="15" fill="rgb(249,43,39)" fg:x="23817793" fg:w="4999282"/><text x="9.8888%" y="2207.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,999,282 samples, 2.02%)</title><rect x="9.6388%" y="2181" width="2.0232%" height="15" fill="rgb(209,38,44)" fg:x="23817793" fg:w="4999282"/><text x="9.8888%" y="2191.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,999,282 samples, 2.02%)</title><rect x="9.6388%" y="2165" width="2.0232%" height="15" fill="rgb(236,212,23)" fg:x="23817793" fg:w="4999282"/><text x="9.8888%" y="2175.50">a..</text></g><g><title>alloc::slice::hack::to_vec (4,999,282 samples, 2.02%)</title><rect x="9.6388%" y="2149" width="2.0232%" height="15" fill="rgb(242,79,21)" fg:x="23817793" fg:w="4999282"/><text x="9.8888%" y="2159.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,999,282 samples, 2.02%)</title><rect x="9.6388%" y="2133" width="2.0232%" height="15" fill="rgb(211,96,35)" fg:x="23817793" fg:w="4999282"/><text x="9.8888%" y="2143.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (4,999,282 samples, 2.02%)</title><rect x="9.6388%" y="2117" width="2.0232%" height="15" fill="rgb(253,215,40)" fg:x="23817793" fg:w="4999282"/><text x="9.8888%" y="2127.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (4,999,282 samples, 2.02%)</title><rect x="9.6388%" y="2101" width="2.0232%" height="15" fill="rgb(211,81,21)" fg:x="23817793" fg:w="4999282"/><text x="9.8888%" y="2111.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (4,999,282 samples, 2.02%)</title><rect x="9.6388%" y="2085" width="2.0232%" height="15" fill="rgb(208,190,38)" fg:x="23817793" fg:w="4999282"/><text x="9.8888%" y="2095.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4,999,282 samples, 2.02%)</title><rect x="9.6388%" y="2069" width="2.0232%" height="15" fill="rgb(235,213,38)" fg:x="23817793" fg:w="4999282"/><text x="9.8888%" y="2079.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="2053" width="1.0251%" height="15" fill="rgb(237,122,38)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="2063.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="2037" width="1.0251%" height="15" fill="rgb(244,218,35)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="2047.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="2021" width="1.0251%" height="15" fill="rgb(240,68,47)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="2031.50"></text></g><g><title>alloc::slice::hack::to_vec (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="2005" width="1.0251%" height="15" fill="rgb(210,16,53)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="2015.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1989" width="1.0251%" height="15" fill="rgb(235,124,12)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1999.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1973" width="1.0251%" height="15" fill="rgb(224,169,11)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1983.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1957" width="1.0251%" height="15" fill="rgb(250,166,2)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1967.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1941" width="1.0251%" height="15" fill="rgb(242,216,29)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1951.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1925" width="1.0251%" height="15" fill="rgb(230,116,27)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1935.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1909" width="1.0251%" height="15" fill="rgb(228,99,48)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1893" width="1.0251%" height="15" fill="rgb(253,11,6)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1903.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1877" width="1.0251%" height="15" fill="rgb(247,143,39)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1887.50"></text></g><g><title>alloc::slice::hack::to_vec (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1861" width="1.0251%" height="15" fill="rgb(236,97,10)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1871.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1845" width="1.0251%" height="15" fill="rgb(233,208,19)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1855.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1829" width="1.0251%" height="15" fill="rgb(216,164,2)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1839.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1813" width="1.0251%" height="15" fill="rgb(220,129,5)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1797" width="1.0251%" height="15" fill="rgb(242,17,10)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1781" width="1.0251%" height="15" fill="rgb(242,107,0)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1791.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1765" width="1.0251%" height="15" fill="rgb(251,28,31)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1749" width="1.0251%" height="15" fill="rgb(233,223,10)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1759.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1733" width="1.0251%" height="15" fill="rgb(215,21,27)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1743.50"></text></g><g><title>alloc::slice::hack::to_vec (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1717" width="1.0251%" height="15" fill="rgb(232,23,21)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1727.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1701" width="1.0251%" height="15" fill="rgb(244,5,23)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1711.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1685" width="1.0251%" height="15" fill="rgb(226,81,46)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1695.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1669" width="1.0251%" height="15" fill="rgb(247,70,30)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1653" width="1.0251%" height="15" fill="rgb(212,68,19)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1663.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1637" width="1.0251%" height="15" fill="rgb(240,187,13)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1647.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1621" width="1.0251%" height="15" fill="rgb(223,113,26)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1605" width="1.0251%" height="15" fill="rgb(206,192,2)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1615.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1589" width="1.0251%" height="15" fill="rgb(241,108,4)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1599.50"></text></g><g><title>alloc::slice::hack::to_vec (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1573" width="1.0251%" height="15" fill="rgb(247,173,49)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1583.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1557" width="1.0251%" height="15" fill="rgb(224,114,35)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1541" width="1.0251%" height="15" fill="rgb(245,159,27)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1525" width="1.0251%" height="15" fill="rgb(245,172,44)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1509" width="1.0251%" height="15" fill="rgb(236,23,11)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1493" width="1.0251%" height="15" fill="rgb(205,117,38)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1477" width="1.0251%" height="15" fill="rgb(237,72,25)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1461" width="1.0251%" height="15" fill="rgb(244,70,9)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1445" width="1.0251%" height="15" fill="rgb(217,125,39)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1455.50"></text></g><g><title>malloc (2,533,078 samples, 1.03%)</title><rect x="10.6368%" y="1429" width="1.0251%" height="15" fill="rgb(235,36,10)" fg:x="26283997" fg:w="2533078"/><text x="10.8868%" y="1439.50"></text></g><g><title>&lt;benchmark::LayoutFrame as core::clone::Clone&gt;::clone (16,637,665 samples, 6.73%)</title><rect x="6.1959%" y="2773" width="6.7331%" height="15" fill="rgb(251,123,47)" fg:x="15310275" fg:w="16637665"/><text x="6.4459%" y="2783.50">&lt;benchmar..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (16,637,665 samples, 6.73%)</title><rect x="6.1959%" y="2757" width="6.7331%" height="15" fill="rgb(221,13,13)" fg:x="15310275" fg:w="16637665"/><text x="6.4459%" y="2767.50">&lt;serde_js..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (16,637,665 samples, 6.73%)</title><rect x="6.1959%" y="2741" width="6.7331%" height="15" fill="rgb(238,131,9)" fg:x="15310275" fg:w="16637665"/><text x="6.4459%" y="2751.50">&lt;serde_js..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (16,637,665 samples, 6.73%)</title><rect x="6.1959%" y="2725" width="6.7331%" height="15" fill="rgb(211,50,8)" fg:x="15310275" fg:w="16637665"/><text x="6.4459%" y="2735.50">&lt;alloc::c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (16,637,665 samples, 6.73%)</title><rect x="6.1959%" y="2709" width="6.7331%" height="15" fill="rgb(245,182,24)" fg:x="15310275" fg:w="16637665"/><text x="6.4459%" y="2719.50">&lt;alloc::c..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (13,542,602 samples, 5.48%)</title><rect x="7.4484%" y="2693" width="5.4805%" height="15" fill="rgb(242,14,37)" fg:x="18405338" fg:w="13542602"/><text x="7.6984%" y="2703.50">&lt;serde_..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (13,542,602 samples, 5.48%)</title><rect x="7.4484%" y="2677" width="5.4805%" height="15" fill="rgb(246,228,12)" fg:x="18405338" fg:w="13542602"/><text x="7.6984%" y="2687.50">&lt;serde_..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (13,542,602 samples, 5.48%)</title><rect x="7.4484%" y="2661" width="5.4805%" height="15" fill="rgb(213,55,15)" fg:x="18405338" fg:w="13542602"/><text x="7.6984%" y="2671.50">&lt;alloc:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (13,542,602 samples, 5.48%)</title><rect x="7.4484%" y="2645" width="5.4805%" height="15" fill="rgb(209,9,3)" fg:x="18405338" fg:w="13542602"/><text x="7.6984%" y="2655.50">&lt;alloc:..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (13,542,602 samples, 5.48%)</title><rect x="7.4484%" y="2629" width="5.4805%" height="15" fill="rgb(230,59,30)" fg:x="18405338" fg:w="13542602"/><text x="7.6984%" y="2639.50">&lt;serde_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,542,602 samples, 5.48%)</title><rect x="7.4484%" y="2613" width="5.4805%" height="15" fill="rgb(209,121,21)" fg:x="18405338" fg:w="13542602"/><text x="7.6984%" y="2623.50">&lt;alloc:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,542,602 samples, 5.48%)</title><rect x="7.4484%" y="2597" width="5.4805%" height="15" fill="rgb(220,109,13)" fg:x="18405338" fg:w="13542602"/><text x="7.6984%" y="2607.50">alloc::..</text></g><g><title>alloc::slice::hack::to_vec (13,542,602 samples, 5.48%)</title><rect x="7.4484%" y="2581" width="5.4805%" height="15" fill="rgb(232,18,1)" fg:x="18405338" fg:w="13542602"/><text x="7.6984%" y="2591.50">alloc::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,542,602 samples, 5.48%)</title><rect x="7.4484%" y="2565" width="5.4805%" height="15" fill="rgb(215,41,42)" fg:x="18405338" fg:w="13542602"/><text x="7.6984%" y="2575.50">&lt;T as a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (13,542,602 samples, 5.48%)</title><rect x="7.4484%" y="2549" width="5.4805%" height="15" fill="rgb(224,123,36)" fg:x="18405338" fg:w="13542602"/><text x="7.6984%" y="2559.50">&lt;serde_..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (11,151,915 samples, 4.51%)</title><rect x="8.4159%" y="2533" width="4.5131%" height="15" fill="rgb(240,125,3)" fg:x="20796025" fg:w="11151915"/><text x="8.6659%" y="2543.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (11,151,915 samples, 4.51%)</title><rect x="8.4159%" y="2517" width="4.5131%" height="15" fill="rgb(205,98,50)" fg:x="20796025" fg:w="11151915"/><text x="8.6659%" y="2527.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (11,151,915 samples, 4.51%)</title><rect x="8.4159%" y="2501" width="4.5131%" height="15" fill="rgb(205,185,37)" fg:x="20796025" fg:w="11151915"/><text x="8.6659%" y="2511.50">&lt;allo..</text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (3,130,865 samples, 1.27%)</title><rect x="11.6619%" y="2485" width="1.2670%" height="15" fill="rgb(238,207,15)" fg:x="28817075" fg:w="3130865"/><text x="11.9119%" y="2495.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push_with_handle (3,130,865 samples, 1.27%)</title><rect x="11.6619%" y="2469" width="1.2670%" height="15" fill="rgb(213,199,42)" fg:x="28817075" fg:w="3130865"/><text x="11.9119%" y="2479.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3,130,865 samples, 1.27%)</title><rect x="11.6619%" y="2453" width="1.2670%" height="15" fill="rgb(235,201,11)" fg:x="28817075" fg:w="3130865"/><text x="11.9119%" y="2463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2773" width="1.1470%" height="15" fill="rgb(207,46,11)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2757" width="1.1470%" height="15" fill="rgb(241,35,35)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2767.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2741" width="1.1470%" height="15" fill="rgb(243,32,47)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2725" width="1.1470%" height="15" fill="rgb(247,202,23)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2709" width="1.1470%" height="15" fill="rgb(219,102,11)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2693" width="1.1470%" height="15" fill="rgb(243,110,44)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2677" width="1.1470%" height="15" fill="rgb(222,74,54)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2687.50"></text></g><g><title>core::mem::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2661" width="1.1470%" height="15" fill="rgb(216,99,12)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2645" width="1.1470%" height="15" fill="rgb(226,22,26)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2655.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2629" width="1.1470%" height="15" fill="rgb(217,163,10)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2613" width="1.1470%" height="15" fill="rgb(213,25,53)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2597" width="1.1470%" height="15" fill="rgb(252,105,26)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2607.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2581" width="1.1470%" height="15" fill="rgb(220,39,43)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2591.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2565" width="1.1470%" height="15" fill="rgb(229,68,48)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2549" width="1.1470%" height="15" fill="rgb(252,8,32)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2533" width="1.1470%" height="15" fill="rgb(223,20,43)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2517" width="1.1470%" height="15" fill="rgb(229,81,49)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2501" width="1.1470%" height="15" fill="rgb(236,28,36)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2511.50"></text></g><g><title>core::mem::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2485" width="1.1470%" height="15" fill="rgb(249,185,26)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2469" width="1.1470%" height="15" fill="rgb(249,174,33)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2453" width="1.1470%" height="15" fill="rgb(233,201,37)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2437" width="1.1470%" height="15" fill="rgb(221,78,26)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2421" width="1.1470%" height="15" fill="rgb(250,127,30)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2431.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2405" width="1.1470%" height="15" fill="rgb(230,49,44)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2415.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2389" width="1.1470%" height="15" fill="rgb(229,67,23)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2373" width="1.1470%" height="15" fill="rgb(249,83,47)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2357" width="1.1470%" height="15" fill="rgb(215,43,3)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2341" width="1.1470%" height="15" fill="rgb(238,154,13)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2325" width="1.1470%" height="15" fill="rgb(219,56,2)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2309" width="1.1470%" height="15" fill="rgb(233,0,4)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2293" width="1.1470%" height="15" fill="rgb(235,30,7)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2277" width="1.1470%" height="15" fill="rgb(250,79,13)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2261" width="1.1470%" height="15" fill="rgb(211,146,34)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2271.50"></text></g><g><title>core::mem::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2245" width="1.1470%" height="15" fill="rgb(228,22,38)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2229" width="1.1470%" height="15" fill="rgb(235,168,5)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2239.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2213" width="1.1470%" height="15" fill="rgb(221,155,16)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2223.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2197" width="1.1470%" height="15" fill="rgb(215,215,53)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2181" width="1.1470%" height="15" fill="rgb(223,4,10)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2191.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2165" width="1.1470%" height="15" fill="rgb(234,103,6)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2175.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2149" width="1.1470%" height="15" fill="rgb(227,97,0)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2133" width="1.1470%" height="15" fill="rgb(234,150,53)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2117" width="1.1470%" height="15" fill="rgb(228,201,54)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2101" width="1.1470%" height="15" fill="rgb(222,22,37)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2085" width="1.1470%" height="15" fill="rgb(237,53,32)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2069" width="1.1470%" height="15" fill="rgb(233,25,53)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2053" width="1.1470%" height="15" fill="rgb(210,40,34)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2037" width="1.1470%" height="15" fill="rgb(241,220,44)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2047.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2021" width="1.1470%" height="15" fill="rgb(235,28,35)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2031.50"></text></g><g><title>core::mem::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="2005" width="1.1470%" height="15" fill="rgb(210,56,17)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="1989" width="1.1470%" height="15" fill="rgb(224,130,29)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="1999.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="1973" width="1.1470%" height="15" fill="rgb(235,212,8)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="1983.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="1957" width="1.1470%" height="15" fill="rgb(223,33,50)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="1941" width="1.1470%" height="15" fill="rgb(219,149,13)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="1951.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="1925" width="1.1470%" height="15" fill="rgb(250,156,29)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="1935.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="1909" width="1.1470%" height="15" fill="rgb(216,193,19)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="1893" width="1.1470%" height="15" fill="rgb(216,135,14)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="1877" width="1.1470%" height="15" fill="rgb(241,47,5)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="1861" width="1.1470%" height="15" fill="rgb(233,42,35)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="1845" width="1.1470%" height="15" fill="rgb(231,13,6)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="1855.50"></text></g><g><title>core::mem::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="1829" width="1.1470%" height="15" fill="rgb(207,181,40)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="1813" width="1.1470%" height="15" fill="rgb(254,173,49)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="1797" width="1.1470%" height="15" fill="rgb(221,1,38)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="1807.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="1781" width="1.1470%" height="15" fill="rgb(206,124,46)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="1791.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="1765" width="1.1470%" height="15" fill="rgb(249,21,11)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="1749" width="1.1470%" height="15" fill="rgb(222,201,40)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="1733" width="1.1470%" height="15" fill="rgb(235,61,29)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="1717" width="1.1470%" height="15" fill="rgb(219,207,3)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="1727.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,834,199 samples, 1.15%)</title><rect x="12.9290%" y="1701" width="1.1470%" height="15" fill="rgb(222,56,46)" fg:x="31947940" fg:w="2834199"/><text x="13.1790%" y="1711.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (2,986,788 samples, 1.21%)</title><rect x="14.0759%" y="2757" width="1.2087%" height="15" fill="rgb(239,76,54)" fg:x="34782139" fg:w="2986788"/><text x="14.3259%" y="2767.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,986,788 samples, 1.21%)</title><rect x="14.0759%" y="2741" width="1.2087%" height="15" fill="rgb(231,124,27)" fg:x="34782139" fg:w="2986788"/><text x="14.3259%" y="2751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2,986,788 samples, 1.21%)</title><rect x="14.0759%" y="2725" width="1.2087%" height="15" fill="rgb(249,195,6)" fg:x="34782139" fg:w="2986788"/><text x="14.3259%" y="2735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,986,788 samples, 1.21%)</title><rect x="14.0759%" y="2709" width="1.2087%" height="15" fill="rgb(237,174,47)" fg:x="34782139" fg:w="2986788"/><text x="14.3259%" y="2719.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,986,788 samples, 1.21%)</title><rect x="14.0759%" y="2693" width="1.2087%" height="15" fill="rgb(206,201,31)" fg:x="34782139" fg:w="2986788"/><text x="14.3259%" y="2703.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (2,986,788 samples, 1.21%)</title><rect x="14.0759%" y="2677" width="1.2087%" height="15" fill="rgb(231,57,52)" fg:x="34782139" fg:w="2986788"/><text x="14.3259%" y="2687.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (2,986,788 samples, 1.21%)</title><rect x="14.0759%" y="2661" width="1.2087%" height="15" fill="rgb(248,177,22)" fg:x="34782139" fg:w="2986788"/><text x="14.3259%" y="2671.50"></text></g><g><title>core::str::pattern::Searcher::next_match (2,986,788 samples, 1.21%)</title><rect x="14.0759%" y="2645" width="1.2087%" height="15" fill="rgb(215,211,37)" fg:x="34782139" fg:w="2986788"/><text x="14.3259%" y="2655.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (2,986,788 samples, 1.21%)</title><rect x="14.0759%" y="2629" width="1.2087%" height="15" fill="rgb(241,128,51)" fg:x="34782139" fg:w="2986788"/><text x="14.3259%" y="2639.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (2,986,788 samples, 1.21%)</title><rect x="14.0759%" y="2613" width="1.2087%" height="15" fill="rgb(227,165,31)" fg:x="34782139" fg:w="2986788"/><text x="14.3259%" y="2623.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2,986,788 samples, 1.21%)</title><rect x="14.0759%" y="2597" width="1.2087%" height="15" fill="rgb(228,167,24)" fg:x="34782139" fg:w="2986788"/><text x="14.3259%" y="2607.50"></text></g><g><title>core::str::validations::next_code_point (2,986,788 samples, 1.21%)</title><rect x="14.0759%" y="2581" width="1.2087%" height="15" fill="rgb(228,143,12)" fg:x="34782139" fg:w="2986788"/><text x="14.3259%" y="2591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,125,617 samples, 1.26%)</title><rect x="15.2847%" y="2741" width="1.2649%" height="15" fill="rgb(249,149,8)" fg:x="37768927" fg:w="3125617"/><text x="15.5347%" y="2751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3,125,617 samples, 1.26%)</title><rect x="15.2847%" y="2725" width="1.2649%" height="15" fill="rgb(243,35,44)" fg:x="37768927" fg:w="3125617"/><text x="15.5347%" y="2735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (3,125,617 samples, 1.26%)</title><rect x="15.2847%" y="2709" width="1.2649%" height="15" fill="rgb(246,89,9)" fg:x="37768927" fg:w="3125617"/><text x="15.5347%" y="2719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,125,617 samples, 1.26%)</title><rect x="15.2847%" y="2693" width="1.2649%" height="15" fill="rgb(233,213,13)" fg:x="37768927" fg:w="3125617"/><text x="15.5347%" y="2703.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,125,617 samples, 1.26%)</title><rect x="15.2847%" y="2677" width="1.2649%" height="15" fill="rgb(233,141,41)" fg:x="37768927" fg:w="3125617"/><text x="15.5347%" y="2687.50"></text></g><g><title>malloc (3,125,617 samples, 1.26%)</title><rect x="15.2847%" y="2661" width="1.2649%" height="15" fill="rgb(239,167,4)" fg:x="37768927" fg:w="3125617"/><text x="15.5347%" y="2671.50"></text></g><g><title>[libc.so.6] (3,125,617 samples, 1.26%)</title><rect x="15.2847%" y="2645" width="1.2649%" height="15" fill="rgb(209,217,16)" fg:x="37768927" fg:w="3125617"/><text x="15.5347%" y="2655.50"></text></g><g><title>[libc.so.6] (3,125,617 samples, 1.26%)</title><rect x="15.2847%" y="2629" width="1.2649%" height="15" fill="rgb(219,88,35)" fg:x="37768927" fg:w="3125617"/><text x="15.5347%" y="2639.50"></text></g><g><title>benchmark::json_to_html_node (2,460,276 samples, 1.00%)</title><rect x="16.5496%" y="2661" width="0.9956%" height="15" fill="rgb(220,193,23)" fg:x="40894544" fg:w="2460276"/><text x="16.7996%" y="2671.50"></text></g><g><title>benchmark::json_to_html_node (2,460,276 samples, 1.00%)</title><rect x="16.5496%" y="2645" width="0.9956%" height="15" fill="rgb(230,90,52)" fg:x="40894544" fg:w="2460276"/><text x="16.7996%" y="2655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,460,276 samples, 1.00%)</title><rect x="16.5496%" y="2629" width="0.9956%" height="15" fill="rgb(252,106,19)" fg:x="40894544" fg:w="2460276"/><text x="16.7996%" y="2639.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,460,276 samples, 1.00%)</title><rect x="16.5496%" y="2613" width="0.9956%" height="15" fill="rgb(206,74,20)" fg:x="40894544" fg:w="2460276"/><text x="16.7996%" y="2623.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2,460,276 samples, 1.00%)</title><rect x="16.5496%" y="2597" width="0.9956%" height="15" fill="rgb(230,138,44)" fg:x="40894544" fg:w="2460276"/><text x="16.7996%" y="2607.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2,460,276 samples, 1.00%)</title><rect x="16.5496%" y="2581" width="0.9956%" height="15" fill="rgb(235,182,43)" fg:x="40894544" fg:w="2460276"/><text x="16.7996%" y="2591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2,460,276 samples, 1.00%)</title><rect x="16.5496%" y="2565" width="0.9956%" height="15" fill="rgb(242,16,51)" fg:x="40894544" fg:w="2460276"/><text x="16.7996%" y="2575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,460,276 samples, 1.00%)</title><rect x="16.5496%" y="2549" width="0.9956%" height="15" fill="rgb(248,9,4)" fg:x="40894544" fg:w="2460276"/><text x="16.7996%" y="2559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,460,276 samples, 1.00%)</title><rect x="16.5496%" y="2533" width="0.9956%" height="15" fill="rgb(210,31,22)" fg:x="40894544" fg:w="2460276"/><text x="16.7996%" y="2543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,460,276 samples, 1.00%)</title><rect x="16.5496%" y="2517" width="0.9956%" height="15" fill="rgb(239,54,39)" fg:x="40894544" fg:w="2460276"/><text x="16.7996%" y="2527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,460,276 samples, 1.00%)</title><rect x="16.5496%" y="2501" width="0.9956%" height="15" fill="rgb(230,99,41)" fg:x="40894544" fg:w="2460276"/><text x="16.7996%" y="2511.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,460,276 samples, 1.00%)</title><rect x="16.5496%" y="2485" width="0.9956%" height="15" fill="rgb(253,106,12)" fg:x="40894544" fg:w="2460276"/><text x="16.7996%" y="2495.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,460,276 samples, 1.00%)</title><rect x="16.5496%" y="2469" width="0.9956%" height="15" fill="rgb(213,46,41)" fg:x="40894544" fg:w="2460276"/><text x="16.7996%" y="2479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2,460,276 samples, 1.00%)</title><rect x="16.5496%" y="2453" width="0.9956%" height="15" fill="rgb(215,133,35)" fg:x="40894544" fg:w="2460276"/><text x="16.7996%" y="2463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (2,460,276 samples, 1.00%)</title><rect x="16.5496%" y="2437" width="0.9956%" height="15" fill="rgb(213,28,5)" fg:x="40894544" fg:w="2460276"/><text x="16.7996%" y="2447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,460,276 samples, 1.00%)</title><rect x="16.5496%" y="2421" width="0.9956%" height="15" fill="rgb(215,77,49)" fg:x="40894544" fg:w="2460276"/><text x="16.7996%" y="2431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (2,460,276 samples, 1.00%)</title><rect x="16.5496%" y="2405" width="0.9956%" height="15" fill="rgb(248,100,22)" fg:x="40894544" fg:w="2460276"/><text x="16.7996%" y="2415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (2,460,276 samples, 1.00%)</title><rect x="16.5496%" y="2389" width="0.9956%" height="15" fill="rgb(208,67,9)" fg:x="40894544" fg:w="2460276"/><text x="16.7996%" y="2399.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (2,460,276 samples, 1.00%)</title><rect x="16.5496%" y="2373" width="0.9956%" height="15" fill="rgb(219,133,21)" fg:x="40894544" fg:w="2460276"/><text x="16.7996%" y="2383.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (2,460,276 samples, 1.00%)</title><rect x="16.5496%" y="2357" width="0.9956%" height="15" fill="rgb(246,46,29)" fg:x="40894544" fg:w="2460276"/><text x="16.7996%" y="2367.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (2,460,276 samples, 1.00%)</title><rect x="16.5496%" y="2341" width="0.9956%" height="15" fill="rgb(246,185,52)" fg:x="40894544" fg:w="2460276"/><text x="16.7996%" y="2351.50"></text></g><g><title>benchmark::apply_frame_modifications (9,411,593 samples, 3.81%)</title><rect x="14.0759%" y="2773" width="3.8088%" height="15" fill="rgb(252,136,11)" fg:x="34782139" fg:w="9411593"/><text x="14.3259%" y="2783.50">benc..</text></g><g><title>benchmark::json_to_html_node (6,424,805 samples, 2.60%)</title><rect x="15.2847%" y="2757" width="2.6000%" height="15" fill="rgb(219,138,53)" fg:x="37768927" fg:w="6424805"/><text x="15.5347%" y="2767.50">be..</text></g><g><title>benchmark::json_to_html_node (3,299,188 samples, 1.34%)</title><rect x="16.5496%" y="2741" width="1.3351%" height="15" fill="rgb(211,51,23)" fg:x="40894544" fg:w="3299188"/><text x="16.7996%" y="2751.50"></text></g><g><title>benchmark::json_to_html_node (3,299,188 samples, 1.34%)</title><rect x="16.5496%" y="2725" width="1.3351%" height="15" fill="rgb(247,221,28)" fg:x="40894544" fg:w="3299188"/><text x="16.7996%" y="2735.50"></text></g><g><title>benchmark::json_to_html_node (3,299,188 samples, 1.34%)</title><rect x="16.5496%" y="2709" width="1.3351%" height="15" fill="rgb(251,222,45)" fg:x="40894544" fg:w="3299188"/><text x="16.7996%" y="2719.50"></text></g><g><title>benchmark::json_to_html_node (3,299,188 samples, 1.34%)</title><rect x="16.5496%" y="2693" width="1.3351%" height="15" fill="rgb(217,162,53)" fg:x="40894544" fg:w="3299188"/><text x="16.7996%" y="2703.50"></text></g><g><title>benchmark::json_to_html_node (3,299,188 samples, 1.34%)</title><rect x="16.5496%" y="2677" width="1.3351%" height="15" fill="rgb(229,93,14)" fg:x="40894544" fg:w="3299188"/><text x="16.7996%" y="2687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (838,912 samples, 0.34%)</title><rect x="17.5452%" y="2661" width="0.3395%" height="15" fill="rgb(209,67,49)" fg:x="43354820" fg:w="838912"/><text x="17.7952%" y="2671.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (838,912 samples, 0.34%)</title><rect x="17.5452%" y="2645" width="0.3395%" height="15" fill="rgb(213,87,29)" fg:x="43354820" fg:w="838912"/><text x="17.7952%" y="2655.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (838,912 samples, 0.34%)</title><rect x="17.5452%" y="2629" width="0.3395%" height="15" fill="rgb(205,151,52)" fg:x="43354820" fg:w="838912"/><text x="17.7952%" y="2639.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (838,912 samples, 0.34%)</title><rect x="17.5452%" y="2613" width="0.3395%" height="15" fill="rgb(253,215,39)" fg:x="43354820" fg:w="838912"/><text x="17.7952%" y="2623.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (838,912 samples, 0.34%)</title><rect x="17.5452%" y="2597" width="0.3395%" height="15" fill="rgb(221,220,41)" fg:x="43354820" fg:w="838912"/><text x="17.7952%" y="2607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (838,912 samples, 0.34%)</title><rect x="17.5452%" y="2581" width="0.3395%" height="15" fill="rgb(218,133,21)" fg:x="43354820" fg:w="838912"/><text x="17.7952%" y="2591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (838,912 samples, 0.34%)</title><rect x="17.5452%" y="2565" width="0.3395%" height="15" fill="rgb(221,193,43)" fg:x="43354820" fg:w="838912"/><text x="17.7952%" y="2575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (838,912 samples, 0.34%)</title><rect x="17.5452%" y="2549" width="0.3395%" height="15" fill="rgb(240,128,52)" fg:x="43354820" fg:w="838912"/><text x="17.7952%" y="2559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (838,912 samples, 0.34%)</title><rect x="17.5452%" y="2533" width="0.3395%" height="15" fill="rgb(253,114,12)" fg:x="43354820" fg:w="838912"/><text x="17.7952%" y="2543.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (838,912 samples, 0.34%)</title><rect x="17.5452%" y="2517" width="0.3395%" height="15" fill="rgb(215,223,47)" fg:x="43354820" fg:w="838912"/><text x="17.7952%" y="2527.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (838,912 samples, 0.34%)</title><rect x="17.5452%" y="2501" width="0.3395%" height="15" fill="rgb(248,225,23)" fg:x="43354820" fg:w="838912"/><text x="17.7952%" y="2511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (838,912 samples, 0.34%)</title><rect x="17.5452%" y="2485" width="0.3395%" height="15" fill="rgb(250,108,0)" fg:x="43354820" fg:w="838912"/><text x="17.7952%" y="2495.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (838,912 samples, 0.34%)</title><rect x="17.5452%" y="2469" width="0.3395%" height="15" fill="rgb(228,208,7)" fg:x="43354820" fg:w="838912"/><text x="17.7952%" y="2479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (838,912 samples, 0.34%)</title><rect x="17.5452%" y="2453" width="0.3395%" height="15" fill="rgb(244,45,10)" fg:x="43354820" fg:w="838912"/><text x="17.7952%" y="2463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (838,912 samples, 0.34%)</title><rect x="17.5452%" y="2437" width="0.3395%" height="15" fill="rgb(207,125,25)" fg:x="43354820" fg:w="838912"/><text x="17.7952%" y="2447.50"></text></g><g><title>hashbrown::raw::RawTableInner::record_item_insert_at (838,912 samples, 0.34%)</title><rect x="17.5452%" y="2421" width="0.3395%" height="15" fill="rgb(210,195,18)" fg:x="43354820" fg:w="838912"/><text x="17.7952%" y="2431.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,136,671 samples, 1.27%)</title><rect x="17.8847%" y="2437" width="1.2694%" height="15" fill="rgb(249,80,12)" fg:x="44193732" fg:w="3136671"/><text x="18.1347%" y="2447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,511,485 samples, 1.02%)</title><rect x="19.1541%" y="2421" width="1.0164%" height="15" fill="rgb(221,65,9)" fg:x="47330403" fg:w="2511485"/><text x="19.4041%" y="2431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,103,860 samples, 1.26%)</title><rect x="20.1704%" y="2341" width="1.2561%" height="15" fill="rgb(235,49,36)" fg:x="49841888" fg:w="3103860"/><text x="20.4204%" y="2351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,103,860 samples, 1.26%)</title><rect x="20.1704%" y="2325" width="1.2561%" height="15" fill="rgb(225,32,20)" fg:x="49841888" fg:w="3103860"/><text x="20.4204%" y="2335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,103,860 samples, 1.26%)</title><rect x="20.1704%" y="2309" width="1.2561%" height="15" fill="rgb(215,141,46)" fg:x="49841888" fg:w="3103860"/><text x="20.4204%" y="2319.50"></text></g><g><title>alloc::slice::hack::to_vec (3,103,860 samples, 1.26%)</title><rect x="20.1704%" y="2293" width="1.2561%" height="15" fill="rgb(250,160,47)" fg:x="49841888" fg:w="3103860"/><text x="20.4204%" y="2303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,103,860 samples, 1.26%)</title><rect x="20.1704%" y="2277" width="1.2561%" height="15" fill="rgb(216,222,40)" fg:x="49841888" fg:w="3103860"/><text x="20.4204%" y="2287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,103,860 samples, 1.26%)</title><rect x="20.1704%" y="2261" width="1.2561%" height="15" fill="rgb(234,217,39)" fg:x="49841888" fg:w="3103860"/><text x="20.4204%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,103,860 samples, 1.26%)</title><rect x="20.1704%" y="2245" width="1.2561%" height="15" fill="rgb(207,178,40)" fg:x="49841888" fg:w="3103860"/><text x="20.4204%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,103,860 samples, 1.26%)</title><rect x="20.1704%" y="2229" width="1.2561%" height="15" fill="rgb(221,136,13)" fg:x="49841888" fg:w="3103860"/><text x="20.4204%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,103,860 samples, 1.26%)</title><rect x="20.1704%" y="2213" width="1.2561%" height="15" fill="rgb(249,199,10)" fg:x="49841888" fg:w="3103860"/><text x="20.4204%" y="2223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,103,860 samples, 1.26%)</title><rect x="20.1704%" y="2197" width="1.2561%" height="15" fill="rgb(249,222,13)" fg:x="49841888" fg:w="3103860"/><text x="20.4204%" y="2207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,103,860 samples, 1.26%)</title><rect x="20.1704%" y="2181" width="1.2561%" height="15" fill="rgb(244,185,38)" fg:x="49841888" fg:w="3103860"/><text x="20.4204%" y="2191.50"></text></g><g><title>alloc::alloc::alloc (3,103,860 samples, 1.26%)</title><rect x="20.1704%" y="2165" width="1.2561%" height="15" fill="rgb(236,202,9)" fg:x="49841888" fg:w="3103860"/><text x="20.4204%" y="2175.50"></text></g><g><title>malloc (3,103,860 samples, 1.26%)</title><rect x="20.1704%" y="2149" width="1.2561%" height="15" fill="rgb(250,229,37)" fg:x="49841888" fg:w="3103860"/><text x="20.4204%" y="2159.50"></text></g><g><title>[libc.so.6] (3,103,860 samples, 1.26%)</title><rect x="20.1704%" y="2133" width="1.2561%" height="15" fill="rgb(206,174,23)" fg:x="49841888" fg:w="3103860"/><text x="20.4204%" y="2143.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,124,826 samples, 2.07%)</title><rect x="21.4265%" y="2261" width="2.0740%" height="15" fill="rgb(211,33,43)" fg:x="52945748" fg:w="5124826"/><text x="21.6765%" y="2271.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,124,826 samples, 2.07%)</title><rect x="21.4265%" y="2245" width="2.0740%" height="15" fill="rgb(245,58,50)" fg:x="52945748" fg:w="5124826"/><text x="21.6765%" y="2255.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,124,826 samples, 2.07%)</title><rect x="21.4265%" y="2229" width="2.0740%" height="15" fill="rgb(244,68,36)" fg:x="52945748" fg:w="5124826"/><text x="21.6765%" y="2239.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,124,826 samples, 2.07%)</title><rect x="21.4265%" y="2213" width="2.0740%" height="15" fill="rgb(232,229,15)" fg:x="52945748" fg:w="5124826"/><text x="21.6765%" y="2223.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,124,826 samples, 2.07%)</title><rect x="21.4265%" y="2197" width="2.0740%" height="15" fill="rgb(254,30,23)" fg:x="52945748" fg:w="5124826"/><text x="21.6765%" y="2207.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,124,826 samples, 2.07%)</title><rect x="21.4265%" y="2181" width="2.0740%" height="15" fill="rgb(235,160,14)" fg:x="52945748" fg:w="5124826"/><text x="21.6765%" y="2191.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,124,826 samples, 2.07%)</title><rect x="21.4265%" y="2165" width="2.0740%" height="15" fill="rgb(212,155,44)" fg:x="52945748" fg:w="5124826"/><text x="21.6765%" y="2175.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,124,826 samples, 2.07%)</title><rect x="21.4265%" y="2149" width="2.0740%" height="15" fill="rgb(226,2,50)" fg:x="52945748" fg:w="5124826"/><text x="21.6765%" y="2159.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,124,826 samples, 2.07%)</title><rect x="21.4265%" y="2133" width="2.0740%" height="15" fill="rgb(234,177,6)" fg:x="52945748" fg:w="5124826"/><text x="21.6765%" y="2143.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,124,826 samples, 2.07%)</title><rect x="21.4265%" y="2117" width="2.0740%" height="15" fill="rgb(217,24,9)" fg:x="52945748" fg:w="5124826"/><text x="21.6765%" y="2127.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (5,124,826 samples, 2.07%)</title><rect x="21.4265%" y="2101" width="2.0740%" height="15" fill="rgb(220,13,46)" fg:x="52945748" fg:w="5124826"/><text x="21.6765%" y="2111.50">a..</text></g><g><title>alloc::alloc::alloc (5,124,826 samples, 2.07%)</title><rect x="21.4265%" y="2085" width="2.0740%" height="15" fill="rgb(239,221,27)" fg:x="52945748" fg:w="5124826"/><text x="21.6765%" y="2095.50">a..</text></g><g><title>malloc (5,124,826 samples, 2.07%)</title><rect x="21.4265%" y="2069" width="2.0740%" height="15" fill="rgb(222,198,25)" fg:x="52945748" fg:w="5124826"/><text x="21.6765%" y="2079.50">m..</text></g><g><title>[libc.so.6] (5,124,826 samples, 2.07%)</title><rect x="21.4265%" y="2053" width="2.0740%" height="15" fill="rgb(211,99,13)" fg:x="52945748" fg:w="5124826"/><text x="21.6765%" y="2063.50">[..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,097,805 samples, 1.25%)</title><rect x="23.5005%" y="2021" width="1.2536%" height="15" fill="rgb(232,111,31)" fg:x="58070574" fg:w="3097805"/><text x="23.7505%" y="2031.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,120,184 samples, 1.26%)</title><rect x="24.7541%" y="1301" width="1.2627%" height="15" fill="rgb(245,82,37)" fg:x="61168379" fg:w="3120184"/><text x="25.0041%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,220,693 samples, 2.52%)</title><rect x="24.7541%" y="1381" width="2.5174%" height="15" fill="rgb(227,149,46)" fg:x="61168379" fg:w="6220693"/><text x="25.0041%" y="1391.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,220,693 samples, 2.52%)</title><rect x="24.7541%" y="1365" width="2.5174%" height="15" fill="rgb(218,36,50)" fg:x="61168379" fg:w="6220693"/><text x="25.0041%" y="1375.50">al..</text></g><g><title>alloc::slice::hack::to_vec (6,220,693 samples, 2.52%)</title><rect x="24.7541%" y="1349" width="2.5174%" height="15" fill="rgb(226,80,48)" fg:x="61168379" fg:w="6220693"/><text x="25.0041%" y="1359.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,220,693 samples, 2.52%)</title><rect x="24.7541%" y="1333" width="2.5174%" height="15" fill="rgb(238,224,15)" fg:x="61168379" fg:w="6220693"/><text x="25.0041%" y="1343.50">&lt;T..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (6,220,693 samples, 2.52%)</title><rect x="24.7541%" y="1317" width="2.5174%" height="15" fill="rgb(241,136,10)" fg:x="61168379" fg:w="6220693"/><text x="25.0041%" y="1327.50">&lt;c..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,100,509 samples, 1.25%)</title><rect x="26.0168%" y="1301" width="1.2547%" height="15" fill="rgb(208,32,45)" fg:x="64288563" fg:w="3100509"/><text x="26.2668%" y="1311.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,100,509 samples, 1.25%)</title><rect x="26.0168%" y="1285" width="1.2547%" height="15" fill="rgb(207,135,9)" fg:x="64288563" fg:w="3100509"/><text x="26.2668%" y="1295.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,100,509 samples, 1.25%)</title><rect x="26.0168%" y="1269" width="1.2547%" height="15" fill="rgb(206,86,44)" fg:x="64288563" fg:w="3100509"/><text x="26.2668%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,318,315 samples, 3.77%)</title><rect x="24.7541%" y="1541" width="3.7710%" height="15" fill="rgb(245,177,15)" fg:x="61168379" fg:w="9318315"/><text x="25.0041%" y="1551.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,318,315 samples, 3.77%)</title><rect x="24.7541%" y="1525" width="3.7710%" height="15" fill="rgb(206,64,50)" fg:x="61168379" fg:w="9318315"/><text x="25.0041%" y="1535.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (9,318,315 samples, 3.77%)</title><rect x="24.7541%" y="1509" width="3.7710%" height="15" fill="rgb(234,36,40)" fg:x="61168379" fg:w="9318315"/><text x="25.0041%" y="1519.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,318,315 samples, 3.77%)</title><rect x="24.7541%" y="1493" width="3.7710%" height="15" fill="rgb(213,64,8)" fg:x="61168379" fg:w="9318315"/><text x="25.0041%" y="1503.50">&lt;T a..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (9,318,315 samples, 3.77%)</title><rect x="24.7541%" y="1477" width="3.7710%" height="15" fill="rgb(210,75,36)" fg:x="61168379" fg:w="9318315"/><text x="25.0041%" y="1487.50">&lt;css..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,318,315 samples, 3.77%)</title><rect x="24.7541%" y="1461" width="3.7710%" height="15" fill="rgb(229,88,21)" fg:x="61168379" fg:w="9318315"/><text x="25.0041%" y="1471.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,318,315 samples, 3.77%)</title><rect x="24.7541%" y="1445" width="3.7710%" height="15" fill="rgb(252,204,47)" fg:x="61168379" fg:w="9318315"/><text x="25.0041%" y="1455.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (9,318,315 samples, 3.77%)</title><rect x="24.7541%" y="1429" width="3.7710%" height="15" fill="rgb(208,77,27)" fg:x="61168379" fg:w="9318315"/><text x="25.0041%" y="1439.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,318,315 samples, 3.77%)</title><rect x="24.7541%" y="1413" width="3.7710%" height="15" fill="rgb(221,76,26)" fg:x="61168379" fg:w="9318315"/><text x="25.0041%" y="1423.50">&lt;T a..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (9,318,315 samples, 3.77%)</title><rect x="24.7541%" y="1397" width="3.7710%" height="15" fill="rgb(225,139,18)" fg:x="61168379" fg:w="9318315"/><text x="25.0041%" y="1407.50">&lt;css..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,097,622 samples, 1.25%)</title><rect x="27.2716%" y="1381" width="1.2536%" height="15" fill="rgb(230,137,11)" fg:x="67389072" fg:w="3097622"/><text x="27.5216%" y="1391.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,097,622 samples, 1.25%)</title><rect x="27.2716%" y="1365" width="1.2536%" height="15" fill="rgb(212,28,1)" fg:x="67389072" fg:w="3097622"/><text x="27.5216%" y="1375.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,097,622 samples, 1.25%)</title><rect x="27.2716%" y="1349" width="1.2536%" height="15" fill="rgb(248,164,17)" fg:x="67389072" fg:w="3097622"/><text x="27.5216%" y="1359.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,097,622 samples, 1.25%)</title><rect x="27.2716%" y="1333" width="1.2536%" height="15" fill="rgb(222,171,42)" fg:x="67389072" fg:w="3097622"/><text x="27.5216%" y="1343.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,097,622 samples, 1.25%)</title><rect x="27.2716%" y="1317" width="1.2536%" height="15" fill="rgb(243,84,45)" fg:x="67389072" fg:w="3097622"/><text x="27.5216%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,097,622 samples, 1.25%)</title><rect x="27.2716%" y="1301" width="1.2536%" height="15" fill="rgb(252,49,23)" fg:x="67389072" fg:w="3097622"/><text x="27.5216%" y="1311.50"></text></g><g><title>core::clone::Clone::clone (3,097,622 samples, 1.25%)</title><rect x="27.2716%" y="1285" width="1.2536%" height="15" fill="rgb(215,19,7)" fg:x="67389072" fg:w="3097622"/><text x="27.5216%" y="1295.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,097,622 samples, 1.25%)</title><rect x="27.2716%" y="1269" width="1.2536%" height="15" fill="rgb(238,81,41)" fg:x="67389072" fg:w="3097622"/><text x="27.5216%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,097,622 samples, 1.25%)</title><rect x="27.2716%" y="1253" width="1.2536%" height="15" fill="rgb(210,199,37)" fg:x="67389072" fg:w="3097622"/><text x="27.5216%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,097,622 samples, 1.25%)</title><rect x="27.2716%" y="1237" width="1.2536%" height="15" fill="rgb(244,192,49)" fg:x="67389072" fg:w="3097622"/><text x="27.5216%" y="1247.50"></text></g><g><title>alloc::slice::hack::to_vec (3,097,622 samples, 1.25%)</title><rect x="27.2716%" y="1221" width="1.2536%" height="15" fill="rgb(226,211,11)" fg:x="67389072" fg:w="3097622"/><text x="27.5216%" y="1231.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,097,622 samples, 1.25%)</title><rect x="27.2716%" y="1205" width="1.2536%" height="15" fill="rgb(236,162,54)" fg:x="67389072" fg:w="3097622"/><text x="27.5216%" y="1215.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,097,622 samples, 1.25%)</title><rect x="27.2716%" y="1189" width="1.2536%" height="15" fill="rgb(220,229,9)" fg:x="67389072" fg:w="3097622"/><text x="27.5216%" y="1199.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,097,622 samples, 1.25%)</title><rect x="27.2716%" y="1173" width="1.2536%" height="15" fill="rgb(250,87,22)" fg:x="67389072" fg:w="3097622"/><text x="27.5216%" y="1183.50"></text></g><g><title>[libc.so.6] (3,097,622 samples, 1.25%)</title><rect x="27.2716%" y="1157" width="1.2536%" height="15" fill="rgb(239,43,17)" fg:x="67389072" fg:w="3097622"/><text x="27.5216%" y="1167.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,152,487 samples, 1.28%)</title><rect x="28.5252%" y="1541" width="1.2758%" height="15" fill="rgb(231,177,25)" fg:x="70486694" fg:w="3152487"/><text x="28.7752%" y="1551.50"></text></g><g><title>[unknown] (3,152,487 samples, 1.28%)</title><rect x="28.5252%" y="1525" width="1.2758%" height="15" fill="rgb(219,179,1)" fg:x="70486694" fg:w="3152487"/><text x="28.7752%" y="1535.50"></text></g><g><title>[libc.so.6] (3,152,487 samples, 1.28%)</title><rect x="28.5252%" y="1509" width="1.2758%" height="15" fill="rgb(238,219,53)" fg:x="70486694" fg:w="3152487"/><text x="28.7752%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15,493,184 samples, 6.27%)</title><rect x="24.7541%" y="1701" width="6.2699%" height="15" fill="rgb(232,167,36)" fg:x="61168379" fg:w="15493184"/><text x="25.0041%" y="1711.50">&lt;alloc::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15,493,184 samples, 6.27%)</title><rect x="24.7541%" y="1685" width="6.2699%" height="15" fill="rgb(244,19,51)" fg:x="61168379" fg:w="15493184"/><text x="25.0041%" y="1695.50">alloc::s..</text></g><g><title>alloc::slice::hack::to_vec (15,493,184 samples, 6.27%)</title><rect x="24.7541%" y="1669" width="6.2699%" height="15" fill="rgb(224,6,22)" fg:x="61168379" fg:w="15493184"/><text x="25.0041%" y="1679.50">alloc::s..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15,493,184 samples, 6.27%)</title><rect x="24.7541%" y="1653" width="6.2699%" height="15" fill="rgb(224,145,5)" fg:x="61168379" fg:w="15493184"/><text x="25.0041%" y="1663.50">&lt;T as al..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (15,493,184 samples, 6.27%)</title><rect x="24.7541%" y="1637" width="6.2699%" height="15" fill="rgb(234,130,49)" fg:x="61168379" fg:w="15493184"/><text x="25.0041%" y="1647.50">&lt;css_bit..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15,493,184 samples, 6.27%)</title><rect x="24.7541%" y="1621" width="6.2699%" height="15" fill="rgb(254,6,2)" fg:x="61168379" fg:w="15493184"/><text x="25.0041%" y="1631.50">&lt;alloc::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15,493,184 samples, 6.27%)</title><rect x="24.7541%" y="1605" width="6.2699%" height="15" fill="rgb(208,96,46)" fg:x="61168379" fg:w="15493184"/><text x="25.0041%" y="1615.50">alloc::s..</text></g><g><title>alloc::slice::hack::to_vec (15,493,184 samples, 6.27%)</title><rect x="24.7541%" y="1589" width="6.2699%" height="15" fill="rgb(239,3,39)" fg:x="61168379" fg:w="15493184"/><text x="25.0041%" y="1599.50">alloc::s..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15,493,184 samples, 6.27%)</title><rect x="24.7541%" y="1573" width="6.2699%" height="15" fill="rgb(233,210,1)" fg:x="61168379" fg:w="15493184"/><text x="25.0041%" y="1583.50">&lt;T as al..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (15,493,184 samples, 6.27%)</title><rect x="24.7541%" y="1557" width="6.2699%" height="15" fill="rgb(244,137,37)" fg:x="61168379" fg:w="15493184"/><text x="25.0041%" y="1567.50">&lt;css_bit..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,022,382 samples, 1.22%)</title><rect x="29.8009%" y="1541" width="1.2231%" height="15" fill="rgb(240,136,2)" fg:x="73639181" fg:w="3022382"/><text x="30.0509%" y="1551.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,022,382 samples, 1.22%)</title><rect x="29.8009%" y="1525" width="1.2231%" height="15" fill="rgb(239,18,37)" fg:x="73639181" fg:w="3022382"/><text x="30.0509%" y="1535.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,022,382 samples, 1.22%)</title><rect x="29.8009%" y="1509" width="1.2231%" height="15" fill="rgb(218,185,22)" fg:x="73639181" fg:w="3022382"/><text x="30.0509%" y="1519.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,022,382 samples, 1.22%)</title><rect x="29.8009%" y="1493" width="1.2231%" height="15" fill="rgb(225,218,4)" fg:x="73639181" fg:w="3022382"/><text x="30.0509%" y="1503.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,022,382 samples, 1.22%)</title><rect x="29.8009%" y="1477" width="1.2231%" height="15" fill="rgb(230,182,32)" fg:x="73639181" fg:w="3022382"/><text x="30.0509%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,022,382 samples, 1.22%)</title><rect x="29.8009%" y="1461" width="1.2231%" height="15" fill="rgb(242,56,43)" fg:x="73639181" fg:w="3022382"/><text x="30.0509%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18,252,777 samples, 7.39%)</title><rect x="24.7541%" y="1861" width="7.3867%" height="15" fill="rgb(233,99,24)" fg:x="61168379" fg:w="18252777"/><text x="25.0041%" y="1871.50">&lt;alloc::ve..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18,252,777 samples, 7.39%)</title><rect x="24.7541%" y="1845" width="7.3867%" height="15" fill="rgb(234,209,42)" fg:x="61168379" fg:w="18252777"/><text x="25.0041%" y="1855.50">alloc::sli..</text></g><g><title>alloc::slice::hack::to_vec (18,252,777 samples, 7.39%)</title><rect x="24.7541%" y="1829" width="7.3867%" height="15" fill="rgb(227,7,12)" fg:x="61168379" fg:w="18252777"/><text x="25.0041%" y="1839.50">alloc::sli..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18,252,777 samples, 7.39%)</title><rect x="24.7541%" y="1813" width="7.3867%" height="15" fill="rgb(245,203,43)" fg:x="61168379" fg:w="18252777"/><text x="25.0041%" y="1823.50">&lt;T as allo..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (18,252,777 samples, 7.39%)</title><rect x="24.7541%" y="1797" width="7.3867%" height="15" fill="rgb(238,205,33)" fg:x="61168379" fg:w="18252777"/><text x="25.0041%" y="1807.50">&lt;css_bitve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18,252,777 samples, 7.39%)</title><rect x="24.7541%" y="1781" width="7.3867%" height="15" fill="rgb(231,56,7)" fg:x="61168379" fg:w="18252777"/><text x="25.0041%" y="1791.50">&lt;alloc::ve..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18,252,777 samples, 7.39%)</title><rect x="24.7541%" y="1765" width="7.3867%" height="15" fill="rgb(244,186,29)" fg:x="61168379" fg:w="18252777"/><text x="25.0041%" y="1775.50">alloc::sli..</text></g><g><title>alloc::slice::hack::to_vec (18,252,777 samples, 7.39%)</title><rect x="24.7541%" y="1749" width="7.3867%" height="15" fill="rgb(234,111,31)" fg:x="61168379" fg:w="18252777"/><text x="25.0041%" y="1759.50">alloc::sli..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18,252,777 samples, 7.39%)</title><rect x="24.7541%" y="1733" width="7.3867%" height="15" fill="rgb(241,149,10)" fg:x="61168379" fg:w="18252777"/><text x="25.0041%" y="1743.50">&lt;T as allo..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (18,252,777 samples, 7.39%)</title><rect x="24.7541%" y="1717" width="7.3867%" height="15" fill="rgb(249,206,44)" fg:x="61168379" fg:w="18252777"/><text x="25.0041%" y="1727.50">&lt;css_bitve..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,759,593 samples, 1.12%)</title><rect x="31.0241%" y="1701" width="1.1168%" height="15" fill="rgb(251,153,30)" fg:x="76661563" fg:w="2759593"/><text x="31.2741%" y="1711.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,759,593 samples, 1.12%)</title><rect x="31.0241%" y="1685" width="1.1168%" height="15" fill="rgb(239,152,38)" fg:x="76661563" fg:w="2759593"/><text x="31.2741%" y="1695.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,759,593 samples, 1.12%)</title><rect x="31.0241%" y="1669" width="1.1168%" height="15" fill="rgb(249,139,47)" fg:x="76661563" fg:w="2759593"/><text x="31.2741%" y="1679.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,759,593 samples, 1.12%)</title><rect x="31.0241%" y="1653" width="1.1168%" height="15" fill="rgb(244,64,35)" fg:x="76661563" fg:w="2759593"/><text x="31.2741%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2,759,593 samples, 1.12%)</title><rect x="31.0241%" y="1637" width="1.1168%" height="15" fill="rgb(216,46,15)" fg:x="76661563" fg:w="2759593"/><text x="31.2741%" y="1647.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2,759,593 samples, 1.12%)</title><rect x="31.0241%" y="1621" width="1.1168%" height="15" fill="rgb(250,74,19)" fg:x="76661563" fg:w="2759593"/><text x="31.2741%" y="1631.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2,759,593 samples, 1.12%)</title><rect x="31.0241%" y="1605" width="1.1168%" height="15" fill="rgb(249,42,33)" fg:x="76661563" fg:w="2759593"/><text x="31.2741%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,759,593 samples, 1.12%)</title><rect x="31.0241%" y="1589" width="1.1168%" height="15" fill="rgb(242,149,17)" fg:x="76661563" fg:w="2759593"/><text x="31.2741%" y="1599.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,759,593 samples, 1.12%)</title><rect x="31.0241%" y="1573" width="1.1168%" height="15" fill="rgb(244,29,21)" fg:x="76661563" fg:w="2759593"/><text x="31.2741%" y="1583.50"></text></g><g><title>alloc::alloc::alloc (2,759,593 samples, 1.12%)</title><rect x="31.0241%" y="1557" width="1.1168%" height="15" fill="rgb(220,130,37)" fg:x="76661563" fg:w="2759593"/><text x="31.2741%" y="1567.50"></text></g><g><title>malloc (2,759,593 samples, 1.12%)</title><rect x="31.0241%" y="1541" width="1.1168%" height="15" fill="rgb(211,67,2)" fg:x="76661563" fg:w="2759593"/><text x="31.2741%" y="1551.50"></text></g><g><title>[libc.so.6] (2,759,593 samples, 1.12%)</title><rect x="31.0241%" y="1525" width="1.1168%" height="15" fill="rgb(235,68,52)" fg:x="76661563" fg:w="2759593"/><text x="31.2741%" y="1535.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,096,191 samples, 1.25%)</title><rect x="32.1408%" y="1861" width="1.2530%" height="15" fill="rgb(246,142,3)" fg:x="79421156" fg:w="3096191"/><text x="32.3908%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,096,191 samples, 1.25%)</title><rect x="32.1408%" y="1845" width="1.2530%" height="15" fill="rgb(241,25,7)" fg:x="79421156" fg:w="3096191"/><text x="32.3908%" y="1855.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,096,191 samples, 1.25%)</title><rect x="32.1408%" y="1829" width="1.2530%" height="15" fill="rgb(242,119,39)" fg:x="79421156" fg:w="3096191"/><text x="32.3908%" y="1839.50"></text></g><g><title>alloc::slice::hack::to_vec (3,096,191 samples, 1.25%)</title><rect x="32.1408%" y="1813" width="1.2530%" height="15" fill="rgb(241,98,45)" fg:x="79421156" fg:w="3096191"/><text x="32.3908%" y="1823.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,096,191 samples, 1.25%)</title><rect x="32.1408%" y="1797" width="1.2530%" height="15" fill="rgb(254,28,30)" fg:x="79421156" fg:w="3096191"/><text x="32.3908%" y="1807.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,096,191 samples, 1.25%)</title><rect x="32.1408%" y="1781" width="1.2530%" height="15" fill="rgb(241,142,54)" fg:x="79421156" fg:w="3096191"/><text x="32.3908%" y="1791.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,096,191 samples, 1.25%)</title><rect x="32.1408%" y="1765" width="1.2530%" height="15" fill="rgb(222,85,15)" fg:x="79421156" fg:w="3096191"/><text x="32.3908%" y="1775.50"></text></g><g><title>[libc.so.6] (3,096,191 samples, 1.25%)</title><rect x="32.1408%" y="1749" width="1.2530%" height="15" fill="rgb(210,85,47)" fg:x="79421156" fg:w="3096191"/><text x="32.3908%" y="1759.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,031,099 samples, 1.23%)</title><rect x="33.3938%" y="1797" width="1.2267%" height="15" fill="rgb(224,206,25)" fg:x="82517347" fg:w="3031099"/><text x="33.6438%" y="1807.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,031,099 samples, 1.23%)</title><rect x="33.3938%" y="1781" width="1.2267%" height="15" fill="rgb(243,201,19)" fg:x="82517347" fg:w="3031099"/><text x="33.6438%" y="1791.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3,031,099 samples, 1.23%)</title><rect x="33.3938%" y="1765" width="1.2267%" height="15" fill="rgb(236,59,4)" fg:x="82517347" fg:w="3031099"/><text x="33.6438%" y="1775.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3,031,099 samples, 1.23%)</title><rect x="33.3938%" y="1749" width="1.2267%" height="15" fill="rgb(254,179,45)" fg:x="82517347" fg:w="3031099"/><text x="33.6438%" y="1759.50"></text></g><g><title>core::ptr::write (3,031,099 samples, 1.23%)</title><rect x="33.3938%" y="1733" width="1.2267%" height="15" fill="rgb(226,14,10)" fg:x="82517347" fg:w="3031099"/><text x="33.6438%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27,513,264 samples, 11.13%)</title><rect x="24.7541%" y="1941" width="11.1343%" height="15" fill="rgb(244,27,41)" fg:x="61168379" fg:w="27513264"/><text x="25.0041%" y="1951.50">&lt;alloc::vec::Vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27,513,264 samples, 11.13%)</title><rect x="24.7541%" y="1925" width="11.1343%" height="15" fill="rgb(235,35,32)" fg:x="61168379" fg:w="27513264"/><text x="25.0041%" y="1935.50">alloc::slice::&lt;i..</text></g><g><title>alloc::slice::hack::to_vec (27,513,264 samples, 11.13%)</title><rect x="24.7541%" y="1909" width="11.1343%" height="15" fill="rgb(218,68,31)" fg:x="61168379" fg:w="27513264"/><text x="25.0041%" y="1919.50">alloc::slice::ha..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27,513,264 samples, 11.13%)</title><rect x="24.7541%" y="1893" width="11.1343%" height="15" fill="rgb(207,120,37)" fg:x="61168379" fg:w="27513264"/><text x="25.0041%" y="1903.50">&lt;T as alloc::sli..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (27,513,264 samples, 11.13%)</title><rect x="24.7541%" y="1877" width="11.1343%" height="15" fill="rgb(227,98,0)" fg:x="61168379" fg:w="27513264"/><text x="25.0041%" y="1887.50">&lt;css_bitvector_c..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (6,164,296 samples, 2.49%)</title><rect x="33.3938%" y="1861" width="2.4946%" height="15" fill="rgb(207,7,3)" fg:x="82517347" fg:w="6164296"/><text x="33.6438%" y="1871.50">&lt;s..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (6,164,296 samples, 2.49%)</title><rect x="33.3938%" y="1845" width="2.4946%" height="15" fill="rgb(206,98,19)" fg:x="82517347" fg:w="6164296"/><text x="33.6438%" y="1855.50">&lt;h..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (6,164,296 samples, 2.49%)</title><rect x="33.3938%" y="1829" width="2.4946%" height="15" fill="rgb(217,5,26)" fg:x="82517347" fg:w="6164296"/><text x="33.6438%" y="1839.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,164,296 samples, 2.49%)</title><rect x="33.3938%" y="1813" width="2.4946%" height="15" fill="rgb(235,190,38)" fg:x="82517347" fg:w="6164296"/><text x="33.6438%" y="1823.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_in (3,133,197 samples, 1.27%)</title><rect x="34.6205%" y="1797" width="1.2680%" height="15" fill="rgb(247,86,24)" fg:x="85548446" fg:w="3133197"/><text x="34.8705%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (29,796,185 samples, 12.06%)</title><rect x="24.7541%" y="2021" width="12.0582%" height="15" fill="rgb(205,101,16)" fg:x="61168379" fg:w="29796185"/><text x="25.0041%" y="2031.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29,796,185 samples, 12.06%)</title><rect x="24.7541%" y="2005" width="12.0582%" height="15" fill="rgb(246,168,33)" fg:x="61168379" fg:w="29796185"/><text x="25.0041%" y="2015.50">alloc::slice::&lt;imp..</text></g><g><title>alloc::slice::hack::to_vec (29,796,185 samples, 12.06%)</title><rect x="24.7541%" y="1989" width="12.0582%" height="15" fill="rgb(231,114,1)" fg:x="61168379" fg:w="29796185"/><text x="25.0041%" y="1999.50">alloc::slice::hack..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (29,796,185 samples, 12.06%)</title><rect x="24.7541%" y="1973" width="12.0582%" height="15" fill="rgb(207,184,53)" fg:x="61168379" fg:w="29796185"/><text x="25.0041%" y="1983.50">&lt;T as alloc::slice..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (29,796,185 samples, 12.06%)</title><rect x="24.7541%" y="1957" width="12.0582%" height="15" fill="rgb(224,95,51)" fg:x="61168379" fg:w="29796185"/><text x="25.0041%" y="1967.50">&lt;css_bitvector_com..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,282,921 samples, 0.92%)</title><rect x="35.8884%" y="1941" width="0.9239%" height="15" fill="rgb(212,188,45)" fg:x="88681643" fg:w="2282921"/><text x="36.1384%" y="1951.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,282,921 samples, 0.92%)</title><rect x="35.8884%" y="1925" width="0.9239%" height="15" fill="rgb(223,154,38)" fg:x="88681643" fg:w="2282921"/><text x="36.1384%" y="1935.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,282,921 samples, 0.92%)</title><rect x="35.8884%" y="1909" width="0.9239%" height="15" fill="rgb(251,22,52)" fg:x="88681643" fg:w="2282921"/><text x="36.1384%" y="1919.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,282,921 samples, 0.92%)</title><rect x="35.8884%" y="1893" width="0.9239%" height="15" fill="rgb(229,209,22)" fg:x="88681643" fg:w="2282921"/><text x="36.1384%" y="1903.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,282,921 samples, 0.92%)</title><rect x="35.8884%" y="1877" width="0.9239%" height="15" fill="rgb(234,138,34)" fg:x="88681643" fg:w="2282921"/><text x="36.1384%" y="1887.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,282,921 samples, 0.92%)</title><rect x="35.8884%" y="1861" width="0.9239%" height="15" fill="rgb(212,95,11)" fg:x="88681643" fg:w="2282921"/><text x="36.1384%" y="1871.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2,282,921 samples, 0.92%)</title><rect x="35.8884%" y="1845" width="0.9239%" height="15" fill="rgb(240,179,47)" fg:x="88681643" fg:w="2282921"/><text x="36.1384%" y="1855.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2,282,921 samples, 0.92%)</title><rect x="35.8884%" y="1829" width="0.9239%" height="15" fill="rgb(240,163,11)" fg:x="88681643" fg:w="2282921"/><text x="36.1384%" y="1839.50"></text></g><g><title>core::ptr::write (2,282,921 samples, 0.92%)</title><rect x="35.8884%" y="1813" width="0.9239%" height="15" fill="rgb(236,37,12)" fg:x="88681643" fg:w="2282921"/><text x="36.1384%" y="1823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,230,176 samples, 2.52%)</title><rect x="36.8123%" y="1829" width="2.5213%" height="15" fill="rgb(232,164,16)" fg:x="90964564" fg:w="6230176"/><text x="37.0623%" y="1839.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,230,176 samples, 2.52%)</title><rect x="36.8123%" y="1813" width="2.5213%" height="15" fill="rgb(244,205,15)" fg:x="90964564" fg:w="6230176"/><text x="37.0623%" y="1823.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,230,176 samples, 2.52%)</title><rect x="36.8123%" y="1797" width="2.5213%" height="15" fill="rgb(223,117,47)" fg:x="90964564" fg:w="6230176"/><text x="37.0623%" y="1807.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,230,176 samples, 2.52%)</title><rect x="36.8123%" y="1781" width="2.5213%" height="15" fill="rgb(244,107,35)" fg:x="90964564" fg:w="6230176"/><text x="37.0623%" y="1791.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,230,176 samples, 2.52%)</title><rect x="36.8123%" y="1765" width="2.5213%" height="15" fill="rgb(205,140,8)" fg:x="90964564" fg:w="6230176"/><text x="37.0623%" y="1775.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (6,230,176 samples, 2.52%)</title><rect x="36.8123%" y="1749" width="2.5213%" height="15" fill="rgb(228,84,46)" fg:x="90964564" fg:w="6230176"/><text x="37.0623%" y="1759.50">al..</text></g><g><title>alloc::alloc::alloc (6,230,176 samples, 2.52%)</title><rect x="36.8123%" y="1733" width="2.5213%" height="15" fill="rgb(254,188,9)" fg:x="90964564" fg:w="6230176"/><text x="37.0623%" y="1743.50">al..</text></g><g><title>malloc (6,230,176 samples, 2.52%)</title><rect x="36.8123%" y="1717" width="2.5213%" height="15" fill="rgb(206,112,54)" fg:x="90964564" fg:w="6230176"/><text x="37.0623%" y="1727.50">ma..</text></g><g><title>[libc.so.6] (6,230,176 samples, 2.52%)</title><rect x="36.8123%" y="1701" width="2.5213%" height="15" fill="rgb(216,84,49)" fg:x="90964564" fg:w="6230176"/><text x="37.0623%" y="1711.50">[l..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (42,236,241 samples, 17.09%)</title><rect x="23.5005%" y="2101" width="17.0925%" height="15" fill="rgb(214,194,35)" fg:x="58070574" fg:w="42236241"/><text x="23.7505%" y="2111.50">&lt;alloc::vec::Vec&lt;T,A&gt; as c..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (42,236,241 samples, 17.09%)</title><rect x="23.5005%" y="2085" width="17.0925%" height="15" fill="rgb(249,28,3)" fg:x="58070574" fg:w="42236241"/><text x="23.7505%" y="2095.50">alloc::slice::&lt;impl [T]&gt;::..</text></g><g><title>alloc::slice::hack::to_vec (42,236,241 samples, 17.09%)</title><rect x="23.5005%" y="2069" width="17.0925%" height="15" fill="rgb(222,56,52)" fg:x="58070574" fg:w="42236241"/><text x="23.7505%" y="2079.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (42,236,241 samples, 17.09%)</title><rect x="23.5005%" y="2053" width="17.0925%" height="15" fill="rgb(245,217,50)" fg:x="58070574" fg:w="42236241"/><text x="23.7505%" y="2063.50">&lt;T as alloc::slice::hack::..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (42,236,241 samples, 17.09%)</title><rect x="23.5005%" y="2037" width="17.0925%" height="15" fill="rgb(213,201,24)" fg:x="58070574" fg:w="42236241"/><text x="23.7505%" y="2047.50">&lt;css_bitvector_compiler::H..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (9,342,251 samples, 3.78%)</title><rect x="36.8123%" y="2021" width="3.7807%" height="15" fill="rgb(248,116,28)" fg:x="90964564" fg:w="9342251"/><text x="37.0623%" y="2031.50">&lt;std..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (9,342,251 samples, 3.78%)</title><rect x="36.8123%" y="2005" width="3.7807%" height="15" fill="rgb(219,72,43)" fg:x="90964564" fg:w="9342251"/><text x="37.0623%" y="2015.50">&lt;has..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (9,342,251 samples, 3.78%)</title><rect x="36.8123%" y="1989" width="3.7807%" height="15" fill="rgb(209,138,14)" fg:x="90964564" fg:w="9342251"/><text x="37.0623%" y="1999.50">&lt;has..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,342,251 samples, 3.78%)</title><rect x="36.8123%" y="1973" width="3.7807%" height="15" fill="rgb(222,18,33)" fg:x="90964564" fg:w="9342251"/><text x="37.0623%" y="1983.50">&lt;has..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (9,342,251 samples, 3.78%)</title><rect x="36.8123%" y="1957" width="3.7807%" height="15" fill="rgb(213,199,7)" fg:x="90964564" fg:w="9342251"/><text x="37.0623%" y="1967.50">&lt;has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (9,342,251 samples, 3.78%)</title><rect x="36.8123%" y="1941" width="3.7807%" height="15" fill="rgb(250,110,10)" fg:x="90964564" fg:w="9342251"/><text x="37.0623%" y="1951.50">hash..</text></g><g><title>core::clone::Clone::clone (9,342,251 samples, 3.78%)</title><rect x="36.8123%" y="1925" width="3.7807%" height="15" fill="rgb(248,123,6)" fg:x="90964564" fg:w="9342251"/><text x="37.0623%" y="1935.50">core..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9,342,251 samples, 3.78%)</title><rect x="36.8123%" y="1909" width="3.7807%" height="15" fill="rgb(206,91,31)" fg:x="90964564" fg:w="9342251"/><text x="37.0623%" y="1919.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,342,251 samples, 3.78%)</title><rect x="36.8123%" y="1893" width="3.7807%" height="15" fill="rgb(211,154,13)" fg:x="90964564" fg:w="9342251"/><text x="37.0623%" y="1903.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,342,251 samples, 3.78%)</title><rect x="36.8123%" y="1877" width="3.7807%" height="15" fill="rgb(225,148,7)" fg:x="90964564" fg:w="9342251"/><text x="37.0623%" y="1887.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (9,342,251 samples, 3.78%)</title><rect x="36.8123%" y="1861" width="3.7807%" height="15" fill="rgb(220,160,43)" fg:x="90964564" fg:w="9342251"/><text x="37.0623%" y="1871.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,342,251 samples, 3.78%)</title><rect x="36.8123%" y="1845" width="3.7807%" height="15" fill="rgb(213,52,39)" fg:x="90964564" fg:w="9342251"/><text x="37.0623%" y="1855.50">&lt;T a..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,112,075 samples, 1.26%)</title><rect x="39.3336%" y="1829" width="1.2594%" height="15" fill="rgb(243,137,7)" fg:x="97194740" fg:w="3112075"/><text x="39.5836%" y="1839.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,112,075 samples, 1.26%)</title><rect x="39.3336%" y="1813" width="1.2594%" height="15" fill="rgb(230,79,13)" fg:x="97194740" fg:w="3112075"/><text x="39.5836%" y="1823.50"></text></g><g><title>[libc.so.6] (3,112,075 samples, 1.26%)</title><rect x="39.3336%" y="1797" width="1.2594%" height="15" fill="rgb(247,105,23)" fg:x="97194740" fg:w="3112075"/><text x="39.5836%" y="1807.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (45,314,498 samples, 18.34%)</title><rect x="23.5005%" y="2117" width="18.3383%" height="15" fill="rgb(223,179,41)" fg:x="58070574" fg:w="45314498"/><text x="23.7505%" y="2127.50">&lt;css_bitvector_compiler::Html..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,078,257 samples, 1.25%)</title><rect x="40.5930%" y="2101" width="1.2457%" height="15" fill="rgb(218,9,34)" fg:x="100306815" fg:w="3078257"/><text x="40.8430%" y="2111.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,078,257 samples, 1.25%)</title><rect x="40.5930%" y="2085" width="1.2457%" height="15" fill="rgb(222,106,8)" fg:x="100306815" fg:w="3078257"/><text x="40.8430%" y="2095.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,078,257 samples, 1.25%)</title><rect x="40.5930%" y="2069" width="1.2457%" height="15" fill="rgb(211,220,0)" fg:x="100306815" fg:w="3078257"/><text x="40.8430%" y="2079.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,078,257 samples, 1.25%)</title><rect x="40.5930%" y="2053" width="1.2457%" height="15" fill="rgb(229,52,16)" fg:x="100306815" fg:w="3078257"/><text x="40.8430%" y="2063.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3,078,257 samples, 1.25%)</title><rect x="40.5930%" y="2037" width="1.2457%" height="15" fill="rgb(212,155,18)" fg:x="100306815" fg:w="3078257"/><text x="40.8430%" y="2047.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3,078,257 samples, 1.25%)</title><rect x="40.5930%" y="2021" width="1.2457%" height="15" fill="rgb(242,21,14)" fg:x="100306815" fg:w="3078257"/><text x="40.8430%" y="2031.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3,078,257 samples, 1.25%)</title><rect x="40.5930%" y="2005" width="1.2457%" height="15" fill="rgb(222,19,48)" fg:x="100306815" fg:w="3078257"/><text x="40.8430%" y="2015.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,078,257 samples, 1.25%)</title><rect x="40.5930%" y="1989" width="1.2457%" height="15" fill="rgb(232,45,27)" fg:x="100306815" fg:w="3078257"/><text x="40.8430%" y="1999.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,078,257 samples, 1.25%)</title><rect x="40.5930%" y="1973" width="1.2457%" height="15" fill="rgb(249,103,42)" fg:x="100306815" fg:w="3078257"/><text x="40.8430%" y="1983.50"></text></g><g><title>alloc::alloc::alloc (3,078,257 samples, 1.25%)</title><rect x="40.5930%" y="1957" width="1.2457%" height="15" fill="rgb(246,81,33)" fg:x="100306815" fg:w="3078257"/><text x="40.8430%" y="1967.50"></text></g><g><title>malloc (3,078,257 samples, 1.25%)</title><rect x="40.5930%" y="1941" width="1.2457%" height="15" fill="rgb(252,33,42)" fg:x="100306815" fg:w="3078257"/><text x="40.8430%" y="1951.50"></text></g><g><title>[libc.so.6] (3,078,257 samples, 1.25%)</title><rect x="40.5930%" y="1925" width="1.2457%" height="15" fill="rgb(209,212,41)" fg:x="100306815" fg:w="3078257"/><text x="40.8430%" y="1935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (47,121,552 samples, 19.07%)</title><rect x="23.5005%" y="2181" width="19.0696%" height="15" fill="rgb(207,154,6)" fg:x="58070574" fg:w="47121552"/><text x="23.7505%" y="2191.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (47,121,552 samples, 19.07%)</title><rect x="23.5005%" y="2165" width="19.0696%" height="15" fill="rgb(223,64,47)" fg:x="58070574" fg:w="47121552"/><text x="23.7505%" y="2175.50">alloc::slice::&lt;impl [T]&gt;::to_v..</text></g><g><title>alloc::slice::hack::to_vec (47,121,552 samples, 19.07%)</title><rect x="23.5005%" y="2149" width="19.0696%" height="15" fill="rgb(211,161,38)" fg:x="58070574" fg:w="47121552"/><text x="23.7505%" y="2159.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (47,121,552 samples, 19.07%)</title><rect x="23.5005%" y="2133" width="19.0696%" height="15" fill="rgb(219,138,40)" fg:x="58070574" fg:w="47121552"/><text x="23.7505%" y="2143.50">&lt;T as alloc::slice::hack::Conv..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,807,054 samples, 0.73%)</title><rect x="41.8387%" y="2117" width="0.7313%" height="15" fill="rgb(241,228,46)" fg:x="103385072" fg:w="1807054"/><text x="42.0887%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,807,054 samples, 0.73%)</title><rect x="41.8387%" y="2101" width="0.7313%" height="15" fill="rgb(223,209,38)" fg:x="103385072" fg:w="1807054"/><text x="42.0887%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,807,054 samples, 0.73%)</title><rect x="41.8387%" y="2085" width="0.7313%" height="15" fill="rgb(236,164,45)" fg:x="103385072" fg:w="1807054"/><text x="42.0887%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,807,054 samples, 0.73%)</title><rect x="41.8387%" y="2069" width="0.7313%" height="15" fill="rgb(231,15,5)" fg:x="103385072" fg:w="1807054"/><text x="42.0887%" y="2079.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,807,054 samples, 0.73%)</title><rect x="41.8387%" y="2053" width="0.7313%" height="15" fill="rgb(252,35,15)" fg:x="103385072" fg:w="1807054"/><text x="42.0887%" y="2063.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,807,054 samples, 0.73%)</title><rect x="41.8387%" y="2037" width="0.7313%" height="15" fill="rgb(248,181,18)" fg:x="103385072" fg:w="1807054"/><text x="42.0887%" y="2047.50"></text></g><g><title>alloc::alloc::alloc (1,807,054 samples, 0.73%)</title><rect x="41.8387%" y="2021" width="0.7313%" height="15" fill="rgb(233,39,42)" fg:x="103385072" fg:w="1807054"/><text x="42.0887%" y="2031.50"></text></g><g><title>malloc (1,807,054 samples, 0.73%)</title><rect x="41.8387%" y="2005" width="0.7313%" height="15" fill="rgb(238,110,33)" fg:x="103385072" fg:w="1807054"/><text x="42.0887%" y="2015.50"></text></g><g><title>[libc.so.6] (1,807,054 samples, 0.73%)</title><rect x="41.8387%" y="1989" width="0.7313%" height="15" fill="rgb(233,195,10)" fg:x="103385072" fg:w="1807054"/><text x="42.0887%" y="1999.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,119,397 samples, 1.26%)</title><rect x="42.5700%" y="2181" width="1.2624%" height="15" fill="rgb(254,105,3)" fg:x="105192126" fg:w="3119397"/><text x="42.8200%" y="2191.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,119,397 samples, 1.26%)</title><rect x="42.5700%" y="2165" width="1.2624%" height="15" fill="rgb(221,225,9)" fg:x="105192126" fg:w="3119397"/><text x="42.8200%" y="2175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,119,397 samples, 1.26%)</title><rect x="42.5700%" y="2149" width="1.2624%" height="15" fill="rgb(224,227,45)" fg:x="105192126" fg:w="3119397"/><text x="42.8200%" y="2159.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,119,397 samples, 1.26%)</title><rect x="42.5700%" y="2133" width="1.2624%" height="15" fill="rgb(229,198,43)" fg:x="105192126" fg:w="3119397"/><text x="42.8200%" y="2143.50"></text></g><g><title>alloc::slice::hack::to_vec (3,119,397 samples, 1.26%)</title><rect x="42.5700%" y="2117" width="1.2624%" height="15" fill="rgb(206,209,35)" fg:x="105192126" fg:w="3119397"/><text x="42.8200%" y="2127.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,119,397 samples, 1.26%)</title><rect x="42.5700%" y="2101" width="1.2624%" height="15" fill="rgb(245,195,53)" fg:x="105192126" fg:w="3119397"/><text x="42.8200%" y="2111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,119,397 samples, 1.26%)</title><rect x="42.5700%" y="2085" width="1.2624%" height="15" fill="rgb(240,92,26)" fg:x="105192126" fg:w="3119397"/><text x="42.8200%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,119,397 samples, 1.26%)</title><rect x="42.5700%" y="2069" width="1.2624%" height="15" fill="rgb(207,40,23)" fg:x="105192126" fg:w="3119397"/><text x="42.8200%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,119,397 samples, 1.26%)</title><rect x="42.5700%" y="2053" width="1.2624%" height="15" fill="rgb(223,111,35)" fg:x="105192126" fg:w="3119397"/><text x="42.8200%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,119,397 samples, 1.26%)</title><rect x="42.5700%" y="2037" width="1.2624%" height="15" fill="rgb(229,147,28)" fg:x="105192126" fg:w="3119397"/><text x="42.8200%" y="2047.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,119,397 samples, 1.26%)</title><rect x="42.5700%" y="2021" width="1.2624%" height="15" fill="rgb(211,29,28)" fg:x="105192126" fg:w="3119397"/><text x="42.8200%" y="2031.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,119,397 samples, 1.26%)</title><rect x="42.5700%" y="2005" width="1.2624%" height="15" fill="rgb(228,72,33)" fg:x="105192126" fg:w="3119397"/><text x="42.8200%" y="2015.50"></text></g><g><title>alloc::alloc::alloc (3,119,397 samples, 1.26%)</title><rect x="42.5700%" y="1989" width="1.2624%" height="15" fill="rgb(205,214,31)" fg:x="105192126" fg:w="3119397"/><text x="42.8200%" y="1999.50"></text></g><g><title>malloc (3,119,397 samples, 1.26%)</title><rect x="42.5700%" y="1973" width="1.2624%" height="15" fill="rgb(224,111,15)" fg:x="105192126" fg:w="3119397"/><text x="42.8200%" y="1983.50"></text></g><g><title>[libc.so.6] (3,119,397 samples, 1.26%)</title><rect x="42.5700%" y="1957" width="1.2624%" height="15" fill="rgb(253,21,26)" fg:x="105192126" fg:w="3119397"/><text x="42.8200%" y="1967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (53,116,127 samples, 21.50%)</title><rect x="23.5005%" y="2261" width="21.4955%" height="15" fill="rgb(245,139,43)" fg:x="58070574" fg:w="53116127"/><text x="23.7505%" y="2271.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (53,116,127 samples, 21.50%)</title><rect x="23.5005%" y="2245" width="21.4955%" height="15" fill="rgb(252,170,7)" fg:x="58070574" fg:w="53116127"/><text x="23.7505%" y="2255.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (53,116,127 samples, 21.50%)</title><rect x="23.5005%" y="2229" width="21.4955%" height="15" fill="rgb(231,118,14)" fg:x="58070574" fg:w="53116127"/><text x="23.7505%" y="2239.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (53,116,127 samples, 21.50%)</title><rect x="23.5005%" y="2213" width="21.4955%" height="15" fill="rgb(238,83,0)" fg:x="58070574" fg:w="53116127"/><text x="23.7505%" y="2223.50">&lt;T as alloc::slice::hack::ConvertV..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (53,116,127 samples, 21.50%)</title><rect x="23.5005%" y="2197" width="21.4955%" height="15" fill="rgb(221,39,39)" fg:x="58070574" fg:w="53116127"/><text x="23.7505%" y="2207.50">&lt;css_bitvector_compiler::HtmlNode ..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,875,178 samples, 1.16%)</title><rect x="43.8324%" y="2181" width="1.1636%" height="15" fill="rgb(222,119,46)" fg:x="108311523" fg:w="2875178"/><text x="44.0824%" y="2191.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,875,178 samples, 1.16%)</title><rect x="43.8324%" y="2165" width="1.1636%" height="15" fill="rgb(222,165,49)" fg:x="108311523" fg:w="2875178"/><text x="44.0824%" y="2175.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,875,178 samples, 1.16%)</title><rect x="43.8324%" y="2149" width="1.1636%" height="15" fill="rgb(219,113,52)" fg:x="108311523" fg:w="2875178"/><text x="44.0824%" y="2159.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,875,178 samples, 1.16%)</title><rect x="43.8324%" y="2133" width="1.1636%" height="15" fill="rgb(214,7,15)" fg:x="108311523" fg:w="2875178"/><text x="44.0824%" y="2143.50"></text></g><g><title>hashbrown::raw::RawTableInner::buckets (2,875,178 samples, 1.16%)</title><rect x="43.8324%" y="2117" width="1.1636%" height="15" fill="rgb(235,32,4)" fg:x="108311523" fg:w="2875178"/><text x="44.0824%" y="2127.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (6,150,974 samples, 2.49%)</title><rect x="44.9960%" y="2261" width="2.4892%" height="15" fill="rgb(238,90,54)" fg:x="111186701" fg:w="6150974"/><text x="45.2460%" y="2271.50">&lt;c..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6,150,974 samples, 2.49%)</title><rect x="44.9960%" y="2245" width="2.4892%" height="15" fill="rgb(213,208,19)" fg:x="111186701" fg:w="6150974"/><text x="45.2460%" y="2255.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,150,974 samples, 2.49%)</title><rect x="44.9960%" y="2229" width="2.4892%" height="15" fill="rgb(233,156,4)" fg:x="111186701" fg:w="6150974"/><text x="45.2460%" y="2239.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,150,974 samples, 2.49%)</title><rect x="44.9960%" y="2213" width="2.4892%" height="15" fill="rgb(207,194,5)" fg:x="111186701" fg:w="6150974"/><text x="45.2460%" y="2223.50">al..</text></g><g><title>alloc::slice::hack::to_vec (6,150,974 samples, 2.49%)</title><rect x="44.9960%" y="2197" width="2.4892%" height="15" fill="rgb(206,111,30)" fg:x="111186701" fg:w="6150974"/><text x="45.2460%" y="2207.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,150,974 samples, 2.49%)</title><rect x="44.9960%" y="2181" width="2.4892%" height="15" fill="rgb(243,70,54)" fg:x="111186701" fg:w="6150974"/><text x="45.2460%" y="2191.50">&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,150,974 samples, 2.49%)</title><rect x="44.9960%" y="2165" width="2.4892%" height="15" fill="rgb(242,28,8)" fg:x="111186701" fg:w="6150974"/><text x="45.2460%" y="2175.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,150,974 samples, 2.49%)</title><rect x="44.9960%" y="2149" width="2.4892%" height="15" fill="rgb(219,106,18)" fg:x="111186701" fg:w="6150974"/><text x="45.2460%" y="2159.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,150,974 samples, 2.49%)</title><rect x="44.9960%" y="2133" width="2.4892%" height="15" fill="rgb(244,222,10)" fg:x="111186701" fg:w="6150974"/><text x="45.2460%" y="2143.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,150,974 samples, 2.49%)</title><rect x="44.9960%" y="2117" width="2.4892%" height="15" fill="rgb(236,179,52)" fg:x="111186701" fg:w="6150974"/><text x="45.2460%" y="2127.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,150,974 samples, 2.49%)</title><rect x="44.9960%" y="2101" width="2.4892%" height="15" fill="rgb(213,23,39)" fg:x="111186701" fg:w="6150974"/><text x="45.2460%" y="2111.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (6,150,974 samples, 2.49%)</title><rect x="44.9960%" y="2085" width="2.4892%" height="15" fill="rgb(238,48,10)" fg:x="111186701" fg:w="6150974"/><text x="45.2460%" y="2095.50">al..</text></g><g><title>alloc::alloc::alloc (6,150,974 samples, 2.49%)</title><rect x="44.9960%" y="2069" width="2.4892%" height="15" fill="rgb(251,196,23)" fg:x="111186701" fg:w="6150974"/><text x="45.2460%" y="2079.50">al..</text></g><g><title>malloc (6,150,974 samples, 2.49%)</title><rect x="44.9960%" y="2053" width="2.4892%" height="15" fill="rgb(250,152,24)" fg:x="111186701" fg:w="6150974"/><text x="45.2460%" y="2063.50">ma..</text></g><g><title>[libc.so.6] (6,150,974 samples, 2.49%)</title><rect x="44.9960%" y="2037" width="2.4892%" height="15" fill="rgb(209,150,17)" fg:x="111186701" fg:w="6150974"/><text x="45.2460%" y="2047.50">[l..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (6,251,127 samples, 2.53%)</title><rect x="47.4852%" y="2261" width="2.5298%" height="15" fill="rgb(234,202,34)" fg:x="117337675" fg:w="6251127"/><text x="47.7352%" y="2271.50">&lt;c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,251,127 samples, 2.53%)</title><rect x="47.4852%" y="2245" width="2.5298%" height="15" fill="rgb(253,148,53)" fg:x="117337675" fg:w="6251127"/><text x="47.7352%" y="2255.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,251,127 samples, 2.53%)</title><rect x="47.4852%" y="2229" width="2.5298%" height="15" fill="rgb(218,129,16)" fg:x="117337675" fg:w="6251127"/><text x="47.7352%" y="2239.50">al..</text></g><g><title>alloc::slice::hack::to_vec (6,251,127 samples, 2.53%)</title><rect x="47.4852%" y="2213" width="2.5298%" height="15" fill="rgb(216,85,19)" fg:x="117337675" fg:w="6251127"/><text x="47.7352%" y="2223.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,251,127 samples, 2.53%)</title><rect x="47.4852%" y="2197" width="2.5298%" height="15" fill="rgb(235,228,7)" fg:x="117337675" fg:w="6251127"/><text x="47.7352%" y="2207.50">&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,251,127 samples, 2.53%)</title><rect x="47.4852%" y="2181" width="2.5298%" height="15" fill="rgb(245,175,0)" fg:x="117337675" fg:w="6251127"/><text x="47.7352%" y="2191.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,251,127 samples, 2.53%)</title><rect x="47.4852%" y="2165" width="2.5298%" height="15" fill="rgb(208,168,36)" fg:x="117337675" fg:w="6251127"/><text x="47.7352%" y="2175.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,251,127 samples, 2.53%)</title><rect x="47.4852%" y="2149" width="2.5298%" height="15" fill="rgb(246,171,24)" fg:x="117337675" fg:w="6251127"/><text x="47.7352%" y="2159.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,251,127 samples, 2.53%)</title><rect x="47.4852%" y="2133" width="2.5298%" height="15" fill="rgb(215,142,24)" fg:x="117337675" fg:w="6251127"/><text x="47.7352%" y="2143.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,251,127 samples, 2.53%)</title><rect x="47.4852%" y="2117" width="2.5298%" height="15" fill="rgb(250,187,7)" fg:x="117337675" fg:w="6251127"/><text x="47.7352%" y="2127.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (6,251,127 samples, 2.53%)</title><rect x="47.4852%" y="2101" width="2.5298%" height="15" fill="rgb(228,66,33)" fg:x="117337675" fg:w="6251127"/><text x="47.7352%" y="2111.50">al..</text></g><g><title>alloc::alloc::alloc (6,251,127 samples, 2.53%)</title><rect x="47.4852%" y="2085" width="2.5298%" height="15" fill="rgb(234,215,21)" fg:x="117337675" fg:w="6251127"/><text x="47.7352%" y="2095.50">al..</text></g><g><title>malloc (6,251,127 samples, 2.53%)</title><rect x="47.4852%" y="2069" width="2.5298%" height="15" fill="rgb(222,191,20)" fg:x="117337675" fg:w="6251127"/><text x="47.7352%" y="2079.50">ma..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (82,339,685 samples, 33.32%)</title><rect x="19.1541%" y="2437" width="33.3219%" height="15" fill="rgb(245,79,54)" fg:x="47330403" fg:w="82339685"/><text x="19.4041%" y="2447.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clon..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (79,828,200 samples, 32.31%)</title><rect x="20.1704%" y="2421" width="32.3056%" height="15" fill="rgb(240,10,37)" fg:x="49841888" fg:w="79828200"/><text x="20.4204%" y="2431.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (79,828,200 samples, 32.31%)</title><rect x="20.1704%" y="2405" width="32.3056%" height="15" fill="rgb(214,192,32)" fg:x="49841888" fg:w="79828200"/><text x="20.4204%" y="2415.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (79,828,200 samples, 32.31%)</title><rect x="20.1704%" y="2389" width="32.3056%" height="15" fill="rgb(209,36,54)" fg:x="49841888" fg:w="79828200"/><text x="20.4204%" y="2399.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (79,828,200 samples, 32.31%)</title><rect x="20.1704%" y="2373" width="32.3056%" height="15" fill="rgb(220,10,11)" fg:x="49841888" fg:w="79828200"/><text x="20.4204%" y="2383.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (79,828,200 samples, 32.31%)</title><rect x="20.1704%" y="2357" width="32.3056%" height="15" fill="rgb(221,106,17)" fg:x="49841888" fg:w="79828200"/><text x="20.4204%" y="2367.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Cl..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (76,724,340 samples, 31.05%)</title><rect x="21.4265%" y="2341" width="31.0495%" height="15" fill="rgb(251,142,44)" fg:x="52945748" fg:w="76724340"/><text x="21.6765%" y="2351.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (76,724,340 samples, 31.05%)</title><rect x="21.4265%" y="2325" width="31.0495%" height="15" fill="rgb(238,13,15)" fg:x="52945748" fg:w="76724340"/><text x="21.6765%" y="2335.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (76,724,340 samples, 31.05%)</title><rect x="21.4265%" y="2309" width="31.0495%" height="15" fill="rgb(208,107,27)" fg:x="52945748" fg:w="76724340"/><text x="21.6765%" y="2319.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (76,724,340 samples, 31.05%)</title><rect x="21.4265%" y="2293" width="31.0495%" height="15" fill="rgb(205,136,37)" fg:x="52945748" fg:w="76724340"/><text x="21.6765%" y="2303.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (76,724,340 samples, 31.05%)</title><rect x="21.4265%" y="2277" width="31.0495%" height="15" fill="rgb(250,205,27)" fg:x="52945748" fg:w="76724340"/><text x="21.6765%" y="2287.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (6,081,286 samples, 2.46%)</title><rect x="50.0150%" y="2261" width="2.4610%" height="15" fill="rgb(210,80,43)" fg:x="123588802" fg:w="6081286"/><text x="50.2650%" y="2271.50">&lt;s..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (6,081,286 samples, 2.46%)</title><rect x="50.0150%" y="2245" width="2.4610%" height="15" fill="rgb(247,160,36)" fg:x="123588802" fg:w="6081286"/><text x="50.2650%" y="2255.50">&lt;h..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (6,081,286 samples, 2.46%)</title><rect x="50.0150%" y="2229" width="2.4610%" height="15" fill="rgb(234,13,49)" fg:x="123588802" fg:w="6081286"/><text x="50.2650%" y="2239.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,022,449 samples, 1.22%)</title><rect x="51.2528%" y="2213" width="1.2232%" height="15" fill="rgb(234,122,0)" fg:x="126647639" fg:w="3022449"/><text x="51.5028%" y="2223.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,022,449 samples, 1.22%)</title><rect x="51.2528%" y="2197" width="1.2232%" height="15" fill="rgb(207,146,38)" fg:x="126647639" fg:w="3022449"/><text x="51.5028%" y="2207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,022,449 samples, 1.22%)</title><rect x="51.2528%" y="2181" width="1.2232%" height="15" fill="rgb(207,177,25)" fg:x="126647639" fg:w="3022449"/><text x="51.5028%" y="2191.50"></text></g><g><title>core::clone::Clone::clone (3,022,449 samples, 1.22%)</title><rect x="51.2528%" y="2165" width="1.2232%" height="15" fill="rgb(211,178,42)" fg:x="126647639" fg:w="3022449"/><text x="51.5028%" y="2175.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,022,449 samples, 1.22%)</title><rect x="51.2528%" y="2149" width="1.2232%" height="15" fill="rgb(230,69,54)" fg:x="126647639" fg:w="3022449"/><text x="51.5028%" y="2159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,022,449 samples, 1.22%)</title><rect x="51.2528%" y="2133" width="1.2232%" height="15" fill="rgb(214,135,41)" fg:x="126647639" fg:w="3022449"/><text x="51.5028%" y="2143.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,022,449 samples, 1.22%)</title><rect x="51.2528%" y="2117" width="1.2232%" height="15" fill="rgb(237,67,25)" fg:x="126647639" fg:w="3022449"/><text x="51.5028%" y="2127.50"></text></g><g><title>alloc::slice::hack::to_vec (3,022,449 samples, 1.22%)</title><rect x="51.2528%" y="2101" width="1.2232%" height="15" fill="rgb(222,189,50)" fg:x="126647639" fg:w="3022449"/><text x="51.5028%" y="2111.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,022,449 samples, 1.22%)</title><rect x="51.2528%" y="2085" width="1.2232%" height="15" fill="rgb(245,148,34)" fg:x="126647639" fg:w="3022449"/><text x="51.5028%" y="2095.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,022,449 samples, 1.22%)</title><rect x="51.2528%" y="2069" width="1.2232%" height="15" fill="rgb(222,29,6)" fg:x="126647639" fg:w="3022449"/><text x="51.5028%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,022,449 samples, 1.22%)</title><rect x="51.2528%" y="2053" width="1.2232%" height="15" fill="rgb(221,189,43)" fg:x="126647639" fg:w="3022449"/><text x="51.5028%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,022,449 samples, 1.22%)</title><rect x="51.2528%" y="2037" width="1.2232%" height="15" fill="rgb(207,36,27)" fg:x="126647639" fg:w="3022449"/><text x="51.5028%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,022,449 samples, 1.22%)</title><rect x="51.2528%" y="2021" width="1.2232%" height="15" fill="rgb(217,90,24)" fg:x="126647639" fg:w="3022449"/><text x="51.5028%" y="2031.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,022,449 samples, 1.22%)</title><rect x="51.2528%" y="2005" width="1.2232%" height="15" fill="rgb(224,66,35)" fg:x="126647639" fg:w="3022449"/><text x="51.5028%" y="2015.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,022,449 samples, 1.22%)</title><rect x="51.2528%" y="1989" width="1.2232%" height="15" fill="rgb(221,13,50)" fg:x="126647639" fg:w="3022449"/><text x="51.5028%" y="1999.50"></text></g><g><title>alloc::alloc::alloc (3,022,449 samples, 1.22%)</title><rect x="51.2528%" y="1973" width="1.2232%" height="15" fill="rgb(236,68,49)" fg:x="126647639" fg:w="3022449"/><text x="51.5028%" y="1983.50"></text></g><g><title>malloc (3,022,449 samples, 1.22%)</title><rect x="51.2528%" y="1957" width="1.2232%" height="15" fill="rgb(229,146,28)" fg:x="126647639" fg:w="3022449"/><text x="51.5028%" y="1967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (88,560,645 samples, 35.84%)</title><rect x="17.8847%" y="2501" width="35.8395%" height="15" fill="rgb(225,31,38)" fg:x="44193732" fg:w="88560645"/><text x="18.1347%" y="2511.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (88,560,645 samples, 35.84%)</title><rect x="17.8847%" y="2485" width="35.8395%" height="15" fill="rgb(250,208,3)" fg:x="44193732" fg:w="88560645"/><text x="18.1347%" y="2495.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (88,560,645 samples, 35.84%)</title><rect x="17.8847%" y="2469" width="35.8395%" height="15" fill="rgb(246,54,23)" fg:x="44193732" fg:w="88560645"/><text x="18.1347%" y="2479.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (88,560,645 samples, 35.84%)</title><rect x="17.8847%" y="2453" width="35.8395%" height="15" fill="rgb(243,76,11)" fg:x="44193732" fg:w="88560645"/><text x="18.1347%" y="2463.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,084,289 samples, 1.25%)</title><rect x="52.4760%" y="2437" width="1.2482%" height="15" fill="rgb(245,21,50)" fg:x="129670088" fg:w="3084289"/><text x="52.7260%" y="2447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,084,289 samples, 1.25%)</title><rect x="52.4760%" y="2421" width="1.2482%" height="15" fill="rgb(228,9,43)" fg:x="129670088" fg:w="3084289"/><text x="52.7260%" y="2431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,084,289 samples, 1.25%)</title><rect x="52.4760%" y="2405" width="1.2482%" height="15" fill="rgb(208,100,47)" fg:x="129670088" fg:w="3084289"/><text x="52.7260%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,084,289 samples, 1.25%)</title><rect x="52.4760%" y="2389" width="1.2482%" height="15" fill="rgb(232,26,8)" fg:x="129670088" fg:w="3084289"/><text x="52.7260%" y="2399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,084,289 samples, 1.25%)</title><rect x="52.4760%" y="2373" width="1.2482%" height="15" fill="rgb(216,166,38)" fg:x="129670088" fg:w="3084289"/><text x="52.7260%" y="2383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,084,289 samples, 1.25%)</title><rect x="52.4760%" y="2357" width="1.2482%" height="15" fill="rgb(251,202,51)" fg:x="129670088" fg:w="3084289"/><text x="52.7260%" y="2367.50"></text></g><g><title>alloc::alloc::alloc (3,084,289 samples, 1.25%)</title><rect x="52.4760%" y="2341" width="1.2482%" height="15" fill="rgb(254,216,34)" fg:x="129670088" fg:w="3084289"/><text x="52.7260%" y="2351.50"></text></g><g><title>malloc (3,084,289 samples, 1.25%)</title><rect x="52.4760%" y="2325" width="1.2482%" height="15" fill="rgb(251,32,27)" fg:x="129670088" fg:w="3084289"/><text x="52.7260%" y="2335.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,686,227 samples, 1.09%)</title><rect x="53.7242%" y="2501" width="1.0871%" height="15" fill="rgb(208,127,28)" fg:x="132754377" fg:w="2686227"/><text x="53.9742%" y="2511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,686,227 samples, 1.09%)</title><rect x="53.7242%" y="2485" width="1.0871%" height="15" fill="rgb(224,137,22)" fg:x="132754377" fg:w="2686227"/><text x="53.9742%" y="2495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,686,227 samples, 1.09%)</title><rect x="53.7242%" y="2469" width="1.0871%" height="15" fill="rgb(254,70,32)" fg:x="132754377" fg:w="2686227"/><text x="53.9742%" y="2479.50"></text></g><g><title>alloc::slice::hack::to_vec (2,686,227 samples, 1.09%)</title><rect x="53.7242%" y="2453" width="1.0871%" height="15" fill="rgb(229,75,37)" fg:x="132754377" fg:w="2686227"/><text x="53.9742%" y="2463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,686,227 samples, 1.09%)</title><rect x="53.7242%" y="2437" width="1.0871%" height="15" fill="rgb(252,64,23)" fg:x="132754377" fg:w="2686227"/><text x="53.9742%" y="2447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,686,227 samples, 1.09%)</title><rect x="53.7242%" y="2421" width="1.0871%" height="15" fill="rgb(232,162,48)" fg:x="132754377" fg:w="2686227"/><text x="53.9742%" y="2431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,686,227 samples, 1.09%)</title><rect x="53.7242%" y="2405" width="1.0871%" height="15" fill="rgb(246,160,12)" fg:x="132754377" fg:w="2686227"/><text x="53.9742%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,686,227 samples, 1.09%)</title><rect x="53.7242%" y="2389" width="1.0871%" height="15" fill="rgb(247,166,0)" fg:x="132754377" fg:w="2686227"/><text x="53.9742%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,686,227 samples, 1.09%)</title><rect x="53.7242%" y="2373" width="1.0871%" height="15" fill="rgb(249,219,21)" fg:x="132754377" fg:w="2686227"/><text x="53.9742%" y="2383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,686,227 samples, 1.09%)</title><rect x="53.7242%" y="2357" width="1.0871%" height="15" fill="rgb(205,209,3)" fg:x="132754377" fg:w="2686227"/><text x="53.9742%" y="2367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,686,227 samples, 1.09%)</title><rect x="53.7242%" y="2341" width="1.0871%" height="15" fill="rgb(243,44,1)" fg:x="132754377" fg:w="2686227"/><text x="53.9742%" y="2351.50"></text></g><g><title>alloc::alloc::alloc (2,686,227 samples, 1.09%)</title><rect x="53.7242%" y="2325" width="1.0871%" height="15" fill="rgb(206,159,16)" fg:x="132754377" fg:w="2686227"/><text x="53.9742%" y="2335.50"></text></g><g><title>malloc (2,686,227 samples, 1.09%)</title><rect x="53.7242%" y="2309" width="1.0871%" height="15" fill="rgb(244,77,30)" fg:x="132754377" fg:w="2686227"/><text x="53.9742%" y="2319.50"></text></g><g><title>[libc.so.6] (2,686,227 samples, 1.09%)</title><rect x="53.7242%" y="2293" width="1.0871%" height="15" fill="rgb(218,69,12)" fg:x="132754377" fg:w="2686227"/><text x="53.9742%" y="2303.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (94,124,681 samples, 38.09%)</title><rect x="17.8847%" y="2757" width="38.0912%" height="15" fill="rgb(212,87,7)" fg:x="44193732" fg:w="94124681"/><text x="18.1347%" y="2767.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (94,124,681 samples, 38.09%)</title><rect x="17.8847%" y="2741" width="38.0912%" height="15" fill="rgb(245,114,25)" fg:x="44193732" fg:w="94124681"/><text x="18.1347%" y="2751.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (94,124,681 samples, 38.09%)</title><rect x="17.8847%" y="2725" width="38.0912%" height="15" fill="rgb(210,61,42)" fg:x="44193732" fg:w="94124681"/><text x="18.1347%" y="2735.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (94,124,681 samples, 38.09%)</title><rect x="17.8847%" y="2709" width="38.0912%" height="15" fill="rgb(211,52,33)" fg:x="44193732" fg:w="94124681"/><text x="18.1347%" y="2719.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (94,124,681 samples, 38.09%)</title><rect x="17.8847%" y="2693" width="38.0912%" height="15" fill="rgb(234,58,33)" fg:x="44193732" fg:w="94124681"/><text x="18.1347%" y="2703.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (94,124,681 samples, 38.09%)</title><rect x="17.8847%" y="2677" width="38.0912%" height="15" fill="rgb(220,115,36)" fg:x="44193732" fg:w="94124681"/><text x="18.1347%" y="2687.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (94,124,681 samples, 38.09%)</title><rect x="17.8847%" y="2661" width="38.0912%" height="15" fill="rgb(243,153,54)" fg:x="44193732" fg:w="94124681"/><text x="18.1347%" y="2671.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (94,124,681 samples, 38.09%)</title><rect x="17.8847%" y="2645" width="38.0912%" height="15" fill="rgb(251,47,18)" fg:x="44193732" fg:w="94124681"/><text x="18.1347%" y="2655.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (94,124,681 samples, 38.09%)</title><rect x="17.8847%" y="2629" width="38.0912%" height="15" fill="rgb(242,102,42)" fg:x="44193732" fg:w="94124681"/><text x="18.1347%" y="2639.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (94,124,681 samples, 38.09%)</title><rect x="17.8847%" y="2613" width="38.0912%" height="15" fill="rgb(234,31,38)" fg:x="44193732" fg:w="94124681"/><text x="18.1347%" y="2623.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (94,124,681 samples, 38.09%)</title><rect x="17.8847%" y="2597" width="38.0912%" height="15" fill="rgb(221,117,51)" fg:x="44193732" fg:w="94124681"/><text x="18.1347%" y="2607.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (94,124,681 samples, 38.09%)</title><rect x="17.8847%" y="2581" width="38.0912%" height="15" fill="rgb(212,20,18)" fg:x="44193732" fg:w="94124681"/><text x="18.1347%" y="2591.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (94,124,681 samples, 38.09%)</title><rect x="17.8847%" y="2565" width="38.0912%" height="15" fill="rgb(245,133,36)" fg:x="44193732" fg:w="94124681"/><text x="18.1347%" y="2575.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (94,124,681 samples, 38.09%)</title><rect x="17.8847%" y="2549" width="38.0912%" height="15" fill="rgb(212,6,19)" fg:x="44193732" fg:w="94124681"/><text x="18.1347%" y="2559.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (94,124,681 samples, 38.09%)</title><rect x="17.8847%" y="2533" width="38.0912%" height="15" fill="rgb(218,1,36)" fg:x="44193732" fg:w="94124681"/><text x="18.1347%" y="2543.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (94,124,681 samples, 38.09%)</title><rect x="17.8847%" y="2517" width="38.0912%" height="15" fill="rgb(246,84,54)" fg:x="44193732" fg:w="94124681"/><text x="18.1347%" y="2527.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,877,809 samples, 1.16%)</title><rect x="54.8113%" y="2501" width="1.1646%" height="15" fill="rgb(242,110,6)" fg:x="135440604" fg:w="2877809"/><text x="55.0613%" y="2511.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,877,809 samples, 1.16%)</title><rect x="54.8113%" y="2485" width="1.1646%" height="15" fill="rgb(214,47,5)" fg:x="135440604" fg:w="2877809"/><text x="55.0613%" y="2495.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,877,809 samples, 1.16%)</title><rect x="54.8113%" y="2469" width="1.1646%" height="15" fill="rgb(218,159,25)" fg:x="135440604" fg:w="2877809"/><text x="55.0613%" y="2479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,877,809 samples, 1.16%)</title><rect x="54.8113%" y="2453" width="1.1646%" height="15" fill="rgb(215,211,28)" fg:x="135440604" fg:w="2877809"/><text x="55.0613%" y="2463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,877,809 samples, 1.16%)</title><rect x="54.8113%" y="2437" width="1.1646%" height="15" fill="rgb(238,59,32)" fg:x="135440604" fg:w="2877809"/><text x="55.0613%" y="2447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,877,809 samples, 1.16%)</title><rect x="54.8113%" y="2421" width="1.1646%" height="15" fill="rgb(226,82,3)" fg:x="135440604" fg:w="2877809"/><text x="55.0613%" y="2431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (2,877,809 samples, 1.16%)</title><rect x="54.8113%" y="2405" width="1.1646%" height="15" fill="rgb(240,164,32)" fg:x="135440604" fg:w="2877809"/><text x="55.0613%" y="2415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,877,809 samples, 1.16%)</title><rect x="54.8113%" y="2389" width="1.1646%" height="15" fill="rgb(232,46,7)" fg:x="135440604" fg:w="2877809"/><text x="55.0613%" y="2399.50"></text></g><g><title>[libc.so.6] (2,877,809 samples, 1.16%)</title><rect x="54.8113%" y="2373" width="1.1646%" height="15" fill="rgb(229,129,53)" fg:x="135440604" fg:w="2877809"/><text x="55.0613%" y="2383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,144,684 samples, 1.27%)</title><rect x="55.9759%" y="2709" width="1.2726%" height="15" fill="rgb(234,188,29)" fg:x="138318413" fg:w="3144684"/><text x="56.2259%" y="2719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3,144,684 samples, 1.27%)</title><rect x="55.9759%" y="2693" width="1.2726%" height="15" fill="rgb(246,141,4)" fg:x="138318413" fg:w="3144684"/><text x="56.2259%" y="2703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (3,144,684 samples, 1.27%)</title><rect x="55.9759%" y="2677" width="1.2726%" height="15" fill="rgb(229,23,39)" fg:x="138318413" fg:w="3144684"/><text x="56.2259%" y="2687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,144,684 samples, 1.27%)</title><rect x="55.9759%" y="2661" width="1.2726%" height="15" fill="rgb(206,12,3)" fg:x="138318413" fg:w="3144684"/><text x="56.2259%" y="2671.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,144,684 samples, 1.27%)</title><rect x="55.9759%" y="2645" width="1.2726%" height="15" fill="rgb(252,226,20)" fg:x="138318413" fg:w="3144684"/><text x="56.2259%" y="2655.50"></text></g><g><title>malloc (3,144,684 samples, 1.27%)</title><rect x="55.9759%" y="2629" width="1.2726%" height="15" fill="rgb(216,123,35)" fg:x="138318413" fg:w="3144684"/><text x="56.2259%" y="2639.50"></text></g><g><title>[libc.so.6] (3,144,684 samples, 1.27%)</title><rect x="55.9759%" y="2613" width="1.2726%" height="15" fill="rgb(212,68,40)" fg:x="138318413" fg:w="3144684"/><text x="56.2259%" y="2623.50"></text></g><g><title>benchmark::apply_frame_modifications (5,739,861 samples, 2.32%)</title><rect x="55.9759%" y="2757" width="2.3229%" height="15" fill="rgb(254,125,32)" fg:x="138318413" fg:w="5739861"/><text x="56.2259%" y="2767.50">b..</text></g><g><title>benchmark::json_to_html_node (5,739,861 samples, 2.32%)</title><rect x="55.9759%" y="2741" width="2.3229%" height="15" fill="rgb(253,97,22)" fg:x="138318413" fg:w="5739861"/><text x="56.2259%" y="2751.50">b..</text></g><g><title>benchmark::json_to_html_node (5,739,861 samples, 2.32%)</title><rect x="55.9759%" y="2725" width="2.3229%" height="15" fill="rgb(241,101,14)" fg:x="138318413" fg:w="5739861"/><text x="56.2259%" y="2735.50">b..</text></g><g><title>benchmark::json_to_html_node (2,595,177 samples, 1.05%)</title><rect x="57.2485%" y="2709" width="1.0502%" height="15" fill="rgb(238,103,29)" fg:x="141463097" fg:w="2595177"/><text x="57.4985%" y="2719.50"></text></g><g><title>benchmark::json_to_html_node (2,595,177 samples, 1.05%)</title><rect x="57.2485%" y="2693" width="1.0502%" height="15" fill="rgb(233,195,47)" fg:x="141463097" fg:w="2595177"/><text x="57.4985%" y="2703.50"></text></g><g><title>serde_json::value::Value::as_u64 (2,595,177 samples, 1.05%)</title><rect x="57.2485%" y="2677" width="1.0502%" height="15" fill="rgb(246,218,30)" fg:x="141463097" fg:w="2595177"/><text x="57.4985%" y="2687.50"></text></g><g><title>benchmark::clear_dirty_flags (2,949,325 samples, 1.19%)</title><rect x="58.2987%" y="2757" width="1.1936%" height="15" fill="rgb(219,145,47)" fg:x="144058274" fg:w="2949325"/><text x="58.5487%" y="2767.50"></text></g><g><title>benchmark::clear_dirty_flags (2,949,325 samples, 1.19%)</title><rect x="58.2987%" y="2741" width="1.1936%" height="15" fill="rgb(243,12,26)" fg:x="144058274" fg:w="2949325"/><text x="58.5487%" y="2751.50"></text></g><g><title>benchmark::clear_dirty_flags (2,949,325 samples, 1.19%)</title><rect x="58.2987%" y="2725" width="1.1936%" height="15" fill="rgb(214,87,16)" fg:x="144058274" fg:w="2949325"/><text x="58.5487%" y="2735.50"></text></g><g><title>benchmark::clear_dirty_flags (2,949,325 samples, 1.19%)</title><rect x="58.2987%" y="2709" width="1.1936%" height="15" fill="rgb(208,99,42)" fg:x="144058274" fg:w="2949325"/><text x="58.5487%" y="2719.50"></text></g><g><title>benchmark::clear_dirty_flags (2,949,325 samples, 1.19%)</title><rect x="58.2987%" y="2693" width="1.1936%" height="15" fill="rgb(253,99,2)" fg:x="144058274" fg:w="2949325"/><text x="58.5487%" y="2703.50"></text></g><g><title>benchmark::clear_dirty_flags (2,949,325 samples, 1.19%)</title><rect x="58.2987%" y="2677" width="1.1936%" height="15" fill="rgb(220,168,23)" fg:x="144058274" fg:w="2949325"/><text x="58.5487%" y="2687.50"></text></g><g><title>benchmark::clear_dirty_flags (2,949,325 samples, 1.19%)</title><rect x="58.2987%" y="2661" width="1.1936%" height="15" fill="rgb(242,38,24)" fg:x="144058274" fg:w="2949325"/><text x="58.5487%" y="2671.50"></text></g><g><title>benchmark::clear_dirty_flags (2,949,325 samples, 1.19%)</title><rect x="58.2987%" y="2645" width="1.1936%" height="15" fill="rgb(225,182,9)" fg:x="144058274" fg:w="2949325"/><text x="58.5487%" y="2655.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2757" width="1.1887%" height="15" fill="rgb(243,178,37)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2741" width="1.1887%" height="15" fill="rgb(232,139,19)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2751.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2725" width="1.1887%" height="15" fill="rgb(225,201,24)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2709" width="1.1887%" height="15" fill="rgb(221,47,46)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2693" width="1.1887%" height="15" fill="rgb(249,23,13)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2703.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2677" width="1.1887%" height="15" fill="rgb(219,9,5)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2687.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2661" width="1.1887%" height="15" fill="rgb(254,171,16)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2671.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2645" width="1.1887%" height="15" fill="rgb(230,171,20)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2629" width="1.1887%" height="15" fill="rgb(210,71,41)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2639.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2613" width="1.1887%" height="15" fill="rgb(206,173,20)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2597" width="1.1887%" height="15" fill="rgb(233,88,34)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2581" width="1.1887%" height="15" fill="rgb(223,209,46)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2591.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2565" width="1.1887%" height="15" fill="rgb(250,43,18)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2575.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2549" width="1.1887%" height="15" fill="rgb(208,13,10)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2559.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2533" width="1.1887%" height="15" fill="rgb(212,200,36)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2517" width="1.1887%" height="15" fill="rgb(225,90,30)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2527.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2501" width="1.1887%" height="15" fill="rgb(236,182,39)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2485" width="1.1887%" height="15" fill="rgb(212,144,35)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2469" width="1.1887%" height="15" fill="rgb(228,63,44)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2479.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2453" width="1.1887%" height="15" fill="rgb(228,109,6)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2463.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2437" width="1.1887%" height="15" fill="rgb(238,117,24)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2447.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2421" width="1.1887%" height="15" fill="rgb(242,26,26)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2405" width="1.1887%" height="15" fill="rgb(221,92,48)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2415.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2389" width="1.1887%" height="15" fill="rgb(209,209,32)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2373" width="1.1887%" height="15" fill="rgb(221,70,22)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2357" width="1.1887%" height="15" fill="rgb(248,145,5)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2367.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2341" width="1.1887%" height="15" fill="rgb(226,116,26)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2351.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2325" width="1.1887%" height="15" fill="rgb(244,5,17)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2335.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2309" width="1.1887%" height="15" fill="rgb(252,159,33)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2293" width="1.1887%" height="15" fill="rgb(206,71,0)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2303.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2277" width="1.1887%" height="15" fill="rgb(233,118,54)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2261" width="1.1887%" height="15" fill="rgb(234,83,48)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2245" width="1.1887%" height="15" fill="rgb(228,3,54)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2255.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2229" width="1.1887%" height="15" fill="rgb(226,155,13)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2239.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2213" width="1.1887%" height="15" fill="rgb(241,28,37)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2223.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2197" width="1.1887%" height="15" fill="rgb(233,93,10)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2181" width="1.1887%" height="15" fill="rgb(225,113,19)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2191.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2165" width="1.1887%" height="15" fill="rgb(241,2,18)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2149" width="1.1887%" height="15" fill="rgb(228,207,21)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2159.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2133" width="1.1887%" height="15" fill="rgb(213,211,35)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2143.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2117" width="1.1887%" height="15" fill="rgb(209,83,10)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2127.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2101" width="1.1887%" height="15" fill="rgb(209,164,1)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2111.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2085" width="1.1887%" height="15" fill="rgb(213,184,43)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2095.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2069" width="1.1887%" height="15" fill="rgb(231,61,34)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2079.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2053" width="1.1887%" height="15" fill="rgb(235,75,3)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2063.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2037" width="1.1887%" height="15" fill="rgb(220,106,47)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2047.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2021" width="1.1887%" height="15" fill="rgb(210,196,33)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2031.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="2005" width="1.1887%" height="15" fill="rgb(229,154,42)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="2015.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1989" width="1.1887%" height="15" fill="rgb(228,114,26)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1999.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1973" width="1.1887%" height="15" fill="rgb(208,144,1)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1957" width="1.1887%" height="15" fill="rgb(239,112,37)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1967.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1941" width="1.1887%" height="15" fill="rgb(210,96,50)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1951.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1925" width="1.1887%" height="15" fill="rgb(222,178,2)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1935.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1909" width="1.1887%" height="15" fill="rgb(226,74,18)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1919.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1893" width="1.1887%" height="15" fill="rgb(225,67,54)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1903.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1877" width="1.1887%" height="15" fill="rgb(251,92,32)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1887.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1861" width="1.1887%" height="15" fill="rgb(228,149,22)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1845" width="1.1887%" height="15" fill="rgb(243,54,13)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1855.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1829" width="1.1887%" height="15" fill="rgb(243,180,28)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1813" width="1.1887%" height="15" fill="rgb(208,167,24)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1823.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1797" width="1.1887%" height="15" fill="rgb(245,73,45)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1807.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1781" width="1.1887%" height="15" fill="rgb(237,203,48)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1791.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1765" width="1.1887%" height="15" fill="rgb(211,197,16)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1775.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1749" width="1.1887%" height="15" fill="rgb(243,99,51)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1733" width="1.1887%" height="15" fill="rgb(215,123,29)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1743.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1717" width="1.1887%" height="15" fill="rgb(239,186,37)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1727.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1701" width="1.1887%" height="15" fill="rgb(252,136,39)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1711.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1685" width="1.1887%" height="15" fill="rgb(223,213,32)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1695.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1669" width="1.1887%" height="15" fill="rgb(233,115,5)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1679.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1653" width="1.1887%" height="15" fill="rgb(207,226,44)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1663.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1637" width="1.1887%" height="15" fill="rgb(208,126,0)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1647.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1621" width="1.1887%" height="15" fill="rgb(244,66,21)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1631.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1605" width="1.1887%" height="15" fill="rgb(222,97,12)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1615.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1589" width="1.1887%" height="15" fill="rgb(219,213,19)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1599.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1573" width="1.1887%" height="15" fill="rgb(252,169,30)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1583.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1557" width="1.1887%" height="15" fill="rgb(206,32,51)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1567.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1541" width="1.1887%" height="15" fill="rgb(250,172,42)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1551.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1525" width="1.1887%" height="15" fill="rgb(209,34,43)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1509" width="1.1887%" height="15" fill="rgb(223,11,35)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1519.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1493" width="1.1887%" height="15" fill="rgb(251,219,26)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1503.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1477" width="1.1887%" height="15" fill="rgb(231,119,3)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1487.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1461" width="1.1887%" height="15" fill="rgb(216,97,11)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1471.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1445" width="1.1887%" height="15" fill="rgb(223,59,9)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1455.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1429" width="1.1887%" height="15" fill="rgb(233,93,31)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1439.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1413" width="1.1887%" height="15" fill="rgb(239,81,33)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1423.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1397" width="1.1887%" height="15" fill="rgb(213,120,34)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1407.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1381" width="1.1887%" height="15" fill="rgb(243,49,53)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1391.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1365" width="1.1887%" height="15" fill="rgb(247,216,33)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1375.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1349" width="1.1887%" height="15" fill="rgb(226,26,14)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1359.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1333" width="1.1887%" height="15" fill="rgb(215,49,53)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1343.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1317" width="1.1887%" height="15" fill="rgb(245,162,40)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1327.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1301" width="1.1887%" height="15" fill="rgb(229,68,17)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1285" width="1.1887%" height="15" fill="rgb(213,182,10)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1295.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1269" width="1.1887%" height="15" fill="rgb(245,125,30)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1253" width="1.1887%" height="15" fill="rgb(232,202,2)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1263.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1237" width="1.1887%" height="15" fill="rgb(237,140,51)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1247.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1221" width="1.1887%" height="15" fill="rgb(236,157,25)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1231.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1205" width="1.1887%" height="15" fill="rgb(219,209,0)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1215.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1189" width="1.1887%" height="15" fill="rgb(240,116,54)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1173" width="1.1887%" height="15" fill="rgb(216,10,36)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1183.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1157" width="1.1887%" height="15" fill="rgb(222,72,44)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1141" width="1.1887%" height="15" fill="rgb(232,159,9)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1125" width="1.1887%" height="15" fill="rgb(210,39,32)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1135.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1109" width="1.1887%" height="15" fill="rgb(216,194,45)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1119.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1093" width="1.1887%" height="15" fill="rgb(218,18,35)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1103.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1077" width="1.1887%" height="15" fill="rgb(207,83,51)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1061" width="1.1887%" height="15" fill="rgb(225,63,43)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1071.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1045" width="1.1887%" height="15" fill="rgb(207,57,36)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1029" width="1.1887%" height="15" fill="rgb(216,99,33)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="1013" width="1.1887%" height="15" fill="rgb(225,42,16)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1023.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="997" width="1.1887%" height="15" fill="rgb(220,201,45)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="1007.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="981" width="1.1887%" height="15" fill="rgb(225,33,4)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="991.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="965" width="1.1887%" height="15" fill="rgb(224,33,50)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="949" width="1.1887%" height="15" fill="rgb(246,198,51)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="959.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="933" width="1.1887%" height="15" fill="rgb(205,22,4)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="917" width="1.1887%" height="15" fill="rgb(206,3,8)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="901" width="1.1887%" height="15" fill="rgb(251,23,15)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="885" width="1.1887%" height="15" fill="rgb(252,88,28)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="895.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="869" width="1.1887%" height="15" fill="rgb(212,127,14)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="879.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="853" width="1.1887%" height="15" fill="rgb(247,145,37)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="837" width="1.1887%" height="15" fill="rgb(209,117,53)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="847.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="821" width="1.1887%" height="15" fill="rgb(212,90,42)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="805" width="1.1887%" height="15" fill="rgb(218,164,37)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="789" width="1.1887%" height="15" fill="rgb(246,65,34)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="799.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="773" width="1.1887%" height="15" fill="rgb(231,100,33)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="783.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="757" width="1.1887%" height="15" fill="rgb(228,126,14)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="767.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="741" width="1.1887%" height="15" fill="rgb(215,173,21)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="725" width="1.1887%" height="15" fill="rgb(210,6,40)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="735.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="709" width="1.1887%" height="15" fill="rgb(212,48,18)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="693" width="1.1887%" height="15" fill="rgb(230,214,11)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="677" width="1.1887%" height="15" fill="rgb(254,105,39)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="661" width="1.1887%" height="15" fill="rgb(245,158,5)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="671.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="645" width="1.1887%" height="15" fill="rgb(249,208,11)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="655.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="629" width="1.1887%" height="15" fill="rgb(210,39,28)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="613" width="1.1887%" height="15" fill="rgb(211,56,53)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="623.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="597" width="1.1887%" height="15" fill="rgb(226,201,30)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="581" width="1.1887%" height="15" fill="rgb(239,101,34)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="565" width="1.1887%" height="15" fill="rgb(226,209,5)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="575.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="549" width="1.1887%" height="15" fill="rgb(250,105,47)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="559.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="533" width="1.1887%" height="15" fill="rgb(230,72,3)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="543.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="517" width="1.1887%" height="15" fill="rgb(232,218,39)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="501" width="1.1887%" height="15" fill="rgb(248,166,6)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="511.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="485" width="1.1887%" height="15" fill="rgb(247,89,20)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="469" width="1.1887%" height="15" fill="rgb(248,130,54)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="453" width="1.1887%" height="15" fill="rgb(234,196,4)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="437" width="1.1887%" height="15" fill="rgb(250,143,31)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="447.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="421" width="1.1887%" height="15" fill="rgb(211,110,34)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="431.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="405" width="1.1887%" height="15" fill="rgb(215,124,48)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="389" width="1.1887%" height="15" fill="rgb(216,46,13)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="399.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="373" width="1.1887%" height="15" fill="rgb(205,184,25)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="357" width="1.1887%" height="15" fill="rgb(228,1,10)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="341" width="1.1887%" height="15" fill="rgb(213,116,27)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="325" width="1.1887%" height="15" fill="rgb(241,95,50)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="335.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="309" width="1.1887%" height="15" fill="rgb(238,48,32)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="319.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="293" width="1.1887%" height="15" fill="rgb(235,113,49)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="277" width="1.1887%" height="15" fill="rgb(205,127,43)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="287.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="261" width="1.1887%" height="15" fill="rgb(250,162,2)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="245" width="1.1887%" height="15" fill="rgb(220,13,41)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="229" width="1.1887%" height="15" fill="rgb(249,221,25)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="239.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="213" width="1.1887%" height="15" fill="rgb(215,208,19)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="223.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="197" width="1.1887%" height="15" fill="rgb(236,175,2)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="207.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="181" width="1.1887%" height="15" fill="rgb(241,52,2)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="165" width="1.1887%" height="15" fill="rgb(248,140,14)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="175.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="149" width="1.1887%" height="15" fill="rgb(253,22,42)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="133" width="1.1887%" height="15" fill="rgb(234,61,47)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="143.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="117" width="1.1887%" height="15" fill="rgb(208,226,15)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="127.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="101" width="1.1887%" height="15" fill="rgb(217,221,4)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="111.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="85" width="1.1887%" height="15" fill="rgb(212,174,34)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="95.50"></text></g><g><title>benchmark::count_nodes (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="69" width="1.1887%" height="15" fill="rgb(253,83,4)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="79.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="53" width="1.1887%" height="15" fill="rgb(250,195,49)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="63.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2,937,202 samples, 1.19%)</title><rect x="59.4923%" y="37" width="1.1887%" height="15" fill="rgb(241,192,25)" fg:x="147007599" fg:w="2937202"/><text x="59.7423%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,125,545 samples, 1.26%)</title><rect x="60.6809%" y="2229" width="1.2649%" height="15" fill="rgb(208,124,10)" fg:x="149944801" fg:w="3125545"/><text x="60.9309%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,125,545 samples, 1.26%)</title><rect x="60.6809%" y="2213" width="1.2649%" height="15" fill="rgb(222,33,0)" fg:x="149944801" fg:w="3125545"/><text x="60.9309%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,125,545 samples, 1.26%)</title><rect x="60.6809%" y="2197" width="1.2649%" height="15" fill="rgb(234,209,28)" fg:x="149944801" fg:w="3125545"/><text x="60.9309%" y="2207.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,125,545 samples, 1.26%)</title><rect x="60.6809%" y="2181" width="1.2649%" height="15" fill="rgb(224,11,23)" fg:x="149944801" fg:w="3125545"/><text x="60.9309%" y="2191.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,125,545 samples, 1.26%)</title><rect x="60.6809%" y="2165" width="1.2649%" height="15" fill="rgb(232,99,1)" fg:x="149944801" fg:w="3125545"/><text x="60.9309%" y="2175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,125,545 samples, 1.26%)</title><rect x="60.6809%" y="2149" width="1.2649%" height="15" fill="rgb(237,95,45)" fg:x="149944801" fg:w="3125545"/><text x="60.9309%" y="2159.50"></text></g><g><title>alloc::alloc::dealloc (3,125,545 samples, 1.26%)</title><rect x="60.6809%" y="2133" width="1.2649%" height="15" fill="rgb(208,109,11)" fg:x="149944801" fg:w="3125545"/><text x="60.9309%" y="2143.50"></text></g><g><title>cfree (3,125,545 samples, 1.26%)</title><rect x="60.6809%" y="2117" width="1.2649%" height="15" fill="rgb(216,190,48)" fg:x="149944801" fg:w="3125545"/><text x="60.9309%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,054,481 samples, 1.24%)</title><rect x="61.9458%" y="1653" width="1.2361%" height="15" fill="rgb(251,171,36)" fg:x="153070346" fg:w="3054481"/><text x="62.1958%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,054,481 samples, 1.24%)</title><rect x="61.9458%" y="1637" width="1.2361%" height="15" fill="rgb(230,62,22)" fg:x="153070346" fg:w="3054481"/><text x="62.1958%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,054,481 samples, 1.24%)</title><rect x="61.9458%" y="1621" width="1.2361%" height="15" fill="rgb(225,114,35)" fg:x="153070346" fg:w="3054481"/><text x="62.1958%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,054,481 samples, 1.24%)</title><rect x="61.9458%" y="1605" width="1.2361%" height="15" fill="rgb(215,118,42)" fg:x="153070346" fg:w="3054481"/><text x="62.1958%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,054,481 samples, 1.24%)</title><rect x="61.9458%" y="1589" width="1.2361%" height="15" fill="rgb(243,119,21)" fg:x="153070346" fg:w="3054481"/><text x="62.1958%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,054,481 samples, 1.24%)</title><rect x="61.9458%" y="1573" width="1.2361%" height="15" fill="rgb(252,177,53)" fg:x="153070346" fg:w="3054481"/><text x="62.1958%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,054,481 samples, 1.24%)</title><rect x="61.9458%" y="1557" width="1.2361%" height="15" fill="rgb(237,209,29)" fg:x="153070346" fg:w="3054481"/><text x="62.1958%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,054,481 samples, 1.24%)</title><rect x="61.9458%" y="1541" width="1.2361%" height="15" fill="rgb(212,65,23)" fg:x="153070346" fg:w="3054481"/><text x="62.1958%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,054,481 samples, 1.24%)</title><rect x="61.9458%" y="1525" width="1.2361%" height="15" fill="rgb(230,222,46)" fg:x="153070346" fg:w="3054481"/><text x="62.1958%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,054,481 samples, 1.24%)</title><rect x="61.9458%" y="1509" width="1.2361%" height="15" fill="rgb(215,135,32)" fg:x="153070346" fg:w="3054481"/><text x="62.1958%" y="1519.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,054,481 samples, 1.24%)</title><rect x="61.9458%" y="1493" width="1.2361%" height="15" fill="rgb(246,101,22)" fg:x="153070346" fg:w="3054481"/><text x="62.1958%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,054,481 samples, 1.24%)</title><rect x="61.9458%" y="1477" width="1.2361%" height="15" fill="rgb(206,107,13)" fg:x="153070346" fg:w="3054481"/><text x="62.1958%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,054,481 samples, 1.24%)</title><rect x="61.9458%" y="1461" width="1.2361%" height="15" fill="rgb(250,100,44)" fg:x="153070346" fg:w="3054481"/><text x="62.1958%" y="1471.50"></text></g><g><title>alloc::alloc::dealloc (3,054,481 samples, 1.24%)</title><rect x="61.9458%" y="1445" width="1.2361%" height="15" fill="rgb(231,147,38)" fg:x="153070346" fg:w="3054481"/><text x="62.1958%" y="1455.50"></text></g><g><title>cfree (3,054,481 samples, 1.24%)</title><rect x="61.9458%" y="1429" width="1.2361%" height="15" fill="rgb(229,8,40)" fg:x="153070346" fg:w="3054481"/><text x="62.1958%" y="1439.50"></text></g><g><title>[libc.so.6] (3,054,481 samples, 1.24%)</title><rect x="61.9458%" y="1413" width="1.2361%" height="15" fill="rgb(221,135,30)" fg:x="153070346" fg:w="3054481"/><text x="62.1958%" y="1423.50"></text></g><g><title>[libc.so.6] (3,054,481 samples, 1.24%)</title><rect x="61.9458%" y="1397" width="1.2361%" height="15" fill="rgb(249,193,18)" fg:x="153070346" fg:w="3054481"/><text x="62.1958%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (6,077,871 samples, 2.46%)</title><rect x="61.9458%" y="1781" width="2.4596%" height="15" fill="rgb(209,133,39)" fg:x="153070346" fg:w="6077871"/><text x="62.1958%" y="1791.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,077,871 samples, 2.46%)</title><rect x="61.9458%" y="1765" width="2.4596%" height="15" fill="rgb(232,100,14)" fg:x="153070346" fg:w="6077871"/><text x="62.1958%" y="1775.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (6,077,871 samples, 2.46%)</title><rect x="61.9458%" y="1749" width="2.4596%" height="15" fill="rgb(224,185,1)" fg:x="153070346" fg:w="6077871"/><text x="62.1958%" y="1759.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (6,077,871 samples, 2.46%)</title><rect x="61.9458%" y="1733" width="2.4596%" height="15" fill="rgb(223,139,8)" fg:x="153070346" fg:w="6077871"/><text x="62.1958%" y="1743.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (6,077,871 samples, 2.46%)</title><rect x="61.9458%" y="1717" width="2.4596%" height="15" fill="rgb(232,213,38)" fg:x="153070346" fg:w="6077871"/><text x="62.1958%" y="1727.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,077,871 samples, 2.46%)</title><rect x="61.9458%" y="1701" width="2.4596%" height="15" fill="rgb(207,94,22)" fg:x="153070346" fg:w="6077871"/><text x="62.1958%" y="1711.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (6,077,871 samples, 2.46%)</title><rect x="61.9458%" y="1685" width="2.4596%" height="15" fill="rgb(219,183,54)" fg:x="153070346" fg:w="6077871"/><text x="62.1958%" y="1695.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (6,077,871 samples, 2.46%)</title><rect x="61.9458%" y="1669" width="2.4596%" height="15" fill="rgb(216,185,54)" fg:x="153070346" fg:w="6077871"/><text x="62.1958%" y="1679.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (3,023,390 samples, 1.22%)</title><rect x="63.1819%" y="1653" width="1.2235%" height="15" fill="rgb(254,217,39)" fg:x="156124827" fg:w="3023390"/><text x="63.4319%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (3,023,390 samples, 1.22%)</title><rect x="63.1819%" y="1637" width="1.2235%" height="15" fill="rgb(240,178,23)" fg:x="156124827" fg:w="3023390"/><text x="63.4319%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (3,023,390 samples, 1.22%)</title><rect x="63.1819%" y="1621" width="1.2235%" height="15" fill="rgb(218,11,47)" fg:x="156124827" fg:w="3023390"/><text x="63.4319%" y="1631.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,023,390 samples, 1.22%)</title><rect x="63.1819%" y="1605" width="1.2235%" height="15" fill="rgb(218,51,51)" fg:x="156124827" fg:w="3023390"/><text x="63.4319%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,023,390 samples, 1.22%)</title><rect x="63.1819%" y="1589" width="1.2235%" height="15" fill="rgb(238,126,27)" fg:x="156124827" fg:w="3023390"/><text x="63.4319%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,023,390 samples, 1.22%)</title><rect x="63.1819%" y="1573" width="1.2235%" height="15" fill="rgb(249,202,22)" fg:x="156124827" fg:w="3023390"/><text x="63.4319%" y="1583.50"></text></g><g><title>alloc::alloc::dealloc (3,023,390 samples, 1.22%)</title><rect x="63.1819%" y="1557" width="1.2235%" height="15" fill="rgb(254,195,49)" fg:x="156124827" fg:w="3023390"/><text x="63.4319%" y="1567.50"></text></g><g><title>__rdl_dealloc (3,023,390 samples, 1.22%)</title><rect x="63.1819%" y="1541" width="1.2235%" height="15" fill="rgb(208,123,14)" fg:x="156124827" fg:w="3023390"/><text x="63.4319%" y="1551.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3,023,390 samples, 1.22%)</title><rect x="63.1819%" y="1525" width="1.2235%" height="15" fill="rgb(224,200,8)" fg:x="156124827" fg:w="3023390"/><text x="63.4319%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,177,962 samples, 3.71%)</title><rect x="61.9458%" y="2037" width="3.7142%" height="15" fill="rgb(217,61,36)" fg:x="153070346" fg:w="9177962"/><text x="62.1958%" y="2047.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,177,962 samples, 3.71%)</title><rect x="61.9458%" y="2021" width="3.7142%" height="15" fill="rgb(206,35,45)" fg:x="153070346" fg:w="9177962"/><text x="62.1958%" y="2031.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,177,962 samples, 3.71%)</title><rect x="61.9458%" y="2005" width="3.7142%" height="15" fill="rgb(217,65,33)" fg:x="153070346" fg:w="9177962"/><text x="62.1958%" y="2015.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,177,962 samples, 3.71%)</title><rect x="61.9458%" y="1989" width="3.7142%" height="15" fill="rgb(222,158,48)" fg:x="153070346" fg:w="9177962"/><text x="62.1958%" y="1999.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,177,962 samples, 3.71%)</title><rect x="61.9458%" y="1973" width="3.7142%" height="15" fill="rgb(254,2,54)" fg:x="153070346" fg:w="9177962"/><text x="62.1958%" y="1983.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,177,962 samples, 3.71%)</title><rect x="61.9458%" y="1957" width="3.7142%" height="15" fill="rgb(250,143,38)" fg:x="153070346" fg:w="9177962"/><text x="62.1958%" y="1967.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,177,962 samples, 3.71%)</title><rect x="61.9458%" y="1941" width="3.7142%" height="15" fill="rgb(248,25,0)" fg:x="153070346" fg:w="9177962"/><text x="62.1958%" y="1951.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,177,962 samples, 3.71%)</title><rect x="61.9458%" y="1925" width="3.7142%" height="15" fill="rgb(206,152,27)" fg:x="153070346" fg:w="9177962"/><text x="62.1958%" y="1935.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,177,962 samples, 3.71%)</title><rect x="61.9458%" y="1909" width="3.7142%" height="15" fill="rgb(240,77,30)" fg:x="153070346" fg:w="9177962"/><text x="62.1958%" y="1919.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,177,962 samples, 3.71%)</title><rect x="61.9458%" y="1893" width="3.7142%" height="15" fill="rgb(231,5,3)" fg:x="153070346" fg:w="9177962"/><text x="62.1958%" y="1903.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,177,962 samples, 3.71%)</title><rect x="61.9458%" y="1877" width="3.7142%" height="15" fill="rgb(207,226,32)" fg:x="153070346" fg:w="9177962"/><text x="62.1958%" y="1887.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,177,962 samples, 3.71%)</title><rect x="61.9458%" y="1861" width="3.7142%" height="15" fill="rgb(222,207,47)" fg:x="153070346" fg:w="9177962"/><text x="62.1958%" y="1871.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,177,962 samples, 3.71%)</title><rect x="61.9458%" y="1845" width="3.7142%" height="15" fill="rgb(229,115,45)" fg:x="153070346" fg:w="9177962"/><text x="62.1958%" y="1855.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,177,962 samples, 3.71%)</title><rect x="61.9458%" y="1829" width="3.7142%" height="15" fill="rgb(224,191,6)" fg:x="153070346" fg:w="9177962"/><text x="62.1958%" y="1839.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,177,962 samples, 3.71%)</title><rect x="61.9458%" y="1813" width="3.7142%" height="15" fill="rgb(230,227,24)" fg:x="153070346" fg:w="9177962"/><text x="62.1958%" y="1823.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,177,962 samples, 3.71%)</title><rect x="61.9458%" y="1797" width="3.7142%" height="15" fill="rgb(228,80,19)" fg:x="153070346" fg:w="9177962"/><text x="62.1958%" y="1807.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (3,100,091 samples, 1.25%)</title><rect x="64.4055%" y="1781" width="1.2546%" height="15" fill="rgb(247,229,0)" fg:x="159148217" fg:w="3100091"/><text x="64.6555%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (3,100,091 samples, 1.25%)</title><rect x="64.4055%" y="1765" width="1.2546%" height="15" fill="rgb(237,194,15)" fg:x="159148217" fg:w="3100091"/><text x="64.6555%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (3,100,091 samples, 1.25%)</title><rect x="64.4055%" y="1749" width="1.2546%" height="15" fill="rgb(219,203,20)" fg:x="159148217" fg:w="3100091"/><text x="64.6555%" y="1759.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,100,091 samples, 1.25%)</title><rect x="64.4055%" y="1733" width="1.2546%" height="15" fill="rgb(234,128,8)" fg:x="159148217" fg:w="3100091"/><text x="64.6555%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,100,091 samples, 1.25%)</title><rect x="64.4055%" y="1717" width="1.2546%" height="15" fill="rgb(248,202,8)" fg:x="159148217" fg:w="3100091"/><text x="64.6555%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,100,091 samples, 1.25%)</title><rect x="64.4055%" y="1701" width="1.2546%" height="15" fill="rgb(206,104,37)" fg:x="159148217" fg:w="3100091"/><text x="64.6555%" y="1711.50"></text></g><g><title>alloc::alloc::dealloc (3,100,091 samples, 1.25%)</title><rect x="64.4055%" y="1685" width="1.2546%" height="15" fill="rgb(223,8,27)" fg:x="159148217" fg:w="3100091"/><text x="64.6555%" y="1695.50"></text></g><g><title>__rust_dealloc (3,100,091 samples, 1.25%)</title><rect x="64.4055%" y="1669" width="1.2546%" height="15" fill="rgb(216,217,28)" fg:x="159148217" fg:w="3100091"/><text x="64.6555%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (12,328,120 samples, 4.99%)</title><rect x="61.9458%" y="2101" width="4.9890%" height="15" fill="rgb(249,199,1)" fg:x="153070346" fg:w="12328120"/><text x="62.1958%" y="2111.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,328,120 samples, 4.99%)</title><rect x="61.9458%" y="2085" width="4.9890%" height="15" fill="rgb(240,85,17)" fg:x="153070346" fg:w="12328120"/><text x="62.1958%" y="2095.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (12,328,120 samples, 4.99%)</title><rect x="61.9458%" y="2069" width="4.9890%" height="15" fill="rgb(206,108,45)" fg:x="153070346" fg:w="12328120"/><text x="62.1958%" y="2079.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (12,328,120 samples, 4.99%)</title><rect x="61.9458%" y="2053" width="4.9890%" height="15" fill="rgb(245,210,41)" fg:x="153070346" fg:w="12328120"/><text x="62.1958%" y="2063.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (3,150,158 samples, 1.27%)</title><rect x="65.6600%" y="2037" width="1.2748%" height="15" fill="rgb(206,13,37)" fg:x="162248308" fg:w="3150158"/><text x="65.9100%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (3,150,158 samples, 1.27%)</title><rect x="65.6600%" y="2021" width="1.2748%" height="15" fill="rgb(250,61,18)" fg:x="162248308" fg:w="3150158"/><text x="65.9100%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (3,150,158 samples, 1.27%)</title><rect x="65.6600%" y="2005" width="1.2748%" height="15" fill="rgb(235,172,48)" fg:x="162248308" fg:w="3150158"/><text x="65.9100%" y="2015.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,150,158 samples, 1.27%)</title><rect x="65.6600%" y="1989" width="1.2748%" height="15" fill="rgb(249,201,17)" fg:x="162248308" fg:w="3150158"/><text x="65.9100%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,150,158 samples, 1.27%)</title><rect x="65.6600%" y="1973" width="1.2748%" height="15" fill="rgb(219,208,6)" fg:x="162248308" fg:w="3150158"/><text x="65.9100%" y="1983.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,150,158 samples, 1.27%)</title><rect x="65.6600%" y="1957" width="1.2748%" height="15" fill="rgb(248,31,23)" fg:x="162248308" fg:w="3150158"/><text x="65.9100%" y="1967.50"></text></g><g><title>alloc::alloc::dealloc (3,150,158 samples, 1.27%)</title><rect x="65.6600%" y="1941" width="1.2748%" height="15" fill="rgb(245,15,42)" fg:x="162248308" fg:w="3150158"/><text x="65.9100%" y="1951.50"></text></g><g><title>cfree (3,150,158 samples, 1.27%)</title><rect x="65.6600%" y="1925" width="1.2748%" height="15" fill="rgb(222,217,39)" fg:x="162248308" fg:w="3150158"/><text x="65.9100%" y="1935.50"></text></g><g><title>[libc.so.6] (3,150,158 samples, 1.27%)</title><rect x="65.6600%" y="1909" width="1.2748%" height="15" fill="rgb(210,219,27)" fg:x="162248308" fg:w="3150158"/><text x="65.9100%" y="1919.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3,155,157 samples, 1.28%)</title><rect x="66.9349%" y="2005" width="1.2769%" height="15" fill="rgb(252,166,36)" fg:x="165398466" fg:w="3155157"/><text x="67.1849%" y="2015.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3,155,157 samples, 1.28%)</title><rect x="66.9349%" y="1989" width="1.2769%" height="15" fill="rgb(245,132,34)" fg:x="165398466" fg:w="3155157"/><text x="67.1849%" y="1999.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3,155,157 samples, 1.28%)</title><rect x="66.9349%" y="1973" width="1.2769%" height="15" fill="rgb(236,54,3)" fg:x="165398466" fg:w="3155157"/><text x="67.1849%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (3,155,157 samples, 1.28%)</title><rect x="66.9349%" y="1957" width="1.2769%" height="15" fill="rgb(241,173,43)" fg:x="165398466" fg:w="3155157"/><text x="67.1849%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,155,157 samples, 1.28%)</title><rect x="66.9349%" y="1941" width="1.2769%" height="15" fill="rgb(215,190,9)" fg:x="165398466" fg:w="3155157"/><text x="67.1849%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,155,157 samples, 1.28%)</title><rect x="66.9349%" y="1925" width="1.2769%" height="15" fill="rgb(242,101,16)" fg:x="165398466" fg:w="3155157"/><text x="67.1849%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,155,157 samples, 1.28%)</title><rect x="66.9349%" y="1909" width="1.2769%" height="15" fill="rgb(223,190,21)" fg:x="165398466" fg:w="3155157"/><text x="67.1849%" y="1919.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,155,157 samples, 1.28%)</title><rect x="66.9349%" y="1893" width="1.2769%" height="15" fill="rgb(215,228,25)" fg:x="165398466" fg:w="3155157"/><text x="67.1849%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,155,157 samples, 1.28%)</title><rect x="66.9349%" y="1877" width="1.2769%" height="15" fill="rgb(225,36,22)" fg:x="165398466" fg:w="3155157"/><text x="67.1849%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (3,155,157 samples, 1.28%)</title><rect x="66.9349%" y="1861" width="1.2769%" height="15" fill="rgb(251,106,46)" fg:x="165398466" fg:w="3155157"/><text x="67.1849%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (18,616,712 samples, 7.53%)</title><rect x="61.9458%" y="2165" width="7.5340%" height="15" fill="rgb(208,90,1)" fg:x="153070346" fg:w="18616712"/><text x="62.1958%" y="2175.50">core::ptr:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18,616,712 samples, 7.53%)</title><rect x="61.9458%" y="2149" width="7.5340%" height="15" fill="rgb(243,10,4)" fg:x="153070346" fg:w="18616712"/><text x="62.1958%" y="2159.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (18,616,712 samples, 7.53%)</title><rect x="61.9458%" y="2133" width="7.5340%" height="15" fill="rgb(212,137,27)" fg:x="153070346" fg:w="18616712"/><text x="62.1958%" y="2143.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (18,616,712 samples, 7.53%)</title><rect x="61.9458%" y="2117" width="7.5340%" height="15" fill="rgb(231,220,49)" fg:x="153070346" fg:w="18616712"/><text x="62.1958%" y="2127.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (6,288,592 samples, 2.54%)</title><rect x="66.9349%" y="2101" width="2.5449%" height="15" fill="rgb(237,96,20)" fg:x="165398466" fg:w="6288592"/><text x="67.1849%" y="2111.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (6,288,592 samples, 2.54%)</title><rect x="66.9349%" y="2085" width="2.5449%" height="15" fill="rgb(239,229,30)" fg:x="165398466" fg:w="6288592"/><text x="67.1849%" y="2095.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (6,288,592 samples, 2.54%)</title><rect x="66.9349%" y="2069" width="2.5449%" height="15" fill="rgb(219,65,33)" fg:x="165398466" fg:w="6288592"/><text x="67.1849%" y="2079.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (6,288,592 samples, 2.54%)</title><rect x="66.9349%" y="2053" width="2.5449%" height="15" fill="rgb(243,134,7)" fg:x="165398466" fg:w="6288592"/><text x="67.1849%" y="2063.50">co..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,288,592 samples, 2.54%)</title><rect x="66.9349%" y="2037" width="2.5449%" height="15" fill="rgb(216,177,54)" fg:x="165398466" fg:w="6288592"/><text x="67.1849%" y="2047.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (6,288,592 samples, 2.54%)</title><rect x="66.9349%" y="2021" width="2.5449%" height="15" fill="rgb(211,160,20)" fg:x="165398466" fg:w="6288592"/><text x="67.1849%" y="2031.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (3,133,435 samples, 1.27%)</title><rect x="68.2117%" y="2005" width="1.2681%" height="15" fill="rgb(239,85,39)" fg:x="168553623" fg:w="3133435"/><text x="68.4617%" y="2015.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,133,435 samples, 1.27%)</title><rect x="68.2117%" y="1989" width="1.2681%" height="15" fill="rgb(232,125,22)" fg:x="168553623" fg:w="3133435"/><text x="68.4617%" y="1999.50"></text></g><g><title>alloc::alloc::dealloc (3,133,435 samples, 1.27%)</title><rect x="68.2117%" y="1973" width="1.2681%" height="15" fill="rgb(244,57,34)" fg:x="168553623" fg:w="3133435"/><text x="68.4617%" y="1983.50"></text></g><g><title>cfree (3,133,435 samples, 1.27%)</title><rect x="68.2117%" y="1957" width="1.2681%" height="15" fill="rgb(214,203,32)" fg:x="168553623" fg:w="3133435"/><text x="68.4617%" y="1967.50"></text></g><g><title>[libc.so.6] (3,133,435 samples, 1.27%)</title><rect x="68.2117%" y="1941" width="1.2681%" height="15" fill="rgb(207,58,43)" fg:x="168553623" fg:w="3133435"/><text x="68.4617%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (3,104,995 samples, 1.26%)</title><rect x="69.4798%" y="2165" width="1.2566%" height="15" fill="rgb(215,193,15)" fg:x="171687058" fg:w="3104995"/><text x="69.7298%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (3,104,995 samples, 1.26%)</title><rect x="69.4798%" y="2149" width="1.2566%" height="15" fill="rgb(232,15,44)" fg:x="171687058" fg:w="3104995"/><text x="69.7298%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (3,104,995 samples, 1.26%)</title><rect x="69.4798%" y="2133" width="1.2566%" height="15" fill="rgb(212,3,48)" fg:x="171687058" fg:w="3104995"/><text x="69.7298%" y="2143.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,104,995 samples, 1.26%)</title><rect x="69.4798%" y="2117" width="1.2566%" height="15" fill="rgb(218,128,7)" fg:x="171687058" fg:w="3104995"/><text x="69.7298%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,104,995 samples, 1.26%)</title><rect x="69.4798%" y="2101" width="1.2566%" height="15" fill="rgb(226,216,39)" fg:x="171687058" fg:w="3104995"/><text x="69.7298%" y="2111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,104,995 samples, 1.26%)</title><rect x="69.4798%" y="2085" width="1.2566%" height="15" fill="rgb(243,47,51)" fg:x="171687058" fg:w="3104995"/><text x="69.7298%" y="2095.50"></text></g><g><title>alloc::alloc::dealloc (3,104,995 samples, 1.26%)</title><rect x="69.4798%" y="2069" width="1.2566%" height="15" fill="rgb(241,183,40)" fg:x="171687058" fg:w="3104995"/><text x="69.7298%" y="2079.50"></text></g><g><title>cfree (3,104,995 samples, 1.26%)</title><rect x="69.4798%" y="2053" width="1.2566%" height="15" fill="rgb(231,217,32)" fg:x="171687058" fg:w="3104995"/><text x="69.7298%" y="2063.50"></text></g><g><title>[libc.so.6] (3,104,995 samples, 1.26%)</title><rect x="69.4798%" y="2037" width="1.2566%" height="15" fill="rgb(229,61,38)" fg:x="171687058" fg:w="3104995"/><text x="69.7298%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (24,852,485 samples, 10.06%)</title><rect x="61.9458%" y="2229" width="10.0575%" height="15" fill="rgb(225,210,5)" fg:x="153070346" fg:w="24852485"/><text x="62.1958%" y="2239.50">core::ptr::drop..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24,852,485 samples, 10.06%)</title><rect x="61.9458%" y="2213" width="10.0575%" height="15" fill="rgb(231,79,45)" fg:x="153070346" fg:w="24852485"/><text x="62.1958%" y="2223.50">&lt;alloc::vec::Ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (24,852,485 samples, 10.06%)</title><rect x="61.9458%" y="2197" width="10.0575%" height="15" fill="rgb(224,100,7)" fg:x="153070346" fg:w="24852485"/><text x="62.1958%" y="2207.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (24,852,485 samples, 10.06%)</title><rect x="61.9458%" y="2181" width="10.0575%" height="15" fill="rgb(241,198,18)" fg:x="153070346" fg:w="24852485"/><text x="62.1958%" y="2191.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,130,778 samples, 1.27%)</title><rect x="70.7363%" y="2165" width="1.2670%" height="15" fill="rgb(252,97,53)" fg:x="174792053" fg:w="3130778"/><text x="70.9863%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,130,778 samples, 1.27%)</title><rect x="70.7363%" y="2149" width="1.2670%" height="15" fill="rgb(220,88,7)" fg:x="174792053" fg:w="3130778"/><text x="70.9863%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,130,778 samples, 1.27%)</title><rect x="70.7363%" y="2133" width="1.2670%" height="15" fill="rgb(213,176,14)" fg:x="174792053" fg:w="3130778"/><text x="70.9863%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,130,778 samples, 1.27%)</title><rect x="70.7363%" y="2117" width="1.2670%" height="15" fill="rgb(246,73,7)" fg:x="174792053" fg:w="3130778"/><text x="70.9863%" y="2127.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,130,778 samples, 1.27%)</title><rect x="70.7363%" y="2101" width="1.2670%" height="15" fill="rgb(245,64,36)" fg:x="174792053" fg:w="3130778"/><text x="70.9863%" y="2111.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,130,778 samples, 1.27%)</title><rect x="70.7363%" y="2085" width="1.2670%" height="15" fill="rgb(245,80,10)" fg:x="174792053" fg:w="3130778"/><text x="70.9863%" y="2095.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (3,130,778 samples, 1.27%)</title><rect x="70.7363%" y="2069" width="1.2670%" height="15" fill="rgb(232,107,50)" fg:x="174792053" fg:w="3130778"/><text x="70.9863%" y="2079.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,130,778 samples, 1.27%)</title><rect x="70.7363%" y="2053" width="1.2670%" height="15" fill="rgb(253,3,0)" fg:x="174792053" fg:w="3130778"/><text x="70.9863%" y="2063.50"></text></g><g><title>alloc::alloc::dealloc (3,130,778 samples, 1.27%)</title><rect x="70.7363%" y="2037" width="1.2670%" height="15" fill="rgb(212,99,53)" fg:x="174792053" fg:w="3130778"/><text x="70.9863%" y="2047.50"></text></g><g><title>cfree (3,130,778 samples, 1.27%)</title><rect x="70.7363%" y="2021" width="1.2670%" height="15" fill="rgb(249,111,54)" fg:x="174792053" fg:w="3130778"/><text x="70.9863%" y="2031.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30,744,790 samples, 12.44%)</title><rect x="60.6809%" y="2277" width="12.4421%" height="15" fill="rgb(249,55,30)" fg:x="149944801" fg:w="30744790"/><text x="60.9309%" y="2287.50">&lt;alloc::vec::Vec&lt;T,..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (30,744,790 samples, 12.44%)</title><rect x="60.6809%" y="2261" width="12.4421%" height="15" fill="rgb(237,47,42)" fg:x="149944801" fg:w="30744790"/><text x="60.9309%" y="2271.50">core::ptr::drop_in_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (30,744,790 samples, 12.44%)</title><rect x="60.6809%" y="2245" width="12.4421%" height="15" fill="rgb(211,20,18)" fg:x="149944801" fg:w="30744790"/><text x="60.9309%" y="2255.50">core::ptr::drop_in_..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,766,760 samples, 1.12%)</title><rect x="72.0033%" y="2229" width="1.1197%" height="15" fill="rgb(231,203,46)" fg:x="177922831" fg:w="2766760"/><text x="72.2533%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,766,760 samples, 1.12%)</title><rect x="72.0033%" y="2213" width="1.1197%" height="15" fill="rgb(237,142,3)" fg:x="177922831" fg:w="2766760"/><text x="72.2533%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,766,760 samples, 1.12%)</title><rect x="72.0033%" y="2197" width="1.1197%" height="15" fill="rgb(241,107,1)" fg:x="177922831" fg:w="2766760"/><text x="72.2533%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,766,760 samples, 1.12%)</title><rect x="72.0033%" y="2181" width="1.1197%" height="15" fill="rgb(229,83,13)" fg:x="177922831" fg:w="2766760"/><text x="72.2533%" y="2191.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,766,760 samples, 1.12%)</title><rect x="72.0033%" y="2165" width="1.1197%" height="15" fill="rgb(241,91,40)" fg:x="177922831" fg:w="2766760"/><text x="72.2533%" y="2175.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,766,760 samples, 1.12%)</title><rect x="72.0033%" y="2149" width="1.1197%" height="15" fill="rgb(225,3,45)" fg:x="177922831" fg:w="2766760"/><text x="72.2533%" y="2159.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,766,760 samples, 1.12%)</title><rect x="72.0033%" y="2133" width="1.1197%" height="15" fill="rgb(244,223,14)" fg:x="177922831" fg:w="2766760"/><text x="72.2533%" y="2143.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2,766,760 samples, 1.12%)</title><rect x="72.0033%" y="2117" width="1.1197%" height="15" fill="rgb(224,124,37)" fg:x="177922831" fg:w="2766760"/><text x="72.2533%" y="2127.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2,766,760 samples, 1.12%)</title><rect x="72.0033%" y="2101" width="1.1197%" height="15" fill="rgb(251,171,30)" fg:x="177922831" fg:w="2766760"/><text x="72.2533%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (2,766,760 samples, 1.12%)</title><rect x="72.0033%" y="2085" width="1.1197%" height="15" fill="rgb(236,46,54)" fg:x="177922831" fg:w="2766760"/><text x="72.2533%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,766,760 samples, 1.12%)</title><rect x="72.0033%" y="2069" width="1.1197%" height="15" fill="rgb(245,213,5)" fg:x="177922831" fg:w="2766760"/><text x="72.2533%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,766,760 samples, 1.12%)</title><rect x="72.0033%" y="2053" width="1.1197%" height="15" fill="rgb(230,144,27)" fg:x="177922831" fg:w="2766760"/><text x="72.2533%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,766,760 samples, 1.12%)</title><rect x="72.0033%" y="2037" width="1.1197%" height="15" fill="rgb(220,86,6)" fg:x="177922831" fg:w="2766760"/><text x="72.2533%" y="2047.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,766,760 samples, 1.12%)</title><rect x="72.0033%" y="2021" width="1.1197%" height="15" fill="rgb(240,20,13)" fg:x="177922831" fg:w="2766760"/><text x="72.2533%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (33,212,136 samples, 13.44%)</title><rect x="60.6809%" y="2293" width="13.4406%" height="15" fill="rgb(217,89,34)" fg:x="149944801" fg:w="33212136"/><text x="60.9309%" y="2303.50">core::ptr::drop_in_p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,467,346 samples, 1.00%)</title><rect x="73.1230%" y="2277" width="0.9985%" height="15" fill="rgb(229,13,5)" fg:x="180689591" fg:w="2467346"/><text x="73.3730%" y="2287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,467,346 samples, 1.00%)</title><rect x="73.1230%" y="2261" width="0.9985%" height="15" fill="rgb(244,67,35)" fg:x="180689591" fg:w="2467346"/><text x="73.3730%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,467,346 samples, 1.00%)</title><rect x="73.1230%" y="2245" width="0.9985%" height="15" fill="rgb(221,40,2)" fg:x="180689591" fg:w="2467346"/><text x="73.3730%" y="2255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,467,346 samples, 1.00%)</title><rect x="73.1230%" y="2229" width="0.9985%" height="15" fill="rgb(237,157,21)" fg:x="180689591" fg:w="2467346"/><text x="73.3730%" y="2239.50"></text></g><g><title>alloc::alloc::dealloc (2,467,346 samples, 1.00%)</title><rect x="73.1230%" y="2213" width="0.9985%" height="15" fill="rgb(222,94,11)" fg:x="180689591" fg:w="2467346"/><text x="73.3730%" y="2223.50"></text></g><g><title>cfree (2,467,346 samples, 1.00%)</title><rect x="73.1230%" y="2197" width="0.9985%" height="15" fill="rgb(249,113,6)" fg:x="180689591" fg:w="2467346"/><text x="73.3730%" y="2207.50"></text></g><g><title>[libc.so.6] (2,467,346 samples, 1.00%)</title><rect x="73.1230%" y="2181" width="0.9985%" height="15" fill="rgb(238,137,36)" fg:x="180689591" fg:w="2467346"/><text x="73.3730%" y="2191.50"></text></g><g><title>[libc.so.6] (2,467,346 samples, 1.00%)</title><rect x="73.1230%" y="2165" width="0.9985%" height="15" fill="rgb(210,102,26)" fg:x="180689591" fg:w="2467346"/><text x="73.3730%" y="2175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35,849,866 samples, 14.51%)</title><rect x="60.6809%" y="2341" width="14.5080%" height="15" fill="rgb(218,30,30)" fg:x="149944801" fg:w="35849866"/><text x="60.9309%" y="2351.50">&lt;alloc::vec::Vec&lt;T,A&gt; ..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (35,849,866 samples, 14.51%)</title><rect x="60.6809%" y="2325" width="14.5080%" height="15" fill="rgb(214,67,26)" fg:x="149944801" fg:w="35849866"/><text x="60.9309%" y="2335.50">core::ptr::drop_in_pla..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (35,849,866 samples, 14.51%)</title><rect x="60.6809%" y="2309" width="14.5080%" height="15" fill="rgb(251,9,53)" fg:x="149944801" fg:w="35849866"/><text x="60.9309%" y="2319.50">core::ptr::drop_in_pla..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,637,730 samples, 1.07%)</title><rect x="74.1215%" y="2293" width="1.0675%" height="15" fill="rgb(228,204,25)" fg:x="183156937" fg:w="2637730"/><text x="74.3715%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (2,637,730 samples, 1.07%)</title><rect x="74.1215%" y="2277" width="1.0675%" height="15" fill="rgb(207,153,8)" fg:x="183156937" fg:w="2637730"/><text x="74.3715%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2,637,730 samples, 1.07%)</title><rect x="74.1215%" y="2261" width="1.0675%" height="15" fill="rgb(242,9,16)" fg:x="183156937" fg:w="2637730"/><text x="74.3715%" y="2271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,637,730 samples, 1.07%)</title><rect x="74.1215%" y="2245" width="1.0675%" height="15" fill="rgb(217,211,10)" fg:x="183156937" fg:w="2637730"/><text x="74.3715%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,637,730 samples, 1.07%)</title><rect x="74.1215%" y="2229" width="1.0675%" height="15" fill="rgb(219,228,52)" fg:x="183156937" fg:w="2637730"/><text x="74.3715%" y="2239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,637,730 samples, 1.07%)</title><rect x="74.1215%" y="2213" width="1.0675%" height="15" fill="rgb(231,92,29)" fg:x="183156937" fg:w="2637730"/><text x="74.3715%" y="2223.50"></text></g><g><title>alloc::alloc::dealloc (2,637,730 samples, 1.07%)</title><rect x="74.1215%" y="2197" width="1.0675%" height="15" fill="rgb(232,8,23)" fg:x="183156937" fg:w="2637730"/><text x="74.3715%" y="2207.50"></text></g><g><title>cfree (2,637,730 samples, 1.07%)</title><rect x="74.1215%" y="2181" width="1.0675%" height="15" fill="rgb(216,211,34)" fg:x="183156937" fg:w="2637730"/><text x="74.3715%" y="2191.50"></text></g><g><title>[libc.so.6] (2,637,730 samples, 1.07%)</title><rect x="74.1215%" y="2165" width="1.0675%" height="15" fill="rgb(236,151,0)" fg:x="183156937" fg:w="2637730"/><text x="74.3715%" y="2175.50"></text></g><g><title>[libc.so.6] (2,637,730 samples, 1.07%)</title><rect x="74.1215%" y="2149" width="1.0675%" height="15" fill="rgb(209,168,3)" fg:x="183156937" fg:w="2637730"/><text x="74.3715%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (38,339,751 samples, 15.52%)</title><rect x="60.6809%" y="2357" width="15.5157%" height="15" fill="rgb(208,129,28)" fg:x="149944801" fg:w="38339751"/><text x="60.9309%" y="2367.50">core::ptr::drop_in_place..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,489,885 samples, 1.01%)</title><rect x="75.1890%" y="2341" width="1.0076%" height="15" fill="rgb(229,78,22)" fg:x="185794667" fg:w="2489885"/><text x="75.4390%" y="2351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,489,885 samples, 1.01%)</title><rect x="75.1890%" y="2325" width="1.0076%" height="15" fill="rgb(228,187,13)" fg:x="185794667" fg:w="2489885"/><text x="75.4390%" y="2335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,489,885 samples, 1.01%)</title><rect x="75.1890%" y="2309" width="1.0076%" height="15" fill="rgb(240,119,24)" fg:x="185794667" fg:w="2489885"/><text x="75.4390%" y="2319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,489,885 samples, 1.01%)</title><rect x="75.1890%" y="2293" width="1.0076%" height="15" fill="rgb(209,194,42)" fg:x="185794667" fg:w="2489885"/><text x="75.4390%" y="2303.50"></text></g><g><title>alloc::alloc::dealloc (2,489,885 samples, 1.01%)</title><rect x="75.1890%" y="2277" width="1.0076%" height="15" fill="rgb(247,200,46)" fg:x="185794667" fg:w="2489885"/><text x="75.4390%" y="2287.50"></text></g><g><title>cfree (2,489,885 samples, 1.01%)</title><rect x="75.1890%" y="2261" width="1.0076%" height="15" fill="rgb(218,76,16)" fg:x="185794667" fg:w="2489885"/><text x="75.4390%" y="2271.50"></text></g><g><title>[libc.so.6] (2,489,885 samples, 1.01%)</title><rect x="75.1890%" y="2245" width="1.0076%" height="15" fill="rgb(225,21,48)" fg:x="185794667" fg:w="2489885"/><text x="75.4390%" y="2255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42,887,123 samples, 17.36%)</title><rect x="60.6809%" y="2405" width="17.3559%" height="15" fill="rgb(239,223,50)" fg:x="149944801" fg:w="42887123"/><text x="60.9309%" y="2415.50">&lt;alloc::vec::Vec&lt;T,A&gt; as co..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (42,887,123 samples, 17.36%)</title><rect x="60.6809%" y="2389" width="17.3559%" height="15" fill="rgb(244,45,21)" fg:x="149944801" fg:w="42887123"/><text x="60.9309%" y="2399.50">core::ptr::drop_in_place&lt;[c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (42,887,123 samples, 17.36%)</title><rect x="60.6809%" y="2373" width="17.3559%" height="15" fill="rgb(232,33,43)" fg:x="149944801" fg:w="42887123"/><text x="60.9309%" y="2383.50">core::ptr::drop_in_place&lt;cs..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (4,547,372 samples, 1.84%)</title><rect x="76.1966%" y="2357" width="1.8403%" height="15" fill="rgb(209,8,3)" fg:x="188284552" fg:w="4547372"/><text x="76.4466%" y="2367.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (4,547,372 samples, 1.84%)</title><rect x="76.1966%" y="2341" width="1.8403%" height="15" fill="rgb(214,25,53)" fg:x="188284552" fg:w="4547372"/><text x="76.4466%" y="2351.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (4,547,372 samples, 1.84%)</title><rect x="76.1966%" y="2325" width="1.8403%" height="15" fill="rgb(254,186,54)" fg:x="188284552" fg:w="4547372"/><text x="76.4466%" y="2335.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,547,372 samples, 1.84%)</title><rect x="76.1966%" y="2309" width="1.8403%" height="15" fill="rgb(208,174,49)" fg:x="188284552" fg:w="4547372"/><text x="76.4466%" y="2319.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,547,372 samples, 1.84%)</title><rect x="76.1966%" y="2293" width="1.8403%" height="15" fill="rgb(233,191,51)" fg:x="188284552" fg:w="4547372"/><text x="76.4466%" y="2303.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,547,372 samples, 1.84%)</title><rect x="76.1966%" y="2277" width="1.8403%" height="15" fill="rgb(222,134,10)" fg:x="188284552" fg:w="4547372"/><text x="76.4466%" y="2287.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (4,547,372 samples, 1.84%)</title><rect x="76.1966%" y="2261" width="1.8403%" height="15" fill="rgb(230,226,20)" fg:x="188284552" fg:w="4547372"/><text x="76.4466%" y="2271.50">a..</text></g><g><title>cfree (4,547,372 samples, 1.84%)</title><rect x="76.1966%" y="2245" width="1.8403%" height="15" fill="rgb(251,111,25)" fg:x="188284552" fg:w="4547372"/><text x="76.4466%" y="2255.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50,093,740 samples, 20.27%)</title><rect x="60.6809%" y="2597" width="20.2724%" height="15" fill="rgb(224,40,46)" fg:x="149944801" fg:w="50093740"/><text x="60.9309%" y="2607.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::o..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (50,093,740 samples, 20.27%)</title><rect x="60.6809%" y="2581" width="20.2724%" height="15" fill="rgb(236,108,47)" fg:x="149944801" fg:w="50093740"/><text x="60.9309%" y="2591.50">core::ptr::drop_in_place&lt;[css_bi..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (50,093,740 samples, 20.27%)</title><rect x="60.6809%" y="2565" width="20.2724%" height="15" fill="rgb(234,93,0)" fg:x="149944801" fg:w="50093740"/><text x="60.9309%" y="2575.50">core::ptr::drop_in_place&lt;css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (50,093,740 samples, 20.27%)</title><rect x="60.6809%" y="2549" width="20.2724%" height="15" fill="rgb(224,213,32)" fg:x="149944801" fg:w="50093740"/><text x="60.9309%" y="2559.50">core::ptr::drop_in_place&lt;alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50,093,740 samples, 20.27%)</title><rect x="60.6809%" y="2533" width="20.2724%" height="15" fill="rgb(251,11,48)" fg:x="149944801" fg:w="50093740"/><text x="60.9309%" y="2543.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::o..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (50,093,740 samples, 20.27%)</title><rect x="60.6809%" y="2517" width="20.2724%" height="15" fill="rgb(236,173,5)" fg:x="149944801" fg:w="50093740"/><text x="60.9309%" y="2527.50">core::ptr::drop_in_place&lt;[css_bi..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (50,093,740 samples, 20.27%)</title><rect x="60.6809%" y="2501" width="20.2724%" height="15" fill="rgb(230,95,12)" fg:x="149944801" fg:w="50093740"/><text x="60.9309%" y="2511.50">core::ptr::drop_in_place&lt;css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (50,093,740 samples, 20.27%)</title><rect x="60.6809%" y="2485" width="20.2724%" height="15" fill="rgb(232,209,1)" fg:x="149944801" fg:w="50093740"/><text x="60.9309%" y="2495.50">core::ptr::drop_in_place&lt;alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50,093,740 samples, 20.27%)</title><rect x="60.6809%" y="2469" width="20.2724%" height="15" fill="rgb(232,6,1)" fg:x="149944801" fg:w="50093740"/><text x="60.9309%" y="2479.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::o..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (50,093,740 samples, 20.27%)</title><rect x="60.6809%" y="2453" width="20.2724%" height="15" fill="rgb(210,224,50)" fg:x="149944801" fg:w="50093740"/><text x="60.9309%" y="2463.50">core::ptr::drop_in_place&lt;[css_bi..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (50,093,740 samples, 20.27%)</title><rect x="60.6809%" y="2437" width="20.2724%" height="15" fill="rgb(228,127,35)" fg:x="149944801" fg:w="50093740"/><text x="60.9309%" y="2447.50">core::ptr::drop_in_place&lt;css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (50,093,740 samples, 20.27%)</title><rect x="60.6809%" y="2421" width="20.2724%" height="15" fill="rgb(245,102,45)" fg:x="149944801" fg:w="50093740"/><text x="60.9309%" y="2431.50">core::ptr::drop_in_place&lt;alloc::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (7,206,617 samples, 2.92%)</title><rect x="78.0369%" y="2405" width="2.9164%" height="15" fill="rgb(214,1,49)" fg:x="192831924" fg:w="7206617"/><text x="78.2869%" y="2415.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,206,617 samples, 2.92%)</title><rect x="78.0369%" y="2389" width="2.9164%" height="15" fill="rgb(226,163,40)" fg:x="192831924" fg:w="7206617"/><text x="78.2869%" y="2399.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (7,206,617 samples, 2.92%)</title><rect x="78.0369%" y="2373" width="2.9164%" height="15" fill="rgb(239,212,28)" fg:x="192831924" fg:w="7206617"/><text x="78.2869%" y="2383.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7,206,617 samples, 2.92%)</title><rect x="78.0369%" y="2357" width="2.9164%" height="15" fill="rgb(220,20,13)" fg:x="192831924" fg:w="7206617"/><text x="78.2869%" y="2367.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (7,206,617 samples, 2.92%)</title><rect x="78.0369%" y="2341" width="2.9164%" height="15" fill="rgb(210,164,35)" fg:x="192831924" fg:w="7206617"/><text x="78.2869%" y="2351.50">al..</text></g><g><title>cfree (7,206,617 samples, 2.92%)</title><rect x="78.0369%" y="2325" width="2.9164%" height="15" fill="rgb(248,109,41)" fg:x="192831924" fg:w="7206617"/><text x="78.2869%" y="2335.50">cf..</text></g><g><title>[libc.so.6] (7,206,617 samples, 2.92%)</title><rect x="78.0369%" y="2309" width="2.9164%" height="15" fill="rgb(238,23,50)" fg:x="192831924" fg:w="7206617"/><text x="78.2869%" y="2319.50">[l..</text></g><g><title>[libc.so.6] (7,206,617 samples, 2.92%)</title><rect x="78.0369%" y="2293" width="2.9164%" height="15" fill="rgb(211,48,49)" fg:x="192831924" fg:w="7206617"/><text x="78.2869%" y="2303.50">[l..</text></g><g><title>[libc.so.6] (501,504 samples, 0.20%)</title><rect x="80.7503%" y="2277" width="0.2030%" height="15" fill="rgb(223,36,21)" fg:x="199537037" fg:w="501504"/><text x="81.0003%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (53,199,281 samples, 21.53%)</title><rect x="60.6809%" y="2757" width="21.5291%" height="15" fill="rgb(207,123,46)" fg:x="149944801" fg:w="53199281"/><text x="60.9309%" y="2767.50">core::ptr::drop_in_place&lt;css_bitve..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (53,199,281 samples, 21.53%)</title><rect x="60.6809%" y="2741" width="21.5291%" height="15" fill="rgb(240,218,32)" fg:x="149944801" fg:w="53199281"/><text x="60.9309%" y="2751.50">core::ptr::drop_in_place&lt;alloc::ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (53,199,281 samples, 21.53%)</title><rect x="60.6809%" y="2725" width="21.5291%" height="15" fill="rgb(252,5,43)" fg:x="149944801" fg:w="53199281"/><text x="60.9309%" y="2735.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (53,199,281 samples, 21.53%)</title><rect x="60.6809%" y="2709" width="21.5291%" height="15" fill="rgb(252,84,19)" fg:x="149944801" fg:w="53199281"/><text x="60.9309%" y="2719.50">core::ptr::drop_in_place&lt;[css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (53,199,281 samples, 21.53%)</title><rect x="60.6809%" y="2693" width="21.5291%" height="15" fill="rgb(243,152,39)" fg:x="149944801" fg:w="53199281"/><text x="60.9309%" y="2703.50">core::ptr::drop_in_place&lt;css_bitve..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (53,199,281 samples, 21.53%)</title><rect x="60.6809%" y="2677" width="21.5291%" height="15" fill="rgb(234,160,15)" fg:x="149944801" fg:w="53199281"/><text x="60.9309%" y="2687.50">core::ptr::drop_in_place&lt;alloc::ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (53,199,281 samples, 21.53%)</title><rect x="60.6809%" y="2661" width="21.5291%" height="15" fill="rgb(237,34,20)" fg:x="149944801" fg:w="53199281"/><text x="60.9309%" y="2671.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (53,199,281 samples, 21.53%)</title><rect x="60.6809%" y="2645" width="21.5291%" height="15" fill="rgb(229,97,13)" fg:x="149944801" fg:w="53199281"/><text x="60.9309%" y="2655.50">core::ptr::drop_in_place&lt;[css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (53,199,281 samples, 21.53%)</title><rect x="60.6809%" y="2629" width="21.5291%" height="15" fill="rgb(234,71,50)" fg:x="149944801" fg:w="53199281"/><text x="60.9309%" y="2639.50">core::ptr::drop_in_place&lt;css_bitve..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (53,199,281 samples, 21.53%)</title><rect x="60.6809%" y="2613" width="21.5291%" height="15" fill="rgb(253,155,4)" fg:x="149944801" fg:w="53199281"/><text x="60.9309%" y="2623.50">core::ptr::drop_in_place&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,105,541 samples, 1.26%)</title><rect x="80.9533%" y="2597" width="1.2568%" height="15" fill="rgb(222,185,37)" fg:x="200038541" fg:w="3105541"/><text x="81.2033%" y="2607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,105,541 samples, 1.26%)</title><rect x="80.9533%" y="2581" width="1.2568%" height="15" fill="rgb(251,177,13)" fg:x="200038541" fg:w="3105541"/><text x="81.2033%" y="2591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,105,541 samples, 1.26%)</title><rect x="80.9533%" y="2565" width="1.2568%" height="15" fill="rgb(250,179,40)" fg:x="200038541" fg:w="3105541"/><text x="81.2033%" y="2575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,105,541 samples, 1.26%)</title><rect x="80.9533%" y="2549" width="1.2568%" height="15" fill="rgb(242,44,2)" fg:x="200038541" fg:w="3105541"/><text x="81.2033%" y="2559.50"></text></g><g><title>alloc::alloc::dealloc (3,105,541 samples, 1.26%)</title><rect x="80.9533%" y="2533" width="1.2568%" height="15" fill="rgb(216,177,13)" fg:x="200038541" fg:w="3105541"/><text x="81.2033%" y="2543.50"></text></g><g><title>cfree (3,105,541 samples, 1.26%)</title><rect x="80.9533%" y="2517" width="1.2568%" height="15" fill="rgb(216,106,43)" fg:x="200038541" fg:w="3105541"/><text x="81.2033%" y="2527.50"></text></g><g><title>[libc.so.6] (3,105,541 samples, 1.26%)</title><rect x="80.9533%" y="2501" width="1.2568%" height="15" fill="rgb(216,183,2)" fg:x="200038541" fg:w="3105541"/><text x="81.2033%" y="2511.50"></text></g><g><title>[libc.so.6] (3,105,541 samples, 1.26%)</title><rect x="80.9533%" y="2485" width="1.2568%" height="15" fill="rgb(249,75,3)" fg:x="200038541" fg:w="3105541"/><text x="81.2033%" y="2495.50"></text></g><g><title>benchmark::benchmark_accumulated_modifications (166,248,376 samples, 67.28%)</title><rect x="17.8847%" y="2773" width="67.2788%" height="15" fill="rgb(219,67,39)" fg:x="44193732" fg:w="166248376"/><text x="18.1347%" y="2783.50">benchmark::benchmark_accumulated_modifications</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (7,298,026 samples, 2.95%)</title><rect x="82.2101%" y="2757" width="2.9534%" height="15" fill="rgb(253,228,2)" fg:x="203144082" fg:w="7298026"/><text x="82.4601%" y="2767.50">css..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (7,298,026 samples, 2.95%)</title><rect x="82.2101%" y="2741" width="2.9534%" height="15" fill="rgb(235,138,27)" fg:x="203144082" fg:w="7298026"/><text x="82.4601%" y="2751.50">css..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (7,298,026 samples, 2.95%)</title><rect x="82.2101%" y="2725" width="2.9534%" height="15" fill="rgb(236,97,51)" fg:x="203144082" fg:w="7298026"/><text x="82.4601%" y="2735.50">css..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (7,298,026 samples, 2.95%)</title><rect x="82.2101%" y="2709" width="2.9534%" height="15" fill="rgb(240,80,30)" fg:x="203144082" fg:w="7298026"/><text x="82.4601%" y="2719.50">css..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (7,298,026 samples, 2.95%)</title><rect x="82.2101%" y="2693" width="2.9534%" height="15" fill="rgb(230,178,19)" fg:x="203144082" fg:w="7298026"/><text x="82.4601%" y="2703.50">css..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (7,298,026 samples, 2.95%)</title><rect x="82.2101%" y="2677" width="2.9534%" height="15" fill="rgb(210,190,27)" fg:x="203144082" fg:w="7298026"/><text x="82.4601%" y="2687.50">css..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (4,228,191 samples, 1.71%)</title><rect x="83.4524%" y="2661" width="1.7111%" height="15" fill="rgb(222,107,31)" fg:x="206213917" fg:w="4228191"/><text x="83.7024%" y="2671.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,087,383 samples, 1.25%)</title><rect x="83.9141%" y="2645" width="1.2494%" height="15" fill="rgb(216,127,34)" fg:x="207354725" fg:w="3087383"/><text x="84.1641%" y="2655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,087,383 samples, 1.25%)</title><rect x="83.9141%" y="2629" width="1.2494%" height="15" fill="rgb(234,116,52)" fg:x="207354725" fg:w="3087383"/><text x="84.1641%" y="2639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (3,087,383 samples, 1.25%)</title><rect x="83.9141%" y="2613" width="1.2494%" height="15" fill="rgb(222,124,15)" fg:x="207354725" fg:w="3087383"/><text x="84.1641%" y="2623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,213,388 samples, 0.49%)</title><rect x="85.1635%" y="2757" width="0.4910%" height="15" fill="rgb(231,179,28)" fg:x="210442108" fg:w="1213388"/><text x="85.4135%" y="2767.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1,213,388 samples, 0.49%)</title><rect x="85.1635%" y="2741" width="0.4910%" height="15" fill="rgb(226,93,45)" fg:x="210442108" fg:w="1213388"/><text x="85.4135%" y="2751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,213,388 samples, 0.49%)</title><rect x="85.1635%" y="2725" width="0.4910%" height="15" fill="rgb(215,8,51)" fg:x="210442108" fg:w="1213388"/><text x="85.4135%" y="2735.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,213,388 samples, 0.49%)</title><rect x="85.1635%" y="2709" width="0.4910%" height="15" fill="rgb(223,106,5)" fg:x="210442108" fg:w="1213388"/><text x="85.4135%" y="2719.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (1,213,388 samples, 0.49%)</title><rect x="85.1635%" y="2693" width="0.4910%" height="15" fill="rgb(250,191,5)" fg:x="210442108" fg:w="1213388"/><text x="85.4135%" y="2703.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1,213,388 samples, 0.49%)</title><rect x="85.1635%" y="2677" width="0.4910%" height="15" fill="rgb(242,132,44)" fg:x="210442108" fg:w="1213388"/><text x="85.4135%" y="2687.50"></text></g><g><title>core::slice::memchr::memchr (1,213,388 samples, 0.49%)</title><rect x="85.1635%" y="2661" width="0.4910%" height="15" fill="rgb(251,152,29)" fg:x="210442108" fg:w="1213388"/><text x="85.4135%" y="2671.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1,213,388 samples, 0.49%)</title><rect x="85.1635%" y="2645" width="0.4910%" height="15" fill="rgb(218,179,5)" fg:x="210442108" fg:w="1213388"/><text x="85.4135%" y="2655.50"></text></g><g><title>core::slice::memchr::memchr_aligned::runtime (1,213,388 samples, 0.49%)</title><rect x="85.1635%" y="2629" width="0.4910%" height="15" fill="rgb(227,67,19)" fg:x="210442108" fg:w="1213388"/><text x="85.4135%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2757" width="0.7804%" height="15" fill="rgb(233,119,31)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2741" width="0.7804%" height="15" fill="rgb(241,120,22)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2725" width="0.7804%" height="15" fill="rgb(224,102,30)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2709" width="0.7804%" height="15" fill="rgb(210,164,37)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2719.50"></text></g><g><title>core::mem::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2693" width="0.7804%" height="15" fill="rgb(226,191,16)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2677" width="0.7804%" height="15" fill="rgb(214,40,45)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2687.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2661" width="0.7804%" height="15" fill="rgb(244,29,26)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2645" width="0.7804%" height="15" fill="rgb(216,16,5)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2629" width="0.7804%" height="15" fill="rgb(249,76,35)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2639.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2613" width="0.7804%" height="15" fill="rgb(207,11,44)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2623.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2597" width="0.7804%" height="15" fill="rgb(228,190,49)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2581" width="0.7804%" height="15" fill="rgb(214,173,12)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2565" width="0.7804%" height="15" fill="rgb(218,26,35)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2549" width="0.7804%" height="15" fill="rgb(220,200,19)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2533" width="0.7804%" height="15" fill="rgb(239,95,49)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2543.50"></text></g><g><title>core::mem::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2517" width="0.7804%" height="15" fill="rgb(235,85,53)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2501" width="0.7804%" height="15" fill="rgb(233,133,31)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2511.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2485" width="0.7804%" height="15" fill="rgb(218,25,20)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2469" width="0.7804%" height="15" fill="rgb(252,210,38)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2453" width="0.7804%" height="15" fill="rgb(242,134,21)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2463.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2437" width="0.7804%" height="15" fill="rgb(213,28,48)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2447.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2421" width="0.7804%" height="15" fill="rgb(250,196,2)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2405" width="0.7804%" height="15" fill="rgb(227,5,17)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2389" width="0.7804%" height="15" fill="rgb(221,226,24)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2373" width="0.7804%" height="15" fill="rgb(211,5,48)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2357" width="0.7804%" height="15" fill="rgb(219,150,6)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2341" width="0.7804%" height="15" fill="rgb(251,46,16)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2325" width="0.7804%" height="15" fill="rgb(220,204,40)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2309" width="0.7804%" height="15" fill="rgb(211,85,2)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2293" width="0.7804%" height="15" fill="rgb(229,17,7)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2303.50"></text></g><g><title>core::mem::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2277" width="0.7804%" height="15" fill="rgb(239,72,28)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2261" width="0.7804%" height="15" fill="rgb(230,47,54)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2271.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2245" width="0.7804%" height="15" fill="rgb(214,50,8)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2255.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2229" width="0.7804%" height="15" fill="rgb(216,198,43)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2213" width="0.7804%" height="15" fill="rgb(234,20,35)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2223.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2197" width="0.7804%" height="15" fill="rgb(254,45,19)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2207.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2181" width="0.7804%" height="15" fill="rgb(219,14,44)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2165" width="0.7804%" height="15" fill="rgb(217,220,26)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2149" width="0.7804%" height="15" fill="rgb(213,158,28)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2133" width="0.7804%" height="15" fill="rgb(252,51,52)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2117" width="0.7804%" height="15" fill="rgb(246,89,16)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2101" width="0.7804%" height="15" fill="rgb(216,158,49)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2085" width="0.7804%" height="15" fill="rgb(236,107,19)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2069" width="0.7804%" height="15" fill="rgb(228,185,30)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2079.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2053" width="0.7804%" height="15" fill="rgb(246,134,8)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2063.50"></text></g><g><title>core::mem::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2037" width="0.7804%" height="15" fill="rgb(214,143,50)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2021" width="0.7804%" height="15" fill="rgb(228,75,8)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2031.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="2005" width="0.7804%" height="15" fill="rgb(207,175,4)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="2015.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1989" width="0.7804%" height="15" fill="rgb(205,108,24)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1973" width="0.7804%" height="15" fill="rgb(244,120,49)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1983.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1957" width="0.7804%" height="15" fill="rgb(223,47,38)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1967.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1941" width="0.7804%" height="15" fill="rgb(229,179,11)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1925" width="0.7804%" height="15" fill="rgb(231,122,1)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1909" width="0.7804%" height="15" fill="rgb(245,119,9)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1893" width="0.7804%" height="15" fill="rgb(241,163,25)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1877" width="0.7804%" height="15" fill="rgb(217,214,3)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1861" width="0.7804%" height="15" fill="rgb(240,86,28)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1845" width="0.7804%" height="15" fill="rgb(215,47,9)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1829" width="0.7804%" height="15" fill="rgb(252,25,45)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1839.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1813" width="0.7804%" height="15" fill="rgb(251,164,9)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1823.50"></text></g><g><title>core::mem::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1797" width="0.7804%" height="15" fill="rgb(233,194,0)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1781" width="0.7804%" height="15" fill="rgb(249,111,24)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1791.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1765" width="0.7804%" height="15" fill="rgb(250,223,3)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1775.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1749" width="0.7804%" height="15" fill="rgb(236,178,37)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1759.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1733" width="0.7804%" height="15" fill="rgb(241,158,50)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1743.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1717" width="0.7804%" height="15" fill="rgb(213,121,41)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1727.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1701" width="0.7804%" height="15" fill="rgb(240,92,3)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1711.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1685" width="0.7804%" height="15" fill="rgb(205,123,3)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1695.50"></text></g><g><title>alloc::alloc::dealloc (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1669" width="0.7804%" height="15" fill="rgb(205,97,47)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1679.50"></text></g><g><title>cfree (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1653" width="0.7804%" height="15" fill="rgb(247,152,14)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1663.50"></text></g><g><title>[libc.so.6] (1,928,297 samples, 0.78%)</title><rect x="85.6545%" y="1637" width="0.7804%" height="15" fill="rgb(248,195,53)" fg:x="211655496" fg:w="1928297"/><text x="85.9045%" y="1647.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,517,881 samples, 1.02%)</title><rect x="86.4349%" y="2677" width="1.0190%" height="15" fill="rgb(226,201,16)" fg:x="213583793" fg:w="2517881"/><text x="86.6849%" y="2687.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (2,517,881 samples, 1.02%)</title><rect x="86.4349%" y="2661" width="1.0190%" height="15" fill="rgb(205,98,0)" fg:x="213583793" fg:w="2517881"/><text x="86.6849%" y="2671.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,401,357 samples, 0.97%)</title><rect x="87.4539%" y="2645" width="0.9718%" height="15" fill="rgb(214,191,48)" fg:x="216101674" fg:w="2401357"/><text x="87.7039%" y="2655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (2,401,357 samples, 0.97%)</title><rect x="87.4539%" y="2629" width="0.9718%" height="15" fill="rgb(237,112,39)" fg:x="216101674" fg:w="2401357"/><text x="87.7039%" y="2639.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (2,401,357 samples, 0.97%)</title><rect x="87.4539%" y="2613" width="0.9718%" height="15" fill="rgb(247,203,27)" fg:x="216101674" fg:w="2401357"/><text x="87.7039%" y="2623.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (2,401,357 samples, 0.97%)</title><rect x="87.4539%" y="2597" width="0.9718%" height="15" fill="rgb(235,124,28)" fg:x="216101674" fg:w="2401357"/><text x="87.7039%" y="2607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (2,401,357 samples, 0.97%)</title><rect x="87.4539%" y="2581" width="0.9718%" height="15" fill="rgb(208,207,46)" fg:x="216101674" fg:w="2401357"/><text x="87.7039%" y="2591.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (2,401,357 samples, 0.97%)</title><rect x="87.4539%" y="2565" width="0.9718%" height="15" fill="rgb(234,176,4)" fg:x="216101674" fg:w="2401357"/><text x="87.7039%" y="2575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (491,411 samples, 0.20%)</title><rect x="89.3430%" y="2325" width="0.1989%" height="15" fill="rgb(230,133,28)" fg:x="220769760" fg:w="491411"/><text x="89.5930%" y="2335.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (491,411 samples, 0.20%)</title><rect x="89.3430%" y="2309" width="0.1989%" height="15" fill="rgb(211,137,40)" fg:x="220769760" fg:w="491411"/><text x="89.5930%" y="2319.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (491,411 samples, 0.20%)</title><rect x="89.3430%" y="2293" width="0.1989%" height="15" fill="rgb(254,35,13)" fg:x="220769760" fg:w="491411"/><text x="89.5930%" y="2303.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (491,411 samples, 0.20%)</title><rect x="89.3430%" y="2277" width="0.1989%" height="15" fill="rgb(225,49,51)" fg:x="220769760" fg:w="491411"/><text x="89.5930%" y="2287.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (491,411 samples, 0.20%)</title><rect x="89.3430%" y="2261" width="0.1989%" height="15" fill="rgb(251,10,15)" fg:x="220769760" fg:w="491411"/><text x="89.5930%" y="2271.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (491,411 samples, 0.20%)</title><rect x="89.3430%" y="2245" width="0.1989%" height="15" fill="rgb(228,207,15)" fg:x="220769760" fg:w="491411"/><text x="89.5930%" y="2255.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (491,411 samples, 0.20%)</title><rect x="89.3430%" y="2229" width="0.1989%" height="15" fill="rgb(241,99,19)" fg:x="220769760" fg:w="491411"/><text x="89.5930%" y="2239.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (491,411 samples, 0.20%)</title><rect x="89.3430%" y="2213" width="0.1989%" height="15" fill="rgb(207,104,49)" fg:x="220769760" fg:w="491411"/><text x="89.5930%" y="2223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (491,411 samples, 0.20%)</title><rect x="89.3430%" y="2197" width="0.1989%" height="15" fill="rgb(234,99,18)" fg:x="220769760" fg:w="491411"/><text x="89.5930%" y="2207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (491,411 samples, 0.20%)</title><rect x="89.3430%" y="2181" width="0.1989%" height="15" fill="rgb(213,191,49)" fg:x="220769760" fg:w="491411"/><text x="89.5930%" y="2191.50"></text></g><g><title>alloc::slice::hack::to_vec (491,411 samples, 0.20%)</title><rect x="89.3430%" y="2165" width="0.1989%" height="15" fill="rgb(210,226,19)" fg:x="220769760" fg:w="491411"/><text x="89.5930%" y="2175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (491,411 samples, 0.20%)</title><rect x="89.3430%" y="2149" width="0.1989%" height="15" fill="rgb(229,97,18)" fg:x="220769760" fg:w="491411"/><text x="89.5930%" y="2159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (491,411 samples, 0.20%)</title><rect x="89.3430%" y="2133" width="0.1989%" height="15" fill="rgb(211,167,15)" fg:x="220769760" fg:w="491411"/><text x="89.5930%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (491,411 samples, 0.20%)</title><rect x="89.3430%" y="2117" width="0.1989%" height="15" fill="rgb(210,169,34)" fg:x="220769760" fg:w="491411"/><text x="89.5930%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (491,411 samples, 0.20%)</title><rect x="89.3430%" y="2101" width="0.1989%" height="15" fill="rgb(241,121,31)" fg:x="220769760" fg:w="491411"/><text x="89.5930%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (491,411 samples, 0.20%)</title><rect x="89.3430%" y="2085" width="0.1989%" height="15" fill="rgb(232,40,11)" fg:x="220769760" fg:w="491411"/><text x="89.5930%" y="2095.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (491,411 samples, 0.20%)</title><rect x="89.3430%" y="2069" width="0.1989%" height="15" fill="rgb(205,86,26)" fg:x="220769760" fg:w="491411"/><text x="89.5930%" y="2079.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (491,411 samples, 0.20%)</title><rect x="89.3430%" y="2053" width="0.1989%" height="15" fill="rgb(231,126,28)" fg:x="220769760" fg:w="491411"/><text x="89.5930%" y="2063.50"></text></g><g><title>alloc::alloc::alloc (491,411 samples, 0.20%)</title><rect x="89.3430%" y="2037" width="0.1989%" height="15" fill="rgb(219,221,18)" fg:x="220769760" fg:w="491411"/><text x="89.5930%" y="2047.50"></text></g><g><title>malloc (491,411 samples, 0.20%)</title><rect x="89.3430%" y="2021" width="0.1989%" height="15" fill="rgb(211,40,0)" fg:x="220769760" fg:w="491411"/><text x="89.5930%" y="2031.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (492,251 samples, 0.20%)</title><rect x="89.8454%" y="2229" width="0.1992%" height="15" fill="rgb(239,85,43)" fg:x="222011275" fg:w="492251"/><text x="90.0954%" y="2239.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2,188,103 samples, 0.89%)</title><rect x="89.5419%" y="2261" width="0.8855%" height="15" fill="rgb(231,55,21)" fg:x="221261171" fg:w="2188103"/><text x="89.7919%" y="2271.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (2,188,103 samples, 0.89%)</title><rect x="89.5419%" y="2245" width="0.8855%" height="15" fill="rgb(225,184,43)" fg:x="221261171" fg:w="2188103"/><text x="89.7919%" y="2255.50"></text></g><g><title>serde_json::read::parse_escape (945,748 samples, 0.38%)</title><rect x="90.0446%" y="2229" width="0.3827%" height="15" fill="rgb(251,158,41)" fg:x="222503526" fg:w="945748"/><text x="90.2946%" y="2239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,592,308 samples, 1.05%)</title><rect x="91.1091%" y="1909" width="1.0491%" height="15" fill="rgb(234,159,37)" fg:x="225133909" fg:w="2592308"/><text x="91.3591%" y="1919.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,592,308 samples, 1.05%)</title><rect x="91.1091%" y="1893" width="1.0491%" height="15" fill="rgb(216,204,22)" fg:x="225133909" fg:w="2592308"/><text x="91.3591%" y="1903.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2,592,308 samples, 1.05%)</title><rect x="91.1091%" y="1877" width="1.0491%" height="15" fill="rgb(214,17,3)" fg:x="225133909" fg:w="2592308"/><text x="91.3591%" y="1887.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (2,592,308 samples, 1.05%)</title><rect x="91.1091%" y="1861" width="1.0491%" height="15" fill="rgb(212,111,17)" fg:x="225133909" fg:w="2592308"/><text x="91.3591%" y="1871.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,592,308 samples, 1.05%)</title><rect x="91.1091%" y="1845" width="1.0491%" height="15" fill="rgb(221,157,24)" fg:x="225133909" fg:w="2592308"/><text x="91.3591%" y="1855.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,380,340 samples, 0.56%)</title><rect x="92.1582%" y="1637" width="0.5586%" height="15" fill="rgb(252,16,13)" fg:x="227726217" fg:w="1380340"/><text x="92.4082%" y="1647.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,380,340 samples, 0.56%)</title><rect x="92.1582%" y="1621" width="0.5586%" height="15" fill="rgb(221,62,2)" fg:x="227726217" fg:w="1380340"/><text x="92.4082%" y="1631.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (1,380,340 samples, 0.56%)</title><rect x="92.1582%" y="1605" width="0.5586%" height="15" fill="rgb(247,87,22)" fg:x="227726217" fg:w="1380340"/><text x="92.4082%" y="1615.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1,380,340 samples, 0.56%)</title><rect x="92.1582%" y="1589" width="0.5586%" height="15" fill="rgb(215,73,9)" fg:x="227726217" fg:w="1380340"/><text x="92.4082%" y="1599.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,380,340 samples, 0.56%)</title><rect x="92.1582%" y="1573" width="0.5586%" height="15" fill="rgb(207,175,33)" fg:x="227726217" fg:w="1380340"/><text x="92.4082%" y="1583.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,380,340 samples, 0.56%)</title><rect x="92.1582%" y="1557" width="0.5586%" height="15" fill="rgb(243,129,54)" fg:x="227726217" fg:w="1380340"/><text x="92.4082%" y="1567.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,380,340 samples, 0.56%)</title><rect x="92.1582%" y="1541" width="0.5586%" height="15" fill="rgb(227,119,45)" fg:x="227726217" fg:w="1380340"/><text x="92.4082%" y="1551.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,380,340 samples, 0.56%)</title><rect x="92.1582%" y="1525" width="0.5586%" height="15" fill="rgb(205,109,36)" fg:x="227726217" fg:w="1380340"/><text x="92.4082%" y="1535.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2,080,781 samples, 0.84%)</title><rect x="92.7168%" y="1429" width="0.8421%" height="15" fill="rgb(205,6,39)" fg:x="229106557" fg:w="2080781"/><text x="92.9668%" y="1439.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (2,080,781 samples, 0.84%)</title><rect x="92.7168%" y="1413" width="0.8421%" height="15" fill="rgb(221,32,16)" fg:x="229106557" fg:w="2080781"/><text x="92.9668%" y="1423.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,228,514 samples, 2.12%)</title><rect x="92.1582%" y="1893" width="2.1159%" height="15" fill="rgb(228,144,50)" fg:x="227726217" fg:w="5228514"/><text x="92.4082%" y="1903.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,228,514 samples, 2.12%)</title><rect x="92.1582%" y="1877" width="2.1159%" height="15" fill="rgb(229,201,53)" fg:x="227726217" fg:w="5228514"/><text x="92.4082%" y="1887.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,228,514 samples, 2.12%)</title><rect x="92.1582%" y="1861" width="2.1159%" height="15" fill="rgb(249,153,27)" fg:x="227726217" fg:w="5228514"/><text x="92.4082%" y="1871.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (5,228,514 samples, 2.12%)</title><rect x="92.1582%" y="1845" width="2.1159%" height="15" fill="rgb(227,106,25)" fg:x="227726217" fg:w="5228514"/><text x="92.4082%" y="1855.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (5,228,514 samples, 2.12%)</title><rect x="92.1582%" y="1829" width="2.1159%" height="15" fill="rgb(230,65,29)" fg:x="227726217" fg:w="5228514"/><text x="92.4082%" y="1839.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (5,228,514 samples, 2.12%)</title><rect x="92.1582%" y="1813" width="2.1159%" height="15" fill="rgb(221,57,46)" fg:x="227726217" fg:w="5228514"/><text x="92.4082%" y="1823.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,228,514 samples, 2.12%)</title><rect x="92.1582%" y="1797" width="2.1159%" height="15" fill="rgb(229,161,17)" fg:x="227726217" fg:w="5228514"/><text x="92.4082%" y="1807.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,228,514 samples, 2.12%)</title><rect x="92.1582%" y="1781" width="2.1159%" height="15" fill="rgb(222,213,11)" fg:x="227726217" fg:w="5228514"/><text x="92.4082%" y="1791.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,228,514 samples, 2.12%)</title><rect x="92.1582%" y="1765" width="2.1159%" height="15" fill="rgb(235,35,13)" fg:x="227726217" fg:w="5228514"/><text x="92.4082%" y="1775.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5,228,514 samples, 2.12%)</title><rect x="92.1582%" y="1749" width="2.1159%" height="15" fill="rgb(233,158,34)" fg:x="227726217" fg:w="5228514"/><text x="92.4082%" y="1759.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (5,228,514 samples, 2.12%)</title><rect x="92.1582%" y="1733" width="2.1159%" height="15" fill="rgb(215,151,48)" fg:x="227726217" fg:w="5228514"/><text x="92.4082%" y="1743.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (5,228,514 samples, 2.12%)</title><rect x="92.1582%" y="1717" width="2.1159%" height="15" fill="rgb(229,84,14)" fg:x="227726217" fg:w="5228514"/><text x="92.4082%" y="1727.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5,228,514 samples, 2.12%)</title><rect x="92.1582%" y="1701" width="2.1159%" height="15" fill="rgb(229,68,14)" fg:x="227726217" fg:w="5228514"/><text x="92.4082%" y="1711.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,228,514 samples, 2.12%)</title><rect x="92.1582%" y="1685" width="2.1159%" height="15" fill="rgb(243,106,26)" fg:x="227726217" fg:w="5228514"/><text x="92.4082%" y="1695.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,228,514 samples, 2.12%)</title><rect x="92.1582%" y="1669" width="2.1159%" height="15" fill="rgb(206,45,38)" fg:x="227726217" fg:w="5228514"/><text x="92.4082%" y="1679.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,228,514 samples, 2.12%)</title><rect x="92.1582%" y="1653" width="2.1159%" height="15" fill="rgb(226,6,15)" fg:x="227726217" fg:w="5228514"/><text x="92.4082%" y="1663.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (3,848,174 samples, 1.56%)</title><rect x="92.7168%" y="1637" width="1.5573%" height="15" fill="rgb(232,22,54)" fg:x="229106557" fg:w="3848174"/><text x="92.9668%" y="1647.50"></text></g><g><title>serde::de::SeqAccess::next_element (3,848,174 samples, 1.56%)</title><rect x="92.7168%" y="1621" width="1.5573%" height="15" fill="rgb(229,222,32)" fg:x="229106557" fg:w="3848174"/><text x="92.9668%" y="1631.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (3,848,174 samples, 1.56%)</title><rect x="92.7168%" y="1605" width="1.5573%" height="15" fill="rgb(228,62,29)" fg:x="229106557" fg:w="3848174"/><text x="92.9668%" y="1615.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,848,174 samples, 1.56%)</title><rect x="92.7168%" y="1589" width="1.5573%" height="15" fill="rgb(251,103,34)" fg:x="229106557" fg:w="3848174"/><text x="92.9668%" y="1599.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,848,174 samples, 1.56%)</title><rect x="92.7168%" y="1573" width="1.5573%" height="15" fill="rgb(233,12,30)" fg:x="229106557" fg:w="3848174"/><text x="92.9668%" y="1583.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,848,174 samples, 1.56%)</title><rect x="92.7168%" y="1557" width="1.5573%" height="15" fill="rgb(238,52,0)" fg:x="229106557" fg:w="3848174"/><text x="92.9668%" y="1567.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,848,174 samples, 1.56%)</title><rect x="92.7168%" y="1541" width="1.5573%" height="15" fill="rgb(223,98,5)" fg:x="229106557" fg:w="3848174"/><text x="92.9668%" y="1551.50"></text></g><g><title>serde::de::MapAccess::next_entry (3,848,174 samples, 1.56%)</title><rect x="92.7168%" y="1525" width="1.5573%" height="15" fill="rgb(228,75,37)" fg:x="229106557" fg:w="3848174"/><text x="92.9668%" y="1535.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (3,848,174 samples, 1.56%)</title><rect x="92.7168%" y="1509" width="1.5573%" height="15" fill="rgb(205,115,49)" fg:x="229106557" fg:w="3848174"/><text x="92.9668%" y="1519.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3,848,174 samples, 1.56%)</title><rect x="92.7168%" y="1493" width="1.5573%" height="15" fill="rgb(250,154,43)" fg:x="229106557" fg:w="3848174"/><text x="92.9668%" y="1503.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,848,174 samples, 1.56%)</title><rect x="92.7168%" y="1477" width="1.5573%" height="15" fill="rgb(226,43,29)" fg:x="229106557" fg:w="3848174"/><text x="92.9668%" y="1487.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,848,174 samples, 1.56%)</title><rect x="92.7168%" y="1461" width="1.5573%" height="15" fill="rgb(249,228,39)" fg:x="229106557" fg:w="3848174"/><text x="92.9668%" y="1471.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,848,174 samples, 1.56%)</title><rect x="92.7168%" y="1445" width="1.5573%" height="15" fill="rgb(216,79,43)" fg:x="229106557" fg:w="3848174"/><text x="92.9668%" y="1455.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1429" width="0.7152%" height="15" fill="rgb(228,95,12)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1439.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1413" width="0.7152%" height="15" fill="rgb(249,221,15)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1423.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1397" width="0.7152%" height="15" fill="rgb(233,34,13)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1407.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1381" width="0.7152%" height="15" fill="rgb(214,103,39)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1391.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1365" width="0.7152%" height="15" fill="rgb(251,126,39)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1375.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1349" width="0.7152%" height="15" fill="rgb(214,216,36)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1359.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1333" width="0.7152%" height="15" fill="rgb(220,221,8)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1343.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1317" width="0.7152%" height="15" fill="rgb(240,216,3)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1327.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1301" width="0.7152%" height="15" fill="rgb(232,218,17)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1311.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1285" width="0.7152%" height="15" fill="rgb(229,163,45)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1295.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1269" width="0.7152%" height="15" fill="rgb(231,110,42)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1279.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1253" width="0.7152%" height="15" fill="rgb(208,170,48)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1263.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1237" width="0.7152%" height="15" fill="rgb(239,116,25)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1247.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1221" width="0.7152%" height="15" fill="rgb(219,200,50)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1231.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1205" width="0.7152%" height="15" fill="rgb(245,200,0)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1215.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1189" width="0.7152%" height="15" fill="rgb(245,119,33)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1199.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1173" width="0.7152%" height="15" fill="rgb(231,125,12)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1183.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1157" width="0.7152%" height="15" fill="rgb(216,96,41)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1167.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1141" width="0.7152%" height="15" fill="rgb(248,43,45)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1151.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1125" width="0.7152%" height="15" fill="rgb(217,222,7)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1135.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1109" width="0.7152%" height="15" fill="rgb(233,28,6)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1119.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1093" width="0.7152%" height="15" fill="rgb(231,218,15)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1103.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1077" width="0.7152%" height="15" fill="rgb(226,171,48)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1087.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1061" width="0.7152%" height="15" fill="rgb(235,201,9)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1071.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1045" width="0.7152%" height="15" fill="rgb(217,80,15)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1055.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1029" width="0.7152%" height="15" fill="rgb(219,152,8)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1039.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="1013" width="0.7152%" height="15" fill="rgb(243,107,38)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1023.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="997" width="0.7152%" height="15" fill="rgb(231,17,5)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="1007.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="981" width="0.7152%" height="15" fill="rgb(209,25,54)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="965" width="0.7152%" height="15" fill="rgb(219,0,2)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="949" width="0.7152%" height="15" fill="rgb(246,9,5)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="933" width="0.7152%" height="15" fill="rgb(226,159,4)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="917" width="0.7152%" height="15" fill="rgb(219,175,34)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="901" width="0.7152%" height="15" fill="rgb(236,10,46)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="885" width="0.7152%" height="15" fill="rgb(240,211,16)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="869" width="0.7152%" height="15" fill="rgb(205,3,43)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="853" width="0.7152%" height="15" fill="rgb(245,7,22)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="837" width="0.7152%" height="15" fill="rgb(239,132,32)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="821" width="0.7152%" height="15" fill="rgb(228,202,34)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="805" width="0.7152%" height="15" fill="rgb(254,200,22)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="815.50"></text></g><g><title>alloc::alloc::alloc (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="789" width="0.7152%" height="15" fill="rgb(219,10,39)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="799.50"></text></g><g><title>malloc (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="773" width="0.7152%" height="15" fill="rgb(226,210,39)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="783.50"></text></g><g><title>[libc.so.6] (1,767,393 samples, 0.72%)</title><rect x="93.5589%" y="757" width="0.7152%" height="15" fill="rgb(208,219,16)" fg:x="231187338" fg:w="1767393"/><text x="93.8089%" y="767.50"></text></g><g><title>serde::de::MapAccess::next_entry (14,784,121 samples, 5.98%)</title><rect x="89.3430%" y="2565" width="5.9830%" height="15" fill="rgb(216,158,51)" fg:x="220769760" fg:w="14784121"/><text x="89.5930%" y="2575.50">serde::d..</text></g><g><title>serde::de::MapAccess::next_entry_seed (14,784,121 samples, 5.98%)</title><rect x="89.3430%" y="2549" width="5.9830%" height="15" fill="rgb(233,14,44)" fg:x="220769760" fg:w="14784121"/><text x="89.5930%" y="2559.50">serde::d..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (14,784,121 samples, 5.98%)</title><rect x="89.3430%" y="2533" width="5.9830%" height="15" fill="rgb(237,97,39)" fg:x="220769760" fg:w="14784121"/><text x="89.5930%" y="2543.50">&lt;serde_j..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14,784,121 samples, 5.98%)</title><rect x="89.3430%" y="2517" width="5.9830%" height="15" fill="rgb(218,198,43)" fg:x="220769760" fg:w="14784121"/><text x="89.5930%" y="2527.50">&lt;core::m..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14,784,121 samples, 5.98%)</title><rect x="89.3430%" y="2501" width="5.9830%" height="15" fill="rgb(231,104,20)" fg:x="220769760" fg:w="14784121"/><text x="89.5930%" y="2511.50">serde_js..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14,784,121 samples, 5.98%)</title><rect x="89.3430%" y="2485" width="5.9830%" height="15" fill="rgb(254,36,13)" fg:x="220769760" fg:w="14784121"/><text x="89.5930%" y="2495.50">&lt;&amp;mut se..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (14,784,121 samples, 5.98%)</title><rect x="89.3430%" y="2469" width="5.9830%" height="15" fill="rgb(248,14,50)" fg:x="220769760" fg:w="14784121"/><text x="89.5930%" y="2479.50">&lt;serde_j..</text></g><g><title>serde::de::SeqAccess::next_element (14,784,121 samples, 5.98%)</title><rect x="89.3430%" y="2453" width="5.9830%" height="15" fill="rgb(217,107,29)" fg:x="220769760" fg:w="14784121"/><text x="89.5930%" y="2463.50">serde::d..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (14,784,121 samples, 5.98%)</title><rect x="89.3430%" y="2437" width="5.9830%" height="15" fill="rgb(251,169,33)" fg:x="220769760" fg:w="14784121"/><text x="89.5930%" y="2447.50">&lt;serde_j..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14,784,121 samples, 5.98%)</title><rect x="89.3430%" y="2421" width="5.9830%" height="15" fill="rgb(217,108,32)" fg:x="220769760" fg:w="14784121"/><text x="89.5930%" y="2431.50">&lt;core::m..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14,784,121 samples, 5.98%)</title><rect x="89.3430%" y="2405" width="5.9830%" height="15" fill="rgb(219,66,42)" fg:x="220769760" fg:w="14784121"/><text x="89.5930%" y="2415.50">serde_js..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14,784,121 samples, 5.98%)</title><rect x="89.3430%" y="2389" width="5.9830%" height="15" fill="rgb(206,180,7)" fg:x="220769760" fg:w="14784121"/><text x="89.5930%" y="2399.50">&lt;&amp;mut se..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14,784,121 samples, 5.98%)</title><rect x="89.3430%" y="2373" width="5.9830%" height="15" fill="rgb(208,226,31)" fg:x="220769760" fg:w="14784121"/><text x="89.5930%" y="2383.50">&lt;serde_j..</text></g><g><title>serde::de::MapAccess::next_entry (14,784,121 samples, 5.98%)</title><rect x="89.3430%" y="2357" width="5.9830%" height="15" fill="rgb(218,26,49)" fg:x="220769760" fg:w="14784121"/><text x="89.5930%" y="2367.50">serde::d..</text></g><g><title>serde::de::MapAccess::next_entry_seed (14,784,121 samples, 5.98%)</title><rect x="89.3430%" y="2341" width="5.9830%" height="15" fill="rgb(233,197,48)" fg:x="220769760" fg:w="14784121"/><text x="89.5930%" y="2351.50">serde::d..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (14,292,710 samples, 5.78%)</title><rect x="89.5419%" y="2325" width="5.7841%" height="15" fill="rgb(252,181,51)" fg:x="221261171" fg:w="14292710"/><text x="89.7919%" y="2335.50">&lt;serde_..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14,292,710 samples, 5.78%)</title><rect x="89.5419%" y="2309" width="5.7841%" height="15" fill="rgb(253,90,19)" fg:x="221261171" fg:w="14292710"/><text x="89.7919%" y="2319.50">&lt;core::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14,292,710 samples, 5.78%)</title><rect x="89.5419%" y="2293" width="5.7841%" height="15" fill="rgb(215,171,30)" fg:x="221261171" fg:w="14292710"/><text x="89.7919%" y="2303.50">serde_j..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14,292,710 samples, 5.78%)</title><rect x="89.5419%" y="2277" width="5.7841%" height="15" fill="rgb(214,222,9)" fg:x="221261171" fg:w="14292710"/><text x="89.7919%" y="2287.50">&lt;&amp;mut s..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (12,104,607 samples, 4.90%)</title><rect x="90.4274%" y="2261" width="4.8986%" height="15" fill="rgb(223,3,22)" fg:x="223449274" fg:w="12104607"/><text x="90.6774%" y="2271.50">&lt;serde..</text></g><g><title>serde::de::SeqAccess::next_element (12,104,607 samples, 4.90%)</title><rect x="90.4274%" y="2245" width="4.8986%" height="15" fill="rgb(225,196,46)" fg:x="223449274" fg:w="12104607"/><text x="90.6774%" y="2255.50">serde:..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (12,104,607 samples, 4.90%)</title><rect x="90.4274%" y="2229" width="4.8986%" height="15" fill="rgb(209,110,37)" fg:x="223449274" fg:w="12104607"/><text x="90.6774%" y="2239.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,104,607 samples, 4.90%)</title><rect x="90.4274%" y="2213" width="4.8986%" height="15" fill="rgb(249,89,12)" fg:x="223449274" fg:w="12104607"/><text x="90.6774%" y="2223.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,104,607 samples, 4.90%)</title><rect x="90.4274%" y="2197" width="4.8986%" height="15" fill="rgb(226,27,33)" fg:x="223449274" fg:w="12104607"/><text x="90.6774%" y="2207.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,104,607 samples, 4.90%)</title><rect x="90.4274%" y="2181" width="4.8986%" height="15" fill="rgb(213,82,22)" fg:x="223449274" fg:w="12104607"/><text x="90.6774%" y="2191.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10,419,972 samples, 4.22%)</title><rect x="91.1091%" y="2165" width="4.2168%" height="15" fill="rgb(248,140,0)" fg:x="225133909" fg:w="10419972"/><text x="91.3591%" y="2175.50">&lt;serd..</text></g><g><title>serde::de::MapAccess::next_entry (10,419,972 samples, 4.22%)</title><rect x="91.1091%" y="2149" width="4.2168%" height="15" fill="rgb(228,106,3)" fg:x="225133909" fg:w="10419972"/><text x="91.3591%" y="2159.50">serde..</text></g><g><title>serde::de::MapAccess::next_entry_seed (10,419,972 samples, 4.22%)</title><rect x="91.1091%" y="2133" width="4.2168%" height="15" fill="rgb(209,23,37)" fg:x="225133909" fg:w="10419972"/><text x="91.3591%" y="2143.50">serde..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (10,419,972 samples, 4.22%)</title><rect x="91.1091%" y="2117" width="4.2168%" height="15" fill="rgb(241,93,50)" fg:x="225133909" fg:w="10419972"/><text x="91.3591%" y="2127.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,419,972 samples, 4.22%)</title><rect x="91.1091%" y="2101" width="4.2168%" height="15" fill="rgb(253,46,43)" fg:x="225133909" fg:w="10419972"/><text x="91.3591%" y="2111.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,419,972 samples, 4.22%)</title><rect x="91.1091%" y="2085" width="4.2168%" height="15" fill="rgb(226,206,43)" fg:x="225133909" fg:w="10419972"/><text x="91.3591%" y="2095.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,419,972 samples, 4.22%)</title><rect x="91.1091%" y="2069" width="4.2168%" height="15" fill="rgb(217,54,7)" fg:x="225133909" fg:w="10419972"/><text x="91.3591%" y="2079.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (10,419,972 samples, 4.22%)</title><rect x="91.1091%" y="2053" width="4.2168%" height="15" fill="rgb(223,5,52)" fg:x="225133909" fg:w="10419972"/><text x="91.3591%" y="2063.50">&lt;serd..</text></g><g><title>serde::de::SeqAccess::next_element (10,419,972 samples, 4.22%)</title><rect x="91.1091%" y="2037" width="4.2168%" height="15" fill="rgb(206,52,46)" fg:x="225133909" fg:w="10419972"/><text x="91.3591%" y="2047.50">serde..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (10,419,972 samples, 4.22%)</title><rect x="91.1091%" y="2021" width="4.2168%" height="15" fill="rgb(253,136,11)" fg:x="225133909" fg:w="10419972"/><text x="91.3591%" y="2031.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,419,972 samples, 4.22%)</title><rect x="91.1091%" y="2005" width="4.2168%" height="15" fill="rgb(208,106,33)" fg:x="225133909" fg:w="10419972"/><text x="91.3591%" y="2015.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,419,972 samples, 4.22%)</title><rect x="91.1091%" y="1989" width="4.2168%" height="15" fill="rgb(206,54,4)" fg:x="225133909" fg:w="10419972"/><text x="91.3591%" y="1999.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,419,972 samples, 4.22%)</title><rect x="91.1091%" y="1973" width="4.2168%" height="15" fill="rgb(213,3,15)" fg:x="225133909" fg:w="10419972"/><text x="91.3591%" y="1983.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10,419,972 samples, 4.22%)</title><rect x="91.1091%" y="1957" width="4.2168%" height="15" fill="rgb(252,211,39)" fg:x="225133909" fg:w="10419972"/><text x="91.3591%" y="1967.50">&lt;serd..</text></g><g><title>serde::de::MapAccess::next_entry (10,419,972 samples, 4.22%)</title><rect x="91.1091%" y="1941" width="4.2168%" height="15" fill="rgb(223,6,36)" fg:x="225133909" fg:w="10419972"/><text x="91.3591%" y="1951.50">serde..</text></g><g><title>serde::de::MapAccess::next_entry_seed (10,419,972 samples, 4.22%)</title><rect x="91.1091%" y="1925" width="4.2168%" height="15" fill="rgb(252,169,45)" fg:x="225133909" fg:w="10419972"/><text x="91.3591%" y="1935.50">serde..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (7,827,664 samples, 3.17%)</title><rect x="92.1582%" y="1909" width="3.1678%" height="15" fill="rgb(212,48,26)" fg:x="227726217" fg:w="7827664"/><text x="92.4082%" y="1919.50">&lt;se..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_object_colon (2,599,150 samples, 1.05%)</title><rect x="94.2741%" y="1893" width="1.0518%" height="15" fill="rgb(251,102,48)" fg:x="232954731" fg:w="2599150"/><text x="94.5241%" y="1903.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (2,599,150 samples, 1.05%)</title><rect x="94.2741%" y="1877" width="1.0518%" height="15" fill="rgb(243,208,16)" fg:x="232954731" fg:w="2599150"/><text x="94.5241%" y="1887.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (2,599,150 samples, 1.05%)</title><rect x="94.2741%" y="1861" width="1.0518%" height="15" fill="rgb(219,96,24)" fg:x="232954731" fg:w="2599150"/><text x="94.5241%" y="1871.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (2,599,150 samples, 1.05%)</title><rect x="94.2741%" y="1845" width="1.0518%" height="15" fill="rgb(219,33,29)" fg:x="232954731" fg:w="2599150"/><text x="94.5241%" y="1855.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (2,599,150 samples, 1.05%)</title><rect x="94.2741%" y="1829" width="1.0518%" height="15" fill="rgb(223,176,5)" fg:x="232954731" fg:w="2599150"/><text x="94.5241%" y="1839.50"></text></g><g><title>benchmark::parse_web_layout_trace (27,311,857 samples, 11.05%)</title><rect x="85.1635%" y="2773" width="11.0528%" height="15" fill="rgb(228,140,14)" fg:x="210442108" fg:w="27311857"/><text x="85.4135%" y="2783.50">benchmark::parse..</text></g><g><title>serde_json::de::from_str (24,170,172 samples, 9.78%)</title><rect x="86.4349%" y="2757" width="9.7814%" height="15" fill="rgb(217,179,31)" fg:x="213583793" fg:w="24170172"/><text x="86.6849%" y="2767.50">serde_json::de..</text></g><g><title>serde_json::de::from_trait (24,170,172 samples, 9.78%)</title><rect x="86.4349%" y="2741" width="9.7814%" height="15" fill="rgb(230,9,30)" fg:x="213583793" fg:w="24170172"/><text x="86.6849%" y="2751.50">serde_json::de..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (24,170,172 samples, 9.78%)</title><rect x="86.4349%" y="2725" width="9.7814%" height="15" fill="rgb(230,136,20)" fg:x="213583793" fg:w="24170172"/><text x="86.6849%" y="2735.50">serde_json::va..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (24,170,172 samples, 9.78%)</title><rect x="86.4349%" y="2709" width="9.7814%" height="15" fill="rgb(215,210,22)" fg:x="213583793" fg:w="24170172"/><text x="86.6849%" y="2719.50">&lt;&amp;mut serde_js..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (24,170,172 samples, 9.78%)</title><rect x="86.4349%" y="2693" width="9.7814%" height="15" fill="rgb(218,43,5)" fg:x="213583793" fg:w="24170172"/><text x="86.6849%" y="2703.50">&lt;serde_json::v..</text></g><g><title>serde::de::MapAccess::next_entry (21,652,291 samples, 8.76%)</title><rect x="87.4539%" y="2677" width="8.7624%" height="15" fill="rgb(216,11,5)" fg:x="216101674" fg:w="21652291"/><text x="87.7039%" y="2687.50">serde::de::M..</text></g><g><title>serde::de::MapAccess::next_entry_seed (21,652,291 samples, 8.76%)</title><rect x="87.4539%" y="2661" width="8.7624%" height="15" fill="rgb(209,82,29)" fg:x="216101674" fg:w="21652291"/><text x="87.7039%" y="2671.50">serde::de::M..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (19,250,934 samples, 7.79%)</title><rect x="88.4257%" y="2645" width="7.7906%" height="15" fill="rgb(244,115,12)" fg:x="218503031" fg:w="19250934"/><text x="88.6757%" y="2655.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (19,250,934 samples, 7.79%)</title><rect x="88.4257%" y="2629" width="7.7906%" height="15" fill="rgb(222,82,18)" fg:x="218503031" fg:w="19250934"/><text x="88.6757%" y="2639.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (19,250,934 samples, 7.79%)</title><rect x="88.4257%" y="2613" width="7.7906%" height="15" fill="rgb(249,227,8)" fg:x="218503031" fg:w="19250934"/><text x="88.6757%" y="2623.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19,250,934 samples, 7.79%)</title><rect x="88.4257%" y="2597" width="7.7906%" height="15" fill="rgb(253,141,45)" fg:x="218503031" fg:w="19250934"/><text x="88.6757%" y="2607.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16,984,205 samples, 6.87%)</title><rect x="89.3430%" y="2581" width="6.8733%" height="15" fill="rgb(234,184,4)" fg:x="220769760" fg:w="16984205"/><text x="89.5930%" y="2591.50">&lt;serde_js..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (2,200,084 samples, 0.89%)</title><rect x="95.3259%" y="2565" width="0.8903%" height="15" fill="rgb(218,194,23)" fg:x="235553881" fg:w="2200084"/><text x="95.5759%" y="2575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2,200,084 samples, 0.89%)</title><rect x="95.3259%" y="2549" width="0.8903%" height="15" fill="rgb(235,66,41)" fg:x="235553881" fg:w="2200084"/><text x="95.5759%" y="2559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2,200,084 samples, 0.89%)</title><rect x="95.3259%" y="2533" width="0.8903%" height="15" fill="rgb(245,217,1)" fg:x="235553881" fg:w="2200084"/><text x="95.5759%" y="2543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (2,200,084 samples, 0.89%)</title><rect x="95.3259%" y="2517" width="0.8903%" height="15" fill="rgb(229,91,1)" fg:x="235553881" fg:w="2200084"/><text x="95.5759%" y="2527.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (2,200,084 samples, 0.89%)</title><rect x="95.3259%" y="2501" width="0.8903%" height="15" fill="rgb(207,101,30)" fg:x="235553881" fg:w="2200084"/><text x="95.5759%" y="2511.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (2,200,084 samples, 0.89%)</title><rect x="95.3259%" y="2485" width="0.8903%" height="15" fill="rgb(223,82,49)" fg:x="235553881" fg:w="2200084"/><text x="95.5759%" y="2495.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (2,200,084 samples, 0.89%)</title><rect x="95.3259%" y="2469" width="0.8903%" height="15" fill="rgb(218,167,17)" fg:x="235553881" fg:w="2200084"/><text x="95.5759%" y="2479.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (2,200,084 samples, 0.89%)</title><rect x="95.3259%" y="2453" width="0.8903%" height="15" fill="rgb(208,103,14)" fg:x="235553881" fg:w="2200084"/><text x="95.5759%" y="2463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,200,084 samples, 0.89%)</title><rect x="95.3259%" y="2437" width="0.8903%" height="15" fill="rgb(238,20,8)" fg:x="235553881" fg:w="2200084"/><text x="95.5759%" y="2447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,200,084 samples, 0.89%)</title><rect x="95.3259%" y="2421" width="0.8903%" height="15" fill="rgb(218,80,54)" fg:x="235553881" fg:w="2200084"/><text x="95.5759%" y="2431.50"></text></g><g><title>alloc::alloc::alloc (2,200,084 samples, 0.89%)</title><rect x="95.3259%" y="2405" width="0.8903%" height="15" fill="rgb(240,144,17)" fg:x="235553881" fg:w="2200084"/><text x="95.5759%" y="2415.50"></text></g><g><title>malloc (2,200,084 samples, 0.89%)</title><rect x="95.3259%" y="2389" width="0.8903%" height="15" fill="rgb(245,27,50)" fg:x="235553881" fg:w="2200084"/><text x="95.5759%" y="2399.50"></text></g><g><title>[libc.so.6] (2,200,084 samples, 0.89%)</title><rect x="95.3259%" y="2373" width="0.8903%" height="15" fill="rgb(251,51,7)" fg:x="235553881" fg:w="2200084"/><text x="95.5759%" y="2383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2,884,685 samples, 1.17%)</title><rect x="96.2163%" y="2597" width="1.1674%" height="15" fill="rgb(245,217,29)" fg:x="237753965" fg:w="2884685"/><text x="96.4663%" y="2607.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (2,884,685 samples, 1.17%)</title><rect x="96.2163%" y="2581" width="1.1674%" height="15" fill="rgb(221,176,29)" fg:x="237753965" fg:w="2884685"/><text x="96.4663%" y="2591.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (2,884,685 samples, 1.17%)</title><rect x="96.2163%" y="2565" width="1.1674%" height="15" fill="rgb(212,180,24)" fg:x="237753965" fg:w="2884685"/><text x="96.4663%" y="2575.50"></text></g><g><title>alloc::collections::btree::mem::replace (2,884,685 samples, 1.17%)</title><rect x="96.2163%" y="2549" width="1.1674%" height="15" fill="rgb(254,24,2)" fg:x="237753965" fg:w="2884685"/><text x="96.4663%" y="2559.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (2,884,685 samples, 1.17%)</title><rect x="96.2163%" y="2533" width="1.1674%" height="15" fill="rgb(230,100,2)" fg:x="237753965" fg:w="2884685"/><text x="96.4663%" y="2543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (2,884,685 samples, 1.17%)</title><rect x="96.2163%" y="2517" width="1.1674%" height="15" fill="rgb(219,142,25)" fg:x="237753965" fg:w="2884685"/><text x="96.4663%" y="2527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (2,884,685 samples, 1.17%)</title><rect x="96.2163%" y="2501" width="1.1674%" height="15" fill="rgb(240,73,43)" fg:x="237753965" fg:w="2884685"/><text x="96.4663%" y="2511.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (2,884,685 samples, 1.17%)</title><rect x="96.2163%" y="2485" width="1.1674%" height="15" fill="rgb(214,114,15)" fg:x="237753965" fg:w="2884685"/><text x="96.4663%" y="2495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,873,953 samples, 2.38%)</title><rect x="96.2163%" y="2757" width="2.3771%" height="15" fill="rgb(207,130,4)" fg:x="237753965" fg:w="5873953"/><text x="96.4663%" y="2767.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (5,873,953 samples, 2.38%)</title><rect x="96.2163%" y="2741" width="2.3771%" height="15" fill="rgb(221,25,40)" fg:x="237753965" fg:w="5873953"/><text x="96.4663%" y="2751.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (5,873,953 samples, 2.38%)</title><rect x="96.2163%" y="2725" width="2.3771%" height="15" fill="rgb(241,184,7)" fg:x="237753965" fg:w="5873953"/><text x="96.4663%" y="2735.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,873,953 samples, 2.38%)</title><rect x="96.2163%" y="2709" width="2.3771%" height="15" fill="rgb(235,159,4)" fg:x="237753965" fg:w="5873953"/><text x="96.4663%" y="2719.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,873,953 samples, 2.38%)</title><rect x="96.2163%" y="2693" width="2.3771%" height="15" fill="rgb(214,87,48)" fg:x="237753965" fg:w="5873953"/><text x="96.4663%" y="2703.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,873,953 samples, 2.38%)</title><rect x="96.2163%" y="2677" width="2.3771%" height="15" fill="rgb(246,198,24)" fg:x="237753965" fg:w="5873953"/><text x="96.4663%" y="2687.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,873,953 samples, 2.38%)</title><rect x="96.2163%" y="2661" width="2.3771%" height="15" fill="rgb(209,66,40)" fg:x="237753965" fg:w="5873953"/><text x="96.4663%" y="2671.50">&lt;a..</text></g><g><title>core::mem::drop (5,873,953 samples, 2.38%)</title><rect x="96.2163%" y="2645" width="2.3771%" height="15" fill="rgb(233,147,39)" fg:x="237753965" fg:w="5873953"/><text x="96.4663%" y="2655.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,873,953 samples, 2.38%)</title><rect x="96.2163%" y="2629" width="2.3771%" height="15" fill="rgb(231,145,52)" fg:x="237753965" fg:w="5873953"/><text x="96.4663%" y="2639.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,873,953 samples, 2.38%)</title><rect x="96.2163%" y="2613" width="2.3771%" height="15" fill="rgb(206,20,26)" fg:x="237753965" fg:w="5873953"/><text x="96.4663%" y="2623.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2597" width="1.2097%" height="15" fill="rgb(238,220,4)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2581" width="1.2097%" height="15" fill="rgb(252,195,42)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2591.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2565" width="1.2097%" height="15" fill="rgb(209,10,6)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2575.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2549" width="1.2097%" height="15" fill="rgb(229,3,52)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2533" width="1.2097%" height="15" fill="rgb(253,49,37)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2517" width="1.2097%" height="15" fill="rgb(240,103,49)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2501" width="1.2097%" height="15" fill="rgb(250,182,30)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2485" width="1.2097%" height="15" fill="rgb(248,8,30)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2495.50"></text></g><g><title>core::mem::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2469" width="1.2097%" height="15" fill="rgb(237,120,30)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2453" width="1.2097%" height="15" fill="rgb(221,146,34)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2437" width="1.2097%" height="15" fill="rgb(242,55,13)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2421" width="1.2097%" height="15" fill="rgb(242,112,31)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2405" width="1.2097%" height="15" fill="rgb(249,192,27)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2415.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2389" width="1.2097%" height="15" fill="rgb(208,204,44)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2399.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2373" width="1.2097%" height="15" fill="rgb(208,93,54)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2357" width="1.2097%" height="15" fill="rgb(242,1,31)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2341" width="1.2097%" height="15" fill="rgb(241,83,25)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2325" width="1.2097%" height="15" fill="rgb(205,169,50)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2309" width="1.2097%" height="15" fill="rgb(239,186,37)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2293" width="1.2097%" height="15" fill="rgb(205,221,10)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2277" width="1.2097%" height="15" fill="rgb(218,196,15)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2261" width="1.2097%" height="15" fill="rgb(218,196,35)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2245" width="1.2097%" height="15" fill="rgb(233,63,24)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2255.50"></text></g><g><title>core::mem::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2229" width="1.2097%" height="15" fill="rgb(225,8,4)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2213" width="1.2097%" height="15" fill="rgb(234,105,35)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2223.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2197" width="1.2097%" height="15" fill="rgb(236,21,32)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2207.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2181" width="1.2097%" height="15" fill="rgb(228,109,6)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2165" width="1.2097%" height="15" fill="rgb(229,215,31)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2175.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2149" width="1.2097%" height="15" fill="rgb(221,52,54)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2159.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2133" width="1.2097%" height="15" fill="rgb(252,129,43)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2117" width="1.2097%" height="15" fill="rgb(248,183,27)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2101" width="1.2097%" height="15" fill="rgb(250,0,22)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2085" width="1.2097%" height="15" fill="rgb(213,166,10)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2069" width="1.2097%" height="15" fill="rgb(207,163,36)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2053" width="1.2097%" height="15" fill="rgb(208,122,22)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2037" width="1.2097%" height="15" fill="rgb(207,104,49)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2021" width="1.2097%" height="15" fill="rgb(248,211,50)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2031.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="2005" width="1.2097%" height="15" fill="rgb(217,13,45)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="2015.50"></text></g><g><title>core::mem::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1989" width="1.2097%" height="15" fill="rgb(211,216,49)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1973" width="1.2097%" height="15" fill="rgb(221,58,53)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1983.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1957" width="1.2097%" height="15" fill="rgb(220,112,41)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1967.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1941" width="1.2097%" height="15" fill="rgb(236,38,28)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1925" width="1.2097%" height="15" fill="rgb(227,195,22)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1935.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1909" width="1.2097%" height="15" fill="rgb(214,55,33)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1919.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1893" width="1.2097%" height="15" fill="rgb(248,80,13)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1877" width="1.2097%" height="15" fill="rgb(238,52,6)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1861" width="1.2097%" height="15" fill="rgb(224,198,47)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1845" width="1.2097%" height="15" fill="rgb(233,171,20)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1829" width="1.2097%" height="15" fill="rgb(241,30,25)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1813" width="1.2097%" height="15" fill="rgb(207,171,38)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1797" width="1.2097%" height="15" fill="rgb(234,70,1)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1781" width="1.2097%" height="15" fill="rgb(232,178,18)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1791.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1765" width="1.2097%" height="15" fill="rgb(241,78,40)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1775.50"></text></g><g><title>core::mem::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1749" width="1.2097%" height="15" fill="rgb(222,35,25)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1733" width="1.2097%" height="15" fill="rgb(207,92,16)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1743.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1717" width="1.2097%" height="15" fill="rgb(216,59,51)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1727.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1701" width="1.2097%" height="15" fill="rgb(213,80,28)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1685" width="1.2097%" height="15" fill="rgb(220,93,7)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1695.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1669" width="1.2097%" height="15" fill="rgb(225,24,44)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1679.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1653" width="1.2097%" height="15" fill="rgb(243,74,40)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1637" width="1.2097%" height="15" fill="rgb(228,39,7)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1621" width="1.2097%" height="15" fill="rgb(227,79,8)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1605" width="1.2097%" height="15" fill="rgb(236,58,11)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1589" width="1.2097%" height="15" fill="rgb(249,63,35)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1573" width="1.2097%" height="15" fill="rgb(252,114,16)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1557" width="1.2097%" height="15" fill="rgb(254,151,24)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1541" width="1.2097%" height="15" fill="rgb(253,54,39)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1551.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1525" width="1.2097%" height="15" fill="rgb(243,25,45)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1535.50"></text></g><g><title>core::mem::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1509" width="1.2097%" height="15" fill="rgb(234,134,9)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1493" width="1.2097%" height="15" fill="rgb(227,166,31)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1503.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1477" width="1.2097%" height="15" fill="rgb(245,143,41)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1487.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1461" width="1.2097%" height="15" fill="rgb(238,181,32)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1445" width="1.2097%" height="15" fill="rgb(224,113,18)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1455.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1429" width="1.2097%" height="15" fill="rgb(240,229,28)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1439.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1413" width="1.2097%" height="15" fill="rgb(250,185,3)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1397" width="1.2097%" height="15" fill="rgb(212,59,25)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1381" width="1.2097%" height="15" fill="rgb(221,87,20)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1365" width="1.2097%" height="15" fill="rgb(213,74,28)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1349" width="1.2097%" height="15" fill="rgb(224,132,34)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1333" width="1.2097%" height="15" fill="rgb(222,101,24)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1317" width="1.2097%" height="15" fill="rgb(254,142,4)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1301" width="1.2097%" height="15" fill="rgb(230,229,49)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1311.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1285" width="1.2097%" height="15" fill="rgb(238,70,47)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1295.50"></text></g><g><title>core::mem::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1269" width="1.2097%" height="15" fill="rgb(231,160,17)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1253" width="1.2097%" height="15" fill="rgb(218,68,53)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1263.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1237" width="1.2097%" height="15" fill="rgb(236,111,10)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1247.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1221" width="1.2097%" height="15" fill="rgb(224,34,41)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1205" width="1.2097%" height="15" fill="rgb(241,118,19)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1215.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1189" width="1.2097%" height="15" fill="rgb(238,129,25)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1199.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1173" width="1.2097%" height="15" fill="rgb(238,22,31)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1157" width="1.2097%" height="15" fill="rgb(222,174,48)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1141" width="1.2097%" height="15" fill="rgb(206,152,40)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1125" width="1.2097%" height="15" fill="rgb(218,99,54)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1109" width="1.2097%" height="15" fill="rgb(220,174,26)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1093" width="1.2097%" height="15" fill="rgb(245,116,9)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1077" width="1.2097%" height="15" fill="rgb(209,72,35)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1061" width="1.2097%" height="15" fill="rgb(226,126,21)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1045" width="1.2097%" height="15" fill="rgb(227,192,1)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1055.50"></text></g><g><title>core::mem::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1029" width="1.2097%" height="15" fill="rgb(237,180,29)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="1013" width="1.2097%" height="15" fill="rgb(230,197,35)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="997" width="1.2097%" height="15" fill="rgb(246,193,31)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="1007.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="981" width="1.2097%" height="15" fill="rgb(241,36,4)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="991.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="965" width="1.2097%" height="15" fill="rgb(241,130,17)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="949" width="1.2097%" height="15" fill="rgb(206,137,32)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="933" width="1.2097%" height="15" fill="rgb(237,228,51)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="917" width="1.2097%" height="15" fill="rgb(243,6,42)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="901" width="1.2097%" height="15" fill="rgb(251,74,28)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="885" width="1.2097%" height="15" fill="rgb(218,20,49)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="869" width="1.2097%" height="15" fill="rgb(238,28,14)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="853" width="1.2097%" height="15" fill="rgb(229,40,46)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="863.50"></text></g><g><title>cfree (2,989,268 samples, 1.21%)</title><rect x="97.3837%" y="837" width="1.2097%" height="15" fill="rgb(244,195,20)" fg:x="240638650" fg:w="2989268"/><text x="97.6337%" y="847.50"></text></g><g><title>std::panic::catch_unwind (231,291,856 samples, 93.60%)</title><rect x="6.1959%" y="2917" width="93.6012%" height="15" fill="rgb(253,56,35)" fg:x="15310275" fg:w="231291856"/><text x="6.4459%" y="2927.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (231,291,856 samples, 93.60%)</title><rect x="6.1959%" y="2901" width="93.6012%" height="15" fill="rgb(210,149,44)" fg:x="15310275" fg:w="231291856"/><text x="6.4459%" y="2911.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (231,291,856 samples, 93.60%)</title><rect x="6.1959%" y="2885" width="93.6012%" height="15" fill="rgb(240,135,12)" fg:x="15310275" fg:w="231291856"/><text x="6.4459%" y="2895.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (231,291,856 samples, 93.60%)</title><rect x="6.1959%" y="2869" width="93.6012%" height="15" fill="rgb(251,24,50)" fg:x="15310275" fg:w="231291856"/><text x="6.4459%" y="2879.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (231,291,856 samples, 93.60%)</title><rect x="6.1959%" y="2853" width="93.6012%" height="15" fill="rgb(243,200,47)" fg:x="15310275" fg:w="231291856"/><text x="6.4459%" y="2863.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (231,291,856 samples, 93.60%)</title><rect x="6.1959%" y="2837" width="93.6012%" height="15" fill="rgb(224,166,26)" fg:x="15310275" fg:w="231291856"/><text x="6.4459%" y="2847.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (231,291,856 samples, 93.60%)</title><rect x="6.1959%" y="2821" width="93.6012%" height="15" fill="rgb(233,0,47)" fg:x="15310275" fg:w="231291856"/><text x="6.4459%" y="2831.50">core::ops::function::FnOnce::call_once</text></g><g><title>benchmark::main (231,291,856 samples, 93.60%)</title><rect x="6.1959%" y="2805" width="93.6012%" height="15" fill="rgb(253,80,5)" fg:x="15310275" fg:w="231291856"/><text x="6.4459%" y="2815.50">benchmark::main</text></g><g><title>benchmark::run_web_browser_layout_trace_benchmark (231,291,856 samples, 93.60%)</title><rect x="6.1959%" y="2789" width="93.6012%" height="15" fill="rgb(214,133,25)" fg:x="15310275" fg:w="231291856"/><text x="6.4459%" y="2799.50">benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::LayoutFrame&gt;&gt; (8,848,166 samples, 3.58%)</title><rect x="96.2163%" y="2773" width="3.5808%" height="15" fill="rgb(209,27,14)" fg:x="237753965" fg:w="8848166"/><text x="96.4663%" y="2783.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;benchmark::LayoutFrame&gt;&gt; (2,974,213 samples, 1.20%)</title><rect x="98.5934%" y="2757" width="1.2036%" height="15" fill="rgb(219,102,51)" fg:x="243627918" fg:w="2974213"/><text x="98.8434%" y="2767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,974,213 samples, 1.20%)</title><rect x="98.5934%" y="2741" width="1.2036%" height="15" fill="rgb(237,18,16)" fg:x="243627918" fg:w="2974213"/><text x="98.8434%" y="2751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,974,213 samples, 1.20%)</title><rect x="98.5934%" y="2725" width="1.2036%" height="15" fill="rgb(241,85,17)" fg:x="243627918" fg:w="2974213"/><text x="98.8434%" y="2735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,974,213 samples, 1.20%)</title><rect x="98.5934%" y="2709" width="1.2036%" height="15" fill="rgb(236,90,42)" fg:x="243627918" fg:w="2974213"/><text x="98.8434%" y="2719.50"></text></g><g><title>alloc::alloc::dealloc (2,974,213 samples, 1.20%)</title><rect x="98.5934%" y="2693" width="1.2036%" height="15" fill="rgb(249,57,21)" fg:x="243627918" fg:w="2974213"/><text x="98.8434%" y="2703.50"></text></g><g><title>cfree (2,974,213 samples, 1.20%)</title><rect x="98.5934%" y="2677" width="1.2036%" height="15" fill="rgb(243,12,36)" fg:x="243627918" fg:w="2974213"/><text x="98.8434%" y="2687.50"></text></g><g><title>[libc.so.6] (2,974,213 samples, 1.20%)</title><rect x="98.5934%" y="2661" width="1.2036%" height="15" fill="rgb(253,128,47)" fg:x="243627918" fg:w="2974213"/><text x="98.8434%" y="2671.50"></text></g><g><title>[libc.so.6] (2,974,213 samples, 1.20%)</title><rect x="98.5934%" y="2645" width="1.2036%" height="15" fill="rgb(207,33,20)" fg:x="243627918" fg:w="2974213"/><text x="98.8434%" y="2655.50"></text></g><g><title>all (247,103,635 samples, 100%)</title><rect x="0.0000%" y="3093" width="100.0000%" height="15" fill="rgb(233,215,35)" fg:x="0" fg:w="247103635"/><text x="0.2500%" y="3103.50"></text></g><g><title>benchmark (247,103,635 samples, 100.00%)</title><rect x="0.0000%" y="3077" width="100.0000%" height="15" fill="rgb(249,188,52)" fg:x="0" fg:w="247103635"/><text x="0.2500%" y="3087.50">benchmark</text></g><g><title>_start (231,793,360 samples, 93.80%)</title><rect x="6.1959%" y="3061" width="93.8041%" height="15" fill="rgb(225,12,32)" fg:x="15310275" fg:w="231793360"/><text x="6.4459%" y="3071.50">_start</text></g><g><title>__libc_start_main (231,793,360 samples, 93.80%)</title><rect x="6.1959%" y="3045" width="93.8041%" height="15" fill="rgb(247,98,14)" fg:x="15310275" fg:w="231793360"/><text x="6.4459%" y="3055.50">__libc_start_main</text></g><g><title>[libc.so.6] (231,793,360 samples, 93.80%)</title><rect x="6.1959%" y="3029" width="93.8041%" height="15" fill="rgb(247,219,48)" fg:x="15310275" fg:w="231793360"/><text x="6.4459%" y="3039.50">[libc.so.6]</text></g><g><title>main (231,793,360 samples, 93.80%)</title><rect x="6.1959%" y="3013" width="93.8041%" height="15" fill="rgb(253,60,48)" fg:x="15310275" fg:w="231793360"/><text x="6.4459%" y="3023.50">main</text></g><g><title>std::rt::lang_start_internal (231,793,360 samples, 93.80%)</title><rect x="6.1959%" y="2997" width="93.8041%" height="15" fill="rgb(245,15,52)" fg:x="15310275" fg:w="231793360"/><text x="6.4459%" y="3007.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (231,793,360 samples, 93.80%)</title><rect x="6.1959%" y="2981" width="93.8041%" height="15" fill="rgb(220,133,28)" fg:x="15310275" fg:w="231793360"/><text x="6.4459%" y="2991.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (231,793,360 samples, 93.80%)</title><rect x="6.1959%" y="2965" width="93.8041%" height="15" fill="rgb(217,180,4)" fg:x="15310275" fg:w="231793360"/><text x="6.4459%" y="2975.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (231,793,360 samples, 93.80%)</title><rect x="6.1959%" y="2949" width="93.8041%" height="15" fill="rgb(251,24,1)" fg:x="15310275" fg:w="231793360"/><text x="6.4459%" y="2959.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (231,793,360 samples, 93.80%)</title><rect x="6.1959%" y="2933" width="93.8041%" height="15" fill="rgb(212,185,49)" fg:x="15310275" fg:w="231793360"/><text x="6.4459%" y="2943.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::rt::init (501,504 samples, 0.20%)</title><rect x="99.7970%" y="2917" width="0.2030%" height="15" fill="rgb(215,175,22)" fg:x="246602131" fg:w="501504"/><text x="100.0470%" y="2927.50"></text></g><g><title>std::sys::pal::unix::init (501,504 samples, 0.20%)</title><rect x="99.7970%" y="2901" width="0.2030%" height="15" fill="rgb(250,205,14)" fg:x="246602131" fg:w="501504"/><text x="100.0470%" y="2911.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::init (501,504 samples, 0.20%)</title><rect x="99.7970%" y="2885" width="0.2030%" height="15" fill="rgb(225,211,22)" fg:x="246602131" fg:w="501504"/><text x="100.0470%" y="2895.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard (501,504 samples, 0.20%)</title><rect x="99.7970%" y="2869" width="0.2030%" height="15" fill="rgb(251,179,42)" fg:x="246602131" fg:w="501504"/><text x="100.0470%" y="2879.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard_linux (501,504 samples, 0.20%)</title><rect x="99.7970%" y="2853" width="0.2030%" height="15" fill="rgb(208,216,51)" fg:x="246602131" fg:w="501504"/><text x="100.0470%" y="2863.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::stack_start_aligned (501,504 samples, 0.20%)</title><rect x="99.7970%" y="2837" width="0.2030%" height="15" fill="rgb(235,36,11)" fg:x="246602131" fg:w="501504"/><text x="100.0470%" y="2847.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack_start (501,504 samples, 0.20%)</title><rect x="99.7970%" y="2821" width="0.2030%" height="15" fill="rgb(213,189,28)" fg:x="246602131" fg:w="501504"/><text x="100.0470%" y="2831.50"></text></g><g><title>pthread_getattr_np (501,504 samples, 0.20%)</title><rect x="99.7970%" y="2805" width="0.2030%" height="15" fill="rgb(227,203,42)" fg:x="246602131" fg:w="501504"/><text x="100.0470%" y="2815.50"></text></g><g><title>__isoc23_sscanf (501,504 samples, 0.20%)</title><rect x="99.7970%" y="2789" width="0.2030%" height="15" fill="rgb(244,72,36)" fg:x="246602131" fg:w="501504"/><text x="100.0470%" y="2799.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.20%)</title><rect x="99.7970%" y="2773" width="0.2030%" height="15" fill="rgb(213,53,17)" fg:x="246602131" fg:w="501504"/><text x="100.0470%" y="2783.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.20%)</title><rect x="99.7970%" y="2757" width="0.2030%" height="15" fill="rgb(207,167,3)" fg:x="246602131" fg:w="501504"/><text x="100.0470%" y="2767.50"></text></g></svg></svg>