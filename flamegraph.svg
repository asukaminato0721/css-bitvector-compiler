<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1846" onload="init(evt)" viewBox="0 0 1200 1846" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1846" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1829.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1829.00"> </text><svg id="frames" x="10" width="1180" total_samples="248721808"><g><title>[libc.so.6] (2,887,880 samples, 1.16%)</title><rect x="0.9418%" y="1749" width="1.1611%" height="15" fill="rgb(227,0,7)" fg:x="2342559" fg:w="2887880"/><text x="1.1918%" y="1759.50"></text></g><g><title>benchmark::count_nodes (2,913,097 samples, 1.17%)</title><rect x="2.1029%" y="1749" width="1.1712%" height="15" fill="rgb(217,0,24)" fg:x="5230439" fg:w="2913097"/><text x="2.3529%" y="1759.50"></text></g><g><title>cfree (2,809,112 samples, 1.13%)</title><rect x="3.2742%" y="1749" width="1.1294%" height="15" fill="rgb(221,193,54)" fg:x="8143536" fg:w="2809112"/><text x="3.5242%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,327,159 samples, 0.94%)</title><rect x="4.4036%" y="1749" width="0.9356%" height="15" fill="rgb(248,212,6)" fg:x="10952648" fg:w="2327159"/><text x="4.6536%" y="1759.50"></text></g><g><title>[unknown] (16,157,637 samples, 6.50%)</title><rect x="0.0000%" y="1765" width="6.4963%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="16157637"/><text x="0.2500%" y="1775.50">[unknown]</text></g><g><title>malloc (2,877,830 samples, 1.16%)</title><rect x="5.3392%" y="1749" width="1.1570%" height="15" fill="rgb(232,128,0)" fg:x="13279807" fg:w="2877830"/><text x="5.5892%" y="1759.50"></text></g><g><title>_fini (2,787,009 samples, 1.12%)</title><rect x="6.4963%" y="1765" width="1.1205%" height="15" fill="rgb(207,160,47)" fg:x="16157637" fg:w="2787009"/><text x="6.7463%" y="1775.50"></text></g><g><title>[libc.so.6] (2,787,009 samples, 1.12%)</title><rect x="6.4963%" y="1749" width="1.1205%" height="15" fill="rgb(228,23,34)" fg:x="16157637" fg:w="2787009"/><text x="6.7463%" y="1759.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,396,405 samples, 0.96%)</title><rect x="8.7809%" y="1461" width="0.9635%" height="15" fill="rgb(218,30,26)" fg:x="21839953" fg:w="2396405"/><text x="9.0309%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,396,405 samples, 0.96%)</title><rect x="8.7809%" y="1445" width="0.9635%" height="15" fill="rgb(220,122,19)" fg:x="21839953" fg:w="2396405"/><text x="9.0309%" y="1455.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,396,405 samples, 0.96%)</title><rect x="8.7809%" y="1429" width="0.9635%" height="15" fill="rgb(250,228,42)" fg:x="21839953" fg:w="2396405"/><text x="9.0309%" y="1439.50"></text></g><g><title>alloc::slice::hack::to_vec (2,396,405 samples, 0.96%)</title><rect x="8.7809%" y="1413" width="0.9635%" height="15" fill="rgb(240,193,28)" fg:x="21839953" fg:w="2396405"/><text x="9.0309%" y="1423.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,396,405 samples, 0.96%)</title><rect x="8.7809%" y="1397" width="0.9635%" height="15" fill="rgb(216,20,37)" fg:x="21839953" fg:w="2396405"/><text x="9.0309%" y="1407.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,396,405 samples, 0.96%)</title><rect x="8.7809%" y="1381" width="0.9635%" height="15" fill="rgb(206,188,39)" fg:x="21839953" fg:w="2396405"/><text x="9.0309%" y="1391.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,396,405 samples, 0.96%)</title><rect x="8.7809%" y="1365" width="0.9635%" height="15" fill="rgb(217,207,13)" fg:x="21839953" fg:w="2396405"/><text x="9.0309%" y="1375.50"></text></g><g><title>[libc.so.6] (2,396,405 samples, 0.96%)</title><rect x="8.7809%" y="1349" width="0.9635%" height="15" fill="rgb(231,73,38)" fg:x="21839953" fg:w="2396405"/><text x="9.0309%" y="1359.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="533" width="1.1530%" height="15" fill="rgb(225,20,46)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="543.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="517" width="1.1530%" height="15" fill="rgb(210,31,41)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="501" width="1.1530%" height="15" fill="rgb(221,200,47)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="485" width="1.1530%" height="15" fill="rgb(226,26,5)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="495.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="469" width="1.1530%" height="15" fill="rgb(249,33,26)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="453" width="1.1530%" height="15" fill="rgb(235,183,28)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="437" width="1.1530%" height="15" fill="rgb(221,5,38)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="421" width="1.1530%" height="15" fill="rgb(247,18,42)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="405" width="1.1530%" height="15" fill="rgb(241,131,45)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="389" width="1.1530%" height="15" fill="rgb(249,31,29)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="399.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="373" width="1.1530%" height="15" fill="rgb(225,111,53)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="357" width="1.1530%" height="15" fill="rgb(238,160,17)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="341" width="1.1530%" height="15" fill="rgb(214,148,48)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="351.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="325" width="1.1530%" height="15" fill="rgb(232,36,49)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="309" width="1.1530%" height="15" fill="rgb(209,103,24)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="293" width="1.1530%" height="15" fill="rgb(229,88,8)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="277" width="1.1530%" height="15" fill="rgb(213,181,19)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="261" width="1.1530%" height="15" fill="rgb(254,191,54)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="245" width="1.1530%" height="15" fill="rgb(241,83,37)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="229" width="1.1530%" height="15" fill="rgb(233,36,39)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="213" width="1.1530%" height="15" fill="rgb(226,3,54)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="197" width="1.1530%" height="15" fill="rgb(245,192,40)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="181" width="1.1530%" height="15" fill="rgb(238,167,29)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="165" width="1.1530%" height="15" fill="rgb(232,182,51)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="149" width="1.1530%" height="15" fill="rgb(231,60,39)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="159.50"></text></g><g><title>alloc::alloc::alloc (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="133" width="1.1530%" height="15" fill="rgb(208,69,12)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="143.50"></text></g><g><title>malloc (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="117" width="1.1530%" height="15" fill="rgb(235,93,37)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="127.50"></text></g><g><title>[libc.so.6] (2,867,768 samples, 1.15%)</title><rect x="9.7444%" y="101" width="1.1530%" height="15" fill="rgb(213,116,39)" fg:x="24236358" fg:w="2867768"/><text x="9.9944%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,791,565 samples, 2.33%)</title><rect x="9.7444%" y="741" width="2.3285%" height="15" fill="rgb(222,207,29)" fg:x="24236358" fg:w="5791565"/><text x="9.9944%" y="751.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,791,565 samples, 2.33%)</title><rect x="9.7444%" y="725" width="2.3285%" height="15" fill="rgb(206,96,30)" fg:x="24236358" fg:w="5791565"/><text x="9.9944%" y="735.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,791,565 samples, 2.33%)</title><rect x="9.7444%" y="709" width="2.3285%" height="15" fill="rgb(218,138,4)" fg:x="24236358" fg:w="5791565"/><text x="9.9944%" y="719.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,791,565 samples, 2.33%)</title><rect x="9.7444%" y="693" width="2.3285%" height="15" fill="rgb(250,191,14)" fg:x="24236358" fg:w="5791565"/><text x="9.9944%" y="703.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,791,565 samples, 2.33%)</title><rect x="9.7444%" y="677" width="2.3285%" height="15" fill="rgb(239,60,40)" fg:x="24236358" fg:w="5791565"/><text x="9.9944%" y="687.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,791,565 samples, 2.33%)</title><rect x="9.7444%" y="661" width="2.3285%" height="15" fill="rgb(206,27,48)" fg:x="24236358" fg:w="5791565"/><text x="9.9944%" y="671.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,791,565 samples, 2.33%)</title><rect x="9.7444%" y="645" width="2.3285%" height="15" fill="rgb(225,35,8)" fg:x="24236358" fg:w="5791565"/><text x="9.9944%" y="655.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,791,565 samples, 2.33%)</title><rect x="9.7444%" y="629" width="2.3285%" height="15" fill="rgb(250,213,24)" fg:x="24236358" fg:w="5791565"/><text x="9.9944%" y="639.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,791,565 samples, 2.33%)</title><rect x="9.7444%" y="613" width="2.3285%" height="15" fill="rgb(247,123,22)" fg:x="24236358" fg:w="5791565"/><text x="9.9944%" y="623.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,791,565 samples, 2.33%)</title><rect x="9.7444%" y="597" width="2.3285%" height="15" fill="rgb(231,138,38)" fg:x="24236358" fg:w="5791565"/><text x="9.9944%" y="607.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,791,565 samples, 2.33%)</title><rect x="9.7444%" y="581" width="2.3285%" height="15" fill="rgb(231,145,46)" fg:x="24236358" fg:w="5791565"/><text x="9.9944%" y="591.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,791,565 samples, 2.33%)</title><rect x="9.7444%" y="565" width="2.3285%" height="15" fill="rgb(251,118,11)" fg:x="24236358" fg:w="5791565"/><text x="9.9944%" y="575.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,791,565 samples, 2.33%)</title><rect x="9.7444%" y="549" width="2.3285%" height="15" fill="rgb(217,147,25)" fg:x="24236358" fg:w="5791565"/><text x="9.9944%" y="559.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,923,797 samples, 1.18%)</title><rect x="10.8974%" y="533" width="1.1755%" height="15" fill="rgb(247,81,37)" fg:x="27104126" fg:w="2923797"/><text x="11.1474%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,923,797 samples, 1.18%)</title><rect x="10.8974%" y="517" width="1.1755%" height="15" fill="rgb(209,12,38)" fg:x="27104126" fg:w="2923797"/><text x="11.1474%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,923,797 samples, 1.18%)</title><rect x="10.8974%" y="501" width="1.1755%" height="15" fill="rgb(227,1,9)" fg:x="27104126" fg:w="2923797"/><text x="11.1474%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,923,797 samples, 1.18%)</title><rect x="10.8974%" y="485" width="1.1755%" height="15" fill="rgb(248,47,43)" fg:x="27104126" fg:w="2923797"/><text x="11.1474%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,923,797 samples, 1.18%)</title><rect x="10.8974%" y="469" width="1.1755%" height="15" fill="rgb(221,10,30)" fg:x="27104126" fg:w="2923797"/><text x="11.1474%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,923,797 samples, 1.18%)</title><rect x="10.8974%" y="453" width="1.1755%" height="15" fill="rgb(210,229,1)" fg:x="27104126" fg:w="2923797"/><text x="11.1474%" y="463.50"></text></g><g><title>alloc::alloc::alloc (2,923,797 samples, 1.18%)</title><rect x="10.8974%" y="437" width="1.1755%" height="15" fill="rgb(222,148,37)" fg:x="27104126" fg:w="2923797"/><text x="11.1474%" y="447.50"></text></g><g><title>malloc (2,923,797 samples, 1.18%)</title><rect x="10.8974%" y="421" width="1.1755%" height="15" fill="rgb(234,67,33)" fg:x="27104126" fg:w="2923797"/><text x="11.1474%" y="431.50"></text></g><g><title>&lt;benchmark::LayoutFrame as core::clone::Clone&gt;::clone (13,212,281 samples, 5.31%)</title><rect x="7.6168%" y="1477" width="5.3121%" height="15" fill="rgb(247,98,35)" fg:x="18944646" fg:w="13212281"/><text x="7.8668%" y="1487.50">&lt;benchm..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1461" width="3.1845%" height="15" fill="rgb(247,138,52)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1471.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1445" width="3.1845%" height="15" fill="rgb(213,79,30)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1455.50">&lt;se..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1429" width="3.1845%" height="15" fill="rgb(246,177,23)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1439.50">&lt;al..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1413" width="3.1845%" height="15" fill="rgb(230,62,27)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1423.50">&lt;al..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1397" width="3.1845%" height="15" fill="rgb(216,154,8)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1407.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1381" width="3.1845%" height="15" fill="rgb(244,35,45)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1391.50">&lt;se..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1365" width="3.1845%" height="15" fill="rgb(251,115,12)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1375.50">&lt;al..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1349" width="3.1845%" height="15" fill="rgb(240,54,50)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1359.50">&lt;al..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1333" width="3.1845%" height="15" fill="rgb(233,84,52)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1343.50">&lt;se..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1317" width="3.1845%" height="15" fill="rgb(207,117,47)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1327.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1301" width="3.1845%" height="15" fill="rgb(249,43,39)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1311.50">all..</text></g><g><title>alloc::slice::hack::to_vec (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1285" width="3.1845%" height="15" fill="rgb(209,38,44)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1295.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1269" width="3.1845%" height="15" fill="rgb(236,212,23)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1279.50">&lt;T ..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1253" width="3.1845%" height="15" fill="rgb(242,79,21)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1263.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1237" width="3.1845%" height="15" fill="rgb(211,96,35)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1247.50">&lt;se..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1221" width="3.1845%" height="15" fill="rgb(253,215,40)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1231.50">&lt;al..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1205" width="3.1845%" height="15" fill="rgb(211,81,21)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1215.50">&lt;al..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1189" width="3.1845%" height="15" fill="rgb(208,190,38)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1199.50">&lt;se..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1173" width="3.1845%" height="15" fill="rgb(235,213,38)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1183.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1157" width="3.1845%" height="15" fill="rgb(237,122,38)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1167.50">all..</text></g><g><title>alloc::slice::hack::to_vec (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1141" width="3.1845%" height="15" fill="rgb(244,218,35)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1151.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1125" width="3.1845%" height="15" fill="rgb(240,68,47)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1135.50">&lt;T ..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1109" width="3.1845%" height="15" fill="rgb(210,16,53)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1119.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1093" width="3.1845%" height="15" fill="rgb(235,124,12)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1103.50">&lt;se..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1077" width="3.1845%" height="15" fill="rgb(224,169,11)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1087.50">&lt;al..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1061" width="3.1845%" height="15" fill="rgb(250,166,2)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1071.50">&lt;al..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1045" width="3.1845%" height="15" fill="rgb(242,216,29)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1055.50">&lt;se..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1029" width="3.1845%" height="15" fill="rgb(230,116,27)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1039.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="1013" width="3.1845%" height="15" fill="rgb(228,99,48)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1023.50">all..</text></g><g><title>alloc::slice::hack::to_vec (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="997" width="3.1845%" height="15" fill="rgb(253,11,6)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="1007.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="981" width="3.1845%" height="15" fill="rgb(247,143,39)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="991.50">&lt;T ..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="965" width="3.1845%" height="15" fill="rgb(236,97,10)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="975.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="949" width="3.1845%" height="15" fill="rgb(233,208,19)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="959.50">&lt;se..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="933" width="3.1845%" height="15" fill="rgb(216,164,2)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="943.50">&lt;al..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="917" width="3.1845%" height="15" fill="rgb(220,129,5)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="927.50">&lt;al..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="901" width="3.1845%" height="15" fill="rgb(242,17,10)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="911.50">&lt;se..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="885" width="3.1845%" height="15" fill="rgb(242,107,0)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="895.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="869" width="3.1845%" height="15" fill="rgb(251,28,31)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="879.50">all..</text></g><g><title>alloc::slice::hack::to_vec (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="853" width="3.1845%" height="15" fill="rgb(233,223,10)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="863.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="837" width="3.1845%" height="15" fill="rgb(215,21,27)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="847.50">&lt;T ..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="821" width="3.1845%" height="15" fill="rgb(232,23,21)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="831.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="805" width="3.1845%" height="15" fill="rgb(244,5,23)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="815.50">&lt;se..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="789" width="3.1845%" height="15" fill="rgb(226,81,46)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="799.50">&lt;al..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="773" width="3.1845%" height="15" fill="rgb(247,70,30)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="783.50">&lt;al..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,920,569 samples, 3.18%)</title><rect x="9.7444%" y="757" width="3.1845%" height="15" fill="rgb(212,68,19)" fg:x="24236358" fg:w="7920569"/><text x="9.9944%" y="767.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,129,004 samples, 0.86%)</title><rect x="12.0729%" y="741" width="0.8560%" height="15" fill="rgb(240,187,13)" fg:x="30027923" fg:w="2129004"/><text x="12.3229%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,129,004 samples, 0.86%)</title><rect x="12.0729%" y="725" width="0.8560%" height="15" fill="rgb(223,113,26)" fg:x="30027923" fg:w="2129004"/><text x="12.3229%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,129,004 samples, 0.86%)</title><rect x="12.0729%" y="709" width="0.8560%" height="15" fill="rgb(206,192,2)" fg:x="30027923" fg:w="2129004"/><text x="12.3229%" y="719.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,129,004 samples, 0.86%)</title><rect x="12.0729%" y="693" width="0.8560%" height="15" fill="rgb(241,108,4)" fg:x="30027923" fg:w="2129004"/><text x="12.3229%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,129,004 samples, 0.86%)</title><rect x="12.0729%" y="677" width="0.8560%" height="15" fill="rgb(247,173,49)" fg:x="30027923" fg:w="2129004"/><text x="12.3229%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,129,004 samples, 0.86%)</title><rect x="12.0729%" y="661" width="0.8560%" height="15" fill="rgb(224,114,35)" fg:x="30027923" fg:w="2129004"/><text x="12.3229%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,129,004 samples, 0.86%)</title><rect x="12.0729%" y="645" width="0.8560%" height="15" fill="rgb(245,159,27)" fg:x="30027923" fg:w="2129004"/><text x="12.3229%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (2,129,004 samples, 0.86%)</title><rect x="12.0729%" y="629" width="0.8560%" height="15" fill="rgb(245,172,44)" fg:x="30027923" fg:w="2129004"/><text x="12.3229%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,129,004 samples, 0.86%)</title><rect x="12.0729%" y="613" width="0.8560%" height="15" fill="rgb(236,23,11)" fg:x="30027923" fg:w="2129004"/><text x="12.3229%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,129,004 samples, 0.86%)</title><rect x="12.0729%" y="597" width="0.8560%" height="15" fill="rgb(205,117,38)" fg:x="30027923" fg:w="2129004"/><text x="12.3229%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,129,004 samples, 0.86%)</title><rect x="12.0729%" y="581" width="0.8560%" height="15" fill="rgb(237,72,25)" fg:x="30027923" fg:w="2129004"/><text x="12.3229%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,129,004 samples, 0.86%)</title><rect x="12.0729%" y="565" width="0.8560%" height="15" fill="rgb(244,70,9)" fg:x="30027923" fg:w="2129004"/><text x="12.3229%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,129,004 samples, 0.86%)</title><rect x="12.0729%" y="549" width="0.8560%" height="15" fill="rgb(217,125,39)" fg:x="30027923" fg:w="2129004"/><text x="12.3229%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,129,004 samples, 0.86%)</title><rect x="12.0729%" y="533" width="0.8560%" height="15" fill="rgb(235,36,10)" fg:x="30027923" fg:w="2129004"/><text x="12.3229%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,129,004 samples, 0.86%)</title><rect x="12.0729%" y="517" width="0.8560%" height="15" fill="rgb(251,123,47)" fg:x="30027923" fg:w="2129004"/><text x="12.3229%" y="527.50"></text></g><g><title>alloc::alloc::alloc (2,129,004 samples, 0.86%)</title><rect x="12.0729%" y="501" width="0.8560%" height="15" fill="rgb(221,13,13)" fg:x="30027923" fg:w="2129004"/><text x="12.3229%" y="511.50"></text></g><g><title>malloc (2,129,004 samples, 0.86%)</title><rect x="12.0729%" y="485" width="0.8560%" height="15" fill="rgb(238,131,9)" fg:x="30027923" fg:w="2129004"/><text x="12.3229%" y="495.50"></text></g><g><title>[libc.so.6] (2,129,004 samples, 0.86%)</title><rect x="12.0729%" y="469" width="0.8560%" height="15" fill="rgb(211,50,8)" fg:x="30027923" fg:w="2129004"/><text x="12.3229%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1477" width="1.1670%" height="15" fill="rgb(245,182,24)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1461" width="1.1670%" height="15" fill="rgb(242,14,37)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1445" width="1.1670%" height="15" fill="rgb(246,228,12)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1429" width="1.1670%" height="15" fill="rgb(213,55,15)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1413" width="1.1670%" height="15" fill="rgb(209,9,3)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1397" width="1.1670%" height="15" fill="rgb(230,59,30)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1407.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1381" width="1.1670%" height="15" fill="rgb(209,121,21)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1391.50"></text></g><g><title>core::mem::drop (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1365" width="1.1670%" height="15" fill="rgb(220,109,13)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1349" width="1.1670%" height="15" fill="rgb(232,18,1)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1359.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1333" width="1.1670%" height="15" fill="rgb(215,41,42)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1343.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1317" width="1.1670%" height="15" fill="rgb(224,123,36)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1301" width="1.1670%" height="15" fill="rgb(240,125,3)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1311.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1285" width="1.1670%" height="15" fill="rgb(205,98,50)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1295.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1269" width="1.1670%" height="15" fill="rgb(205,185,37)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1253" width="1.1670%" height="15" fill="rgb(238,207,15)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1237" width="1.1670%" height="15" fill="rgb(213,199,42)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1221" width="1.1670%" height="15" fill="rgb(235,201,11)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1231.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1205" width="1.1670%" height="15" fill="rgb(207,46,11)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1215.50"></text></g><g><title>core::mem::drop (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1189" width="1.1670%" height="15" fill="rgb(241,35,35)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1173" width="1.1670%" height="15" fill="rgb(243,32,47)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1157" width="1.1670%" height="15" fill="rgb(247,202,23)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1167.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1141" width="1.1670%" height="15" fill="rgb(219,102,11)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1125" width="1.1670%" height="15" fill="rgb(243,110,44)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1109" width="1.1670%" height="15" fill="rgb(222,74,54)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1119.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1093" width="1.1670%" height="15" fill="rgb(216,99,12)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1077" width="1.1670%" height="15" fill="rgb(226,22,26)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1061" width="1.1670%" height="15" fill="rgb(217,163,10)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1045" width="1.1670%" height="15" fill="rgb(213,25,53)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1029" width="1.1670%" height="15" fill="rgb(252,105,26)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="1013" width="1.1670%" height="15" fill="rgb(220,39,43)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="997" width="1.1670%" height="15" fill="rgb(229,68,48)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="981" width="1.1670%" height="15" fill="rgb(252,8,32)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="965" width="1.1670%" height="15" fill="rgb(223,20,43)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="975.50"></text></g><g><title>core::mem::drop (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="949" width="1.1670%" height="15" fill="rgb(229,81,49)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="933" width="1.1670%" height="15" fill="rgb(236,28,36)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="917" width="1.1670%" height="15" fill="rgb(249,185,26)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="901" width="1.1670%" height="15" fill="rgb(249,174,33)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="885" width="1.1670%" height="15" fill="rgb(233,201,37)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="869" width="1.1670%" height="15" fill="rgb(221,78,26)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="879.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="853" width="1.1670%" height="15" fill="rgb(250,127,30)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="863.50"></text></g><g><title>cfree (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="837" width="1.1670%" height="15" fill="rgb(230,49,44)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="847.50"></text></g><g><title>[libc.so.6] (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="821" width="1.1670%" height="15" fill="rgb(229,67,23)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="831.50"></text></g><g><title>[libc.so.6] (2,902,477 samples, 1.17%)</title><rect x="12.9289%" y="805" width="1.1670%" height="15" fill="rgb(249,83,47)" fg:x="32156927" fg:w="2902477"/><text x="13.1789%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (2,893,904 samples, 1.16%)</title><rect x="14.0958%" y="1461" width="1.1635%" height="15" fill="rgb(215,43,3)" fg:x="35059404" fg:w="2893904"/><text x="14.3458%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,893,904 samples, 1.16%)</title><rect x="14.0958%" y="1445" width="1.1635%" height="15" fill="rgb(238,154,13)" fg:x="35059404" fg:w="2893904"/><text x="14.3458%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,893,904 samples, 1.16%)</title><rect x="14.0958%" y="1429" width="1.1635%" height="15" fill="rgb(219,56,2)" fg:x="35059404" fg:w="2893904"/><text x="14.3458%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,893,904 samples, 1.16%)</title><rect x="14.0958%" y="1413" width="1.1635%" height="15" fill="rgb(233,0,4)" fg:x="35059404" fg:w="2893904"/><text x="14.3458%" y="1423.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,893,904 samples, 1.16%)</title><rect x="14.0958%" y="1397" width="1.1635%" height="15" fill="rgb(235,30,7)" fg:x="35059404" fg:w="2893904"/><text x="14.3458%" y="1407.50"></text></g><g><title>malloc (2,893,904 samples, 1.16%)</title><rect x="14.0958%" y="1381" width="1.1635%" height="15" fill="rgb(250,79,13)" fg:x="35059404" fg:w="2893904"/><text x="14.3458%" y="1391.50"></text></g><g><title>[libc.so.6] (2,893,904 samples, 1.16%)</title><rect x="14.0958%" y="1365" width="1.1635%" height="15" fill="rgb(211,146,34)" fg:x="35059404" fg:w="2893904"/><text x="14.3458%" y="1375.50"></text></g><g><title>[libc.so.6] (2,893,904 samples, 1.16%)</title><rect x="14.0958%" y="1349" width="1.1635%" height="15" fill="rgb(228,22,38)" fg:x="35059404" fg:w="2893904"/><text x="14.3458%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,854,341 samples, 1.15%)</title><rect x="15.2593%" y="1445" width="1.1476%" height="15" fill="rgb(235,168,5)" fg:x="37953308" fg:w="2854341"/><text x="15.5093%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,854,341 samples, 1.15%)</title><rect x="15.2593%" y="1429" width="1.1476%" height="15" fill="rgb(221,155,16)" fg:x="37953308" fg:w="2854341"/><text x="15.5093%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,854,341 samples, 1.15%)</title><rect x="15.2593%" y="1413" width="1.1476%" height="15" fill="rgb(215,215,53)" fg:x="37953308" fg:w="2854341"/><text x="15.5093%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,854,341 samples, 1.15%)</title><rect x="15.2593%" y="1397" width="1.1476%" height="15" fill="rgb(223,4,10)" fg:x="37953308" fg:w="2854341"/><text x="15.5093%" y="1407.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,854,341 samples, 1.15%)</title><rect x="15.2593%" y="1381" width="1.1476%" height="15" fill="rgb(234,103,6)" fg:x="37953308" fg:w="2854341"/><text x="15.5093%" y="1391.50"></text></g><g><title>malloc (2,854,341 samples, 1.15%)</title><rect x="15.2593%" y="1365" width="1.1476%" height="15" fill="rgb(227,97,0)" fg:x="37953308" fg:w="2854341"/><text x="15.5093%" y="1375.50"></text></g><g><title>[libc.so.6] (2,854,341 samples, 1.15%)</title><rect x="15.2593%" y="1349" width="1.1476%" height="15" fill="rgb(234,150,53)" fg:x="37953308" fg:w="2854341"/><text x="15.5093%" y="1359.50"></text></g><g><title>[libc.so.6] (2,854,341 samples, 1.15%)</title><rect x="15.2593%" y="1333" width="1.1476%" height="15" fill="rgb(228,201,54)" fg:x="37953308" fg:w="2854341"/><text x="15.5093%" y="1343.50"></text></g><g><title>benchmark::apply_frame_modifications (8,584,022 samples, 3.45%)</title><rect x="14.0958%" y="1477" width="3.4513%" height="15" fill="rgb(222,22,37)" fg:x="35059404" fg:w="8584022"/><text x="14.3458%" y="1487.50">ben..</text></g><g><title>benchmark::json_to_html_node (5,690,118 samples, 2.29%)</title><rect x="15.2593%" y="1461" width="2.2877%" height="15" fill="rgb(237,53,32)" fg:x="37953308" fg:w="5690118"/><text x="15.5093%" y="1471.50">b..</text></g><g><title>benchmark::json_to_html_node (2,835,777 samples, 1.14%)</title><rect x="16.4069%" y="1445" width="1.1401%" height="15" fill="rgb(233,25,53)" fg:x="40807649" fg:w="2835777"/><text x="16.6569%" y="1455.50"></text></g><g><title>benchmark::json_to_html_node (2,835,777 samples, 1.14%)</title><rect x="16.4069%" y="1429" width="1.1401%" height="15" fill="rgb(210,40,34)" fg:x="40807649" fg:w="2835777"/><text x="16.6569%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,835,777 samples, 1.14%)</title><rect x="16.4069%" y="1413" width="1.1401%" height="15" fill="rgb(241,220,44)" fg:x="40807649" fg:w="2835777"/><text x="16.6569%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,835,777 samples, 1.14%)</title><rect x="16.4069%" y="1397" width="1.1401%" height="15" fill="rgb(235,28,35)" fg:x="40807649" fg:w="2835777"/><text x="16.6569%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,835,777 samples, 1.14%)</title><rect x="16.4069%" y="1381" width="1.1401%" height="15" fill="rgb(210,56,17)" fg:x="40807649" fg:w="2835777"/><text x="16.6569%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,835,777 samples, 1.14%)</title><rect x="16.4069%" y="1365" width="1.1401%" height="15" fill="rgb(224,130,29)" fg:x="40807649" fg:w="2835777"/><text x="16.6569%" y="1375.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,835,777 samples, 1.14%)</title><rect x="16.4069%" y="1349" width="1.1401%" height="15" fill="rgb(235,212,8)" fg:x="40807649" fg:w="2835777"/><text x="16.6569%" y="1359.50"></text></g><g><title>malloc (2,835,777 samples, 1.14%)</title><rect x="16.4069%" y="1333" width="1.1401%" height="15" fill="rgb(223,33,50)" fg:x="40807649" fg:w="2835777"/><text x="16.6569%" y="1343.50"></text></g><g><title>[libc.so.6] (2,835,777 samples, 1.14%)</title><rect x="16.4069%" y="1317" width="1.1401%" height="15" fill="rgb(219,149,13)" fg:x="40807649" fg:w="2835777"/><text x="16.6569%" y="1327.50"></text></g><g><title>[libc.so.6] (2,835,777 samples, 1.14%)</title><rect x="16.4069%" y="1301" width="1.1401%" height="15" fill="rgb(250,156,29)" fg:x="40807649" fg:w="2835777"/><text x="16.6569%" y="1311.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,927,331 samples, 1.18%)</title><rect x="17.5471%" y="1125" width="1.1769%" height="15" fill="rgb(216,193,19)" fg:x="43643426" fg:w="2927331"/><text x="17.7971%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,927,331 samples, 1.18%)</title><rect x="17.5471%" y="1109" width="1.1769%" height="15" fill="rgb(216,135,14)" fg:x="43643426" fg:w="2927331"/><text x="17.7971%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,927,331 samples, 1.18%)</title><rect x="17.5471%" y="1093" width="1.1769%" height="15" fill="rgb(241,47,5)" fg:x="43643426" fg:w="2927331"/><text x="17.7971%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (2,927,331 samples, 1.18%)</title><rect x="17.5471%" y="1077" width="1.1769%" height="15" fill="rgb(233,42,35)" fg:x="43643426" fg:w="2927331"/><text x="17.7971%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,927,331 samples, 1.18%)</title><rect x="17.5471%" y="1061" width="1.1769%" height="15" fill="rgb(231,13,6)" fg:x="43643426" fg:w="2927331"/><text x="17.7971%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,927,331 samples, 1.18%)</title><rect x="17.5471%" y="1045" width="1.1769%" height="15" fill="rgb(207,181,40)" fg:x="43643426" fg:w="2927331"/><text x="17.7971%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,927,331 samples, 1.18%)</title><rect x="17.5471%" y="1029" width="1.1769%" height="15" fill="rgb(254,173,49)" fg:x="43643426" fg:w="2927331"/><text x="17.7971%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,927,331 samples, 1.18%)</title><rect x="17.5471%" y="1013" width="1.1769%" height="15" fill="rgb(221,1,38)" fg:x="43643426" fg:w="2927331"/><text x="17.7971%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,927,331 samples, 1.18%)</title><rect x="17.5471%" y="997" width="1.1769%" height="15" fill="rgb(206,124,46)" fg:x="43643426" fg:w="2927331"/><text x="17.7971%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,927,331 samples, 1.18%)</title><rect x="17.5471%" y="981" width="1.1769%" height="15" fill="rgb(249,21,11)" fg:x="43643426" fg:w="2927331"/><text x="17.7971%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,927,331 samples, 1.18%)</title><rect x="17.5471%" y="965" width="1.1769%" height="15" fill="rgb(222,201,40)" fg:x="43643426" fg:w="2927331"/><text x="17.7971%" y="975.50"></text></g><g><title>alloc::alloc::alloc (2,927,331 samples, 1.18%)</title><rect x="17.5471%" y="949" width="1.1769%" height="15" fill="rgb(235,61,29)" fg:x="43643426" fg:w="2927331"/><text x="17.7971%" y="959.50"></text></g><g><title>malloc (2,927,331 samples, 1.18%)</title><rect x="17.5471%" y="933" width="1.1769%" height="15" fill="rgb(219,207,3)" fg:x="43643426" fg:w="2927331"/><text x="17.7971%" y="943.50"></text></g><g><title>[libc.so.6] (2,927,331 samples, 1.18%)</title><rect x="17.5471%" y="917" width="1.1769%" height="15" fill="rgb(222,56,46)" fg:x="43643426" fg:w="2927331"/><text x="17.7971%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,238,448 samples, 0.90%)</title><rect x="18.7240%" y="1045" width="0.9000%" height="15" fill="rgb(239,76,54)" fg:x="46570757" fg:w="2238448"/><text x="18.9740%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,238,448 samples, 0.90%)</title><rect x="18.7240%" y="1029" width="0.9000%" height="15" fill="rgb(231,124,27)" fg:x="46570757" fg:w="2238448"/><text x="18.9740%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,238,448 samples, 0.90%)</title><rect x="18.7240%" y="1013" width="0.9000%" height="15" fill="rgb(249,195,6)" fg:x="46570757" fg:w="2238448"/><text x="18.9740%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (2,238,448 samples, 0.90%)</title><rect x="18.7240%" y="997" width="0.9000%" height="15" fill="rgb(237,174,47)" fg:x="46570757" fg:w="2238448"/><text x="18.9740%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,238,448 samples, 0.90%)</title><rect x="18.7240%" y="981" width="0.9000%" height="15" fill="rgb(206,201,31)" fg:x="46570757" fg:w="2238448"/><text x="18.9740%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,238,448 samples, 0.90%)</title><rect x="18.7240%" y="965" width="0.9000%" height="15" fill="rgb(231,57,52)" fg:x="46570757" fg:w="2238448"/><text x="18.9740%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,238,448 samples, 0.90%)</title><rect x="18.7240%" y="949" width="0.9000%" height="15" fill="rgb(248,177,22)" fg:x="46570757" fg:w="2238448"/><text x="18.9740%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,238,448 samples, 0.90%)</title><rect x="18.7240%" y="933" width="0.9000%" height="15" fill="rgb(215,211,37)" fg:x="46570757" fg:w="2238448"/><text x="18.9740%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,238,448 samples, 0.90%)</title><rect x="18.7240%" y="917" width="0.9000%" height="15" fill="rgb(241,128,51)" fg:x="46570757" fg:w="2238448"/><text x="18.9740%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,238,448 samples, 0.90%)</title><rect x="18.7240%" y="901" width="0.9000%" height="15" fill="rgb(227,165,31)" fg:x="46570757" fg:w="2238448"/><text x="18.9740%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,238,448 samples, 0.90%)</title><rect x="18.7240%" y="885" width="0.9000%" height="15" fill="rgb(228,167,24)" fg:x="46570757" fg:w="2238448"/><text x="18.9740%" y="895.50"></text></g><g><title>alloc::alloc::alloc (2,238,448 samples, 0.90%)</title><rect x="18.7240%" y="869" width="0.9000%" height="15" fill="rgb(228,143,12)" fg:x="46570757" fg:w="2238448"/><text x="18.9740%" y="879.50"></text></g><g><title>malloc (2,238,448 samples, 0.90%)</title><rect x="18.7240%" y="853" width="0.9000%" height="15" fill="rgb(249,149,8)" fg:x="46570757" fg:w="2238448"/><text x="18.9740%" y="863.50"></text></g><g><title>[libc.so.6] (2,238,448 samples, 0.90%)</title><rect x="18.7240%" y="837" width="0.9000%" height="15" fill="rgb(243,35,44)" fg:x="46570757" fg:w="2238448"/><text x="18.9740%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,824,855 samples, 1.14%)</title><rect x="19.6240%" y="965" width="1.1357%" height="15" fill="rgb(246,89,9)" fg:x="48809205" fg:w="2824855"/><text x="19.8740%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,824,855 samples, 1.14%)</title><rect x="19.6240%" y="949" width="1.1357%" height="15" fill="rgb(233,213,13)" fg:x="48809205" fg:w="2824855"/><text x="19.8740%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,824,855 samples, 1.14%)</title><rect x="19.6240%" y="933" width="1.1357%" height="15" fill="rgb(233,141,41)" fg:x="48809205" fg:w="2824855"/><text x="19.8740%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (2,824,855 samples, 1.14%)</title><rect x="19.6240%" y="917" width="1.1357%" height="15" fill="rgb(239,167,4)" fg:x="48809205" fg:w="2824855"/><text x="19.8740%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,824,855 samples, 1.14%)</title><rect x="19.6240%" y="901" width="1.1357%" height="15" fill="rgb(209,217,16)" fg:x="48809205" fg:w="2824855"/><text x="19.8740%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,824,855 samples, 1.14%)</title><rect x="19.6240%" y="885" width="1.1357%" height="15" fill="rgb(219,88,35)" fg:x="48809205" fg:w="2824855"/><text x="19.8740%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,824,855 samples, 1.14%)</title><rect x="19.6240%" y="869" width="1.1357%" height="15" fill="rgb(220,193,23)" fg:x="48809205" fg:w="2824855"/><text x="19.8740%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,824,855 samples, 1.14%)</title><rect x="19.6240%" y="853" width="1.1357%" height="15" fill="rgb(230,90,52)" fg:x="48809205" fg:w="2824855"/><text x="19.8740%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,824,855 samples, 1.14%)</title><rect x="19.6240%" y="837" width="1.1357%" height="15" fill="rgb(252,106,19)" fg:x="48809205" fg:w="2824855"/><text x="19.8740%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,824,855 samples, 1.14%)</title><rect x="19.6240%" y="821" width="1.1357%" height="15" fill="rgb(206,74,20)" fg:x="48809205" fg:w="2824855"/><text x="19.8740%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,824,855 samples, 1.14%)</title><rect x="19.6240%" y="805" width="1.1357%" height="15" fill="rgb(230,138,44)" fg:x="48809205" fg:w="2824855"/><text x="19.8740%" y="815.50"></text></g><g><title>alloc::alloc::alloc (2,824,855 samples, 1.14%)</title><rect x="19.6240%" y="789" width="1.1357%" height="15" fill="rgb(235,182,43)" fg:x="48809205" fg:w="2824855"/><text x="19.8740%" y="799.50"></text></g><g><title>malloc (2,824,855 samples, 1.14%)</title><rect x="19.6240%" y="773" width="1.1357%" height="15" fill="rgb(242,16,51)" fg:x="48809205" fg:w="2824855"/><text x="19.8740%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,690,347 samples, 2.29%)</title><rect x="20.7598%" y="885" width="2.2878%" height="15" fill="rgb(248,9,4)" fg:x="51634060" fg:w="5690347"/><text x="21.0098%" y="895.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,690,347 samples, 2.29%)</title><rect x="20.7598%" y="869" width="2.2878%" height="15" fill="rgb(210,31,22)" fg:x="51634060" fg:w="5690347"/><text x="21.0098%" y="879.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,690,347 samples, 2.29%)</title><rect x="20.7598%" y="853" width="2.2878%" height="15" fill="rgb(239,54,39)" fg:x="51634060" fg:w="5690347"/><text x="21.0098%" y="863.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,690,347 samples, 2.29%)</title><rect x="20.7598%" y="837" width="2.2878%" height="15" fill="rgb(230,99,41)" fg:x="51634060" fg:w="5690347"/><text x="21.0098%" y="847.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,690,347 samples, 2.29%)</title><rect x="20.7598%" y="821" width="2.2878%" height="15" fill="rgb(253,106,12)" fg:x="51634060" fg:w="5690347"/><text x="21.0098%" y="831.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,690,347 samples, 2.29%)</title><rect x="20.7598%" y="805" width="2.2878%" height="15" fill="rgb(213,46,41)" fg:x="51634060" fg:w="5690347"/><text x="21.0098%" y="815.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,690,347 samples, 2.29%)</title><rect x="20.7598%" y="789" width="2.2878%" height="15" fill="rgb(215,133,35)" fg:x="51634060" fg:w="5690347"/><text x="21.0098%" y="799.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,690,347 samples, 2.29%)</title><rect x="20.7598%" y="773" width="2.2878%" height="15" fill="rgb(213,28,5)" fg:x="51634060" fg:w="5690347"/><text x="21.0098%" y="783.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,690,347 samples, 2.29%)</title><rect x="20.7598%" y="757" width="2.2878%" height="15" fill="rgb(215,77,49)" fg:x="51634060" fg:w="5690347"/><text x="21.0098%" y="767.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,690,347 samples, 2.29%)</title><rect x="20.7598%" y="741" width="2.2878%" height="15" fill="rgb(248,100,22)" fg:x="51634060" fg:w="5690347"/><text x="21.0098%" y="751.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (5,690,347 samples, 2.29%)</title><rect x="20.7598%" y="725" width="2.2878%" height="15" fill="rgb(208,67,9)" fg:x="51634060" fg:w="5690347"/><text x="21.0098%" y="735.50">a..</text></g><g><title>alloc::alloc::alloc (5,690,347 samples, 2.29%)</title><rect x="20.7598%" y="709" width="2.2878%" height="15" fill="rgb(219,133,21)" fg:x="51634060" fg:w="5690347"/><text x="21.0098%" y="719.50">a..</text></g><g><title>malloc (5,690,347 samples, 2.29%)</title><rect x="20.7598%" y="693" width="2.2878%" height="15" fill="rgb(246,46,29)" fg:x="51634060" fg:w="5690347"/><text x="21.0098%" y="703.50">m..</text></g><g><title>[libc.so.6] (5,690,347 samples, 2.29%)</title><rect x="20.7598%" y="677" width="2.2878%" height="15" fill="rgb(246,185,52)" fg:x="51634060" fg:w="5690347"/><text x="21.0098%" y="687.50">[..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,825,614 samples, 1.14%)</title><rect x="23.0476%" y="325" width="1.1361%" height="15" fill="rgb(252,136,11)" fg:x="57324407" fg:w="2825614"/><text x="23.2976%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,825,614 samples, 1.14%)</title><rect x="23.0476%" y="309" width="1.1361%" height="15" fill="rgb(219,138,53)" fg:x="57324407" fg:w="2825614"/><text x="23.2976%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (2,825,614 samples, 1.14%)</title><rect x="23.0476%" y="293" width="1.1361%" height="15" fill="rgb(211,51,23)" fg:x="57324407" fg:w="2825614"/><text x="23.2976%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,825,614 samples, 1.14%)</title><rect x="23.0476%" y="277" width="1.1361%" height="15" fill="rgb(247,221,28)" fg:x="57324407" fg:w="2825614"/><text x="23.2976%" y="287.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (2,825,614 samples, 1.14%)</title><rect x="23.0476%" y="261" width="1.1361%" height="15" fill="rgb(251,222,45)" fg:x="57324407" fg:w="2825614"/><text x="23.2976%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,825,614 samples, 1.14%)</title><rect x="23.0476%" y="245" width="1.1361%" height="15" fill="rgb(217,162,53)" fg:x="57324407" fg:w="2825614"/><text x="23.2976%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,825,614 samples, 1.14%)</title><rect x="23.0476%" y="229" width="1.1361%" height="15" fill="rgb(229,93,14)" fg:x="57324407" fg:w="2825614"/><text x="23.2976%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (2,825,614 samples, 1.14%)</title><rect x="23.0476%" y="213" width="1.1361%" height="15" fill="rgb(209,67,49)" fg:x="57324407" fg:w="2825614"/><text x="23.2976%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,825,614 samples, 1.14%)</title><rect x="23.0476%" y="197" width="1.1361%" height="15" fill="rgb(213,87,29)" fg:x="57324407" fg:w="2825614"/><text x="23.2976%" y="207.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (2,825,614 samples, 1.14%)</title><rect x="23.0476%" y="181" width="1.1361%" height="15" fill="rgb(205,151,52)" fg:x="57324407" fg:w="2825614"/><text x="23.2976%" y="191.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,825,614 samples, 1.14%)</title><rect x="23.0476%" y="165" width="1.1361%" height="15" fill="rgb(253,215,39)" fg:x="57324407" fg:w="2825614"/><text x="23.2976%" y="175.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,825,614 samples, 1.14%)</title><rect x="23.0476%" y="149" width="1.1361%" height="15" fill="rgb(221,220,41)" fg:x="57324407" fg:w="2825614"/><text x="23.2976%" y="159.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,825,614 samples, 1.14%)</title><rect x="23.0476%" y="133" width="1.1361%" height="15" fill="rgb(218,133,21)" fg:x="57324407" fg:w="2825614"/><text x="23.2976%" y="143.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,825,614 samples, 1.14%)</title><rect x="23.0476%" y="117" width="1.1361%" height="15" fill="rgb(221,193,43)" fg:x="57324407" fg:w="2825614"/><text x="23.2976%" y="127.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,825,614 samples, 1.14%)</title><rect x="23.0476%" y="101" width="1.1361%" height="15" fill="rgb(240,128,52)" fg:x="57324407" fg:w="2825614"/><text x="23.2976%" y="111.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,825,614 samples, 1.14%)</title><rect x="23.0476%" y="85" width="1.1361%" height="15" fill="rgb(253,114,12)" fg:x="57324407" fg:w="2825614"/><text x="23.2976%" y="95.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2,825,614 samples, 1.14%)</title><rect x="23.0476%" y="69" width="1.1361%" height="15" fill="rgb(215,223,47)" fg:x="57324407" fg:w="2825614"/><text x="23.2976%" y="79.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2,825,614 samples, 1.14%)</title><rect x="23.0476%" y="53" width="1.1361%" height="15" fill="rgb(248,225,23)" fg:x="57324407" fg:w="2825614"/><text x="23.2976%" y="63.50"></text></g><g><title>core::ptr::write (2,825,614 samples, 1.14%)</title><rect x="23.0476%" y="37" width="1.1361%" height="15" fill="rgb(250,108,0)" fg:x="57324407" fg:w="2825614"/><text x="23.2976%" y="47.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,874,102 samples, 1.16%)</title><rect x="24.1837%" y="325" width="1.1555%" height="15" fill="rgb(228,208,7)" fg:x="60150021" fg:w="2874102"/><text x="24.4337%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,874,102 samples, 1.16%)</title><rect x="24.1837%" y="309" width="1.1555%" height="15" fill="rgb(244,45,10)" fg:x="60150021" fg:w="2874102"/><text x="24.4337%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,874,102 samples, 1.16%)</title><rect x="24.1837%" y="293" width="1.1555%" height="15" fill="rgb(207,125,25)" fg:x="60150021" fg:w="2874102"/><text x="24.4337%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,874,102 samples, 1.16%)</title><rect x="24.1837%" y="277" width="1.1555%" height="15" fill="rgb(210,195,18)" fg:x="60150021" fg:w="2874102"/><text x="24.4337%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (2,874,102 samples, 1.16%)</title><rect x="24.1837%" y="261" width="1.1555%" height="15" fill="rgb(249,80,12)" fg:x="60150021" fg:w="2874102"/><text x="24.4337%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,874,102 samples, 1.16%)</title><rect x="24.1837%" y="245" width="1.1555%" height="15" fill="rgb(221,65,9)" fg:x="60150021" fg:w="2874102"/><text x="24.4337%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,874,102 samples, 1.16%)</title><rect x="24.1837%" y="229" width="1.1555%" height="15" fill="rgb(235,49,36)" fg:x="60150021" fg:w="2874102"/><text x="24.4337%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,874,102 samples, 1.16%)</title><rect x="24.1837%" y="213" width="1.1555%" height="15" fill="rgb(225,32,20)" fg:x="60150021" fg:w="2874102"/><text x="24.4337%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,874,102 samples, 1.16%)</title><rect x="24.1837%" y="197" width="1.1555%" height="15" fill="rgb(215,141,46)" fg:x="60150021" fg:w="2874102"/><text x="24.4337%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,874,102 samples, 1.16%)</title><rect x="24.1837%" y="181" width="1.1555%" height="15" fill="rgb(250,160,47)" fg:x="60150021" fg:w="2874102"/><text x="24.4337%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,874,102 samples, 1.16%)</title><rect x="24.1837%" y="165" width="1.1555%" height="15" fill="rgb(216,222,40)" fg:x="60150021" fg:w="2874102"/><text x="24.4337%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,874,102 samples, 1.16%)</title><rect x="24.1837%" y="149" width="1.1555%" height="15" fill="rgb(234,217,39)" fg:x="60150021" fg:w="2874102"/><text x="24.4337%" y="159.50"></text></g><g><title>alloc::alloc::alloc (2,874,102 samples, 1.16%)</title><rect x="24.1837%" y="133" width="1.1555%" height="15" fill="rgb(207,178,40)" fg:x="60150021" fg:w="2874102"/><text x="24.4337%" y="143.50"></text></g><g><title>[libc.so.6] (2,874,102 samples, 1.16%)</title><rect x="24.1837%" y="117" width="1.1555%" height="15" fill="rgb(221,136,13)" fg:x="60150021" fg:w="2874102"/><text x="24.4337%" y="127.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,861,284 samples, 1.15%)</title><rect x="25.3392%" y="325" width="1.1504%" height="15" fill="rgb(249,199,10)" fg:x="63024123" fg:w="2861284"/><text x="25.5892%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,861,284 samples, 1.15%)</title><rect x="25.3392%" y="309" width="1.1504%" height="15" fill="rgb(249,222,13)" fg:x="63024123" fg:w="2861284"/><text x="25.5892%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,861,284 samples, 1.15%)</title><rect x="25.3392%" y="293" width="1.1504%" height="15" fill="rgb(244,185,38)" fg:x="63024123" fg:w="2861284"/><text x="25.5892%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (2,861,284 samples, 1.15%)</title><rect x="25.3392%" y="277" width="1.1504%" height="15" fill="rgb(236,202,9)" fg:x="63024123" fg:w="2861284"/><text x="25.5892%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,861,284 samples, 1.15%)</title><rect x="25.3392%" y="261" width="1.1504%" height="15" fill="rgb(250,229,37)" fg:x="63024123" fg:w="2861284"/><text x="25.5892%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,861,284 samples, 1.15%)</title><rect x="25.3392%" y="245" width="1.1504%" height="15" fill="rgb(206,174,23)" fg:x="63024123" fg:w="2861284"/><text x="25.5892%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,861,284 samples, 1.15%)</title><rect x="25.3392%" y="229" width="1.1504%" height="15" fill="rgb(211,33,43)" fg:x="63024123" fg:w="2861284"/><text x="25.5892%" y="239.50"></text></g><g><title>[libc.so.6] (2,861,284 samples, 1.15%)</title><rect x="25.3392%" y="213" width="1.1504%" height="15" fill="rgb(245,58,50)" fg:x="63024123" fg:w="2861284"/><text x="25.5892%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11,450,228 samples, 4.60%)</title><rect x="23.0476%" y="485" width="4.6036%" height="15" fill="rgb(244,68,36)" fg:x="57324407" fg:w="11450228"/><text x="23.2976%" y="495.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11,450,228 samples, 4.60%)</title><rect x="23.0476%" y="469" width="4.6036%" height="15" fill="rgb(232,229,15)" fg:x="57324407" fg:w="11450228"/><text x="23.2976%" y="479.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (11,450,228 samples, 4.60%)</title><rect x="23.0476%" y="453" width="4.6036%" height="15" fill="rgb(254,30,23)" fg:x="57324407" fg:w="11450228"/><text x="23.2976%" y="463.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11,450,228 samples, 4.60%)</title><rect x="23.0476%" y="437" width="4.6036%" height="15" fill="rgb(235,160,14)" fg:x="57324407" fg:w="11450228"/><text x="23.2976%" y="447.50">&lt;T as..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (11,450,228 samples, 4.60%)</title><rect x="23.0476%" y="421" width="4.6036%" height="15" fill="rgb(212,155,44)" fg:x="57324407" fg:w="11450228"/><text x="23.2976%" y="431.50">&lt;css_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11,450,228 samples, 4.60%)</title><rect x="23.0476%" y="405" width="4.6036%" height="15" fill="rgb(226,2,50)" fg:x="57324407" fg:w="11450228"/><text x="23.2976%" y="415.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11,450,228 samples, 4.60%)</title><rect x="23.0476%" y="389" width="4.6036%" height="15" fill="rgb(234,177,6)" fg:x="57324407" fg:w="11450228"/><text x="23.2976%" y="399.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (11,450,228 samples, 4.60%)</title><rect x="23.0476%" y="373" width="4.6036%" height="15" fill="rgb(217,24,9)" fg:x="57324407" fg:w="11450228"/><text x="23.2976%" y="383.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11,450,228 samples, 4.60%)</title><rect x="23.0476%" y="357" width="4.6036%" height="15" fill="rgb(220,13,46)" fg:x="57324407" fg:w="11450228"/><text x="23.2976%" y="367.50">&lt;T as..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (11,450,228 samples, 4.60%)</title><rect x="23.0476%" y="341" width="4.6036%" height="15" fill="rgb(239,221,27)" fg:x="57324407" fg:w="11450228"/><text x="23.2976%" y="351.50">&lt;css_..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,889,228 samples, 1.16%)</title><rect x="26.4896%" y="325" width="1.1616%" height="15" fill="rgb(222,198,25)" fg:x="65885407" fg:w="2889228"/><text x="26.7396%" y="335.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,889,228 samples, 1.16%)</title><rect x="26.4896%" y="309" width="1.1616%" height="15" fill="rgb(211,99,13)" fg:x="65885407" fg:w="2889228"/><text x="26.7396%" y="319.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,889,228 samples, 1.16%)</title><rect x="26.4896%" y="293" width="1.1616%" height="15" fill="rgb(232,111,31)" fg:x="65885407" fg:w="2889228"/><text x="26.7396%" y="303.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (14,289,387 samples, 5.75%)</title><rect x="23.0476%" y="501" width="5.7451%" height="15" fill="rgb(245,82,37)" fg:x="57324407" fg:w="14289387"/><text x="23.2976%" y="511.50">&lt;css_bi..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,839,159 samples, 1.14%)</title><rect x="27.6512%" y="485" width="1.1415%" height="15" fill="rgb(227,149,46)" fg:x="68774635" fg:w="2839159"/><text x="27.9012%" y="495.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,839,159 samples, 1.14%)</title><rect x="27.6512%" y="469" width="1.1415%" height="15" fill="rgb(218,36,50)" fg:x="68774635" fg:w="2839159"/><text x="27.9012%" y="479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,839,159 samples, 1.14%)</title><rect x="27.6512%" y="453" width="1.1415%" height="15" fill="rgb(226,80,48)" fg:x="68774635" fg:w="2839159"/><text x="27.9012%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,839,159 samples, 1.14%)</title><rect x="27.6512%" y="437" width="1.1415%" height="15" fill="rgb(238,224,15)" fg:x="68774635" fg:w="2839159"/><text x="27.9012%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,839,159 samples, 1.14%)</title><rect x="27.6512%" y="421" width="1.1415%" height="15" fill="rgb(241,136,10)" fg:x="68774635" fg:w="2839159"/><text x="27.9012%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,839,159 samples, 1.14%)</title><rect x="27.6512%" y="405" width="1.1415%" height="15" fill="rgb(208,32,45)" fg:x="68774635" fg:w="2839159"/><text x="27.9012%" y="415.50"></text></g><g><title>core::clone::Clone::clone (2,839,159 samples, 1.14%)</title><rect x="27.6512%" y="389" width="1.1415%" height="15" fill="rgb(207,135,9)" fg:x="68774635" fg:w="2839159"/><text x="27.9012%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,839,159 samples, 1.14%)</title><rect x="27.6512%" y="373" width="1.1415%" height="15" fill="rgb(206,86,44)" fg:x="68774635" fg:w="2839159"/><text x="27.9012%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,839,159 samples, 1.14%)</title><rect x="27.6512%" y="357" width="1.1415%" height="15" fill="rgb(245,177,15)" fg:x="68774635" fg:w="2839159"/><text x="27.9012%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,839,159 samples, 1.14%)</title><rect x="27.6512%" y="341" width="1.1415%" height="15" fill="rgb(206,64,50)" fg:x="68774635" fg:w="2839159"/><text x="27.9012%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2,839,159 samples, 1.14%)</title><rect x="27.6512%" y="325" width="1.1415%" height="15" fill="rgb(234,36,40)" fg:x="68774635" fg:w="2839159"/><text x="27.9012%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,839,159 samples, 1.14%)</title><rect x="27.6512%" y="309" width="1.1415%" height="15" fill="rgb(213,64,8)" fg:x="68774635" fg:w="2839159"/><text x="27.9012%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,839,159 samples, 1.14%)</title><rect x="27.6512%" y="293" width="1.1415%" height="15" fill="rgb(210,75,36)" fg:x="68774635" fg:w="2839159"/><text x="27.9012%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,839,159 samples, 1.14%)</title><rect x="27.6512%" y="277" width="1.1415%" height="15" fill="rgb(229,88,21)" fg:x="68774635" fg:w="2839159"/><text x="27.9012%" y="287.50"></text></g><g><title>[libc.so.6] (2,839,159 samples, 1.14%)</title><rect x="27.6512%" y="261" width="1.1415%" height="15" fill="rgb(252,204,47)" fg:x="68774635" fg:w="2839159"/><text x="27.9012%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,156,327 samples, 6.90%)</title><rect x="23.0476%" y="565" width="6.8978%" height="15" fill="rgb(208,77,27)" fg:x="57324407" fg:w="17156327"/><text x="23.2976%" y="575.50">&lt;alloc::v..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,156,327 samples, 6.90%)</title><rect x="23.0476%" y="549" width="6.8978%" height="15" fill="rgb(221,76,26)" fg:x="57324407" fg:w="17156327"/><text x="23.2976%" y="559.50">alloc::sl..</text></g><g><title>alloc::slice::hack::to_vec (17,156,327 samples, 6.90%)</title><rect x="23.0476%" y="533" width="6.8978%" height="15" fill="rgb(225,139,18)" fg:x="57324407" fg:w="17156327"/><text x="23.2976%" y="543.50">alloc::sl..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17,156,327 samples, 6.90%)</title><rect x="23.0476%" y="517" width="6.8978%" height="15" fill="rgb(230,137,11)" fg:x="57324407" fg:w="17156327"/><text x="23.2976%" y="527.50">&lt;T as all..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,866,940 samples, 1.15%)</title><rect x="28.7927%" y="501" width="1.1527%" height="15" fill="rgb(212,28,1)" fg:x="71613794" fg:w="2866940"/><text x="29.0427%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,866,940 samples, 1.15%)</title><rect x="28.7927%" y="485" width="1.1527%" height="15" fill="rgb(248,164,17)" fg:x="71613794" fg:w="2866940"/><text x="29.0427%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,866,940 samples, 1.15%)</title><rect x="28.7927%" y="469" width="1.1527%" height="15" fill="rgb(222,171,42)" fg:x="71613794" fg:w="2866940"/><text x="29.0427%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,866,940 samples, 1.15%)</title><rect x="28.7927%" y="453" width="1.1527%" height="15" fill="rgb(243,84,45)" fg:x="71613794" fg:w="2866940"/><text x="29.0427%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,866,940 samples, 1.15%)</title><rect x="28.7927%" y="437" width="1.1527%" height="15" fill="rgb(252,49,23)" fg:x="71613794" fg:w="2866940"/><text x="29.0427%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,866,940 samples, 1.15%)</title><rect x="28.7927%" y="421" width="1.1527%" height="15" fill="rgb(215,19,7)" fg:x="71613794" fg:w="2866940"/><text x="29.0427%" y="431.50"></text></g><g><title>alloc::alloc::alloc (2,866,940 samples, 1.15%)</title><rect x="28.7927%" y="405" width="1.1527%" height="15" fill="rgb(238,81,41)" fg:x="71613794" fg:w="2866940"/><text x="29.0427%" y="415.50"></text></g><g><title>malloc (2,866,940 samples, 1.15%)</title><rect x="28.7927%" y="389" width="1.1527%" height="15" fill="rgb(210,199,37)" fg:x="71613794" fg:w="2866940"/><text x="29.0427%" y="399.50"></text></g><g><title>[libc.so.6] (2,866,940 samples, 1.15%)</title><rect x="28.7927%" y="373" width="1.1527%" height="15" fill="rgb(244,192,49)" fg:x="71613794" fg:w="2866940"/><text x="29.0427%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (22,636,139 samples, 9.10%)</title><rect x="23.0476%" y="645" width="9.1010%" height="15" fill="rgb(226,211,11)" fg:x="57324407" fg:w="22636139"/><text x="23.2976%" y="655.50">&lt;alloc::vec::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22,636,139 samples, 9.10%)</title><rect x="23.0476%" y="629" width="9.1010%" height="15" fill="rgb(236,162,54)" fg:x="57324407" fg:w="22636139"/><text x="23.2976%" y="639.50">alloc::slice:..</text></g><g><title>alloc::slice::hack::to_vec (22,636,139 samples, 9.10%)</title><rect x="23.0476%" y="613" width="9.1010%" height="15" fill="rgb(220,229,9)" fg:x="57324407" fg:w="22636139"/><text x="23.2976%" y="623.50">alloc::slice:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22,636,139 samples, 9.10%)</title><rect x="23.0476%" y="597" width="9.1010%" height="15" fill="rgb(250,87,22)" fg:x="57324407" fg:w="22636139"/><text x="23.2976%" y="607.50">&lt;T as alloc::..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (22,636,139 samples, 9.10%)</title><rect x="23.0476%" y="581" width="9.1010%" height="15" fill="rgb(239,43,17)" fg:x="57324407" fg:w="22636139"/><text x="23.2976%" y="591.50">&lt;css_bitvecto..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (5,479,812 samples, 2.20%)</title><rect x="29.9454%" y="565" width="2.2032%" height="15" fill="rgb(231,177,25)" fg:x="74480734" fg:w="5479812"/><text x="30.1954%" y="575.50">&lt;..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (5,479,812 samples, 2.20%)</title><rect x="29.9454%" y="549" width="2.2032%" height="15" fill="rgb(219,179,1)" fg:x="74480734" fg:w="5479812"/><text x="30.1954%" y="559.50">&lt;..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5,479,812 samples, 2.20%)</title><rect x="29.9454%" y="533" width="2.2032%" height="15" fill="rgb(238,219,53)" fg:x="74480734" fg:w="5479812"/><text x="30.1954%" y="543.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,479,812 samples, 2.20%)</title><rect x="29.9454%" y="517" width="2.2032%" height="15" fill="rgb(232,167,36)" fg:x="74480734" fg:w="5479812"/><text x="30.1954%" y="527.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (5,479,812 samples, 2.20%)</title><rect x="29.9454%" y="501" width="2.2032%" height="15" fill="rgb(244,19,51)" fg:x="74480734" fg:w="5479812"/><text x="30.1954%" y="511.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (5,479,812 samples, 2.20%)</title><rect x="29.9454%" y="485" width="2.2032%" height="15" fill="rgb(224,6,22)" fg:x="74480734" fg:w="5479812"/><text x="30.1954%" y="495.50">h..</text></g><g><title>core::clone::Clone::clone (5,479,812 samples, 2.20%)</title><rect x="29.9454%" y="469" width="2.2032%" height="15" fill="rgb(224,145,5)" fg:x="74480734" fg:w="5479812"/><text x="30.1954%" y="479.50">c..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,479,812 samples, 2.20%)</title><rect x="29.9454%" y="453" width="2.2032%" height="15" fill="rgb(234,130,49)" fg:x="74480734" fg:w="5479812"/><text x="30.1954%" y="463.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,479,812 samples, 2.20%)</title><rect x="29.9454%" y="437" width="2.2032%" height="15" fill="rgb(254,6,2)" fg:x="74480734" fg:w="5479812"/><text x="30.1954%" y="447.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,479,812 samples, 2.20%)</title><rect x="29.9454%" y="421" width="2.2032%" height="15" fill="rgb(208,96,46)" fg:x="74480734" fg:w="5479812"/><text x="30.1954%" y="431.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,479,812 samples, 2.20%)</title><rect x="29.9454%" y="405" width="2.2032%" height="15" fill="rgb(239,3,39)" fg:x="74480734" fg:w="5479812"/><text x="30.1954%" y="415.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,479,812 samples, 2.20%)</title><rect x="29.9454%" y="389" width="2.2032%" height="15" fill="rgb(233,210,1)" fg:x="74480734" fg:w="5479812"/><text x="30.1954%" y="399.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,479,812 samples, 2.20%)</title><rect x="29.9454%" y="373" width="2.2032%" height="15" fill="rgb(244,137,37)" fg:x="74480734" fg:w="5479812"/><text x="30.1954%" y="383.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,479,812 samples, 2.20%)</title><rect x="29.9454%" y="357" width="2.2032%" height="15" fill="rgb(240,136,2)" fg:x="74480734" fg:w="5479812"/><text x="30.1954%" y="367.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,479,812 samples, 2.20%)</title><rect x="29.9454%" y="341" width="2.2032%" height="15" fill="rgb(239,18,37)" fg:x="74480734" fg:w="5479812"/><text x="30.1954%" y="351.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,479,812 samples, 2.20%)</title><rect x="29.9454%" y="325" width="2.2032%" height="15" fill="rgb(218,185,22)" fg:x="74480734" fg:w="5479812"/><text x="30.1954%" y="335.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,479,812 samples, 2.20%)</title><rect x="29.9454%" y="309" width="2.2032%" height="15" fill="rgb(225,218,4)" fg:x="74480734" fg:w="5479812"/><text x="30.1954%" y="319.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (5,479,812 samples, 2.20%)</title><rect x="29.9454%" y="293" width="2.2032%" height="15" fill="rgb(230,182,32)" fg:x="74480734" fg:w="5479812"/><text x="30.1954%" y="303.50">a..</text></g><g><title>alloc::alloc::alloc (5,479,812 samples, 2.20%)</title><rect x="29.9454%" y="277" width="2.2032%" height="15" fill="rgb(242,56,43)" fg:x="74480734" fg:w="5479812"/><text x="30.1954%" y="287.50">a..</text></g><g><title>malloc (5,479,812 samples, 2.20%)</title><rect x="29.9454%" y="261" width="2.2032%" height="15" fill="rgb(233,99,24)" fg:x="74480734" fg:w="5479812"/><text x="30.1954%" y="271.50">m..</text></g><g><title>__rdl_alloc (2,890,140 samples, 1.16%)</title><rect x="34.0878%" y="341" width="1.1620%" height="15" fill="rgb(234,209,42)" fg:x="84783905" fg:w="2890140"/><text x="34.3378%" y="351.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,890,140 samples, 1.16%)</title><rect x="34.0878%" y="325" width="1.1620%" height="15" fill="rgb(227,7,12)" fg:x="84783905" fg:w="2890140"/><text x="34.3378%" y="335.50"></text></g><g><title>core::clone::Clone::clone (11,167,071 samples, 4.49%)</title><rect x="33.0057%" y="549" width="4.4898%" height="15" fill="rgb(245,203,43)" fg:x="82092283" fg:w="11167071"/><text x="33.2557%" y="559.50">core:..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (11,167,071 samples, 4.49%)</title><rect x="33.0057%" y="533" width="4.4898%" height="15" fill="rgb(238,205,33)" fg:x="82092283" fg:w="11167071"/><text x="33.2557%" y="543.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11,167,071 samples, 4.49%)</title><rect x="33.0057%" y="517" width="4.4898%" height="15" fill="rgb(231,56,7)" fg:x="82092283" fg:w="11167071"/><text x="33.2557%" y="527.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11,167,071 samples, 4.49%)</title><rect x="33.0057%" y="501" width="4.4898%" height="15" fill="rgb(244,186,29)" fg:x="82092283" fg:w="11167071"/><text x="33.2557%" y="511.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (11,167,071 samples, 4.49%)</title><rect x="33.0057%" y="485" width="4.4898%" height="15" fill="rgb(234,111,31)" fg:x="82092283" fg:w="11167071"/><text x="33.2557%" y="495.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11,167,071 samples, 4.49%)</title><rect x="33.0057%" y="469" width="4.4898%" height="15" fill="rgb(241,149,10)" fg:x="82092283" fg:w="11167071"/><text x="33.2557%" y="479.50">&lt;T as..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11,167,071 samples, 4.49%)</title><rect x="33.0057%" y="453" width="4.4898%" height="15" fill="rgb(249,206,44)" fg:x="82092283" fg:w="11167071"/><text x="33.2557%" y="463.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11,167,071 samples, 4.49%)</title><rect x="33.0057%" y="437" width="4.4898%" height="15" fill="rgb(251,153,30)" fg:x="82092283" fg:w="11167071"/><text x="33.2557%" y="447.50">alloc..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (11,167,071 samples, 4.49%)</title><rect x="33.0057%" y="421" width="4.4898%" height="15" fill="rgb(239,152,38)" fg:x="82092283" fg:w="11167071"/><text x="33.2557%" y="431.50">alloc..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (11,167,071 samples, 4.49%)</title><rect x="33.0057%" y="405" width="4.4898%" height="15" fill="rgb(249,139,47)" fg:x="82092283" fg:w="11167071"/><text x="33.2557%" y="415.50">alloc..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8,475,449 samples, 3.41%)</title><rect x="34.0878%" y="389" width="3.4076%" height="15" fill="rgb(244,64,35)" fg:x="84783905" fg:w="8475449"/><text x="34.3378%" y="399.50">&lt;al..</text></g><g><title>alloc::alloc::Global::alloc_impl (8,475,449 samples, 3.41%)</title><rect x="34.0878%" y="373" width="3.4076%" height="15" fill="rgb(216,46,15)" fg:x="84783905" fg:w="8475449"/><text x="34.3378%" y="383.50">all..</text></g><g><title>alloc::alloc::alloc (8,475,449 samples, 3.41%)</title><rect x="34.0878%" y="357" width="3.4076%" height="15" fill="rgb(250,74,19)" fg:x="84783905" fg:w="8475449"/><text x="34.3378%" y="367.50">all..</text></g><g><title>malloc (5,585,309 samples, 2.25%)</title><rect x="35.2498%" y="341" width="2.2456%" height="15" fill="rgb(249,42,33)" fg:x="87674045" fg:w="5585309"/><text x="35.4998%" y="351.50">m..</text></g><g><title>[libc.so.6] (2,739,060 samples, 1.10%)</title><rect x="36.3942%" y="325" width="1.1013%" height="15" fill="rgb(242,149,17)" fg:x="90520294" fg:w="2739060"/><text x="36.6442%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (38,839,773 samples, 15.62%)</title><rect x="23.0476%" y="725" width="15.6157%" height="15" fill="rgb(244,29,21)" fg:x="57324407" fg:w="38839773"/><text x="23.2976%" y="735.50">&lt;alloc::vec::Vec&lt;T,A&gt; as..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (38,839,773 samples, 15.62%)</title><rect x="23.0476%" y="709" width="15.6157%" height="15" fill="rgb(220,130,37)" fg:x="57324407" fg:w="38839773"/><text x="23.2976%" y="719.50">alloc::slice::&lt;impl [T]&gt;..</text></g><g><title>alloc::slice::hack::to_vec (38,839,773 samples, 15.62%)</title><rect x="23.0476%" y="693" width="15.6157%" height="15" fill="rgb(211,67,2)" fg:x="57324407" fg:w="38839773"/><text x="23.2976%" y="703.50">alloc::slice::hack::to_v..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (38,839,773 samples, 15.62%)</title><rect x="23.0476%" y="677" width="15.6157%" height="15" fill="rgb(235,68,52)" fg:x="57324407" fg:w="38839773"/><text x="23.2976%" y="687.50">&lt;T as alloc::slice::hack..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (38,839,773 samples, 15.62%)</title><rect x="23.0476%" y="661" width="15.6157%" height="15" fill="rgb(246,142,3)" fg:x="57324407" fg:w="38839773"/><text x="23.2976%" y="671.50">&lt;css_bitvector_compiler:..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (16,203,634 samples, 6.51%)</title><rect x="32.1486%" y="645" width="6.5148%" height="15" fill="rgb(241,25,7)" fg:x="79960546" fg:w="16203634"/><text x="32.3986%" y="655.50">&lt;std::col..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (16,203,634 samples, 6.51%)</title><rect x="32.1486%" y="629" width="6.5148%" height="15" fill="rgb(242,119,39)" fg:x="79960546" fg:w="16203634"/><text x="32.3986%" y="639.50">&lt;hashbrow..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (14,071,897 samples, 5.66%)</title><rect x="33.0057%" y="613" width="5.6577%" height="15" fill="rgb(241,98,45)" fg:x="82092283" fg:w="14071897"/><text x="33.2557%" y="623.50">&lt;hashbr..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (14,071,897 samples, 5.66%)</title><rect x="33.0057%" y="597" width="5.6577%" height="15" fill="rgb(254,28,30)" fg:x="82092283" fg:w="14071897"/><text x="33.2557%" y="607.50">&lt;hashbr..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (14,071,897 samples, 5.66%)</title><rect x="33.0057%" y="581" width="5.6577%" height="15" fill="rgb(241,142,54)" fg:x="82092283" fg:w="14071897"/><text x="33.2557%" y="591.50">&lt;hashbr..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (14,071,897 samples, 5.66%)</title><rect x="33.0057%" y="565" width="5.6577%" height="15" fill="rgb(222,85,15)" fg:x="82092283" fg:w="14071897"/><text x="33.2557%" y="575.50">hashbro..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2,904,826 samples, 1.17%)</title><rect x="37.4954%" y="549" width="1.1679%" height="15" fill="rgb(210,85,47)" fg:x="93259354" fg:w="2904826"/><text x="37.7454%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2,904,826 samples, 1.17%)</title><rect x="37.4954%" y="533" width="1.1679%" height="15" fill="rgb(224,206,25)" fg:x="93259354" fg:w="2904826"/><text x="37.7454%" y="543.50"></text></g><g><title>core::ptr::write (2,904,826 samples, 1.17%)</title><rect x="37.4954%" y="517" width="1.1679%" height="15" fill="rgb(243,201,19)" fg:x="93259354" fg:w="2904826"/><text x="37.7454%" y="527.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5,564,331 samples, 2.24%)</title><rect x="38.6633%" y="725" width="2.2372%" height="15" fill="rgb(236,59,4)" fg:x="96164180" fg:w="5564331"/><text x="38.9133%" y="735.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,564,331 samples, 2.24%)</title><rect x="38.6633%" y="709" width="2.2372%" height="15" fill="rgb(254,179,45)" fg:x="96164180" fg:w="5564331"/><text x="38.9133%" y="719.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,564,331 samples, 2.24%)</title><rect x="38.6633%" y="693" width="2.2372%" height="15" fill="rgb(226,14,10)" fg:x="96164180" fg:w="5564331"/><text x="38.9133%" y="703.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,564,331 samples, 2.24%)</title><rect x="38.6633%" y="677" width="2.2372%" height="15" fill="rgb(244,27,41)" fg:x="96164180" fg:w="5564331"/><text x="38.9133%" y="687.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,564,331 samples, 2.24%)</title><rect x="38.6633%" y="661" width="2.2372%" height="15" fill="rgb(235,35,32)" fg:x="96164180" fg:w="5564331"/><text x="38.9133%" y="671.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,564,331 samples, 2.24%)</title><rect x="38.6633%" y="645" width="2.2372%" height="15" fill="rgb(218,68,31)" fg:x="96164180" fg:w="5564331"/><text x="38.9133%" y="655.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,564,331 samples, 2.24%)</title><rect x="38.6633%" y="629" width="2.2372%" height="15" fill="rgb(207,120,37)" fg:x="96164180" fg:w="5564331"/><text x="38.9133%" y="639.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,564,331 samples, 2.24%)</title><rect x="38.6633%" y="613" width="2.2372%" height="15" fill="rgb(227,98,0)" fg:x="96164180" fg:w="5564331"/><text x="38.9133%" y="623.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,564,331 samples, 2.24%)</title><rect x="38.6633%" y="597" width="2.2372%" height="15" fill="rgb(207,7,3)" fg:x="96164180" fg:w="5564331"/><text x="38.9133%" y="607.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,564,331 samples, 2.24%)</title><rect x="38.6633%" y="581" width="2.2372%" height="15" fill="rgb(206,98,19)" fg:x="96164180" fg:w="5564331"/><text x="38.9133%" y="591.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,564,331 samples, 2.24%)</title><rect x="38.6633%" y="565" width="2.2372%" height="15" fill="rgb(217,5,26)" fg:x="96164180" fg:w="5564331"/><text x="38.9133%" y="575.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (5,564,331 samples, 2.24%)</title><rect x="38.6633%" y="549" width="2.2372%" height="15" fill="rgb(235,190,38)" fg:x="96164180" fg:w="5564331"/><text x="38.9133%" y="559.50">a..</text></g><g><title>alloc::alloc::alloc (5,564,331 samples, 2.24%)</title><rect x="38.6633%" y="533" width="2.2372%" height="15" fill="rgb(247,86,24)" fg:x="96164180" fg:w="5564331"/><text x="38.9133%" y="543.50">a..</text></g><g><title>malloc (5,564,331 samples, 2.24%)</title><rect x="38.6633%" y="517" width="2.2372%" height="15" fill="rgb(205,101,16)" fg:x="96164180" fg:w="5564331"/><text x="38.9133%" y="527.50">m..</text></g><g><title>[libc.so.6] (5,564,331 samples, 2.24%)</title><rect x="38.6633%" y="501" width="2.2372%" height="15" fill="rgb(246,168,33)" fg:x="96164180" fg:w="5564331"/><text x="38.9133%" y="511.50">[..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (47,191,574 samples, 18.97%)</title><rect x="23.0476%" y="885" width="18.9736%" height="15" fill="rgb(231,114,1)" fg:x="57324407" fg:w="47191574"/><text x="23.2976%" y="895.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (47,191,574 samples, 18.97%)</title><rect x="23.0476%" y="869" width="18.9736%" height="15" fill="rgb(207,184,53)" fg:x="57324407" fg:w="47191574"/><text x="23.2976%" y="879.50">alloc::slice::&lt;impl [T]&gt;::to_v..</text></g><g><title>alloc::slice::hack::to_vec (47,191,574 samples, 18.97%)</title><rect x="23.0476%" y="853" width="18.9736%" height="15" fill="rgb(224,95,51)" fg:x="57324407" fg:w="47191574"/><text x="23.2976%" y="863.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (47,191,574 samples, 18.97%)</title><rect x="23.0476%" y="837" width="18.9736%" height="15" fill="rgb(212,188,45)" fg:x="57324407" fg:w="47191574"/><text x="23.2976%" y="847.50">&lt;T as alloc::slice::hack::Conv..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (47,191,574 samples, 18.97%)</title><rect x="23.0476%" y="821" width="18.9736%" height="15" fill="rgb(223,154,38)" fg:x="57324407" fg:w="47191574"/><text x="23.2976%" y="831.50">&lt;css_bitvector_compiler::HtmlN..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (47,191,574 samples, 18.97%)</title><rect x="23.0476%" y="805" width="18.9736%" height="15" fill="rgb(251,22,52)" fg:x="57324407" fg:w="47191574"/><text x="23.2976%" y="815.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (47,191,574 samples, 18.97%)</title><rect x="23.0476%" y="789" width="18.9736%" height="15" fill="rgb(229,209,22)" fg:x="57324407" fg:w="47191574"/><text x="23.2976%" y="799.50">alloc::slice::&lt;impl [T]&gt;::to_v..</text></g><g><title>alloc::slice::hack::to_vec (47,191,574 samples, 18.97%)</title><rect x="23.0476%" y="773" width="18.9736%" height="15" fill="rgb(234,138,34)" fg:x="57324407" fg:w="47191574"/><text x="23.2976%" y="783.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (47,191,574 samples, 18.97%)</title><rect x="23.0476%" y="757" width="18.9736%" height="15" fill="rgb(212,95,11)" fg:x="57324407" fg:w="47191574"/><text x="23.2976%" y="767.50">&lt;T as alloc::slice::hack::Conv..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (47,191,574 samples, 18.97%)</title><rect x="23.0476%" y="741" width="18.9736%" height="15" fill="rgb(240,179,47)" fg:x="57324407" fg:w="47191574"/><text x="23.2976%" y="751.50">&lt;css_bitvector_compiler::HtmlN..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,787,470 samples, 1.12%)</title><rect x="40.9005%" y="725" width="1.1207%" height="15" fill="rgb(240,163,11)" fg:x="101728511" fg:w="2787470"/><text x="41.1505%" y="735.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,787,470 samples, 1.12%)</title><rect x="40.9005%" y="709" width="1.1207%" height="15" fill="rgb(236,37,12)" fg:x="101728511" fg:w="2787470"/><text x="41.1505%" y="719.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,787,470 samples, 1.12%)</title><rect x="40.9005%" y="693" width="1.1207%" height="15" fill="rgb(232,164,16)" fg:x="101728511" fg:w="2787470"/><text x="41.1505%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,787,470 samples, 1.12%)</title><rect x="40.9005%" y="677" width="1.1207%" height="15" fill="rgb(244,205,15)" fg:x="101728511" fg:w="2787470"/><text x="41.1505%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,787,470 samples, 1.12%)</title><rect x="40.9005%" y="661" width="1.1207%" height="15" fill="rgb(223,117,47)" fg:x="101728511" fg:w="2787470"/><text x="41.1505%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,787,470 samples, 1.12%)</title><rect x="40.9005%" y="645" width="1.1207%" height="15" fill="rgb(244,107,35)" fg:x="101728511" fg:w="2787470"/><text x="41.1505%" y="655.50"></text></g><g><title>core::clone::Clone::clone (2,787,470 samples, 1.12%)</title><rect x="40.9005%" y="629" width="1.1207%" height="15" fill="rgb(205,140,8)" fg:x="101728511" fg:w="2787470"/><text x="41.1505%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,787,470 samples, 1.12%)</title><rect x="40.9005%" y="613" width="1.1207%" height="15" fill="rgb(228,84,46)" fg:x="101728511" fg:w="2787470"/><text x="41.1505%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,787,470 samples, 1.12%)</title><rect x="40.9005%" y="597" width="1.1207%" height="15" fill="rgb(254,188,9)" fg:x="101728511" fg:w="2787470"/><text x="41.1505%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,787,470 samples, 1.12%)</title><rect x="40.9005%" y="581" width="1.1207%" height="15" fill="rgb(206,112,54)" fg:x="101728511" fg:w="2787470"/><text x="41.1505%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (2,787,470 samples, 1.12%)</title><rect x="40.9005%" y="565" width="1.1207%" height="15" fill="rgb(216,84,49)" fg:x="101728511" fg:w="2787470"/><text x="41.1505%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,787,470 samples, 1.12%)</title><rect x="40.9005%" y="549" width="1.1207%" height="15" fill="rgb(214,194,35)" fg:x="101728511" fg:w="2787470"/><text x="41.1505%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,787,470 samples, 1.12%)</title><rect x="40.9005%" y="533" width="1.1207%" height="15" fill="rgb(249,28,3)" fg:x="101728511" fg:w="2787470"/><text x="41.1505%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,787,470 samples, 1.12%)</title><rect x="40.9005%" y="517" width="1.1207%" height="15" fill="rgb(222,56,52)" fg:x="101728511" fg:w="2787470"/><text x="41.1505%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,787,470 samples, 1.12%)</title><rect x="40.9005%" y="501" width="1.1207%" height="15" fill="rgb(245,217,50)" fg:x="101728511" fg:w="2787470"/><text x="41.1505%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,787,470 samples, 1.12%)</title><rect x="40.9005%" y="485" width="1.1207%" height="15" fill="rgb(213,201,24)" fg:x="101728511" fg:w="2787470"/><text x="41.1505%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,787,470 samples, 1.12%)</title><rect x="40.9005%" y="469" width="1.1207%" height="15" fill="rgb(248,116,28)" fg:x="101728511" fg:w="2787470"/><text x="41.1505%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,787,470 samples, 1.12%)</title><rect x="40.9005%" y="453" width="1.1207%" height="15" fill="rgb(219,72,43)" fg:x="101728511" fg:w="2787470"/><text x="41.1505%" y="463.50"></text></g><g><title>alloc::alloc::alloc (2,787,470 samples, 1.12%)</title><rect x="40.9005%" y="437" width="1.1207%" height="15" fill="rgb(209,138,14)" fg:x="101728511" fg:w="2787470"/><text x="41.1505%" y="447.50"></text></g><g><title>malloc (2,787,470 samples, 1.12%)</title><rect x="40.9005%" y="421" width="1.1207%" height="15" fill="rgb(222,18,33)" fg:x="101728511" fg:w="2787470"/><text x="41.1505%" y="431.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,800,548 samples, 1.13%)</title><rect x="42.0212%" y="885" width="1.1260%" height="15" fill="rgb(213,199,7)" fg:x="104515981" fg:w="2800548"/><text x="42.2712%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,800,548 samples, 1.13%)</title><rect x="42.0212%" y="869" width="1.1260%" height="15" fill="rgb(250,110,10)" fg:x="104515981" fg:w="2800548"/><text x="42.2712%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,800,548 samples, 1.13%)</title><rect x="42.0212%" y="853" width="1.1260%" height="15" fill="rgb(248,123,6)" fg:x="104515981" fg:w="2800548"/><text x="42.2712%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,800,548 samples, 1.13%)</title><rect x="42.0212%" y="837" width="1.1260%" height="15" fill="rgb(206,91,31)" fg:x="104515981" fg:w="2800548"/><text x="42.2712%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (2,800,548 samples, 1.13%)</title><rect x="42.0212%" y="821" width="1.1260%" height="15" fill="rgb(211,154,13)" fg:x="104515981" fg:w="2800548"/><text x="42.2712%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,800,548 samples, 1.13%)</title><rect x="42.0212%" y="805" width="1.1260%" height="15" fill="rgb(225,148,7)" fg:x="104515981" fg:w="2800548"/><text x="42.2712%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,800,548 samples, 1.13%)</title><rect x="42.0212%" y="789" width="1.1260%" height="15" fill="rgb(220,160,43)" fg:x="104515981" fg:w="2800548"/><text x="42.2712%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,800,548 samples, 1.13%)</title><rect x="42.0212%" y="773" width="1.1260%" height="15" fill="rgb(213,52,39)" fg:x="104515981" fg:w="2800548"/><text x="42.2712%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,800,548 samples, 1.13%)</title><rect x="42.0212%" y="757" width="1.1260%" height="15" fill="rgb(243,137,7)" fg:x="104515981" fg:w="2800548"/><text x="42.2712%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,800,548 samples, 1.13%)</title><rect x="42.0212%" y="741" width="1.1260%" height="15" fill="rgb(230,79,13)" fg:x="104515981" fg:w="2800548"/><text x="42.2712%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,800,548 samples, 1.13%)</title><rect x="42.0212%" y="725" width="1.1260%" height="15" fill="rgb(247,105,23)" fg:x="104515981" fg:w="2800548"/><text x="42.2712%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,800,548 samples, 1.13%)</title><rect x="42.0212%" y="709" width="1.1260%" height="15" fill="rgb(223,179,41)" fg:x="104515981" fg:w="2800548"/><text x="42.2712%" y="719.50"></text></g><g><title>alloc::alloc::alloc (2,800,548 samples, 1.13%)</title><rect x="42.0212%" y="693" width="1.1260%" height="15" fill="rgb(218,9,34)" fg:x="104515981" fg:w="2800548"/><text x="42.2712%" y="703.50"></text></g><g><title>malloc (2,800,548 samples, 1.13%)</title><rect x="42.0212%" y="677" width="1.1260%" height="15" fill="rgb(222,106,8)" fg:x="104515981" fg:w="2800548"/><text x="42.2712%" y="687.50"></text></g><g><title>[libc.so.6] (2,800,548 samples, 1.13%)</title><rect x="42.0212%" y="661" width="1.1260%" height="15" fill="rgb(211,220,0)" fg:x="104515981" fg:w="2800548"/><text x="42.2712%" y="671.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,740,640 samples, 1.10%)</title><rect x="43.1472%" y="885" width="1.1019%" height="15" fill="rgb(229,52,16)" fg:x="107316529" fg:w="2740640"/><text x="43.3972%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,740,640 samples, 1.10%)</title><rect x="43.1472%" y="869" width="1.1019%" height="15" fill="rgb(212,155,18)" fg:x="107316529" fg:w="2740640"/><text x="43.3972%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,740,640 samples, 1.10%)</title><rect x="43.1472%" y="853" width="1.1019%" height="15" fill="rgb(242,21,14)" fg:x="107316529" fg:w="2740640"/><text x="43.3972%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (2,740,640 samples, 1.10%)</title><rect x="43.1472%" y="837" width="1.1019%" height="15" fill="rgb(222,19,48)" fg:x="107316529" fg:w="2740640"/><text x="43.3972%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,740,640 samples, 1.10%)</title><rect x="43.1472%" y="821" width="1.1019%" height="15" fill="rgb(232,45,27)" fg:x="107316529" fg:w="2740640"/><text x="43.3972%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,740,640 samples, 1.10%)</title><rect x="43.1472%" y="805" width="1.1019%" height="15" fill="rgb(249,103,42)" fg:x="107316529" fg:w="2740640"/><text x="43.3972%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,740,640 samples, 1.10%)</title><rect x="43.1472%" y="789" width="1.1019%" height="15" fill="rgb(246,81,33)" fg:x="107316529" fg:w="2740640"/><text x="43.3972%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,740,640 samples, 1.10%)</title><rect x="43.1472%" y="773" width="1.1019%" height="15" fill="rgb(252,33,42)" fg:x="107316529" fg:w="2740640"/><text x="43.3972%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,740,640 samples, 1.10%)</title><rect x="43.1472%" y="757" width="1.1019%" height="15" fill="rgb(209,212,41)" fg:x="107316529" fg:w="2740640"/><text x="43.3972%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,740,640 samples, 1.10%)</title><rect x="43.1472%" y="741" width="1.1019%" height="15" fill="rgb(207,154,6)" fg:x="107316529" fg:w="2740640"/><text x="43.3972%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,740,640 samples, 1.10%)</title><rect x="43.1472%" y="725" width="1.1019%" height="15" fill="rgb(223,64,47)" fg:x="107316529" fg:w="2740640"/><text x="43.3972%" y="735.50"></text></g><g><title>alloc::alloc::alloc (2,740,640 samples, 1.10%)</title><rect x="43.1472%" y="709" width="1.1019%" height="15" fill="rgb(211,161,38)" fg:x="107316529" fg:w="2740640"/><text x="43.3972%" y="719.50"></text></g><g><title>malloc (2,740,640 samples, 1.10%)</title><rect x="43.1472%" y="693" width="1.1019%" height="15" fill="rgb(219,138,40)" fg:x="107316529" fg:w="2740640"/><text x="43.3972%" y="703.50"></text></g><g><title>[libc.so.6] (2,740,640 samples, 1.10%)</title><rect x="43.1472%" y="677" width="1.1019%" height="15" fill="rgb(241,228,46)" fg:x="107316529" fg:w="2740640"/><text x="43.3972%" y="687.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (61,266,366 samples, 24.63%)</title><rect x="20.7598%" y="901" width="24.6325%" height="15" fill="rgb(223,209,38)" fg:x="51634060" fg:w="61266366"/><text x="21.0098%" y="911.50">&lt;css_bitvector_compiler::HtmlNode as co..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,843,257 samples, 1.14%)</title><rect x="44.2491%" y="885" width="1.1431%" height="15" fill="rgb(236,164,45)" fg:x="110057169" fg:w="2843257"/><text x="44.4991%" y="895.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,843,257 samples, 1.14%)</title><rect x="44.2491%" y="869" width="1.1431%" height="15" fill="rgb(231,15,5)" fg:x="110057169" fg:w="2843257"/><text x="44.4991%" y="879.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,843,257 samples, 1.14%)</title><rect x="44.2491%" y="853" width="1.1431%" height="15" fill="rgb(252,35,15)" fg:x="110057169" fg:w="2843257"/><text x="44.4991%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,843,257 samples, 1.14%)</title><rect x="44.2491%" y="837" width="1.1431%" height="15" fill="rgb(248,181,18)" fg:x="110057169" fg:w="2843257"/><text x="44.4991%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,843,257 samples, 1.14%)</title><rect x="44.2491%" y="821" width="1.1431%" height="15" fill="rgb(233,39,42)" fg:x="110057169" fg:w="2843257"/><text x="44.4991%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,843,257 samples, 1.14%)</title><rect x="44.2491%" y="805" width="1.1431%" height="15" fill="rgb(238,110,33)" fg:x="110057169" fg:w="2843257"/><text x="44.4991%" y="815.50"></text></g><g><title>core::clone::Clone::clone (2,843,257 samples, 1.14%)</title><rect x="44.2491%" y="789" width="1.1431%" height="15" fill="rgb(233,195,10)" fg:x="110057169" fg:w="2843257"/><text x="44.4991%" y="799.50"></text></g><g><title>[unknown] (2,843,257 samples, 1.14%)</title><rect x="44.2491%" y="773" width="1.1431%" height="15" fill="rgb(254,105,3)" fg:x="110057169" fg:w="2843257"/><text x="44.4991%" y="783.50"></text></g><g><title>[libc.so.6] (2,843,257 samples, 1.14%)</title><rect x="44.2491%" y="757" width="1.1431%" height="15" fill="rgb(221,225,9)" fg:x="110057169" fg:w="2843257"/><text x="44.4991%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (66,934,798 samples, 26.91%)</title><rect x="20.7598%" y="965" width="26.9115%" height="15" fill="rgb(224,227,45)" fg:x="51634060" fg:w="66934798"/><text x="21.0098%" y="975.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (66,934,798 samples, 26.91%)</title><rect x="20.7598%" y="949" width="26.9115%" height="15" fill="rgb(229,198,43)" fg:x="51634060" fg:w="66934798"/><text x="21.0098%" y="959.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (66,934,798 samples, 26.91%)</title><rect x="20.7598%" y="933" width="26.9115%" height="15" fill="rgb(206,209,35)" fg:x="51634060" fg:w="66934798"/><text x="21.0098%" y="943.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (66,934,798 samples, 26.91%)</title><rect x="20.7598%" y="917" width="26.9115%" height="15" fill="rgb(245,195,53)" fg:x="51634060" fg:w="66934798"/><text x="21.0098%" y="927.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_v..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,668,432 samples, 2.28%)</title><rect x="45.3923%" y="901" width="2.2790%" height="15" fill="rgb(240,92,26)" fg:x="112900426" fg:w="5668432"/><text x="45.6423%" y="911.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,668,432 samples, 2.28%)</title><rect x="45.3923%" y="885" width="2.2790%" height="15" fill="rgb(207,40,23)" fg:x="112900426" fg:w="5668432"/><text x="45.6423%" y="895.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,668,432 samples, 2.28%)</title><rect x="45.3923%" y="869" width="2.2790%" height="15" fill="rgb(223,111,35)" fg:x="112900426" fg:w="5668432"/><text x="45.6423%" y="879.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,668,432 samples, 2.28%)</title><rect x="45.3923%" y="853" width="2.2790%" height="15" fill="rgb(229,147,28)" fg:x="112900426" fg:w="5668432"/><text x="45.6423%" y="863.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,668,432 samples, 2.28%)</title><rect x="45.3923%" y="837" width="2.2790%" height="15" fill="rgb(211,29,28)" fg:x="112900426" fg:w="5668432"/><text x="45.6423%" y="847.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (5,668,432 samples, 2.28%)</title><rect x="45.3923%" y="821" width="2.2790%" height="15" fill="rgb(228,72,33)" fg:x="112900426" fg:w="5668432"/><text x="45.6423%" y="831.50">a..</text></g><g><title>alloc::alloc::alloc (5,668,432 samples, 2.28%)</title><rect x="45.3923%" y="805" width="2.2790%" height="15" fill="rgb(205,214,31)" fg:x="112900426" fg:w="5668432"/><text x="45.6423%" y="815.50">a..</text></g><g><title>malloc (5,668,432 samples, 2.28%)</title><rect x="45.3923%" y="789" width="2.2790%" height="15" fill="rgb(224,111,15)" fg:x="112900426" fg:w="5668432"/><text x="45.6423%" y="799.50">m..</text></g><g><title>[libc.so.6] (5,668,432 samples, 2.28%)</title><rect x="45.3923%" y="773" width="2.2790%" height="15" fill="rgb(253,21,26)" fg:x="112900426" fg:w="5668432"/><text x="45.6423%" y="783.50">[..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,870,655 samples, 1.15%)</title><rect x="47.6713%" y="965" width="1.1542%" height="15" fill="rgb(245,139,43)" fg:x="118568858" fg:w="2870655"/><text x="47.9213%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,870,655 samples, 1.15%)</title><rect x="47.6713%" y="949" width="1.1542%" height="15" fill="rgb(252,170,7)" fg:x="118568858" fg:w="2870655"/><text x="47.9213%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,870,655 samples, 1.15%)</title><rect x="47.6713%" y="933" width="1.1542%" height="15" fill="rgb(231,118,14)" fg:x="118568858" fg:w="2870655"/><text x="47.9213%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,870,655 samples, 1.15%)</title><rect x="47.6713%" y="917" width="1.1542%" height="15" fill="rgb(238,83,0)" fg:x="118568858" fg:w="2870655"/><text x="47.9213%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (2,870,655 samples, 1.15%)</title><rect x="47.6713%" y="901" width="1.1542%" height="15" fill="rgb(221,39,39)" fg:x="118568858" fg:w="2870655"/><text x="47.9213%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,870,655 samples, 1.15%)</title><rect x="47.6713%" y="885" width="1.1542%" height="15" fill="rgb(222,119,46)" fg:x="118568858" fg:w="2870655"/><text x="47.9213%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,870,655 samples, 1.15%)</title><rect x="47.6713%" y="869" width="1.1542%" height="15" fill="rgb(222,165,49)" fg:x="118568858" fg:w="2870655"/><text x="47.9213%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,870,655 samples, 1.15%)</title><rect x="47.6713%" y="853" width="1.1542%" height="15" fill="rgb(219,113,52)" fg:x="118568858" fg:w="2870655"/><text x="47.9213%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,870,655 samples, 1.15%)</title><rect x="47.6713%" y="837" width="1.1542%" height="15" fill="rgb(214,7,15)" fg:x="118568858" fg:w="2870655"/><text x="47.9213%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,870,655 samples, 1.15%)</title><rect x="47.6713%" y="821" width="1.1542%" height="15" fill="rgb(235,32,4)" fg:x="118568858" fg:w="2870655"/><text x="47.9213%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,870,655 samples, 1.15%)</title><rect x="47.6713%" y="805" width="1.1542%" height="15" fill="rgb(238,90,54)" fg:x="118568858" fg:w="2870655"/><text x="47.9213%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,870,655 samples, 1.15%)</title><rect x="47.6713%" y="789" width="1.1542%" height="15" fill="rgb(213,208,19)" fg:x="118568858" fg:w="2870655"/><text x="47.9213%" y="799.50"></text></g><g><title>alloc::alloc::alloc (2,870,655 samples, 1.15%)</title><rect x="47.6713%" y="773" width="1.1542%" height="15" fill="rgb(233,156,4)" fg:x="118568858" fg:w="2870655"/><text x="47.9213%" y="783.50"></text></g><g><title>malloc (2,870,655 samples, 1.15%)</title><rect x="47.6713%" y="757" width="1.1542%" height="15" fill="rgb(207,194,5)" fg:x="118568858" fg:w="2870655"/><text x="47.9213%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,857,984 samples, 1.15%)</title><rect x="48.8254%" y="885" width="1.1491%" height="15" fill="rgb(206,111,30)" fg:x="121439513" fg:w="2857984"/><text x="49.0754%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,857,984 samples, 1.15%)</title><rect x="48.8254%" y="869" width="1.1491%" height="15" fill="rgb(243,70,54)" fg:x="121439513" fg:w="2857984"/><text x="49.0754%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,857,984 samples, 1.15%)</title><rect x="48.8254%" y="853" width="1.1491%" height="15" fill="rgb(242,28,8)" fg:x="121439513" fg:w="2857984"/><text x="49.0754%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,857,984 samples, 1.15%)</title><rect x="48.8254%" y="837" width="1.1491%" height="15" fill="rgb(219,106,18)" fg:x="121439513" fg:w="2857984"/><text x="49.0754%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,857,984 samples, 1.15%)</title><rect x="48.8254%" y="821" width="1.1491%" height="15" fill="rgb(244,222,10)" fg:x="121439513" fg:w="2857984"/><text x="49.0754%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,857,984 samples, 1.15%)</title><rect x="48.8254%" y="805" width="1.1491%" height="15" fill="rgb(236,179,52)" fg:x="121439513" fg:w="2857984"/><text x="49.0754%" y="815.50"></text></g><g><title>alloc::alloc::alloc (2,857,984 samples, 1.15%)</title><rect x="48.8254%" y="789" width="1.1491%" height="15" fill="rgb(213,23,39)" fg:x="121439513" fg:w="2857984"/><text x="49.0754%" y="799.50"></text></g><g><title>malloc (2,857,984 samples, 1.15%)</title><rect x="48.8254%" y="773" width="1.1491%" height="15" fill="rgb(238,48,10)" fg:x="121439513" fg:w="2857984"/><text x="49.0754%" y="783.50"></text></g><g><title>[libc.so.6] (2,857,984 samples, 1.15%)</title><rect x="48.8254%" y="757" width="1.1491%" height="15" fill="rgb(251,196,23)" fg:x="121439513" fg:w="2857984"/><text x="49.0754%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (78,338,293 samples, 31.50%)</title><rect x="19.6240%" y="1045" width="31.4964%" height="15" fill="rgb(250,152,24)" fg:x="48809205" fg:w="78338293"/><text x="19.8740%" y="1055.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (78,338,293 samples, 31.50%)</title><rect x="19.6240%" y="1029" width="31.4964%" height="15" fill="rgb(209,150,17)" fg:x="48809205" fg:w="78338293"/><text x="19.8740%" y="1039.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (78,338,293 samples, 31.50%)</title><rect x="19.6240%" y="1013" width="31.4964%" height="15" fill="rgb(234,202,34)" fg:x="48809205" fg:w="78338293"/><text x="19.8740%" y="1023.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (78,338,293 samples, 31.50%)</title><rect x="19.6240%" y="997" width="31.4964%" height="15" fill="rgb(253,148,53)" fg:x="48809205" fg:w="78338293"/><text x="19.8740%" y="1007.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (78,338,293 samples, 31.50%)</title><rect x="19.6240%" y="981" width="31.4964%" height="15" fill="rgb(218,129,16)" fg:x="48809205" fg:w="78338293"/><text x="19.8740%" y="991.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::C..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (5,707,985 samples, 2.29%)</title><rect x="48.8254%" y="965" width="2.2949%" height="15" fill="rgb(216,85,19)" fg:x="121439513" fg:w="5707985"/><text x="49.0754%" y="975.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,707,985 samples, 2.29%)</title><rect x="48.8254%" y="949" width="2.2949%" height="15" fill="rgb(235,228,7)" fg:x="121439513" fg:w="5707985"/><text x="49.0754%" y="959.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,707,985 samples, 2.29%)</title><rect x="48.8254%" y="933" width="2.2949%" height="15" fill="rgb(245,175,0)" fg:x="121439513" fg:w="5707985"/><text x="49.0754%" y="943.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,707,985 samples, 2.29%)</title><rect x="48.8254%" y="917" width="2.2949%" height="15" fill="rgb(208,168,36)" fg:x="121439513" fg:w="5707985"/><text x="49.0754%" y="927.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,707,985 samples, 2.29%)</title><rect x="48.8254%" y="901" width="2.2949%" height="15" fill="rgb(246,171,24)" fg:x="121439513" fg:w="5707985"/><text x="49.0754%" y="911.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,850,001 samples, 1.15%)</title><rect x="49.9745%" y="885" width="1.1459%" height="15" fill="rgb(215,142,24)" fg:x="124297497" fg:w="2850001"/><text x="50.2245%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,850,001 samples, 1.15%)</title><rect x="49.9745%" y="869" width="1.1459%" height="15" fill="rgb(250,187,7)" fg:x="124297497" fg:w="2850001"/><text x="50.2245%" y="879.50"></text></g><g><title>[libc.so.6] (2,850,001 samples, 1.15%)</title><rect x="49.9745%" y="853" width="1.1459%" height="15" fill="rgb(228,66,33)" fg:x="124297497" fg:w="2850001"/><text x="50.2245%" y="863.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (86,308,029 samples, 34.70%)</title><rect x="18.7240%" y="1061" width="34.7006%" height="15" fill="rgb(234,215,21)" fg:x="46570757" fg:w="86308029"/><text x="18.9740%" y="1071.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (5,731,288 samples, 2.30%)</title><rect x="51.1204%" y="1045" width="2.3043%" height="15" fill="rgb(222,191,20)" fg:x="127147498" fg:w="5731288"/><text x="51.3704%" y="1055.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,731,288 samples, 2.30%)</title><rect x="51.1204%" y="1029" width="2.3043%" height="15" fill="rgb(245,79,54)" fg:x="127147498" fg:w="5731288"/><text x="51.3704%" y="1039.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,731,288 samples, 2.30%)</title><rect x="51.1204%" y="1013" width="2.3043%" height="15" fill="rgb(240,10,37)" fg:x="127147498" fg:w="5731288"/><text x="51.3704%" y="1023.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,731,288 samples, 2.30%)</title><rect x="51.1204%" y="997" width="2.3043%" height="15" fill="rgb(214,192,32)" fg:x="127147498" fg:w="5731288"/><text x="51.3704%" y="1007.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,731,288 samples, 2.30%)</title><rect x="51.1204%" y="981" width="2.3043%" height="15" fill="rgb(209,36,54)" fg:x="127147498" fg:w="5731288"/><text x="51.3704%" y="991.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5,731,288 samples, 2.30%)</title><rect x="51.1204%" y="965" width="2.3043%" height="15" fill="rgb(220,10,11)" fg:x="127147498" fg:w="5731288"/><text x="51.3704%" y="975.50">c..</text></g><g><title>core::intrinsics::copy_nonoverlapping (5,731,288 samples, 2.30%)</title><rect x="51.1204%" y="949" width="2.3043%" height="15" fill="rgb(221,106,17)" fg:x="127147498" fg:w="5731288"/><text x="51.3704%" y="959.50">c..</text></g><g><title>[libc.so.6] (5,731,288 samples, 2.30%)</title><rect x="51.1204%" y="933" width="2.3043%" height="15" fill="rgb(251,142,44)" fg:x="127147498" fg:w="5731288"/><text x="51.3704%" y="943.50">[..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (91,431,620 samples, 36.76%)</title><rect x="17.5471%" y="1205" width="36.7606%" height="15" fill="rgb(238,13,15)" fg:x="43643426" fg:w="91431620"/><text x="17.7971%" y="1215.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (91,431,620 samples, 36.76%)</title><rect x="17.5471%" y="1189" width="36.7606%" height="15" fill="rgb(208,107,27)" fg:x="43643426" fg:w="91431620"/><text x="17.7971%" y="1199.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (91,431,620 samples, 36.76%)</title><rect x="17.5471%" y="1173" width="36.7606%" height="15" fill="rgb(205,136,37)" fg:x="43643426" fg:w="91431620"/><text x="17.7971%" y="1183.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (91,431,620 samples, 36.76%)</title><rect x="17.5471%" y="1157" width="36.7606%" height="15" fill="rgb(250,205,27)" fg:x="43643426" fg:w="91431620"/><text x="17.7971%" y="1167.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (91,431,620 samples, 36.76%)</title><rect x="17.5471%" y="1141" width="36.7606%" height="15" fill="rgb(210,80,43)" fg:x="43643426" fg:w="91431620"/><text x="17.7971%" y="1151.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::cl..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (88,504,289 samples, 35.58%)</title><rect x="18.7240%" y="1125" width="35.5836%" height="15" fill="rgb(247,160,36)" fg:x="46570757" fg:w="88504289"/><text x="18.9740%" y="1135.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (88,504,289 samples, 35.58%)</title><rect x="18.7240%" y="1109" width="35.5836%" height="15" fill="rgb(234,13,49)" fg:x="46570757" fg:w="88504289"/><text x="18.9740%" y="1119.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (88,504,289 samples, 35.58%)</title><rect x="18.7240%" y="1093" width="35.5836%" height="15" fill="rgb(234,122,0)" fg:x="46570757" fg:w="88504289"/><text x="18.9740%" y="1103.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (88,504,289 samples, 35.58%)</title><rect x="18.7240%" y="1077" width="35.5836%" height="15" fill="rgb(207,146,38)" fg:x="46570757" fg:w="88504289"/><text x="18.9740%" y="1087.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,196,260 samples, 0.88%)</title><rect x="53.4247%" y="1061" width="0.8830%" height="15" fill="rgb(207,177,25)" fg:x="132878786" fg:w="2196260"/><text x="53.6747%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,196,260 samples, 0.88%)</title><rect x="53.4247%" y="1045" width="0.8830%" height="15" fill="rgb(211,178,42)" fg:x="132878786" fg:w="2196260"/><text x="53.6747%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,196,260 samples, 0.88%)</title><rect x="53.4247%" y="1029" width="0.8830%" height="15" fill="rgb(230,69,54)" fg:x="132878786" fg:w="2196260"/><text x="53.6747%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,196,260 samples, 0.88%)</title><rect x="53.4247%" y="1013" width="0.8830%" height="15" fill="rgb(214,135,41)" fg:x="132878786" fg:w="2196260"/><text x="53.6747%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,196,260 samples, 0.88%)</title><rect x="53.4247%" y="997" width="0.8830%" height="15" fill="rgb(237,67,25)" fg:x="132878786" fg:w="2196260"/><text x="53.6747%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,196,260 samples, 0.88%)</title><rect x="53.4247%" y="981" width="0.8830%" height="15" fill="rgb(222,189,50)" fg:x="132878786" fg:w="2196260"/><text x="53.6747%" y="991.50"></text></g><g><title>alloc::alloc::alloc (2,196,260 samples, 0.88%)</title><rect x="53.4247%" y="965" width="0.8830%" height="15" fill="rgb(245,148,34)" fg:x="132878786" fg:w="2196260"/><text x="53.6747%" y="975.50"></text></g><g><title>malloc (2,196,260 samples, 0.88%)</title><rect x="53.4247%" y="949" width="0.8830%" height="15" fill="rgb(222,29,6)" fg:x="132878786" fg:w="2196260"/><text x="53.6747%" y="959.50"></text></g><g><title>[libc.so.6] (2,196,260 samples, 0.88%)</title><rect x="53.4247%" y="933" width="0.8830%" height="15" fill="rgb(221,189,43)" fg:x="132878786" fg:w="2196260"/><text x="53.6747%" y="943.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,703,241 samples, 1.09%)</title><rect x="54.3077%" y="1205" width="1.0869%" height="15" fill="rgb(207,36,27)" fg:x="135075046" fg:w="2703241"/><text x="54.5577%" y="1215.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (96,889,159 samples, 38.95%)</title><rect x="17.5471%" y="1461" width="38.9548%" height="15" fill="rgb(217,90,24)" fg:x="43643426" fg:w="96889159"/><text x="17.7971%" y="1471.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (96,889,159 samples, 38.95%)</title><rect x="17.5471%" y="1445" width="38.9548%" height="15" fill="rgb(224,66,35)" fg:x="43643426" fg:w="96889159"/><text x="17.7971%" y="1455.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (96,889,159 samples, 38.95%)</title><rect x="17.5471%" y="1429" width="38.9548%" height="15" fill="rgb(221,13,50)" fg:x="43643426" fg:w="96889159"/><text x="17.7971%" y="1439.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (96,889,159 samples, 38.95%)</title><rect x="17.5471%" y="1413" width="38.9548%" height="15" fill="rgb(236,68,49)" fg:x="43643426" fg:w="96889159"/><text x="17.7971%" y="1423.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (96,889,159 samples, 38.95%)</title><rect x="17.5471%" y="1397" width="38.9548%" height="15" fill="rgb(229,146,28)" fg:x="43643426" fg:w="96889159"/><text x="17.7971%" y="1407.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (96,889,159 samples, 38.95%)</title><rect x="17.5471%" y="1381" width="38.9548%" height="15" fill="rgb(225,31,38)" fg:x="43643426" fg:w="96889159"/><text x="17.7971%" y="1391.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (96,889,159 samples, 38.95%)</title><rect x="17.5471%" y="1365" width="38.9548%" height="15" fill="rgb(250,208,3)" fg:x="43643426" fg:w="96889159"/><text x="17.7971%" y="1375.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (96,889,159 samples, 38.95%)</title><rect x="17.5471%" y="1349" width="38.9548%" height="15" fill="rgb(246,54,23)" fg:x="43643426" fg:w="96889159"/><text x="17.7971%" y="1359.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (96,889,159 samples, 38.95%)</title><rect x="17.5471%" y="1333" width="38.9548%" height="15" fill="rgb(243,76,11)" fg:x="43643426" fg:w="96889159"/><text x="17.7971%" y="1343.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (96,889,159 samples, 38.95%)</title><rect x="17.5471%" y="1317" width="38.9548%" height="15" fill="rgb(245,21,50)" fg:x="43643426" fg:w="96889159"/><text x="17.7971%" y="1327.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (96,889,159 samples, 38.95%)</title><rect x="17.5471%" y="1301" width="38.9548%" height="15" fill="rgb(228,9,43)" fg:x="43643426" fg:w="96889159"/><text x="17.7971%" y="1311.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (96,889,159 samples, 38.95%)</title><rect x="17.5471%" y="1285" width="38.9548%" height="15" fill="rgb(208,100,47)" fg:x="43643426" fg:w="96889159"/><text x="17.7971%" y="1295.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (96,889,159 samples, 38.95%)</title><rect x="17.5471%" y="1269" width="38.9548%" height="15" fill="rgb(232,26,8)" fg:x="43643426" fg:w="96889159"/><text x="17.7971%" y="1279.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (96,889,159 samples, 38.95%)</title><rect x="17.5471%" y="1253" width="38.9548%" height="15" fill="rgb(216,166,38)" fg:x="43643426" fg:w="96889159"/><text x="17.7971%" y="1263.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (96,889,159 samples, 38.95%)</title><rect x="17.5471%" y="1237" width="38.9548%" height="15" fill="rgb(251,202,51)" fg:x="43643426" fg:w="96889159"/><text x="17.7971%" y="1247.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (96,889,159 samples, 38.95%)</title><rect x="17.5471%" y="1221" width="38.9548%" height="15" fill="rgb(254,216,34)" fg:x="43643426" fg:w="96889159"/><text x="17.7971%" y="1231.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,754,298 samples, 1.11%)</title><rect x="55.3945%" y="1205" width="1.1074%" height="15" fill="rgb(251,32,27)" fg:x="137778287" fg:w="2754298"/><text x="55.6445%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,754,298 samples, 1.11%)</title><rect x="55.3945%" y="1189" width="1.1074%" height="15" fill="rgb(208,127,28)" fg:x="137778287" fg:w="2754298"/><text x="55.6445%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,754,298 samples, 1.11%)</title><rect x="55.3945%" y="1173" width="1.1074%" height="15" fill="rgb(224,137,22)" fg:x="137778287" fg:w="2754298"/><text x="55.6445%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (2,754,298 samples, 1.11%)</title><rect x="55.3945%" y="1157" width="1.1074%" height="15" fill="rgb(254,70,32)" fg:x="137778287" fg:w="2754298"/><text x="55.6445%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,754,298 samples, 1.11%)</title><rect x="55.3945%" y="1141" width="1.1074%" height="15" fill="rgb(229,75,37)" fg:x="137778287" fg:w="2754298"/><text x="55.6445%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,754,298 samples, 1.11%)</title><rect x="55.3945%" y="1125" width="1.1074%" height="15" fill="rgb(252,64,23)" fg:x="137778287" fg:w="2754298"/><text x="55.6445%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,754,298 samples, 1.11%)</title><rect x="55.3945%" y="1109" width="1.1074%" height="15" fill="rgb(232,162,48)" fg:x="137778287" fg:w="2754298"/><text x="55.6445%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,754,298 samples, 1.11%)</title><rect x="55.3945%" y="1093" width="1.1074%" height="15" fill="rgb(246,160,12)" fg:x="137778287" fg:w="2754298"/><text x="55.6445%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,754,298 samples, 1.11%)</title><rect x="55.3945%" y="1077" width="1.1074%" height="15" fill="rgb(247,166,0)" fg:x="137778287" fg:w="2754298"/><text x="55.6445%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,754,298 samples, 1.11%)</title><rect x="55.3945%" y="1061" width="1.1074%" height="15" fill="rgb(249,219,21)" fg:x="137778287" fg:w="2754298"/><text x="55.6445%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,754,298 samples, 1.11%)</title><rect x="55.3945%" y="1045" width="1.1074%" height="15" fill="rgb(205,209,3)" fg:x="137778287" fg:w="2754298"/><text x="55.6445%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (2,754,298 samples, 1.11%)</title><rect x="55.3945%" y="1029" width="1.1074%" height="15" fill="rgb(243,44,1)" fg:x="137778287" fg:w="2754298"/><text x="55.6445%" y="1039.50"></text></g><g><title>malloc (2,754,298 samples, 1.11%)</title><rect x="55.3945%" y="1013" width="1.1074%" height="15" fill="rgb(206,159,16)" fg:x="137778287" fg:w="2754298"/><text x="55.6445%" y="1023.50"></text></g><g><title>[libc.so.6] (2,754,298 samples, 1.11%)</title><rect x="55.3945%" y="997" width="1.1074%" height="15" fill="rgb(244,77,30)" fg:x="137778287" fg:w="2754298"/><text x="55.6445%" y="1007.50"></text></g><g><title>benchmark::apply_frame_modifications (2,215,121 samples, 0.89%)</title><rect x="56.5019%" y="1461" width="0.8906%" height="15" fill="rgb(218,69,12)" fg:x="140532585" fg:w="2215121"/><text x="56.7519%" y="1471.50"></text></g><g><title>benchmark::json_to_html_node (2,215,121 samples, 0.89%)</title><rect x="56.5019%" y="1445" width="0.8906%" height="15" fill="rgb(212,87,7)" fg:x="140532585" fg:w="2215121"/><text x="56.7519%" y="1455.50"></text></g><g><title>benchmark::json_to_html_node (2,215,121 samples, 0.89%)</title><rect x="56.5019%" y="1429" width="0.8906%" height="15" fill="rgb(245,114,25)" fg:x="140532585" fg:w="2215121"/><text x="56.7519%" y="1439.50"></text></g><g><title>benchmark::json_to_html_node (2,215,121 samples, 0.89%)</title><rect x="56.5019%" y="1413" width="0.8906%" height="15" fill="rgb(210,61,42)" fg:x="140532585" fg:w="2215121"/><text x="56.7519%" y="1423.50"></text></g><g><title>benchmark::json_to_html_node (2,215,121 samples, 0.89%)</title><rect x="56.5019%" y="1397" width="0.8906%" height="15" fill="rgb(211,52,33)" fg:x="140532585" fg:w="2215121"/><text x="56.7519%" y="1407.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::new (2,215,121 samples, 0.89%)</title><rect x="56.5019%" y="1381" width="0.8906%" height="15" fill="rgb(234,58,33)" fg:x="140532585" fg:w="2215121"/><text x="56.7519%" y="1391.50"></text></g><g><title>css_bitvector_compiler::BitVector::new (2,215,121 samples, 0.89%)</title><rect x="56.5019%" y="1365" width="0.8906%" height="15" fill="rgb(220,115,36)" fg:x="140532585" fg:w="2215121"/><text x="56.7519%" y="1375.50"></text></g><g><title>alloc::vec::from_elem (2,215,121 samples, 0.89%)</title><rect x="56.5019%" y="1349" width="0.8906%" height="15" fill="rgb(243,153,54)" fg:x="140532585" fg:w="2215121"/><text x="56.7519%" y="1359.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2,215,121 samples, 0.89%)</title><rect x="56.5019%" y="1333" width="0.8906%" height="15" fill="rgb(251,47,18)" fg:x="140532585" fg:w="2215121"/><text x="56.7519%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (2,215,121 samples, 0.89%)</title><rect x="56.5019%" y="1317" width="0.8906%" height="15" fill="rgb(242,102,42)" fg:x="140532585" fg:w="2215121"/><text x="56.7519%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (2,215,121 samples, 0.89%)</title><rect x="56.5019%" y="1301" width="0.8906%" height="15" fill="rgb(234,31,38)" fg:x="140532585" fg:w="2215121"/><text x="56.7519%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,215,121 samples, 0.89%)</title><rect x="56.5019%" y="1285" width="0.8906%" height="15" fill="rgb(221,117,51)" fg:x="140532585" fg:w="2215121"/><text x="56.7519%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (2,215,121 samples, 0.89%)</title><rect x="56.5019%" y="1269" width="0.8906%" height="15" fill="rgb(212,20,18)" fg:x="140532585" fg:w="2215121"/><text x="56.7519%" y="1279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,215,121 samples, 0.89%)</title><rect x="56.5019%" y="1253" width="0.8906%" height="15" fill="rgb(245,133,36)" fg:x="140532585" fg:w="2215121"/><text x="56.7519%" y="1263.50"></text></g><g><title>alloc::alloc::alloc_zeroed (2,215,121 samples, 0.89%)</title><rect x="56.5019%" y="1237" width="0.8906%" height="15" fill="rgb(212,6,19)" fg:x="140532585" fg:w="2215121"/><text x="56.7519%" y="1247.50"></text></g><g><title>__libc_calloc (2,215,121 samples, 0.89%)</title><rect x="56.5019%" y="1221" width="0.8906%" height="15" fill="rgb(218,1,36)" fg:x="140532585" fg:w="2215121"/><text x="56.7519%" y="1231.50"></text></g><g><title>[libc.so.6] (2,215,121 samples, 0.89%)</title><rect x="56.5019%" y="1205" width="0.8906%" height="15" fill="rgb(246,84,54)" fg:x="140532585" fg:w="2215121"/><text x="56.7519%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,911,713 samples, 1.17%)</title><rect x="57.3925%" y="293" width="1.1707%" height="15" fill="rgb(242,110,6)" fg:x="142747706" fg:w="2911713"/><text x="57.6425%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,911,713 samples, 1.17%)</title><rect x="57.3925%" y="277" width="1.1707%" height="15" fill="rgb(214,47,5)" fg:x="142747706" fg:w="2911713"/><text x="57.6425%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,911,713 samples, 1.17%)</title><rect x="57.3925%" y="261" width="1.1707%" height="15" fill="rgb(218,159,25)" fg:x="142747706" fg:w="2911713"/><text x="57.6425%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,911,713 samples, 1.17%)</title><rect x="57.3925%" y="245" width="1.1707%" height="15" fill="rgb(215,211,28)" fg:x="142747706" fg:w="2911713"/><text x="57.6425%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,911,713 samples, 1.17%)</title><rect x="57.3925%" y="229" width="1.1707%" height="15" fill="rgb(238,59,32)" fg:x="142747706" fg:w="2911713"/><text x="57.6425%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,911,713 samples, 1.17%)</title><rect x="57.3925%" y="213" width="1.1707%" height="15" fill="rgb(226,82,3)" fg:x="142747706" fg:w="2911713"/><text x="57.6425%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (2,911,713 samples, 1.17%)</title><rect x="57.3925%" y="197" width="1.1707%" height="15" fill="rgb(240,164,32)" fg:x="142747706" fg:w="2911713"/><text x="57.6425%" y="207.50"></text></g><g><title>cfree (2,911,713 samples, 1.17%)</title><rect x="57.3925%" y="181" width="1.1707%" height="15" fill="rgb(232,46,7)" fg:x="142747706" fg:w="2911713"/><text x="57.6425%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,713,577 samples, 2.30%)</title><rect x="57.3925%" y="613" width="2.2972%" height="15" fill="rgb(229,129,53)" fg:x="142747706" fg:w="5713577"/><text x="57.6425%" y="623.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,713,577 samples, 2.30%)</title><rect x="57.3925%" y="597" width="2.2972%" height="15" fill="rgb(234,188,29)" fg:x="142747706" fg:w="5713577"/><text x="57.6425%" y="607.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,713,577 samples, 2.30%)</title><rect x="57.3925%" y="581" width="2.2972%" height="15" fill="rgb(246,141,4)" fg:x="142747706" fg:w="5713577"/><text x="57.6425%" y="591.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,713,577 samples, 2.30%)</title><rect x="57.3925%" y="565" width="2.2972%" height="15" fill="rgb(229,23,39)" fg:x="142747706" fg:w="5713577"/><text x="57.6425%" y="575.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,713,577 samples, 2.30%)</title><rect x="57.3925%" y="549" width="2.2972%" height="15" fill="rgb(206,12,3)" fg:x="142747706" fg:w="5713577"/><text x="57.6425%" y="559.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,713,577 samples, 2.30%)</title><rect x="57.3925%" y="533" width="2.2972%" height="15" fill="rgb(252,226,20)" fg:x="142747706" fg:w="5713577"/><text x="57.6425%" y="543.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,713,577 samples, 2.30%)</title><rect x="57.3925%" y="517" width="2.2972%" height="15" fill="rgb(216,123,35)" fg:x="142747706" fg:w="5713577"/><text x="57.6425%" y="527.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,713,577 samples, 2.30%)</title><rect x="57.3925%" y="501" width="2.2972%" height="15" fill="rgb(212,68,40)" fg:x="142747706" fg:w="5713577"/><text x="57.6425%" y="511.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,713,577 samples, 2.30%)</title><rect x="57.3925%" y="485" width="2.2972%" height="15" fill="rgb(254,125,32)" fg:x="142747706" fg:w="5713577"/><text x="57.6425%" y="495.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,713,577 samples, 2.30%)</title><rect x="57.3925%" y="469" width="2.2972%" height="15" fill="rgb(253,97,22)" fg:x="142747706" fg:w="5713577"/><text x="57.6425%" y="479.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,713,577 samples, 2.30%)</title><rect x="57.3925%" y="453" width="2.2972%" height="15" fill="rgb(241,101,14)" fg:x="142747706" fg:w="5713577"/><text x="57.6425%" y="463.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,713,577 samples, 2.30%)</title><rect x="57.3925%" y="437" width="2.2972%" height="15" fill="rgb(238,103,29)" fg:x="142747706" fg:w="5713577"/><text x="57.6425%" y="447.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,713,577 samples, 2.30%)</title><rect x="57.3925%" y="421" width="2.2972%" height="15" fill="rgb(233,195,47)" fg:x="142747706" fg:w="5713577"/><text x="57.6425%" y="431.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,713,577 samples, 2.30%)</title><rect x="57.3925%" y="405" width="2.2972%" height="15" fill="rgb(246,218,30)" fg:x="142747706" fg:w="5713577"/><text x="57.6425%" y="415.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,713,577 samples, 2.30%)</title><rect x="57.3925%" y="389" width="2.2972%" height="15" fill="rgb(219,145,47)" fg:x="142747706" fg:w="5713577"/><text x="57.6425%" y="399.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,713,577 samples, 2.30%)</title><rect x="57.3925%" y="373" width="2.2972%" height="15" fill="rgb(243,12,26)" fg:x="142747706" fg:w="5713577"/><text x="57.6425%" y="383.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,713,577 samples, 2.30%)</title><rect x="57.3925%" y="357" width="2.2972%" height="15" fill="rgb(214,87,16)" fg:x="142747706" fg:w="5713577"/><text x="57.6425%" y="367.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,713,577 samples, 2.30%)</title><rect x="57.3925%" y="341" width="2.2972%" height="15" fill="rgb(208,99,42)" fg:x="142747706" fg:w="5713577"/><text x="57.6425%" y="351.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,713,577 samples, 2.30%)</title><rect x="57.3925%" y="325" width="2.2972%" height="15" fill="rgb(253,99,2)" fg:x="142747706" fg:w="5713577"/><text x="57.6425%" y="335.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,713,577 samples, 2.30%)</title><rect x="57.3925%" y="309" width="2.2972%" height="15" fill="rgb(220,168,23)" fg:x="142747706" fg:w="5713577"/><text x="57.6425%" y="319.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,801,864 samples, 1.13%)</title><rect x="58.5632%" y="293" width="1.1265%" height="15" fill="rgb(242,38,24)" fg:x="145659419" fg:w="2801864"/><text x="58.8132%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,801,864 samples, 1.13%)</title><rect x="58.5632%" y="277" width="1.1265%" height="15" fill="rgb(225,182,9)" fg:x="145659419" fg:w="2801864"/><text x="58.8132%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,801,864 samples, 1.13%)</title><rect x="58.5632%" y="261" width="1.1265%" height="15" fill="rgb(243,178,37)" fg:x="145659419" fg:w="2801864"/><text x="58.8132%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,801,864 samples, 1.13%)</title><rect x="58.5632%" y="245" width="1.1265%" height="15" fill="rgb(232,139,19)" fg:x="145659419" fg:w="2801864"/><text x="58.8132%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,801,864 samples, 1.13%)</title><rect x="58.5632%" y="229" width="1.1265%" height="15" fill="rgb(225,201,24)" fg:x="145659419" fg:w="2801864"/><text x="58.8132%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,801,864 samples, 1.13%)</title><rect x="58.5632%" y="213" width="1.1265%" height="15" fill="rgb(221,47,46)" fg:x="145659419" fg:w="2801864"/><text x="58.8132%" y="223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,801,864 samples, 1.13%)</title><rect x="58.5632%" y="197" width="1.1265%" height="15" fill="rgb(249,23,13)" fg:x="145659419" fg:w="2801864"/><text x="58.8132%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,801,864 samples, 1.13%)</title><rect x="58.5632%" y="181" width="1.1265%" height="15" fill="rgb(219,9,5)" fg:x="145659419" fg:w="2801864"/><text x="58.8132%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,801,864 samples, 1.13%)</title><rect x="58.5632%" y="165" width="1.1265%" height="15" fill="rgb(254,171,16)" fg:x="145659419" fg:w="2801864"/><text x="58.8132%" y="175.50"></text></g><g><title>alloc::alloc::dealloc (2,801,864 samples, 1.13%)</title><rect x="58.5632%" y="149" width="1.1265%" height="15" fill="rgb(230,171,20)" fg:x="145659419" fg:w="2801864"/><text x="58.8132%" y="159.50"></text></g><g><title>cfree (2,801,864 samples, 1.13%)</title><rect x="58.5632%" y="133" width="1.1265%" height="15" fill="rgb(210,71,41)" fg:x="145659419" fg:w="2801864"/><text x="58.8132%" y="143.50"></text></g><g><title>[libc.so.6] (2,801,864 samples, 1.13%)</title><rect x="58.5632%" y="117" width="1.1265%" height="15" fill="rgb(206,173,20)" fg:x="145659419" fg:w="2801864"/><text x="58.8132%" y="127.50"></text></g><g><title>[libc.so.6] (2,801,864 samples, 1.13%)</title><rect x="58.5632%" y="101" width="1.1265%" height="15" fill="rgb(233,88,34)" fg:x="145659419" fg:w="2801864"/><text x="58.8132%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,543,531 samples, 3.43%)</title><rect x="57.3925%" y="789" width="3.4350%" height="15" fill="rgb(223,209,46)" fg:x="142747706" fg:w="8543531"/><text x="57.6425%" y="799.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (8,543,531 samples, 3.43%)</title><rect x="57.3925%" y="773" width="3.4350%" height="15" fill="rgb(250,43,18)" fg:x="142747706" fg:w="8543531"/><text x="57.6425%" y="783.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (8,543,531 samples, 3.43%)</title><rect x="57.3925%" y="757" width="3.4350%" height="15" fill="rgb(208,13,10)" fg:x="142747706" fg:w="8543531"/><text x="57.6425%" y="767.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (8,543,531 samples, 3.43%)</title><rect x="57.3925%" y="741" width="3.4350%" height="15" fill="rgb(212,200,36)" fg:x="142747706" fg:w="8543531"/><text x="57.6425%" y="751.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,543,531 samples, 3.43%)</title><rect x="57.3925%" y="725" width="3.4350%" height="15" fill="rgb(225,90,30)" fg:x="142747706" fg:w="8543531"/><text x="57.6425%" y="735.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (8,543,531 samples, 3.43%)</title><rect x="57.3925%" y="709" width="3.4350%" height="15" fill="rgb(236,182,39)" fg:x="142747706" fg:w="8543531"/><text x="57.6425%" y="719.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (8,543,531 samples, 3.43%)</title><rect x="57.3925%" y="693" width="3.4350%" height="15" fill="rgb(212,144,35)" fg:x="142747706" fg:w="8543531"/><text x="57.6425%" y="703.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (8,543,531 samples, 3.43%)</title><rect x="57.3925%" y="677" width="3.4350%" height="15" fill="rgb(228,63,44)" fg:x="142747706" fg:w="8543531"/><text x="57.6425%" y="687.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,543,531 samples, 3.43%)</title><rect x="57.3925%" y="661" width="3.4350%" height="15" fill="rgb(228,109,6)" fg:x="142747706" fg:w="8543531"/><text x="57.6425%" y="671.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (8,543,531 samples, 3.43%)</title><rect x="57.3925%" y="645" width="3.4350%" height="15" fill="rgb(238,117,24)" fg:x="142747706" fg:w="8543531"/><text x="57.6425%" y="655.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (8,543,531 samples, 3.43%)</title><rect x="57.3925%" y="629" width="3.4350%" height="15" fill="rgb(242,26,26)" fg:x="142747706" fg:w="8543531"/><text x="57.6425%" y="639.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,829,954 samples, 1.14%)</title><rect x="59.6897%" y="613" width="1.1378%" height="15" fill="rgb(221,92,48)" fg:x="148461283" fg:w="2829954"/><text x="59.9397%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,829,954 samples, 1.14%)</title><rect x="59.6897%" y="597" width="1.1378%" height="15" fill="rgb(209,209,32)" fg:x="148461283" fg:w="2829954"/><text x="59.9397%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,829,954 samples, 1.14%)</title><rect x="59.6897%" y="581" width="1.1378%" height="15" fill="rgb(221,70,22)" fg:x="148461283" fg:w="2829954"/><text x="59.9397%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,829,954 samples, 1.14%)</title><rect x="59.6897%" y="565" width="1.1378%" height="15" fill="rgb(248,145,5)" fg:x="148461283" fg:w="2829954"/><text x="59.9397%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,829,954 samples, 1.14%)</title><rect x="59.6897%" y="549" width="1.1378%" height="15" fill="rgb(226,116,26)" fg:x="148461283" fg:w="2829954"/><text x="59.9397%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,829,954 samples, 1.14%)</title><rect x="59.6897%" y="533" width="1.1378%" height="15" fill="rgb(244,5,17)" fg:x="148461283" fg:w="2829954"/><text x="59.9397%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (2,829,954 samples, 1.14%)</title><rect x="59.6897%" y="517" width="1.1378%" height="15" fill="rgb(252,159,33)" fg:x="148461283" fg:w="2829954"/><text x="59.9397%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,829,954 samples, 1.14%)</title><rect x="59.6897%" y="501" width="1.1378%" height="15" fill="rgb(206,71,0)" fg:x="148461283" fg:w="2829954"/><text x="59.9397%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (2,829,954 samples, 1.14%)</title><rect x="59.6897%" y="485" width="1.1378%" height="15" fill="rgb(233,118,54)" fg:x="148461283" fg:w="2829954"/><text x="59.9397%" y="495.50"></text></g><g><title>cfree (2,829,954 samples, 1.14%)</title><rect x="59.6897%" y="469" width="1.1378%" height="15" fill="rgb(234,83,48)" fg:x="148461283" fg:w="2829954"/><text x="59.9397%" y="479.50"></text></g><g><title>[libc.so.6] (2,829,954 samples, 1.14%)</title><rect x="59.6897%" y="453" width="1.1378%" height="15" fill="rgb(228,3,54)" fg:x="148461283" fg:w="2829954"/><text x="59.9397%" y="463.50"></text></g><g><title>[libc.so.6] (2,829,954 samples, 1.14%)</title><rect x="59.6897%" y="437" width="1.1378%" height="15" fill="rgb(226,155,13)" fg:x="148461283" fg:w="2829954"/><text x="59.9397%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (10,996,773 samples, 4.42%)</title><rect x="57.3925%" y="869" width="4.4213%" height="15" fill="rgb(241,28,37)" fg:x="142747706" fg:w="10996773"/><text x="57.6425%" y="879.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,996,773 samples, 4.42%)</title><rect x="57.3925%" y="853" width="4.4213%" height="15" fill="rgb(233,93,10)" fg:x="142747706" fg:w="10996773"/><text x="57.6425%" y="863.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (10,996,773 samples, 4.42%)</title><rect x="57.3925%" y="837" width="4.4213%" height="15" fill="rgb(225,113,19)" fg:x="142747706" fg:w="10996773"/><text x="57.6425%" y="847.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (10,996,773 samples, 4.42%)</title><rect x="57.3925%" y="821" width="4.4213%" height="15" fill="rgb(241,2,18)" fg:x="142747706" fg:w="10996773"/><text x="57.6425%" y="831.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (10,996,773 samples, 4.42%)</title><rect x="57.3925%" y="805" width="4.4213%" height="15" fill="rgb(228,207,21)" fg:x="142747706" fg:w="10996773"/><text x="57.6425%" y="815.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,453,242 samples, 0.99%)</title><rect x="60.8275%" y="789" width="0.9863%" height="15" fill="rgb(213,211,35)" fg:x="151291237" fg:w="2453242"/><text x="61.0775%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,453,242 samples, 0.99%)</title><rect x="60.8275%" y="773" width="0.9863%" height="15" fill="rgb(209,83,10)" fg:x="151291237" fg:w="2453242"/><text x="61.0775%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,453,242 samples, 0.99%)</title><rect x="60.8275%" y="757" width="0.9863%" height="15" fill="rgb(209,164,1)" fg:x="151291237" fg:w="2453242"/><text x="61.0775%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,453,242 samples, 0.99%)</title><rect x="60.8275%" y="741" width="0.9863%" height="15" fill="rgb(213,184,43)" fg:x="151291237" fg:w="2453242"/><text x="61.0775%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (2,453,242 samples, 0.99%)</title><rect x="60.8275%" y="725" width="0.9863%" height="15" fill="rgb(231,61,34)" fg:x="151291237" fg:w="2453242"/><text x="61.0775%" y="735.50"></text></g><g><title>cfree (2,453,242 samples, 0.99%)</title><rect x="60.8275%" y="709" width="0.9863%" height="15" fill="rgb(235,75,3)" fg:x="151291237" fg:w="2453242"/><text x="61.0775%" y="719.50"></text></g><g><title>[libc.so.6] (2,453,242 samples, 0.99%)</title><rect x="60.8275%" y="693" width="0.9863%" height="15" fill="rgb(220,106,47)" fg:x="151291237" fg:w="2453242"/><text x="61.0775%" y="703.50"></text></g><g><title>[libc.so.6] (2,453,242 samples, 0.99%)</title><rect x="60.8275%" y="677" width="0.9863%" height="15" fill="rgb(210,196,33)" fg:x="151291237" fg:w="2453242"/><text x="61.0775%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,838,196 samples, 5.56%)</title><rect x="57.3925%" y="1045" width="5.5637%" height="15" fill="rgb(229,154,42)" fg:x="142747706" fg:w="13838196"/><text x="57.6425%" y="1055.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (13,838,196 samples, 5.56%)</title><rect x="57.3925%" y="1029" width="5.5637%" height="15" fill="rgb(228,114,26)" fg:x="142747706" fg:w="13838196"/><text x="57.6425%" y="1039.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (13,838,196 samples, 5.56%)</title><rect x="57.3925%" y="1013" width="5.5637%" height="15" fill="rgb(208,144,1)" fg:x="142747706" fg:w="13838196"/><text x="57.6425%" y="1023.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (13,838,196 samples, 5.56%)</title><rect x="57.3925%" y="997" width="5.5637%" height="15" fill="rgb(239,112,37)" fg:x="142747706" fg:w="13838196"/><text x="57.6425%" y="1007.50">core::p..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,838,196 samples, 5.56%)</title><rect x="57.3925%" y="981" width="5.5637%" height="15" fill="rgb(210,96,50)" fg:x="142747706" fg:w="13838196"/><text x="57.6425%" y="991.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (13,838,196 samples, 5.56%)</title><rect x="57.3925%" y="965" width="5.5637%" height="15" fill="rgb(222,178,2)" fg:x="142747706" fg:w="13838196"/><text x="57.6425%" y="975.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (13,838,196 samples, 5.56%)</title><rect x="57.3925%" y="949" width="5.5637%" height="15" fill="rgb(226,74,18)" fg:x="142747706" fg:w="13838196"/><text x="57.6425%" y="959.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (13,838,196 samples, 5.56%)</title><rect x="57.3925%" y="933" width="5.5637%" height="15" fill="rgb(225,67,54)" fg:x="142747706" fg:w="13838196"/><text x="57.6425%" y="943.50">core::p..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,838,196 samples, 5.56%)</title><rect x="57.3925%" y="917" width="5.5637%" height="15" fill="rgb(251,92,32)" fg:x="142747706" fg:w="13838196"/><text x="57.6425%" y="927.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (13,838,196 samples, 5.56%)</title><rect x="57.3925%" y="901" width="5.5637%" height="15" fill="rgb(228,149,22)" fg:x="142747706" fg:w="13838196"/><text x="57.6425%" y="911.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (13,838,196 samples, 5.56%)</title><rect x="57.3925%" y="885" width="5.5637%" height="15" fill="rgb(243,54,13)" fg:x="142747706" fg:w="13838196"/><text x="57.6425%" y="895.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;css_bitvector_compiler::BitVector&gt;&gt; (2,841,423 samples, 1.14%)</title><rect x="61.8138%" y="869" width="1.1424%" height="15" fill="rgb(243,180,28)" fg:x="153744479" fg:w="2841423"/><text x="62.0638%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (16,618,509 samples, 6.68%)</title><rect x="57.3925%" y="1061" width="6.6816%" height="15" fill="rgb(208,167,24)" fg:x="142747706" fg:w="16618509"/><text x="57.6425%" y="1071.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,780,313 samples, 1.12%)</title><rect x="62.9562%" y="1045" width="1.1178%" height="15" fill="rgb(245,73,45)" fg:x="156585902" fg:w="2780313"/><text x="63.2062%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,780,313 samples, 1.12%)</title><rect x="62.9562%" y="1029" width="1.1178%" height="15" fill="rgb(237,203,48)" fg:x="156585902" fg:w="2780313"/><text x="63.2062%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,780,313 samples, 1.12%)</title><rect x="62.9562%" y="1013" width="1.1178%" height="15" fill="rgb(211,197,16)" fg:x="156585902" fg:w="2780313"/><text x="63.2062%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,780,313 samples, 1.12%)</title><rect x="62.9562%" y="997" width="1.1178%" height="15" fill="rgb(243,99,51)" fg:x="156585902" fg:w="2780313"/><text x="63.2062%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (2,780,313 samples, 1.12%)</title><rect x="62.9562%" y="981" width="1.1178%" height="15" fill="rgb(215,123,29)" fg:x="156585902" fg:w="2780313"/><text x="63.2062%" y="991.50"></text></g><g><title>cfree (2,780,313 samples, 1.12%)</title><rect x="62.9562%" y="965" width="1.1178%" height="15" fill="rgb(239,186,37)" fg:x="156585902" fg:w="2780313"/><text x="63.2062%" y="975.50"></text></g><g><title>[libc.so.6] (2,780,313 samples, 1.12%)</title><rect x="62.9562%" y="949" width="1.1178%" height="15" fill="rgb(252,136,39)" fg:x="156585902" fg:w="2780313"/><text x="63.2062%" y="959.50"></text></g><g><title>[libc.so.6] (2,780,313 samples, 1.12%)</title><rect x="62.9562%" y="933" width="1.1178%" height="15" fill="rgb(223,213,32)" fg:x="156585902" fg:w="2780313"/><text x="63.2062%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24,872,301 samples, 10.00%)</title><rect x="57.3925%" y="1109" width="10.0000%" height="15" fill="rgb(233,115,5)" fg:x="142747706" fg:w="24872301"/><text x="57.6425%" y="1119.50">&lt;alloc::vec::V..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (24,872,301 samples, 10.00%)</title><rect x="57.3925%" y="1093" width="10.0000%" height="15" fill="rgb(207,226,44)" fg:x="142747706" fg:w="24872301"/><text x="57.6425%" y="1103.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (24,872,301 samples, 10.00%)</title><rect x="57.3925%" y="1077" width="10.0000%" height="15" fill="rgb(208,126,0)" fg:x="142747706" fg:w="24872301"/><text x="57.6425%" y="1087.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (8,253,792 samples, 3.32%)</title><rect x="64.0741%" y="1061" width="3.3185%" height="15" fill="rgb(244,66,21)" fg:x="159366215" fg:w="8253792"/><text x="64.3241%" y="1071.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (8,253,792 samples, 3.32%)</title><rect x="64.0741%" y="1045" width="3.3185%" height="15" fill="rgb(222,97,12)" fg:x="159366215" fg:w="8253792"/><text x="64.3241%" y="1055.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (8,253,792 samples, 3.32%)</title><rect x="64.0741%" y="1029" width="3.3185%" height="15" fill="rgb(219,213,19)" fg:x="159366215" fg:w="8253792"/><text x="64.3241%" y="1039.50">cor..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,253,792 samples, 3.32%)</title><rect x="64.0741%" y="1013" width="3.3185%" height="15" fill="rgb(252,169,30)" fg:x="159366215" fg:w="8253792"/><text x="64.3241%" y="1023.50">&lt;al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (8,253,792 samples, 3.32%)</title><rect x="64.0741%" y="997" width="3.3185%" height="15" fill="rgb(206,32,51)" fg:x="159366215" fg:w="8253792"/><text x="64.3241%" y="1007.50">all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8,253,792 samples, 3.32%)</title><rect x="64.0741%" y="981" width="3.3185%" height="15" fill="rgb(250,172,42)" fg:x="159366215" fg:w="8253792"/><text x="64.3241%" y="991.50">&lt;al..</text></g><g><title>alloc::alloc::dealloc (8,253,792 samples, 3.32%)</title><rect x="64.0741%" y="965" width="3.3185%" height="15" fill="rgb(209,34,43)" fg:x="159366215" fg:w="8253792"/><text x="64.3241%" y="975.50">all..</text></g><g><title>cfree (5,612,546 samples, 2.26%)</title><rect x="65.1360%" y="949" width="2.2566%" height="15" fill="rgb(223,11,35)" fg:x="162007461" fg:w="5612546"/><text x="65.3860%" y="959.50">c..</text></g><g><title>[libc.so.6] (2,708,843 samples, 1.09%)</title><rect x="66.3035%" y="933" width="1.0891%" height="15" fill="rgb(251,219,26)" fg:x="164911164" fg:w="2708843"/><text x="66.5535%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (42,002,294 samples, 16.89%)</title><rect x="57.3925%" y="1189" width="16.8873%" height="15" fill="rgb(231,119,3)" fg:x="142747706" fg:w="42002294"/><text x="57.6425%" y="1199.50">core::ptr::drop_in_place&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42,002,294 samples, 16.89%)</title><rect x="57.3925%" y="1173" width="16.8873%" height="15" fill="rgb(216,97,11)" fg:x="142747706" fg:w="42002294"/><text x="57.6425%" y="1183.50">&lt;alloc::vec::Vec&lt;T,A&gt; as c..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (42,002,294 samples, 16.89%)</title><rect x="57.3925%" y="1157" width="16.8873%" height="15" fill="rgb(223,59,9)" fg:x="142747706" fg:w="42002294"/><text x="57.6425%" y="1167.50">core::ptr::drop_in_place&lt;[..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (42,002,294 samples, 16.89%)</title><rect x="57.3925%" y="1141" width="16.8873%" height="15" fill="rgb(233,93,31)" fg:x="142747706" fg:w="42002294"/><text x="57.6425%" y="1151.50">core::ptr::drop_in_place&lt;c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (42,002,294 samples, 16.89%)</title><rect x="57.3925%" y="1125" width="16.8873%" height="15" fill="rgb(239,81,33)" fg:x="142747706" fg:w="42002294"/><text x="57.6425%" y="1135.50">core::ptr::drop_in_place&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (17,129,993 samples, 6.89%)</title><rect x="67.3926%" y="1109" width="6.8872%" height="15" fill="rgb(213,120,34)" fg:x="167620007" fg:w="17129993"/><text x="67.6426%" y="1119.50">core::ptr..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,129,993 samples, 6.89%)</title><rect x="67.3926%" y="1093" width="6.8872%" height="15" fill="rgb(243,49,53)" fg:x="167620007" fg:w="17129993"/><text x="67.6426%" y="1103.50">&lt;alloc::r..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (17,129,993 samples, 6.89%)</title><rect x="67.3926%" y="1077" width="6.8872%" height="15" fill="rgb(247,216,33)" fg:x="167620007" fg:w="17129993"/><text x="67.6426%" y="1087.50">alloc::ra..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17,129,993 samples, 6.89%)</title><rect x="67.3926%" y="1061" width="6.8872%" height="15" fill="rgb(226,26,14)" fg:x="167620007" fg:w="17129993"/><text x="67.6426%" y="1071.50">&lt;alloc::a..</text></g><g><title>alloc::alloc::dealloc (17,129,993 samples, 6.89%)</title><rect x="67.3926%" y="1045" width="6.8872%" height="15" fill="rgb(215,49,53)" fg:x="167620007" fg:w="17129993"/><text x="67.6426%" y="1055.50">alloc::al..</text></g><g><title>cfree (17,129,993 samples, 6.89%)</title><rect x="67.3926%" y="1029" width="6.8872%" height="15" fill="rgb(245,162,40)" fg:x="167620007" fg:w="17129993"/><text x="67.6426%" y="1039.50">cfree</text></g><g><title>[libc.so.6] (17,129,993 samples, 6.89%)</title><rect x="67.3926%" y="1013" width="6.8872%" height="15" fill="rgb(229,68,17)" fg:x="167620007" fg:w="17129993"/><text x="67.6426%" y="1023.50">[libc.so...</text></g><g><title>[libc.so.6] (17,129,993 samples, 6.89%)</title><rect x="67.3926%" y="997" width="6.8872%" height="15" fill="rgb(213,182,10)" fg:x="167620007" fg:w="17129993"/><text x="67.6426%" y="1007.50">[libc.so...</text></g><g><title>[libc.so.6] (2,847,448 samples, 1.14%)</title><rect x="73.1349%" y="981" width="1.1448%" height="15" fill="rgb(245,125,30)" fg:x="181902552" fg:w="2847448"/><text x="73.3849%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (44,799,953 samples, 18.01%)</title><rect x="57.3925%" y="1445" width="18.0121%" height="15" fill="rgb(232,202,2)" fg:x="142747706" fg:w="44799953"/><text x="57.6425%" y="1455.50">core::ptr::drop_in_place&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44,799,953 samples, 18.01%)</title><rect x="57.3925%" y="1429" width="18.0121%" height="15" fill="rgb(237,140,51)" fg:x="142747706" fg:w="44799953"/><text x="57.6425%" y="1439.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (44,799,953 samples, 18.01%)</title><rect x="57.3925%" y="1413" width="18.0121%" height="15" fill="rgb(236,157,25)" fg:x="142747706" fg:w="44799953"/><text x="57.6425%" y="1423.50">core::ptr::drop_in_place&lt;[cs..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (44,799,953 samples, 18.01%)</title><rect x="57.3925%" y="1397" width="18.0121%" height="15" fill="rgb(219,209,0)" fg:x="142747706" fg:w="44799953"/><text x="57.6425%" y="1407.50">core::ptr::drop_in_place&lt;css..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (44,799,953 samples, 18.01%)</title><rect x="57.3925%" y="1381" width="18.0121%" height="15" fill="rgb(240,116,54)" fg:x="142747706" fg:w="44799953"/><text x="57.6425%" y="1391.50">core::ptr::drop_in_place&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44,799,953 samples, 18.01%)</title><rect x="57.3925%" y="1365" width="18.0121%" height="15" fill="rgb(216,10,36)" fg:x="142747706" fg:w="44799953"/><text x="57.6425%" y="1375.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (44,799,953 samples, 18.01%)</title><rect x="57.3925%" y="1349" width="18.0121%" height="15" fill="rgb(222,72,44)" fg:x="142747706" fg:w="44799953"/><text x="57.6425%" y="1359.50">core::ptr::drop_in_place&lt;[cs..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (44,799,953 samples, 18.01%)</title><rect x="57.3925%" y="1333" width="18.0121%" height="15" fill="rgb(232,159,9)" fg:x="142747706" fg:w="44799953"/><text x="57.6425%" y="1343.50">core::ptr::drop_in_place&lt;css..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (44,799,953 samples, 18.01%)</title><rect x="57.3925%" y="1317" width="18.0121%" height="15" fill="rgb(210,39,32)" fg:x="142747706" fg:w="44799953"/><text x="57.6425%" y="1327.50">core::ptr::drop_in_place&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44,799,953 samples, 18.01%)</title><rect x="57.3925%" y="1301" width="18.0121%" height="15" fill="rgb(216,194,45)" fg:x="142747706" fg:w="44799953"/><text x="57.6425%" y="1311.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (44,799,953 samples, 18.01%)</title><rect x="57.3925%" y="1285" width="18.0121%" height="15" fill="rgb(218,18,35)" fg:x="142747706" fg:w="44799953"/><text x="57.6425%" y="1295.50">core::ptr::drop_in_place&lt;[cs..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (44,799,953 samples, 18.01%)</title><rect x="57.3925%" y="1269" width="18.0121%" height="15" fill="rgb(207,83,51)" fg:x="142747706" fg:w="44799953"/><text x="57.6425%" y="1279.50">core::ptr::drop_in_place&lt;css..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (44,799,953 samples, 18.01%)</title><rect x="57.3925%" y="1253" width="18.0121%" height="15" fill="rgb(225,63,43)" fg:x="142747706" fg:w="44799953"/><text x="57.6425%" y="1263.50">core::ptr::drop_in_place&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44,799,953 samples, 18.01%)</title><rect x="57.3925%" y="1237" width="18.0121%" height="15" fill="rgb(207,57,36)" fg:x="142747706" fg:w="44799953"/><text x="57.6425%" y="1247.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (44,799,953 samples, 18.01%)</title><rect x="57.3925%" y="1221" width="18.0121%" height="15" fill="rgb(216,99,33)" fg:x="142747706" fg:w="44799953"/><text x="57.6425%" y="1231.50">core::ptr::drop_in_place&lt;[cs..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (44,799,953 samples, 18.01%)</title><rect x="57.3925%" y="1205" width="18.0121%" height="15" fill="rgb(225,42,16)" fg:x="142747706" fg:w="44799953"/><text x="57.6425%" y="1215.50">core::ptr::drop_in_place&lt;css..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,797,659 samples, 1.12%)</title><rect x="74.2798%" y="1189" width="1.1248%" height="15" fill="rgb(220,201,45)" fg:x="184750000" fg:w="2797659"/><text x="74.5298%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (2,797,659 samples, 1.12%)</title><rect x="74.2798%" y="1173" width="1.1248%" height="15" fill="rgb(225,33,4)" fg:x="184750000" fg:w="2797659"/><text x="74.5298%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2,797,659 samples, 1.12%)</title><rect x="74.2798%" y="1157" width="1.1248%" height="15" fill="rgb(224,33,50)" fg:x="184750000" fg:w="2797659"/><text x="74.5298%" y="1167.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,797,659 samples, 1.12%)</title><rect x="74.2798%" y="1141" width="1.1248%" height="15" fill="rgb(246,198,51)" fg:x="184750000" fg:w="2797659"/><text x="74.5298%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,797,659 samples, 1.12%)</title><rect x="74.2798%" y="1125" width="1.1248%" height="15" fill="rgb(205,22,4)" fg:x="184750000" fg:w="2797659"/><text x="74.5298%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,797,659 samples, 1.12%)</title><rect x="74.2798%" y="1109" width="1.1248%" height="15" fill="rgb(206,3,8)" fg:x="184750000" fg:w="2797659"/><text x="74.5298%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (2,797,659 samples, 1.12%)</title><rect x="74.2798%" y="1093" width="1.1248%" height="15" fill="rgb(251,23,15)" fg:x="184750000" fg:w="2797659"/><text x="74.5298%" y="1103.50"></text></g><g><title>cfree (2,797,659 samples, 1.12%)</title><rect x="74.2798%" y="1077" width="1.1248%" height="15" fill="rgb(252,88,28)" fg:x="184750000" fg:w="2797659"/><text x="74.5298%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (47,613,358 samples, 19.14%)</title><rect x="57.3925%" y="1461" width="19.1432%" height="15" fill="rgb(212,127,14)" fg:x="142747706" fg:w="47613358"/><text x="57.6425%" y="1471.50">core::ptr::drop_in_place&lt;css_b..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,813,405 samples, 1.13%)</title><rect x="75.4046%" y="1445" width="1.1311%" height="15" fill="rgb(247,145,37)" fg:x="187547659" fg:w="2813405"/><text x="75.6546%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,813,405 samples, 1.13%)</title><rect x="75.4046%" y="1429" width="1.1311%" height="15" fill="rgb(209,117,53)" fg:x="187547659" fg:w="2813405"/><text x="75.6546%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,813,405 samples, 1.13%)</title><rect x="75.4046%" y="1413" width="1.1311%" height="15" fill="rgb(212,90,42)" fg:x="187547659" fg:w="2813405"/><text x="75.6546%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,813,405 samples, 1.13%)</title><rect x="75.4046%" y="1397" width="1.1311%" height="15" fill="rgb(218,164,37)" fg:x="187547659" fg:w="2813405"/><text x="75.6546%" y="1407.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,813,405 samples, 1.13%)</title><rect x="75.4046%" y="1381" width="1.1311%" height="15" fill="rgb(246,65,34)" fg:x="187547659" fg:w="2813405"/><text x="75.6546%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,813,405 samples, 1.13%)</title><rect x="75.4046%" y="1365" width="1.1311%" height="15" fill="rgb(231,100,33)" fg:x="187547659" fg:w="2813405"/><text x="75.6546%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,813,405 samples, 1.13%)</title><rect x="75.4046%" y="1349" width="1.1311%" height="15" fill="rgb(228,126,14)" fg:x="187547659" fg:w="2813405"/><text x="75.6546%" y="1359.50"></text></g><g><title>alloc::alloc::dealloc (2,813,405 samples, 1.13%)</title><rect x="75.4046%" y="1333" width="1.1311%" height="15" fill="rgb(215,173,21)" fg:x="187547659" fg:w="2813405"/><text x="75.6546%" y="1343.50"></text></g><g><title>cfree (2,813,405 samples, 1.13%)</title><rect x="75.4046%" y="1317" width="1.1311%" height="15" fill="rgb(210,6,40)" fg:x="187547659" fg:w="2813405"/><text x="75.6546%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2,894,688 samples, 1.16%)</title><rect x="76.5357%" y="1349" width="1.1638%" height="15" fill="rgb(212,48,18)" fg:x="190361064" fg:w="2894688"/><text x="76.7857%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (2,894,688 samples, 1.16%)</title><rect x="76.5357%" y="1333" width="1.1638%" height="15" fill="rgb(230,214,11)" fg:x="190361064" fg:w="2894688"/><text x="76.7857%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2,845,932 samples, 1.14%)</title><rect x="77.6996%" y="1333" width="1.1442%" height="15" fill="rgb(254,105,39)" fg:x="193255752" fg:w="2845932"/><text x="77.9496%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (2,845,932 samples, 1.14%)</title><rect x="77.6996%" y="1317" width="1.1442%" height="15" fill="rgb(245,158,5)" fg:x="193255752" fg:w="2845932"/><text x="77.9496%" y="1327.50"></text></g><g><title>benchmark::benchmark_accumulated_modifications (155,283,150 samples, 62.43%)</title><rect x="17.5471%" y="1477" width="62.4325%" height="15" fill="rgb(249,208,11)" fg:x="43643426" fg:w="155283150"/><text x="17.7971%" y="1487.50">benchmark::benchmark_accumulated_modifications</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (8,565,512 samples, 3.44%)</title><rect x="76.5357%" y="1461" width="3.4438%" height="15" fill="rgb(210,39,28)" fg:x="190361064" fg:w="8565512"/><text x="76.7857%" y="1471.50">css..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (8,565,512 samples, 3.44%)</title><rect x="76.5357%" y="1445" width="3.4438%" height="15" fill="rgb(211,56,53)" fg:x="190361064" fg:w="8565512"/><text x="76.7857%" y="1455.50">css..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (8,565,512 samples, 3.44%)</title><rect x="76.5357%" y="1429" width="3.4438%" height="15" fill="rgb(226,201,30)" fg:x="190361064" fg:w="8565512"/><text x="76.7857%" y="1439.50">css..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (8,565,512 samples, 3.44%)</title><rect x="76.5357%" y="1413" width="3.4438%" height="15" fill="rgb(239,101,34)" fg:x="190361064" fg:w="8565512"/><text x="76.7857%" y="1423.50">css..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (8,565,512 samples, 3.44%)</title><rect x="76.5357%" y="1397" width="3.4438%" height="15" fill="rgb(226,209,5)" fg:x="190361064" fg:w="8565512"/><text x="76.7857%" y="1407.50">css..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (8,565,512 samples, 3.44%)</title><rect x="76.5357%" y="1381" width="3.4438%" height="15" fill="rgb(250,105,47)" fg:x="190361064" fg:w="8565512"/><text x="76.7857%" y="1391.50">css..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (8,565,512 samples, 3.44%)</title><rect x="76.5357%" y="1365" width="3.4438%" height="15" fill="rgb(230,72,3)" fg:x="190361064" fg:w="8565512"/><text x="76.7857%" y="1375.50">css..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (5,670,824 samples, 2.28%)</title><rect x="77.6996%" y="1349" width="2.2800%" height="15" fill="rgb(232,218,39)" fg:x="193255752" fg:w="5670824"/><text x="77.9496%" y="1359.50">c..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,824,892 samples, 1.14%)</title><rect x="78.8438%" y="1333" width="1.1358%" height="15" fill="rgb(248,166,6)" fg:x="196101684" fg:w="2824892"/><text x="79.0938%" y="1343.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,824,892 samples, 1.14%)</title><rect x="78.8438%" y="1317" width="1.1358%" height="15" fill="rgb(247,89,20)" fg:x="196101684" fg:w="2824892"/><text x="79.0938%" y="1327.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,824,892 samples, 1.14%)</title><rect x="78.8438%" y="1301" width="1.1358%" height="15" fill="rgb(248,130,54)" fg:x="196101684" fg:w="2824892"/><text x="79.0938%" y="1311.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,824,892 samples, 1.14%)</title><rect x="78.8438%" y="1285" width="1.1358%" height="15" fill="rgb(234,196,4)" fg:x="196101684" fg:w="2824892"/><text x="79.0938%" y="1295.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,824,892 samples, 1.14%)</title><rect x="78.8438%" y="1269" width="1.1358%" height="15" fill="rgb(250,143,31)" fg:x="196101684" fg:w="2824892"/><text x="79.0938%" y="1279.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,824,892 samples, 1.14%)</title><rect x="78.8438%" y="1253" width="1.1358%" height="15" fill="rgb(211,110,34)" fg:x="196101684" fg:w="2824892"/><text x="79.0938%" y="1263.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,824,892 samples, 1.14%)</title><rect x="78.8438%" y="1237" width="1.1358%" height="15" fill="rgb(215,124,48)" fg:x="196101684" fg:w="2824892"/><text x="79.0938%" y="1247.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,824,892 samples, 1.14%)</title><rect x="78.8438%" y="1221" width="1.1358%" height="15" fill="rgb(216,46,13)" fg:x="196101684" fg:w="2824892"/><text x="79.0938%" y="1231.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,824,892 samples, 1.14%)</title><rect x="78.8438%" y="1205" width="1.1358%" height="15" fill="rgb(205,184,25)" fg:x="196101684" fg:w="2824892"/><text x="79.0938%" y="1215.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,824,892 samples, 1.14%)</title><rect x="78.8438%" y="1189" width="1.1358%" height="15" fill="rgb(228,1,10)" fg:x="196101684" fg:w="2824892"/><text x="79.0938%" y="1199.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,824,892 samples, 1.14%)</title><rect x="78.8438%" y="1173" width="1.1358%" height="15" fill="rgb(213,116,27)" fg:x="196101684" fg:w="2824892"/><text x="79.0938%" y="1183.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (2,824,892 samples, 1.14%)</title><rect x="78.8438%" y="1157" width="1.1358%" height="15" fill="rgb(241,95,50)" fg:x="196101684" fg:w="2824892"/><text x="79.0938%" y="1167.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (2,824,892 samples, 1.14%)</title><rect x="78.8438%" y="1141" width="1.1358%" height="15" fill="rgb(238,48,32)" fg:x="196101684" fg:w="2824892"/><text x="79.0938%" y="1151.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (2,824,892 samples, 1.14%)</title><rect x="78.8438%" y="1125" width="1.1358%" height="15" fill="rgb(235,113,49)" fg:x="196101684" fg:w="2824892"/><text x="79.0938%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,264,190 samples, 0.91%)</title><rect x="79.9795%" y="1461" width="0.9103%" height="15" fill="rgb(205,127,43)" fg:x="198926576" fg:w="2264190"/><text x="80.2295%" y="1471.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (2,264,190 samples, 0.91%)</title><rect x="79.9795%" y="1445" width="0.9103%" height="15" fill="rgb(250,162,2)" fg:x="198926576" fg:w="2264190"/><text x="80.2295%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,264,190 samples, 0.91%)</title><rect x="79.9795%" y="1429" width="0.9103%" height="15" fill="rgb(220,13,41)" fg:x="198926576" fg:w="2264190"/><text x="80.2295%" y="1439.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,264,190 samples, 0.91%)</title><rect x="79.9795%" y="1413" width="0.9103%" height="15" fill="rgb(249,221,25)" fg:x="198926576" fg:w="2264190"/><text x="80.2295%" y="1423.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (2,264,190 samples, 0.91%)</title><rect x="79.9795%" y="1397" width="0.9103%" height="15" fill="rgb(215,208,19)" fg:x="198926576" fg:w="2264190"/><text x="80.2295%" y="1407.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (2,264,190 samples, 0.91%)</title><rect x="79.9795%" y="1381" width="0.9103%" height="15" fill="rgb(236,175,2)" fg:x="198926576" fg:w="2264190"/><text x="80.2295%" y="1391.50"></text></g><g><title>core::slice::memchr::memchr (2,264,190 samples, 0.91%)</title><rect x="79.9795%" y="1365" width="0.9103%" height="15" fill="rgb(241,52,2)" fg:x="198926576" fg:w="2264190"/><text x="80.2295%" y="1375.50"></text></g><g><title>core::slice::memchr::memchr_aligned (2,264,190 samples, 0.91%)</title><rect x="79.9795%" y="1349" width="0.9103%" height="15" fill="rgb(248,140,14)" fg:x="198926576" fg:w="2264190"/><text x="80.2295%" y="1359.50"></text></g><g><title>core::slice::memchr::memchr_aligned::runtime (2,264,190 samples, 0.91%)</title><rect x="79.9795%" y="1333" width="0.9103%" height="15" fill="rgb(253,22,42)" fg:x="198926576" fg:w="2264190"/><text x="80.2295%" y="1343.50"></text></g><g><title>cfree (1,616,939 samples, 0.65%)</title><rect x="80.8899%" y="629" width="0.6501%" height="15" fill="rgb(234,61,47)" fg:x="201190766" fg:w="1616939"/><text x="81.1399%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1461" width="1.3522%" height="15" fill="rgb(208,226,15)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1445" width="1.3522%" height="15" fill="rgb(217,221,4)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1429" width="1.3522%" height="15" fill="rgb(212,174,34)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1439.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1413" width="1.3522%" height="15" fill="rgb(253,83,4)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1423.50"></text></g><g><title>core::mem::drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1397" width="1.3522%" height="15" fill="rgb(250,195,49)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1381" width="1.3522%" height="15" fill="rgb(241,192,25)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1391.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1365" width="1.3522%" height="15" fill="rgb(208,124,10)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1375.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1349" width="1.3522%" height="15" fill="rgb(222,33,0)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1333" width="1.3522%" height="15" fill="rgb(234,209,28)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1343.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1317" width="1.3522%" height="15" fill="rgb(224,11,23)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1327.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1301" width="1.3522%" height="15" fill="rgb(232,99,1)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1285" width="1.3522%" height="15" fill="rgb(237,95,45)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1269" width="1.3522%" height="15" fill="rgb(208,109,11)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1253" width="1.3522%" height="15" fill="rgb(216,190,48)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1263.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1237" width="1.3522%" height="15" fill="rgb(251,171,36)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1247.50"></text></g><g><title>core::mem::drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1221" width="1.3522%" height="15" fill="rgb(230,62,22)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1205" width="1.3522%" height="15" fill="rgb(225,114,35)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1215.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1189" width="1.3522%" height="15" fill="rgb(215,118,42)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1199.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1173" width="1.3522%" height="15" fill="rgb(243,119,21)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1157" width="1.3522%" height="15" fill="rgb(252,177,53)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1141" width="1.3522%" height="15" fill="rgb(237,209,29)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1151.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1125" width="1.3522%" height="15" fill="rgb(212,65,23)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1109" width="1.3522%" height="15" fill="rgb(230,222,46)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1093" width="1.3522%" height="15" fill="rgb(215,135,32)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1077" width="1.3522%" height="15" fill="rgb(246,101,22)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1061" width="1.3522%" height="15" fill="rgb(206,107,13)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1045" width="1.3522%" height="15" fill="rgb(250,100,44)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1029" width="1.3522%" height="15" fill="rgb(231,147,38)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="1013" width="1.3522%" height="15" fill="rgb(229,8,40)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="997" width="1.3522%" height="15" fill="rgb(221,135,30)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="1007.50"></text></g><g><title>core::mem::drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="981" width="1.3522%" height="15" fill="rgb(249,193,18)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="965" width="1.3522%" height="15" fill="rgb(209,133,39)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="949" width="1.3522%" height="15" fill="rgb(232,100,14)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="959.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="933" width="1.3522%" height="15" fill="rgb(224,185,1)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="917" width="1.3522%" height="15" fill="rgb(223,139,8)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="901" width="1.3522%" height="15" fill="rgb(232,213,38)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="911.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="885" width="1.3522%" height="15" fill="rgb(207,94,22)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="869" width="1.3522%" height="15" fill="rgb(219,183,54)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="853" width="1.3522%" height="15" fill="rgb(216,185,54)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="837" width="1.3522%" height="15" fill="rgb(254,217,39)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="821" width="1.3522%" height="15" fill="rgb(240,178,23)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="805" width="1.3522%" height="15" fill="rgb(218,11,47)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="789" width="1.3522%" height="15" fill="rgb(218,51,51)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="773" width="1.3522%" height="15" fill="rgb(238,126,27)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="757" width="1.3522%" height="15" fill="rgb(249,202,22)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="767.50"></text></g><g><title>core::mem::drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="741" width="1.3522%" height="15" fill="rgb(254,195,49)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="725" width="1.3522%" height="15" fill="rgb(208,123,14)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="709" width="1.3522%" height="15" fill="rgb(224,200,8)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="693" width="1.3522%" height="15" fill="rgb(217,61,36)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="677" width="1.3522%" height="15" fill="rgb(206,35,45)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="661" width="1.3522%" height="15" fill="rgb(217,65,33)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="671.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,363,225 samples, 1.35%)</title><rect x="80.8899%" y="645" width="1.3522%" height="15" fill="rgb(222,158,48)" fg:x="201190766" fg:w="3363225"/><text x="81.1399%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="629" width="0.7021%" height="15" fill="rgb(254,2,54)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="613" width="0.7021%" height="15" fill="rgb(250,143,38)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="597" width="0.7021%" height="15" fill="rgb(248,25,0)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="581" width="0.7021%" height="15" fill="rgb(206,152,27)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="565" width="0.7021%" height="15" fill="rgb(240,77,30)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="549" width="0.7021%" height="15" fill="rgb(231,5,3)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="533" width="0.7021%" height="15" fill="rgb(207,226,32)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="517" width="0.7021%" height="15" fill="rgb(222,207,47)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="527.50"></text></g><g><title>core::mem::drop (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="501" width="0.7021%" height="15" fill="rgb(229,115,45)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="485" width="0.7021%" height="15" fill="rgb(224,191,6)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="469" width="0.7021%" height="15" fill="rgb(230,227,24)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="453" width="0.7021%" height="15" fill="rgb(228,80,19)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="437" width="0.7021%" height="15" fill="rgb(247,229,0)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="421" width="0.7021%" height="15" fill="rgb(237,194,15)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="431.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="405" width="0.7021%" height="15" fill="rgb(219,203,20)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="389" width="0.7021%" height="15" fill="rgb(234,128,8)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="373" width="0.7021%" height="15" fill="rgb(248,202,8)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="357" width="0.7021%" height="15" fill="rgb(206,104,37)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="341" width="0.7021%" height="15" fill="rgb(223,8,27)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="325" width="0.7021%" height="15" fill="rgb(216,217,28)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="309" width="0.7021%" height="15" fill="rgb(249,199,1)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="293" width="0.7021%" height="15" fill="rgb(240,85,17)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="277" width="0.7021%" height="15" fill="rgb(206,108,45)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="287.50"></text></g><g><title>core::mem::drop (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="261" width="0.7021%" height="15" fill="rgb(245,210,41)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="245" width="0.7021%" height="15" fill="rgb(206,13,37)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="229" width="0.7021%" height="15" fill="rgb(250,61,18)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="239.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="213" width="0.7021%" height="15" fill="rgb(235,172,48)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="197" width="0.7021%" height="15" fill="rgb(249,201,17)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="181" width="0.7021%" height="15" fill="rgb(219,208,6)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="191.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="165" width="0.7021%" height="15" fill="rgb(248,31,23)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,746,286 samples, 0.70%)</title><rect x="81.5400%" y="149" width="0.7021%" height="15" fill="rgb(245,15,42)" fg:x="202807705" fg:w="1746286"/><text x="81.7900%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,001,066 samples, 0.80%)</title><rect x="82.2421%" y="1237" width="0.8045%" height="15" fill="rgb(222,217,39)" fg:x="204553991" fg:w="2001066"/><text x="82.4921%" y="1247.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,001,066 samples, 0.80%)</title><rect x="82.2421%" y="1221" width="0.8045%" height="15" fill="rgb(210,219,27)" fg:x="204553991" fg:w="2001066"/><text x="82.4921%" y="1231.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2,001,066 samples, 0.80%)</title><rect x="82.2421%" y="1205" width="0.8045%" height="15" fill="rgb(252,166,36)" fg:x="204553991" fg:w="2001066"/><text x="82.4921%" y="1215.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (2,001,066 samples, 0.80%)</title><rect x="82.2421%" y="1189" width="0.8045%" height="15" fill="rgb(245,132,34)" fg:x="204553991" fg:w="2001066"/><text x="82.4921%" y="1199.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,001,066 samples, 0.80%)</title><rect x="82.2421%" y="1173" width="0.8045%" height="15" fill="rgb(236,54,3)" fg:x="204553991" fg:w="2001066"/><text x="82.4921%" y="1183.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (2,001,066 samples, 0.80%)</title><rect x="82.2421%" y="1157" width="0.8045%" height="15" fill="rgb(241,173,43)" fg:x="204553991" fg:w="2001066"/><text x="82.4921%" y="1167.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2,001,066 samples, 0.80%)</title><rect x="82.2421%" y="1141" width="0.8045%" height="15" fill="rgb(215,190,9)" fg:x="204553991" fg:w="2001066"/><text x="82.4921%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2,001,066 samples, 0.80%)</title><rect x="82.2421%" y="1125" width="0.8045%" height="15" fill="rgb(242,101,16)" fg:x="204553991" fg:w="2001066"/><text x="82.4921%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,001,066 samples, 0.80%)</title><rect x="82.2421%" y="1109" width="0.8045%" height="15" fill="rgb(223,190,21)" fg:x="204553991" fg:w="2001066"/><text x="82.4921%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,001,066 samples, 0.80%)</title><rect x="82.2421%" y="1093" width="0.8045%" height="15" fill="rgb(215,228,25)" fg:x="204553991" fg:w="2001066"/><text x="82.4921%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (2,001,066 samples, 0.80%)</title><rect x="82.2421%" y="1077" width="0.8045%" height="15" fill="rgb(225,36,22)" fg:x="204553991" fg:w="2001066"/><text x="82.4921%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,001,066 samples, 0.80%)</title><rect x="82.2421%" y="1061" width="0.8045%" height="15" fill="rgb(251,106,46)" fg:x="204553991" fg:w="2001066"/><text x="82.4921%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,001,066 samples, 0.80%)</title><rect x="82.2421%" y="1045" width="0.8045%" height="15" fill="rgb(208,90,1)" fg:x="204553991" fg:w="2001066"/><text x="82.4921%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,001,066 samples, 0.80%)</title><rect x="82.2421%" y="1029" width="0.8045%" height="15" fill="rgb(243,10,4)" fg:x="204553991" fg:w="2001066"/><text x="82.4921%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,001,066 samples, 0.80%)</title><rect x="82.2421%" y="1013" width="0.8045%" height="15" fill="rgb(212,137,27)" fg:x="204553991" fg:w="2001066"/><text x="82.4921%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,001,066 samples, 0.80%)</title><rect x="82.2421%" y="997" width="0.8045%" height="15" fill="rgb(231,220,49)" fg:x="204553991" fg:w="2001066"/><text x="82.4921%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,001,066 samples, 0.80%)</title><rect x="82.2421%" y="981" width="0.8045%" height="15" fill="rgb(237,96,20)" fg:x="204553991" fg:w="2001066"/><text x="82.4921%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,001,066 samples, 0.80%)</title><rect x="82.2421%" y="965" width="0.8045%" height="15" fill="rgb(239,229,30)" fg:x="204553991" fg:w="2001066"/><text x="82.4921%" y="975.50"></text></g><g><title>alloc::alloc::alloc (2,001,066 samples, 0.80%)</title><rect x="82.2421%" y="949" width="0.8045%" height="15" fill="rgb(219,65,33)" fg:x="204553991" fg:w="2001066"/><text x="82.4921%" y="959.50"></text></g><g><title>__rdl_alloc (2,001,066 samples, 0.80%)</title><rect x="82.2421%" y="933" width="0.8045%" height="15" fill="rgb(243,134,7)" fg:x="204553991" fg:w="2001066"/><text x="82.4921%" y="943.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,001,066 samples, 0.80%)</title><rect x="82.2421%" y="917" width="0.8045%" height="15" fill="rgb(216,177,54)" fg:x="204553991" fg:w="2001066"/><text x="82.4921%" y="927.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (886,340 samples, 0.36%)</title><rect x="83.0466%" y="917" width="0.3564%" height="15" fill="rgb(211,160,20)" fg:x="206555057" fg:w="886340"/><text x="83.2966%" y="927.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2,136,460 samples, 0.86%)</title><rect x="83.0466%" y="965" width="0.8590%" height="15" fill="rgb(239,85,39)" fg:x="206555057" fg:w="2136460"/><text x="83.2966%" y="975.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (2,136,460 samples, 0.86%)</title><rect x="83.0466%" y="949" width="0.8590%" height="15" fill="rgb(232,125,22)" fg:x="206555057" fg:w="2136460"/><text x="83.2966%" y="959.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (2,136,460 samples, 0.86%)</title><rect x="83.0466%" y="933" width="0.8590%" height="15" fill="rgb(244,57,34)" fg:x="206555057" fg:w="2136460"/><text x="83.2966%" y="943.50"></text></g><g><title>serde_json::read::is_escape (1,250,120 samples, 0.50%)</title><rect x="83.4030%" y="917" width="0.5026%" height="15" fill="rgb(214,203,32)" fg:x="207441397" fg:w="1250120"/><text x="83.6530%" y="927.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,933,319 samples, 0.78%)</title><rect x="83.9056%" y="597" width="0.7773%" height="15" fill="rgb(207,58,43)" fg:x="208691517" fg:w="1933319"/><text x="84.1556%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,933,319 samples, 0.78%)</title><rect x="83.9056%" y="581" width="0.7773%" height="15" fill="rgb(215,193,15)" fg:x="208691517" fg:w="1933319"/><text x="84.1556%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,933,319 samples, 0.78%)</title><rect x="83.9056%" y="565" width="0.7773%" height="15" fill="rgb(232,15,44)" fg:x="208691517" fg:w="1933319"/><text x="84.1556%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,933,319 samples, 0.78%)</title><rect x="83.9056%" y="549" width="0.7773%" height="15" fill="rgb(212,3,48)" fg:x="208691517" fg:w="1933319"/><text x="84.1556%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,933,319 samples, 0.78%)</title><rect x="83.9056%" y="533" width="0.7773%" height="15" fill="rgb(218,128,7)" fg:x="208691517" fg:w="1933319"/><text x="84.1556%" y="543.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,933,319 samples, 0.78%)</title><rect x="83.9056%" y="517" width="0.7773%" height="15" fill="rgb(226,216,39)" fg:x="208691517" fg:w="1933319"/><text x="84.1556%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4,742,921 samples, 1.91%)</title><rect x="83.9056%" y="613" width="1.9069%" height="15" fill="rgb(243,47,51)" fg:x="208691517" fg:w="4742921"/><text x="84.1556%" y="623.50">&lt;..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (2,809,602 samples, 1.13%)</title><rect x="84.6829%" y="597" width="1.1296%" height="15" fill="rgb(241,183,40)" fg:x="210624836" fg:w="2809602"/><text x="84.9329%" y="607.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1,263,989 samples, 0.51%)</title><rect x="85.3043%" y="581" width="0.5082%" height="15" fill="rgb(231,217,32)" fg:x="212170449" fg:w="1263989"/><text x="85.5543%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (501,504 samples, 0.20%)</title><rect x="85.8125%" y="549" width="0.2016%" height="15" fill="rgb(229,61,38)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="559.50"></text></g><g><title>serde::de::MapAccess::next_entry (501,504 samples, 0.20%)</title><rect x="85.8125%" y="533" width="0.2016%" height="15" fill="rgb(225,210,5)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="543.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (501,504 samples, 0.20%)</title><rect x="85.8125%" y="517" width="0.2016%" height="15" fill="rgb(231,79,45)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (501,504 samples, 0.20%)</title><rect x="85.8125%" y="501" width="0.2016%" height="15" fill="rgb(224,100,7)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (501,504 samples, 0.20%)</title><rect x="85.8125%" y="485" width="0.2016%" height="15" fill="rgb(241,198,18)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="495.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (501,504 samples, 0.20%)</title><rect x="85.8125%" y="469" width="0.2016%" height="15" fill="rgb(252,97,53)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (501,504 samples, 0.20%)</title><rect x="85.8125%" y="453" width="0.2016%" height="15" fill="rgb(220,88,7)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (501,504 samples, 0.20%)</title><rect x="85.8125%" y="437" width="0.2016%" height="15" fill="rgb(213,176,14)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="447.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (501,504 samples, 0.20%)</title><rect x="85.8125%" y="421" width="0.2016%" height="15" fill="rgb(246,73,7)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="431.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (501,504 samples, 0.20%)</title><rect x="85.8125%" y="405" width="0.2016%" height="15" fill="rgb(245,64,36)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (501,504 samples, 0.20%)</title><rect x="85.8125%" y="389" width="0.2016%" height="15" fill="rgb(245,80,10)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (501,504 samples, 0.20%)</title><rect x="85.8125%" y="373" width="0.2016%" height="15" fill="rgb(232,107,50)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (501,504 samples, 0.20%)</title><rect x="85.8125%" y="357" width="0.2016%" height="15" fill="rgb(253,3,0)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (501,504 samples, 0.20%)</title><rect x="85.8125%" y="341" width="0.2016%" height="15" fill="rgb(212,99,53)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (501,504 samples, 0.20%)</title><rect x="85.8125%" y="325" width="0.2016%" height="15" fill="rgb(249,111,54)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (501,504 samples, 0.20%)</title><rect x="85.8125%" y="309" width="0.2016%" height="15" fill="rgb(249,55,30)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (501,504 samples, 0.20%)</title><rect x="85.8125%" y="293" width="0.2016%" height="15" fill="rgb(237,47,42)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (501,504 samples, 0.20%)</title><rect x="85.8125%" y="277" width="0.2016%" height="15" fill="rgb(211,20,18)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (501,504 samples, 0.20%)</title><rect x="85.8125%" y="261" width="0.2016%" height="15" fill="rgb(231,203,46)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (501,504 samples, 0.20%)</title><rect x="85.8125%" y="245" width="0.2016%" height="15" fill="rgb(237,142,3)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (501,504 samples, 0.20%)</title><rect x="85.8125%" y="229" width="0.2016%" height="15" fill="rgb(241,107,1)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="239.50"></text></g><g><title>alloc::alloc::alloc (501,504 samples, 0.20%)</title><rect x="85.8125%" y="213" width="0.2016%" height="15" fill="rgb(229,83,13)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="223.50"></text></g><g><title>malloc (501,504 samples, 0.20%)</title><rect x="85.8125%" y="197" width="0.2016%" height="15" fill="rgb(241,91,40)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="207.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.20%)</title><rect x="85.8125%" y="181" width="0.2016%" height="15" fill="rgb(225,3,45)" fg:x="213434438" fg:w="501504"/><text x="86.0625%" y="191.50"></text></g><g><title>serde::de::MapAccess::next_entry (7,629,910 samples, 3.07%)</title><rect x="83.9056%" y="853" width="3.0676%" height="15" fill="rgb(244,223,14)" fg:x="208691517" fg:w="7629910"/><text x="84.1556%" y="863.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (7,629,910 samples, 3.07%)</title><rect x="83.9056%" y="837" width="3.0676%" height="15" fill="rgb(224,124,37)" fg:x="208691517" fg:w="7629910"/><text x="84.1556%" y="847.50">ser..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (7,629,910 samples, 3.07%)</title><rect x="83.9056%" y="821" width="3.0676%" height="15" fill="rgb(251,171,30)" fg:x="208691517" fg:w="7629910"/><text x="84.1556%" y="831.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,629,910 samples, 3.07%)</title><rect x="83.9056%" y="805" width="3.0676%" height="15" fill="rgb(236,46,54)" fg:x="208691517" fg:w="7629910"/><text x="84.1556%" y="815.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,629,910 samples, 3.07%)</title><rect x="83.9056%" y="789" width="3.0676%" height="15" fill="rgb(245,213,5)" fg:x="208691517" fg:w="7629910"/><text x="84.1556%" y="799.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,629,910 samples, 3.07%)</title><rect x="83.9056%" y="773" width="3.0676%" height="15" fill="rgb(230,144,27)" fg:x="208691517" fg:w="7629910"/><text x="84.1556%" y="783.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (7,629,910 samples, 3.07%)</title><rect x="83.9056%" y="757" width="3.0676%" height="15" fill="rgb(220,86,6)" fg:x="208691517" fg:w="7629910"/><text x="84.1556%" y="767.50">&lt;se..</text></g><g><title>serde::de::SeqAccess::next_element (7,629,910 samples, 3.07%)</title><rect x="83.9056%" y="741" width="3.0676%" height="15" fill="rgb(240,20,13)" fg:x="208691517" fg:w="7629910"/><text x="84.1556%" y="751.50">ser..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (7,629,910 samples, 3.07%)</title><rect x="83.9056%" y="725" width="3.0676%" height="15" fill="rgb(217,89,34)" fg:x="208691517" fg:w="7629910"/><text x="84.1556%" y="735.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,629,910 samples, 3.07%)</title><rect x="83.9056%" y="709" width="3.0676%" height="15" fill="rgb(229,13,5)" fg:x="208691517" fg:w="7629910"/><text x="84.1556%" y="719.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,629,910 samples, 3.07%)</title><rect x="83.9056%" y="693" width="3.0676%" height="15" fill="rgb(244,67,35)" fg:x="208691517" fg:w="7629910"/><text x="84.1556%" y="703.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,629,910 samples, 3.07%)</title><rect x="83.9056%" y="677" width="3.0676%" height="15" fill="rgb(221,40,2)" fg:x="208691517" fg:w="7629910"/><text x="84.1556%" y="687.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7,629,910 samples, 3.07%)</title><rect x="83.9056%" y="661" width="3.0676%" height="15" fill="rgb(237,157,21)" fg:x="208691517" fg:w="7629910"/><text x="84.1556%" y="671.50">&lt;se..</text></g><g><title>serde::de::MapAccess::next_entry (7,629,910 samples, 3.07%)</title><rect x="83.9056%" y="645" width="3.0676%" height="15" fill="rgb(222,94,11)" fg:x="208691517" fg:w="7629910"/><text x="84.1556%" y="655.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (7,629,910 samples, 3.07%)</title><rect x="83.9056%" y="629" width="3.0676%" height="15" fill="rgb(249,113,6)" fg:x="208691517" fg:w="7629910"/><text x="84.1556%" y="639.50">ser..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,886,989 samples, 1.16%)</title><rect x="85.8125%" y="613" width="1.1607%" height="15" fill="rgb(238,137,36)" fg:x="213434438" fg:w="2886989"/><text x="86.0625%" y="623.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,886,989 samples, 1.16%)</title><rect x="85.8125%" y="597" width="1.1607%" height="15" fill="rgb(210,102,26)" fg:x="213434438" fg:w="2886989"/><text x="86.0625%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,886,989 samples, 1.16%)</title><rect x="85.8125%" y="581" width="1.1607%" height="15" fill="rgb(218,30,30)" fg:x="213434438" fg:w="2886989"/><text x="86.0625%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,886,989 samples, 1.16%)</title><rect x="85.8125%" y="565" width="1.1607%" height="15" fill="rgb(214,67,26)" fg:x="213434438" fg:w="2886989"/><text x="86.0625%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="549" width="0.9591%" height="15" fill="rgb(251,9,53)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="559.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="533" width="0.9591%" height="15" fill="rgb(228,204,25)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="543.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="517" width="0.9591%" height="15" fill="rgb(207,153,8)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="527.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="501" width="0.9591%" height="15" fill="rgb(242,9,16)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="485" width="0.9591%" height="15" fill="rgb(217,211,10)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="469" width="0.9591%" height="15" fill="rgb(219,228,52)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="453" width="0.9591%" height="15" fill="rgb(231,92,29)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="463.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="437" width="0.9591%" height="15" fill="rgb(232,8,23)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="447.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="421" width="0.9591%" height="15" fill="rgb(216,211,34)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="405" width="0.9591%" height="15" fill="rgb(236,151,0)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="415.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="389" width="0.9591%" height="15" fill="rgb(209,168,3)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="373" width="0.9591%" height="15" fill="rgb(208,129,28)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="357" width="0.9591%" height="15" fill="rgb(229,78,22)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="341" width="0.9591%" height="15" fill="rgb(228,187,13)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="351.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="325" width="0.9591%" height="15" fill="rgb(240,119,24)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="335.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="309" width="0.9591%" height="15" fill="rgb(209,194,42)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="319.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="293" width="0.9591%" height="15" fill="rgb(247,200,46)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="277" width="0.9591%" height="15" fill="rgb(218,76,16)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="261" width="0.9591%" height="15" fill="rgb(225,21,48)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="245" width="0.9591%" height="15" fill="rgb(239,223,50)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="255.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="229" width="0.9591%" height="15" fill="rgb(244,45,21)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="213" width="0.9591%" height="15" fill="rgb(232,33,43)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="197" width="0.9591%" height="15" fill="rgb(209,8,3)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (2,385,485 samples, 0.96%)</title><rect x="86.0141%" y="181" width="0.9591%" height="15" fill="rgb(214,25,53)" fg:x="213935942" fg:w="2385485"/><text x="86.2641%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (9,499,905 samples, 3.82%)</title><rect x="83.9056%" y="965" width="3.8195%" height="15" fill="rgb(254,186,54)" fg:x="208691517" fg:w="9499905"/><text x="84.1556%" y="975.50">&lt;ser..</text></g><g><title>serde::de::SeqAccess::next_element (9,499,905 samples, 3.82%)</title><rect x="83.9056%" y="949" width="3.8195%" height="15" fill="rgb(208,174,49)" fg:x="208691517" fg:w="9499905"/><text x="84.1556%" y="959.50">serd..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (9,499,905 samples, 3.82%)</title><rect x="83.9056%" y="933" width="3.8195%" height="15" fill="rgb(233,191,51)" fg:x="208691517" fg:w="9499905"/><text x="84.1556%" y="943.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,499,905 samples, 3.82%)</title><rect x="83.9056%" y="917" width="3.8195%" height="15" fill="rgb(222,134,10)" fg:x="208691517" fg:w="9499905"/><text x="84.1556%" y="927.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,499,905 samples, 3.82%)</title><rect x="83.9056%" y="901" width="3.8195%" height="15" fill="rgb(230,226,20)" fg:x="208691517" fg:w="9499905"/><text x="84.1556%" y="911.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,499,905 samples, 3.82%)</title><rect x="83.9056%" y="885" width="3.8195%" height="15" fill="rgb(251,111,25)" fg:x="208691517" fg:w="9499905"/><text x="84.1556%" y="895.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9,499,905 samples, 3.82%)</title><rect x="83.9056%" y="869" width="3.8195%" height="15" fill="rgb(224,40,46)" fg:x="208691517" fg:w="9499905"/><text x="84.1556%" y="879.50">&lt;ser..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,869,995 samples, 0.75%)</title><rect x="86.9732%" y="853" width="0.7518%" height="15" fill="rgb(236,108,47)" fg:x="216321427" fg:w="1869995"/><text x="87.2232%" y="863.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,869,995 samples, 0.75%)</title><rect x="86.9732%" y="837" width="0.7518%" height="15" fill="rgb(234,93,0)" fg:x="216321427" fg:w="1869995"/><text x="87.2232%" y="847.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,869,995 samples, 0.75%)</title><rect x="86.9732%" y="821" width="0.7518%" height="15" fill="rgb(224,213,32)" fg:x="216321427" fg:w="1869995"/><text x="87.2232%" y="831.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,869,995 samples, 0.75%)</title><rect x="86.9732%" y="805" width="0.7518%" height="15" fill="rgb(251,11,48)" fg:x="216321427" fg:w="1869995"/><text x="87.2232%" y="815.50"></text></g><g><title>serde::de::MapAccess::next_entry (14,749,906 samples, 5.93%)</title><rect x="82.2421%" y="1269" width="5.9303%" height="15" fill="rgb(236,173,5)" fg:x="204553991" fg:w="14749906"/><text x="82.4921%" y="1279.50">serde::d..</text></g><g><title>serde::de::MapAccess::next_entry_seed (14,749,906 samples, 5.93%)</title><rect x="82.2421%" y="1253" width="5.9303%" height="15" fill="rgb(230,95,12)" fg:x="204553991" fg:w="14749906"/><text x="82.4921%" y="1263.50">serde::d..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12,748,840 samples, 5.13%)</title><rect x="83.0466%" y="1237" width="5.1257%" height="15" fill="rgb(232,209,1)" fg:x="206555057" fg:w="12748840"/><text x="83.2966%" y="1247.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,748,840 samples, 5.13%)</title><rect x="83.0466%" y="1221" width="5.1257%" height="15" fill="rgb(232,6,1)" fg:x="206555057" fg:w="12748840"/><text x="83.2966%" y="1231.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,748,840 samples, 5.13%)</title><rect x="83.0466%" y="1205" width="5.1257%" height="15" fill="rgb(210,224,50)" fg:x="206555057" fg:w="12748840"/><text x="83.2966%" y="1215.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,748,840 samples, 5.13%)</title><rect x="83.0466%" y="1189" width="5.1257%" height="15" fill="rgb(228,127,35)" fg:x="206555057" fg:w="12748840"/><text x="83.2966%" y="1199.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (12,748,840 samples, 5.13%)</title><rect x="83.0466%" y="1173" width="5.1257%" height="15" fill="rgb(245,102,45)" fg:x="206555057" fg:w="12748840"/><text x="83.2966%" y="1183.50">&lt;serde..</text></g><g><title>serde::de::SeqAccess::next_element (12,748,840 samples, 5.13%)</title><rect x="83.0466%" y="1157" width="5.1257%" height="15" fill="rgb(214,1,49)" fg:x="206555057" fg:w="12748840"/><text x="83.2966%" y="1167.50">serde:..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (12,748,840 samples, 5.13%)</title><rect x="83.0466%" y="1141" width="5.1257%" height="15" fill="rgb(226,163,40)" fg:x="206555057" fg:w="12748840"/><text x="83.2966%" y="1151.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,748,840 samples, 5.13%)</title><rect x="83.0466%" y="1125" width="5.1257%" height="15" fill="rgb(239,212,28)" fg:x="206555057" fg:w="12748840"/><text x="83.2966%" y="1135.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,748,840 samples, 5.13%)</title><rect x="83.0466%" y="1109" width="5.1257%" height="15" fill="rgb(220,20,13)" fg:x="206555057" fg:w="12748840"/><text x="83.2966%" y="1119.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,748,840 samples, 5.13%)</title><rect x="83.0466%" y="1093" width="5.1257%" height="15" fill="rgb(210,164,35)" fg:x="206555057" fg:w="12748840"/><text x="83.2966%" y="1103.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,748,840 samples, 5.13%)</title><rect x="83.0466%" y="1077" width="5.1257%" height="15" fill="rgb(248,109,41)" fg:x="206555057" fg:w="12748840"/><text x="83.2966%" y="1087.50">&lt;serde..</text></g><g><title>serde::de::MapAccess::next_entry (12,748,840 samples, 5.13%)</title><rect x="83.0466%" y="1061" width="5.1257%" height="15" fill="rgb(238,23,50)" fg:x="206555057" fg:w="12748840"/><text x="83.2966%" y="1071.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (12,748,840 samples, 5.13%)</title><rect x="83.0466%" y="1045" width="5.1257%" height="15" fill="rgb(211,48,49)" fg:x="206555057" fg:w="12748840"/><text x="83.2966%" y="1055.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12,748,840 samples, 5.13%)</title><rect x="83.0466%" y="1029" width="5.1257%" height="15" fill="rgb(223,36,21)" fg:x="206555057" fg:w="12748840"/><text x="83.2966%" y="1039.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,748,840 samples, 5.13%)</title><rect x="83.0466%" y="1013" width="5.1257%" height="15" fill="rgb(207,123,46)" fg:x="206555057" fg:w="12748840"/><text x="83.2966%" y="1023.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,748,840 samples, 5.13%)</title><rect x="83.0466%" y="997" width="5.1257%" height="15" fill="rgb(240,218,32)" fg:x="206555057" fg:w="12748840"/><text x="83.2966%" y="1007.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,748,840 samples, 5.13%)</title><rect x="83.0466%" y="981" width="5.1257%" height="15" fill="rgb(252,5,43)" fg:x="206555057" fg:w="12748840"/><text x="83.2966%" y="991.50">&lt;&amp;mut ..</text></g><g><title>serde::de::Visitor::visit_borrowed_str (1,112,475 samples, 0.45%)</title><rect x="87.7251%" y="965" width="0.4473%" height="15" fill="rgb(252,84,19)" fg:x="218191422" fg:w="1112475"/><text x="87.9751%" y="975.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (1,112,475 samples, 0.45%)</title><rect x="87.7251%" y="949" width="0.4473%" height="15" fill="rgb(243,152,39)" fg:x="218191422" fg:w="1112475"/><text x="87.9751%" y="959.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,112,475 samples, 0.45%)</title><rect x="87.7251%" y="933" width="0.4473%" height="15" fill="rgb(234,160,15)" fg:x="218191422" fg:w="1112475"/><text x="87.9751%" y="943.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,112,475 samples, 0.45%)</title><rect x="87.7251%" y="917" width="0.4473%" height="15" fill="rgb(237,34,20)" fg:x="218191422" fg:w="1112475"/><text x="87.9751%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,112,475 samples, 0.45%)</title><rect x="87.7251%" y="901" width="0.4473%" height="15" fill="rgb(229,97,13)" fg:x="218191422" fg:w="1112475"/><text x="87.9751%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,112,475 samples, 0.45%)</title><rect x="87.7251%" y="885" width="0.4473%" height="15" fill="rgb(234,71,50)" fg:x="218191422" fg:w="1112475"/><text x="87.9751%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,112,475 samples, 0.45%)</title><rect x="87.7251%" y="869" width="0.4473%" height="15" fill="rgb(253,155,4)" fg:x="218191422" fg:w="1112475"/><text x="87.9751%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (1,112,475 samples, 0.45%)</title><rect x="87.7251%" y="853" width="0.4473%" height="15" fill="rgb(222,185,37)" fg:x="218191422" fg:w="1112475"/><text x="87.9751%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,112,475 samples, 0.45%)</title><rect x="87.7251%" y="837" width="0.4473%" height="15" fill="rgb(251,177,13)" fg:x="218191422" fg:w="1112475"/><text x="87.9751%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,112,475 samples, 0.45%)</title><rect x="87.7251%" y="821" width="0.4473%" height="15" fill="rgb(250,179,40)" fg:x="218191422" fg:w="1112475"/><text x="87.9751%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,112,475 samples, 0.45%)</title><rect x="87.7251%" y="805" width="0.4473%" height="15" fill="rgb(242,44,2)" fg:x="218191422" fg:w="1112475"/><text x="87.9751%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,112,475 samples, 0.45%)</title><rect x="87.7251%" y="789" width="0.4473%" height="15" fill="rgb(216,177,13)" fg:x="218191422" fg:w="1112475"/><text x="87.9751%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,112,475 samples, 0.45%)</title><rect x="87.7251%" y="773" width="0.4473%" height="15" fill="rgb(216,106,43)" fg:x="218191422" fg:w="1112475"/><text x="87.9751%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,112,475 samples, 0.45%)</title><rect x="87.7251%" y="757" width="0.4473%" height="15" fill="rgb(216,183,2)" fg:x="218191422" fg:w="1112475"/><text x="87.9751%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,112,475 samples, 0.45%)</title><rect x="87.7251%" y="741" width="0.4473%" height="15" fill="rgb(249,75,3)" fg:x="218191422" fg:w="1112475"/><text x="87.9751%" y="751.50"></text></g><g><title>alloc::alloc::alloc (1,112,475 samples, 0.45%)</title><rect x="87.7251%" y="725" width="0.4473%" height="15" fill="rgb(219,67,39)" fg:x="218191422" fg:w="1112475"/><text x="87.9751%" y="735.50"></text></g><g><title>__rdl_alloc (1,112,475 samples, 0.45%)</title><rect x="87.7251%" y="709" width="0.4473%" height="15" fill="rgb(253,228,2)" fg:x="218191422" fg:w="1112475"/><text x="87.9751%" y="719.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,112,475 samples, 0.45%)</title><rect x="87.7251%" y="693" width="0.4473%" height="15" fill="rgb(235,138,27)" fg:x="218191422" fg:w="1112475"/><text x="87.9751%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16,664,703 samples, 6.70%)</title><rect x="82.2421%" y="1285" width="6.7001%" height="15" fill="rgb(236,97,51)" fg:x="204553991" fg:w="16664703"/><text x="82.4921%" y="1295.50">&lt;serde_js..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,914,797 samples, 0.77%)</title><rect x="88.1724%" y="1269" width="0.7699%" height="15" fill="rgb(240,80,30)" fg:x="219303897" fg:w="1914797"/><text x="88.4224%" y="1279.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,914,797 samples, 0.77%)</title><rect x="88.1724%" y="1253" width="0.7699%" height="15" fill="rgb(230,178,19)" fg:x="219303897" fg:w="1914797"/><text x="88.4224%" y="1263.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1,914,797 samples, 0.77%)</title><rect x="88.1724%" y="1237" width="0.7699%" height="15" fill="rgb(210,190,27)" fg:x="219303897" fg:w="1914797"/><text x="88.4224%" y="1247.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,914,797 samples, 0.77%)</title><rect x="88.1724%" y="1221" width="0.7699%" height="15" fill="rgb(222,107,31)" fg:x="219303897" fg:w="1914797"/><text x="88.4224%" y="1231.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,914,797 samples, 0.77%)</title><rect x="88.1724%" y="1205" width="0.7699%" height="15" fill="rgb(216,127,34)" fg:x="219303897" fg:w="1914797"/><text x="88.4224%" y="1215.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,914,797 samples, 0.77%)</title><rect x="88.1724%" y="1189" width="0.7699%" height="15" fill="rgb(234,116,52)" fg:x="219303897" fg:w="1914797"/><text x="88.4224%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (1,914,797 samples, 0.77%)</title><rect x="88.1724%" y="1173" width="0.7699%" height="15" fill="rgb(222,124,15)" fg:x="219303897" fg:w="1914797"/><text x="88.4224%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (1,914,797 samples, 0.77%)</title><rect x="88.1724%" y="1157" width="0.7699%" height="15" fill="rgb(231,179,28)" fg:x="219303897" fg:w="1914797"/><text x="88.4224%" y="1167.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,914,797 samples, 0.77%)</title><rect x="88.1724%" y="1141" width="0.7699%" height="15" fill="rgb(226,93,45)" fg:x="219303897" fg:w="1914797"/><text x="88.4224%" y="1151.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,914,797 samples, 0.77%)</title><rect x="88.1724%" y="1125" width="0.7699%" height="15" fill="rgb(215,8,51)" fg:x="219303897" fg:w="1914797"/><text x="88.4224%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (1,914,797 samples, 0.77%)</title><rect x="88.1724%" y="1109" width="0.7699%" height="15" fill="rgb(223,106,5)" fg:x="219303897" fg:w="1914797"/><text x="88.4224%" y="1119.50"></text></g><g><title>benchmark::parse_web_layout_trace (24,429,254 samples, 9.82%)</title><rect x="79.9795%" y="1477" width="9.8219%" height="15" fill="rgb(250,191,5)" fg:x="198926576" fg:w="24429254"/><text x="80.2295%" y="1487.50">benchmark::par..</text></g><g><title>serde_json::de::from_str (18,801,839 samples, 7.56%)</title><rect x="82.2421%" y="1461" width="7.5594%" height="15" fill="rgb(242,132,44)" fg:x="204553991" fg:w="18801839"/><text x="82.4921%" y="1471.50">serde_json..</text></g><g><title>serde_json::de::from_trait (18,801,839 samples, 7.56%)</title><rect x="82.2421%" y="1445" width="7.5594%" height="15" fill="rgb(251,152,29)" fg:x="204553991" fg:w="18801839"/><text x="82.4921%" y="1455.50">serde_json..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18,801,839 samples, 7.56%)</title><rect x="82.2421%" y="1429" width="7.5594%" height="15" fill="rgb(218,179,5)" fg:x="204553991" fg:w="18801839"/><text x="82.4921%" y="1439.50">serde_json..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18,801,839 samples, 7.56%)</title><rect x="82.2421%" y="1413" width="7.5594%" height="15" fill="rgb(227,67,19)" fg:x="204553991" fg:w="18801839"/><text x="82.4921%" y="1423.50">&lt;&amp;mut serd..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18,801,839 samples, 7.56%)</title><rect x="82.2421%" y="1397" width="7.5594%" height="15" fill="rgb(233,119,31)" fg:x="204553991" fg:w="18801839"/><text x="82.4921%" y="1407.50">&lt;serde_jso..</text></g><g><title>serde::de::MapAccess::next_entry (18,801,839 samples, 7.56%)</title><rect x="82.2421%" y="1381" width="7.5594%" height="15" fill="rgb(241,120,22)" fg:x="204553991" fg:w="18801839"/><text x="82.4921%" y="1391.50">serde::de:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (18,801,839 samples, 7.56%)</title><rect x="82.2421%" y="1365" width="7.5594%" height="15" fill="rgb(224,102,30)" fg:x="204553991" fg:w="18801839"/><text x="82.4921%" y="1375.50">serde::de:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (18,801,839 samples, 7.56%)</title><rect x="82.2421%" y="1349" width="7.5594%" height="15" fill="rgb(210,164,37)" fg:x="204553991" fg:w="18801839"/><text x="82.4921%" y="1359.50">&lt;serde_jso..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18,801,839 samples, 7.56%)</title><rect x="82.2421%" y="1333" width="7.5594%" height="15" fill="rgb(226,191,16)" fg:x="204553991" fg:w="18801839"/><text x="82.4921%" y="1343.50">&lt;core::mar..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18,801,839 samples, 7.56%)</title><rect x="82.2421%" y="1317" width="7.5594%" height="15" fill="rgb(214,40,45)" fg:x="204553991" fg:w="18801839"/><text x="82.4921%" y="1327.50">serde_json..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18,801,839 samples, 7.56%)</title><rect x="82.2421%" y="1301" width="7.5594%" height="15" fill="rgb(244,29,26)" fg:x="204553991" fg:w="18801839"/><text x="82.4921%" y="1311.50">&lt;&amp;mut serd..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,137,136 samples, 0.86%)</title><rect x="88.9422%" y="1285" width="0.8592%" height="15" fill="rgb(216,16,5)" fg:x="221218694" fg:w="2137136"/><text x="89.1922%" y="1295.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,137,136 samples, 0.86%)</title><rect x="88.9422%" y="1269" width="0.8592%" height="15" fill="rgb(249,76,35)" fg:x="221218694" fg:w="2137136"/><text x="89.1922%" y="1279.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,137,136 samples, 0.86%)</title><rect x="88.9422%" y="1253" width="0.8592%" height="15" fill="rgb(207,11,44)" fg:x="221218694" fg:w="2137136"/><text x="89.1922%" y="1263.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,137,136 samples, 0.86%)</title><rect x="88.9422%" y="1237" width="0.8592%" height="15" fill="rgb(228,190,49)" fg:x="221218694" fg:w="2137136"/><text x="89.1922%" y="1247.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,137,136 samples, 0.86%)</title><rect x="88.9422%" y="1221" width="0.8592%" height="15" fill="rgb(214,173,12)" fg:x="221218694" fg:w="2137136"/><text x="89.1922%" y="1231.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,137,136 samples, 0.86%)</title><rect x="88.9422%" y="1205" width="0.8592%" height="15" fill="rgb(218,26,35)" fg:x="221218694" fg:w="2137136"/><text x="89.1922%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1461" width="1.1631%" height="15" fill="rgb(220,200,19)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1445" width="1.1631%" height="15" fill="rgb(239,95,49)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1429" width="1.1631%" height="15" fill="rgb(235,85,53)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1413" width="1.1631%" height="15" fill="rgb(233,133,31)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1397" width="1.1631%" height="15" fill="rgb(218,25,20)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1381" width="1.1631%" height="15" fill="rgb(252,210,38)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1391.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1365" width="1.1631%" height="15" fill="rgb(242,134,21)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1375.50"></text></g><g><title>core::mem::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1349" width="1.1631%" height="15" fill="rgb(213,28,48)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1333" width="1.1631%" height="15" fill="rgb(250,196,2)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1343.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1317" width="1.1631%" height="15" fill="rgb(227,5,17)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1327.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1301" width="1.1631%" height="15" fill="rgb(221,226,24)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1285" width="1.1631%" height="15" fill="rgb(211,5,48)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1295.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1269" width="1.1631%" height="15" fill="rgb(219,150,6)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1279.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1253" width="1.1631%" height="15" fill="rgb(251,46,16)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1237" width="1.1631%" height="15" fill="rgb(220,204,40)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1221" width="1.1631%" height="15" fill="rgb(211,85,2)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1205" width="1.1631%" height="15" fill="rgb(229,17,7)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1215.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1189" width="1.1631%" height="15" fill="rgb(239,72,28)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1199.50"></text></g><g><title>core::mem::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1173" width="1.1631%" height="15" fill="rgb(230,47,54)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1157" width="1.1631%" height="15" fill="rgb(214,50,8)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1141" width="1.1631%" height="15" fill="rgb(216,198,43)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1125" width="1.1631%" height="15" fill="rgb(234,20,35)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1109" width="1.1631%" height="15" fill="rgb(254,45,19)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1093" width="1.1631%" height="15" fill="rgb(219,14,44)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1103.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1077" width="1.1631%" height="15" fill="rgb(217,220,26)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1061" width="1.1631%" height="15" fill="rgb(213,158,28)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1045" width="1.1631%" height="15" fill="rgb(252,51,52)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1029" width="1.1631%" height="15" fill="rgb(246,89,16)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="1013" width="1.1631%" height="15" fill="rgb(216,158,49)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="997" width="1.1631%" height="15" fill="rgb(236,107,19)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="981" width="1.1631%" height="15" fill="rgb(228,185,30)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="965" width="1.1631%" height="15" fill="rgb(246,134,8)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="949" width="1.1631%" height="15" fill="rgb(214,143,50)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="959.50"></text></g><g><title>core::mem::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="933" width="1.1631%" height="15" fill="rgb(228,75,8)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="917" width="1.1631%" height="15" fill="rgb(207,175,4)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="901" width="1.1631%" height="15" fill="rgb(205,108,24)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="885" width="1.1631%" height="15" fill="rgb(244,120,49)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="869" width="1.1631%" height="15" fill="rgb(223,47,38)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="879.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="853" width="1.1631%" height="15" fill="rgb(229,179,11)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="863.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="837" width="1.1631%" height="15" fill="rgb(231,122,1)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="821" width="1.1631%" height="15" fill="rgb(245,119,9)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="805" width="1.1631%" height="15" fill="rgb(241,163,25)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="789" width="1.1631%" height="15" fill="rgb(217,214,3)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="773" width="1.1631%" height="15" fill="rgb(240,86,28)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="757" width="1.1631%" height="15" fill="rgb(215,47,9)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="741" width="1.1631%" height="15" fill="rgb(252,25,45)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="725" width="1.1631%" height="15" fill="rgb(251,164,9)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="709" width="1.1631%" height="15" fill="rgb(233,194,0)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="719.50"></text></g><g><title>core::mem::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="693" width="1.1631%" height="15" fill="rgb(249,111,24)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="677" width="1.1631%" height="15" fill="rgb(250,223,3)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="661" width="1.1631%" height="15" fill="rgb(236,178,37)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="645" width="1.1631%" height="15" fill="rgb(241,158,50)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="629" width="1.1631%" height="15" fill="rgb(213,121,41)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="613" width="1.1631%" height="15" fill="rgb(240,92,3)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="623.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="597" width="1.1631%" height="15" fill="rgb(205,123,3)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="581" width="1.1631%" height="15" fill="rgb(205,97,47)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="565" width="1.1631%" height="15" fill="rgb(247,152,14)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="549" width="1.1631%" height="15" fill="rgb(248,195,53)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="533" width="1.1631%" height="15" fill="rgb(226,201,16)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="517" width="1.1631%" height="15" fill="rgb(205,98,0)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="501" width="1.1631%" height="15" fill="rgb(214,191,48)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="485" width="1.1631%" height="15" fill="rgb(237,112,39)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="469" width="1.1631%" height="15" fill="rgb(247,203,27)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="479.50"></text></g><g><title>core::mem::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="453" width="1.1631%" height="15" fill="rgb(235,124,28)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="437" width="1.1631%" height="15" fill="rgb(208,207,46)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="421" width="1.1631%" height="15" fill="rgb(234,176,4)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="405" width="1.1631%" height="15" fill="rgb(230,133,28)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="389" width="1.1631%" height="15" fill="rgb(211,137,40)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="373" width="1.1631%" height="15" fill="rgb(254,35,13)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="383.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="357" width="1.1631%" height="15" fill="rgb(225,49,51)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="341" width="1.1631%" height="15" fill="rgb(251,10,15)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="325" width="1.1631%" height="15" fill="rgb(228,207,15)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="309" width="1.1631%" height="15" fill="rgb(241,99,19)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="293" width="1.1631%" height="15" fill="rgb(207,104,49)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="277" width="1.1631%" height="15" fill="rgb(234,99,18)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="261" width="1.1631%" height="15" fill="rgb(213,191,49)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="245" width="1.1631%" height="15" fill="rgb(210,226,19)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="229" width="1.1631%" height="15" fill="rgb(229,97,18)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="239.50"></text></g><g><title>core::mem::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="213" width="1.1631%" height="15" fill="rgb(211,167,15)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="197" width="1.1631%" height="15" fill="rgb(210,169,34)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="181" width="1.1631%" height="15" fill="rgb(241,121,31)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="191.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="165" width="1.1631%" height="15" fill="rgb(232,40,11)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="149" width="1.1631%" height="15" fill="rgb(205,86,26)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="133" width="1.1631%" height="15" fill="rgb(231,126,28)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="143.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="117" width="1.1631%" height="15" fill="rgb(219,221,18)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="101" width="1.1631%" height="15" fill="rgb(211,40,0)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="85" width="1.1631%" height="15" fill="rgb(239,85,43)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="69" width="1.1631%" height="15" fill="rgb(231,55,21)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="79.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="53" width="1.1631%" height="15" fill="rgb(225,184,43)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="63.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2,892,859 samples, 1.16%)</title><rect x="89.8015%" y="37" width="1.1631%" height="15" fill="rgb(251,158,41)" fg:x="223355830" fg:w="2892859"/><text x="90.0515%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::LayoutFrame&gt;&gt; (8,657,758 samples, 3.48%)</title><rect x="89.8015%" y="1477" width="3.4809%" height="15" fill="rgb(234,159,37)" fg:x="223355830" fg:w="8657758"/><text x="90.0515%" y="1487.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;benchmark::LayoutFrame&gt;&gt; (5,764,899 samples, 2.32%)</title><rect x="90.9646%" y="1461" width="2.3178%" height="15" fill="rgb(216,204,22)" fg:x="226248689" fg:w="5764899"/><text x="91.2146%" y="1471.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,764,899 samples, 2.32%)</title><rect x="90.9646%" y="1445" width="2.3178%" height="15" fill="rgb(214,17,3)" fg:x="226248689" fg:w="5764899"/><text x="91.2146%" y="1455.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,764,899 samples, 2.32%)</title><rect x="90.9646%" y="1429" width="2.3178%" height="15" fill="rgb(212,111,17)" fg:x="226248689" fg:w="5764899"/><text x="91.2146%" y="1439.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,764,899 samples, 2.32%)</title><rect x="90.9646%" y="1413" width="2.3178%" height="15" fill="rgb(221,157,24)" fg:x="226248689" fg:w="5764899"/><text x="91.2146%" y="1423.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (5,764,899 samples, 2.32%)</title><rect x="90.9646%" y="1397" width="2.3178%" height="15" fill="rgb(252,16,13)" fg:x="226248689" fg:w="5764899"/><text x="91.2146%" y="1407.50">a..</text></g><g><title>cfree (5,764,899 samples, 2.32%)</title><rect x="90.9646%" y="1381" width="2.3178%" height="15" fill="rgb(221,62,2)" fg:x="226248689" fg:w="5764899"/><text x="91.2146%" y="1391.50">c..</text></g><g><title>[libc.so.6] (5,764,899 samples, 2.32%)</title><rect x="90.9646%" y="1365" width="2.3178%" height="15" fill="rgb(247,87,22)" fg:x="226248689" fg:w="5764899"/><text x="91.2146%" y="1375.50">[..</text></g><g><title>[libc.so.6] (5,764,899 samples, 2.32%)</title><rect x="90.9646%" y="1349" width="2.3178%" height="15" fill="rgb(215,73,9)" fg:x="226248689" fg:w="5764899"/><text x="91.2146%" y="1359.50">[..</text></g><g><title>_start (215,968,788 samples, 86.83%)</title><rect x="7.6168%" y="1765" width="86.8315%" height="15" fill="rgb(207,175,33)" fg:x="18944646" fg:w="215968788"/><text x="7.8668%" y="1775.50">_start</text></g><g><title>__libc_start_main (215,968,788 samples, 86.83%)</title><rect x="7.6168%" y="1749" width="86.8315%" height="15" fill="rgb(243,129,54)" fg:x="18944646" fg:w="215968788"/><text x="7.8668%" y="1759.50">__libc_start_main</text></g><g><title>[libc.so.6] (215,968,788 samples, 86.83%)</title><rect x="7.6168%" y="1733" width="86.8315%" height="15" fill="rgb(227,119,45)" fg:x="18944646" fg:w="215968788"/><text x="7.8668%" y="1743.50">[libc.so.6]</text></g><g><title>main (215,968,788 samples, 86.83%)</title><rect x="7.6168%" y="1717" width="86.8315%" height="15" fill="rgb(205,109,36)" fg:x="18944646" fg:w="215968788"/><text x="7.8668%" y="1727.50">main</text></g><g><title>std::rt::lang_start_internal (215,968,788 samples, 86.83%)</title><rect x="7.6168%" y="1701" width="86.8315%" height="15" fill="rgb(205,6,39)" fg:x="18944646" fg:w="215968788"/><text x="7.8668%" y="1711.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (215,968,788 samples, 86.83%)</title><rect x="7.6168%" y="1685" width="86.8315%" height="15" fill="rgb(221,32,16)" fg:x="18944646" fg:w="215968788"/><text x="7.8668%" y="1695.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (215,968,788 samples, 86.83%)</title><rect x="7.6168%" y="1669" width="86.8315%" height="15" fill="rgb(228,144,50)" fg:x="18944646" fg:w="215968788"/><text x="7.8668%" y="1679.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (215,968,788 samples, 86.83%)</title><rect x="7.6168%" y="1653" width="86.8315%" height="15" fill="rgb(229,201,53)" fg:x="18944646" fg:w="215968788"/><text x="7.8668%" y="1663.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (215,968,788 samples, 86.83%)</title><rect x="7.6168%" y="1637" width="86.8315%" height="15" fill="rgb(249,153,27)" fg:x="18944646" fg:w="215968788"/><text x="7.8668%" y="1647.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (215,968,788 samples, 86.83%)</title><rect x="7.6168%" y="1621" width="86.8315%" height="15" fill="rgb(227,106,25)" fg:x="18944646" fg:w="215968788"/><text x="7.8668%" y="1631.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (215,968,788 samples, 86.83%)</title><rect x="7.6168%" y="1605" width="86.8315%" height="15" fill="rgb(230,65,29)" fg:x="18944646" fg:w="215968788"/><text x="7.8668%" y="1615.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (215,968,788 samples, 86.83%)</title><rect x="7.6168%" y="1589" width="86.8315%" height="15" fill="rgb(221,57,46)" fg:x="18944646" fg:w="215968788"/><text x="7.8668%" y="1599.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (215,968,788 samples, 86.83%)</title><rect x="7.6168%" y="1573" width="86.8315%" height="15" fill="rgb(229,161,17)" fg:x="18944646" fg:w="215968788"/><text x="7.8668%" y="1583.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (215,968,788 samples, 86.83%)</title><rect x="7.6168%" y="1557" width="86.8315%" height="15" fill="rgb(222,213,11)" fg:x="18944646" fg:w="215968788"/><text x="7.8668%" y="1567.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (215,968,788 samples, 86.83%)</title><rect x="7.6168%" y="1541" width="86.8315%" height="15" fill="rgb(235,35,13)" fg:x="18944646" fg:w="215968788"/><text x="7.8668%" y="1551.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (215,968,788 samples, 86.83%)</title><rect x="7.6168%" y="1525" width="86.8315%" height="15" fill="rgb(233,158,34)" fg:x="18944646" fg:w="215968788"/><text x="7.8668%" y="1535.50">core::ops::function::FnOnce::call_once</text></g><g><title>benchmark::main (215,968,788 samples, 86.83%)</title><rect x="7.6168%" y="1509" width="86.8315%" height="15" fill="rgb(215,151,48)" fg:x="18944646" fg:w="215968788"/><text x="7.8668%" y="1519.50">benchmark::main</text></g><g><title>benchmark::run_web_browser_layout_trace_benchmark (215,968,788 samples, 86.83%)</title><rect x="7.6168%" y="1493" width="86.8315%" height="15" fill="rgb(229,84,14)" fg:x="18944646" fg:w="215968788"/><text x="7.8668%" y="1503.50">benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1477" width="1.1659%" height="15" fill="rgb(229,68,14)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1461" width="1.1659%" height="15" fill="rgb(243,106,26)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1445" width="1.1659%" height="15" fill="rgb(206,45,38)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1429" width="1.1659%" height="15" fill="rgb(226,6,15)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1413" width="1.1659%" height="15" fill="rgb(232,22,54)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1397" width="1.1659%" height="15" fill="rgb(229,222,32)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1381" width="1.1659%" height="15" fill="rgb(228,62,29)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1365" width="1.1659%" height="15" fill="rgb(251,103,34)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1349" width="1.1659%" height="15" fill="rgb(233,12,30)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1333" width="1.1659%" height="15" fill="rgb(238,52,0)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1317" width="1.1659%" height="15" fill="rgb(223,98,5)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1301" width="1.1659%" height="15" fill="rgb(228,75,37)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1285" width="1.1659%" height="15" fill="rgb(205,115,49)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1269" width="1.1659%" height="15" fill="rgb(250,154,43)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1253" width="1.1659%" height="15" fill="rgb(226,43,29)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1237" width="1.1659%" height="15" fill="rgb(249,228,39)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1221" width="1.1659%" height="15" fill="rgb(216,79,43)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1205" width="1.1659%" height="15" fill="rgb(228,95,12)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1189" width="1.1659%" height="15" fill="rgb(249,221,15)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1173" width="1.1659%" height="15" fill="rgb(233,34,13)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1157" width="1.1659%" height="15" fill="rgb(214,103,39)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1141" width="1.1659%" height="15" fill="rgb(251,126,39)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1125" width="1.1659%" height="15" fill="rgb(214,216,36)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1109" width="1.1659%" height="15" fill="rgb(220,221,8)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1093" width="1.1659%" height="15" fill="rgb(240,216,3)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1077" width="1.1659%" height="15" fill="rgb(232,218,17)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1061" width="1.1659%" height="15" fill="rgb(229,163,45)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1045" width="1.1659%" height="15" fill="rgb(231,110,42)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1029" width="1.1659%" height="15" fill="rgb(208,170,48)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="1013" width="1.1659%" height="15" fill="rgb(239,116,25)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="997" width="1.1659%" height="15" fill="rgb(219,200,50)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="981" width="1.1659%" height="15" fill="rgb(245,200,0)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="965" width="1.1659%" height="15" fill="rgb(245,119,33)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="949" width="1.1659%" height="15" fill="rgb(231,125,12)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="933" width="1.1659%" height="15" fill="rgb(216,96,41)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="917" width="1.1659%" height="15" fill="rgb(248,43,45)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="901" width="1.1659%" height="15" fill="rgb(217,222,7)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="885" width="1.1659%" height="15" fill="rgb(233,28,6)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="869" width="1.1659%" height="15" fill="rgb(231,218,15)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="853" width="1.1659%" height="15" fill="rgb(226,171,48)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="837" width="1.1659%" height="15" fill="rgb(235,201,9)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="821" width="1.1659%" height="15" fill="rgb(217,80,15)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="805" width="1.1659%" height="15" fill="rgb(219,152,8)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="789" width="1.1659%" height="15" fill="rgb(243,107,38)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="773" width="1.1659%" height="15" fill="rgb(231,17,5)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="757" width="1.1659%" height="15" fill="rgb(209,25,54)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="741" width="1.1659%" height="15" fill="rgb(219,0,2)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="725" width="1.1659%" height="15" fill="rgb(246,9,5)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="709" width="1.1659%" height="15" fill="rgb(226,159,4)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="693" width="1.1659%" height="15" fill="rgb(219,175,34)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="677" width="1.1659%" height="15" fill="rgb(236,10,46)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="661" width="1.1659%" height="15" fill="rgb(240,211,16)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="645" width="1.1659%" height="15" fill="rgb(205,3,43)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="629" width="1.1659%" height="15" fill="rgb(245,7,22)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="613" width="1.1659%" height="15" fill="rgb(239,132,32)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="597" width="1.1659%" height="15" fill="rgb(228,202,34)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="581" width="1.1659%" height="15" fill="rgb(254,200,22)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="565" width="1.1659%" height="15" fill="rgb(219,10,39)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="549" width="1.1659%" height="15" fill="rgb(226,210,39)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="533" width="1.1659%" height="15" fill="rgb(208,219,16)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="517" width="1.1659%" height="15" fill="rgb(216,158,51)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="501" width="1.1659%" height="15" fill="rgb(233,14,44)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="485" width="1.1659%" height="15" fill="rgb(237,97,39)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="469" width="1.1659%" height="15" fill="rgb(218,198,43)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="453" width="1.1659%" height="15" fill="rgb(231,104,20)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="437" width="1.1659%" height="15" fill="rgb(254,36,13)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="421" width="1.1659%" height="15" fill="rgb(248,14,50)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="405" width="1.1659%" height="15" fill="rgb(217,107,29)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="389" width="1.1659%" height="15" fill="rgb(251,169,33)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="373" width="1.1659%" height="15" fill="rgb(217,108,32)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="357" width="1.1659%" height="15" fill="rgb(219,66,42)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="341" width="1.1659%" height="15" fill="rgb(206,180,7)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="325" width="1.1659%" height="15" fill="rgb(208,226,31)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="309" width="1.1659%" height="15" fill="rgb(218,26,49)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="293" width="1.1659%" height="15" fill="rgb(233,197,48)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="277" width="1.1659%" height="15" fill="rgb(252,181,51)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="261" width="1.1659%" height="15" fill="rgb(253,90,19)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="245" width="1.1659%" height="15" fill="rgb(215,171,30)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="229" width="1.1659%" height="15" fill="rgb(214,222,9)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="213" width="1.1659%" height="15" fill="rgb(223,3,22)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="197" width="1.1659%" height="15" fill="rgb(225,196,46)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="181" width="1.1659%" height="15" fill="rgb(209,110,37)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="165" width="1.1659%" height="15" fill="rgb(249,89,12)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="175.50"></text></g><g><title>cfree (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="149" width="1.1659%" height="15" fill="rgb(226,27,33)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="159.50"></text></g><g><title>[libc.so.6] (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="133" width="1.1659%" height="15" fill="rgb(213,82,22)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="143.50"></text></g><g><title>[libc.so.6] (2,899,846 samples, 1.17%)</title><rect x="93.2824%" y="117" width="1.1659%" height="15" fill="rgb(248,140,0)" fg:x="232013588" fg:w="2899846"/><text x="93.5324%" y="127.50"></text></g><g><title>benchmark::clear_dirty_flags (2,915,511 samples, 1.17%)</title><rect x="94.4483%" y="1765" width="1.1722%" height="15" fill="rgb(228,106,3)" fg:x="234913434" fg:w="2915511"/><text x="94.6983%" y="1775.50"></text></g><g><title>benchmark::json_to_html_node (2,192,071 samples, 0.88%)</title><rect x="95.6205%" y="1765" width="0.8813%" height="15" fill="rgb(209,23,37)" fg:x="237828945" fg:w="2192071"/><text x="95.8705%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,192,071 samples, 0.88%)</title><rect x="95.6205%" y="1749" width="0.8813%" height="15" fill="rgb(241,93,50)" fg:x="237828945" fg:w="2192071"/><text x="95.8705%" y="1759.50"></text></g><g><title>core::ptr::write (2,192,071 samples, 0.88%)</title><rect x="95.6205%" y="1733" width="0.8813%" height="15" fill="rgb(253,46,43)" fg:x="237828945" fg:w="2192071"/><text x="95.8705%" y="1743.50"></text></g><g><title>cfree (5,640,477 samples, 2.27%)</title><rect x="96.5018%" y="1765" width="2.2678%" height="15" fill="rgb(226,206,43)" fg:x="240021016" fg:w="5640477"/><text x="96.7518%" y="1775.50">c..</text></g><g><title>core::fmt::write (501,504 samples, 0.20%)</title><rect x="98.7696%" y="1765" width="0.2016%" height="15" fill="rgb(217,54,7)" fg:x="245661493" fg:w="501504"/><text x="99.0196%" y="1775.50"></text></g><g><title>all (248,721,808 samples, 100%)</title><rect x="0.0000%" y="1797" width="100.0000%" height="15" fill="rgb(223,5,52)" fg:x="0" fg:w="248721808"/><text x="0.2500%" y="1807.50"></text></g><g><title>benchmark (248,721,808 samples, 100.00%)</title><rect x="0.0000%" y="1781" width="100.0000%" height="15" fill="rgb(206,52,46)" fg:x="0" fg:w="248721808"/><text x="0.2500%" y="1791.50">benchmark</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,558,811 samples, 1.03%)</title><rect x="98.9712%" y="1765" width="1.0288%" height="15" fill="rgb(253,136,11)" fg:x="246162997" fg:w="2558811"/><text x="99.2212%" y="1775.50"></text></g></svg></svg>