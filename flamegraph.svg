<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2438" onload="init(evt)" viewBox="0 0 1200 2438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2438" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2421.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2421.00"> </text><svg id="frames" x="10" width="1180" total_samples="233933898"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,731,319 samples, 1.17%)</title><rect x="0.0000%" y="2357" width="1.1676%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2731319"/><text x="0.2500%" y="2367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,731,319 samples, 1.17%)</title><rect x="0.0000%" y="2341" width="1.1676%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2731319"/><text x="0.2500%" y="2351.50"></text></g><g><title>alloc::slice::hack::to_vec (2,731,319 samples, 1.17%)</title><rect x="0.0000%" y="2325" width="1.1676%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2731319"/><text x="0.2500%" y="2335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,731,319 samples, 1.17%)</title><rect x="0.0000%" y="2309" width="1.1676%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="2731319"/><text x="0.2500%" y="2319.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (2,731,319 samples, 1.17%)</title><rect x="0.0000%" y="2293" width="1.1676%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="2731319"/><text x="0.2500%" y="2303.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,413,169 samples, 0.60%)</title><rect x="0.5635%" y="2277" width="0.6041%" height="15" fill="rgb(232,128,0)" fg:x="1318150" fg:w="1413169"/><text x="0.8135%" y="2287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,477,231 samples, 1.06%)</title><rect x="1.1676%" y="2357" width="1.0589%" height="15" fill="rgb(207,160,47)" fg:x="2731319" fg:w="2477231"/><text x="1.4176%" y="2367.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,503,739 samples, 0.64%)</title><rect x="2.2265%" y="2357" width="0.6428%" height="15" fill="rgb(228,23,34)" fg:x="5208550" fg:w="1503739"/><text x="2.4765%" y="2367.50"></text></g><g><title>[libc.so.6] (1,406,333 samples, 0.60%)</title><rect x="2.8693%" y="2357" width="0.6012%" height="15" fill="rgb(218,30,26)" fg:x="6712289" fg:w="1406333"/><text x="3.1193%" y="2367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,260,421 samples, 0.54%)</title><rect x="4.2551%" y="2341" width="0.5388%" height="15" fill="rgb(220,122,19)" fg:x="9954096" fg:w="1260421"/><text x="4.5051%" y="2351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,493,363 samples, 0.64%)</title><rect x="4.7939%" y="2325" width="0.6384%" height="15" fill="rgb(250,228,42)" fg:x="11214517" fg:w="1493363"/><text x="5.0439%" y="2335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,493,363 samples, 0.64%)</title><rect x="4.7939%" y="2309" width="0.6384%" height="15" fill="rgb(240,193,28)" fg:x="11214517" fg:w="1493363"/><text x="5.0439%" y="2319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,483,484 samples, 1.92%)</title><rect x="4.7939%" y="2341" width="1.9166%" height="15" fill="rgb(216,20,37)" fg:x="11214517" fg:w="4483484"/><text x="5.0439%" y="2351.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,990,121 samples, 1.28%)</title><rect x="5.4323%" y="2325" width="1.2782%" height="15" fill="rgb(206,188,39)" fg:x="12707880" fg:w="2990121"/><text x="5.6823%" y="2335.50"></text></g><g><title>alloc::slice::hack::to_vec (2,990,121 samples, 1.28%)</title><rect x="5.4323%" y="2309" width="1.2782%" height="15" fill="rgb(217,207,13)" fg:x="12707880" fg:w="2990121"/><text x="5.6823%" y="2319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,990,121 samples, 1.28%)</title><rect x="5.4323%" y="2293" width="1.2782%" height="15" fill="rgb(231,73,38)" fg:x="12707880" fg:w="2990121"/><text x="5.6823%" y="2303.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (2,990,121 samples, 1.28%)</title><rect x="5.4323%" y="2277" width="1.2782%" height="15" fill="rgb(225,20,46)" fg:x="12707880" fg:w="2990121"/><text x="5.6823%" y="2287.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,506,613 samples, 0.64%)</title><rect x="6.0664%" y="2261" width="0.6440%" height="15" fill="rgb(210,31,41)" fg:x="14191388" fg:w="1506613"/><text x="6.3164%" y="2271.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,506,613 samples, 0.64%)</title><rect x="6.0664%" y="2245" width="0.6440%" height="15" fill="rgb(221,200,47)" fg:x="14191388" fg:w="1506613"/><text x="6.3164%" y="2255.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,506,613 samples, 0.64%)</title><rect x="6.0664%" y="2229" width="0.6440%" height="15" fill="rgb(226,26,5)" fg:x="14191388" fg:w="1506613"/><text x="6.3164%" y="2239.50"></text></g><g><title>[unknown] (1,320,467 samples, 0.56%)</title><rect x="6.7104%" y="2341" width="0.5645%" height="15" fill="rgb(249,33,26)" fg:x="15698001" fg:w="1320467"/><text x="6.9604%" y="2351.50"></text></g><g><title>benchmark::clear_dirty_flags (1,320,467 samples, 0.56%)</title><rect x="6.7104%" y="2325" width="0.5645%" height="15" fill="rgb(235,183,28)" fg:x="15698001" fg:w="1320467"/><text x="6.9604%" y="2335.50"></text></g><g><title>__rdl_dealloc (1,312,965 samples, 0.56%)</title><rect x="7.2749%" y="2341" width="0.5613%" height="15" fill="rgb(221,5,38)" fg:x="17018468" fg:w="1312965"/><text x="7.5249%" y="2351.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,312,965 samples, 0.56%)</title><rect x="7.2749%" y="2325" width="0.5613%" height="15" fill="rgb(247,18,42)" fg:x="17018468" fg:w="1312965"/><text x="7.5249%" y="2335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,404,346 samples, 0.60%)</title><rect x="7.8362%" y="2341" width="0.6003%" height="15" fill="rgb(241,131,45)" fg:x="18331433" fg:w="1404346"/><text x="8.0862%" y="2351.50"></text></g><g><title>benchmark::count_nodes (1,297,434 samples, 0.55%)</title><rect x="8.4365%" y="2341" width="0.5546%" height="15" fill="rgb(249,31,29)" fg:x="19735779" fg:w="1297434"/><text x="8.6865%" y="2351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,297,434 samples, 0.55%)</title><rect x="8.4365%" y="2325" width="0.5546%" height="15" fill="rgb(225,111,53)" fg:x="19735779" fg:w="1297434"/><text x="8.6865%" y="2335.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,297,434 samples, 0.55%)</title><rect x="8.4365%" y="2309" width="0.5546%" height="15" fill="rgb(238,160,17)" fg:x="19735779" fg:w="1297434"/><text x="8.6865%" y="2319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,297,434 samples, 0.55%)</title><rect x="8.4365%" y="2293" width="0.5546%" height="15" fill="rgb(214,148,48)" fg:x="19735779" fg:w="1297434"/><text x="8.6865%" y="2303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,297,434 samples, 0.55%)</title><rect x="8.4365%" y="2277" width="0.5546%" height="15" fill="rgb(232,36,49)" fg:x="19735779" fg:w="1297434"/><text x="8.6865%" y="2287.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,297,434 samples, 0.55%)</title><rect x="8.4365%" y="2261" width="0.5546%" height="15" fill="rgb(209,103,24)" fg:x="19735779" fg:w="1297434"/><text x="8.6865%" y="2271.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,297,434 samples, 0.55%)</title><rect x="8.4365%" y="2245" width="0.5546%" height="15" fill="rgb(229,88,8)" fg:x="19735779" fg:w="1297434"/><text x="8.6865%" y="2255.50"></text></g><g><title>[unknown] (14,428,176 samples, 6.17%)</title><rect x="3.4705%" y="2357" width="6.1676%" height="15" fill="rgb(213,181,19)" fg:x="8118622" fg:w="14428176"/><text x="3.7205%" y="2367.50">[unknown]</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,513,585 samples, 0.65%)</title><rect x="8.9911%" y="2341" width="0.6470%" height="15" fill="rgb(254,191,54)" fg:x="21033213" fg:w="1513585"/><text x="9.2411%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,513,585 samples, 0.65%)</title><rect x="8.9911%" y="2325" width="0.6470%" height="15" fill="rgb(241,83,37)" fg:x="21033213" fg:w="1513585"/><text x="9.2411%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,513,585 samples, 0.65%)</title><rect x="8.9911%" y="2309" width="0.6470%" height="15" fill="rgb(233,36,39)" fg:x="21033213" fg:w="1513585"/><text x="9.2411%" y="2319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,513,585 samples, 0.65%)</title><rect x="8.9911%" y="2293" width="0.6470%" height="15" fill="rgb(226,3,54)" fg:x="21033213" fg:w="1513585"/><text x="9.2411%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,513,585 samples, 0.65%)</title><rect x="8.9911%" y="2277" width="0.6470%" height="15" fill="rgb(245,192,40)" fg:x="21033213" fg:w="1513585"/><text x="9.2411%" y="2287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,513,585 samples, 0.65%)</title><rect x="8.9911%" y="2261" width="0.6470%" height="15" fill="rgb(238,167,29)" fg:x="21033213" fg:w="1513585"/><text x="9.2411%" y="2271.50"></text></g><g><title>alloc::alloc::dealloc (1,513,585 samples, 0.65%)</title><rect x="8.9911%" y="2245" width="0.6470%" height="15" fill="rgb(232,182,51)" fg:x="21033213" fg:w="1513585"/><text x="9.2411%" y="2255.50"></text></g><g><title>__rdl_dealloc (2,940,083 samples, 1.26%)</title><rect x="9.6381%" y="2357" width="1.2568%" height="15" fill="rgb(231,60,39)" fg:x="22546798" fg:w="2940083"/><text x="9.8881%" y="2367.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2,940,083 samples, 1.26%)</title><rect x="9.6381%" y="2341" width="1.2568%" height="15" fill="rgb(208,69,12)" fg:x="22546798" fg:w="2940083"/><text x="9.8881%" y="2351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,002,032 samples, 0.43%)</title><rect x="11.5167%" y="1781" width="0.4283%" height="15" fill="rgb(235,93,37)" fg:x="26941496" fg:w="1002032"/><text x="11.7667%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,002,032 samples, 0.43%)</title><rect x="11.5167%" y="1765" width="0.4283%" height="15" fill="rgb(213,116,39)" fg:x="26941496" fg:w="1002032"/><text x="11.7667%" y="1775.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,002,032 samples, 0.43%)</title><rect x="11.5167%" y="1749" width="0.4283%" height="15" fill="rgb(222,207,29)" fg:x="26941496" fg:w="1002032"/><text x="11.7667%" y="1759.50"></text></g><g><title>alloc::slice::hack::to_vec (1,002,032 samples, 0.43%)</title><rect x="11.5167%" y="1733" width="0.4283%" height="15" fill="rgb(206,96,30)" fg:x="26941496" fg:w="1002032"/><text x="11.7667%" y="1743.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,002,032 samples, 0.43%)</title><rect x="11.5167%" y="1717" width="0.4283%" height="15" fill="rgb(218,138,4)" fg:x="26941496" fg:w="1002032"/><text x="11.7667%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,002,032 samples, 0.43%)</title><rect x="11.5167%" y="1701" width="0.4283%" height="15" fill="rgb(250,191,14)" fg:x="26941496" fg:w="1002032"/><text x="11.7667%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,002,032 samples, 0.43%)</title><rect x="11.5167%" y="1685" width="0.4283%" height="15" fill="rgb(239,60,40)" fg:x="26941496" fg:w="1002032"/><text x="11.7667%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,002,032 samples, 0.43%)</title><rect x="11.5167%" y="1669" width="0.4283%" height="15" fill="rgb(206,27,48)" fg:x="26941496" fg:w="1002032"/><text x="11.7667%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,002,032 samples, 0.43%)</title><rect x="11.5167%" y="1653" width="0.4283%" height="15" fill="rgb(225,35,8)" fg:x="26941496" fg:w="1002032"/><text x="11.7667%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,002,032 samples, 0.43%)</title><rect x="11.5167%" y="1637" width="0.4283%" height="15" fill="rgb(250,213,24)" fg:x="26941496" fg:w="1002032"/><text x="11.7667%" y="1647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,002,032 samples, 0.43%)</title><rect x="11.5167%" y="1621" width="0.4283%" height="15" fill="rgb(247,123,22)" fg:x="26941496" fg:w="1002032"/><text x="11.7667%" y="1631.50"></text></g><g><title>alloc::alloc::alloc (1,002,032 samples, 0.43%)</title><rect x="11.5167%" y="1605" width="0.4283%" height="15" fill="rgb(231,138,38)" fg:x="26941496" fg:w="1002032"/><text x="11.7667%" y="1615.50"></text></g><g><title>malloc (1,002,032 samples, 0.43%)</title><rect x="11.5167%" y="1589" width="0.4283%" height="15" fill="rgb(231,145,46)" fg:x="26941496" fg:w="1002032"/><text x="11.7667%" y="1599.50"></text></g><g><title>[libc.so.6] (1,002,032 samples, 0.43%)</title><rect x="11.5167%" y="1573" width="0.4283%" height="15" fill="rgb(251,118,11)" fg:x="26941496" fg:w="1002032"/><text x="11.7667%" y="1583.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,468,465 samples, 0.63%)</title><rect x="11.9451%" y="1477" width="0.6277%" height="15" fill="rgb(217,147,25)" fg:x="27943528" fg:w="1468465"/><text x="12.1951%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,468,465 samples, 0.63%)</title><rect x="11.9451%" y="1461" width="0.6277%" height="15" fill="rgb(247,81,37)" fg:x="27943528" fg:w="1468465"/><text x="12.1951%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,468,465 samples, 0.63%)</title><rect x="11.9451%" y="1445" width="0.6277%" height="15" fill="rgb(209,12,38)" fg:x="27943528" fg:w="1468465"/><text x="12.1951%" y="1455.50"></text></g><g><title>alloc::slice::hack::to_vec (1,468,465 samples, 0.63%)</title><rect x="11.9451%" y="1429" width="0.6277%" height="15" fill="rgb(227,1,9)" fg:x="27943528" fg:w="1468465"/><text x="12.1951%" y="1439.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,468,465 samples, 0.63%)</title><rect x="11.9451%" y="1413" width="0.6277%" height="15" fill="rgb(248,47,43)" fg:x="27943528" fg:w="1468465"/><text x="12.1951%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,468,465 samples, 0.63%)</title><rect x="11.9451%" y="1397" width="0.6277%" height="15" fill="rgb(221,10,30)" fg:x="27943528" fg:w="1468465"/><text x="12.1951%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,468,465 samples, 0.63%)</title><rect x="11.9451%" y="1381" width="0.6277%" height="15" fill="rgb(210,229,1)" fg:x="27943528" fg:w="1468465"/><text x="12.1951%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,468,465 samples, 0.63%)</title><rect x="11.9451%" y="1365" width="0.6277%" height="15" fill="rgb(222,148,37)" fg:x="27943528" fg:w="1468465"/><text x="12.1951%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,468,465 samples, 0.63%)</title><rect x="11.9451%" y="1349" width="0.6277%" height="15" fill="rgb(234,67,33)" fg:x="27943528" fg:w="1468465"/><text x="12.1951%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,468,465 samples, 0.63%)</title><rect x="11.9451%" y="1333" width="0.6277%" height="15" fill="rgb(247,98,35)" fg:x="27943528" fg:w="1468465"/><text x="12.1951%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,468,465 samples, 0.63%)</title><rect x="11.9451%" y="1317" width="0.6277%" height="15" fill="rgb(247,138,52)" fg:x="27943528" fg:w="1468465"/><text x="12.1951%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (1,468,465 samples, 0.63%)</title><rect x="11.9451%" y="1301" width="0.6277%" height="15" fill="rgb(213,79,30)" fg:x="27943528" fg:w="1468465"/><text x="12.1951%" y="1311.50"></text></g><g><title>__rdl_alloc (1,468,465 samples, 0.63%)</title><rect x="11.9451%" y="1285" width="0.6277%" height="15" fill="rgb(246,177,23)" fg:x="27943528" fg:w="1468465"/><text x="12.1951%" y="1295.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,468,465 samples, 0.63%)</title><rect x="11.9451%" y="1269" width="0.6277%" height="15" fill="rgb(230,62,27)" fg:x="27943528" fg:w="1468465"/><text x="12.1951%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="1333" width="0.5532%" height="15" fill="rgb(216,154,8)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="1317" width="0.5532%" height="15" fill="rgb(244,35,45)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1327.50"></text></g><g><title>alloc::slice::hack::to_vec (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="1301" width="0.5532%" height="15" fill="rgb(251,115,12)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1311.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="1285" width="0.5532%" height="15" fill="rgb(240,54,50)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1295.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="1269" width="0.5532%" height="15" fill="rgb(233,84,52)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1279.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="1253" width="0.5532%" height="15" fill="rgb(207,117,47)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1263.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="1237" width="0.5532%" height="15" fill="rgb(249,43,39)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1247.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="1221" width="0.5532%" height="15" fill="rgb(209,38,44)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1231.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="1205" width="0.5532%" height="15" fill="rgb(236,212,23)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="1189" width="0.5532%" height="15" fill="rgb(242,79,21)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="1173" width="0.5532%" height="15" fill="rgb(211,96,35)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="1157" width="0.5532%" height="15" fill="rgb(253,215,40)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="1141" width="0.5532%" height="15" fill="rgb(211,81,21)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1151.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="1125" width="0.5532%" height="15" fill="rgb(208,190,38)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1135.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="1109" width="0.5532%" height="15" fill="rgb(235,213,38)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="1093" width="0.5532%" height="15" fill="rgb(237,122,38)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="1077" width="0.5532%" height="15" fill="rgb(244,218,35)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1087.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="1061" width="0.5532%" height="15" fill="rgb(240,68,47)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="1045" width="0.5532%" height="15" fill="rgb(210,16,53)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="1029" width="0.5532%" height="15" fill="rgb(235,124,12)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="1013" width="0.5532%" height="15" fill="rgb(224,169,11)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="997" width="0.5532%" height="15" fill="rgb(250,166,2)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="1007.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="981" width="0.5532%" height="15" fill="rgb(242,216,29)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="991.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="965" width="0.5532%" height="15" fill="rgb(230,116,27)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="949" width="0.5532%" height="15" fill="rgb(228,99,48)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="933" width="0.5532%" height="15" fill="rgb(253,11,6)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="943.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="917" width="0.5532%" height="15" fill="rgb(247,143,39)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="901" width="0.5532%" height="15" fill="rgb(236,97,10)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="885" width="0.5532%" height="15" fill="rgb(233,208,19)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="869" width="0.5532%" height="15" fill="rgb(216,164,2)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="853" width="0.5532%" height="15" fill="rgb(220,129,5)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="863.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="837" width="0.5532%" height="15" fill="rgb(242,17,10)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="847.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="821" width="0.5532%" height="15" fill="rgb(242,107,0)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="831.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="805" width="0.5532%" height="15" fill="rgb(251,28,31)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="789" width="0.5532%" height="15" fill="rgb(233,223,10)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="799.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="773" width="0.5532%" height="15" fill="rgb(215,21,27)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="757" width="0.5532%" height="15" fill="rgb(232,23,21)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="741" width="0.5532%" height="15" fill="rgb(244,5,23)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="725" width="0.5532%" height="15" fill="rgb(226,81,46)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="709" width="0.5532%" height="15" fill="rgb(247,70,30)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="719.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="693" width="0.5532%" height="15" fill="rgb(212,68,19)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="703.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="677" width="0.5532%" height="15" fill="rgb(240,187,13)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="661" width="0.5532%" height="15" fill="rgb(223,113,26)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="645" width="0.5532%" height="15" fill="rgb(206,192,2)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="629" width="0.5532%" height="15" fill="rgb(241,108,4)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="613" width="0.5532%" height="15" fill="rgb(247,173,49)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="597" width="0.5532%" height="15" fill="rgb(224,114,35)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="581" width="0.5532%" height="15" fill="rgb(245,159,27)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="565" width="0.5532%" height="15" fill="rgb(245,172,44)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="549" width="0.5532%" height="15" fill="rgb(236,23,11)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="533" width="0.5532%" height="15" fill="rgb(205,117,38)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="517" width="0.5532%" height="15" fill="rgb(237,72,25)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="501" width="0.5532%" height="15" fill="rgb(244,70,9)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="485" width="0.5532%" height="15" fill="rgb(217,125,39)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="469" width="0.5532%" height="15" fill="rgb(235,36,10)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="453" width="0.5532%" height="15" fill="rgb(251,123,47)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="437" width="0.5532%" height="15" fill="rgb(221,13,13)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="447.50"></text></g><g><title>malloc (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="421" width="0.5532%" height="15" fill="rgb(238,131,9)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="431.50"></text></g><g><title>[libc.so.6] (1,294,073 samples, 0.55%)</title><rect x="12.5728%" y="405" width="0.5532%" height="15" fill="rgb(211,50,8)" fg:x="29411993" fg:w="1294073"/><text x="12.8228%" y="415.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,445,033 samples, 0.62%)</title><rect x="13.1260%" y="1285" width="0.6177%" height="15" fill="rgb(245,182,24)" fg:x="30706066" fg:w="1445033"/><text x="13.3760%" y="1295.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,445,033 samples, 0.62%)</title><rect x="13.1260%" y="1269" width="0.6177%" height="15" fill="rgb(242,14,37)" fg:x="30706066" fg:w="1445033"/><text x="13.3760%" y="1279.50"></text></g><g><title>&lt;benchmark::LayoutFrame as core::clone::Clone&gt;::clone (7,687,183 samples, 3.29%)</title><rect x="10.8949%" y="2069" width="3.2860%" height="15" fill="rgb(246,228,12)" fg:x="25486881" fg:w="7687183"/><text x="11.1449%" y="2079.50">&lt;be..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,687,183 samples, 3.29%)</title><rect x="10.8949%" y="2053" width="3.2860%" height="15" fill="rgb(213,55,15)" fg:x="25486881" fg:w="7687183"/><text x="11.1449%" y="2063.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,687,183 samples, 3.29%)</title><rect x="10.8949%" y="2037" width="3.2860%" height="15" fill="rgb(209,9,3)" fg:x="25486881" fg:w="7687183"/><text x="11.1449%" y="2047.50">&lt;se..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,687,183 samples, 3.29%)</title><rect x="10.8949%" y="2021" width="3.2860%" height="15" fill="rgb(230,59,30)" fg:x="25486881" fg:w="7687183"/><text x="11.1449%" y="2031.50">&lt;al..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,687,183 samples, 3.29%)</title><rect x="10.8949%" y="2005" width="3.2860%" height="15" fill="rgb(209,121,21)" fg:x="25486881" fg:w="7687183"/><text x="11.1449%" y="2015.50">&lt;al..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,687,183 samples, 3.29%)</title><rect x="10.8949%" y="1989" width="3.2860%" height="15" fill="rgb(220,109,13)" fg:x="25486881" fg:w="7687183"/><text x="11.1449%" y="1999.50">&lt;se..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (6,232,568 samples, 2.66%)</title><rect x="11.5167%" y="1973" width="2.6642%" height="15" fill="rgb(232,18,1)" fg:x="26941496" fg:w="6232568"/><text x="11.7667%" y="1983.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (6,232,568 samples, 2.66%)</title><rect x="11.5167%" y="1957" width="2.6642%" height="15" fill="rgb(215,41,42)" fg:x="26941496" fg:w="6232568"/><text x="11.7667%" y="1967.50">&lt;a..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6,232,568 samples, 2.66%)</title><rect x="11.5167%" y="1941" width="2.6642%" height="15" fill="rgb(224,123,36)" fg:x="26941496" fg:w="6232568"/><text x="11.7667%" y="1951.50">&lt;a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (6,232,568 samples, 2.66%)</title><rect x="11.5167%" y="1925" width="2.6642%" height="15" fill="rgb(240,125,3)" fg:x="26941496" fg:w="6232568"/><text x="11.7667%" y="1935.50">&lt;s..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,232,568 samples, 2.66%)</title><rect x="11.5167%" y="1909" width="2.6642%" height="15" fill="rgb(205,98,50)" fg:x="26941496" fg:w="6232568"/><text x="11.7667%" y="1919.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,232,568 samples, 2.66%)</title><rect x="11.5167%" y="1893" width="2.6642%" height="15" fill="rgb(205,185,37)" fg:x="26941496" fg:w="6232568"/><text x="11.7667%" y="1903.50">al..</text></g><g><title>alloc::slice::hack::to_vec (6,232,568 samples, 2.66%)</title><rect x="11.5167%" y="1877" width="2.6642%" height="15" fill="rgb(238,207,15)" fg:x="26941496" fg:w="6232568"/><text x="11.7667%" y="1887.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,232,568 samples, 2.66%)</title><rect x="11.5167%" y="1861" width="2.6642%" height="15" fill="rgb(213,199,42)" fg:x="26941496" fg:w="6232568"/><text x="11.7667%" y="1871.50">&lt;T..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (6,232,568 samples, 2.66%)</title><rect x="11.5167%" y="1845" width="2.6642%" height="15" fill="rgb(235,201,11)" fg:x="26941496" fg:w="6232568"/><text x="11.7667%" y="1855.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (6,232,568 samples, 2.66%)</title><rect x="11.5167%" y="1829" width="2.6642%" height="15" fill="rgb(207,46,11)" fg:x="26941496" fg:w="6232568"/><text x="11.7667%" y="1839.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (6,232,568 samples, 2.66%)</title><rect x="11.5167%" y="1813" width="2.6642%" height="15" fill="rgb(241,35,35)" fg:x="26941496" fg:w="6232568"/><text x="11.7667%" y="1823.50">&lt;a..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6,232,568 samples, 2.66%)</title><rect x="11.5167%" y="1797" width="2.6642%" height="15" fill="rgb(243,32,47)" fg:x="26941496" fg:w="6232568"/><text x="11.7667%" y="1807.50">&lt;a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,230,536 samples, 2.24%)</title><rect x="11.9451%" y="1781" width="2.2359%" height="15" fill="rgb(247,202,23)" fg:x="27943528" fg:w="5230536"/><text x="12.1951%" y="1791.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,230,536 samples, 2.24%)</title><rect x="11.9451%" y="1765" width="2.2359%" height="15" fill="rgb(219,102,11)" fg:x="27943528" fg:w="5230536"/><text x="12.1951%" y="1775.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,230,536 samples, 2.24%)</title><rect x="11.9451%" y="1749" width="2.2359%" height="15" fill="rgb(243,110,44)" fg:x="27943528" fg:w="5230536"/><text x="12.1951%" y="1759.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,230,536 samples, 2.24%)</title><rect x="11.9451%" y="1733" width="2.2359%" height="15" fill="rgb(222,74,54)" fg:x="27943528" fg:w="5230536"/><text x="12.1951%" y="1743.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,230,536 samples, 2.24%)</title><rect x="11.9451%" y="1717" width="2.2359%" height="15" fill="rgb(216,99,12)" fg:x="27943528" fg:w="5230536"/><text x="12.1951%" y="1727.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,230,536 samples, 2.24%)</title><rect x="11.9451%" y="1701" width="2.2359%" height="15" fill="rgb(226,22,26)" fg:x="27943528" fg:w="5230536"/><text x="12.1951%" y="1711.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,230,536 samples, 2.24%)</title><rect x="11.9451%" y="1685" width="2.2359%" height="15" fill="rgb(217,163,10)" fg:x="27943528" fg:w="5230536"/><text x="12.1951%" y="1695.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,230,536 samples, 2.24%)</title><rect x="11.9451%" y="1669" width="2.2359%" height="15" fill="rgb(213,25,53)" fg:x="27943528" fg:w="5230536"/><text x="12.1951%" y="1679.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,230,536 samples, 2.24%)</title><rect x="11.9451%" y="1653" width="2.2359%" height="15" fill="rgb(252,105,26)" fg:x="27943528" fg:w="5230536"/><text x="12.1951%" y="1663.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,230,536 samples, 2.24%)</title><rect x="11.9451%" y="1637" width="2.2359%" height="15" fill="rgb(220,39,43)" fg:x="27943528" fg:w="5230536"/><text x="12.1951%" y="1647.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,230,536 samples, 2.24%)</title><rect x="11.9451%" y="1621" width="2.2359%" height="15" fill="rgb(229,68,48)" fg:x="27943528" fg:w="5230536"/><text x="12.1951%" y="1631.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,230,536 samples, 2.24%)</title><rect x="11.9451%" y="1605" width="2.2359%" height="15" fill="rgb(252,8,32)" fg:x="27943528" fg:w="5230536"/><text x="12.1951%" y="1615.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,230,536 samples, 2.24%)</title><rect x="11.9451%" y="1589" width="2.2359%" height="15" fill="rgb(223,20,43)" fg:x="27943528" fg:w="5230536"/><text x="12.1951%" y="1599.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,230,536 samples, 2.24%)</title><rect x="11.9451%" y="1573" width="2.2359%" height="15" fill="rgb(229,81,49)" fg:x="27943528" fg:w="5230536"/><text x="12.1951%" y="1583.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,230,536 samples, 2.24%)</title><rect x="11.9451%" y="1557" width="2.2359%" height="15" fill="rgb(236,28,36)" fg:x="27943528" fg:w="5230536"/><text x="12.1951%" y="1567.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,230,536 samples, 2.24%)</title><rect x="11.9451%" y="1541" width="2.2359%" height="15" fill="rgb(249,185,26)" fg:x="27943528" fg:w="5230536"/><text x="12.1951%" y="1551.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,230,536 samples, 2.24%)</title><rect x="11.9451%" y="1525" width="2.2359%" height="15" fill="rgb(249,174,33)" fg:x="27943528" fg:w="5230536"/><text x="12.1951%" y="1535.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,230,536 samples, 2.24%)</title><rect x="11.9451%" y="1509" width="2.2359%" height="15" fill="rgb(233,201,37)" fg:x="27943528" fg:w="5230536"/><text x="12.1951%" y="1519.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,230,536 samples, 2.24%)</title><rect x="11.9451%" y="1493" width="2.2359%" height="15" fill="rgb(221,78,26)" fg:x="27943528" fg:w="5230536"/><text x="12.1951%" y="1503.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,762,071 samples, 1.61%)</title><rect x="12.5728%" y="1477" width="1.6082%" height="15" fill="rgb(250,127,30)" fg:x="29411993" fg:w="3762071"/><text x="12.8228%" y="1487.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,762,071 samples, 1.61%)</title><rect x="12.5728%" y="1461" width="1.6082%" height="15" fill="rgb(230,49,44)" fg:x="29411993" fg:w="3762071"/><text x="12.8228%" y="1471.50"></text></g><g><title>alloc::slice::hack::to_vec (3,762,071 samples, 1.61%)</title><rect x="12.5728%" y="1445" width="1.6082%" height="15" fill="rgb(229,67,23)" fg:x="29411993" fg:w="3762071"/><text x="12.8228%" y="1455.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,762,071 samples, 1.61%)</title><rect x="12.5728%" y="1429" width="1.6082%" height="15" fill="rgb(249,83,47)" fg:x="29411993" fg:w="3762071"/><text x="12.8228%" y="1439.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,762,071 samples, 1.61%)</title><rect x="12.5728%" y="1413" width="1.6082%" height="15" fill="rgb(215,43,3)" fg:x="29411993" fg:w="3762071"/><text x="12.8228%" y="1423.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (3,762,071 samples, 1.61%)</title><rect x="12.5728%" y="1397" width="1.6082%" height="15" fill="rgb(238,154,13)" fg:x="29411993" fg:w="3762071"/><text x="12.8228%" y="1407.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (3,762,071 samples, 1.61%)</title><rect x="12.5728%" y="1381" width="1.6082%" height="15" fill="rgb(219,56,2)" fg:x="29411993" fg:w="3762071"/><text x="12.8228%" y="1391.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3,762,071 samples, 1.61%)</title><rect x="12.5728%" y="1365" width="1.6082%" height="15" fill="rgb(233,0,4)" fg:x="29411993" fg:w="3762071"/><text x="12.8228%" y="1375.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,762,071 samples, 1.61%)</title><rect x="12.5728%" y="1349" width="1.6082%" height="15" fill="rgb(235,30,7)" fg:x="29411993" fg:w="3762071"/><text x="12.8228%" y="1359.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,467,998 samples, 1.05%)</title><rect x="13.1260%" y="1333" width="1.0550%" height="15" fill="rgb(250,79,13)" fg:x="30706066" fg:w="2467998"/><text x="13.3760%" y="1343.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,467,998 samples, 1.05%)</title><rect x="13.1260%" y="1317" width="1.0550%" height="15" fill="rgb(211,146,34)" fg:x="30706066" fg:w="2467998"/><text x="13.3760%" y="1327.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,467,998 samples, 1.05%)</title><rect x="13.1260%" y="1301" width="1.0550%" height="15" fill="rgb(228,22,38)" fg:x="30706066" fg:w="2467998"/><text x="13.3760%" y="1311.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (1,022,965 samples, 0.44%)</title><rect x="13.7437%" y="1285" width="0.4373%" height="15" fill="rgb(235,168,5)" fg:x="32151099" fg:w="1022965"/><text x="13.9937%" y="1295.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1,022,965 samples, 0.44%)</title><rect x="13.7437%" y="1269" width="0.4373%" height="15" fill="rgb(221,155,16)" fg:x="32151099" fg:w="1022965"/><text x="13.9937%" y="1279.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1,022,965 samples, 0.44%)</title><rect x="13.7437%" y="1253" width="0.4373%" height="15" fill="rgb(215,215,53)" fg:x="32151099" fg:w="1022965"/><text x="13.9937%" y="1263.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1,022,965 samples, 0.44%)</title><rect x="13.7437%" y="1237" width="0.4373%" height="15" fill="rgb(223,4,10)" fg:x="32151099" fg:w="1022965"/><text x="13.9937%" y="1247.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1,022,965 samples, 0.44%)</title><rect x="13.7437%" y="1221" width="0.4373%" height="15" fill="rgb(234,103,6)" fg:x="32151099" fg:w="1022965"/><text x="13.9937%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,022,965 samples, 0.44%)</title><rect x="13.7437%" y="1205" width="0.4373%" height="15" fill="rgb(227,97,0)" fg:x="32151099" fg:w="1022965"/><text x="13.9937%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,022,965 samples, 0.44%)</title><rect x="13.7437%" y="1189" width="0.4373%" height="15" fill="rgb(234,150,53)" fg:x="32151099" fg:w="1022965"/><text x="13.9937%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (1,022,965 samples, 0.44%)</title><rect x="13.7437%" y="1173" width="0.4373%" height="15" fill="rgb(228,201,54)" fg:x="32151099" fg:w="1022965"/><text x="13.9937%" y="1183.50"></text></g><g><title>malloc (1,022,965 samples, 0.44%)</title><rect x="13.7437%" y="1157" width="0.4373%" height="15" fill="rgb(222,22,37)" fg:x="32151099" fg:w="1022965"/><text x="13.9937%" y="1167.50"></text></g><g><title>[libc.so.6] (1,022,965 samples, 0.44%)</title><rect x="13.7437%" y="1141" width="0.4373%" height="15" fill="rgb(237,53,32)" fg:x="32151099" fg:w="1022965"/><text x="13.9937%" y="1151.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,480,041 samples, 0.63%)</title><rect x="14.1810%" y="1477" width="0.6327%" height="15" fill="rgb(233,25,53)" fg:x="33174064" fg:w="1480041"/><text x="14.4310%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,480,041 samples, 0.63%)</title><rect x="14.1810%" y="1461" width="0.6327%" height="15" fill="rgb(210,40,34)" fg:x="33174064" fg:w="1480041"/><text x="14.4310%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,480,041 samples, 0.63%)</title><rect x="14.1810%" y="1445" width="0.6327%" height="15" fill="rgb(241,220,44)" fg:x="33174064" fg:w="1480041"/><text x="14.4310%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,480,041 samples, 0.63%)</title><rect x="14.1810%" y="1429" width="0.6327%" height="15" fill="rgb(235,28,35)" fg:x="33174064" fg:w="1480041"/><text x="14.4310%" y="1439.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,480,041 samples, 0.63%)</title><rect x="14.1810%" y="1413" width="0.6327%" height="15" fill="rgb(210,56,17)" fg:x="33174064" fg:w="1480041"/><text x="14.4310%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,480,041 samples, 0.63%)</title><rect x="14.1810%" y="1397" width="0.6327%" height="15" fill="rgb(224,130,29)" fg:x="33174064" fg:w="1480041"/><text x="14.4310%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,480,041 samples, 0.63%)</title><rect x="14.1810%" y="1381" width="0.6327%" height="15" fill="rgb(235,212,8)" fg:x="33174064" fg:w="1480041"/><text x="14.4310%" y="1391.50"></text></g><g><title>alloc::alloc::dealloc (1,480,041 samples, 0.63%)</title><rect x="14.1810%" y="1365" width="0.6327%" height="15" fill="rgb(223,33,50)" fg:x="33174064" fg:w="1480041"/><text x="14.4310%" y="1375.50"></text></g><g><title>__rdl_dealloc (1,480,041 samples, 0.63%)</title><rect x="14.1810%" y="1349" width="0.6327%" height="15" fill="rgb(219,149,13)" fg:x="33174064" fg:w="1480041"/><text x="14.4310%" y="1359.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,480,041 samples, 0.63%)</title><rect x="14.1810%" y="1333" width="0.6327%" height="15" fill="rgb(250,156,29)" fg:x="33174064" fg:w="1480041"/><text x="14.4310%" y="1343.50"></text></g><g><title>__rust_dealloc (1,048,993 samples, 0.45%)</title><rect x="14.8136%" y="949" width="0.4484%" height="15" fill="rgb(216,193,19)" fg:x="34654105" fg:w="1048993"/><text x="15.0636%" y="959.50"></text></g><g><title>cfree (990,685 samples, 0.42%)</title><rect x="15.2620%" y="949" width="0.4235%" height="15" fill="rgb(216,135,14)" fg:x="35703098" fg:w="990685"/><text x="15.5120%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="2069" width="2.0680%" height="15" fill="rgb(241,47,5)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="2079.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="2053" width="2.0680%" height="15" fill="rgb(233,42,35)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="2063.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="2037" width="2.0680%" height="15" fill="rgb(231,13,6)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="2047.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="2021" width="2.0680%" height="15" fill="rgb(207,181,40)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="2031.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="2005" width="2.0680%" height="15" fill="rgb(254,173,49)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="2015.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1989" width="2.0680%" height="15" fill="rgb(221,1,38)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1999.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1973" width="2.0680%" height="15" fill="rgb(206,124,46)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1983.50">&lt;..</text></g><g><title>core::mem::drop (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1957" width="2.0680%" height="15" fill="rgb(249,21,11)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1967.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1941" width="2.0680%" height="15" fill="rgb(222,201,40)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1951.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1925" width="2.0680%" height="15" fill="rgb(235,61,29)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1935.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1909" width="2.0680%" height="15" fill="rgb(219,207,3)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1919.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1893" width="2.0680%" height="15" fill="rgb(222,56,46)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1903.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1877" width="2.0680%" height="15" fill="rgb(239,76,54)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1887.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1861" width="2.0680%" height="15" fill="rgb(231,124,27)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1871.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1845" width="2.0680%" height="15" fill="rgb(249,195,6)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1855.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1829" width="2.0680%" height="15" fill="rgb(237,174,47)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1839.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1813" width="2.0680%" height="15" fill="rgb(206,201,31)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1823.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1797" width="2.0680%" height="15" fill="rgb(231,57,52)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1807.50">&lt;..</text></g><g><title>core::mem::drop (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1781" width="2.0680%" height="15" fill="rgb(248,177,22)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1791.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1765" width="2.0680%" height="15" fill="rgb(215,211,37)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1775.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1749" width="2.0680%" height="15" fill="rgb(241,128,51)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1759.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1733" width="2.0680%" height="15" fill="rgb(227,165,31)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1743.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1717" width="2.0680%" height="15" fill="rgb(228,167,24)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1727.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1701" width="2.0680%" height="15" fill="rgb(228,143,12)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1711.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1685" width="2.0680%" height="15" fill="rgb(249,149,8)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1695.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1669" width="2.0680%" height="15" fill="rgb(243,35,44)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1679.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1653" width="2.0680%" height="15" fill="rgb(246,89,9)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1663.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1637" width="2.0680%" height="15" fill="rgb(233,213,13)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1647.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1621" width="2.0680%" height="15" fill="rgb(233,141,41)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1631.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1605" width="2.0680%" height="15" fill="rgb(239,167,4)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1615.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1589" width="2.0680%" height="15" fill="rgb(209,217,16)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1599.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1573" width="2.0680%" height="15" fill="rgb(219,88,35)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1583.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1557" width="2.0680%" height="15" fill="rgb(220,193,23)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1567.50">&lt;..</text></g><g><title>core::mem::drop (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1541" width="2.0680%" height="15" fill="rgb(230,90,52)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1551.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1525" width="2.0680%" height="15" fill="rgb(252,106,19)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1535.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1509" width="2.0680%" height="15" fill="rgb(206,74,20)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1519.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,837,663 samples, 2.07%)</title><rect x="14.1810%" y="1493" width="2.0680%" height="15" fill="rgb(230,138,44)" fg:x="33174064" fg:w="4837663"/><text x="14.4310%" y="1503.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1477" width="1.4353%" height="15" fill="rgb(235,182,43)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1487.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1461" width="1.4353%" height="15" fill="rgb(242,16,51)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1471.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1445" width="1.4353%" height="15" fill="rgb(248,9,4)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1429" width="1.4353%" height="15" fill="rgb(210,31,22)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1413" width="1.4353%" height="15" fill="rgb(239,54,39)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1397" width="1.4353%" height="15" fill="rgb(230,99,41)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1381" width="1.4353%" height="15" fill="rgb(253,106,12)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1365" width="1.4353%" height="15" fill="rgb(213,46,41)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1349" width="1.4353%" height="15" fill="rgb(215,133,35)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1333" width="1.4353%" height="15" fill="rgb(213,28,5)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1343.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1317" width="1.4353%" height="15" fill="rgb(215,77,49)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1327.50"></text></g><g><title>core::mem::drop (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1301" width="1.4353%" height="15" fill="rgb(248,100,22)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1285" width="1.4353%" height="15" fill="rgb(208,67,9)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1295.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1269" width="1.4353%" height="15" fill="rgb(219,133,21)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1279.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1253" width="1.4353%" height="15" fill="rgb(246,46,29)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1237" width="1.4353%" height="15" fill="rgb(246,185,52)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1247.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1221" width="1.4353%" height="15" fill="rgb(252,136,11)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1231.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1205" width="1.4353%" height="15" fill="rgb(219,138,53)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1189" width="1.4353%" height="15" fill="rgb(211,51,23)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1173" width="1.4353%" height="15" fill="rgb(247,221,28)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1157" width="1.4353%" height="15" fill="rgb(251,222,45)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1141" width="1.4353%" height="15" fill="rgb(217,162,53)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1125" width="1.4353%" height="15" fill="rgb(229,93,14)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1109" width="1.4353%" height="15" fill="rgb(209,67,49)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1093" width="1.4353%" height="15" fill="rgb(213,87,29)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1077" width="1.4353%" height="15" fill="rgb(205,151,52)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1087.50"></text></g><g><title>core::mem::drop (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1061" width="1.4353%" height="15" fill="rgb(253,215,39)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1045" width="1.4353%" height="15" fill="rgb(221,220,41)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1029" width="1.4353%" height="15" fill="rgb(218,133,21)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="1013" width="1.4353%" height="15" fill="rgb(221,193,43)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="997" width="1.4353%" height="15" fill="rgb(240,128,52)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="981" width="1.4353%" height="15" fill="rgb(253,114,12)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="991.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,357,622 samples, 1.44%)</title><rect x="14.8136%" y="965" width="1.4353%" height="15" fill="rgb(215,223,47)" fg:x="34654105" fg:w="3357622"/><text x="15.0636%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="949" width="0.5634%" height="15" fill="rgb(248,225,23)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="933" width="0.5634%" height="15" fill="rgb(250,108,0)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="917" width="0.5634%" height="15" fill="rgb(228,208,7)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="901" width="0.5634%" height="15" fill="rgb(244,45,10)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="885" width="0.5634%" height="15" fill="rgb(207,125,25)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="869" width="0.5634%" height="15" fill="rgb(210,195,18)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="853" width="0.5634%" height="15" fill="rgb(249,80,12)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="837" width="0.5634%" height="15" fill="rgb(221,65,9)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="847.50"></text></g><g><title>core::mem::drop (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="821" width="0.5634%" height="15" fill="rgb(235,49,36)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="805" width="0.5634%" height="15" fill="rgb(225,32,20)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="789" width="0.5634%" height="15" fill="rgb(215,141,46)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="799.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="773" width="0.5634%" height="15" fill="rgb(250,160,47)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="757" width="0.5634%" height="15" fill="rgb(216,222,40)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="741" width="0.5634%" height="15" fill="rgb(234,217,39)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="751.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="725" width="0.5634%" height="15" fill="rgb(207,178,40)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="709" width="0.5634%" height="15" fill="rgb(221,136,13)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="693" width="0.5634%" height="15" fill="rgb(249,199,10)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="677" width="0.5634%" height="15" fill="rgb(249,222,13)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="661" width="0.5634%" height="15" fill="rgb(244,185,38)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="645" width="0.5634%" height="15" fill="rgb(236,202,9)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="629" width="0.5634%" height="15" fill="rgb(250,229,37)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="613" width="0.5634%" height="15" fill="rgb(206,174,23)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="597" width="0.5634%" height="15" fill="rgb(211,33,43)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="607.50"></text></g><g><title>core::mem::drop (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="581" width="0.5634%" height="15" fill="rgb(245,58,50)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="565" width="0.5634%" height="15" fill="rgb(244,68,36)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="549" width="0.5634%" height="15" fill="rgb(232,229,15)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="533" width="0.5634%" height="15" fill="rgb(254,30,23)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="517" width="0.5634%" height="15" fill="rgb(235,160,14)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="501" width="0.5634%" height="15" fill="rgb(212,155,44)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="511.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="485" width="0.5634%" height="15" fill="rgb(226,2,50)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="469" width="0.5634%" height="15" fill="rgb(234,177,6)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="453" width="0.5634%" height="15" fill="rgb(217,24,9)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="437" width="0.5634%" height="15" fill="rgb(220,13,46)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="421" width="0.5634%" height="15" fill="rgb(239,221,27)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="405" width="0.5634%" height="15" fill="rgb(222,198,25)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="389" width="0.5634%" height="15" fill="rgb(211,99,13)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="373" width="0.5634%" height="15" fill="rgb(232,111,31)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="357" width="0.5634%" height="15" fill="rgb(245,82,37)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="367.50"></text></g><g><title>core::mem::drop (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="341" width="0.5634%" height="15" fill="rgb(227,149,46)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="325" width="0.5634%" height="15" fill="rgb(218,36,50)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="309" width="0.5634%" height="15" fill="rgb(226,80,48)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="293" width="0.5634%" height="15" fill="rgb(238,224,15)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="277" width="0.5634%" height="15" fill="rgb(241,136,10)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="261" width="0.5634%" height="15" fill="rgb(208,32,45)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="271.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="245" width="0.5634%" height="15" fill="rgb(207,135,9)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,317,944 samples, 0.56%)</title><rect x="15.6855%" y="229" width="0.5634%" height="15" fill="rgb(206,86,44)" fg:x="36693783" fg:w="1317944"/><text x="15.9355%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,339,413 samples, 0.57%)</title><rect x="16.2489%" y="2069" width="0.5726%" height="15" fill="rgb(245,177,15)" fg:x="38011727" fg:w="1339413"/><text x="16.4989%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,339,413 samples, 0.57%)</title><rect x="16.2489%" y="2053" width="0.5726%" height="15" fill="rgb(206,64,50)" fg:x="38011727" fg:w="1339413"/><text x="16.4989%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,339,413 samples, 0.57%)</title><rect x="16.2489%" y="2037" width="0.5726%" height="15" fill="rgb(234,36,40)" fg:x="38011727" fg:w="1339413"/><text x="16.4989%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,339,413 samples, 0.57%)</title><rect x="16.2489%" y="2021" width="0.5726%" height="15" fill="rgb(213,64,8)" fg:x="38011727" fg:w="1339413"/><text x="16.4989%" y="2031.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,339,413 samples, 0.57%)</title><rect x="16.2489%" y="2005" width="0.5726%" height="15" fill="rgb(210,75,36)" fg:x="38011727" fg:w="1339413"/><text x="16.4989%" y="2015.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,339,413 samples, 0.57%)</title><rect x="16.2489%" y="1989" width="0.5726%" height="15" fill="rgb(229,88,21)" fg:x="38011727" fg:w="1339413"/><text x="16.4989%" y="1999.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,339,413 samples, 0.57%)</title><rect x="16.2489%" y="1973" width="0.5726%" height="15" fill="rgb(252,204,47)" fg:x="38011727" fg:w="1339413"/><text x="16.4989%" y="1983.50"></text></g><g><title>alloc::alloc::realloc (1,339,413 samples, 0.57%)</title><rect x="16.2489%" y="1957" width="0.5726%" height="15" fill="rgb(208,77,27)" fg:x="38011727" fg:w="1339413"/><text x="16.4989%" y="1967.50"></text></g><g><title>realloc (1,339,413 samples, 0.57%)</title><rect x="16.2489%" y="1941" width="0.5726%" height="15" fill="rgb(221,76,26)" fg:x="38011727" fg:w="1339413"/><text x="16.4989%" y="1951.50"></text></g><g><title>[libc.so.6] (1,339,413 samples, 0.57%)</title><rect x="16.2489%" y="1925" width="0.5726%" height="15" fill="rgb(225,139,18)" fg:x="38011727" fg:w="1339413"/><text x="16.4989%" y="1935.50"></text></g><g><title>[libc.so.6] (1,339,413 samples, 0.57%)</title><rect x="16.2489%" y="1909" width="0.5726%" height="15" fill="rgb(230,137,11)" fg:x="38011727" fg:w="1339413"/><text x="16.4989%" y="1919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (1,266,609 samples, 0.54%)</title><rect x="16.8215%" y="2053" width="0.5414%" height="15" fill="rgb(212,28,1)" fg:x="39351140" fg:w="1266609"/><text x="17.0715%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,266,609 samples, 0.54%)</title><rect x="16.8215%" y="2037" width="0.5414%" height="15" fill="rgb(248,164,17)" fg:x="39351140" fg:w="1266609"/><text x="17.0715%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,266,609 samples, 0.54%)</title><rect x="16.8215%" y="2021" width="0.5414%" height="15" fill="rgb(222,171,42)" fg:x="39351140" fg:w="1266609"/><text x="17.0715%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,266,609 samples, 0.54%)</title><rect x="16.8215%" y="2005" width="0.5414%" height="15" fill="rgb(243,84,45)" fg:x="39351140" fg:w="1266609"/><text x="17.0715%" y="2015.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,266,609 samples, 0.54%)</title><rect x="16.8215%" y="1989" width="0.5414%" height="15" fill="rgb(252,49,23)" fg:x="39351140" fg:w="1266609"/><text x="17.0715%" y="1999.50"></text></g><g><title>malloc (1,266,609 samples, 0.54%)</title><rect x="16.8215%" y="1973" width="0.5414%" height="15" fill="rgb(215,19,7)" fg:x="39351140" fg:w="1266609"/><text x="17.0715%" y="1983.50"></text></g><g><title>[libc.so.6] (1,266,609 samples, 0.54%)</title><rect x="16.8215%" y="1957" width="0.5414%" height="15" fill="rgb(238,81,41)" fg:x="39351140" fg:w="1266609"/><text x="17.0715%" y="1967.50"></text></g><g><title>[libc.so.6] (1,266,609 samples, 0.54%)</title><rect x="16.8215%" y="1941" width="0.5414%" height="15" fill="rgb(210,199,37)" fg:x="39351140" fg:w="1266609"/><text x="17.0715%" y="1951.50"></text></g><g><title>benchmark::extract_path_from_command (977,808 samples, 0.42%)</title><rect x="17.3629%" y="2053" width="0.4180%" height="15" fill="rgb(244,192,49)" fg:x="40617749" fg:w="977808"/><text x="17.6129%" y="2063.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (977,808 samples, 0.42%)</title><rect x="17.3629%" y="2037" width="0.4180%" height="15" fill="rgb(226,211,11)" fg:x="40617749" fg:w="977808"/><text x="17.6129%" y="2047.50"></text></g><g><title>benchmark::extract_path_from_command::_{{closure}} (977,808 samples, 0.42%)</title><rect x="17.3629%" y="2021" width="0.4180%" height="15" fill="rgb(236,162,54)" fg:x="40617749" fg:w="977808"/><text x="17.6129%" y="2031.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (977,808 samples, 0.42%)</title><rect x="17.3629%" y="2005" width="0.4180%" height="15" fill="rgb(220,229,9)" fg:x="40617749" fg:w="977808"/><text x="17.6129%" y="2015.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (977,808 samples, 0.42%)</title><rect x="17.3629%" y="1989" width="0.4180%" height="15" fill="rgb(250,87,22)" fg:x="40617749" fg:w="977808"/><text x="17.6129%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (977,808 samples, 0.42%)</title><rect x="17.3629%" y="1973" width="0.4180%" height="15" fill="rgb(239,43,17)" fg:x="40617749" fg:w="977808"/><text x="17.6129%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (977,808 samples, 0.42%)</title><rect x="17.3629%" y="1957" width="0.4180%" height="15" fill="rgb(231,177,25)" fg:x="40617749" fg:w="977808"/><text x="17.6129%" y="1967.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,270,035 samples, 0.54%)</title><rect x="17.7809%" y="2037" width="0.5429%" height="15" fill="rgb(219,179,1)" fg:x="41595557" fg:w="1270035"/><text x="18.0309%" y="2047.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (1,270,035 samples, 0.54%)</title><rect x="17.7809%" y="2021" width="0.5429%" height="15" fill="rgb(238,219,53)" fg:x="41595557" fg:w="1270035"/><text x="18.0309%" y="2031.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,270,035 samples, 0.54%)</title><rect x="17.7809%" y="2005" width="0.5429%" height="15" fill="rgb(232,167,36)" fg:x="41595557" fg:w="1270035"/><text x="18.0309%" y="2015.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,270,035 samples, 0.54%)</title><rect x="17.7809%" y="1989" width="0.5429%" height="15" fill="rgb(244,19,51)" fg:x="41595557" fg:w="1270035"/><text x="18.0309%" y="1999.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,270,035 samples, 0.54%)</title><rect x="17.7809%" y="1973" width="0.5429%" height="15" fill="rgb(224,6,22)" fg:x="41595557" fg:w="1270035"/><text x="18.0309%" y="1983.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,270,035 samples, 0.54%)</title><rect x="17.7809%" y="1957" width="0.5429%" height="15" fill="rgb(224,145,5)" fg:x="41595557" fg:w="1270035"/><text x="18.0309%" y="1967.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,270,035 samples, 0.54%)</title><rect x="17.7809%" y="1941" width="0.5429%" height="15" fill="rgb(234,130,49)" fg:x="41595557" fg:w="1270035"/><text x="18.0309%" y="1951.50"></text></g><g><title>alloc::slice::hack::to_vec (1,270,035 samples, 0.54%)</title><rect x="17.7809%" y="1925" width="0.5429%" height="15" fill="rgb(254,6,2)" fg:x="41595557" fg:w="1270035"/><text x="18.0309%" y="1935.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,270,035 samples, 0.54%)</title><rect x="17.7809%" y="1909" width="0.5429%" height="15" fill="rgb(208,96,46)" fg:x="41595557" fg:w="1270035"/><text x="18.0309%" y="1919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,270,035 samples, 0.54%)</title><rect x="17.7809%" y="1893" width="0.5429%" height="15" fill="rgb(239,3,39)" fg:x="41595557" fg:w="1270035"/><text x="18.0309%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,270,035 samples, 0.54%)</title><rect x="17.7809%" y="1877" width="0.5429%" height="15" fill="rgb(233,210,1)" fg:x="41595557" fg:w="1270035"/><text x="18.0309%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,270,035 samples, 0.54%)</title><rect x="17.7809%" y="1861" width="0.5429%" height="15" fill="rgb(244,137,37)" fg:x="41595557" fg:w="1270035"/><text x="18.0309%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,270,035 samples, 0.54%)</title><rect x="17.7809%" y="1845" width="0.5429%" height="15" fill="rgb(240,136,2)" fg:x="41595557" fg:w="1270035"/><text x="18.0309%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,270,035 samples, 0.54%)</title><rect x="17.7809%" y="1829" width="0.5429%" height="15" fill="rgb(239,18,37)" fg:x="41595557" fg:w="1270035"/><text x="18.0309%" y="1839.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,270,035 samples, 0.54%)</title><rect x="17.7809%" y="1813" width="0.5429%" height="15" fill="rgb(218,185,22)" fg:x="41595557" fg:w="1270035"/><text x="18.0309%" y="1823.50"></text></g><g><title>alloc::alloc::alloc (1,270,035 samples, 0.54%)</title><rect x="17.7809%" y="1797" width="0.5429%" height="15" fill="rgb(225,218,4)" fg:x="41595557" fg:w="1270035"/><text x="18.0309%" y="1807.50"></text></g><g><title>malloc (1,270,035 samples, 0.54%)</title><rect x="17.7809%" y="1781" width="0.5429%" height="15" fill="rgb(230,182,32)" fg:x="41595557" fg:w="1270035"/><text x="18.0309%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,697,382 samples, 1.15%)</title><rect x="18.3238%" y="2037" width="1.1531%" height="15" fill="rgb(242,56,43)" fg:x="42865592" fg:w="2697382"/><text x="18.5738%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,697,382 samples, 1.15%)</title><rect x="18.3238%" y="2021" width="1.1531%" height="15" fill="rgb(233,99,24)" fg:x="42865592" fg:w="2697382"/><text x="18.5738%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,697,382 samples, 1.15%)</title><rect x="18.3238%" y="2005" width="1.1531%" height="15" fill="rgb(234,209,42)" fg:x="42865592" fg:w="2697382"/><text x="18.5738%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,697,382 samples, 1.15%)</title><rect x="18.3238%" y="1989" width="1.1531%" height="15" fill="rgb(227,7,12)" fg:x="42865592" fg:w="2697382"/><text x="18.5738%" y="1999.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,697,382 samples, 1.15%)</title><rect x="18.3238%" y="1973" width="1.1531%" height="15" fill="rgb(245,203,43)" fg:x="42865592" fg:w="2697382"/><text x="18.5738%" y="1983.50"></text></g><g><title>malloc (2,697,382 samples, 1.15%)</title><rect x="18.3238%" y="1957" width="1.1531%" height="15" fill="rgb(238,205,33)" fg:x="42865592" fg:w="2697382"/><text x="18.5738%" y="1967.50"></text></g><g><title>[libc.so.6] (2,697,382 samples, 1.15%)</title><rect x="18.3238%" y="1941" width="1.1531%" height="15" fill="rgb(231,56,7)" fg:x="42865592" fg:w="2697382"/><text x="18.5738%" y="1951.50"></text></g><g><title>[libc.so.6] (2,697,382 samples, 1.15%)</title><rect x="18.3238%" y="1925" width="1.1531%" height="15" fill="rgb(244,186,29)" fg:x="42865592" fg:w="2697382"/><text x="18.5738%" y="1935.50"></text></g><g><title>[libc.so.6] (1,332,879 samples, 0.57%)</title><rect x="18.9071%" y="1909" width="0.5698%" height="15" fill="rgb(234,111,31)" fg:x="44230095" fg:w="1332879"/><text x="19.1571%" y="1919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,524,139 samples, 0.65%)</title><rect x="19.4769%" y="2021" width="0.6515%" height="15" fill="rgb(241,149,10)" fg:x="45562974" fg:w="1524139"/><text x="19.7269%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,524,139 samples, 0.65%)</title><rect x="19.4769%" y="2005" width="0.6515%" height="15" fill="rgb(249,206,44)" fg:x="45562974" fg:w="1524139"/><text x="19.7269%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,524,139 samples, 0.65%)</title><rect x="19.4769%" y="1989" width="0.6515%" height="15" fill="rgb(251,153,30)" fg:x="45562974" fg:w="1524139"/><text x="19.7269%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,524,139 samples, 0.65%)</title><rect x="19.4769%" y="1973" width="0.6515%" height="15" fill="rgb(239,152,38)" fg:x="45562974" fg:w="1524139"/><text x="19.7269%" y="1983.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,524,139 samples, 0.65%)</title><rect x="19.4769%" y="1957" width="0.6515%" height="15" fill="rgb(249,139,47)" fg:x="45562974" fg:w="1524139"/><text x="19.7269%" y="1967.50"></text></g><g><title>malloc (1,524,139 samples, 0.65%)</title><rect x="19.4769%" y="1941" width="0.6515%" height="15" fill="rgb(244,64,35)" fg:x="45562974" fg:w="1524139"/><text x="19.7269%" y="1951.50"></text></g><g><title>[libc.so.6] (1,524,139 samples, 0.65%)</title><rect x="19.4769%" y="1925" width="0.6515%" height="15" fill="rgb(216,46,15)" fg:x="45562974" fg:w="1524139"/><text x="19.7269%" y="1935.50"></text></g><g><title>[libc.so.6] (1,524,139 samples, 0.65%)</title><rect x="19.4769%" y="1909" width="0.6515%" height="15" fill="rgb(250,74,19)" fg:x="45562974" fg:w="1524139"/><text x="19.7269%" y="1919.50"></text></g><g><title>[libc.so.6] (1,524,139 samples, 0.65%)</title><rect x="19.4769%" y="1893" width="0.6515%" height="15" fill="rgb(249,42,33)" fg:x="45562974" fg:w="1524139"/><text x="19.7269%" y="1903.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,042,885 samples, 0.45%)</title><rect x="20.1284%" y="2005" width="0.4458%" height="15" fill="rgb(242,149,17)" fg:x="47087113" fg:w="1042885"/><text x="20.3784%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,042,885 samples, 0.45%)</title><rect x="20.1284%" y="1989" width="0.4458%" height="15" fill="rgb(244,29,21)" fg:x="47087113" fg:w="1042885"/><text x="20.3784%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,042,885 samples, 0.45%)</title><rect x="20.1284%" y="1973" width="0.4458%" height="15" fill="rgb(220,130,37)" fg:x="47087113" fg:w="1042885"/><text x="20.3784%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,042,885 samples, 0.45%)</title><rect x="20.1284%" y="1957" width="0.4458%" height="15" fill="rgb(211,67,2)" fg:x="47087113" fg:w="1042885"/><text x="20.3784%" y="1967.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,042,885 samples, 0.45%)</title><rect x="20.1284%" y="1941" width="0.4458%" height="15" fill="rgb(235,68,52)" fg:x="47087113" fg:w="1042885"/><text x="20.3784%" y="1951.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,042,885 samples, 0.45%)</title><rect x="20.1284%" y="1925" width="0.4458%" height="15" fill="rgb(246,142,3)" fg:x="47087113" fg:w="1042885"/><text x="20.3784%" y="1935.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,042,885 samples, 0.45%)</title><rect x="20.1284%" y="1909" width="0.4458%" height="15" fill="rgb(241,25,7)" fg:x="47087113" fg:w="1042885"/><text x="20.3784%" y="1919.50"></text></g><g><title>alloc::alloc::realloc (1,042,885 samples, 0.45%)</title><rect x="20.1284%" y="1893" width="0.4458%" height="15" fill="rgb(242,119,39)" fg:x="47087113" fg:w="1042885"/><text x="20.3784%" y="1903.50"></text></g><g><title>realloc (1,042,885 samples, 0.45%)</title><rect x="20.1284%" y="1877" width="0.4458%" height="15" fill="rgb(241,98,45)" fg:x="47087113" fg:w="1042885"/><text x="20.3784%" y="1887.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,398,095 samples, 0.60%)</title><rect x="20.5742%" y="1973" width="0.5976%" height="15" fill="rgb(254,28,30)" fg:x="48129998" fg:w="1398095"/><text x="20.8242%" y="1983.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (1,398,095 samples, 0.60%)</title><rect x="20.5742%" y="1957" width="0.5976%" height="15" fill="rgb(241,142,54)" fg:x="48129998" fg:w="1398095"/><text x="20.8242%" y="1967.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (1,398,095 samples, 0.60%)</title><rect x="20.5742%" y="1941" width="0.5976%" height="15" fill="rgb(222,85,15)" fg:x="48129998" fg:w="1398095"/><text x="20.8242%" y="1951.50"></text></g><g><title>benchmark::json_to_html_node (5,257,397 samples, 2.25%)</title><rect x="19.4769%" y="2037" width="2.2474%" height="15" fill="rgb(210,85,47)" fg:x="45562974" fg:w="5257397"/><text x="19.7269%" y="2047.50">b..</text></g><g><title>benchmark::json_to_html_node (3,733,258 samples, 1.60%)</title><rect x="20.1284%" y="2021" width="1.5959%" height="15" fill="rgb(224,206,25)" fg:x="47087113" fg:w="3733258"/><text x="20.3784%" y="2031.50"></text></g><g><title>benchmark::json_to_html_node (2,690,373 samples, 1.15%)</title><rect x="20.5742%" y="2005" width="1.1501%" height="15" fill="rgb(243,201,19)" fg:x="48129998" fg:w="2690373"/><text x="20.8242%" y="2015.50"></text></g><g><title>benchmark::json_to_html_node (2,690,373 samples, 1.15%)</title><rect x="20.5742%" y="1989" width="1.1501%" height="15" fill="rgb(236,59,4)" fg:x="48129998" fg:w="2690373"/><text x="20.8242%" y="1999.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,292,278 samples, 0.55%)</title><rect x="21.1718%" y="1973" width="0.5524%" height="15" fill="rgb(254,179,45)" fg:x="49528093" fg:w="1292278"/><text x="21.4218%" y="1983.50"></text></g><g><title>core::ptr::write (1,292,278 samples, 0.55%)</title><rect x="21.1718%" y="1957" width="0.5524%" height="15" fill="rgb(226,14,10)" fg:x="49528093" fg:w="1292278"/><text x="21.4218%" y="1967.50"></text></g><g><title>[libc.so.6] (1,292,278 samples, 0.55%)</title><rect x="21.1718%" y="1941" width="0.5524%" height="15" fill="rgb(244,27,41)" fg:x="49528093" fg:w="1292278"/><text x="21.4218%" y="1951.50"></text></g><g><title>benchmark::apply_frame_modifications (12,744,653 samples, 5.45%)</title><rect x="16.8215%" y="2069" width="5.4480%" height="15" fill="rgb(235,35,32)" fg:x="39351140" fg:w="12744653"/><text x="17.0715%" y="2079.50">benchma..</text></g><g><title>benchmark::json_to_html_node (10,500,236 samples, 4.49%)</title><rect x="17.7809%" y="2053" width="4.4885%" height="15" fill="rgb(218,68,31)" fg:x="41595557" fg:w="10500236"/><text x="18.0309%" y="2063.50">bench..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,275,422 samples, 0.55%)</title><rect x="21.7242%" y="2037" width="0.5452%" height="15" fill="rgb(207,120,37)" fg:x="50820371" fg:w="1275422"/><text x="21.9742%" y="2047.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,275,422 samples, 0.55%)</title><rect x="21.7242%" y="2021" width="0.5452%" height="15" fill="rgb(227,98,0)" fg:x="50820371" fg:w="1275422"/><text x="21.9742%" y="2031.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,275,422 samples, 0.55%)</title><rect x="21.7242%" y="2005" width="0.5452%" height="15" fill="rgb(207,7,3)" fg:x="50820371" fg:w="1275422"/><text x="21.9742%" y="2015.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,275,422 samples, 0.55%)</title><rect x="21.7242%" y="1989" width="0.5452%" height="15" fill="rgb(206,98,19)" fg:x="50820371" fg:w="1275422"/><text x="21.9742%" y="1999.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,275,422 samples, 0.55%)</title><rect x="21.7242%" y="1973" width="0.5452%" height="15" fill="rgb(217,5,26)" fg:x="50820371" fg:w="1275422"/><text x="21.9742%" y="1983.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,275,422 samples, 0.55%)</title><rect x="21.7242%" y="1957" width="0.5452%" height="15" fill="rgb(235,190,38)" fg:x="50820371" fg:w="1275422"/><text x="21.9742%" y="1967.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,275,422 samples, 0.55%)</title><rect x="21.7242%" y="1941" width="0.5452%" height="15" fill="rgb(247,86,24)" fg:x="50820371" fg:w="1275422"/><text x="21.9742%" y="1951.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,275,422 samples, 0.55%)</title><rect x="21.7242%" y="1925" width="0.5452%" height="15" fill="rgb(205,101,16)" fg:x="50820371" fg:w="1275422"/><text x="21.9742%" y="1935.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,294,310 samples, 0.55%)</title><rect x="22.2695%" y="1797" width="0.5533%" height="15" fill="rgb(246,168,33)" fg:x="52095793" fg:w="1294310"/><text x="22.5195%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,294,310 samples, 0.55%)</title><rect x="22.2695%" y="1781" width="0.5533%" height="15" fill="rgb(231,114,1)" fg:x="52095793" fg:w="1294310"/><text x="22.5195%" y="1791.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,294,310 samples, 0.55%)</title><rect x="22.2695%" y="1765" width="0.5533%" height="15" fill="rgb(207,184,53)" fg:x="52095793" fg:w="1294310"/><text x="22.5195%" y="1775.50"></text></g><g><title>alloc::slice::hack::to_vec (1,294,310 samples, 0.55%)</title><rect x="22.2695%" y="1749" width="0.5533%" height="15" fill="rgb(224,95,51)" fg:x="52095793" fg:w="1294310"/><text x="22.5195%" y="1759.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,294,310 samples, 0.55%)</title><rect x="22.2695%" y="1733" width="0.5533%" height="15" fill="rgb(212,188,45)" fg:x="52095793" fg:w="1294310"/><text x="22.5195%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,294,310 samples, 0.55%)</title><rect x="22.2695%" y="1717" width="0.5533%" height="15" fill="rgb(223,154,38)" fg:x="52095793" fg:w="1294310"/><text x="22.5195%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,294,310 samples, 0.55%)</title><rect x="22.2695%" y="1701" width="0.5533%" height="15" fill="rgb(251,22,52)" fg:x="52095793" fg:w="1294310"/><text x="22.5195%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,294,310 samples, 0.55%)</title><rect x="22.2695%" y="1685" width="0.5533%" height="15" fill="rgb(229,209,22)" fg:x="52095793" fg:w="1294310"/><text x="22.5195%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,294,310 samples, 0.55%)</title><rect x="22.2695%" y="1669" width="0.5533%" height="15" fill="rgb(234,138,34)" fg:x="52095793" fg:w="1294310"/><text x="22.5195%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,294,310 samples, 0.55%)</title><rect x="22.2695%" y="1653" width="0.5533%" height="15" fill="rgb(212,95,11)" fg:x="52095793" fg:w="1294310"/><text x="22.5195%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,294,310 samples, 0.55%)</title><rect x="22.2695%" y="1637" width="0.5533%" height="15" fill="rgb(240,179,47)" fg:x="52095793" fg:w="1294310"/><text x="22.5195%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (1,294,310 samples, 0.55%)</title><rect x="22.2695%" y="1621" width="0.5533%" height="15" fill="rgb(240,163,11)" fg:x="52095793" fg:w="1294310"/><text x="22.5195%" y="1631.50"></text></g><g><title>malloc (1,294,310 samples, 0.55%)</title><rect x="22.2695%" y="1605" width="0.5533%" height="15" fill="rgb(236,37,12)" fg:x="52095793" fg:w="1294310"/><text x="22.5195%" y="1615.50"></text></g><g><title>[libc.so.6] (1,294,310 samples, 0.55%)</title><rect x="22.2695%" y="1589" width="0.5533%" height="15" fill="rgb(232,164,16)" fg:x="52095793" fg:w="1294310"/><text x="22.5195%" y="1599.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,306,204 samples, 0.56%)</title><rect x="22.8227%" y="1637" width="0.5584%" height="15" fill="rgb(244,205,15)" fg:x="53390103" fg:w="1306204"/><text x="23.0727%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,306,204 samples, 0.56%)</title><rect x="22.8227%" y="1621" width="0.5584%" height="15" fill="rgb(223,117,47)" fg:x="53390103" fg:w="1306204"/><text x="23.0727%" y="1631.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,306,204 samples, 0.56%)</title><rect x="22.8227%" y="1605" width="0.5584%" height="15" fill="rgb(244,107,35)" fg:x="53390103" fg:w="1306204"/><text x="23.0727%" y="1615.50"></text></g><g><title>alloc::slice::hack::to_vec (1,306,204 samples, 0.56%)</title><rect x="22.8227%" y="1589" width="0.5584%" height="15" fill="rgb(205,140,8)" fg:x="53390103" fg:w="1306204"/><text x="23.0727%" y="1599.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,306,204 samples, 0.56%)</title><rect x="22.8227%" y="1573" width="0.5584%" height="15" fill="rgb(228,84,46)" fg:x="53390103" fg:w="1306204"/><text x="23.0727%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,306,204 samples, 0.56%)</title><rect x="22.8227%" y="1557" width="0.5584%" height="15" fill="rgb(254,188,9)" fg:x="53390103" fg:w="1306204"/><text x="23.0727%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,306,204 samples, 0.56%)</title><rect x="22.8227%" y="1541" width="0.5584%" height="15" fill="rgb(206,112,54)" fg:x="53390103" fg:w="1306204"/><text x="23.0727%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,306,204 samples, 0.56%)</title><rect x="22.8227%" y="1525" width="0.5584%" height="15" fill="rgb(216,84,49)" fg:x="53390103" fg:w="1306204"/><text x="23.0727%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,306,204 samples, 0.56%)</title><rect x="22.8227%" y="1509" width="0.5584%" height="15" fill="rgb(214,194,35)" fg:x="53390103" fg:w="1306204"/><text x="23.0727%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,306,204 samples, 0.56%)</title><rect x="22.8227%" y="1493" width="0.5584%" height="15" fill="rgb(249,28,3)" fg:x="53390103" fg:w="1306204"/><text x="23.0727%" y="1503.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,306,204 samples, 0.56%)</title><rect x="22.8227%" y="1477" width="0.5584%" height="15" fill="rgb(222,56,52)" fg:x="53390103" fg:w="1306204"/><text x="23.0727%" y="1487.50"></text></g><g><title>alloc::alloc::alloc (1,306,204 samples, 0.56%)</title><rect x="22.8227%" y="1461" width="0.5584%" height="15" fill="rgb(245,217,50)" fg:x="53390103" fg:w="1306204"/><text x="23.0727%" y="1471.50"></text></g><g><title>malloc (1,306,204 samples, 0.56%)</title><rect x="22.8227%" y="1445" width="0.5584%" height="15" fill="rgb(213,201,24)" fg:x="53390103" fg:w="1306204"/><text x="23.0727%" y="1455.50"></text></g><g><title>[libc.so.6] (1,306,204 samples, 0.56%)</title><rect x="22.8227%" y="1429" width="0.5584%" height="15" fill="rgb(248,116,28)" fg:x="53390103" fg:w="1306204"/><text x="23.0727%" y="1439.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,672,270 samples, 1.14%)</title><rect x="23.9324%" y="1557" width="1.1423%" height="15" fill="rgb(219,72,43)" fg:x="55986066" fg:w="2672270"/><text x="24.1824%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,385,232 samples, 0.59%)</title><rect x="24.4826%" y="1541" width="0.5921%" height="15" fill="rgb(209,138,14)" fg:x="57273104" fg:w="1385232"/><text x="24.7326%" y="1551.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,385,232 samples, 0.59%)</title><rect x="24.4826%" y="1525" width="0.5921%" height="15" fill="rgb(222,18,33)" fg:x="57273104" fg:w="1385232"/><text x="24.7326%" y="1535.50"></text></g><g><title>alloc::slice::hack::to_vec (1,385,232 samples, 0.59%)</title><rect x="24.4826%" y="1509" width="0.5921%" height="15" fill="rgb(213,199,7)" fg:x="57273104" fg:w="1385232"/><text x="24.7326%" y="1519.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,385,232 samples, 0.59%)</title><rect x="24.4826%" y="1493" width="0.5921%" height="15" fill="rgb(250,110,10)" fg:x="57273104" fg:w="1385232"/><text x="24.7326%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,385,232 samples, 0.59%)</title><rect x="24.4826%" y="1477" width="0.5921%" height="15" fill="rgb(248,123,6)" fg:x="57273104" fg:w="1385232"/><text x="24.7326%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,385,232 samples, 0.59%)</title><rect x="24.4826%" y="1461" width="0.5921%" height="15" fill="rgb(206,91,31)" fg:x="57273104" fg:w="1385232"/><text x="24.7326%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,385,232 samples, 0.59%)</title><rect x="24.4826%" y="1445" width="0.5921%" height="15" fill="rgb(211,154,13)" fg:x="57273104" fg:w="1385232"/><text x="24.7326%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,385,232 samples, 0.59%)</title><rect x="24.4826%" y="1429" width="0.5921%" height="15" fill="rgb(225,148,7)" fg:x="57273104" fg:w="1385232"/><text x="24.7326%" y="1439.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,385,232 samples, 0.59%)</title><rect x="24.4826%" y="1413" width="0.5921%" height="15" fill="rgb(220,160,43)" fg:x="57273104" fg:w="1385232"/><text x="24.7326%" y="1423.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,385,232 samples, 0.59%)</title><rect x="24.4826%" y="1397" width="0.5921%" height="15" fill="rgb(213,52,39)" fg:x="57273104" fg:w="1385232"/><text x="24.7326%" y="1407.50"></text></g><g><title>alloc::alloc::alloc (1,385,232 samples, 0.59%)</title><rect x="24.4826%" y="1381" width="0.5921%" height="15" fill="rgb(243,137,7)" fg:x="57273104" fg:w="1385232"/><text x="24.7326%" y="1391.50"></text></g><g><title>malloc (1,385,232 samples, 0.59%)</title><rect x="24.4826%" y="1365" width="0.5921%" height="15" fill="rgb(230,79,13)" fg:x="57273104" fg:w="1385232"/><text x="24.7326%" y="1375.50"></text></g><g><title>[libc.so.6] (1,385,232 samples, 0.59%)</title><rect x="24.4826%" y="1349" width="0.5921%" height="15" fill="rgb(247,105,23)" fg:x="57273104" fg:w="1385232"/><text x="24.7326%" y="1359.50"></text></g><g><title>__rdl_alloc (1,288,602 samples, 0.55%)</title><rect x="25.0747%" y="1285" width="0.5508%" height="15" fill="rgb(223,179,41)" fg:x="58658336" fg:w="1288602"/><text x="25.3247%" y="1295.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,288,602 samples, 0.55%)</title><rect x="25.0747%" y="1269" width="0.5508%" height="15" fill="rgb(218,9,34)" fg:x="58658336" fg:w="1288602"/><text x="25.3247%" y="1279.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,823,900 samples, 1.63%)</title><rect x="25.0747%" y="1477" width="1.6346%" height="15" fill="rgb(222,106,8)" fg:x="58658336" fg:w="3823900"/><text x="25.3247%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,823,900 samples, 1.63%)</title><rect x="25.0747%" y="1461" width="1.6346%" height="15" fill="rgb(211,220,0)" fg:x="58658336" fg:w="3823900"/><text x="25.3247%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,823,900 samples, 1.63%)</title><rect x="25.0747%" y="1445" width="1.6346%" height="15" fill="rgb(229,52,16)" fg:x="58658336" fg:w="3823900"/><text x="25.3247%" y="1455.50"></text></g><g><title>alloc::slice::hack::to_vec (3,823,900 samples, 1.63%)</title><rect x="25.0747%" y="1429" width="1.6346%" height="15" fill="rgb(212,155,18)" fg:x="58658336" fg:w="3823900"/><text x="25.3247%" y="1439.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,823,900 samples, 1.63%)</title><rect x="25.0747%" y="1413" width="1.6346%" height="15" fill="rgb(242,21,14)" fg:x="58658336" fg:w="3823900"/><text x="25.3247%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,823,900 samples, 1.63%)</title><rect x="25.0747%" y="1397" width="1.6346%" height="15" fill="rgb(222,19,48)" fg:x="58658336" fg:w="3823900"/><text x="25.3247%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,823,900 samples, 1.63%)</title><rect x="25.0747%" y="1381" width="1.6346%" height="15" fill="rgb(232,45,27)" fg:x="58658336" fg:w="3823900"/><text x="25.3247%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,823,900 samples, 1.63%)</title><rect x="25.0747%" y="1365" width="1.6346%" height="15" fill="rgb(249,103,42)" fg:x="58658336" fg:w="3823900"/><text x="25.3247%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,823,900 samples, 1.63%)</title><rect x="25.0747%" y="1349" width="1.6346%" height="15" fill="rgb(246,81,33)" fg:x="58658336" fg:w="3823900"/><text x="25.3247%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,823,900 samples, 1.63%)</title><rect x="25.0747%" y="1333" width="1.6346%" height="15" fill="rgb(252,33,42)" fg:x="58658336" fg:w="3823900"/><text x="25.3247%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,823,900 samples, 1.63%)</title><rect x="25.0747%" y="1317" width="1.6346%" height="15" fill="rgb(209,212,41)" fg:x="58658336" fg:w="3823900"/><text x="25.3247%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (3,823,900 samples, 1.63%)</title><rect x="25.0747%" y="1301" width="1.6346%" height="15" fill="rgb(207,154,6)" fg:x="58658336" fg:w="3823900"/><text x="25.3247%" y="1311.50"></text></g><g><title>malloc (2,535,298 samples, 1.08%)</title><rect x="25.6256%" y="1285" width="1.0838%" height="15" fill="rgb(223,64,47)" fg:x="59946938" fg:w="2535298"/><text x="25.8756%" y="1295.50"></text></g><g><title>[libc.so.6] (1,282,763 samples, 0.55%)</title><rect x="26.1610%" y="1269" width="0.5483%" height="15" fill="rgb(211,161,38)" fg:x="61199473" fg:w="1282763"/><text x="26.4110%" y="1279.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,372,313 samples, 0.59%)</title><rect x="26.7094%" y="1237" width="0.5866%" height="15" fill="rgb(219,138,40)" fg:x="62482236" fg:w="1372313"/><text x="26.9594%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,372,313 samples, 0.59%)</title><rect x="26.7094%" y="1221" width="0.5866%" height="15" fill="rgb(241,228,46)" fg:x="62482236" fg:w="1372313"/><text x="26.9594%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,372,313 samples, 0.59%)</title><rect x="26.7094%" y="1205" width="0.5866%" height="15" fill="rgb(223,209,38)" fg:x="62482236" fg:w="1372313"/><text x="26.9594%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (1,372,313 samples, 0.59%)</title><rect x="26.7094%" y="1189" width="0.5866%" height="15" fill="rgb(236,164,45)" fg:x="62482236" fg:w="1372313"/><text x="26.9594%" y="1199.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,372,313 samples, 0.59%)</title><rect x="26.7094%" y="1173" width="0.5866%" height="15" fill="rgb(231,15,5)" fg:x="62482236" fg:w="1372313"/><text x="26.9594%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,372,313 samples, 0.59%)</title><rect x="26.7094%" y="1157" width="0.5866%" height="15" fill="rgb(252,35,15)" fg:x="62482236" fg:w="1372313"/><text x="26.9594%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,372,313 samples, 0.59%)</title><rect x="26.7094%" y="1141" width="0.5866%" height="15" fill="rgb(248,181,18)" fg:x="62482236" fg:w="1372313"/><text x="26.9594%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,372,313 samples, 0.59%)</title><rect x="26.7094%" y="1125" width="0.5866%" height="15" fill="rgb(233,39,42)" fg:x="62482236" fg:w="1372313"/><text x="26.9594%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,372,313 samples, 0.59%)</title><rect x="26.7094%" y="1109" width="0.5866%" height="15" fill="rgb(238,110,33)" fg:x="62482236" fg:w="1372313"/><text x="26.9594%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,372,313 samples, 0.59%)</title><rect x="26.7094%" y="1093" width="0.5866%" height="15" fill="rgb(233,195,10)" fg:x="62482236" fg:w="1372313"/><text x="26.9594%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,372,313 samples, 0.59%)</title><rect x="26.7094%" y="1077" width="0.5866%" height="15" fill="rgb(254,105,3)" fg:x="62482236" fg:w="1372313"/><text x="26.9594%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (1,372,313 samples, 0.59%)</title><rect x="26.7094%" y="1061" width="0.5866%" height="15" fill="rgb(221,225,9)" fg:x="62482236" fg:w="1372313"/><text x="26.9594%" y="1071.50"></text></g><g><title>malloc (1,372,313 samples, 0.59%)</title><rect x="26.7094%" y="1045" width="0.5866%" height="15" fill="rgb(224,227,45)" fg:x="62482236" fg:w="1372313"/><text x="26.9594%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,280,235 samples, 0.55%)</title><rect x="27.2960%" y="1157" width="0.5473%" height="15" fill="rgb(229,198,43)" fg:x="63854549" fg:w="1280235"/><text x="27.5460%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,280,235 samples, 0.55%)</title><rect x="27.2960%" y="1141" width="0.5473%" height="15" fill="rgb(206,209,35)" fg:x="63854549" fg:w="1280235"/><text x="27.5460%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,280,235 samples, 0.55%)</title><rect x="27.2960%" y="1125" width="0.5473%" height="15" fill="rgb(245,195,53)" fg:x="63854549" fg:w="1280235"/><text x="27.5460%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (1,280,235 samples, 0.55%)</title><rect x="27.2960%" y="1109" width="0.5473%" height="15" fill="rgb(240,92,26)" fg:x="63854549" fg:w="1280235"/><text x="27.5460%" y="1119.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,280,235 samples, 0.55%)</title><rect x="27.2960%" y="1093" width="0.5473%" height="15" fill="rgb(207,40,23)" fg:x="63854549" fg:w="1280235"/><text x="27.5460%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,280,235 samples, 0.55%)</title><rect x="27.2960%" y="1077" width="0.5473%" height="15" fill="rgb(223,111,35)" fg:x="63854549" fg:w="1280235"/><text x="27.5460%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,280,235 samples, 0.55%)</title><rect x="27.2960%" y="1061" width="0.5473%" height="15" fill="rgb(229,147,28)" fg:x="63854549" fg:w="1280235"/><text x="27.5460%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,280,235 samples, 0.55%)</title><rect x="27.2960%" y="1045" width="0.5473%" height="15" fill="rgb(211,29,28)" fg:x="63854549" fg:w="1280235"/><text x="27.5460%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,280,235 samples, 0.55%)</title><rect x="27.2960%" y="1029" width="0.5473%" height="15" fill="rgb(228,72,33)" fg:x="63854549" fg:w="1280235"/><text x="27.5460%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,280,235 samples, 0.55%)</title><rect x="27.2960%" y="1013" width="0.5473%" height="15" fill="rgb(205,214,31)" fg:x="63854549" fg:w="1280235"/><text x="27.5460%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,280,235 samples, 0.55%)</title><rect x="27.2960%" y="997" width="0.5473%" height="15" fill="rgb(224,111,15)" fg:x="63854549" fg:w="1280235"/><text x="27.5460%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (1,280,235 samples, 0.55%)</title><rect x="27.2960%" y="981" width="0.5473%" height="15" fill="rgb(253,21,26)" fg:x="63854549" fg:w="1280235"/><text x="27.5460%" y="991.50"></text></g><g><title>malloc (1,280,235 samples, 0.55%)</title><rect x="27.2960%" y="965" width="0.5473%" height="15" fill="rgb(245,139,43)" fg:x="63854549" fg:w="1280235"/><text x="27.5460%" y="975.50"></text></g><g><title>[libc.so.6] (1,280,235 samples, 0.55%)</title><rect x="27.2960%" y="949" width="0.5473%" height="15" fill="rgb(252,170,7)" fg:x="63854549" fg:w="1280235"/><text x="27.5460%" y="959.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,503,348 samples, 0.64%)</title><rect x="27.8432%" y="677" width="0.6426%" height="15" fill="rgb(231,118,14)" fg:x="65134784" fg:w="1503348"/><text x="28.0932%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,503,348 samples, 0.64%)</title><rect x="27.8432%" y="661" width="0.6426%" height="15" fill="rgb(238,83,0)" fg:x="65134784" fg:w="1503348"/><text x="28.0932%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,503,348 samples, 0.64%)</title><rect x="27.8432%" y="645" width="0.6426%" height="15" fill="rgb(221,39,39)" fg:x="65134784" fg:w="1503348"/><text x="28.0932%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1,503,348 samples, 0.64%)</title><rect x="27.8432%" y="629" width="0.6426%" height="15" fill="rgb(222,119,46)" fg:x="65134784" fg:w="1503348"/><text x="28.0932%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,503,348 samples, 0.64%)</title><rect x="27.8432%" y="613" width="0.6426%" height="15" fill="rgb(222,165,49)" fg:x="65134784" fg:w="1503348"/><text x="28.0932%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,503,348 samples, 0.64%)</title><rect x="27.8432%" y="597" width="0.6426%" height="15" fill="rgb(219,113,52)" fg:x="65134784" fg:w="1503348"/><text x="28.0932%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,503,348 samples, 0.64%)</title><rect x="27.8432%" y="581" width="0.6426%" height="15" fill="rgb(214,7,15)" fg:x="65134784" fg:w="1503348"/><text x="28.0932%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,503,348 samples, 0.64%)</title><rect x="27.8432%" y="565" width="0.6426%" height="15" fill="rgb(235,32,4)" fg:x="65134784" fg:w="1503348"/><text x="28.0932%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,503,348 samples, 0.64%)</title><rect x="27.8432%" y="549" width="0.6426%" height="15" fill="rgb(238,90,54)" fg:x="65134784" fg:w="1503348"/><text x="28.0932%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,503,348 samples, 0.64%)</title><rect x="27.8432%" y="533" width="0.6426%" height="15" fill="rgb(213,208,19)" fg:x="65134784" fg:w="1503348"/><text x="28.0932%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,503,348 samples, 0.64%)</title><rect x="27.8432%" y="517" width="0.6426%" height="15" fill="rgb(233,156,4)" fg:x="65134784" fg:w="1503348"/><text x="28.0932%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1,503,348 samples, 0.64%)</title><rect x="27.8432%" y="501" width="0.6426%" height="15" fill="rgb(207,194,5)" fg:x="65134784" fg:w="1503348"/><text x="28.0932%" y="511.50"></text></g><g><title>malloc (1,503,348 samples, 0.64%)</title><rect x="27.8432%" y="485" width="0.6426%" height="15" fill="rgb(206,111,30)" fg:x="65134784" fg:w="1503348"/><text x="28.0932%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,328,732 samples, 0.57%)</title><rect x="28.4859%" y="597" width="0.5680%" height="15" fill="rgb(243,70,54)" fg:x="66638132" fg:w="1328732"/><text x="28.7359%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,328,732 samples, 0.57%)</title><rect x="28.4859%" y="581" width="0.5680%" height="15" fill="rgb(242,28,8)" fg:x="66638132" fg:w="1328732"/><text x="28.7359%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1,328,732 samples, 0.57%)</title><rect x="28.4859%" y="565" width="0.5680%" height="15" fill="rgb(219,106,18)" fg:x="66638132" fg:w="1328732"/><text x="28.7359%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,328,732 samples, 0.57%)</title><rect x="28.4859%" y="549" width="0.5680%" height="15" fill="rgb(244,222,10)" fg:x="66638132" fg:w="1328732"/><text x="28.7359%" y="559.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,328,732 samples, 0.57%)</title><rect x="28.4859%" y="533" width="0.5680%" height="15" fill="rgb(236,179,52)" fg:x="66638132" fg:w="1328732"/><text x="28.7359%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,328,732 samples, 0.57%)</title><rect x="28.4859%" y="517" width="0.5680%" height="15" fill="rgb(213,23,39)" fg:x="66638132" fg:w="1328732"/><text x="28.7359%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,328,732 samples, 0.57%)</title><rect x="28.4859%" y="501" width="0.5680%" height="15" fill="rgb(238,48,10)" fg:x="66638132" fg:w="1328732"/><text x="28.7359%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,328,732 samples, 0.57%)</title><rect x="28.4859%" y="485" width="0.5680%" height="15" fill="rgb(251,196,23)" fg:x="66638132" fg:w="1328732"/><text x="28.7359%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1,328,732 samples, 0.57%)</title><rect x="28.4859%" y="469" width="0.5680%" height="15" fill="rgb(250,152,24)" fg:x="66638132" fg:w="1328732"/><text x="28.7359%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,328,732 samples, 0.57%)</title><rect x="28.4859%" y="453" width="0.5680%" height="15" fill="rgb(209,150,17)" fg:x="66638132" fg:w="1328732"/><text x="28.7359%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,328,732 samples, 0.57%)</title><rect x="28.4859%" y="437" width="0.5680%" height="15" fill="rgb(234,202,34)" fg:x="66638132" fg:w="1328732"/><text x="28.7359%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,328,732 samples, 0.57%)</title><rect x="28.4859%" y="421" width="0.5680%" height="15" fill="rgb(253,148,53)" fg:x="66638132" fg:w="1328732"/><text x="28.7359%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,328,732 samples, 0.57%)</title><rect x="28.4859%" y="405" width="0.5680%" height="15" fill="rgb(218,129,16)" fg:x="66638132" fg:w="1328732"/><text x="28.7359%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,328,732 samples, 0.57%)</title><rect x="28.4859%" y="389" width="0.5680%" height="15" fill="rgb(216,85,19)" fg:x="66638132" fg:w="1328732"/><text x="28.7359%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,328,732 samples, 0.57%)</title><rect x="28.4859%" y="373" width="0.5680%" height="15" fill="rgb(235,228,7)" fg:x="66638132" fg:w="1328732"/><text x="28.7359%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,328,732 samples, 0.57%)</title><rect x="28.4859%" y="357" width="0.5680%" height="15" fill="rgb(245,175,0)" fg:x="66638132" fg:w="1328732"/><text x="28.7359%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1,328,732 samples, 0.57%)</title><rect x="28.4859%" y="341" width="0.5680%" height="15" fill="rgb(208,168,36)" fg:x="66638132" fg:w="1328732"/><text x="28.7359%" y="351.50"></text></g><g><title>malloc (1,328,732 samples, 0.57%)</title><rect x="28.4859%" y="325" width="0.5680%" height="15" fill="rgb(246,171,24)" fg:x="66638132" fg:w="1328732"/><text x="28.7359%" y="335.50"></text></g><g><title>[libc.so.6] (1,328,732 samples, 0.57%)</title><rect x="28.4859%" y="309" width="0.5680%" height="15" fill="rgb(215,142,24)" fg:x="66638132" fg:w="1328732"/><text x="28.7359%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,847,669 samples, 1.22%)</title><rect x="28.4859%" y="677" width="1.2173%" height="15" fill="rgb(250,187,7)" fg:x="66638132" fg:w="2847669"/><text x="28.7359%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,847,669 samples, 1.22%)</title><rect x="28.4859%" y="661" width="1.2173%" height="15" fill="rgb(228,66,33)" fg:x="66638132" fg:w="2847669"/><text x="28.7359%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (2,847,669 samples, 1.22%)</title><rect x="28.4859%" y="645" width="1.2173%" height="15" fill="rgb(234,215,21)" fg:x="66638132" fg:w="2847669"/><text x="28.7359%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,847,669 samples, 1.22%)</title><rect x="28.4859%" y="629" width="1.2173%" height="15" fill="rgb(222,191,20)" fg:x="66638132" fg:w="2847669"/><text x="28.7359%" y="639.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (2,847,669 samples, 1.22%)</title><rect x="28.4859%" y="613" width="1.2173%" height="15" fill="rgb(245,79,54)" fg:x="66638132" fg:w="2847669"/><text x="28.7359%" y="623.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,518,937 samples, 0.65%)</title><rect x="29.0539%" y="597" width="0.6493%" height="15" fill="rgb(240,10,37)" fg:x="67966864" fg:w="1518937"/><text x="29.3039%" y="607.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,518,937 samples, 0.65%)</title><rect x="29.0539%" y="581" width="0.6493%" height="15" fill="rgb(214,192,32)" fg:x="67966864" fg:w="1518937"/><text x="29.3039%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,518,937 samples, 0.65%)</title><rect x="29.0539%" y="565" width="0.6493%" height="15" fill="rgb(209,36,54)" fg:x="67966864" fg:w="1518937"/><text x="29.3039%" y="575.50"></text></g><g><title>__rdl_alloc (1,489,748 samples, 0.64%)</title><rect x="29.7032%" y="485" width="0.6368%" height="15" fill="rgb(220,10,11)" fg:x="69485801" fg:w="1489748"/><text x="29.9532%" y="495.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,489,748 samples, 0.64%)</title><rect x="29.7032%" y="469" width="0.6368%" height="15" fill="rgb(221,106,17)" fg:x="69485801" fg:w="1489748"/><text x="29.9532%" y="479.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,006,193 samples, 1.29%)</title><rect x="29.7032%" y="677" width="1.2851%" height="15" fill="rgb(251,142,44)" fg:x="69485801" fg:w="3006193"/><text x="29.9532%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,006,193 samples, 1.29%)</title><rect x="29.7032%" y="661" width="1.2851%" height="15" fill="rgb(238,13,15)" fg:x="69485801" fg:w="3006193"/><text x="29.9532%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,006,193 samples, 1.29%)</title><rect x="29.7032%" y="645" width="1.2851%" height="15" fill="rgb(208,107,27)" fg:x="69485801" fg:w="3006193"/><text x="29.9532%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (3,006,193 samples, 1.29%)</title><rect x="29.7032%" y="629" width="1.2851%" height="15" fill="rgb(205,136,37)" fg:x="69485801" fg:w="3006193"/><text x="29.9532%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,006,193 samples, 1.29%)</title><rect x="29.7032%" y="613" width="1.2851%" height="15" fill="rgb(250,205,27)" fg:x="69485801" fg:w="3006193"/><text x="29.9532%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,006,193 samples, 1.29%)</title><rect x="29.7032%" y="597" width="1.2851%" height="15" fill="rgb(210,80,43)" fg:x="69485801" fg:w="3006193"/><text x="29.9532%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,006,193 samples, 1.29%)</title><rect x="29.7032%" y="581" width="1.2851%" height="15" fill="rgb(247,160,36)" fg:x="69485801" fg:w="3006193"/><text x="29.9532%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,006,193 samples, 1.29%)</title><rect x="29.7032%" y="565" width="1.2851%" height="15" fill="rgb(234,13,49)" fg:x="69485801" fg:w="3006193"/><text x="29.9532%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,006,193 samples, 1.29%)</title><rect x="29.7032%" y="549" width="1.2851%" height="15" fill="rgb(234,122,0)" fg:x="69485801" fg:w="3006193"/><text x="29.9532%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,006,193 samples, 1.29%)</title><rect x="29.7032%" y="533" width="1.2851%" height="15" fill="rgb(207,146,38)" fg:x="69485801" fg:w="3006193"/><text x="29.9532%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,006,193 samples, 1.29%)</title><rect x="29.7032%" y="517" width="1.2851%" height="15" fill="rgb(207,177,25)" fg:x="69485801" fg:w="3006193"/><text x="29.9532%" y="527.50"></text></g><g><title>alloc::alloc::alloc (3,006,193 samples, 1.29%)</title><rect x="29.7032%" y="501" width="1.2851%" height="15" fill="rgb(211,178,42)" fg:x="69485801" fg:w="3006193"/><text x="29.9532%" y="511.50"></text></g><g><title>malloc (1,516,445 samples, 0.65%)</title><rect x="30.3400%" y="485" width="0.6482%" height="15" fill="rgb(230,69,54)" fg:x="70975549" fg:w="1516445"/><text x="30.5900%" y="495.50"></text></g><g><title>[libc.so.6] (1,516,445 samples, 0.65%)</title><rect x="30.3400%" y="469" width="0.6482%" height="15" fill="rgb(214,135,41)" fg:x="70975549" fg:w="1516445"/><text x="30.5900%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,122,405 samples, 4.33%)</title><rect x="27.8432%" y="837" width="4.3270%" height="15" fill="rgb(237,67,25)" fg:x="65134784" fg:w="10122405"/><text x="28.0932%" y="847.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,122,405 samples, 4.33%)</title><rect x="27.8432%" y="821" width="4.3270%" height="15" fill="rgb(222,189,50)" fg:x="65134784" fg:w="10122405"/><text x="28.0932%" y="831.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (10,122,405 samples, 4.33%)</title><rect x="27.8432%" y="805" width="4.3270%" height="15" fill="rgb(245,148,34)" fg:x="65134784" fg:w="10122405"/><text x="28.0932%" y="815.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,122,405 samples, 4.33%)</title><rect x="27.8432%" y="789" width="4.3270%" height="15" fill="rgb(222,29,6)" fg:x="65134784" fg:w="10122405"/><text x="28.0932%" y="799.50">&lt;T as..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (10,122,405 samples, 4.33%)</title><rect x="27.8432%" y="773" width="4.3270%" height="15" fill="rgb(221,189,43)" fg:x="65134784" fg:w="10122405"/><text x="28.0932%" y="783.50">&lt;css_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,122,405 samples, 4.33%)</title><rect x="27.8432%" y="757" width="4.3270%" height="15" fill="rgb(207,36,27)" fg:x="65134784" fg:w="10122405"/><text x="28.0932%" y="767.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,122,405 samples, 4.33%)</title><rect x="27.8432%" y="741" width="4.3270%" height="15" fill="rgb(217,90,24)" fg:x="65134784" fg:w="10122405"/><text x="28.0932%" y="751.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (10,122,405 samples, 4.33%)</title><rect x="27.8432%" y="725" width="4.3270%" height="15" fill="rgb(224,66,35)" fg:x="65134784" fg:w="10122405"/><text x="28.0932%" y="735.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,122,405 samples, 4.33%)</title><rect x="27.8432%" y="709" width="4.3270%" height="15" fill="rgb(221,13,50)" fg:x="65134784" fg:w="10122405"/><text x="28.0932%" y="719.50">&lt;T as..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (10,122,405 samples, 4.33%)</title><rect x="27.8432%" y="693" width="4.3270%" height="15" fill="rgb(236,68,49)" fg:x="65134784" fg:w="10122405"/><text x="28.0932%" y="703.50">&lt;css_..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,765,195 samples, 1.18%)</title><rect x="30.9882%" y="677" width="1.1820%" height="15" fill="rgb(229,146,28)" fg:x="72491994" fg:w="2765195"/><text x="31.2382%" y="687.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,765,195 samples, 1.18%)</title><rect x="30.9882%" y="661" width="1.1820%" height="15" fill="rgb(225,31,38)" fg:x="72491994" fg:w="2765195"/><text x="31.2382%" y="671.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,425,631 samples, 0.61%)</title><rect x="31.5609%" y="645" width="0.6094%" height="15" fill="rgb(250,208,3)" fg:x="73831558" fg:w="1425631"/><text x="31.8109%" y="655.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,494,201 samples, 0.64%)</title><rect x="32.1703%" y="837" width="0.6387%" height="15" fill="rgb(246,54,23)" fg:x="75257189" fg:w="1494201"/><text x="32.4203%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,494,201 samples, 0.64%)</title><rect x="32.1703%" y="821" width="0.6387%" height="15" fill="rgb(243,76,11)" fg:x="75257189" fg:w="1494201"/><text x="32.4203%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,494,201 samples, 0.64%)</title><rect x="32.1703%" y="805" width="0.6387%" height="15" fill="rgb(245,21,50)" fg:x="75257189" fg:w="1494201"/><text x="32.4203%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (1,494,201 samples, 0.64%)</title><rect x="32.1703%" y="789" width="0.6387%" height="15" fill="rgb(228,9,43)" fg:x="75257189" fg:w="1494201"/><text x="32.4203%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,494,201 samples, 0.64%)</title><rect x="32.1703%" y="773" width="0.6387%" height="15" fill="rgb(208,100,47)" fg:x="75257189" fg:w="1494201"/><text x="32.4203%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,494,201 samples, 0.64%)</title><rect x="32.1703%" y="757" width="0.6387%" height="15" fill="rgb(232,26,8)" fg:x="75257189" fg:w="1494201"/><text x="32.4203%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,494,201 samples, 0.64%)</title><rect x="32.1703%" y="741" width="0.6387%" height="15" fill="rgb(216,166,38)" fg:x="75257189" fg:w="1494201"/><text x="32.4203%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,494,201 samples, 0.64%)</title><rect x="32.1703%" y="725" width="0.6387%" height="15" fill="rgb(251,202,51)" fg:x="75257189" fg:w="1494201"/><text x="32.4203%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,494,201 samples, 0.64%)</title><rect x="32.1703%" y="709" width="0.6387%" height="15" fill="rgb(254,216,34)" fg:x="75257189" fg:w="1494201"/><text x="32.4203%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,494,201 samples, 0.64%)</title><rect x="32.1703%" y="693" width="0.6387%" height="15" fill="rgb(251,32,27)" fg:x="75257189" fg:w="1494201"/><text x="32.4203%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,494,201 samples, 0.64%)</title><rect x="32.1703%" y="677" width="0.6387%" height="15" fill="rgb(208,127,28)" fg:x="75257189" fg:w="1494201"/><text x="32.4203%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1,494,201 samples, 0.64%)</title><rect x="32.1703%" y="661" width="0.6387%" height="15" fill="rgb(224,137,22)" fg:x="75257189" fg:w="1494201"/><text x="32.4203%" y="671.50"></text></g><g><title>__rdl_alloc (1,494,201 samples, 0.64%)</title><rect x="32.1703%" y="645" width="0.6387%" height="15" fill="rgb(254,70,32)" fg:x="75257189" fg:w="1494201"/><text x="32.4203%" y="655.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,494,201 samples, 0.64%)</title><rect x="32.1703%" y="629" width="0.6387%" height="15" fill="rgb(229,75,37)" fg:x="75257189" fg:w="1494201"/><text x="32.4203%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (5,449,193 samples, 2.33%)</title><rect x="32.8090%" y="773" width="2.3294%" height="15" fill="rgb(252,64,23)" fg:x="76751390" fg:w="5449193"/><text x="33.0590%" y="783.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (5,449,193 samples, 2.33%)</title><rect x="32.8090%" y="757" width="2.3294%" height="15" fill="rgb(232,162,48)" fg:x="76751390" fg:w="5449193"/><text x="33.0590%" y="767.50">h..</text></g><g><title>core::clone::Clone::clone (5,449,193 samples, 2.33%)</title><rect x="32.8090%" y="741" width="2.3294%" height="15" fill="rgb(246,160,12)" fg:x="76751390" fg:w="5449193"/><text x="33.0590%" y="751.50">c..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,449,193 samples, 2.33%)</title><rect x="32.8090%" y="725" width="2.3294%" height="15" fill="rgb(247,166,0)" fg:x="76751390" fg:w="5449193"/><text x="33.0590%" y="735.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,177,294 samples, 1.79%)</title><rect x="33.3527%" y="709" width="1.7857%" height="15" fill="rgb(249,219,21)" fg:x="78023289" fg:w="4177294"/><text x="33.6027%" y="719.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4,177,294 samples, 1.79%)</title><rect x="33.3527%" y="693" width="1.7857%" height="15" fill="rgb(205,209,3)" fg:x="78023289" fg:w="4177294"/><text x="33.6027%" y="703.50">a..</text></g><g><title>alloc::slice::hack::to_vec (4,177,294 samples, 1.79%)</title><rect x="33.3527%" y="677" width="1.7857%" height="15" fill="rgb(243,44,1)" fg:x="78023289" fg:w="4177294"/><text x="33.6027%" y="687.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4,177,294 samples, 1.79%)</title><rect x="33.3527%" y="661" width="1.7857%" height="15" fill="rgb(206,159,16)" fg:x="78023289" fg:w="4177294"/><text x="33.6027%" y="671.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,177,294 samples, 1.79%)</title><rect x="33.3527%" y="645" width="1.7857%" height="15" fill="rgb(244,77,30)" fg:x="78023289" fg:w="4177294"/><text x="33.6027%" y="655.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,177,294 samples, 1.79%)</title><rect x="33.3527%" y="629" width="1.7857%" height="15" fill="rgb(218,69,12)" fg:x="78023289" fg:w="4177294"/><text x="33.6027%" y="639.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,177,294 samples, 1.79%)</title><rect x="33.3527%" y="613" width="1.7857%" height="15" fill="rgb(212,87,7)" fg:x="78023289" fg:w="4177294"/><text x="33.6027%" y="623.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,177,294 samples, 1.79%)</title><rect x="33.3527%" y="597" width="1.7857%" height="15" fill="rgb(245,114,25)" fg:x="78023289" fg:w="4177294"/><text x="33.6027%" y="607.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,177,294 samples, 1.79%)</title><rect x="33.3527%" y="581" width="1.7857%" height="15" fill="rgb(210,61,42)" fg:x="78023289" fg:w="4177294"/><text x="33.6027%" y="591.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (4,177,294 samples, 1.79%)</title><rect x="33.3527%" y="565" width="1.7857%" height="15" fill="rgb(211,52,33)" fg:x="78023289" fg:w="4177294"/><text x="33.6027%" y="575.50">a..</text></g><g><title>alloc::alloc::alloc (4,177,294 samples, 1.79%)</title><rect x="33.3527%" y="549" width="1.7857%" height="15" fill="rgb(234,58,33)" fg:x="78023289" fg:w="4177294"/><text x="33.6027%" y="559.50">a..</text></g><g><title>malloc (4,177,294 samples, 1.79%)</title><rect x="33.3527%" y="533" width="1.7857%" height="15" fill="rgb(220,115,36)" fg:x="78023289" fg:w="4177294"/><text x="33.6027%" y="543.50">m..</text></g><g><title>[libc.so.6] (4,177,294 samples, 1.79%)</title><rect x="33.3527%" y="517" width="1.7857%" height="15" fill="rgb(243,153,54)" fg:x="78023289" fg:w="4177294"/><text x="33.6027%" y="527.50">[..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18,497,580 samples, 7.91%)</title><rect x="27.8432%" y="917" width="7.9072%" height="15" fill="rgb(251,47,18)" fg:x="65134784" fg:w="18497580"/><text x="28.0932%" y="927.50">&lt;alloc::vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18,497,580 samples, 7.91%)</title><rect x="27.8432%" y="901" width="7.9072%" height="15" fill="rgb(242,102,42)" fg:x="65134784" fg:w="18497580"/><text x="28.0932%" y="911.50">alloc::slic..</text></g><g><title>alloc::slice::hack::to_vec (18,497,580 samples, 7.91%)</title><rect x="27.8432%" y="885" width="7.9072%" height="15" fill="rgb(234,31,38)" fg:x="65134784" fg:w="18497580"/><text x="28.0932%" y="895.50">alloc::slic..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18,497,580 samples, 7.91%)</title><rect x="27.8432%" y="869" width="7.9072%" height="15" fill="rgb(221,117,51)" fg:x="65134784" fg:w="18497580"/><text x="28.0932%" y="879.50">&lt;T as alloc..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (18,497,580 samples, 7.91%)</title><rect x="27.8432%" y="853" width="7.9072%" height="15" fill="rgb(212,20,18)" fg:x="65134784" fg:w="18497580"/><text x="28.0932%" y="863.50">&lt;css_bitvec..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (6,880,974 samples, 2.94%)</title><rect x="32.8090%" y="837" width="2.9414%" height="15" fill="rgb(245,133,36)" fg:x="76751390" fg:w="6880974"/><text x="33.0590%" y="847.50">&lt;s..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (6,880,974 samples, 2.94%)</title><rect x="32.8090%" y="821" width="2.9414%" height="15" fill="rgb(212,6,19)" fg:x="76751390" fg:w="6880974"/><text x="33.0590%" y="831.50">&lt;h..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (6,880,974 samples, 2.94%)</title><rect x="32.8090%" y="805" width="2.9414%" height="15" fill="rgb(218,1,36)" fg:x="76751390" fg:w="6880974"/><text x="33.0590%" y="815.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,880,974 samples, 2.94%)</title><rect x="32.8090%" y="789" width="2.9414%" height="15" fill="rgb(246,84,54)" fg:x="76751390" fg:w="6880974"/><text x="33.0590%" y="799.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,431,781 samples, 0.61%)</title><rect x="35.1384%" y="773" width="0.6120%" height="15" fill="rgb(242,110,6)" fg:x="82200583" fg:w="1431781"/><text x="35.3884%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,431,781 samples, 0.61%)</title><rect x="35.1384%" y="757" width="0.6120%" height="15" fill="rgb(214,47,5)" fg:x="82200583" fg:w="1431781"/><text x="35.3884%" y="767.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,431,781 samples, 0.61%)</title><rect x="35.1384%" y="741" width="0.6120%" height="15" fill="rgb(218,159,25)" fg:x="82200583" fg:w="1431781"/><text x="35.3884%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,431,781 samples, 0.61%)</title><rect x="35.1384%" y="725" width="0.6120%" height="15" fill="rgb(215,211,28)" fg:x="82200583" fg:w="1431781"/><text x="35.3884%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,431,781 samples, 0.61%)</title><rect x="35.1384%" y="709" width="0.6120%" height="15" fill="rgb(238,59,32)" fg:x="82200583" fg:w="1431781"/><text x="35.3884%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1,431,781 samples, 0.61%)</title><rect x="35.1384%" y="693" width="0.6120%" height="15" fill="rgb(226,82,3)" fg:x="82200583" fg:w="1431781"/><text x="35.3884%" y="703.50"></text></g><g><title>malloc (1,431,781 samples, 0.61%)</title><rect x="35.1384%" y="677" width="0.6120%" height="15" fill="rgb(240,164,32)" fg:x="82200583" fg:w="1431781"/><text x="35.3884%" y="687.50"></text></g><g><title>[libc.so.6] (1,431,781 samples, 0.61%)</title><rect x="35.1384%" y="661" width="0.6120%" height="15" fill="rgb(232,46,7)" fg:x="82200583" fg:w="1431781"/><text x="35.3884%" y="671.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,803,239 samples, 1.20%)</title><rect x="35.7504%" y="917" width="1.1983%" height="15" fill="rgb(229,129,53)" fg:x="83632364" fg:w="2803239"/><text x="36.0004%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,511,107 samples, 0.65%)</title><rect x="36.3028%" y="901" width="0.6460%" height="15" fill="rgb(234,188,29)" fg:x="84924496" fg:w="1511107"/><text x="36.5528%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,511,107 samples, 0.65%)</title><rect x="36.3028%" y="885" width="0.6460%" height="15" fill="rgb(246,141,4)" fg:x="84924496" fg:w="1511107"/><text x="36.5528%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,511,107 samples, 0.65%)</title><rect x="36.3028%" y="869" width="0.6460%" height="15" fill="rgb(229,23,39)" fg:x="84924496" fg:w="1511107"/><text x="36.5528%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (1,511,107 samples, 0.65%)</title><rect x="36.3028%" y="853" width="0.6460%" height="15" fill="rgb(206,12,3)" fg:x="84924496" fg:w="1511107"/><text x="36.5528%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,511,107 samples, 0.65%)</title><rect x="36.3028%" y="837" width="0.6460%" height="15" fill="rgb(252,226,20)" fg:x="84924496" fg:w="1511107"/><text x="36.5528%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,511,107 samples, 0.65%)</title><rect x="36.3028%" y="821" width="0.6460%" height="15" fill="rgb(216,123,35)" fg:x="84924496" fg:w="1511107"/><text x="36.5528%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,511,107 samples, 0.65%)</title><rect x="36.3028%" y="805" width="0.6460%" height="15" fill="rgb(212,68,40)" fg:x="84924496" fg:w="1511107"/><text x="36.5528%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,511,107 samples, 0.65%)</title><rect x="36.3028%" y="789" width="0.6460%" height="15" fill="rgb(254,125,32)" fg:x="84924496" fg:w="1511107"/><text x="36.5528%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,511,107 samples, 0.65%)</title><rect x="36.3028%" y="773" width="0.6460%" height="15" fill="rgb(253,97,22)" fg:x="84924496" fg:w="1511107"/><text x="36.5528%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,511,107 samples, 0.65%)</title><rect x="36.3028%" y="757" width="0.6460%" height="15" fill="rgb(241,101,14)" fg:x="84924496" fg:w="1511107"/><text x="36.5528%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,511,107 samples, 0.65%)</title><rect x="36.3028%" y="741" width="0.6460%" height="15" fill="rgb(238,103,29)" fg:x="84924496" fg:w="1511107"/><text x="36.5528%" y="751.50"></text></g><g><title>alloc::alloc::alloc (1,511,107 samples, 0.65%)</title><rect x="36.3028%" y="725" width="0.6460%" height="15" fill="rgb(233,195,47)" fg:x="84924496" fg:w="1511107"/><text x="36.5528%" y="735.50"></text></g><g><title>malloc (1,511,107 samples, 0.65%)</title><rect x="36.3028%" y="709" width="0.6460%" height="15" fill="rgb(246,218,30)" fg:x="84924496" fg:w="1511107"/><text x="36.5528%" y="719.50"></text></g><g><title>[libc.so.6] (1,511,107 samples, 0.65%)</title><rect x="36.3028%" y="693" width="0.6460%" height="15" fill="rgb(219,145,47)" fg:x="84924496" fg:w="1511107"/><text x="36.5528%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23,873,613 samples, 10.21%)</title><rect x="27.8432%" y="997" width="10.2053%" height="15" fill="rgb(243,12,26)" fg:x="65134784" fg:w="23873613"/><text x="28.0932%" y="1007.50">&lt;alloc::vec::Ve..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23,873,613 samples, 10.21%)</title><rect x="27.8432%" y="981" width="10.2053%" height="15" fill="rgb(214,87,16)" fg:x="65134784" fg:w="23873613"/><text x="28.0932%" y="991.50">alloc::slice::&lt;..</text></g><g><title>alloc::slice::hack::to_vec (23,873,613 samples, 10.21%)</title><rect x="27.8432%" y="965" width="10.2053%" height="15" fill="rgb(208,99,42)" fg:x="65134784" fg:w="23873613"/><text x="28.0932%" y="975.50">alloc::slice::h..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23,873,613 samples, 10.21%)</title><rect x="27.8432%" y="949" width="10.2053%" height="15" fill="rgb(253,99,2)" fg:x="65134784" fg:w="23873613"/><text x="28.0932%" y="959.50">&lt;T as alloc::sl..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (23,873,613 samples, 10.21%)</title><rect x="27.8432%" y="933" width="10.2053%" height="15" fill="rgb(220,168,23)" fg:x="65134784" fg:w="23873613"/><text x="28.0932%" y="943.50">&lt;css_bitvector_..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,572,794 samples, 1.10%)</title><rect x="36.9487%" y="917" width="1.0998%" height="15" fill="rgb(242,38,24)" fg:x="86435603" fg:w="2572794"/><text x="37.1987%" y="927.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,572,794 samples, 1.10%)</title><rect x="36.9487%" y="901" width="1.0998%" height="15" fill="rgb(225,182,9)" fg:x="86435603" fg:w="2572794"/><text x="37.1987%" y="911.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,276,318 samples, 0.55%)</title><rect x="37.5029%" y="885" width="0.5456%" height="15" fill="rgb(243,178,37)" fg:x="87732079" fg:w="1276318"/><text x="37.7529%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,276,318 samples, 0.55%)</title><rect x="37.5029%" y="869" width="0.5456%" height="15" fill="rgb(232,139,19)" fg:x="87732079" fg:w="1276318"/><text x="37.7529%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,276,318 samples, 0.55%)</title><rect x="37.5029%" y="853" width="0.5456%" height="15" fill="rgb(225,201,24)" fg:x="87732079" fg:w="1276318"/><text x="37.7529%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,276,318 samples, 0.55%)</title><rect x="37.5029%" y="837" width="0.5456%" height="15" fill="rgb(221,47,46)" fg:x="87732079" fg:w="1276318"/><text x="37.7529%" y="847.50"></text></g><g><title>core::clone::Clone::clone (1,276,318 samples, 0.55%)</title><rect x="37.5029%" y="821" width="0.5456%" height="15" fill="rgb(249,23,13)" fg:x="87732079" fg:w="1276318"/><text x="37.7529%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,276,318 samples, 0.55%)</title><rect x="37.5029%" y="805" width="0.5456%" height="15" fill="rgb(219,9,5)" fg:x="87732079" fg:w="1276318"/><text x="37.7529%" y="815.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,296,626 samples, 0.55%)</title><rect x="38.0485%" y="997" width="0.5543%" height="15" fill="rgb(254,171,16)" fg:x="89008397" fg:w="1296626"/><text x="38.2985%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,296,626 samples, 0.55%)</title><rect x="38.0485%" y="981" width="0.5543%" height="15" fill="rgb(230,171,20)" fg:x="89008397" fg:w="1296626"/><text x="38.2985%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,296,626 samples, 0.55%)</title><rect x="38.0485%" y="965" width="0.5543%" height="15" fill="rgb(210,71,41)" fg:x="89008397" fg:w="1296626"/><text x="38.2985%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (1,296,626 samples, 0.55%)</title><rect x="38.0485%" y="949" width="0.5543%" height="15" fill="rgb(206,173,20)" fg:x="89008397" fg:w="1296626"/><text x="38.2985%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,296,626 samples, 0.55%)</title><rect x="38.0485%" y="933" width="0.5543%" height="15" fill="rgb(233,88,34)" fg:x="89008397" fg:w="1296626"/><text x="38.2985%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,296,626 samples, 0.55%)</title><rect x="38.0485%" y="917" width="0.5543%" height="15" fill="rgb(223,209,46)" fg:x="89008397" fg:w="1296626"/><text x="38.2985%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,296,626 samples, 0.55%)</title><rect x="38.0485%" y="901" width="0.5543%" height="15" fill="rgb(250,43,18)" fg:x="89008397" fg:w="1296626"/><text x="38.2985%" y="911.50"></text></g><g><title>[libc.so.6] (1,296,626 samples, 0.55%)</title><rect x="38.0485%" y="885" width="0.5543%" height="15" fill="rgb(208,13,10)" fg:x="89008397" fg:w="1296626"/><text x="38.2985%" y="895.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (28,134,222 samples, 12.03%)</title><rect x="27.8432%" y="1013" width="12.0266%" height="15" fill="rgb(212,200,36)" fg:x="65134784" fg:w="28134222"/><text x="28.0932%" y="1023.50">&lt;css_bitvector_com..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,963,983 samples, 1.27%)</title><rect x="38.6028%" y="997" width="1.2670%" height="15" fill="rgb(225,90,30)" fg:x="90305023" fg:w="2963983"/><text x="38.8528%" y="1007.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,963,983 samples, 1.27%)</title><rect x="38.6028%" y="981" width="1.2670%" height="15" fill="rgb(236,182,39)" fg:x="90305023" fg:w="2963983"/><text x="38.8528%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (29,653,281 samples, 12.68%)</title><rect x="27.8432%" y="1077" width="12.6759%" height="15" fill="rgb(212,144,35)" fg:x="65134784" fg:w="29653281"/><text x="28.0932%" y="1087.50">&lt;alloc::vec::Vec&lt;T,..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29,653,281 samples, 12.68%)</title><rect x="27.8432%" y="1061" width="12.6759%" height="15" fill="rgb(228,63,44)" fg:x="65134784" fg:w="29653281"/><text x="28.0932%" y="1071.50">alloc::slice::&lt;impl..</text></g><g><title>alloc::slice::hack::to_vec (29,653,281 samples, 12.68%)</title><rect x="27.8432%" y="1045" width="12.6759%" height="15" fill="rgb(228,109,6)" fg:x="65134784" fg:w="29653281"/><text x="28.0932%" y="1055.50">alloc::slice::hack:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (29,653,281 samples, 12.68%)</title><rect x="27.8432%" y="1029" width="12.6759%" height="15" fill="rgb(238,117,24)" fg:x="65134784" fg:w="29653281"/><text x="28.0932%" y="1039.50">&lt;T as alloc::slice:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,519,059 samples, 0.65%)</title><rect x="39.8698%" y="1013" width="0.6494%" height="15" fill="rgb(242,26,26)" fg:x="93269006" fg:w="1519059"/><text x="40.1198%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,519,059 samples, 0.65%)</title><rect x="39.8698%" y="997" width="0.6494%" height="15" fill="rgb(221,92,48)" fg:x="93269006" fg:w="1519059"/><text x="40.1198%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,519,059 samples, 0.65%)</title><rect x="39.8698%" y="981" width="0.6494%" height="15" fill="rgb(209,209,32)" fg:x="93269006" fg:w="1519059"/><text x="40.1198%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,519,059 samples, 0.65%)</title><rect x="39.8698%" y="965" width="0.6494%" height="15" fill="rgb(221,70,22)" fg:x="93269006" fg:w="1519059"/><text x="40.1198%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,519,059 samples, 0.65%)</title><rect x="39.8698%" y="949" width="0.6494%" height="15" fill="rgb(248,145,5)" fg:x="93269006" fg:w="1519059"/><text x="40.1198%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,519,059 samples, 0.65%)</title><rect x="39.8698%" y="933" width="0.6494%" height="15" fill="rgb(226,116,26)" fg:x="93269006" fg:w="1519059"/><text x="40.1198%" y="943.50"></text></g><g><title>alloc::alloc::alloc (1,519,059 samples, 0.65%)</title><rect x="39.8698%" y="917" width="0.6494%" height="15" fill="rgb(244,5,17)" fg:x="93269006" fg:w="1519059"/><text x="40.1198%" y="927.50"></text></g><g><title>malloc (1,519,059 samples, 0.65%)</title><rect x="39.8698%" y="901" width="0.6494%" height="15" fill="rgb(252,159,33)" fg:x="93269006" fg:w="1519059"/><text x="40.1198%" y="911.50"></text></g><g><title>[libc.so.6] (1,519,059 samples, 0.65%)</title><rect x="39.8698%" y="885" width="0.6494%" height="15" fill="rgb(206,71,0)" fg:x="93269006" fg:w="1519059"/><text x="40.1198%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (32,209,866 samples, 13.77%)</title><rect x="27.2960%" y="1237" width="13.7688%" height="15" fill="rgb(233,118,54)" fg:x="63854549" fg:w="32209866"/><text x="27.5460%" y="1247.50">&lt;alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32,209,866 samples, 13.77%)</title><rect x="27.2960%" y="1221" width="13.7688%" height="15" fill="rgb(234,83,48)" fg:x="63854549" fg:w="32209866"/><text x="27.5460%" y="1231.50">alloc::slice::&lt;impl [..</text></g><g><title>alloc::slice::hack::to_vec (32,209,866 samples, 13.77%)</title><rect x="27.2960%" y="1205" width="13.7688%" height="15" fill="rgb(228,3,54)" fg:x="63854549" fg:w="32209866"/><text x="27.5460%" y="1215.50">alloc::slice::hack::t..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32,209,866 samples, 13.77%)</title><rect x="27.2960%" y="1189" width="13.7688%" height="15" fill="rgb(226,155,13)" fg:x="63854549" fg:w="32209866"/><text x="27.5460%" y="1199.50">&lt;T as alloc::slice::h..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (32,209,866 samples, 13.77%)</title><rect x="27.2960%" y="1173" width="13.7688%" height="15" fill="rgb(241,28,37)" fg:x="63854549" fg:w="32209866"/><text x="27.5460%" y="1183.50">&lt;css_bitvector_compil..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (30,929,631 samples, 13.22%)</title><rect x="27.8432%" y="1157" width="13.2215%" height="15" fill="rgb(233,93,10)" fg:x="65134784" fg:w="30929631"/><text x="28.0932%" y="1167.50">&lt;alloc::vec::Vec&lt;T,A..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (30,929,631 samples, 13.22%)</title><rect x="27.8432%" y="1141" width="13.2215%" height="15" fill="rgb(225,113,19)" fg:x="65134784" fg:w="30929631"/><text x="28.0932%" y="1151.50">alloc::slice::&lt;impl ..</text></g><g><title>alloc::slice::hack::to_vec (30,929,631 samples, 13.22%)</title><rect x="27.8432%" y="1125" width="13.2215%" height="15" fill="rgb(241,2,18)" fg:x="65134784" fg:w="30929631"/><text x="28.0932%" y="1135.50">alloc::slice::hack::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (30,929,631 samples, 13.22%)</title><rect x="27.8432%" y="1109" width="13.2215%" height="15" fill="rgb(228,207,21)" fg:x="65134784" fg:w="30929631"/><text x="28.0932%" y="1119.50">&lt;T as alloc::slice::..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (30,929,631 samples, 13.22%)</title><rect x="27.8432%" y="1093" width="13.2215%" height="15" fill="rgb(213,211,35)" fg:x="65134784" fg:w="30929631"/><text x="28.0932%" y="1103.50">&lt;css_bitvector_compi..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,276,350 samples, 0.55%)</title><rect x="40.5192%" y="1077" width="0.5456%" height="15" fill="rgb(209,83,10)" fg:x="94788065" fg:w="1276350"/><text x="40.7692%" y="1087.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,276,350 samples, 0.55%)</title><rect x="40.5192%" y="1061" width="0.5456%" height="15" fill="rgb(209,164,1)" fg:x="94788065" fg:w="1276350"/><text x="40.7692%" y="1071.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,276,350 samples, 0.55%)</title><rect x="40.5192%" y="1045" width="0.5456%" height="15" fill="rgb(213,184,43)" fg:x="94788065" fg:w="1276350"/><text x="40.7692%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,276,350 samples, 0.55%)</title><rect x="40.5192%" y="1029" width="0.5456%" height="15" fill="rgb(231,61,34)" fg:x="94788065" fg:w="1276350"/><text x="40.7692%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,276,350 samples, 0.55%)</title><rect x="40.5192%" y="1013" width="0.5456%" height="15" fill="rgb(235,75,3)" fg:x="94788065" fg:w="1276350"/><text x="40.7692%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,276,350 samples, 0.55%)</title><rect x="40.5192%" y="997" width="0.5456%" height="15" fill="rgb(220,106,47)" fg:x="94788065" fg:w="1276350"/><text x="40.7692%" y="1007.50"></text></g><g><title>core::clone::Clone::clone (1,276,350 samples, 0.55%)</title><rect x="40.5192%" y="981" width="0.5456%" height="15" fill="rgb(210,196,33)" fg:x="94788065" fg:w="1276350"/><text x="40.7692%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,276,350 samples, 0.55%)</title><rect x="40.5192%" y="965" width="0.5456%" height="15" fill="rgb(229,154,42)" fg:x="94788065" fg:w="1276350"/><text x="40.7692%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,276,350 samples, 0.55%)</title><rect x="40.5192%" y="949" width="0.5456%" height="15" fill="rgb(228,114,26)" fg:x="94788065" fg:w="1276350"/><text x="40.7692%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,276,350 samples, 0.55%)</title><rect x="40.5192%" y="933" width="0.5456%" height="15" fill="rgb(208,144,1)" fg:x="94788065" fg:w="1276350"/><text x="40.7692%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (1,276,350 samples, 0.55%)</title><rect x="40.5192%" y="917" width="0.5456%" height="15" fill="rgb(239,112,37)" fg:x="94788065" fg:w="1276350"/><text x="40.7692%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,276,350 samples, 0.55%)</title><rect x="40.5192%" y="901" width="0.5456%" height="15" fill="rgb(210,96,50)" fg:x="94788065" fg:w="1276350"/><text x="40.7692%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,276,350 samples, 0.55%)</title><rect x="40.5192%" y="885" width="0.5456%" height="15" fill="rgb(222,178,2)" fg:x="94788065" fg:w="1276350"/><text x="40.7692%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,276,350 samples, 0.55%)</title><rect x="40.5192%" y="869" width="0.5456%" height="15" fill="rgb(226,74,18)" fg:x="94788065" fg:w="1276350"/><text x="40.7692%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,276,350 samples, 0.55%)</title><rect x="40.5192%" y="853" width="0.5456%" height="15" fill="rgb(225,67,54)" fg:x="94788065" fg:w="1276350"/><text x="40.7692%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,276,350 samples, 0.55%)</title><rect x="40.5192%" y="837" width="0.5456%" height="15" fill="rgb(251,92,32)" fg:x="94788065" fg:w="1276350"/><text x="40.7692%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,276,350 samples, 0.55%)</title><rect x="40.5192%" y="821" width="0.5456%" height="15" fill="rgb(228,149,22)" fg:x="94788065" fg:w="1276350"/><text x="40.7692%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,276,350 samples, 0.55%)</title><rect x="40.5192%" y="805" width="0.5456%" height="15" fill="rgb(243,54,13)" fg:x="94788065" fg:w="1276350"/><text x="40.7692%" y="815.50"></text></g><g><title>alloc::alloc::alloc (1,276,350 samples, 0.55%)</title><rect x="40.5192%" y="789" width="0.5456%" height="15" fill="rgb(243,180,28)" fg:x="94788065" fg:w="1276350"/><text x="40.7692%" y="799.50"></text></g><g><title>malloc (1,276,350 samples, 0.55%)</title><rect x="40.5192%" y="773" width="0.5456%" height="15" fill="rgb(208,167,24)" fg:x="94788065" fg:w="1276350"/><text x="40.7692%" y="783.50"></text></g><g><title>[libc.so.6] (1,276,350 samples, 0.55%)</title><rect x="40.5192%" y="757" width="0.5456%" height="15" fill="rgb(245,73,45)" fg:x="94788065" fg:w="1276350"/><text x="40.7692%" y="767.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,788,871 samples, 1.19%)</title><rect x="41.0648%" y="1237" width="1.1922%" height="15" fill="rgb(237,203,48)" fg:x="96064415" fg:w="2788871"/><text x="41.3148%" y="1247.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,794,079 samples, 1.19%)</title><rect x="42.2569%" y="1237" width="1.1944%" height="15" fill="rgb(211,197,16)" fg:x="98853286" fg:w="2794079"/><text x="42.5069%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,794,079 samples, 1.19%)</title><rect x="42.2569%" y="1221" width="1.1944%" height="15" fill="rgb(243,99,51)" fg:x="98853286" fg:w="2794079"/><text x="42.5069%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,794,079 samples, 1.19%)</title><rect x="42.2569%" y="1205" width="1.1944%" height="15" fill="rgb(215,123,29)" fg:x="98853286" fg:w="2794079"/><text x="42.5069%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (2,794,079 samples, 1.19%)</title><rect x="42.2569%" y="1189" width="1.1944%" height="15" fill="rgb(239,186,37)" fg:x="98853286" fg:w="2794079"/><text x="42.5069%" y="1199.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,794,079 samples, 1.19%)</title><rect x="42.2569%" y="1173" width="1.1944%" height="15" fill="rgb(252,136,39)" fg:x="98853286" fg:w="2794079"/><text x="42.5069%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,794,079 samples, 1.19%)</title><rect x="42.2569%" y="1157" width="1.1944%" height="15" fill="rgb(223,213,32)" fg:x="98853286" fg:w="2794079"/><text x="42.5069%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,794,079 samples, 1.19%)</title><rect x="42.2569%" y="1141" width="1.1944%" height="15" fill="rgb(233,115,5)" fg:x="98853286" fg:w="2794079"/><text x="42.5069%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,794,079 samples, 1.19%)</title><rect x="42.2569%" y="1125" width="1.1944%" height="15" fill="rgb(207,226,44)" fg:x="98853286" fg:w="2794079"/><text x="42.5069%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,794,079 samples, 1.19%)</title><rect x="42.2569%" y="1109" width="1.1944%" height="15" fill="rgb(208,126,0)" fg:x="98853286" fg:w="2794079"/><text x="42.5069%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,794,079 samples, 1.19%)</title><rect x="42.2569%" y="1093" width="1.1944%" height="15" fill="rgb(244,66,21)" fg:x="98853286" fg:w="2794079"/><text x="42.5069%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,794,079 samples, 1.19%)</title><rect x="42.2569%" y="1077" width="1.1944%" height="15" fill="rgb(222,97,12)" fg:x="98853286" fg:w="2794079"/><text x="42.5069%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (2,794,079 samples, 1.19%)</title><rect x="42.2569%" y="1061" width="1.1944%" height="15" fill="rgb(219,213,19)" fg:x="98853286" fg:w="2794079"/><text x="42.5069%" y="1071.50"></text></g><g><title>malloc (2,794,079 samples, 1.19%)</title><rect x="42.2569%" y="1045" width="1.1944%" height="15" fill="rgb(252,169,30)" fg:x="98853286" fg:w="2794079"/><text x="42.5069%" y="1055.50"></text></g><g><title>[libc.so.6] (2,794,079 samples, 1.19%)</title><rect x="42.2569%" y="1029" width="1.1944%" height="15" fill="rgb(206,32,51)" fg:x="98853286" fg:w="2794079"/><text x="42.5069%" y="1039.50"></text></g><g><title>core::clone::Clone::clone (2,769,162 samples, 1.18%)</title><rect x="43.4513%" y="1141" width="1.1837%" height="15" fill="rgb(250,172,42)" fg:x="101647365" fg:w="2769162"/><text x="43.7013%" y="1151.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,769,162 samples, 1.18%)</title><rect x="43.4513%" y="1125" width="1.1837%" height="15" fill="rgb(209,34,43)" fg:x="101647365" fg:w="2769162"/><text x="43.7013%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,489,650 samples, 0.64%)</title><rect x="43.9983%" y="1109" width="0.6368%" height="15" fill="rgb(223,11,35)" fg:x="102926877" fg:w="1489650"/><text x="44.2483%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,489,650 samples, 0.64%)</title><rect x="43.9983%" y="1093" width="0.6368%" height="15" fill="rgb(251,219,26)" fg:x="102926877" fg:w="1489650"/><text x="44.2483%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (1,489,650 samples, 0.64%)</title><rect x="43.9983%" y="1077" width="0.6368%" height="15" fill="rgb(231,119,3)" fg:x="102926877" fg:w="1489650"/><text x="44.2483%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,489,650 samples, 0.64%)</title><rect x="43.9983%" y="1061" width="0.6368%" height="15" fill="rgb(216,97,11)" fg:x="102926877" fg:w="1489650"/><text x="44.2483%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,489,650 samples, 0.64%)</title><rect x="43.9983%" y="1045" width="0.6368%" height="15" fill="rgb(223,59,9)" fg:x="102926877" fg:w="1489650"/><text x="44.2483%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,489,650 samples, 0.64%)</title><rect x="43.9983%" y="1029" width="0.6368%" height="15" fill="rgb(233,93,31)" fg:x="102926877" fg:w="1489650"/><text x="44.2483%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,489,650 samples, 0.64%)</title><rect x="43.9983%" y="1013" width="0.6368%" height="15" fill="rgb(239,81,33)" fg:x="102926877" fg:w="1489650"/><text x="44.2483%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,489,650 samples, 0.64%)</title><rect x="43.9983%" y="997" width="0.6368%" height="15" fill="rgb(213,120,34)" fg:x="102926877" fg:w="1489650"/><text x="44.2483%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,489,650 samples, 0.64%)</title><rect x="43.9983%" y="981" width="0.6368%" height="15" fill="rgb(243,49,53)" fg:x="102926877" fg:w="1489650"/><text x="44.2483%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,489,650 samples, 0.64%)</title><rect x="43.9983%" y="965" width="0.6368%" height="15" fill="rgb(247,216,33)" fg:x="102926877" fg:w="1489650"/><text x="44.2483%" y="975.50"></text></g><g><title>alloc::alloc::alloc (1,489,650 samples, 0.64%)</title><rect x="43.9983%" y="949" width="0.6368%" height="15" fill="rgb(226,26,14)" fg:x="102926877" fg:w="1489650"/><text x="44.2483%" y="959.50"></text></g><g><title>malloc (1,489,650 samples, 0.64%)</title><rect x="43.9983%" y="933" width="0.6368%" height="15" fill="rgb(215,49,53)" fg:x="102926877" fg:w="1489650"/><text x="44.2483%" y="943.50"></text></g><g><title>[libc.so.6] (1,489,650 samples, 0.64%)</title><rect x="43.9983%" y="917" width="0.6368%" height="15" fill="rgb(245,162,40)" fg:x="102926877" fg:w="1489650"/><text x="44.2483%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1,332,632 samples, 0.57%)</title><rect x="44.6351%" y="1141" width="0.5697%" height="15" fill="rgb(229,68,17)" fg:x="104416527" fg:w="1332632"/><text x="44.8851%" y="1151.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,332,632 samples, 0.57%)</title><rect x="44.6351%" y="1125" width="0.5697%" height="15" fill="rgb(213,182,10)" fg:x="104416527" fg:w="1332632"/><text x="44.8851%" y="1135.50"></text></g><g><title>[libc.so.6] (1,332,632 samples, 0.57%)</title><rect x="44.6351%" y="1109" width="0.5697%" height="15" fill="rgb(245,125,30)" fg:x="104416527" fg:w="1332632"/><text x="44.8851%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (44,547,116 samples, 19.04%)</title><rect x="26.7094%" y="1317" width="19.0426%" height="15" fill="rgb(232,202,2)" fg:x="62482236" fg:w="44547116"/><text x="26.9594%" y="1327.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (44,547,116 samples, 19.04%)</title><rect x="26.7094%" y="1301" width="19.0426%" height="15" fill="rgb(237,140,51)" fg:x="62482236" fg:w="44547116"/><text x="26.9594%" y="1311.50">alloc::slice::&lt;impl [T]&gt;::to_v..</text></g><g><title>alloc::slice::hack::to_vec (44,547,116 samples, 19.04%)</title><rect x="26.7094%" y="1285" width="19.0426%" height="15" fill="rgb(236,157,25)" fg:x="62482236" fg:w="44547116"/><text x="26.9594%" y="1295.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (44,547,116 samples, 19.04%)</title><rect x="26.7094%" y="1269" width="19.0426%" height="15" fill="rgb(219,209,0)" fg:x="62482236" fg:w="44547116"/><text x="26.9594%" y="1279.50">&lt;T as alloc::slice::hack::Conv..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (44,547,116 samples, 19.04%)</title><rect x="26.7094%" y="1253" width="19.0426%" height="15" fill="rgb(240,116,54)" fg:x="62482236" fg:w="44547116"/><text x="26.9594%" y="1263.50">&lt;css_bitvector_compiler::HtmlN..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (5,381,987 samples, 2.30%)</title><rect x="43.4513%" y="1237" width="2.3006%" height="15" fill="rgb(216,10,36)" fg:x="101647365" fg:w="5381987"/><text x="43.7013%" y="1247.50">&lt;..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (5,381,987 samples, 2.30%)</title><rect x="43.4513%" y="1221" width="2.3006%" height="15" fill="rgb(222,72,44)" fg:x="101647365" fg:w="5381987"/><text x="43.7013%" y="1231.50">&lt;..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5,381,987 samples, 2.30%)</title><rect x="43.4513%" y="1205" width="2.3006%" height="15" fill="rgb(232,159,9)" fg:x="101647365" fg:w="5381987"/><text x="43.7013%" y="1215.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,381,987 samples, 2.30%)</title><rect x="43.4513%" y="1189" width="2.3006%" height="15" fill="rgb(210,39,32)" fg:x="101647365" fg:w="5381987"/><text x="43.7013%" y="1199.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (5,381,987 samples, 2.30%)</title><rect x="43.4513%" y="1173" width="2.3006%" height="15" fill="rgb(216,194,45)" fg:x="101647365" fg:w="5381987"/><text x="43.7013%" y="1183.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (5,381,987 samples, 2.30%)</title><rect x="43.4513%" y="1157" width="2.3006%" height="15" fill="rgb(218,18,35)" fg:x="101647365" fg:w="5381987"/><text x="43.7013%" y="1167.50">h..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1,280,193 samples, 0.55%)</title><rect x="45.2047%" y="1141" width="0.5472%" height="15" fill="rgb(207,83,51)" fg:x="105749159" fg:w="1280193"/><text x="45.4547%" y="1151.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1,280,193 samples, 0.55%)</title><rect x="45.2047%" y="1125" width="0.5472%" height="15" fill="rgb(225,63,43)" fg:x="105749159" fg:w="1280193"/><text x="45.4547%" y="1135.50"></text></g><g><title>core::ptr::write (1,280,193 samples, 0.55%)</title><rect x="45.2047%" y="1109" width="0.5472%" height="15" fill="rgb(207,57,36)" fg:x="105749159" fg:w="1280193"/><text x="45.4547%" y="1119.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,035,472 samples, 0.44%)</title><rect x="45.7520%" y="1317" width="0.4426%" height="15" fill="rgb(216,99,33)" fg:x="107029352" fg:w="1035472"/><text x="46.0020%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,035,472 samples, 0.44%)</title><rect x="45.7520%" y="1301" width="0.4426%" height="15" fill="rgb(225,42,16)" fg:x="107029352" fg:w="1035472"/><text x="46.0020%" y="1311.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,035,472 samples, 0.44%)</title><rect x="45.7520%" y="1285" width="0.4426%" height="15" fill="rgb(220,201,45)" fg:x="107029352" fg:w="1035472"/><text x="46.0020%" y="1295.50"></text></g><g><title>alloc::slice::hack::to_vec (1,035,472 samples, 0.44%)</title><rect x="45.7520%" y="1269" width="0.4426%" height="15" fill="rgb(225,33,4)" fg:x="107029352" fg:w="1035472"/><text x="46.0020%" y="1279.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,035,472 samples, 0.44%)</title><rect x="45.7520%" y="1253" width="0.4426%" height="15" fill="rgb(224,33,50)" fg:x="107029352" fg:w="1035472"/><text x="46.0020%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,035,472 samples, 0.44%)</title><rect x="45.7520%" y="1237" width="0.4426%" height="15" fill="rgb(246,198,51)" fg:x="107029352" fg:w="1035472"/><text x="46.0020%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,035,472 samples, 0.44%)</title><rect x="45.7520%" y="1221" width="0.4426%" height="15" fill="rgb(205,22,4)" fg:x="107029352" fg:w="1035472"/><text x="46.0020%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,035,472 samples, 0.44%)</title><rect x="45.7520%" y="1205" width="0.4426%" height="15" fill="rgb(206,3,8)" fg:x="107029352" fg:w="1035472"/><text x="46.0020%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,035,472 samples, 0.44%)</title><rect x="45.7520%" y="1189" width="0.4426%" height="15" fill="rgb(251,23,15)" fg:x="107029352" fg:w="1035472"/><text x="46.0020%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,035,472 samples, 0.44%)</title><rect x="45.7520%" y="1173" width="0.4426%" height="15" fill="rgb(252,88,28)" fg:x="107029352" fg:w="1035472"/><text x="46.0020%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,035,472 samples, 0.44%)</title><rect x="45.7520%" y="1157" width="0.4426%" height="15" fill="rgb(212,127,14)" fg:x="107029352" fg:w="1035472"/><text x="46.0020%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (1,035,472 samples, 0.44%)</title><rect x="45.7520%" y="1141" width="0.4426%" height="15" fill="rgb(247,145,37)" fg:x="107029352" fg:w="1035472"/><text x="46.0020%" y="1151.50"></text></g><g><title>malloc (1,035,472 samples, 0.44%)</title><rect x="45.7520%" y="1125" width="0.4426%" height="15" fill="rgb(209,117,53)" fg:x="107029352" fg:w="1035472"/><text x="46.0020%" y="1135.50"></text></g><g><title>[libc.so.6] (1,035,472 samples, 0.44%)</title><rect x="45.7520%" y="1109" width="0.4426%" height="15" fill="rgb(212,90,42)" fg:x="107029352" fg:w="1035472"/><text x="46.0020%" y="1119.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (48,004,038 samples, 20.52%)</title><rect x="26.7094%" y="1333" width="20.5203%" height="15" fill="rgb(218,164,37)" fg:x="62482236" fg:w="48004038"/><text x="26.9594%" y="1343.50">&lt;css_bitvector_compiler::HtmlNod..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,421,450 samples, 1.04%)</title><rect x="46.1946%" y="1317" width="1.0351%" height="15" fill="rgb(246,65,34)" fg:x="108064824" fg:w="2421450"/><text x="46.4446%" y="1327.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,421,450 samples, 1.04%)</title><rect x="46.1946%" y="1301" width="1.0351%" height="15" fill="rgb(231,100,33)" fg:x="108064824" fg:w="2421450"/><text x="46.4446%" y="1311.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,421,450 samples, 1.04%)</title><rect x="46.1946%" y="1285" width="1.0351%" height="15" fill="rgb(228,126,14)" fg:x="108064824" fg:w="2421450"/><text x="46.4446%" y="1295.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,421,450 samples, 1.04%)</title><rect x="46.1946%" y="1269" width="1.0351%" height="15" fill="rgb(215,173,21)" fg:x="108064824" fg:w="2421450"/><text x="46.4446%" y="1279.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,421,450 samples, 1.04%)</title><rect x="46.1946%" y="1253" width="1.0351%" height="15" fill="rgb(210,6,40)" fg:x="108064824" fg:w="2421450"/><text x="46.4446%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,421,450 samples, 1.04%)</title><rect x="46.1946%" y="1237" width="1.0351%" height="15" fill="rgb(212,48,18)" fg:x="108064824" fg:w="2421450"/><text x="46.4446%" y="1247.50"></text></g><g><title>core::clone::Clone::clone (2,421,450 samples, 1.04%)</title><rect x="46.1946%" y="1221" width="1.0351%" height="15" fill="rgb(230,214,11)" fg:x="108064824" fg:w="2421450"/><text x="46.4446%" y="1231.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,421,450 samples, 1.04%)</title><rect x="46.1946%" y="1205" width="1.0351%" height="15" fill="rgb(254,105,39)" fg:x="108064824" fg:w="2421450"/><text x="46.4446%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,421,450 samples, 1.04%)</title><rect x="46.1946%" y="1189" width="1.0351%" height="15" fill="rgb(245,158,5)" fg:x="108064824" fg:w="2421450"/><text x="46.4446%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,421,450 samples, 1.04%)</title><rect x="46.1946%" y="1173" width="1.0351%" height="15" fill="rgb(249,208,11)" fg:x="108064824" fg:w="2421450"/><text x="46.4446%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (2,421,450 samples, 1.04%)</title><rect x="46.1946%" y="1157" width="1.0351%" height="15" fill="rgb(210,39,28)" fg:x="108064824" fg:w="2421450"/><text x="46.4446%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,421,450 samples, 1.04%)</title><rect x="46.1946%" y="1141" width="1.0351%" height="15" fill="rgb(211,56,53)" fg:x="108064824" fg:w="2421450"/><text x="46.4446%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,421,450 samples, 1.04%)</title><rect x="46.1946%" y="1125" width="1.0351%" height="15" fill="rgb(226,201,30)" fg:x="108064824" fg:w="2421450"/><text x="46.4446%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,421,450 samples, 1.04%)</title><rect x="46.1946%" y="1109" width="1.0351%" height="15" fill="rgb(239,101,34)" fg:x="108064824" fg:w="2421450"/><text x="46.4446%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,421,450 samples, 1.04%)</title><rect x="46.1946%" y="1093" width="1.0351%" height="15" fill="rgb(226,209,5)" fg:x="108064824" fg:w="2421450"/><text x="46.4446%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,421,450 samples, 1.04%)</title><rect x="46.1946%" y="1077" width="1.0351%" height="15" fill="rgb(250,105,47)" fg:x="108064824" fg:w="2421450"/><text x="46.4446%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,421,450 samples, 1.04%)</title><rect x="46.1946%" y="1061" width="1.0351%" height="15" fill="rgb(230,72,3)" fg:x="108064824" fg:w="2421450"/><text x="46.4446%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,421,450 samples, 1.04%)</title><rect x="46.1946%" y="1045" width="1.0351%" height="15" fill="rgb(232,218,39)" fg:x="108064824" fg:w="2421450"/><text x="46.4446%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (2,421,450 samples, 1.04%)</title><rect x="46.1946%" y="1029" width="1.0351%" height="15" fill="rgb(248,166,6)" fg:x="108064824" fg:w="2421450"/><text x="46.4446%" y="1039.50"></text></g><g><title>malloc (2,421,450 samples, 1.04%)</title><rect x="46.1946%" y="1013" width="1.0351%" height="15" fill="rgb(247,89,20)" fg:x="108064824" fg:w="2421450"/><text x="46.4446%" y="1023.50"></text></g><g><title>[libc.so.6] (2,421,450 samples, 1.04%)</title><rect x="46.1946%" y="997" width="1.0351%" height="15" fill="rgb(248,130,54)" fg:x="108064824" fg:w="2421450"/><text x="46.4446%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (49,176,672 samples, 21.02%)</title><rect x="26.7094%" y="1397" width="21.0216%" height="15" fill="rgb(234,196,4)" fg:x="62482236" fg:w="49176672"/><text x="26.9594%" y="1407.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::cl..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (49,176,672 samples, 21.02%)</title><rect x="26.7094%" y="1381" width="21.0216%" height="15" fill="rgb(250,143,31)" fg:x="62482236" fg:w="49176672"/><text x="26.9594%" y="1391.50">alloc::slice::&lt;impl [T]&gt;::to_vec_..</text></g><g><title>alloc::slice::hack::to_vec (49,176,672 samples, 21.02%)</title><rect x="26.7094%" y="1365" width="21.0216%" height="15" fill="rgb(211,110,34)" fg:x="62482236" fg:w="49176672"/><text x="26.9594%" y="1375.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (49,176,672 samples, 21.02%)</title><rect x="26.7094%" y="1349" width="21.0216%" height="15" fill="rgb(215,124,48)" fg:x="62482236" fg:w="49176672"/><text x="26.9594%" y="1359.50">&lt;T as alloc::slice::hack::Convert..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,172,634 samples, 0.50%)</title><rect x="47.2297%" y="1333" width="0.5013%" height="15" fill="rgb(216,46,13)" fg:x="110486274" fg:w="1172634"/><text x="47.4797%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,172,634 samples, 0.50%)</title><rect x="47.2297%" y="1317" width="0.5013%" height="15" fill="rgb(205,184,25)" fg:x="110486274" fg:w="1172634"/><text x="47.4797%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,172,634 samples, 0.50%)</title><rect x="47.2297%" y="1301" width="0.5013%" height="15" fill="rgb(228,1,10)" fg:x="110486274" fg:w="1172634"/><text x="47.4797%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,172,634 samples, 0.50%)</title><rect x="47.2297%" y="1285" width="0.5013%" height="15" fill="rgb(213,116,27)" fg:x="110486274" fg:w="1172634"/><text x="47.4797%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,172,634 samples, 0.50%)</title><rect x="47.2297%" y="1269" width="0.5013%" height="15" fill="rgb(241,95,50)" fg:x="110486274" fg:w="1172634"/><text x="47.4797%" y="1279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,172,634 samples, 0.50%)</title><rect x="47.2297%" y="1253" width="0.5013%" height="15" fill="rgb(238,48,32)" fg:x="110486274" fg:w="1172634"/><text x="47.4797%" y="1263.50"></text></g><g><title>alloc::alloc::alloc (1,172,634 samples, 0.50%)</title><rect x="47.2297%" y="1237" width="0.5013%" height="15" fill="rgb(235,113,49)" fg:x="110486274" fg:w="1172634"/><text x="47.4797%" y="1247.50"></text></g><g><title>malloc (1,172,634 samples, 0.50%)</title><rect x="47.2297%" y="1221" width="0.5013%" height="15" fill="rgb(205,127,43)" fg:x="110486274" fg:w="1172634"/><text x="47.4797%" y="1231.50"></text></g><g><title>[libc.so.6] (1,172,634 samples, 0.50%)</title><rect x="47.2297%" y="1205" width="0.5013%" height="15" fill="rgb(250,162,2)" fg:x="110486274" fg:w="1172634"/><text x="47.4797%" y="1215.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (50,661,991 samples, 21.66%)</title><rect x="26.7094%" y="1413" width="21.6565%" height="15" fill="rgb(220,13,41)" fg:x="62482236" fg:w="50661991"/><text x="26.9594%" y="1423.50">&lt;css_bitvector_compiler::HtmlNode ..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,485,319 samples, 0.63%)</title><rect x="47.7310%" y="1397" width="0.6349%" height="15" fill="rgb(249,221,25)" fg:x="111658908" fg:w="1485319"/><text x="47.9810%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,485,319 samples, 0.63%)</title><rect x="47.7310%" y="1381" width="0.6349%" height="15" fill="rgb(215,208,19)" fg:x="111658908" fg:w="1485319"/><text x="47.9810%" y="1391.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,485,319 samples, 0.63%)</title><rect x="47.7310%" y="1365" width="0.6349%" height="15" fill="rgb(236,175,2)" fg:x="111658908" fg:w="1485319"/><text x="47.9810%" y="1375.50"></text></g><g><title>alloc::slice::hack::to_vec (1,485,319 samples, 0.63%)</title><rect x="47.7310%" y="1349" width="0.6349%" height="15" fill="rgb(241,52,2)" fg:x="111658908" fg:w="1485319"/><text x="47.9810%" y="1359.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,485,319 samples, 0.63%)</title><rect x="47.7310%" y="1333" width="0.6349%" height="15" fill="rgb(248,140,14)" fg:x="111658908" fg:w="1485319"/><text x="47.9810%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,485,319 samples, 0.63%)</title><rect x="47.7310%" y="1317" width="0.6349%" height="15" fill="rgb(253,22,42)" fg:x="111658908" fg:w="1485319"/><text x="47.9810%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,485,319 samples, 0.63%)</title><rect x="47.7310%" y="1301" width="0.6349%" height="15" fill="rgb(234,61,47)" fg:x="111658908" fg:w="1485319"/><text x="47.9810%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,485,319 samples, 0.63%)</title><rect x="47.7310%" y="1285" width="0.6349%" height="15" fill="rgb(208,226,15)" fg:x="111658908" fg:w="1485319"/><text x="47.9810%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,485,319 samples, 0.63%)</title><rect x="47.7310%" y="1269" width="0.6349%" height="15" fill="rgb(217,221,4)" fg:x="111658908" fg:w="1485319"/><text x="47.9810%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,485,319 samples, 0.63%)</title><rect x="47.7310%" y="1253" width="0.6349%" height="15" fill="rgb(212,174,34)" fg:x="111658908" fg:w="1485319"/><text x="47.9810%" y="1263.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,485,319 samples, 0.63%)</title><rect x="47.7310%" y="1237" width="0.6349%" height="15" fill="rgb(253,83,4)" fg:x="111658908" fg:w="1485319"/><text x="47.9810%" y="1247.50"></text></g><g><title>alloc::alloc::alloc (1,485,319 samples, 0.63%)</title><rect x="47.7310%" y="1221" width="0.6349%" height="15" fill="rgb(250,195,49)" fg:x="111658908" fg:w="1485319"/><text x="47.9810%" y="1231.50"></text></g><g><title>malloc (1,485,319 samples, 0.63%)</title><rect x="47.7310%" y="1205" width="0.6349%" height="15" fill="rgb(241,192,25)" fg:x="111658908" fg:w="1485319"/><text x="47.9810%" y="1215.50"></text></g><g><title>[libc.so.6] (1,485,319 samples, 0.63%)</title><rect x="47.7310%" y="1189" width="0.6349%" height="15" fill="rgb(208,124,10)" fg:x="111658908" fg:w="1485319"/><text x="47.9810%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (51,931,516 samples, 22.20%)</title><rect x="26.7094%" y="1477" width="22.1992%" height="15" fill="rgb(222,33,0)" fg:x="62482236" fg:w="51931516"/><text x="26.9594%" y="1487.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clon..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (51,931,516 samples, 22.20%)</title><rect x="26.7094%" y="1461" width="22.1992%" height="15" fill="rgb(234,209,28)" fg:x="62482236" fg:w="51931516"/><text x="26.9594%" y="1471.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (51,931,516 samples, 22.20%)</title><rect x="26.7094%" y="1445" width="22.1992%" height="15" fill="rgb(224,11,23)" fg:x="62482236" fg:w="51931516"/><text x="26.9594%" y="1455.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (51,931,516 samples, 22.20%)</title><rect x="26.7094%" y="1429" width="22.1992%" height="15" fill="rgb(232,99,1)" fg:x="62482236" fg:w="51931516"/><text x="26.9594%" y="1439.50">&lt;T as alloc::slice::hack::ConvertVe..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,269,525 samples, 0.54%)</title><rect x="48.3659%" y="1413" width="0.5427%" height="15" fill="rgb(237,95,45)" fg:x="113144227" fg:w="1269525"/><text x="48.6159%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,269,525 samples, 0.54%)</title><rect x="48.3659%" y="1397" width="0.5427%" height="15" fill="rgb(208,109,11)" fg:x="113144227" fg:w="1269525"/><text x="48.6159%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,269,525 samples, 0.54%)</title><rect x="48.3659%" y="1381" width="0.5427%" height="15" fill="rgb(216,190,48)" fg:x="113144227" fg:w="1269525"/><text x="48.6159%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,269,525 samples, 0.54%)</title><rect x="48.3659%" y="1365" width="0.5427%" height="15" fill="rgb(251,171,36)" fg:x="113144227" fg:w="1269525"/><text x="48.6159%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,269,525 samples, 0.54%)</title><rect x="48.3659%" y="1349" width="0.5427%" height="15" fill="rgb(230,62,22)" fg:x="113144227" fg:w="1269525"/><text x="48.6159%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,269,525 samples, 0.54%)</title><rect x="48.3659%" y="1333" width="0.5427%" height="15" fill="rgb(225,114,35)" fg:x="113144227" fg:w="1269525"/><text x="48.6159%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (1,269,525 samples, 0.54%)</title><rect x="48.3659%" y="1317" width="0.5427%" height="15" fill="rgb(215,118,42)" fg:x="113144227" fg:w="1269525"/><text x="48.6159%" y="1327.50"></text></g><g><title>malloc (1,269,525 samples, 0.54%)</title><rect x="48.3659%" y="1301" width="0.5427%" height="15" fill="rgb(243,119,21)" fg:x="113144227" fg:w="1269525"/><text x="48.6159%" y="1311.50"></text></g><g><title>[libc.so.6] (1,269,525 samples, 0.54%)</title><rect x="48.3659%" y="1285" width="0.5427%" height="15" fill="rgb(252,177,53)" fg:x="113144227" fg:w="1269525"/><text x="48.6159%" y="1295.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (57,076,235 samples, 24.40%)</title><rect x="25.0747%" y="1493" width="24.3984%" height="15" fill="rgb(237,209,29)" fg:x="58658336" fg:w="57076235"/><text x="25.3247%" y="1503.50">&lt;css_bitvector_compiler::HtmlNode as co..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,320,819 samples, 0.56%)</title><rect x="48.9086%" y="1477" width="0.5646%" height="15" fill="rgb(212,65,23)" fg:x="114413752" fg:w="1320819"/><text x="49.1586%" y="1487.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,320,819 samples, 0.56%)</title><rect x="48.9086%" y="1461" width="0.5646%" height="15" fill="rgb(230,222,46)" fg:x="114413752" fg:w="1320819"/><text x="49.1586%" y="1471.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,320,819 samples, 0.56%)</title><rect x="48.9086%" y="1445" width="0.5646%" height="15" fill="rgb(215,135,32)" fg:x="114413752" fg:w="1320819"/><text x="49.1586%" y="1455.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,320,819 samples, 0.56%)</title><rect x="48.9086%" y="1429" width="0.5646%" height="15" fill="rgb(246,101,22)" fg:x="114413752" fg:w="1320819"/><text x="49.1586%" y="1439.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,320,819 samples, 0.56%)</title><rect x="48.9086%" y="1413" width="0.5646%" height="15" fill="rgb(206,107,13)" fg:x="114413752" fg:w="1320819"/><text x="49.1586%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,320,819 samples, 0.56%)</title><rect x="48.9086%" y="1397" width="0.5646%" height="15" fill="rgb(250,100,44)" fg:x="114413752" fg:w="1320819"/><text x="49.1586%" y="1407.50"></text></g><g><title>core::clone::Clone::clone (1,320,819 samples, 0.56%)</title><rect x="48.9086%" y="1381" width="0.5646%" height="15" fill="rgb(231,147,38)" fg:x="114413752" fg:w="1320819"/><text x="49.1586%" y="1391.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,320,819 samples, 0.56%)</title><rect x="48.9086%" y="1365" width="0.5646%" height="15" fill="rgb(229,8,40)" fg:x="114413752" fg:w="1320819"/><text x="49.1586%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,320,819 samples, 0.56%)</title><rect x="48.9086%" y="1349" width="0.5646%" height="15" fill="rgb(221,135,30)" fg:x="114413752" fg:w="1320819"/><text x="49.1586%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,320,819 samples, 0.56%)</title><rect x="48.9086%" y="1333" width="0.5646%" height="15" fill="rgb(249,193,18)" fg:x="114413752" fg:w="1320819"/><text x="49.1586%" y="1343.50"></text></g><g><title>alloc::slice::hack::to_vec (1,320,819 samples, 0.56%)</title><rect x="48.9086%" y="1317" width="0.5646%" height="15" fill="rgb(209,133,39)" fg:x="114413752" fg:w="1320819"/><text x="49.1586%" y="1327.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,320,819 samples, 0.56%)</title><rect x="48.9086%" y="1301" width="0.5646%" height="15" fill="rgb(232,100,14)" fg:x="114413752" fg:w="1320819"/><text x="49.1586%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,320,819 samples, 0.56%)</title><rect x="48.9086%" y="1285" width="0.5646%" height="15" fill="rgb(224,185,1)" fg:x="114413752" fg:w="1320819"/><text x="49.1586%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,320,819 samples, 0.56%)</title><rect x="48.9086%" y="1269" width="0.5646%" height="15" fill="rgb(223,139,8)" fg:x="114413752" fg:w="1320819"/><text x="49.1586%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,320,819 samples, 0.56%)</title><rect x="48.9086%" y="1253" width="0.5646%" height="15" fill="rgb(232,213,38)" fg:x="114413752" fg:w="1320819"/><text x="49.1586%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,320,819 samples, 0.56%)</title><rect x="48.9086%" y="1237" width="0.5646%" height="15" fill="rgb(207,94,22)" fg:x="114413752" fg:w="1320819"/><text x="49.1586%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,320,819 samples, 0.56%)</title><rect x="48.9086%" y="1221" width="0.5646%" height="15" fill="rgb(219,183,54)" fg:x="114413752" fg:w="1320819"/><text x="49.1586%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,320,819 samples, 0.56%)</title><rect x="48.9086%" y="1205" width="0.5646%" height="15" fill="rgb(216,185,54)" fg:x="114413752" fg:w="1320819"/><text x="49.1586%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (1,320,819 samples, 0.56%)</title><rect x="48.9086%" y="1189" width="0.5646%" height="15" fill="rgb(254,217,39)" fg:x="114413752" fg:w="1320819"/><text x="49.1586%" y="1199.50"></text></g><g><title>malloc (1,320,819 samples, 0.56%)</title><rect x="48.9086%" y="1173" width="0.5646%" height="15" fill="rgb(240,178,23)" fg:x="114413752" fg:w="1320819"/><text x="49.1586%" y="1183.50"></text></g><g><title>[libc.so.6] (1,320,819 samples, 0.56%)</title><rect x="48.9086%" y="1157" width="0.5646%" height="15" fill="rgb(218,11,47)" fg:x="114413752" fg:w="1320819"/><text x="49.1586%" y="1167.50"></text></g><g><title>__rdl_alloc (1,310,542 samples, 0.56%)</title><rect x="50.0167%" y="1381" width="0.5602%" height="15" fill="rgb(218,51,51)" fg:x="117005997" fg:w="1310542"/><text x="50.2667%" y="1391.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,310,542 samples, 0.56%)</title><rect x="50.0167%" y="1365" width="0.5602%" height="15" fill="rgb(238,126,27)" fg:x="117005997" fg:w="1310542"/><text x="50.2667%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (62,689,226 samples, 26.80%)</title><rect x="25.0747%" y="1557" width="26.7978%" height="15" fill="rgb(249,202,22)" fg:x="58658336" fg:w="62689226"/><text x="25.3247%" y="1567.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (62,689,226 samples, 26.80%)</title><rect x="25.0747%" y="1541" width="26.7978%" height="15" fill="rgb(254,195,49)" fg:x="58658336" fg:w="62689226"/><text x="25.3247%" y="1551.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (62,689,226 samples, 26.80%)</title><rect x="25.0747%" y="1525" width="26.7978%" height="15" fill="rgb(208,123,14)" fg:x="58658336" fg:w="62689226"/><text x="25.3247%" y="1535.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (62,689,226 samples, 26.80%)</title><rect x="25.0747%" y="1509" width="26.7978%" height="15" fill="rgb(224,200,8)" fg:x="58658336" fg:w="62689226"/><text x="25.3247%" y="1519.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_v..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,612,991 samples, 2.40%)</title><rect x="49.4732%" y="1493" width="2.3994%" height="15" fill="rgb(217,61,36)" fg:x="115734571" fg:w="5612991"/><text x="49.7232%" y="1503.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,612,991 samples, 2.40%)</title><rect x="49.4732%" y="1477" width="2.3994%" height="15" fill="rgb(206,35,45)" fg:x="115734571" fg:w="5612991"/><text x="49.7232%" y="1487.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,612,991 samples, 2.40%)</title><rect x="49.4732%" y="1461" width="2.3994%" height="15" fill="rgb(217,65,33)" fg:x="115734571" fg:w="5612991"/><text x="49.7232%" y="1471.50">al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,612,991 samples, 2.40%)</title><rect x="49.4732%" y="1445" width="2.3994%" height="15" fill="rgb(222,158,48)" fg:x="115734571" fg:w="5612991"/><text x="49.7232%" y="1455.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,341,565 samples, 1.86%)</title><rect x="50.0167%" y="1429" width="1.8559%" height="15" fill="rgb(254,2,54)" fg:x="117005997" fg:w="4341565"/><text x="50.2667%" y="1439.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (4,341,565 samples, 1.86%)</title><rect x="50.0167%" y="1413" width="1.8559%" height="15" fill="rgb(250,143,38)" fg:x="117005997" fg:w="4341565"/><text x="50.2667%" y="1423.50">a..</text></g><g><title>alloc::alloc::alloc (4,341,565 samples, 1.86%)</title><rect x="50.0167%" y="1397" width="1.8559%" height="15" fill="rgb(248,25,0)" fg:x="117005997" fg:w="4341565"/><text x="50.2667%" y="1407.50">a..</text></g><g><title>malloc (3,031,023 samples, 1.30%)</title><rect x="50.5769%" y="1381" width="1.2957%" height="15" fill="rgb(206,152,27)" fg:x="118316539" fg:w="3031023"/><text x="50.8269%" y="1391.50"></text></g><g><title>[libc.so.6] (3,031,023 samples, 1.30%)</title><rect x="50.5769%" y="1365" width="1.2957%" height="15" fill="rgb(240,77,30)" fg:x="118316539" fg:w="3031023"/><text x="50.8269%" y="1375.50"></text></g><g><title>[libc.so.6] (1,502,645 samples, 0.64%)</title><rect x="51.2302%" y="1349" width="0.6423%" height="15" fill="rgb(231,5,3)" fg:x="119844917" fg:w="1502645"/><text x="51.4802%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (69,325,711 samples, 29.63%)</title><rect x="23.3811%" y="1637" width="29.6347%" height="15" fill="rgb(207,226,32)" fg:x="54696307" fg:w="69325711"/><text x="23.6311%" y="1647.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::cl..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (69,325,711 samples, 29.63%)</title><rect x="23.3811%" y="1621" width="29.6347%" height="15" fill="rgb(222,207,47)" fg:x="54696307" fg:w="69325711"/><text x="23.6311%" y="1631.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (69,325,711 samples, 29.63%)</title><rect x="23.3811%" y="1605" width="29.6347%" height="15" fill="rgb(229,115,45)" fg:x="54696307" fg:w="69325711"/><text x="23.6311%" y="1615.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (69,325,711 samples, 29.63%)</title><rect x="23.3811%" y="1589" width="29.6347%" height="15" fill="rgb(224,191,6)" fg:x="54696307" fg:w="69325711"/><text x="23.6311%" y="1599.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (69,325,711 samples, 29.63%)</title><rect x="23.3811%" y="1573" width="29.6347%" height="15" fill="rgb(230,227,24)" fg:x="54696307" fg:w="69325711"/><text x="23.6311%" y="1583.50">&lt;css_bitvector_compiler::HtmlNode as core::clone..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,674,456 samples, 1.14%)</title><rect x="51.8726%" y="1557" width="1.1433%" height="15" fill="rgb(228,80,19)" fg:x="121347562" fg:w="2674456"/><text x="52.1226%" y="1567.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,359,036 samples, 0.58%)</title><rect x="52.4349%" y="1541" width="0.5809%" height="15" fill="rgb(247,229,0)" fg:x="122662982" fg:w="1359036"/><text x="52.6849%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,359,036 samples, 0.58%)</title><rect x="52.4349%" y="1525" width="0.5809%" height="15" fill="rgb(237,194,15)" fg:x="122662982" fg:w="1359036"/><text x="52.6849%" y="1535.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,359,036 samples, 0.58%)</title><rect x="52.4349%" y="1509" width="0.5809%" height="15" fill="rgb(219,203,20)" fg:x="122662982" fg:w="1359036"/><text x="52.6849%" y="1519.50"></text></g><g><title>alloc::slice::hack::to_vec (1,359,036 samples, 0.58%)</title><rect x="52.4349%" y="1493" width="0.5809%" height="15" fill="rgb(234,128,8)" fg:x="122662982" fg:w="1359036"/><text x="52.6849%" y="1503.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,359,036 samples, 0.58%)</title><rect x="52.4349%" y="1477" width="0.5809%" height="15" fill="rgb(248,202,8)" fg:x="122662982" fg:w="1359036"/><text x="52.6849%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,359,036 samples, 0.58%)</title><rect x="52.4349%" y="1461" width="0.5809%" height="15" fill="rgb(206,104,37)" fg:x="122662982" fg:w="1359036"/><text x="52.6849%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,359,036 samples, 0.58%)</title><rect x="52.4349%" y="1445" width="0.5809%" height="15" fill="rgb(223,8,27)" fg:x="122662982" fg:w="1359036"/><text x="52.6849%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,359,036 samples, 0.58%)</title><rect x="52.4349%" y="1429" width="0.5809%" height="15" fill="rgb(216,217,28)" fg:x="122662982" fg:w="1359036"/><text x="52.6849%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,359,036 samples, 0.58%)</title><rect x="52.4349%" y="1413" width="0.5809%" height="15" fill="rgb(249,199,1)" fg:x="122662982" fg:w="1359036"/><text x="52.6849%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,359,036 samples, 0.58%)</title><rect x="52.4349%" y="1397" width="0.5809%" height="15" fill="rgb(240,85,17)" fg:x="122662982" fg:w="1359036"/><text x="52.6849%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,359,036 samples, 0.58%)</title><rect x="52.4349%" y="1381" width="0.5809%" height="15" fill="rgb(206,108,45)" fg:x="122662982" fg:w="1359036"/><text x="52.6849%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (1,359,036 samples, 0.58%)</title><rect x="52.4349%" y="1365" width="0.5809%" height="15" fill="rgb(245,210,41)" fg:x="122662982" fg:w="1359036"/><text x="52.6849%" y="1375.50"></text></g><g><title>malloc (1,359,036 samples, 0.58%)</title><rect x="52.4349%" y="1349" width="0.5809%" height="15" fill="rgb(206,13,37)" fg:x="122662982" fg:w="1359036"/><text x="52.6849%" y="1359.50"></text></g><g><title>[libc.so.6] (1,359,036 samples, 0.58%)</title><rect x="52.4349%" y="1333" width="0.5809%" height="15" fill="rgb(250,61,18)" fg:x="122662982" fg:w="1359036"/><text x="52.6849%" y="1343.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,294,495 samples, 0.55%)</title><rect x="53.0158%" y="1637" width="0.5534%" height="15" fill="rgb(235,172,48)" fg:x="124022018" fg:w="1294495"/><text x="53.2658%" y="1647.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,294,495 samples, 0.55%)</title><rect x="53.0158%" y="1621" width="0.5534%" height="15" fill="rgb(249,201,17)" fg:x="124022018" fg:w="1294495"/><text x="53.2658%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,294,495 samples, 0.55%)</title><rect x="53.0158%" y="1605" width="0.5534%" height="15" fill="rgb(219,208,6)" fg:x="124022018" fg:w="1294495"/><text x="53.2658%" y="1615.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,294,495 samples, 0.55%)</title><rect x="53.0158%" y="1589" width="0.5534%" height="15" fill="rgb(248,31,23)" fg:x="124022018" fg:w="1294495"/><text x="53.2658%" y="1599.50"></text></g><g><title>alloc::slice::hack::to_vec (1,294,495 samples, 0.55%)</title><rect x="53.0158%" y="1573" width="0.5534%" height="15" fill="rgb(245,15,42)" fg:x="124022018" fg:w="1294495"/><text x="53.2658%" y="1583.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,294,495 samples, 0.55%)</title><rect x="53.0158%" y="1557" width="0.5534%" height="15" fill="rgb(222,217,39)" fg:x="124022018" fg:w="1294495"/><text x="53.2658%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,294,495 samples, 0.55%)</title><rect x="53.0158%" y="1541" width="0.5534%" height="15" fill="rgb(210,219,27)" fg:x="124022018" fg:w="1294495"/><text x="53.2658%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,294,495 samples, 0.55%)</title><rect x="53.0158%" y="1525" width="0.5534%" height="15" fill="rgb(252,166,36)" fg:x="124022018" fg:w="1294495"/><text x="53.2658%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,294,495 samples, 0.55%)</title><rect x="53.0158%" y="1509" width="0.5534%" height="15" fill="rgb(245,132,34)" fg:x="124022018" fg:w="1294495"/><text x="53.2658%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,294,495 samples, 0.55%)</title><rect x="53.0158%" y="1493" width="0.5534%" height="15" fill="rgb(236,54,3)" fg:x="124022018" fg:w="1294495"/><text x="53.2658%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,294,495 samples, 0.55%)</title><rect x="53.0158%" y="1477" width="0.5534%" height="15" fill="rgb(241,173,43)" fg:x="124022018" fg:w="1294495"/><text x="53.2658%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,294,495 samples, 0.55%)</title><rect x="53.0158%" y="1461" width="0.5534%" height="15" fill="rgb(215,190,9)" fg:x="124022018" fg:w="1294495"/><text x="53.2658%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (1,294,495 samples, 0.55%)</title><rect x="53.0158%" y="1445" width="0.5534%" height="15" fill="rgb(242,101,16)" fg:x="124022018" fg:w="1294495"/><text x="53.2658%" y="1455.50"></text></g><g><title>malloc (1,294,495 samples, 0.55%)</title><rect x="53.0158%" y="1429" width="0.5534%" height="15" fill="rgb(223,190,21)" fg:x="124022018" fg:w="1294495"/><text x="53.2658%" y="1439.50"></text></g><g><title>[libc.so.6] (1,294,495 samples, 0.55%)</title><rect x="53.0158%" y="1413" width="0.5534%" height="15" fill="rgb(215,228,25)" fg:x="124022018" fg:w="1294495"/><text x="53.2658%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (73,442,263 samples, 31.39%)</title><rect x="22.8227%" y="1717" width="31.3945%" height="15" fill="rgb(225,36,22)" fg:x="53390103" fg:w="73442263"/><text x="23.0727%" y="1727.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (73,442,263 samples, 31.39%)</title><rect x="22.8227%" y="1701" width="31.3945%" height="15" fill="rgb(251,106,46)" fg:x="53390103" fg:w="73442263"/><text x="23.0727%" y="1711.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (73,442,263 samples, 31.39%)</title><rect x="22.8227%" y="1685" width="31.3945%" height="15" fill="rgb(208,90,1)" fg:x="53390103" fg:w="73442263"/><text x="23.0727%" y="1695.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (73,442,263 samples, 31.39%)</title><rect x="22.8227%" y="1669" width="31.3945%" height="15" fill="rgb(243,10,4)" fg:x="53390103" fg:w="73442263"/><text x="23.0727%" y="1679.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (73,442,263 samples, 31.39%)</title><rect x="22.8227%" y="1653" width="31.3945%" height="15" fill="rgb(212,137,27)" fg:x="53390103" fg:w="73442263"/><text x="23.0727%" y="1663.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::C..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,515,853 samples, 0.65%)</title><rect x="53.5692%" y="1637" width="0.6480%" height="15" fill="rgb(231,220,49)" fg:x="125316513" fg:w="1515853"/><text x="53.8192%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,515,853 samples, 0.65%)</title><rect x="53.5692%" y="1621" width="0.6480%" height="15" fill="rgb(237,96,20)" fg:x="125316513" fg:w="1515853"/><text x="53.8192%" y="1631.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,515,853 samples, 0.65%)</title><rect x="53.5692%" y="1605" width="0.6480%" height="15" fill="rgb(239,229,30)" fg:x="125316513" fg:w="1515853"/><text x="53.8192%" y="1615.50"></text></g><g><title>alloc::slice::hack::to_vec (1,515,853 samples, 0.65%)</title><rect x="53.5692%" y="1589" width="0.6480%" height="15" fill="rgb(219,65,33)" fg:x="125316513" fg:w="1515853"/><text x="53.8192%" y="1599.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,515,853 samples, 0.65%)</title><rect x="53.5692%" y="1573" width="0.6480%" height="15" fill="rgb(243,134,7)" fg:x="125316513" fg:w="1515853"/><text x="53.8192%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,515,853 samples, 0.65%)</title><rect x="53.5692%" y="1557" width="0.6480%" height="15" fill="rgb(216,177,54)" fg:x="125316513" fg:w="1515853"/><text x="53.8192%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,515,853 samples, 0.65%)</title><rect x="53.5692%" y="1541" width="0.6480%" height="15" fill="rgb(211,160,20)" fg:x="125316513" fg:w="1515853"/><text x="53.8192%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,515,853 samples, 0.65%)</title><rect x="53.5692%" y="1525" width="0.6480%" height="15" fill="rgb(239,85,39)" fg:x="125316513" fg:w="1515853"/><text x="53.8192%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,515,853 samples, 0.65%)</title><rect x="53.5692%" y="1509" width="0.6480%" height="15" fill="rgb(232,125,22)" fg:x="125316513" fg:w="1515853"/><text x="53.8192%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,515,853 samples, 0.65%)</title><rect x="53.5692%" y="1493" width="0.6480%" height="15" fill="rgb(244,57,34)" fg:x="125316513" fg:w="1515853"/><text x="53.8192%" y="1503.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,515,853 samples, 0.65%)</title><rect x="53.5692%" y="1477" width="0.6480%" height="15" fill="rgb(214,203,32)" fg:x="125316513" fg:w="1515853"/><text x="53.8192%" y="1487.50"></text></g><g><title>alloc::alloc::alloc (1,515,853 samples, 0.65%)</title><rect x="53.5692%" y="1461" width="0.6480%" height="15" fill="rgb(207,58,43)" fg:x="125316513" fg:w="1515853"/><text x="53.8192%" y="1471.50"></text></g><g><title>malloc (1,515,853 samples, 0.65%)</title><rect x="53.5692%" y="1445" width="0.6480%" height="15" fill="rgb(215,193,15)" fg:x="125316513" fg:w="1515853"/><text x="53.8192%" y="1455.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,513,099 samples, 0.65%)</title><rect x="54.2172%" y="1717" width="0.6468%" height="15" fill="rgb(232,15,44)" fg:x="126832366" fg:w="1513099"/><text x="54.4672%" y="1727.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,513,099 samples, 0.65%)</title><rect x="54.2172%" y="1701" width="0.6468%" height="15" fill="rgb(212,3,48)" fg:x="126832366" fg:w="1513099"/><text x="54.4672%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,513,099 samples, 0.65%)</title><rect x="54.2172%" y="1685" width="0.6468%" height="15" fill="rgb(218,128,7)" fg:x="126832366" fg:w="1513099"/><text x="54.4672%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,513,099 samples, 0.65%)</title><rect x="54.2172%" y="1669" width="0.6468%" height="15" fill="rgb(226,216,39)" fg:x="126832366" fg:w="1513099"/><text x="54.4672%" y="1679.50"></text></g><g><title>alloc::slice::hack::to_vec (1,513,099 samples, 0.65%)</title><rect x="54.2172%" y="1653" width="0.6468%" height="15" fill="rgb(243,47,51)" fg:x="126832366" fg:w="1513099"/><text x="54.4672%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,513,099 samples, 0.65%)</title><rect x="54.2172%" y="1637" width="0.6468%" height="15" fill="rgb(241,183,40)" fg:x="126832366" fg:w="1513099"/><text x="54.4672%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,513,099 samples, 0.65%)</title><rect x="54.2172%" y="1621" width="0.6468%" height="15" fill="rgb(231,217,32)" fg:x="126832366" fg:w="1513099"/><text x="54.4672%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,513,099 samples, 0.65%)</title><rect x="54.2172%" y="1605" width="0.6468%" height="15" fill="rgb(229,61,38)" fg:x="126832366" fg:w="1513099"/><text x="54.4672%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,513,099 samples, 0.65%)</title><rect x="54.2172%" y="1589" width="0.6468%" height="15" fill="rgb(225,210,5)" fg:x="126832366" fg:w="1513099"/><text x="54.4672%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,513,099 samples, 0.65%)</title><rect x="54.2172%" y="1573" width="0.6468%" height="15" fill="rgb(231,79,45)" fg:x="126832366" fg:w="1513099"/><text x="54.4672%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,513,099 samples, 0.65%)</title><rect x="54.2172%" y="1557" width="0.6468%" height="15" fill="rgb(224,100,7)" fg:x="126832366" fg:w="1513099"/><text x="54.4672%" y="1567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,513,099 samples, 0.65%)</title><rect x="54.2172%" y="1541" width="0.6468%" height="15" fill="rgb(241,198,18)" fg:x="126832366" fg:w="1513099"/><text x="54.4672%" y="1551.50"></text></g><g><title>alloc::alloc::alloc (1,513,099 samples, 0.65%)</title><rect x="54.2172%" y="1525" width="0.6468%" height="15" fill="rgb(252,97,53)" fg:x="126832366" fg:w="1513099"/><text x="54.4672%" y="1535.50"></text></g><g><title>malloc (1,513,099 samples, 0.65%)</title><rect x="54.2172%" y="1509" width="0.6468%" height="15" fill="rgb(220,88,7)" fg:x="126832366" fg:w="1513099"/><text x="54.4672%" y="1519.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,339,593 samples, 0.57%)</title><rect x="54.8640%" y="1717" width="0.5726%" height="15" fill="rgb(213,176,14)" fg:x="128345465" fg:w="1339593"/><text x="55.1140%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,339,593 samples, 0.57%)</title><rect x="54.8640%" y="1701" width="0.5726%" height="15" fill="rgb(246,73,7)" fg:x="128345465" fg:w="1339593"/><text x="55.1140%" y="1711.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,339,593 samples, 0.57%)</title><rect x="54.8640%" y="1685" width="0.5726%" height="15" fill="rgb(245,64,36)" fg:x="128345465" fg:w="1339593"/><text x="55.1140%" y="1695.50"></text></g><g><title>alloc::slice::hack::to_vec (1,339,593 samples, 0.57%)</title><rect x="54.8640%" y="1669" width="0.5726%" height="15" fill="rgb(245,80,10)" fg:x="128345465" fg:w="1339593"/><text x="55.1140%" y="1679.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,339,593 samples, 0.57%)</title><rect x="54.8640%" y="1653" width="0.5726%" height="15" fill="rgb(232,107,50)" fg:x="128345465" fg:w="1339593"/><text x="55.1140%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,339,593 samples, 0.57%)</title><rect x="54.8640%" y="1637" width="0.5726%" height="15" fill="rgb(253,3,0)" fg:x="128345465" fg:w="1339593"/><text x="55.1140%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,339,593 samples, 0.57%)</title><rect x="54.8640%" y="1621" width="0.5726%" height="15" fill="rgb(212,99,53)" fg:x="128345465" fg:w="1339593"/><text x="55.1140%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,339,593 samples, 0.57%)</title><rect x="54.8640%" y="1605" width="0.5726%" height="15" fill="rgb(249,111,54)" fg:x="128345465" fg:w="1339593"/><text x="55.1140%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,339,593 samples, 0.57%)</title><rect x="54.8640%" y="1589" width="0.5726%" height="15" fill="rgb(249,55,30)" fg:x="128345465" fg:w="1339593"/><text x="55.1140%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,339,593 samples, 0.57%)</title><rect x="54.8640%" y="1573" width="0.5726%" height="15" fill="rgb(237,47,42)" fg:x="128345465" fg:w="1339593"/><text x="55.1140%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,339,593 samples, 0.57%)</title><rect x="54.8640%" y="1557" width="0.5726%" height="15" fill="rgb(211,20,18)" fg:x="128345465" fg:w="1339593"/><text x="55.1140%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (1,339,593 samples, 0.57%)</title><rect x="54.8640%" y="1541" width="0.5726%" height="15" fill="rgb(231,203,46)" fg:x="128345465" fg:w="1339593"/><text x="55.1140%" y="1551.50"></text></g><g><title>__rdl_alloc (1,339,593 samples, 0.57%)</title><rect x="54.8640%" y="1525" width="0.5726%" height="15" fill="rgb(237,142,3)" fg:x="128345465" fg:w="1339593"/><text x="55.1140%" y="1535.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,339,593 samples, 0.57%)</title><rect x="54.8640%" y="1509" width="0.5726%" height="15" fill="rgb(241,107,1)" fg:x="128345465" fg:w="1339593"/><text x="55.1140%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (77,637,007 samples, 33.19%)</title><rect x="22.8227%" y="1797" width="33.1876%" height="15" fill="rgb(229,83,13)" fg:x="53390103" fg:w="77637007"/><text x="23.0727%" y="1807.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (77,637,007 samples, 33.19%)</title><rect x="22.8227%" y="1781" width="33.1876%" height="15" fill="rgb(241,91,40)" fg:x="53390103" fg:w="77637007"/><text x="23.0727%" y="1791.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (77,637,007 samples, 33.19%)</title><rect x="22.8227%" y="1765" width="33.1876%" height="15" fill="rgb(225,3,45)" fg:x="53390103" fg:w="77637007"/><text x="23.0727%" y="1775.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (77,637,007 samples, 33.19%)</title><rect x="22.8227%" y="1749" width="33.1876%" height="15" fill="rgb(244,223,14)" fg:x="53390103" fg:w="77637007"/><text x="23.0727%" y="1759.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (77,637,007 samples, 33.19%)</title><rect x="22.8227%" y="1733" width="33.1876%" height="15" fill="rgb(224,124,37)" fg:x="53390103" fg:w="77637007"/><text x="23.0727%" y="1743.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clon..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,342,052 samples, 0.57%)</title><rect x="55.4366%" y="1717" width="0.5737%" height="15" fill="rgb(251,171,30)" fg:x="129685058" fg:w="1342052"/><text x="55.6866%" y="1727.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,342,052 samples, 0.57%)</title><rect x="55.4366%" y="1701" width="0.5737%" height="15" fill="rgb(236,46,54)" fg:x="129685058" fg:w="1342052"/><text x="55.6866%" y="1711.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,342,052 samples, 0.57%)</title><rect x="55.4366%" y="1685" width="0.5737%" height="15" fill="rgb(245,213,5)" fg:x="129685058" fg:w="1342052"/><text x="55.6866%" y="1695.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,342,052 samples, 0.57%)</title><rect x="55.4366%" y="1669" width="0.5737%" height="15" fill="rgb(230,144,27)" fg:x="129685058" fg:w="1342052"/><text x="55.6866%" y="1679.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,342,052 samples, 0.57%)</title><rect x="55.4366%" y="1653" width="0.5737%" height="15" fill="rgb(220,86,6)" fg:x="129685058" fg:w="1342052"/><text x="55.6866%" y="1663.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,342,052 samples, 0.57%)</title><rect x="55.4366%" y="1637" width="0.5737%" height="15" fill="rgb(240,20,13)" fg:x="129685058" fg:w="1342052"/><text x="55.6866%" y="1647.50"></text></g><g><title>core::clone::Clone::clone (1,342,052 samples, 0.57%)</title><rect x="55.4366%" y="1621" width="0.5737%" height="15" fill="rgb(217,89,34)" fg:x="129685058" fg:w="1342052"/><text x="55.6866%" y="1631.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,342,052 samples, 0.57%)</title><rect x="55.4366%" y="1605" width="0.5737%" height="15" fill="rgb(229,13,5)" fg:x="129685058" fg:w="1342052"/><text x="55.6866%" y="1615.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (80,216,540 samples, 34.29%)</title><rect x="22.2695%" y="2053" width="34.2903%" height="15" fill="rgb(244,67,35)" fg:x="52095793" fg:w="80216540"/><text x="22.5195%" y="2063.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (80,216,540 samples, 34.29%)</title><rect x="22.2695%" y="2037" width="34.2903%" height="15" fill="rgb(221,40,2)" fg:x="52095793" fg:w="80216540"/><text x="22.5195%" y="2047.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (80,216,540 samples, 34.29%)</title><rect x="22.2695%" y="2021" width="34.2903%" height="15" fill="rgb(237,157,21)" fg:x="52095793" fg:w="80216540"/><text x="22.5195%" y="2031.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (80,216,540 samples, 34.29%)</title><rect x="22.2695%" y="2005" width="34.2903%" height="15" fill="rgb(222,94,11)" fg:x="52095793" fg:w="80216540"/><text x="22.5195%" y="2015.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (80,216,540 samples, 34.29%)</title><rect x="22.2695%" y="1989" width="34.2903%" height="15" fill="rgb(249,113,6)" fg:x="52095793" fg:w="80216540"/><text x="22.5195%" y="1999.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (80,216,540 samples, 34.29%)</title><rect x="22.2695%" y="1973" width="34.2903%" height="15" fill="rgb(238,137,36)" fg:x="52095793" fg:w="80216540"/><text x="22.5195%" y="1983.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (80,216,540 samples, 34.29%)</title><rect x="22.2695%" y="1957" width="34.2903%" height="15" fill="rgb(210,102,26)" fg:x="52095793" fg:w="80216540"/><text x="22.5195%" y="1967.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (80,216,540 samples, 34.29%)</title><rect x="22.2695%" y="1941" width="34.2903%" height="15" fill="rgb(218,30,30)" fg:x="52095793" fg:w="80216540"/><text x="22.5195%" y="1951.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (80,216,540 samples, 34.29%)</title><rect x="22.2695%" y="1925" width="34.2903%" height="15" fill="rgb(214,67,26)" fg:x="52095793" fg:w="80216540"/><text x="22.5195%" y="1935.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (80,216,540 samples, 34.29%)</title><rect x="22.2695%" y="1909" width="34.2903%" height="15" fill="rgb(251,9,53)" fg:x="52095793" fg:w="80216540"/><text x="22.5195%" y="1919.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (80,216,540 samples, 34.29%)</title><rect x="22.2695%" y="1893" width="34.2903%" height="15" fill="rgb(228,204,25)" fg:x="52095793" fg:w="80216540"/><text x="22.5195%" y="1903.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (80,216,540 samples, 34.29%)</title><rect x="22.2695%" y="1877" width="34.2903%" height="15" fill="rgb(207,153,8)" fg:x="52095793" fg:w="80216540"/><text x="22.5195%" y="1887.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (80,216,540 samples, 34.29%)</title><rect x="22.2695%" y="1861" width="34.2903%" height="15" fill="rgb(242,9,16)" fg:x="52095793" fg:w="80216540"/><text x="22.5195%" y="1871.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (80,216,540 samples, 34.29%)</title><rect x="22.2695%" y="1845" width="34.2903%" height="15" fill="rgb(217,211,10)" fg:x="52095793" fg:w="80216540"/><text x="22.5195%" y="1855.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (80,216,540 samples, 34.29%)</title><rect x="22.2695%" y="1829" width="34.2903%" height="15" fill="rgb(219,228,52)" fg:x="52095793" fg:w="80216540"/><text x="22.5195%" y="1839.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (80,216,540 samples, 34.29%)</title><rect x="22.2695%" y="1813" width="34.2903%" height="15" fill="rgb(231,92,29)" fg:x="52095793" fg:w="80216540"/><text x="22.5195%" y="1823.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,285,223 samples, 0.55%)</title><rect x="56.0103%" y="1797" width="0.5494%" height="15" fill="rgb(232,8,23)" fg:x="131027110" fg:w="1285223"/><text x="56.2603%" y="1807.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,285,223 samples, 0.55%)</title><rect x="56.0103%" y="1781" width="0.5494%" height="15" fill="rgb(216,211,34)" fg:x="131027110" fg:w="1285223"/><text x="56.2603%" y="1791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,285,223 samples, 0.55%)</title><rect x="56.0103%" y="1765" width="0.5494%" height="15" fill="rgb(236,151,0)" fg:x="131027110" fg:w="1285223"/><text x="56.2603%" y="1775.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,285,223 samples, 0.55%)</title><rect x="56.0103%" y="1749" width="0.5494%" height="15" fill="rgb(209,168,3)" fg:x="131027110" fg:w="1285223"/><text x="56.2603%" y="1759.50"></text></g><g><title>alloc::slice::hack::to_vec (1,285,223 samples, 0.55%)</title><rect x="56.0103%" y="1733" width="0.5494%" height="15" fill="rgb(208,129,28)" fg:x="131027110" fg:w="1285223"/><text x="56.2603%" y="1743.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,285,223 samples, 0.55%)</title><rect x="56.0103%" y="1717" width="0.5494%" height="15" fill="rgb(229,78,22)" fg:x="131027110" fg:w="1285223"/><text x="56.2603%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,285,223 samples, 0.55%)</title><rect x="56.0103%" y="1701" width="0.5494%" height="15" fill="rgb(228,187,13)" fg:x="131027110" fg:w="1285223"/><text x="56.2603%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,285,223 samples, 0.55%)</title><rect x="56.0103%" y="1685" width="0.5494%" height="15" fill="rgb(240,119,24)" fg:x="131027110" fg:w="1285223"/><text x="56.2603%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,285,223 samples, 0.55%)</title><rect x="56.0103%" y="1669" width="0.5494%" height="15" fill="rgb(209,194,42)" fg:x="131027110" fg:w="1285223"/><text x="56.2603%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,285,223 samples, 0.55%)</title><rect x="56.0103%" y="1653" width="0.5494%" height="15" fill="rgb(247,200,46)" fg:x="131027110" fg:w="1285223"/><text x="56.2603%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,285,223 samples, 0.55%)</title><rect x="56.0103%" y="1637" width="0.5494%" height="15" fill="rgb(218,76,16)" fg:x="131027110" fg:w="1285223"/><text x="56.2603%" y="1647.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,285,223 samples, 0.55%)</title><rect x="56.0103%" y="1621" width="0.5494%" height="15" fill="rgb(225,21,48)" fg:x="131027110" fg:w="1285223"/><text x="56.2603%" y="1631.50"></text></g><g><title>alloc::alloc::alloc (1,285,223 samples, 0.55%)</title><rect x="56.0103%" y="1605" width="0.5494%" height="15" fill="rgb(239,223,50)" fg:x="131027110" fg:w="1285223"/><text x="56.2603%" y="1615.50"></text></g><g><title>malloc (1,285,223 samples, 0.55%)</title><rect x="56.0103%" y="1589" width="0.5494%" height="15" fill="rgb(244,45,21)" fg:x="131027110" fg:w="1285223"/><text x="56.2603%" y="1599.50"></text></g><g><title>benchmark::extract_path_from_command (1,488,924 samples, 0.64%)</title><rect x="56.5597%" y="2037" width="0.6365%" height="15" fill="rgb(232,33,43)" fg:x="132312333" fg:w="1488924"/><text x="56.8097%" y="2047.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,488,924 samples, 0.64%)</title><rect x="56.5597%" y="2021" width="0.6365%" height="15" fill="rgb(209,8,3)" fg:x="132312333" fg:w="1488924"/><text x="56.8097%" y="2031.50"></text></g><g><title>benchmark::extract_path_from_command::_{{closure}} (1,488,924 samples, 0.64%)</title><rect x="56.5597%" y="2005" width="0.6365%" height="15" fill="rgb(214,25,53)" fg:x="132312333" fg:w="1488924"/><text x="56.8097%" y="2015.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,488,924 samples, 0.64%)</title><rect x="56.5597%" y="1989" width="0.6365%" height="15" fill="rgb(254,186,54)" fg:x="132312333" fg:w="1488924"/><text x="56.8097%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,488,924 samples, 0.64%)</title><rect x="56.5597%" y="1973" width="0.6365%" height="15" fill="rgb(208,174,49)" fg:x="132312333" fg:w="1488924"/><text x="56.8097%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,488,924 samples, 0.64%)</title><rect x="56.5597%" y="1957" width="0.6365%" height="15" fill="rgb(233,191,51)" fg:x="132312333" fg:w="1488924"/><text x="56.8097%" y="1967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,488,924 samples, 0.64%)</title><rect x="56.5597%" y="1941" width="0.6365%" height="15" fill="rgb(222,134,10)" fg:x="132312333" fg:w="1488924"/><text x="56.8097%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,488,924 samples, 0.64%)</title><rect x="56.5597%" y="1925" width="0.6365%" height="15" fill="rgb(230,226,20)" fg:x="132312333" fg:w="1488924"/><text x="56.8097%" y="1935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,488,924 samples, 0.64%)</title><rect x="56.5597%" y="1909" width="0.6365%" height="15" fill="rgb(251,111,25)" fg:x="132312333" fg:w="1488924"/><text x="56.8097%" y="1919.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,488,924 samples, 0.64%)</title><rect x="56.5597%" y="1893" width="0.6365%" height="15" fill="rgb(224,40,46)" fg:x="132312333" fg:w="1488924"/><text x="56.8097%" y="1903.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,488,924 samples, 0.64%)</title><rect x="56.5597%" y="1877" width="0.6365%" height="15" fill="rgb(236,108,47)" fg:x="132312333" fg:w="1488924"/><text x="56.8097%" y="1887.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (1,488,924 samples, 0.64%)</title><rect x="56.5597%" y="1861" width="0.6365%" height="15" fill="rgb(234,93,0)" fg:x="132312333" fg:w="1488924"/><text x="56.8097%" y="1871.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,488,924 samples, 0.64%)</title><rect x="56.5597%" y="1845" width="0.6365%" height="15" fill="rgb(224,213,32)" fg:x="132312333" fg:w="1488924"/><text x="56.8097%" y="1855.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1,488,924 samples, 0.64%)</title><rect x="56.5597%" y="1829" width="0.6365%" height="15" fill="rgb(251,11,48)" fg:x="132312333" fg:w="1488924"/><text x="56.8097%" y="1839.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1,488,924 samples, 0.64%)</title><rect x="56.5597%" y="1813" width="0.6365%" height="15" fill="rgb(236,173,5)" fg:x="132312333" fg:w="1488924"/><text x="56.8097%" y="1823.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1,488,924 samples, 0.64%)</title><rect x="56.5597%" y="1797" width="0.6365%" height="15" fill="rgb(230,95,12)" fg:x="132312333" fg:w="1488924"/><text x="56.8097%" y="1807.50"></text></g><g><title>benchmark::json_to_html_node (940,731 samples, 0.40%)</title><rect x="57.1962%" y="1973" width="0.4021%" height="15" fill="rgb(232,209,1)" fg:x="133801257" fg:w="940731"/><text x="57.4462%" y="1983.50"></text></g><g><title>benchmark::json_to_html_node (940,731 samples, 0.40%)</title><rect x="57.1962%" y="1957" width="0.4021%" height="15" fill="rgb(232,6,1)" fg:x="133801257" fg:w="940731"/><text x="57.4462%" y="1967.50"></text></g><g><title>serde_json::value::Value::get (940,731 samples, 0.40%)</title><rect x="57.1962%" y="1941" width="0.4021%" height="15" fill="rgb(210,224,50)" fg:x="133801257" fg:w="940731"/><text x="57.4462%" y="1951.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (940,731 samples, 0.40%)</title><rect x="57.1962%" y="1925" width="0.4021%" height="15" fill="rgb(228,127,35)" fg:x="133801257" fg:w="940731"/><text x="57.4462%" y="1935.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (940,731 samples, 0.40%)</title><rect x="57.1962%" y="1909" width="0.4021%" height="15" fill="rgb(245,102,45)" fg:x="133801257" fg:w="940731"/><text x="57.4462%" y="1919.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (940,731 samples, 0.40%)</title><rect x="57.1962%" y="1893" width="0.4021%" height="15" fill="rgb(214,1,49)" fg:x="133801257" fg:w="940731"/><text x="57.4462%" y="1903.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (940,731 samples, 0.40%)</title><rect x="57.1962%" y="1877" width="0.4021%" height="15" fill="rgb(226,163,40)" fg:x="133801257" fg:w="940731"/><text x="57.4462%" y="1887.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (940,731 samples, 0.40%)</title><rect x="57.1962%" y="1861" width="0.4021%" height="15" fill="rgb(239,212,28)" fg:x="133801257" fg:w="940731"/><text x="57.4462%" y="1871.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (940,731 samples, 0.40%)</title><rect x="57.1962%" y="1845" width="0.4021%" height="15" fill="rgb(220,20,13)" fg:x="133801257" fg:w="940731"/><text x="57.4462%" y="1855.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (940,731 samples, 0.40%)</title><rect x="57.1962%" y="1829" width="0.4021%" height="15" fill="rgb(210,164,35)" fg:x="133801257" fg:w="940731"/><text x="57.4462%" y="1839.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,070,435 samples, 0.46%)</title><rect x="57.5983%" y="1973" width="0.4576%" height="15" fill="rgb(248,109,41)" fg:x="134741988" fg:w="1070435"/><text x="57.8483%" y="1983.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,070,435 samples, 0.46%)</title><rect x="57.5983%" y="1957" width="0.4576%" height="15" fill="rgb(238,23,50)" fg:x="134741988" fg:w="1070435"/><text x="57.8483%" y="1967.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,070,435 samples, 0.46%)</title><rect x="57.5983%" y="1941" width="0.4576%" height="15" fill="rgb(211,48,49)" fg:x="134741988" fg:w="1070435"/><text x="57.8483%" y="1951.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,070,435 samples, 0.46%)</title><rect x="57.5983%" y="1925" width="0.4576%" height="15" fill="rgb(223,36,21)" fg:x="134741988" fg:w="1070435"/><text x="57.8483%" y="1935.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,070,435 samples, 0.46%)</title><rect x="57.5983%" y="1909" width="0.4576%" height="15" fill="rgb(207,123,46)" fg:x="134741988" fg:w="1070435"/><text x="57.8483%" y="1919.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,070,435 samples, 0.46%)</title><rect x="57.5983%" y="1893" width="0.4576%" height="15" fill="rgb(240,218,32)" fg:x="134741988" fg:w="1070435"/><text x="57.8483%" y="1903.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,070,435 samples, 0.46%)</title><rect x="57.5983%" y="1877" width="0.4576%" height="15" fill="rgb(252,5,43)" fg:x="134741988" fg:w="1070435"/><text x="57.8483%" y="1887.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,070,435 samples, 0.46%)</title><rect x="57.5983%" y="1861" width="0.4576%" height="15" fill="rgb(252,84,19)" fg:x="134741988" fg:w="1070435"/><text x="57.8483%" y="1871.50"></text></g><g><title>[libc.so.6] (1,070,435 samples, 0.46%)</title><rect x="57.5983%" y="1845" width="0.4576%" height="15" fill="rgb(243,152,39)" fg:x="134741988" fg:w="1070435"/><text x="57.8483%" y="1855.50"></text></g><g><title>benchmark::json_to_html_node (3,281,866 samples, 1.40%)</title><rect x="57.1962%" y="2021" width="1.4029%" height="15" fill="rgb(234,160,15)" fg:x="133801257" fg:w="3281866"/><text x="57.4462%" y="2031.50"></text></g><g><title>benchmark::json_to_html_node (3,281,866 samples, 1.40%)</title><rect x="57.1962%" y="2005" width="1.4029%" height="15" fill="rgb(237,34,20)" fg:x="133801257" fg:w="3281866"/><text x="57.4462%" y="2015.50"></text></g><g><title>benchmark::json_to_html_node (3,281,866 samples, 1.40%)</title><rect x="57.1962%" y="1989" width="1.4029%" height="15" fill="rgb(229,97,13)" fg:x="133801257" fg:w="3281866"/><text x="57.4462%" y="1999.50"></text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (1,270,700 samples, 0.54%)</title><rect x="58.0559%" y="1973" width="0.5432%" height="15" fill="rgb(234,71,50)" fg:x="135812423" fg:w="1270700"/><text x="58.3059%" y="1983.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,270,700 samples, 0.54%)</title><rect x="58.0559%" y="1957" width="0.5432%" height="15" fill="rgb(253,155,4)" fg:x="135812423" fg:w="1270700"/><text x="58.3059%" y="1967.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,270,700 samples, 0.54%)</title><rect x="58.0559%" y="1941" width="0.5432%" height="15" fill="rgb(222,185,37)" fg:x="135812423" fg:w="1270700"/><text x="58.3059%" y="1951.50"></text></g><g><title>benchmark::json_to_html_node (4,780,592 samples, 2.04%)</title><rect x="57.1962%" y="2037" width="2.0436%" height="15" fill="rgb(251,177,13)" fg:x="133801257" fg:w="4780592"/><text x="57.4462%" y="2047.50">b..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="2021" width="0.6407%" height="15" fill="rgb(250,179,40)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="2031.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="2005" width="0.6407%" height="15" fill="rgb(242,44,2)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="2015.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="1989" width="0.6407%" height="15" fill="rgb(216,177,13)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="1999.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="1973" width="0.6407%" height="15" fill="rgb(216,106,43)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="1983.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="1957" width="0.6407%" height="15" fill="rgb(216,183,2)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="1967.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="1941" width="0.6407%" height="15" fill="rgb(249,75,3)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="1951.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="1925" width="0.6407%" height="15" fill="rgb(219,67,39)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="1935.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="1909" width="0.6407%" height="15" fill="rgb(253,228,2)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="1919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="1893" width="0.6407%" height="15" fill="rgb(235,138,27)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="1903.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="1877" width="0.6407%" height="15" fill="rgb(236,97,51)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="1887.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="1861" width="0.6407%" height="15" fill="rgb(240,80,30)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="1871.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="1845" width="0.6407%" height="15" fill="rgb(230,178,19)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="1855.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="1829" width="0.6407%" height="15" fill="rgb(210,190,27)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="1839.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="1813" width="0.6407%" height="15" fill="rgb(222,107,31)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="1823.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="1797" width="0.6407%" height="15" fill="rgb(216,127,34)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="1807.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="1781" width="0.6407%" height="15" fill="rgb(234,116,52)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="1791.50"></text></g><g><title>core::str::pattern::Searcher::next_match (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="1765" width="0.6407%" height="15" fill="rgb(222,124,15)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="1775.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="1749" width="0.6407%" height="15" fill="rgb(231,179,28)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="1759.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="1733" width="0.6407%" height="15" fill="rgb(226,93,45)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="1743.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::FnMut&lt;(char,)&gt;&gt;::call_mut (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="1717" width="0.6407%" height="15" fill="rgb(215,8,51)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="1727.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::Fn&lt;(char,)&gt;&gt;::call (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="1701" width="0.6407%" height="15" fill="rgb(223,106,5)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="1711.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (1,498,726 samples, 0.64%)</title><rect x="58.5991%" y="1685" width="0.6407%" height="15" fill="rgb(250,191,5)" fg:x="137083123" fg:w="1498726"/><text x="58.8491%" y="1695.50"></text></g><g><title>benchmark::apply_frame_modifications (8,891,612 samples, 3.80%)</title><rect x="56.5597%" y="2053" width="3.8009%" height="15" fill="rgb(242,132,44)" fg:x="132312333" fg:w="8891612"/><text x="56.8097%" y="2063.50">benc..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,622,096 samples, 1.12%)</title><rect x="59.2397%" y="2037" width="1.1209%" height="15" fill="rgb(251,152,29)" fg:x="138581849" fg:w="2622096"/><text x="59.4897%" y="2047.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,622,096 samples, 1.12%)</title><rect x="59.2397%" y="2021" width="1.1209%" height="15" fill="rgb(218,179,5)" fg:x="138581849" fg:w="2622096"/><text x="59.4897%" y="2031.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,622,096 samples, 1.12%)</title><rect x="59.2397%" y="2005" width="1.1209%" height="15" fill="rgb(227,67,19)" fg:x="138581849" fg:w="2622096"/><text x="59.4897%" y="2015.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,308,394 samples, 0.56%)</title><rect x="59.8013%" y="1989" width="0.5593%" height="15" fill="rgb(233,119,31)" fg:x="139895551" fg:w="1308394"/><text x="60.0513%" y="1999.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,308,394 samples, 0.56%)</title><rect x="59.8013%" y="1973" width="0.5593%" height="15" fill="rgb(241,120,22)" fg:x="139895551" fg:w="1308394"/><text x="60.0513%" y="1983.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,308,394 samples, 0.56%)</title><rect x="59.8013%" y="1957" width="0.5593%" height="15" fill="rgb(224,102,30)" fg:x="139895551" fg:w="1308394"/><text x="60.0513%" y="1967.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,308,394 samples, 0.56%)</title><rect x="59.8013%" y="1941" width="0.5593%" height="15" fill="rgb(210,164,37)" fg:x="139895551" fg:w="1308394"/><text x="60.0513%" y="1951.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,308,394 samples, 0.56%)</title><rect x="59.8013%" y="1925" width="0.5593%" height="15" fill="rgb(226,191,16)" fg:x="139895551" fg:w="1308394"/><text x="60.0513%" y="1935.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,308,394 samples, 0.56%)</title><rect x="59.8013%" y="1909" width="0.5593%" height="15" fill="rgb(214,40,45)" fg:x="139895551" fg:w="1308394"/><text x="60.0513%" y="1919.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,308,394 samples, 0.56%)</title><rect x="59.8013%" y="1893" width="0.5593%" height="15" fill="rgb(244,29,26)" fg:x="139895551" fg:w="1308394"/><text x="60.0513%" y="1903.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,308,394 samples, 0.56%)</title><rect x="59.8013%" y="1877" width="0.5593%" height="15" fill="rgb(216,16,5)" fg:x="139895551" fg:w="1308394"/><text x="60.0513%" y="1887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,308,394 samples, 0.56%)</title><rect x="59.8013%" y="1861" width="0.5593%" height="15" fill="rgb(249,76,35)" fg:x="139895551" fg:w="1308394"/><text x="60.0513%" y="1871.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,308,394 samples, 0.56%)</title><rect x="59.8013%" y="1845" width="0.5593%" height="15" fill="rgb(207,11,44)" fg:x="139895551" fg:w="1308394"/><text x="60.0513%" y="1855.50"></text></g><g><title>benchmark::clear_dirty_flags (1,290,605 samples, 0.55%)</title><rect x="60.3606%" y="2053" width="0.5517%" height="15" fill="rgb(228,190,49)" fg:x="141203945" fg:w="1290605"/><text x="60.6106%" y="2063.50"></text></g><g><title>benchmark::clear_dirty_flags (1,290,605 samples, 0.55%)</title><rect x="60.3606%" y="2037" width="0.5517%" height="15" fill="rgb(214,173,12)" fg:x="141203945" fg:w="1290605"/><text x="60.6106%" y="2047.50"></text></g><g><title>benchmark::clear_dirty_flags (1,290,605 samples, 0.55%)</title><rect x="60.3606%" y="2021" width="0.5517%" height="15" fill="rgb(218,26,35)" fg:x="141203945" fg:w="1290605"/><text x="60.6106%" y="2031.50"></text></g><g><title>benchmark::clear_dirty_flags (1,290,605 samples, 0.55%)</title><rect x="60.3606%" y="2005" width="0.5517%" height="15" fill="rgb(220,200,19)" fg:x="141203945" fg:w="1290605"/><text x="60.6106%" y="2015.50"></text></g><g><title>benchmark::clear_dirty_flags (1,290,605 samples, 0.55%)</title><rect x="60.3606%" y="1989" width="0.5517%" height="15" fill="rgb(239,95,49)" fg:x="141203945" fg:w="1290605"/><text x="60.6106%" y="1999.50"></text></g><g><title>benchmark::clear_dirty_flags (1,290,605 samples, 0.55%)</title><rect x="60.3606%" y="1973" width="0.5517%" height="15" fill="rgb(235,85,53)" fg:x="141203945" fg:w="1290605"/><text x="60.6106%" y="1983.50"></text></g><g><title>benchmark::clear_dirty_flags (1,290,605 samples, 0.55%)</title><rect x="60.3606%" y="1957" width="0.5517%" height="15" fill="rgb(233,133,31)" fg:x="141203945" fg:w="1290605"/><text x="60.6106%" y="1967.50"></text></g><g><title>benchmark::clear_dirty_flags (1,290,605 samples, 0.55%)</title><rect x="60.3606%" y="1941" width="0.5517%" height="15" fill="rgb(218,25,20)" fg:x="141203945" fg:w="1290605"/><text x="60.6106%" y="1951.50"></text></g><g><title>benchmark::clear_dirty_flags (1,290,605 samples, 0.55%)</title><rect x="60.3606%" y="1925" width="0.5517%" height="15" fill="rgb(252,210,38)" fg:x="141203945" fg:w="1290605"/><text x="60.6106%" y="1935.50"></text></g><g><title>benchmark::clear_dirty_flags (1,290,605 samples, 0.55%)</title><rect x="60.3606%" y="1909" width="0.5517%" height="15" fill="rgb(242,134,21)" fg:x="141203945" fg:w="1290605"/><text x="60.6106%" y="1919.50"></text></g><g><title>benchmark::clear_dirty_flags (1,290,605 samples, 0.55%)</title><rect x="60.3606%" y="1893" width="0.5517%" height="15" fill="rgb(213,28,48)" fg:x="141203945" fg:w="1290605"/><text x="60.6106%" y="1903.50"></text></g><g><title>benchmark::clear_dirty_flags (1,290,605 samples, 0.55%)</title><rect x="60.3606%" y="1877" width="0.5517%" height="15" fill="rgb(250,196,2)" fg:x="141203945" fg:w="1290605"/><text x="60.6106%" y="1887.50"></text></g><g><title>benchmark::clear_dirty_flags (1,290,605 samples, 0.55%)</title><rect x="60.3606%" y="1861" width="0.5517%" height="15" fill="rgb(227,5,17)" fg:x="141203945" fg:w="1290605"/><text x="60.6106%" y="1871.50"></text></g><g><title>benchmark::clear_dirty_flags (1,290,605 samples, 0.55%)</title><rect x="60.3606%" y="1845" width="0.5517%" height="15" fill="rgb(221,226,24)" fg:x="141203945" fg:w="1290605"/><text x="60.6106%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,277,396 samples, 0.55%)</title><rect x="60.9123%" y="1701" width="0.5460%" height="15" fill="rgb(211,5,48)" fg:x="142494550" fg:w="1277396"/><text x="61.1623%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,277,396 samples, 0.55%)</title><rect x="60.9123%" y="1685" width="0.5460%" height="15" fill="rgb(219,150,6)" fg:x="142494550" fg:w="1277396"/><text x="61.1623%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,275,590 samples, 0.55%)</title><rect x="61.4584%" y="1477" width="0.5453%" height="15" fill="rgb(251,46,16)" fg:x="143771946" fg:w="1275590"/><text x="61.7084%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,275,590 samples, 0.55%)</title><rect x="61.4584%" y="1461" width="0.5453%" height="15" fill="rgb(220,204,40)" fg:x="143771946" fg:w="1275590"/><text x="61.7084%" y="1471.50"></text></g><g><title>benchmark::count_nodes (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="2053" width="1.6393%" height="15" fill="rgb(211,85,2)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="2063.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="2037" width="1.6393%" height="15" fill="rgb(229,17,7)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="2047.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="2021" width="1.6393%" height="15" fill="rgb(239,72,28)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="2031.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="2005" width="1.6393%" height="15" fill="rgb(230,47,54)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="2015.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="1989" width="1.6393%" height="15" fill="rgb(214,50,8)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="1999.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="1973" width="1.6393%" height="15" fill="rgb(216,198,43)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="1983.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="1957" width="1.6393%" height="15" fill="rgb(234,20,35)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="1967.50"></text></g><g><title>benchmark::count_nodes (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="1941" width="1.6393%" height="15" fill="rgb(254,45,19)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="1951.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="1925" width="1.6393%" height="15" fill="rgb(219,14,44)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="1935.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="1909" width="1.6393%" height="15" fill="rgb(217,220,26)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="1919.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="1893" width="1.6393%" height="15" fill="rgb(213,158,28)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="1903.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="1877" width="1.6393%" height="15" fill="rgb(252,51,52)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="1887.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="1861" width="1.6393%" height="15" fill="rgb(246,89,16)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="1871.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="1845" width="1.6393%" height="15" fill="rgb(216,158,49)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="1855.50"></text></g><g><title>benchmark::count_nodes (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="1829" width="1.6393%" height="15" fill="rgb(236,107,19)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="1839.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="1813" width="1.6393%" height="15" fill="rgb(228,185,30)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="1823.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="1797" width="1.6393%" height="15" fill="rgb(246,134,8)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="1807.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="1781" width="1.6393%" height="15" fill="rgb(214,143,50)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="1791.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="1765" width="1.6393%" height="15" fill="rgb(228,75,8)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="1775.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="1749" width="1.6393%" height="15" fill="rgb(207,175,4)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="1759.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="1733" width="1.6393%" height="15" fill="rgb(205,108,24)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="1743.50"></text></g><g><title>benchmark::count_nodes (3,834,847 samples, 1.64%)</title><rect x="60.9123%" y="1717" width="1.6393%" height="15" fill="rgb(244,120,49)" fg:x="142494550" fg:w="3834847"/><text x="61.1623%" y="1727.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,557,451 samples, 1.09%)</title><rect x="61.4584%" y="1701" width="1.0932%" height="15" fill="rgb(223,47,38)" fg:x="143771946" fg:w="2557451"/><text x="61.7084%" y="1711.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,557,451 samples, 1.09%)</title><rect x="61.4584%" y="1685" width="1.0932%" height="15" fill="rgb(229,179,11)" fg:x="143771946" fg:w="2557451"/><text x="61.7084%" y="1695.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,557,451 samples, 1.09%)</title><rect x="61.4584%" y="1669" width="1.0932%" height="15" fill="rgb(231,122,1)" fg:x="143771946" fg:w="2557451"/><text x="61.7084%" y="1679.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,557,451 samples, 1.09%)</title><rect x="61.4584%" y="1653" width="1.0932%" height="15" fill="rgb(245,119,9)" fg:x="143771946" fg:w="2557451"/><text x="61.7084%" y="1663.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,557,451 samples, 1.09%)</title><rect x="61.4584%" y="1637" width="1.0932%" height="15" fill="rgb(241,163,25)" fg:x="143771946" fg:w="2557451"/><text x="61.7084%" y="1647.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,557,451 samples, 1.09%)</title><rect x="61.4584%" y="1621" width="1.0932%" height="15" fill="rgb(217,214,3)" fg:x="143771946" fg:w="2557451"/><text x="61.7084%" y="1631.50"></text></g><g><title>benchmark::count_nodes (2,557,451 samples, 1.09%)</title><rect x="61.4584%" y="1605" width="1.0932%" height="15" fill="rgb(240,86,28)" fg:x="143771946" fg:w="2557451"/><text x="61.7084%" y="1615.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,557,451 samples, 1.09%)</title><rect x="61.4584%" y="1589" width="1.0932%" height="15" fill="rgb(215,47,9)" fg:x="143771946" fg:w="2557451"/><text x="61.7084%" y="1599.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,557,451 samples, 1.09%)</title><rect x="61.4584%" y="1573" width="1.0932%" height="15" fill="rgb(252,25,45)" fg:x="143771946" fg:w="2557451"/><text x="61.7084%" y="1583.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,557,451 samples, 1.09%)</title><rect x="61.4584%" y="1557" width="1.0932%" height="15" fill="rgb(251,164,9)" fg:x="143771946" fg:w="2557451"/><text x="61.7084%" y="1567.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,557,451 samples, 1.09%)</title><rect x="61.4584%" y="1541" width="1.0932%" height="15" fill="rgb(233,194,0)" fg:x="143771946" fg:w="2557451"/><text x="61.7084%" y="1551.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,557,451 samples, 1.09%)</title><rect x="61.4584%" y="1525" width="1.0932%" height="15" fill="rgb(249,111,24)" fg:x="143771946" fg:w="2557451"/><text x="61.7084%" y="1535.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,557,451 samples, 1.09%)</title><rect x="61.4584%" y="1509" width="1.0932%" height="15" fill="rgb(250,223,3)" fg:x="143771946" fg:w="2557451"/><text x="61.7084%" y="1519.50"></text></g><g><title>benchmark::count_nodes (2,557,451 samples, 1.09%)</title><rect x="61.4584%" y="1493" width="1.0932%" height="15" fill="rgb(236,178,37)" fg:x="143771946" fg:w="2557451"/><text x="61.7084%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1477" width="0.5480%" height="15" fill="rgb(241,158,50)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1487.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1461" width="0.5480%" height="15" fill="rgb(213,121,41)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1471.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1445" width="0.5480%" height="15" fill="rgb(240,92,3)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1455.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1429" width="0.5480%" height="15" fill="rgb(205,123,3)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1439.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1413" width="0.5480%" height="15" fill="rgb(205,97,47)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1423.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1397" width="0.5480%" height="15" fill="rgb(247,152,14)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1407.50"></text></g><g><title>benchmark::count_nodes (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1381" width="0.5480%" height="15" fill="rgb(248,195,53)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1391.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1365" width="0.5480%" height="15" fill="rgb(226,201,16)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1375.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1349" width="0.5480%" height="15" fill="rgb(205,98,0)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1333" width="0.5480%" height="15" fill="rgb(214,191,48)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1343.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1317" width="0.5480%" height="15" fill="rgb(237,112,39)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1327.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1301" width="0.5480%" height="15" fill="rgb(247,203,27)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1311.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1285" width="0.5480%" height="15" fill="rgb(235,124,28)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1295.50"></text></g><g><title>benchmark::count_nodes (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1269" width="0.5480%" height="15" fill="rgb(208,207,46)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1253" width="0.5480%" height="15" fill="rgb(234,176,4)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1263.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1237" width="0.5480%" height="15" fill="rgb(230,133,28)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1221" width="0.5480%" height="15" fill="rgb(211,137,40)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1231.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1205" width="0.5480%" height="15" fill="rgb(254,35,13)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1215.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1189" width="0.5480%" height="15" fill="rgb(225,49,51)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1199.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1173" width="0.5480%" height="15" fill="rgb(251,10,15)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1183.50"></text></g><g><title>benchmark::count_nodes (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1157" width="0.5480%" height="15" fill="rgb(228,207,15)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1141" width="0.5480%" height="15" fill="rgb(241,99,19)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1151.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1125" width="0.5480%" height="15" fill="rgb(207,104,49)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1109" width="0.5480%" height="15" fill="rgb(234,99,18)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1093" width="0.5480%" height="15" fill="rgb(213,191,49)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1103.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1077" width="0.5480%" height="15" fill="rgb(210,226,19)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1087.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1061" width="0.5480%" height="15" fill="rgb(229,97,18)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1071.50"></text></g><g><title>benchmark::count_nodes (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1045" width="0.5480%" height="15" fill="rgb(211,167,15)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1029" width="0.5480%" height="15" fill="rgb(210,169,34)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1039.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="1013" width="0.5480%" height="15" fill="rgb(241,121,31)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="997" width="0.5480%" height="15" fill="rgb(232,40,11)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,281,861 samples, 0.55%)</title><rect x="62.0036%" y="981" width="0.5480%" height="15" fill="rgb(205,86,26)" fg:x="145047536" fg:w="1281861"/><text x="62.2536%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,588,761 samples, 1.11%)</title><rect x="63.0950%" y="1653" width="1.1066%" height="15" fill="rgb(231,126,28)" fg:x="147600547" fg:w="2588761"/><text x="63.3450%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,588,761 samples, 1.11%)</title><rect x="63.0950%" y="1637" width="1.1066%" height="15" fill="rgb(219,221,18)" fg:x="147600547" fg:w="2588761"/><text x="63.3450%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,588,761 samples, 1.11%)</title><rect x="63.0950%" y="1621" width="1.1066%" height="15" fill="rgb(211,40,0)" fg:x="147600547" fg:w="2588761"/><text x="63.3450%" y="1631.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,588,761 samples, 1.11%)</title><rect x="63.0950%" y="1605" width="1.1066%" height="15" fill="rgb(239,85,43)" fg:x="147600547" fg:w="2588761"/><text x="63.3450%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,588,761 samples, 1.11%)</title><rect x="63.0950%" y="1589" width="1.1066%" height="15" fill="rgb(231,55,21)" fg:x="147600547" fg:w="2588761"/><text x="63.3450%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,588,761 samples, 1.11%)</title><rect x="63.0950%" y="1573" width="1.1066%" height="15" fill="rgb(225,184,43)" fg:x="147600547" fg:w="2588761"/><text x="63.3450%" y="1583.50"></text></g><g><title>alloc::alloc::dealloc (2,588,761 samples, 1.11%)</title><rect x="63.0950%" y="1557" width="1.1066%" height="15" fill="rgb(251,158,41)" fg:x="147600547" fg:w="2588761"/><text x="63.3450%" y="1567.50"></text></g><g><title>cfree (2,588,761 samples, 1.11%)</title><rect x="63.0950%" y="1541" width="1.1066%" height="15" fill="rgb(234,159,37)" fg:x="147600547" fg:w="2588761"/><text x="63.3450%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,508,526 samples, 0.64%)</title><rect x="64.2016%" y="1589" width="0.6449%" height="15" fill="rgb(216,204,22)" fg:x="150189308" fg:w="1508526"/><text x="64.4516%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,508,526 samples, 0.64%)</title><rect x="64.2016%" y="1573" width="0.6449%" height="15" fill="rgb(214,17,3)" fg:x="150189308" fg:w="1508526"/><text x="64.4516%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,508,526 samples, 0.64%)</title><rect x="64.2016%" y="1557" width="0.6449%" height="15" fill="rgb(212,111,17)" fg:x="150189308" fg:w="1508526"/><text x="64.4516%" y="1567.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,508,526 samples, 0.64%)</title><rect x="64.2016%" y="1541" width="0.6449%" height="15" fill="rgb(221,157,24)" fg:x="150189308" fg:w="1508526"/><text x="64.4516%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,508,526 samples, 0.64%)</title><rect x="64.2016%" y="1525" width="0.6449%" height="15" fill="rgb(252,16,13)" fg:x="150189308" fg:w="1508526"/><text x="64.4516%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,508,526 samples, 0.64%)</title><rect x="64.2016%" y="1509" width="0.6449%" height="15" fill="rgb(221,62,2)" fg:x="150189308" fg:w="1508526"/><text x="64.4516%" y="1519.50"></text></g><g><title>alloc::alloc::dealloc (1,508,526 samples, 0.64%)</title><rect x="64.2016%" y="1493" width="0.6449%" height="15" fill="rgb(247,87,22)" fg:x="150189308" fg:w="1508526"/><text x="64.4516%" y="1503.50"></text></g><g><title>cfree (1,508,526 samples, 0.64%)</title><rect x="64.2016%" y="1477" width="0.6449%" height="15" fill="rgb(215,73,9)" fg:x="150189308" fg:w="1508526"/><text x="64.4516%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,526,903 samples, 0.65%)</title><rect x="65.3261%" y="1077" width="0.6527%" height="15" fill="rgb(207,175,33)" fg:x="152819963" fg:w="1526903"/><text x="65.5761%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,526,903 samples, 0.65%)</title><rect x="65.3261%" y="1061" width="0.6527%" height="15" fill="rgb(243,129,54)" fg:x="152819963" fg:w="1526903"/><text x="65.5761%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,526,903 samples, 0.65%)</title><rect x="65.3261%" y="1045" width="0.6527%" height="15" fill="rgb(227,119,45)" fg:x="152819963" fg:w="1526903"/><text x="65.5761%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,526,903 samples, 0.65%)</title><rect x="65.3261%" y="1029" width="0.6527%" height="15" fill="rgb(205,109,36)" fg:x="152819963" fg:w="1526903"/><text x="65.5761%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,526,903 samples, 0.65%)</title><rect x="65.3261%" y="1013" width="0.6527%" height="15" fill="rgb(205,6,39)" fg:x="152819963" fg:w="1526903"/><text x="65.5761%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,526,903 samples, 0.65%)</title><rect x="65.3261%" y="997" width="0.6527%" height="15" fill="rgb(221,32,16)" fg:x="152819963" fg:w="1526903"/><text x="65.5761%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (1,526,903 samples, 0.65%)</title><rect x="65.3261%" y="981" width="0.6527%" height="15" fill="rgb(228,144,50)" fg:x="152819963" fg:w="1526903"/><text x="65.5761%" y="991.50"></text></g><g><title>cfree (1,526,903 samples, 0.65%)</title><rect x="65.3261%" y="965" width="0.6527%" height="15" fill="rgb(229,201,53)" fg:x="152819963" fg:w="1526903"/><text x="65.5761%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,371,243 samples, 0.59%)</title><rect x="65.9788%" y="1061" width="0.5862%" height="15" fill="rgb(249,153,27)" fg:x="154346866" fg:w="1371243"/><text x="66.2288%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,371,243 samples, 0.59%)</title><rect x="65.9788%" y="1045" width="0.5862%" height="15" fill="rgb(227,106,25)" fg:x="154346866" fg:w="1371243"/><text x="66.2288%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,371,243 samples, 0.59%)</title><rect x="65.9788%" y="1029" width="0.5862%" height="15" fill="rgb(230,65,29)" fg:x="154346866" fg:w="1371243"/><text x="66.2288%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,371,243 samples, 0.59%)</title><rect x="65.9788%" y="1013" width="0.5862%" height="15" fill="rgb(221,57,46)" fg:x="154346866" fg:w="1371243"/><text x="66.2288%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,371,243 samples, 0.59%)</title><rect x="65.9788%" y="997" width="0.5862%" height="15" fill="rgb(229,161,17)" fg:x="154346866" fg:w="1371243"/><text x="66.2288%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,371,243 samples, 0.59%)</title><rect x="65.9788%" y="981" width="0.5862%" height="15" fill="rgb(222,213,11)" fg:x="154346866" fg:w="1371243"/><text x="66.2288%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,371,243 samples, 0.59%)</title><rect x="65.9788%" y="965" width="0.5862%" height="15" fill="rgb(235,35,13)" fg:x="154346866" fg:w="1371243"/><text x="66.2288%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,371,243 samples, 0.59%)</title><rect x="65.9788%" y="949" width="0.5862%" height="15" fill="rgb(233,158,34)" fg:x="154346866" fg:w="1371243"/><text x="66.2288%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,690,192 samples, 1.15%)</title><rect x="65.9788%" y="1077" width="1.1500%" height="15" fill="rgb(215,151,48)" fg:x="154346866" fg:w="2690192"/><text x="66.2288%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,318,949 samples, 0.56%)</title><rect x="66.5650%" y="1061" width="0.5638%" height="15" fill="rgb(229,84,14)" fg:x="155718109" fg:w="1318949"/><text x="66.8150%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,318,949 samples, 0.56%)</title><rect x="66.5650%" y="1045" width="0.5638%" height="15" fill="rgb(229,68,14)" fg:x="155718109" fg:w="1318949"/><text x="66.8150%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,318,949 samples, 0.56%)</title><rect x="66.5650%" y="1029" width="0.5638%" height="15" fill="rgb(243,106,26)" fg:x="155718109" fg:w="1318949"/><text x="66.8150%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,318,949 samples, 0.56%)</title><rect x="66.5650%" y="1013" width="0.5638%" height="15" fill="rgb(206,45,38)" fg:x="155718109" fg:w="1318949"/><text x="66.8150%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (1,318,949 samples, 0.56%)</title><rect x="66.5650%" y="997" width="0.5638%" height="15" fill="rgb(226,6,15)" fg:x="155718109" fg:w="1318949"/><text x="66.8150%" y="1007.50"></text></g><g><title>cfree (1,318,949 samples, 0.56%)</title><rect x="66.5650%" y="981" width="0.5638%" height="15" fill="rgb(232,22,54)" fg:x="155718109" fg:w="1318949"/><text x="66.8150%" y="991.50"></text></g><g><title>[libc.so.6] (1,318,949 samples, 0.56%)</title><rect x="66.5650%" y="965" width="0.5638%" height="15" fill="rgb(229,222,32)" fg:x="155718109" fg:w="1318949"/><text x="66.8150%" y="975.50"></text></g><g><title>[libc.so.6] (1,318,949 samples, 0.56%)</title><rect x="66.5650%" y="949" width="0.5638%" height="15" fill="rgb(228,62,29)" fg:x="155718109" fg:w="1318949"/><text x="66.8150%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,536,155 samples, 2.37%)</title><rect x="65.3261%" y="1141" width="2.3665%" height="15" fill="rgb(251,103,34)" fg:x="152819963" fg:w="5536155"/><text x="65.5761%" y="1151.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,536,155 samples, 2.37%)</title><rect x="65.3261%" y="1125" width="2.3665%" height="15" fill="rgb(233,12,30)" fg:x="152819963" fg:w="5536155"/><text x="65.5761%" y="1135.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,536,155 samples, 2.37%)</title><rect x="65.3261%" y="1109" width="2.3665%" height="15" fill="rgb(238,52,0)" fg:x="152819963" fg:w="5536155"/><text x="65.5761%" y="1119.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,536,155 samples, 2.37%)</title><rect x="65.3261%" y="1093" width="2.3665%" height="15" fill="rgb(223,98,5)" fg:x="152819963" fg:w="5536155"/><text x="65.5761%" y="1103.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,319,060 samples, 0.56%)</title><rect x="67.1288%" y="1077" width="0.5639%" height="15" fill="rgb(228,75,37)" fg:x="157037058" fg:w="1319060"/><text x="67.3788%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,319,060 samples, 0.56%)</title><rect x="67.1288%" y="1061" width="0.5639%" height="15" fill="rgb(205,115,49)" fg:x="157037058" fg:w="1319060"/><text x="67.3788%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,319,060 samples, 0.56%)</title><rect x="67.1288%" y="1045" width="0.5639%" height="15" fill="rgb(250,154,43)" fg:x="157037058" fg:w="1319060"/><text x="67.3788%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,319,060 samples, 0.56%)</title><rect x="67.1288%" y="1029" width="0.5639%" height="15" fill="rgb(226,43,29)" fg:x="157037058" fg:w="1319060"/><text x="67.3788%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,319,060 samples, 0.56%)</title><rect x="67.1288%" y="1013" width="0.5639%" height="15" fill="rgb(249,228,39)" fg:x="157037058" fg:w="1319060"/><text x="67.3788%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,319,060 samples, 0.56%)</title><rect x="67.1288%" y="997" width="0.5639%" height="15" fill="rgb(216,79,43)" fg:x="157037058" fg:w="1319060"/><text x="67.3788%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,319,060 samples, 0.56%)</title><rect x="67.1288%" y="981" width="0.5639%" height="15" fill="rgb(228,95,12)" fg:x="157037058" fg:w="1319060"/><text x="67.3788%" y="991.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,319,060 samples, 0.56%)</title><rect x="67.1288%" y="965" width="0.5639%" height="15" fill="rgb(249,221,15)" fg:x="157037058" fg:w="1319060"/><text x="67.3788%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,319,060 samples, 0.56%)</title><rect x="67.1288%" y="949" width="0.5639%" height="15" fill="rgb(233,34,13)" fg:x="157037058" fg:w="1319060"/><text x="67.3788%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,319,060 samples, 0.56%)</title><rect x="67.1288%" y="933" width="0.5639%" height="15" fill="rgb(214,103,39)" fg:x="157037058" fg:w="1319060"/><text x="67.3788%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,319,060 samples, 0.56%)</title><rect x="67.1288%" y="917" width="0.5639%" height="15" fill="rgb(251,126,39)" fg:x="157037058" fg:w="1319060"/><text x="67.3788%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,319,060 samples, 0.56%)</title><rect x="67.1288%" y="901" width="0.5639%" height="15" fill="rgb(214,216,36)" fg:x="157037058" fg:w="1319060"/><text x="67.3788%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,319,060 samples, 0.56%)</title><rect x="67.1288%" y="885" width="0.5639%" height="15" fill="rgb(220,221,8)" fg:x="157037058" fg:w="1319060"/><text x="67.3788%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,319,060 samples, 0.56%)</title><rect x="67.1288%" y="869" width="0.5639%" height="15" fill="rgb(240,216,3)" fg:x="157037058" fg:w="1319060"/><text x="67.3788%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,319,060 samples, 0.56%)</title><rect x="67.1288%" y="853" width="0.5639%" height="15" fill="rgb(232,218,17)" fg:x="157037058" fg:w="1319060"/><text x="67.3788%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,319,060 samples, 0.56%)</title><rect x="67.1288%" y="837" width="0.5639%" height="15" fill="rgb(229,163,45)" fg:x="157037058" fg:w="1319060"/><text x="67.3788%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (1,319,060 samples, 0.56%)</title><rect x="67.1288%" y="821" width="0.5639%" height="15" fill="rgb(231,110,42)" fg:x="157037058" fg:w="1319060"/><text x="67.3788%" y="831.50"></text></g><g><title>cfree (1,319,060 samples, 0.56%)</title><rect x="67.1288%" y="805" width="0.5639%" height="15" fill="rgb(208,170,48)" fg:x="157037058" fg:w="1319060"/><text x="67.3788%" y="815.50"></text></g><g><title>[libc.so.6] (1,319,060 samples, 0.56%)</title><rect x="67.1288%" y="789" width="0.5639%" height="15" fill="rgb(239,116,25)" fg:x="157037058" fg:w="1319060"/><text x="67.3788%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,022,644 samples, 3.00%)</title><rect x="65.3261%" y="1189" width="3.0020%" height="15" fill="rgb(219,200,50)" fg:x="152819963" fg:w="7022644"/><text x="65.5761%" y="1199.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (7,022,644 samples, 3.00%)</title><rect x="65.3261%" y="1173" width="3.0020%" height="15" fill="rgb(245,200,0)" fg:x="152819963" fg:w="7022644"/><text x="65.5761%" y="1183.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (7,022,644 samples, 3.00%)</title><rect x="65.3261%" y="1157" width="3.0020%" height="15" fill="rgb(245,119,33)" fg:x="152819963" fg:w="7022644"/><text x="65.5761%" y="1167.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,486,489 samples, 0.64%)</title><rect x="67.6927%" y="1141" width="0.6354%" height="15" fill="rgb(231,125,12)" fg:x="158356118" fg:w="1486489"/><text x="67.9427%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,486,489 samples, 0.64%)</title><rect x="67.6927%" y="1125" width="0.6354%" height="15" fill="rgb(216,96,41)" fg:x="158356118" fg:w="1486489"/><text x="67.9427%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,486,489 samples, 0.64%)</title><rect x="67.6927%" y="1109" width="0.6354%" height="15" fill="rgb(248,43,45)" fg:x="158356118" fg:w="1486489"/><text x="67.9427%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,486,489 samples, 0.64%)</title><rect x="67.6927%" y="1093" width="0.6354%" height="15" fill="rgb(217,222,7)" fg:x="158356118" fg:w="1486489"/><text x="67.9427%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,486,489 samples, 0.64%)</title><rect x="67.6927%" y="1077" width="0.6354%" height="15" fill="rgb(233,28,6)" fg:x="158356118" fg:w="1486489"/><text x="67.9427%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,486,489 samples, 0.64%)</title><rect x="67.6927%" y="1061" width="0.6354%" height="15" fill="rgb(231,218,15)" fg:x="158356118" fg:w="1486489"/><text x="67.9427%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,486,489 samples, 0.64%)</title><rect x="67.6927%" y="1045" width="0.6354%" height="15" fill="rgb(226,171,48)" fg:x="158356118" fg:w="1486489"/><text x="67.9427%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (1,486,489 samples, 0.64%)</title><rect x="67.6927%" y="1029" width="0.6354%" height="15" fill="rgb(235,201,9)" fg:x="158356118" fg:w="1486489"/><text x="67.9427%" y="1039.50"></text></g><g><title>cfree (1,486,489 samples, 0.64%)</title><rect x="67.6927%" y="1013" width="0.6354%" height="15" fill="rgb(217,80,15)" fg:x="158356118" fg:w="1486489"/><text x="67.9427%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (8,302,367 samples, 3.55%)</title><rect x="65.3261%" y="1205" width="3.5490%" height="15" fill="rgb(219,152,8)" fg:x="152819963" fg:w="8302367"/><text x="65.5761%" y="1215.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,279,723 samples, 0.55%)</title><rect x="68.3281%" y="1189" width="0.5470%" height="15" fill="rgb(243,107,38)" fg:x="159842607" fg:w="1279723"/><text x="68.5781%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,279,723 samples, 0.55%)</title><rect x="68.3281%" y="1173" width="0.5470%" height="15" fill="rgb(231,17,5)" fg:x="159842607" fg:w="1279723"/><text x="68.5781%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,279,723 samples, 0.55%)</title><rect x="68.3281%" y="1157" width="0.5470%" height="15" fill="rgb(209,25,54)" fg:x="159842607" fg:w="1279723"/><text x="68.5781%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,279,723 samples, 0.55%)</title><rect x="68.3281%" y="1141" width="0.5470%" height="15" fill="rgb(219,0,2)" fg:x="159842607" fg:w="1279723"/><text x="68.5781%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (1,279,723 samples, 0.55%)</title><rect x="68.3281%" y="1125" width="0.5470%" height="15" fill="rgb(246,9,5)" fg:x="159842607" fg:w="1279723"/><text x="68.5781%" y="1135.50"></text></g><g><title>cfree (1,279,723 samples, 0.55%)</title><rect x="68.3281%" y="1109" width="0.5470%" height="15" fill="rgb(226,159,4)" fg:x="159842607" fg:w="1279723"/><text x="68.5781%" y="1119.50"></text></g><g><title>[libc.so.6] (1,279,723 samples, 0.55%)</title><rect x="68.3281%" y="1093" width="0.5470%" height="15" fill="rgb(219,175,34)" fg:x="159842607" fg:w="1279723"/><text x="68.5781%" y="1103.50"></text></g><g><title>[libc.so.6] (1,279,723 samples, 0.55%)</title><rect x="68.3281%" y="1077" width="0.5470%" height="15" fill="rgb(236,10,46)" fg:x="159842607" fg:w="1279723"/><text x="68.5781%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,817,698 samples, 4.20%)</title><rect x="65.3261%" y="1269" width="4.1968%" height="15" fill="rgb(240,211,16)" fg:x="152819963" fg:w="9817698"/><text x="65.5761%" y="1279.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,817,698 samples, 4.20%)</title><rect x="65.3261%" y="1253" width="4.1968%" height="15" fill="rgb(205,3,43)" fg:x="152819963" fg:w="9817698"/><text x="65.5761%" y="1263.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,817,698 samples, 4.20%)</title><rect x="65.3261%" y="1237" width="4.1968%" height="15" fill="rgb(245,7,22)" fg:x="152819963" fg:w="9817698"/><text x="65.5761%" y="1247.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,817,698 samples, 4.20%)</title><rect x="65.3261%" y="1221" width="4.1968%" height="15" fill="rgb(239,132,32)" fg:x="152819963" fg:w="9817698"/><text x="65.5761%" y="1231.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,515,331 samples, 0.65%)</title><rect x="68.8752%" y="1205" width="0.6478%" height="15" fill="rgb(228,202,34)" fg:x="161122330" fg:w="1515331"/><text x="69.1252%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,515,331 samples, 0.65%)</title><rect x="68.8752%" y="1189" width="0.6478%" height="15" fill="rgb(254,200,22)" fg:x="161122330" fg:w="1515331"/><text x="69.1252%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,515,331 samples, 0.65%)</title><rect x="68.8752%" y="1173" width="0.6478%" height="15" fill="rgb(219,10,39)" fg:x="161122330" fg:w="1515331"/><text x="69.1252%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,515,331 samples, 0.65%)</title><rect x="68.8752%" y="1157" width="0.6478%" height="15" fill="rgb(226,210,39)" fg:x="161122330" fg:w="1515331"/><text x="69.1252%" y="1167.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,515,331 samples, 0.65%)</title><rect x="68.8752%" y="1141" width="0.6478%" height="15" fill="rgb(208,219,16)" fg:x="161122330" fg:w="1515331"/><text x="69.1252%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,515,331 samples, 0.65%)</title><rect x="68.8752%" y="1125" width="0.6478%" height="15" fill="rgb(216,158,51)" fg:x="161122330" fg:w="1515331"/><text x="69.1252%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,515,331 samples, 0.65%)</title><rect x="68.8752%" y="1109" width="0.6478%" height="15" fill="rgb(233,14,44)" fg:x="161122330" fg:w="1515331"/><text x="69.1252%" y="1119.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,515,331 samples, 0.65%)</title><rect x="68.8752%" y="1093" width="0.6478%" height="15" fill="rgb(237,97,39)" fg:x="161122330" fg:w="1515331"/><text x="69.1252%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,515,331 samples, 0.65%)</title><rect x="68.8752%" y="1077" width="0.6478%" height="15" fill="rgb(218,198,43)" fg:x="161122330" fg:w="1515331"/><text x="69.1252%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,515,331 samples, 0.65%)</title><rect x="68.8752%" y="1061" width="0.6478%" height="15" fill="rgb(231,104,20)" fg:x="161122330" fg:w="1515331"/><text x="69.1252%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,515,331 samples, 0.65%)</title><rect x="68.8752%" y="1045" width="0.6478%" height="15" fill="rgb(254,36,13)" fg:x="161122330" fg:w="1515331"/><text x="69.1252%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,515,331 samples, 0.65%)</title><rect x="68.8752%" y="1029" width="0.6478%" height="15" fill="rgb(248,14,50)" fg:x="161122330" fg:w="1515331"/><text x="69.1252%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,515,331 samples, 0.65%)</title><rect x="68.8752%" y="1013" width="0.6478%" height="15" fill="rgb(217,107,29)" fg:x="161122330" fg:w="1515331"/><text x="69.1252%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,515,331 samples, 0.65%)</title><rect x="68.8752%" y="997" width="0.6478%" height="15" fill="rgb(251,169,33)" fg:x="161122330" fg:w="1515331"/><text x="69.1252%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,515,331 samples, 0.65%)</title><rect x="68.8752%" y="981" width="0.6478%" height="15" fill="rgb(217,108,32)" fg:x="161122330" fg:w="1515331"/><text x="69.1252%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,515,331 samples, 0.65%)</title><rect x="68.8752%" y="965" width="0.6478%" height="15" fill="rgb(219,66,42)" fg:x="161122330" fg:w="1515331"/><text x="69.1252%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (1,515,331 samples, 0.65%)</title><rect x="68.8752%" y="949" width="0.6478%" height="15" fill="rgb(206,180,7)" fg:x="161122330" fg:w="1515331"/><text x="69.1252%" y="959.50"></text></g><g><title>cfree (1,515,331 samples, 0.65%)</title><rect x="68.8752%" y="933" width="0.6478%" height="15" fill="rgb(208,226,31)" fg:x="161122330" fg:w="1515331"/><text x="69.1252%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11,130,541 samples, 4.76%)</title><rect x="65.3261%" y="1317" width="4.7580%" height="15" fill="rgb(218,26,49)" fg:x="152819963" fg:w="11130541"/><text x="65.5761%" y="1327.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (11,130,541 samples, 4.76%)</title><rect x="65.3261%" y="1301" width="4.7580%" height="15" fill="rgb(233,197,48)" fg:x="152819963" fg:w="11130541"/><text x="65.5761%" y="1311.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (11,130,541 samples, 4.76%)</title><rect x="65.3261%" y="1285" width="4.7580%" height="15" fill="rgb(252,181,51)" fg:x="152819963" fg:w="11130541"/><text x="65.5761%" y="1295.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,312,843 samples, 0.56%)</title><rect x="69.5229%" y="1269" width="0.5612%" height="15" fill="rgb(253,90,19)" fg:x="162637661" fg:w="1312843"/><text x="69.7729%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,312,843 samples, 0.56%)</title><rect x="69.5229%" y="1253" width="0.5612%" height="15" fill="rgb(215,171,30)" fg:x="162637661" fg:w="1312843"/><text x="69.7729%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,312,843 samples, 0.56%)</title><rect x="69.5229%" y="1237" width="0.5612%" height="15" fill="rgb(214,222,9)" fg:x="162637661" fg:w="1312843"/><text x="69.7729%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,312,843 samples, 0.56%)</title><rect x="69.5229%" y="1221" width="0.5612%" height="15" fill="rgb(223,3,22)" fg:x="162637661" fg:w="1312843"/><text x="69.7729%" y="1231.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,312,843 samples, 0.56%)</title><rect x="69.5229%" y="1205" width="0.5612%" height="15" fill="rgb(225,196,46)" fg:x="162637661" fg:w="1312843"/><text x="69.7729%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,312,843 samples, 0.56%)</title><rect x="69.5229%" y="1189" width="0.5612%" height="15" fill="rgb(209,110,37)" fg:x="162637661" fg:w="1312843"/><text x="69.7729%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,312,843 samples, 0.56%)</title><rect x="69.5229%" y="1173" width="0.5612%" height="15" fill="rgb(249,89,12)" fg:x="162637661" fg:w="1312843"/><text x="69.7729%" y="1183.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,312,843 samples, 0.56%)</title><rect x="69.5229%" y="1157" width="0.5612%" height="15" fill="rgb(226,27,33)" fg:x="162637661" fg:w="1312843"/><text x="69.7729%" y="1167.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,312,843 samples, 0.56%)</title><rect x="69.5229%" y="1141" width="0.5612%" height="15" fill="rgb(213,82,22)" fg:x="162637661" fg:w="1312843"/><text x="69.7729%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,312,843 samples, 0.56%)</title><rect x="69.5229%" y="1125" width="0.5612%" height="15" fill="rgb(248,140,0)" fg:x="162637661" fg:w="1312843"/><text x="69.7729%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,312,843 samples, 0.56%)</title><rect x="69.5229%" y="1109" width="0.5612%" height="15" fill="rgb(228,106,3)" fg:x="162637661" fg:w="1312843"/><text x="69.7729%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,312,843 samples, 0.56%)</title><rect x="69.5229%" y="1093" width="0.5612%" height="15" fill="rgb(209,23,37)" fg:x="162637661" fg:w="1312843"/><text x="69.7729%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,312,843 samples, 0.56%)</title><rect x="69.5229%" y="1077" width="0.5612%" height="15" fill="rgb(241,93,50)" fg:x="162637661" fg:w="1312843"/><text x="69.7729%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,312,843 samples, 0.56%)</title><rect x="69.5229%" y="1061" width="0.5612%" height="15" fill="rgb(253,46,43)" fg:x="162637661" fg:w="1312843"/><text x="69.7729%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,312,843 samples, 0.56%)</title><rect x="69.5229%" y="1045" width="0.5612%" height="15" fill="rgb(226,206,43)" fg:x="162637661" fg:w="1312843"/><text x="69.7729%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,312,843 samples, 0.56%)</title><rect x="69.5229%" y="1029" width="0.5612%" height="15" fill="rgb(217,54,7)" fg:x="162637661" fg:w="1312843"/><text x="69.7729%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (1,312,843 samples, 0.56%)</title><rect x="69.5229%" y="1013" width="0.5612%" height="15" fill="rgb(223,5,52)" fg:x="162637661" fg:w="1312843"/><text x="69.7729%" y="1023.50"></text></g><g><title>cfree (1,312,843 samples, 0.56%)</title><rect x="69.5229%" y="997" width="0.5612%" height="15" fill="rgb(206,52,46)" fg:x="162637661" fg:w="1312843"/><text x="69.7729%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (12,476,764 samples, 5.33%)</title><rect x="65.3261%" y="1333" width="5.3335%" height="15" fill="rgb(253,136,11)" fg:x="152819963" fg:w="12476764"/><text x="65.5761%" y="1343.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,346,223 samples, 0.58%)</title><rect x="70.0841%" y="1317" width="0.5755%" height="15" fill="rgb(208,106,33)" fg:x="163950504" fg:w="1346223"/><text x="70.3341%" y="1327.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,346,223 samples, 0.58%)</title><rect x="70.0841%" y="1301" width="0.5755%" height="15" fill="rgb(206,54,4)" fg:x="163950504" fg:w="1346223"/><text x="70.3341%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,346,223 samples, 0.58%)</title><rect x="70.0841%" y="1285" width="0.5755%" height="15" fill="rgb(213,3,15)" fg:x="163950504" fg:w="1346223"/><text x="70.3341%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,346,223 samples, 0.58%)</title><rect x="70.0841%" y="1269" width="0.5755%" height="15" fill="rgb(252,211,39)" fg:x="163950504" fg:w="1346223"/><text x="70.3341%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (1,346,223 samples, 0.58%)</title><rect x="70.0841%" y="1253" width="0.5755%" height="15" fill="rgb(223,6,36)" fg:x="163950504" fg:w="1346223"/><text x="70.3341%" y="1263.50"></text></g><g><title>cfree (1,346,223 samples, 0.58%)</title><rect x="70.0841%" y="1237" width="0.5755%" height="15" fill="rgb(252,169,45)" fg:x="163950504" fg:w="1346223"/><text x="70.3341%" y="1247.50"></text></g><g><title>[libc.so.6] (1,346,223 samples, 0.58%)</title><rect x="70.0841%" y="1221" width="0.5755%" height="15" fill="rgb(212,48,26)" fg:x="163950504" fg:w="1346223"/><text x="70.3341%" y="1231.50"></text></g><g><title>[libc.so.6] (1,346,223 samples, 0.58%)</title><rect x="70.0841%" y="1205" width="0.5755%" height="15" fill="rgb(251,102,48)" fg:x="163950504" fg:w="1346223"/><text x="70.3341%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (13,740,371 samples, 5.87%)</title><rect x="65.3261%" y="1461" width="5.8736%" height="15" fill="rgb(243,208,16)" fg:x="152819963" fg:w="13740371"/><text x="65.5761%" y="1471.50">core::p..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,740,371 samples, 5.87%)</title><rect x="65.3261%" y="1445" width="5.8736%" height="15" fill="rgb(219,96,24)" fg:x="152819963" fg:w="13740371"/><text x="65.5761%" y="1455.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (13,740,371 samples, 5.87%)</title><rect x="65.3261%" y="1429" width="5.8736%" height="15" fill="rgb(219,33,29)" fg:x="152819963" fg:w="13740371"/><text x="65.5761%" y="1439.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (13,740,371 samples, 5.87%)</title><rect x="65.3261%" y="1413" width="5.8736%" height="15" fill="rgb(223,176,5)" fg:x="152819963" fg:w="13740371"/><text x="65.5761%" y="1423.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (13,740,371 samples, 5.87%)</title><rect x="65.3261%" y="1397" width="5.8736%" height="15" fill="rgb(228,140,14)" fg:x="152819963" fg:w="13740371"/><text x="65.5761%" y="1407.50">core::p..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,740,371 samples, 5.87%)</title><rect x="65.3261%" y="1381" width="5.8736%" height="15" fill="rgb(217,179,31)" fg:x="152819963" fg:w="13740371"/><text x="65.5761%" y="1391.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (13,740,371 samples, 5.87%)</title><rect x="65.3261%" y="1365" width="5.8736%" height="15" fill="rgb(230,9,30)" fg:x="152819963" fg:w="13740371"/><text x="65.5761%" y="1375.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (13,740,371 samples, 5.87%)</title><rect x="65.3261%" y="1349" width="5.8736%" height="15" fill="rgb(230,136,20)" fg:x="152819963" fg:w="13740371"/><text x="65.5761%" y="1359.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,263,607 samples, 0.54%)</title><rect x="70.6596%" y="1333" width="0.5402%" height="15" fill="rgb(215,210,22)" fg:x="165296727" fg:w="1263607"/><text x="70.9096%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,263,607 samples, 0.54%)</title><rect x="70.6596%" y="1317" width="0.5402%" height="15" fill="rgb(218,43,5)" fg:x="165296727" fg:w="1263607"/><text x="70.9096%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,263,607 samples, 0.54%)</title><rect x="70.6596%" y="1301" width="0.5402%" height="15" fill="rgb(216,11,5)" fg:x="165296727" fg:w="1263607"/><text x="70.9096%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,263,607 samples, 0.54%)</title><rect x="70.6596%" y="1285" width="0.5402%" height="15" fill="rgb(209,82,29)" fg:x="165296727" fg:w="1263607"/><text x="70.9096%" y="1295.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,263,607 samples, 0.54%)</title><rect x="70.6596%" y="1269" width="0.5402%" height="15" fill="rgb(244,115,12)" fg:x="165296727" fg:w="1263607"/><text x="70.9096%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,263,607 samples, 0.54%)</title><rect x="70.6596%" y="1253" width="0.5402%" height="15" fill="rgb(222,82,18)" fg:x="165296727" fg:w="1263607"/><text x="70.9096%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,263,607 samples, 0.54%)</title><rect x="70.6596%" y="1237" width="0.5402%" height="15" fill="rgb(249,227,8)" fg:x="165296727" fg:w="1263607"/><text x="70.9096%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1,263,607 samples, 0.54%)</title><rect x="70.6596%" y="1221" width="0.5402%" height="15" fill="rgb(253,141,45)" fg:x="165296727" fg:w="1263607"/><text x="70.9096%" y="1231.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1,263,607 samples, 0.54%)</title><rect x="70.6596%" y="1205" width="0.5402%" height="15" fill="rgb(234,184,4)" fg:x="165296727" fg:w="1263607"/><text x="70.9096%" y="1215.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_full (1,263,607 samples, 0.54%)</title><rect x="70.6596%" y="1189" width="0.5402%" height="15" fill="rgb(218,194,23)" fg:x="165296727" fg:w="1263607"/><text x="70.9096%" y="1199.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_empty_or_deleted (1,263,607 samples, 0.54%)</title><rect x="70.6596%" y="1173" width="0.5402%" height="15" fill="rgb(235,66,41)" fg:x="165296727" fg:w="1263607"/><text x="70.9096%" y="1183.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,263,607 samples, 0.54%)</title><rect x="70.6596%" y="1157" width="0.5402%" height="15" fill="rgb(245,217,1)" fg:x="165296727" fg:w="1263607"/><text x="70.9096%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (15,243,768 samples, 6.52%)</title><rect x="65.3261%" y="1525" width="6.5163%" height="15" fill="rgb(229,91,1)" fg:x="152819963" fg:w="15243768"/><text x="65.5761%" y="1535.50">core::ptr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15,243,768 samples, 6.52%)</title><rect x="65.3261%" y="1509" width="6.5163%" height="15" fill="rgb(207,101,30)" fg:x="152819963" fg:w="15243768"/><text x="65.5761%" y="1519.50">&lt;alloc::v..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (15,243,768 samples, 6.52%)</title><rect x="65.3261%" y="1493" width="6.5163%" height="15" fill="rgb(223,82,49)" fg:x="152819963" fg:w="15243768"/><text x="65.5761%" y="1503.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (15,243,768 samples, 6.52%)</title><rect x="65.3261%" y="1477" width="6.5163%" height="15" fill="rgb(218,167,17)" fg:x="152819963" fg:w="15243768"/><text x="65.5761%" y="1487.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,503,397 samples, 0.64%)</title><rect x="71.1997%" y="1461" width="0.6427%" height="15" fill="rgb(208,103,14)" fg:x="166560334" fg:w="1503397"/><text x="71.4497%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,503,397 samples, 0.64%)</title><rect x="71.1997%" y="1445" width="0.6427%" height="15" fill="rgb(238,20,8)" fg:x="166560334" fg:w="1503397"/><text x="71.4497%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,503,397 samples, 0.64%)</title><rect x="71.1997%" y="1429" width="0.6427%" height="15" fill="rgb(218,80,54)" fg:x="166560334" fg:w="1503397"/><text x="71.4497%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,503,397 samples, 0.64%)</title><rect x="71.1997%" y="1413" width="0.6427%" height="15" fill="rgb(240,144,17)" fg:x="166560334" fg:w="1503397"/><text x="71.4497%" y="1423.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,503,397 samples, 0.64%)</title><rect x="71.1997%" y="1397" width="0.6427%" height="15" fill="rgb(245,27,50)" fg:x="166560334" fg:w="1503397"/><text x="71.4497%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,503,397 samples, 0.64%)</title><rect x="71.1997%" y="1381" width="0.6427%" height="15" fill="rgb(251,51,7)" fg:x="166560334" fg:w="1503397"/><text x="71.4497%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,503,397 samples, 0.64%)</title><rect x="71.1997%" y="1365" width="0.6427%" height="15" fill="rgb(245,217,29)" fg:x="166560334" fg:w="1503397"/><text x="71.4497%" y="1375.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,503,397 samples, 0.64%)</title><rect x="71.1997%" y="1349" width="0.6427%" height="15" fill="rgb(221,176,29)" fg:x="166560334" fg:w="1503397"/><text x="71.4497%" y="1359.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,503,397 samples, 0.64%)</title><rect x="71.1997%" y="1333" width="0.6427%" height="15" fill="rgb(212,180,24)" fg:x="166560334" fg:w="1503397"/><text x="71.4497%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,503,397 samples, 0.64%)</title><rect x="71.1997%" y="1317" width="0.6427%" height="15" fill="rgb(254,24,2)" fg:x="166560334" fg:w="1503397"/><text x="71.4497%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,503,397 samples, 0.64%)</title><rect x="71.1997%" y="1301" width="0.6427%" height="15" fill="rgb(230,100,2)" fg:x="166560334" fg:w="1503397"/><text x="71.4497%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,503,397 samples, 0.64%)</title><rect x="71.1997%" y="1285" width="0.6427%" height="15" fill="rgb(219,142,25)" fg:x="166560334" fg:w="1503397"/><text x="71.4497%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,503,397 samples, 0.64%)</title><rect x="71.1997%" y="1269" width="0.6427%" height="15" fill="rgb(240,73,43)" fg:x="166560334" fg:w="1503397"/><text x="71.4497%" y="1279.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,503,397 samples, 0.64%)</title><rect x="71.1997%" y="1253" width="0.6427%" height="15" fill="rgb(214,114,15)" fg:x="166560334" fg:w="1503397"/><text x="71.4497%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,503,397 samples, 0.64%)</title><rect x="71.1997%" y="1237" width="0.6427%" height="15" fill="rgb(207,130,4)" fg:x="166560334" fg:w="1503397"/><text x="71.4497%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,503,397 samples, 0.64%)</title><rect x="71.1997%" y="1221" width="0.6427%" height="15" fill="rgb(221,25,40)" fg:x="166560334" fg:w="1503397"/><text x="71.4497%" y="1231.50"></text></g><g><title>alloc::alloc::dealloc (1,503,397 samples, 0.64%)</title><rect x="71.1997%" y="1205" width="0.6427%" height="15" fill="rgb(241,184,7)" fg:x="166560334" fg:w="1503397"/><text x="71.4497%" y="1215.50"></text></g><g><title>cfree (1,503,397 samples, 0.64%)</title><rect x="71.1997%" y="1189" width="0.6427%" height="15" fill="rgb(235,159,4)" fg:x="166560334" fg:w="1503397"/><text x="71.4497%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (17,879,531 samples, 7.64%)</title><rect x="64.8465%" y="1589" width="7.6430%" height="15" fill="rgb(214,87,48)" fg:x="151697834" fg:w="17879531"/><text x="65.0965%" y="1599.50">core::ptr:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,879,531 samples, 7.64%)</title><rect x="64.8465%" y="1573" width="7.6430%" height="15" fill="rgb(246,198,24)" fg:x="151697834" fg:w="17879531"/><text x="65.0965%" y="1583.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (17,879,531 samples, 7.64%)</title><rect x="64.8465%" y="1557" width="7.6430%" height="15" fill="rgb(209,66,40)" fg:x="151697834" fg:w="17879531"/><text x="65.0965%" y="1567.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (16,757,402 samples, 7.16%)</title><rect x="65.3261%" y="1541" width="7.1633%" height="15" fill="rgb(233,147,39)" fg:x="152819963" fg:w="16757402"/><text x="65.5761%" y="1551.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,513,634 samples, 0.65%)</title><rect x="71.8424%" y="1525" width="0.6470%" height="15" fill="rgb(231,145,52)" fg:x="168063731" fg:w="1513634"/><text x="72.0924%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,513,634 samples, 0.65%)</title><rect x="71.8424%" y="1509" width="0.6470%" height="15" fill="rgb(206,20,26)" fg:x="168063731" fg:w="1513634"/><text x="72.0924%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,513,634 samples, 0.65%)</title><rect x="71.8424%" y="1493" width="0.6470%" height="15" fill="rgb(238,220,4)" fg:x="168063731" fg:w="1513634"/><text x="72.0924%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,513,634 samples, 0.65%)</title><rect x="71.8424%" y="1477" width="0.6470%" height="15" fill="rgb(252,195,42)" fg:x="168063731" fg:w="1513634"/><text x="72.0924%" y="1487.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,513,634 samples, 0.65%)</title><rect x="71.8424%" y="1461" width="0.6470%" height="15" fill="rgb(209,10,6)" fg:x="168063731" fg:w="1513634"/><text x="72.0924%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,513,634 samples, 0.65%)</title><rect x="71.8424%" y="1445" width="0.6470%" height="15" fill="rgb(229,3,52)" fg:x="168063731" fg:w="1513634"/><text x="72.0924%" y="1455.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,513,634 samples, 0.65%)</title><rect x="71.8424%" y="1429" width="0.6470%" height="15" fill="rgb(253,49,37)" fg:x="168063731" fg:w="1513634"/><text x="72.0924%" y="1439.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,513,634 samples, 0.65%)</title><rect x="71.8424%" y="1413" width="0.6470%" height="15" fill="rgb(240,103,49)" fg:x="168063731" fg:w="1513634"/><text x="72.0924%" y="1423.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,513,634 samples, 0.65%)</title><rect x="71.8424%" y="1397" width="0.6470%" height="15" fill="rgb(250,182,30)" fg:x="168063731" fg:w="1513634"/><text x="72.0924%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,513,634 samples, 0.65%)</title><rect x="71.8424%" y="1381" width="0.6470%" height="15" fill="rgb(248,8,30)" fg:x="168063731" fg:w="1513634"/><text x="72.0924%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,513,634 samples, 0.65%)</title><rect x="71.8424%" y="1365" width="0.6470%" height="15" fill="rgb(237,120,30)" fg:x="168063731" fg:w="1513634"/><text x="72.0924%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,513,634 samples, 0.65%)</title><rect x="71.8424%" y="1349" width="0.6470%" height="15" fill="rgb(221,146,34)" fg:x="168063731" fg:w="1513634"/><text x="72.0924%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,513,634 samples, 0.65%)</title><rect x="71.8424%" y="1333" width="0.6470%" height="15" fill="rgb(242,55,13)" fg:x="168063731" fg:w="1513634"/><text x="72.0924%" y="1343.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,513,634 samples, 0.65%)</title><rect x="71.8424%" y="1317" width="0.6470%" height="15" fill="rgb(242,112,31)" fg:x="168063731" fg:w="1513634"/><text x="72.0924%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,513,634 samples, 0.65%)</title><rect x="71.8424%" y="1301" width="0.6470%" height="15" fill="rgb(249,192,27)" fg:x="168063731" fg:w="1513634"/><text x="72.0924%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,513,634 samples, 0.65%)</title><rect x="71.8424%" y="1285" width="0.6470%" height="15" fill="rgb(208,204,44)" fg:x="168063731" fg:w="1513634"/><text x="72.0924%" y="1295.50"></text></g><g><title>alloc::alloc::dealloc (1,513,634 samples, 0.65%)</title><rect x="71.8424%" y="1269" width="0.6470%" height="15" fill="rgb(208,93,54)" fg:x="168063731" fg:w="1513634"/><text x="72.0924%" y="1279.50"></text></g><g><title>cfree (1,513,634 samples, 0.65%)</title><rect x="71.8424%" y="1253" width="0.6470%" height="15" fill="rgb(242,1,31)" fg:x="168063731" fg:w="1513634"/><text x="72.0924%" y="1263.50"></text></g><g><title>[libc.so.6] (1,513,634 samples, 0.65%)</title><rect x="71.8424%" y="1237" width="0.6470%" height="15" fill="rgb(241,83,25)" fg:x="168063731" fg:w="1513634"/><text x="72.0924%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,735,564 samples, 8.86%)</title><rect x="64.2016%" y="1637" width="8.8639%" height="15" fill="rgb(205,169,50)" fg:x="150189308" fg:w="20735564"/><text x="64.4516%" y="1647.50">&lt;alloc::vec::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (20,735,564 samples, 8.86%)</title><rect x="64.2016%" y="1621" width="8.8639%" height="15" fill="rgb(239,186,37)" fg:x="150189308" fg:w="20735564"/><text x="64.4516%" y="1631.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (20,735,564 samples, 8.86%)</title><rect x="64.2016%" y="1605" width="8.8639%" height="15" fill="rgb(205,221,10)" fg:x="150189308" fg:w="20735564"/><text x="64.4516%" y="1615.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,347,507 samples, 0.58%)</title><rect x="72.4894%" y="1589" width="0.5760%" height="15" fill="rgb(218,196,15)" fg:x="169577365" fg:w="1347507"/><text x="72.7394%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,347,507 samples, 0.58%)</title><rect x="72.4894%" y="1573" width="0.5760%" height="15" fill="rgb(218,196,35)" fg:x="169577365" fg:w="1347507"/><text x="72.7394%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,347,507 samples, 0.58%)</title><rect x="72.4894%" y="1557" width="0.5760%" height="15" fill="rgb(233,63,24)" fg:x="169577365" fg:w="1347507"/><text x="72.7394%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,347,507 samples, 0.58%)</title><rect x="72.4894%" y="1541" width="0.5760%" height="15" fill="rgb(225,8,4)" fg:x="169577365" fg:w="1347507"/><text x="72.7394%" y="1551.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,347,507 samples, 0.58%)</title><rect x="72.4894%" y="1525" width="0.5760%" height="15" fill="rgb(234,105,35)" fg:x="169577365" fg:w="1347507"/><text x="72.7394%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,347,507 samples, 0.58%)</title><rect x="72.4894%" y="1509" width="0.5760%" height="15" fill="rgb(236,21,32)" fg:x="169577365" fg:w="1347507"/><text x="72.7394%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1,347,507 samples, 0.58%)</title><rect x="72.4894%" y="1493" width="0.5760%" height="15" fill="rgb(228,109,6)" fg:x="169577365" fg:w="1347507"/><text x="72.7394%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24,771,969 samples, 10.59%)</title><rect x="63.0950%" y="1701" width="10.5893%" height="15" fill="rgb(229,215,31)" fg:x="147600547" fg:w="24771969"/><text x="63.3450%" y="1711.50">&lt;alloc::vec::Ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (24,771,969 samples, 10.59%)</title><rect x="63.0950%" y="1685" width="10.5893%" height="15" fill="rgb(221,52,54)" fg:x="147600547" fg:w="24771969"/><text x="63.3450%" y="1695.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (24,771,969 samples, 10.59%)</title><rect x="63.0950%" y="1669" width="10.5893%" height="15" fill="rgb(252,129,43)" fg:x="147600547" fg:w="24771969"/><text x="63.3450%" y="1679.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (22,183,208 samples, 9.48%)</title><rect x="64.2016%" y="1653" width="9.4827%" height="15" fill="rgb(248,183,27)" fg:x="150189308" fg:w="22183208"/><text x="64.4516%" y="1663.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,447,644 samples, 0.62%)</title><rect x="73.0655%" y="1637" width="0.6188%" height="15" fill="rgb(250,0,22)" fg:x="170924872" fg:w="1447644"/><text x="73.3155%" y="1647.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,447,644 samples, 0.62%)</title><rect x="73.0655%" y="1621" width="0.6188%" height="15" fill="rgb(213,166,10)" fg:x="170924872" fg:w="1447644"/><text x="73.3155%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,447,644 samples, 0.62%)</title><rect x="73.0655%" y="1605" width="0.6188%" height="15" fill="rgb(207,163,36)" fg:x="170924872" fg:w="1447644"/><text x="73.3155%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,447,644 samples, 0.62%)</title><rect x="73.0655%" y="1589" width="0.6188%" height="15" fill="rgb(208,122,22)" fg:x="170924872" fg:w="1447644"/><text x="73.3155%" y="1599.50"></text></g><g><title>alloc::alloc::dealloc (1,447,644 samples, 0.62%)</title><rect x="73.0655%" y="1573" width="0.6188%" height="15" fill="rgb(207,104,49)" fg:x="170924872" fg:w="1447644"/><text x="73.3155%" y="1583.50"></text></g><g><title>cfree (1,447,644 samples, 0.62%)</title><rect x="73.0655%" y="1557" width="0.6188%" height="15" fill="rgb(248,211,50)" fg:x="170924872" fg:w="1447644"/><text x="73.3155%" y="1567.50"></text></g><g><title>[libc.so.6] (1,447,644 samples, 0.62%)</title><rect x="73.0655%" y="1541" width="0.6188%" height="15" fill="rgb(217,13,45)" fg:x="170924872" fg:w="1447644"/><text x="73.3155%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (34,454,378 samples, 14.73%)</title><rect x="63.0950%" y="1717" width="14.7283%" height="15" fill="rgb(211,216,49)" fg:x="147600547" fg:w="34454378"/><text x="63.3450%" y="1727.50">core::ptr::drop_in_pla..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (9,682,409 samples, 4.14%)</title><rect x="73.6843%" y="1701" width="4.1390%" height="15" fill="rgb(221,58,53)" fg:x="172372516" fg:w="9682409"/><text x="73.9343%" y="1711.50">core:..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,682,409 samples, 4.14%)</title><rect x="73.6843%" y="1685" width="4.1390%" height="15" fill="rgb(220,112,41)" fg:x="172372516" fg:w="9682409"/><text x="73.9343%" y="1695.50">&lt;allo..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (9,682,409 samples, 4.14%)</title><rect x="73.6843%" y="1669" width="4.1390%" height="15" fill="rgb(236,38,28)" fg:x="172372516" fg:w="9682409"/><text x="73.9343%" y="1679.50">alloc..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9,682,409 samples, 4.14%)</title><rect x="73.6843%" y="1653" width="4.1390%" height="15" fill="rgb(227,195,22)" fg:x="172372516" fg:w="9682409"/><text x="73.9343%" y="1663.50">&lt;allo..</text></g><g><title>alloc::alloc::dealloc (9,682,409 samples, 4.14%)</title><rect x="73.6843%" y="1637" width="4.1390%" height="15" fill="rgb(214,55,33)" fg:x="172372516" fg:w="9682409"/><text x="73.9343%" y="1647.50">alloc..</text></g><g><title>cfree (9,682,409 samples, 4.14%)</title><rect x="73.6843%" y="1621" width="4.1390%" height="15" fill="rgb(248,80,13)" fg:x="172372516" fg:w="9682409"/><text x="73.9343%" y="1631.50">cfree</text></g><g><title>[libc.so.6] (8,348,666 samples, 3.57%)</title><rect x="74.2544%" y="1605" width="3.5688%" height="15" fill="rgb(238,52,6)" fg:x="173706259" fg:w="8348666"/><text x="74.5044%" y="1615.50">[lib..</text></g><g><title>[libc.so.6] (8,348,666 samples, 3.57%)</title><rect x="74.2544%" y="1589" width="3.5688%" height="15" fill="rgb(224,198,47)" fg:x="173706259" fg:w="8348666"/><text x="74.5044%" y="1599.50">[lib..</text></g><g><title>[libc.so.6] (2,806,952 samples, 1.20%)</title><rect x="76.6233%" y="1573" width="1.1999%" height="15" fill="rgb(233,171,20)" fg:x="179247973" fg:w="2806952"/><text x="76.8733%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1,310,333 samples, 0.56%)</title><rect x="77.8232%" y="1717" width="0.5601%" height="15" fill="rgb(241,30,25)" fg:x="182054925" fg:w="1310333"/><text x="78.0732%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38,542,897 samples, 16.48%)</title><rect x="62.5516%" y="1829" width="16.4760%" height="15" fill="rgb(207,171,38)" fg:x="146329397" fg:w="38542897"/><text x="62.8016%" y="1839.50">&lt;alloc::vec::Vec&lt;T,A&gt; as ..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (38,542,897 samples, 16.48%)</title><rect x="62.5516%" y="1813" width="16.4760%" height="15" fill="rgb(234,70,1)" fg:x="146329397" fg:w="38542897"/><text x="62.8016%" y="1823.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (38,542,897 samples, 16.48%)</title><rect x="62.5516%" y="1797" width="16.4760%" height="15" fill="rgb(232,178,18)" fg:x="146329397" fg:w="38542897"/><text x="62.8016%" y="1807.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (38,542,897 samples, 16.48%)</title><rect x="62.5516%" y="1781" width="16.4760%" height="15" fill="rgb(241,78,40)" fg:x="146329397" fg:w="38542897"/><text x="62.8016%" y="1791.50">core::ptr::drop_in_place&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38,542,897 samples, 16.48%)</title><rect x="62.5516%" y="1765" width="16.4760%" height="15" fill="rgb(222,35,25)" fg:x="146329397" fg:w="38542897"/><text x="62.8016%" y="1775.50">&lt;alloc::vec::Vec&lt;T,A&gt; as ..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (38,542,897 samples, 16.48%)</title><rect x="62.5516%" y="1749" width="16.4760%" height="15" fill="rgb(207,92,16)" fg:x="146329397" fg:w="38542897"/><text x="62.8016%" y="1759.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (37,271,747 samples, 15.93%)</title><rect x="63.0950%" y="1733" width="15.9326%" height="15" fill="rgb(216,59,51)" fg:x="147600547" fg:w="37271747"/><text x="63.3450%" y="1743.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,507,036 samples, 0.64%)</title><rect x="78.3834%" y="1717" width="0.6442%" height="15" fill="rgb(213,80,28)" fg:x="183365258" fg:w="1507036"/><text x="78.6334%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,507,036 samples, 0.64%)</title><rect x="78.3834%" y="1701" width="0.6442%" height="15" fill="rgb(220,93,7)" fg:x="183365258" fg:w="1507036"/><text x="78.6334%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,507,036 samples, 0.64%)</title><rect x="78.3834%" y="1685" width="0.6442%" height="15" fill="rgb(225,24,44)" fg:x="183365258" fg:w="1507036"/><text x="78.6334%" y="1695.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,507,036 samples, 0.64%)</title><rect x="78.3834%" y="1669" width="0.6442%" height="15" fill="rgb(243,74,40)" fg:x="183365258" fg:w="1507036"/><text x="78.6334%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,507,036 samples, 0.64%)</title><rect x="78.3834%" y="1653" width="0.6442%" height="15" fill="rgb(228,39,7)" fg:x="183365258" fg:w="1507036"/><text x="78.6334%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1,507,036 samples, 0.64%)</title><rect x="78.3834%" y="1637" width="0.6442%" height="15" fill="rgb(227,79,8)" fg:x="183365258" fg:w="1507036"/><text x="78.6334%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (40,020,316 samples, 17.11%)</title><rect x="62.5516%" y="2053" width="17.1075%" height="15" fill="rgb(236,58,11)" fg:x="146329397" fg:w="40020316"/><text x="62.8016%" y="2063.50">core::ptr::drop_in_place&lt;c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (40,020,316 samples, 17.11%)</title><rect x="62.5516%" y="2037" width="17.1075%" height="15" fill="rgb(249,63,35)" fg:x="146329397" fg:w="40020316"/><text x="62.8016%" y="2047.50">core::ptr::drop_in_place&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40,020,316 samples, 17.11%)</title><rect x="62.5516%" y="2021" width="17.1075%" height="15" fill="rgb(252,114,16)" fg:x="146329397" fg:w="40020316"/><text x="62.8016%" y="2031.50">&lt;alloc::vec::Vec&lt;T,A&gt; as c..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (40,020,316 samples, 17.11%)</title><rect x="62.5516%" y="2005" width="17.1075%" height="15" fill="rgb(254,151,24)" fg:x="146329397" fg:w="40020316"/><text x="62.8016%" y="2015.50">core::ptr::drop_in_place&lt;[..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (40,020,316 samples, 17.11%)</title><rect x="62.5516%" y="1989" width="17.1075%" height="15" fill="rgb(253,54,39)" fg:x="146329397" fg:w="40020316"/><text x="62.8016%" y="1999.50">core::ptr::drop_in_place&lt;c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (40,020,316 samples, 17.11%)</title><rect x="62.5516%" y="1973" width="17.1075%" height="15" fill="rgb(243,25,45)" fg:x="146329397" fg:w="40020316"/><text x="62.8016%" y="1983.50">core::ptr::drop_in_place&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40,020,316 samples, 17.11%)</title><rect x="62.5516%" y="1957" width="17.1075%" height="15" fill="rgb(234,134,9)" fg:x="146329397" fg:w="40020316"/><text x="62.8016%" y="1967.50">&lt;alloc::vec::Vec&lt;T,A&gt; as c..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (40,020,316 samples, 17.11%)</title><rect x="62.5516%" y="1941" width="17.1075%" height="15" fill="rgb(227,166,31)" fg:x="146329397" fg:w="40020316"/><text x="62.8016%" y="1951.50">core::ptr::drop_in_place&lt;[..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (40,020,316 samples, 17.11%)</title><rect x="62.5516%" y="1925" width="17.1075%" height="15" fill="rgb(245,143,41)" fg:x="146329397" fg:w="40020316"/><text x="62.8016%" y="1935.50">core::ptr::drop_in_place&lt;c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (40,020,316 samples, 17.11%)</title><rect x="62.5516%" y="1909" width="17.1075%" height="15" fill="rgb(238,181,32)" fg:x="146329397" fg:w="40020316"/><text x="62.8016%" y="1919.50">core::ptr::drop_in_place&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40,020,316 samples, 17.11%)</title><rect x="62.5516%" y="1893" width="17.1075%" height="15" fill="rgb(224,113,18)" fg:x="146329397" fg:w="40020316"/><text x="62.8016%" y="1903.50">&lt;alloc::vec::Vec&lt;T,A&gt; as c..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (40,020,316 samples, 17.11%)</title><rect x="62.5516%" y="1877" width="17.1075%" height="15" fill="rgb(240,229,28)" fg:x="146329397" fg:w="40020316"/><text x="62.8016%" y="1887.50">core::ptr::drop_in_place&lt;[..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (40,020,316 samples, 17.11%)</title><rect x="62.5516%" y="1861" width="17.1075%" height="15" fill="rgb(250,185,3)" fg:x="146329397" fg:w="40020316"/><text x="62.8016%" y="1871.50">core::ptr::drop_in_place&lt;c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (40,020,316 samples, 17.11%)</title><rect x="62.5516%" y="1845" width="17.1075%" height="15" fill="rgb(212,59,25)" fg:x="146329397" fg:w="40020316"/><text x="62.8016%" y="1855.50">core::ptr::drop_in_place&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,477,419 samples, 0.63%)</title><rect x="79.0276%" y="1829" width="0.6316%" height="15" fill="rgb(221,87,20)" fg:x="184872294" fg:w="1477419"/><text x="79.2776%" y="1839.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,477,419 samples, 0.63%)</title><rect x="79.0276%" y="1813" width="0.6316%" height="15" fill="rgb(213,74,28)" fg:x="184872294" fg:w="1477419"/><text x="79.2776%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,477,419 samples, 0.63%)</title><rect x="79.0276%" y="1797" width="0.6316%" height="15" fill="rgb(224,132,34)" fg:x="184872294" fg:w="1477419"/><text x="79.2776%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,477,419 samples, 0.63%)</title><rect x="79.0276%" y="1781" width="0.6316%" height="15" fill="rgb(222,101,24)" fg:x="184872294" fg:w="1477419"/><text x="79.2776%" y="1791.50"></text></g><g><title>alloc::alloc::dealloc (1,477,419 samples, 0.63%)</title><rect x="79.0276%" y="1765" width="0.6316%" height="15" fill="rgb(254,142,4)" fg:x="184872294" fg:w="1477419"/><text x="79.2776%" y="1775.50"></text></g><g><title>cfree (1,477,419 samples, 0.63%)</title><rect x="79.0276%" y="1749" width="0.6316%" height="15" fill="rgb(230,229,49)" fg:x="184872294" fg:w="1477419"/><text x="79.2776%" y="1759.50"></text></g><g><title>[libc.so.6] (1,477,419 samples, 0.63%)</title><rect x="79.0276%" y="1733" width="0.6316%" height="15" fill="rgb(238,70,47)" fg:x="184872294" fg:w="1477419"/><text x="79.2776%" y="1743.50"></text></g><g><title>[libc.so.6] (1,477,419 samples, 0.63%)</title><rect x="79.0276%" y="1717" width="0.6316%" height="15" fill="rgb(231,160,17)" fg:x="184872294" fg:w="1477419"/><text x="79.2776%" y="1727.50"></text></g><g><title>[libc.so.6] (1,477,419 samples, 0.63%)</title><rect x="79.0276%" y="1701" width="0.6316%" height="15" fill="rgb(218,68,53)" fg:x="184872294" fg:w="1477419"/><text x="79.2776%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,283,886 samples, 0.55%)</title><rect x="80.2245%" y="1925" width="0.5488%" height="15" fill="rgb(236,111,10)" fg:x="187672383" fg:w="1283886"/><text x="80.4745%" y="1935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,283,886 samples, 0.55%)</title><rect x="80.2245%" y="1909" width="0.5488%" height="15" fill="rgb(224,34,41)" fg:x="187672383" fg:w="1283886"/><text x="80.4745%" y="1919.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,350,414 samples, 0.58%)</title><rect x="80.7734%" y="1925" width="0.5773%" height="15" fill="rgb(241,118,19)" fg:x="188956269" fg:w="1350414"/><text x="81.0234%" y="1935.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,317,784 samples, 0.56%)</title><rect x="81.3506%" y="1861" width="0.5633%" height="15" fill="rgb(238,129,25)" fg:x="190306683" fg:w="1317784"/><text x="81.6006%" y="1871.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (1,317,784 samples, 0.56%)</title><rect x="81.3506%" y="1845" width="0.5633%" height="15" fill="rgb(238,22,31)" fg:x="190306683" fg:w="1317784"/><text x="81.6006%" y="1855.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1,317,784 samples, 0.56%)</title><rect x="81.3506%" y="1829" width="0.5633%" height="15" fill="rgb(222,174,48)" fg:x="190306683" fg:w="1317784"/><text x="81.6006%" y="1839.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1,317,784 samples, 0.56%)</title><rect x="81.3506%" y="1813" width="0.5633%" height="15" fill="rgb(206,152,40)" fg:x="190306683" fg:w="1317784"/><text x="81.6006%" y="1823.50"></text></g><g><title>benchmark::benchmark_accumulated_modifications (141,004,163 samples, 60.28%)</title><rect x="22.2695%" y="2069" width="60.2752%" height="15" fill="rgb(218,99,54)" fg:x="52095793" fg:w="141004163"/><text x="22.5195%" y="2079.50">benchmark::benchmark_accumulated_modifications</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (6,750,243 samples, 2.89%)</title><rect x="79.6591%" y="2053" width="2.8855%" height="15" fill="rgb(220,174,26)" fg:x="186349713" fg:w="6750243"/><text x="79.9091%" y="2063.50">cs..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (6,750,243 samples, 2.89%)</title><rect x="79.6591%" y="2037" width="2.8855%" height="15" fill="rgb(245,116,9)" fg:x="186349713" fg:w="6750243"/><text x="79.9091%" y="2047.50">cs..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (6,750,243 samples, 2.89%)</title><rect x="79.6591%" y="2021" width="2.8855%" height="15" fill="rgb(209,72,35)" fg:x="186349713" fg:w="6750243"/><text x="79.9091%" y="2031.50">cs..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (5,427,573 samples, 2.32%)</title><rect x="80.2245%" y="2005" width="2.3201%" height="15" fill="rgb(226,126,21)" fg:x="187672383" fg:w="5427573"/><text x="80.4745%" y="2015.50">c..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (5,427,573 samples, 2.32%)</title><rect x="80.2245%" y="1989" width="2.3201%" height="15" fill="rgb(227,192,1)" fg:x="187672383" fg:w="5427573"/><text x="80.4745%" y="1999.50">c..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (5,427,573 samples, 2.32%)</title><rect x="80.2245%" y="1973" width="2.3201%" height="15" fill="rgb(237,180,29)" fg:x="187672383" fg:w="5427573"/><text x="80.4745%" y="1983.50">c..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (5,427,573 samples, 2.32%)</title><rect x="80.2245%" y="1957" width="2.3201%" height="15" fill="rgb(230,197,35)" fg:x="187672383" fg:w="5427573"/><text x="80.4745%" y="1967.50">c..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (5,427,573 samples, 2.32%)</title><rect x="80.2245%" y="1941" width="2.3201%" height="15" fill="rgb(246,193,31)" fg:x="187672383" fg:w="5427573"/><text x="80.4745%" y="1951.50">c..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,793,273 samples, 1.19%)</title><rect x="81.3506%" y="1925" width="1.1940%" height="15" fill="rgb(241,36,4)" fg:x="190306683" fg:w="2793273"/><text x="81.6006%" y="1935.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,793,273 samples, 1.19%)</title><rect x="81.3506%" y="1909" width="1.1940%" height="15" fill="rgb(241,130,17)" fg:x="190306683" fg:w="2793273"/><text x="81.6006%" y="1919.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,793,273 samples, 1.19%)</title><rect x="81.3506%" y="1893" width="1.1940%" height="15" fill="rgb(206,137,32)" fg:x="190306683" fg:w="2793273"/><text x="81.6006%" y="1903.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,793,273 samples, 1.19%)</title><rect x="81.3506%" y="1877" width="1.1940%" height="15" fill="rgb(237,228,51)" fg:x="190306683" fg:w="2793273"/><text x="81.6006%" y="1887.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,475,489 samples, 0.63%)</title><rect x="81.9139%" y="1861" width="0.6307%" height="15" fill="rgb(243,6,42)" fg:x="191624467" fg:w="1475489"/><text x="82.1639%" y="1871.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,475,489 samples, 0.63%)</title><rect x="81.9139%" y="1845" width="0.6307%" height="15" fill="rgb(251,74,28)" fg:x="191624467" fg:w="1475489"/><text x="82.1639%" y="1855.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,475,489 samples, 0.63%)</title><rect x="81.9139%" y="1829" width="0.6307%" height="15" fill="rgb(218,20,49)" fg:x="191624467" fg:w="1475489"/><text x="82.1639%" y="1839.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,475,489 samples, 0.63%)</title><rect x="81.9139%" y="1813" width="0.6307%" height="15" fill="rgb(238,28,14)" fg:x="191624467" fg:w="1475489"/><text x="82.1639%" y="1823.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,475,489 samples, 0.63%)</title><rect x="81.9139%" y="1797" width="0.6307%" height="15" fill="rgb(229,40,46)" fg:x="191624467" fg:w="1475489"/><text x="82.1639%" y="1807.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,475,489 samples, 0.63%)</title><rect x="81.9139%" y="1781" width="0.6307%" height="15" fill="rgb(244,195,20)" fg:x="191624467" fg:w="1475489"/><text x="82.1639%" y="1791.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,475,489 samples, 0.63%)</title><rect x="81.9139%" y="1765" width="0.6307%" height="15" fill="rgb(253,56,35)" fg:x="191624467" fg:w="1475489"/><text x="82.1639%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,475,489 samples, 0.63%)</title><rect x="81.9139%" y="1749" width="0.6307%" height="15" fill="rgb(210,149,44)" fg:x="191624467" fg:w="1475489"/><text x="82.1639%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,475,489 samples, 0.63%)</title><rect x="81.9139%" y="1733" width="0.6307%" height="15" fill="rgb(240,135,12)" fg:x="191624467" fg:w="1475489"/><text x="82.1639%" y="1743.50"></text></g><g><title>cfree (1,186,914 samples, 0.51%)</title><rect x="82.5447%" y="1461" width="0.5074%" height="15" fill="rgb(251,24,50)" fg:x="193099956" fg:w="1186914"/><text x="82.7947%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="2053" width="0.9605%" height="15" fill="rgb(243,200,47)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="2037" width="0.9605%" height="15" fill="rgb(224,166,26)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="2021" width="0.9605%" height="15" fill="rgb(233,0,47)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="2031.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="2005" width="0.9605%" height="15" fill="rgb(253,80,5)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="2015.50"></text></g><g><title>core::mem::drop (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1989" width="0.9605%" height="15" fill="rgb(214,133,25)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1973" width="0.9605%" height="15" fill="rgb(209,27,14)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1983.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1957" width="0.9605%" height="15" fill="rgb(219,102,51)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1967.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1941" width="0.9605%" height="15" fill="rgb(237,18,16)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1925" width="0.9605%" height="15" fill="rgb(241,85,17)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1935.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1909" width="0.9605%" height="15" fill="rgb(236,90,42)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1919.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1893" width="0.9605%" height="15" fill="rgb(249,57,21)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1877" width="0.9605%" height="15" fill="rgb(243,12,36)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1861" width="0.9605%" height="15" fill="rgb(253,128,47)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1845" width="0.9605%" height="15" fill="rgb(207,33,20)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1855.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1829" width="0.9605%" height="15" fill="rgb(233,215,35)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1839.50"></text></g><g><title>core::mem::drop (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1813" width="0.9605%" height="15" fill="rgb(249,188,52)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1797" width="0.9605%" height="15" fill="rgb(225,12,32)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1781" width="0.9605%" height="15" fill="rgb(247,98,14)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1791.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1765" width="0.9605%" height="15" fill="rgb(247,219,48)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1749" width="0.9605%" height="15" fill="rgb(253,60,48)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1759.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1733" width="0.9605%" height="15" fill="rgb(245,15,52)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1743.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1717" width="0.9605%" height="15" fill="rgb(220,133,28)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1701" width="0.9605%" height="15" fill="rgb(217,180,4)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1685" width="0.9605%" height="15" fill="rgb(251,24,1)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1669" width="0.9605%" height="15" fill="rgb(212,185,49)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1653" width="0.9605%" height="15" fill="rgb(215,175,22)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1637" width="0.9605%" height="15" fill="rgb(250,205,14)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1621" width="0.9605%" height="15" fill="rgb(225,211,22)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1605" width="0.9605%" height="15" fill="rgb(251,179,42)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1589" width="0.9605%" height="15" fill="rgb(208,216,51)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1599.50"></text></g><g><title>core::mem::drop (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1573" width="0.9605%" height="15" fill="rgb(235,36,11)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1557" width="0.9605%" height="15" fill="rgb(213,189,28)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1567.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1541" width="0.9605%" height="15" fill="rgb(227,203,42)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1551.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1525" width="0.9605%" height="15" fill="rgb(244,72,36)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1509" width="0.9605%" height="15" fill="rgb(213,53,17)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1519.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1493" width="0.9605%" height="15" fill="rgb(207,167,3)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1503.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,246,968 samples, 0.96%)</title><rect x="82.5447%" y="1477" width="0.9605%" height="15" fill="rgb(216,98,30)" fg:x="193099956" fg:w="2246968"/><text x="82.7947%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1461" width="0.4531%" height="15" fill="rgb(236,123,15)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1445" width="0.4531%" height="15" fill="rgb(248,81,50)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1429" width="0.4531%" height="15" fill="rgb(214,120,4)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1413" width="0.4531%" height="15" fill="rgb(208,179,34)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1397" width="0.4531%" height="15" fill="rgb(227,140,7)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1381" width="0.4531%" height="15" fill="rgb(214,22,6)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1365" width="0.4531%" height="15" fill="rgb(207,137,27)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1375.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1349" width="0.4531%" height="15" fill="rgb(210,8,46)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1359.50"></text></g><g><title>core::mem::drop (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1333" width="0.4531%" height="15" fill="rgb(240,16,54)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1317" width="0.4531%" height="15" fill="rgb(211,209,29)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1327.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1301" width="0.4531%" height="15" fill="rgb(226,228,24)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1311.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1285" width="0.4531%" height="15" fill="rgb(222,84,9)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1269" width="0.4531%" height="15" fill="rgb(234,203,30)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1279.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1253" width="0.4531%" height="15" fill="rgb(238,109,14)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1263.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1237" width="0.4531%" height="15" fill="rgb(233,206,34)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1221" width="0.4531%" height="15" fill="rgb(220,167,47)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1205" width="0.4531%" height="15" fill="rgb(238,105,10)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1189" width="0.4531%" height="15" fill="rgb(213,227,17)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1173" width="0.4531%" height="15" fill="rgb(217,132,38)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1157" width="0.4531%" height="15" fill="rgb(242,146,4)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1141" width="0.4531%" height="15" fill="rgb(212,61,9)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1125" width="0.4531%" height="15" fill="rgb(247,126,22)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1109" width="0.4531%" height="15" fill="rgb(220,196,2)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1119.50"></text></g><g><title>core::mem::drop (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1093" width="0.4531%" height="15" fill="rgb(208,46,4)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1077" width="0.4531%" height="15" fill="rgb(252,104,46)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1061" width="0.4531%" height="15" fill="rgb(237,152,48)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1045" width="0.4531%" height="15" fill="rgb(221,59,37)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1029" width="0.4531%" height="15" fill="rgb(209,202,51)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="1013" width="0.4531%" height="15" fill="rgb(228,81,30)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1023.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="997" width="0.4531%" height="15" fill="rgb(227,42,39)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="981" width="0.4531%" height="15" fill="rgb(221,26,2)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="965" width="0.4531%" height="15" fill="rgb(254,61,31)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="949" width="0.4531%" height="15" fill="rgb(222,173,38)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="933" width="0.4531%" height="15" fill="rgb(218,50,12)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="917" width="0.4531%" height="15" fill="rgb(223,88,40)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="901" width="0.4531%" height="15" fill="rgb(237,54,19)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="885" width="0.4531%" height="15" fill="rgb(251,129,25)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="869" width="0.4531%" height="15" fill="rgb(238,97,19)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="879.50"></text></g><g><title>core::mem::drop (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="853" width="0.4531%" height="15" fill="rgb(240,169,18)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="837" width="0.4531%" height="15" fill="rgb(230,187,49)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="847.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="821" width="0.4531%" height="15" fill="rgb(209,44,26)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="831.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="805" width="0.4531%" height="15" fill="rgb(244,0,6)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="815.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="789" width="0.4531%" height="15" fill="rgb(248,18,21)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="773" width="0.4531%" height="15" fill="rgb(245,180,19)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="757" width="0.4531%" height="15" fill="rgb(252,118,36)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="741" width="0.4531%" height="15" fill="rgb(210,224,19)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="725" width="0.4531%" height="15" fill="rgb(218,30,24)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="709" width="0.4531%" height="15" fill="rgb(219,75,50)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="693" width="0.4531%" height="15" fill="rgb(234,72,50)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="677" width="0.4531%" height="15" fill="rgb(219,100,48)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="687.50"></text></g><g><title>cfree (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="661" width="0.4531%" height="15" fill="rgb(253,5,41)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="671.50"></text></g><g><title>[libc.so.6] (1,060,054 samples, 0.45%)</title><rect x="83.0520%" y="645" width="0.4531%" height="15" fill="rgb(247,181,11)" fg:x="194286870" fg:w="1060054"/><text x="83.3020%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,093,122 samples, 0.47%)</title><rect x="83.5052%" y="1973" width="0.4673%" height="15" fill="rgb(222,223,25)" fg:x="195346924" fg:w="1093122"/><text x="83.7552%" y="1983.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (1,093,122 samples, 0.47%)</title><rect x="83.5052%" y="1957" width="0.4673%" height="15" fill="rgb(214,198,28)" fg:x="195346924" fg:w="1093122"/><text x="83.7552%" y="1967.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1,093,122 samples, 0.47%)</title><rect x="83.5052%" y="1941" width="0.4673%" height="15" fill="rgb(230,46,43)" fg:x="195346924" fg:w="1093122"/><text x="83.7552%" y="1951.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,093,122 samples, 0.47%)</title><rect x="83.5052%" y="1925" width="0.4673%" height="15" fill="rgb(233,65,53)" fg:x="195346924" fg:w="1093122"/><text x="83.7552%" y="1935.50"></text></g><g><title>[libc.so.6] (1,093,122 samples, 0.47%)</title><rect x="83.5052%" y="1909" width="0.4673%" height="15" fill="rgb(221,121,27)" fg:x="195346924" fg:w="1093122"/><text x="83.7552%" y="1919.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,312,296 samples, 0.99%)</title><rect x="83.9725%" y="1813" width="0.9884%" height="15" fill="rgb(247,70,47)" fg:x="196440046" fg:w="2312296"/><text x="84.2225%" y="1823.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2,312,296 samples, 0.99%)</title><rect x="83.9725%" y="1797" width="0.9884%" height="15" fill="rgb(228,85,35)" fg:x="196440046" fg:w="2312296"/><text x="84.2225%" y="1807.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (2,312,296 samples, 0.99%)</title><rect x="83.9725%" y="1781" width="0.9884%" height="15" fill="rgb(209,50,18)" fg:x="196440046" fg:w="2312296"/><text x="84.2225%" y="1791.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,312,296 samples, 0.99%)</title><rect x="83.9725%" y="1765" width="0.9884%" height="15" fill="rgb(250,19,35)" fg:x="196440046" fg:w="2312296"/><text x="84.2225%" y="1775.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1,168,576 samples, 0.50%)</title><rect x="84.4614%" y="1749" width="0.4995%" height="15" fill="rgb(253,107,29)" fg:x="197583766" fg:w="1168576"/><text x="84.7114%" y="1759.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,168,576 samples, 0.50%)</title><rect x="84.4614%" y="1733" width="0.4995%" height="15" fill="rgb(252,179,29)" fg:x="197583766" fg:w="1168576"/><text x="84.7114%" y="1743.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,168,576 samples, 0.50%)</title><rect x="84.4614%" y="1717" width="0.4995%" height="15" fill="rgb(238,194,6)" fg:x="197583766" fg:w="1168576"/><text x="84.7114%" y="1727.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,168,576 samples, 0.50%)</title><rect x="84.4614%" y="1701" width="0.4995%" height="15" fill="rgb(238,164,29)" fg:x="197583766" fg:w="1168576"/><text x="84.7114%" y="1711.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,168,576 samples, 0.50%)</title><rect x="84.4614%" y="1685" width="0.4995%" height="15" fill="rgb(224,25,9)" fg:x="197583766" fg:w="1168576"/><text x="84.7114%" y="1695.50"></text></g><g><title>alloc::slice::hack::to_vec (1,168,576 samples, 0.50%)</title><rect x="84.4614%" y="1669" width="0.4995%" height="15" fill="rgb(244,153,23)" fg:x="197583766" fg:w="1168576"/><text x="84.7114%" y="1679.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,168,576 samples, 0.50%)</title><rect x="84.4614%" y="1653" width="0.4995%" height="15" fill="rgb(212,203,14)" fg:x="197583766" fg:w="1168576"/><text x="84.7114%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,168,576 samples, 0.50%)</title><rect x="84.4614%" y="1637" width="0.4995%" height="15" fill="rgb(220,164,20)" fg:x="197583766" fg:w="1168576"/><text x="84.7114%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,168,576 samples, 0.50%)</title><rect x="84.4614%" y="1621" width="0.4995%" height="15" fill="rgb(222,203,48)" fg:x="197583766" fg:w="1168576"/><text x="84.7114%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,168,576 samples, 0.50%)</title><rect x="84.4614%" y="1605" width="0.4995%" height="15" fill="rgb(215,159,22)" fg:x="197583766" fg:w="1168576"/><text x="84.7114%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,168,576 samples, 0.50%)</title><rect x="84.4614%" y="1589" width="0.4995%" height="15" fill="rgb(216,183,47)" fg:x="197583766" fg:w="1168576"/><text x="84.7114%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,168,576 samples, 0.50%)</title><rect x="84.4614%" y="1573" width="0.4995%" height="15" fill="rgb(229,195,25)" fg:x="197583766" fg:w="1168576"/><text x="84.7114%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,168,576 samples, 0.50%)</title><rect x="84.4614%" y="1557" width="0.4995%" height="15" fill="rgb(224,132,51)" fg:x="197583766" fg:w="1168576"/><text x="84.7114%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (1,168,576 samples, 0.50%)</title><rect x="84.4614%" y="1541" width="0.4995%" height="15" fill="rgb(240,63,7)" fg:x="197583766" fg:w="1168576"/><text x="84.7114%" y="1551.50"></text></g><g><title>malloc (1,168,576 samples, 0.50%)</title><rect x="84.4614%" y="1525" width="0.4995%" height="15" fill="rgb(249,182,41)" fg:x="197583766" fg:w="1168576"/><text x="84.7114%" y="1535.50"></text></g><g><title>[libc.so.6] (1,168,576 samples, 0.50%)</title><rect x="84.4614%" y="1509" width="0.4995%" height="15" fill="rgb(243,47,26)" fg:x="197583766" fg:w="1168576"/><text x="84.7114%" y="1519.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3,487,105 samples, 1.49%)</title><rect x="83.9725%" y="1829" width="1.4906%" height="15" fill="rgb(233,48,2)" fg:x="196440046" fg:w="3487105"/><text x="84.2225%" y="1839.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed::has_next_key (1,174,809 samples, 0.50%)</title><rect x="84.9609%" y="1813" width="0.5022%" height="15" fill="rgb(244,165,34)" fg:x="198752342" fg:w="1174809"/><text x="85.2109%" y="1823.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (963,395 samples, 0.41%)</title><rect x="85.4631%" y="1765" width="0.4118%" height="15" fill="rgb(207,89,7)" fg:x="199927151" fg:w="963395"/><text x="85.7131%" y="1775.50"></text></g><g><title>serde::de::MapAccess::next_value (963,395 samples, 0.41%)</title><rect x="85.4631%" y="1749" width="0.4118%" height="15" fill="rgb(244,117,36)" fg:x="199927151" fg:w="963395"/><text x="85.7131%" y="1759.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (963,395 samples, 0.41%)</title><rect x="85.4631%" y="1733" width="0.4118%" height="15" fill="rgb(226,144,34)" fg:x="199927151" fg:w="963395"/><text x="85.7131%" y="1743.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_object_colon (963,395 samples, 0.41%)</title><rect x="85.4631%" y="1717" width="0.4118%" height="15" fill="rgb(213,23,19)" fg:x="199927151" fg:w="963395"/><text x="85.7131%" y="1727.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (963,395 samples, 0.41%)</title><rect x="85.4631%" y="1701" width="0.4118%" height="15" fill="rgb(217,75,12)" fg:x="199927151" fg:w="963395"/><text x="85.7131%" y="1711.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (963,395 samples, 0.41%)</title><rect x="85.4631%" y="1685" width="0.4118%" height="15" fill="rgb(224,159,17)" fg:x="199927151" fg:w="963395"/><text x="85.7131%" y="1695.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (963,395 samples, 0.41%)</title><rect x="85.4631%" y="1669" width="0.4118%" height="15" fill="rgb(217,118,1)" fg:x="199927151" fg:w="963395"/><text x="85.7131%" y="1679.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (963,395 samples, 0.41%)</title><rect x="85.4631%" y="1653" width="0.4118%" height="15" fill="rgb(232,180,48)" fg:x="199927151" fg:w="963395"/><text x="85.7131%" y="1663.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,071,219 samples, 0.46%)</title><rect x="85.8749%" y="1621" width="0.4579%" height="15" fill="rgb(230,27,33)" fg:x="200890546" fg:w="1071219"/><text x="86.1249%" y="1631.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (565,199 samples, 0.24%)</title><rect x="86.3328%" y="1525" width="0.2416%" height="15" fill="rgb(205,31,21)" fg:x="201961765" fg:w="565199"/><text x="86.5828%" y="1535.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (565,199 samples, 0.24%)</title><rect x="86.3328%" y="1509" width="0.2416%" height="15" fill="rgb(253,59,4)" fg:x="201961765" fg:w="565199"/><text x="86.5828%" y="1519.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (565,199 samples, 0.24%)</title><rect x="86.3328%" y="1493" width="0.2416%" height="15" fill="rgb(224,201,9)" fg:x="201961765" fg:w="565199"/><text x="86.5828%" y="1503.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,561,705 samples, 0.67%)</title><rect x="86.5744%" y="1525" width="0.6676%" height="15" fill="rgb(229,206,30)" fg:x="202526964" fg:w="1561705"/><text x="86.8244%" y="1535.50"></text></g><g><title>serde_json::read::is_escape (614,111 samples, 0.26%)</title><rect x="86.9795%" y="1509" width="0.2625%" height="15" fill="rgb(212,67,47)" fg:x="203474558" fg:w="614111"/><text x="87.2295%" y="1519.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2,569,773 samples, 1.10%)</title><rect x="86.3328%" y="1557" width="1.0985%" height="15" fill="rgb(211,96,50)" fg:x="201961765" fg:w="2569773"/><text x="86.5828%" y="1567.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (2,569,773 samples, 1.10%)</title><rect x="86.3328%" y="1541" width="1.0985%" height="15" fill="rgb(252,114,18)" fg:x="201961765" fg:w="2569773"/><text x="86.5828%" y="1551.50"></text></g><g><title>serde_json::read::parse_escape (442,869 samples, 0.19%)</title><rect x="87.2420%" y="1525" width="0.1893%" height="15" fill="rgb(223,58,37)" fg:x="204088669" fg:w="442869"/><text x="87.4920%" y="1535.50"></text></g><g><title>serde_json::read::next_or_eof (442,869 samples, 0.19%)</title><rect x="87.2420%" y="1509" width="0.1893%" height="15" fill="rgb(237,70,4)" fg:x="204088669" fg:w="442869"/><text x="87.4920%" y="1519.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::next (442,869 samples, 0.19%)</title><rect x="87.2420%" y="1493" width="0.1893%" height="15" fill="rgb(244,85,46)" fg:x="204088669" fg:w="442869"/><text x="87.4920%" y="1503.50"></text></g><g><title>serde::de::MapAccess::next_value (989,136 samples, 0.42%)</title><rect x="87.4313%" y="1333" width="0.4228%" height="15" fill="rgb(223,39,52)" fg:x="204531538" fg:w="989136"/><text x="87.6813%" y="1343.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (989,136 samples, 0.42%)</title><rect x="87.4313%" y="1317" width="0.4228%" height="15" fill="rgb(218,200,14)" fg:x="204531538" fg:w="989136"/><text x="87.6813%" y="1327.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (989,136 samples, 0.42%)</title><rect x="87.4313%" y="1301" width="0.4228%" height="15" fill="rgb(208,171,16)" fg:x="204531538" fg:w="989136"/><text x="87.6813%" y="1311.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (989,136 samples, 0.42%)</title><rect x="87.4313%" y="1285" width="0.4228%" height="15" fill="rgb(234,200,18)" fg:x="204531538" fg:w="989136"/><text x="87.6813%" y="1295.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (989,136 samples, 0.42%)</title><rect x="87.4313%" y="1269" width="0.4228%" height="15" fill="rgb(228,45,11)" fg:x="204531538" fg:w="989136"/><text x="87.6813%" y="1279.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,908,117 samples, 0.82%)</title><rect x="87.4313%" y="1349" width="0.8157%" height="15" fill="rgb(237,182,11)" fg:x="204531538" fg:w="1908117"/><text x="87.6813%" y="1359.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (918,981 samples, 0.39%)</title><rect x="87.8542%" y="1333" width="0.3928%" height="15" fill="rgb(241,175,49)" fg:x="205520674" fg:w="918981"/><text x="88.1042%" y="1343.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (918,981 samples, 0.39%)</title><rect x="87.8542%" y="1317" width="0.3928%" height="15" fill="rgb(247,38,35)" fg:x="205520674" fg:w="918981"/><text x="88.1042%" y="1327.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (918,981 samples, 0.39%)</title><rect x="87.8542%" y="1301" width="0.3928%" height="15" fill="rgb(228,39,49)" fg:x="205520674" fg:w="918981"/><text x="88.1042%" y="1311.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (918,981 samples, 0.39%)</title><rect x="87.8542%" y="1285" width="0.3928%" height="15" fill="rgb(226,101,26)" fg:x="205520674" fg:w="918981"/><text x="88.1042%" y="1295.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,340,326 samples, 0.57%)</title><rect x="88.6832%" y="1205" width="0.5730%" height="15" fill="rgb(206,141,19)" fg:x="207459974" fg:w="1340326"/><text x="88.9332%" y="1215.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,340,326 samples, 0.57%)</title><rect x="88.6832%" y="1189" width="0.5730%" height="15" fill="rgb(211,200,13)" fg:x="207459974" fg:w="1340326"/><text x="88.9332%" y="1199.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,340,326 samples, 0.57%)</title><rect x="88.6832%" y="1173" width="0.5730%" height="15" fill="rgb(241,121,6)" fg:x="207459974" fg:w="1340326"/><text x="88.9332%" y="1183.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,340,326 samples, 0.57%)</title><rect x="88.6832%" y="1157" width="0.5730%" height="15" fill="rgb(234,221,29)" fg:x="207459974" fg:w="1340326"/><text x="88.9332%" y="1167.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,340,326 samples, 0.57%)</title><rect x="88.6832%" y="1141" width="0.5730%" height="15" fill="rgb(229,136,5)" fg:x="207459974" fg:w="1340326"/><text x="88.9332%" y="1151.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1,340,326 samples, 0.57%)</title><rect x="88.6832%" y="1125" width="0.5730%" height="15" fill="rgb(238,36,11)" fg:x="207459974" fg:w="1340326"/><text x="88.9332%" y="1135.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,340,326 samples, 0.57%)</title><rect x="88.6832%" y="1109" width="0.5730%" height="15" fill="rgb(251,55,41)" fg:x="207459974" fg:w="1340326"/><text x="88.9332%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,340,326 samples, 0.57%)</title><rect x="88.6832%" y="1093" width="0.5730%" height="15" fill="rgb(242,34,40)" fg:x="207459974" fg:w="1340326"/><text x="88.9332%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,340,326 samples, 0.57%)</title><rect x="88.6832%" y="1077" width="0.5730%" height="15" fill="rgb(215,42,17)" fg:x="207459974" fg:w="1340326"/><text x="88.9332%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,340,326 samples, 0.57%)</title><rect x="88.6832%" y="1061" width="0.5730%" height="15" fill="rgb(207,44,46)" fg:x="207459974" fg:w="1340326"/><text x="88.9332%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (1,340,326 samples, 0.57%)</title><rect x="88.6832%" y="1045" width="0.5730%" height="15" fill="rgb(211,206,28)" fg:x="207459974" fg:w="1340326"/><text x="88.9332%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,340,326 samples, 0.57%)</title><rect x="88.6832%" y="1029" width="0.5730%" height="15" fill="rgb(237,167,16)" fg:x="207459974" fg:w="1340326"/><text x="88.9332%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,340,326 samples, 0.57%)</title><rect x="88.6832%" y="1013" width="0.5730%" height="15" fill="rgb(233,66,6)" fg:x="207459974" fg:w="1340326"/><text x="88.9332%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,340,326 samples, 0.57%)</title><rect x="88.6832%" y="997" width="0.5730%" height="15" fill="rgb(246,123,29)" fg:x="207459974" fg:w="1340326"/><text x="88.9332%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,340,326 samples, 0.57%)</title><rect x="88.6832%" y="981" width="0.5730%" height="15" fill="rgb(209,62,40)" fg:x="207459974" fg:w="1340326"/><text x="88.9332%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,340,326 samples, 0.57%)</title><rect x="88.6832%" y="965" width="0.5730%" height="15" fill="rgb(218,4,25)" fg:x="207459974" fg:w="1340326"/><text x="88.9332%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,340,326 samples, 0.57%)</title><rect x="88.6832%" y="949" width="0.5730%" height="15" fill="rgb(253,91,49)" fg:x="207459974" fg:w="1340326"/><text x="88.9332%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,340,326 samples, 0.57%)</title><rect x="88.6832%" y="933" width="0.5730%" height="15" fill="rgb(228,155,29)" fg:x="207459974" fg:w="1340326"/><text x="88.9332%" y="943.50"></text></g><g><title>alloc::alloc::alloc (1,340,326 samples, 0.57%)</title><rect x="88.6832%" y="917" width="0.5730%" height="15" fill="rgb(243,57,37)" fg:x="207459974" fg:w="1340326"/><text x="88.9332%" y="927.50"></text></g><g><title>malloc (1,340,326 samples, 0.57%)</title><rect x="88.6832%" y="901" width="0.5730%" height="15" fill="rgb(244,167,17)" fg:x="207459974" fg:w="1340326"/><text x="88.9332%" y="911.50"></text></g><g><title>[libc.so.6] (1,340,326 samples, 0.57%)</title><rect x="88.6832%" y="885" width="0.5730%" height="15" fill="rgb(207,181,38)" fg:x="207459974" fg:w="1340326"/><text x="88.9332%" y="895.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (922,806 samples, 0.39%)</title><rect x="89.2561%" y="1141" width="0.3945%" height="15" fill="rgb(211,8,23)" fg:x="208800300" fg:w="922806"/><text x="89.5061%" y="1151.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (922,806 samples, 0.39%)</title><rect x="89.2561%" y="1125" width="0.3945%" height="15" fill="rgb(235,11,44)" fg:x="208800300" fg:w="922806"/><text x="89.5061%" y="1135.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (922,806 samples, 0.39%)</title><rect x="89.2561%" y="1109" width="0.3945%" height="15" fill="rgb(248,18,52)" fg:x="208800300" fg:w="922806"/><text x="89.5061%" y="1119.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (922,806 samples, 0.39%)</title><rect x="89.2561%" y="1093" width="0.3945%" height="15" fill="rgb(208,4,7)" fg:x="208800300" fg:w="922806"/><text x="89.5061%" y="1103.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (922,806 samples, 0.39%)</title><rect x="89.2561%" y="1077" width="0.3945%" height="15" fill="rgb(240,17,39)" fg:x="208800300" fg:w="922806"/><text x="89.5061%" y="1087.50"></text></g><g><title>serde::de::MapAccess::next_entry (716,349 samples, 0.31%)</title><rect x="90.1174%" y="613" width="0.3062%" height="15" fill="rgb(207,170,3)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="623.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (716,349 samples, 0.31%)</title><rect x="90.1174%" y="597" width="0.3062%" height="15" fill="rgb(236,100,52)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (716,349 samples, 0.31%)</title><rect x="90.1174%" y="581" width="0.3062%" height="15" fill="rgb(246,78,51)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="591.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (716,349 samples, 0.31%)</title><rect x="90.1174%" y="565" width="0.3062%" height="15" fill="rgb(211,17,15)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (716,349 samples, 0.31%)</title><rect x="90.1174%" y="549" width="0.3062%" height="15" fill="rgb(209,59,46)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (716,349 samples, 0.31%)</title><rect x="90.1174%" y="533" width="0.3062%" height="15" fill="rgb(210,92,25)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (716,349 samples, 0.31%)</title><rect x="90.1174%" y="517" width="0.3062%" height="15" fill="rgb(238,174,52)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="527.50"></text></g><g><title>serde::de::SeqAccess::next_element (716,349 samples, 0.31%)</title><rect x="90.1174%" y="501" width="0.3062%" height="15" fill="rgb(230,73,7)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="511.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (716,349 samples, 0.31%)</title><rect x="90.1174%" y="485" width="0.3062%" height="15" fill="rgb(243,124,40)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="495.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (716,349 samples, 0.31%)</title><rect x="90.1174%" y="469" width="0.3062%" height="15" fill="rgb(244,170,11)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (716,349 samples, 0.31%)</title><rect x="90.1174%" y="453" width="0.3062%" height="15" fill="rgb(207,114,54)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (716,349 samples, 0.31%)</title><rect x="90.1174%" y="437" width="0.3062%" height="15" fill="rgb(205,42,20)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (716,349 samples, 0.31%)</title><rect x="90.1174%" y="421" width="0.3062%" height="15" fill="rgb(230,30,28)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="431.50"></text></g><g><title>serde::de::MapAccess::next_entry (716,349 samples, 0.31%)</title><rect x="90.1174%" y="405" width="0.3062%" height="15" fill="rgb(205,73,54)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="415.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (716,349 samples, 0.31%)</title><rect x="90.1174%" y="389" width="0.3062%" height="15" fill="rgb(254,227,23)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (716,349 samples, 0.31%)</title><rect x="90.1174%" y="373" width="0.3062%" height="15" fill="rgb(228,202,34)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="383.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (716,349 samples, 0.31%)</title><rect x="90.1174%" y="357" width="0.3062%" height="15" fill="rgb(222,225,37)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (716,349 samples, 0.31%)</title><rect x="90.1174%" y="341" width="0.3062%" height="15" fill="rgb(221,14,54)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="351.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (716,349 samples, 0.31%)</title><rect x="90.1174%" y="325" width="0.3062%" height="15" fill="rgb(254,102,2)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="335.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (716,349 samples, 0.31%)</title><rect x="90.1174%" y="309" width="0.3062%" height="15" fill="rgb(232,104,17)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (716,349 samples, 0.31%)</title><rect x="90.1174%" y="293" width="0.3062%" height="15" fill="rgb(250,220,14)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (716,349 samples, 0.31%)</title><rect x="90.1174%" y="277" width="0.3062%" height="15" fill="rgb(241,158,9)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="287.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (716,349 samples, 0.31%)</title><rect x="90.1174%" y="261" width="0.3062%" height="15" fill="rgb(246,9,43)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (716,349 samples, 0.31%)</title><rect x="90.1174%" y="245" width="0.3062%" height="15" fill="rgb(206,73,33)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (716,349 samples, 0.31%)</title><rect x="90.1174%" y="229" width="0.3062%" height="15" fill="rgb(222,79,8)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (716,349 samples, 0.31%)</title><rect x="90.1174%" y="213" width="0.3062%" height="15" fill="rgb(234,8,54)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (716,349 samples, 0.31%)</title><rect x="90.1174%" y="197" width="0.3062%" height="15" fill="rgb(209,134,38)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (716,349 samples, 0.31%)</title><rect x="90.1174%" y="181" width="0.3062%" height="15" fill="rgb(230,127,29)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (716,349 samples, 0.31%)</title><rect x="90.1174%" y="165" width="0.3062%" height="15" fill="rgb(242,44,41)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (716,349 samples, 0.31%)</title><rect x="90.1174%" y="149" width="0.3062%" height="15" fill="rgb(222,56,43)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (716,349 samples, 0.31%)</title><rect x="90.1174%" y="133" width="0.3062%" height="15" fill="rgb(238,39,47)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (716,349 samples, 0.31%)</title><rect x="90.1174%" y="117" width="0.3062%" height="15" fill="rgb(226,79,43)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (716,349 samples, 0.31%)</title><rect x="90.1174%" y="101" width="0.3062%" height="15" fill="rgb(242,105,53)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (716,349 samples, 0.31%)</title><rect x="90.1174%" y="85" width="0.3062%" height="15" fill="rgb(251,132,46)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="95.50"></text></g><g><title>alloc::alloc::alloc (716,349 samples, 0.31%)</title><rect x="90.1174%" y="69" width="0.3062%" height="15" fill="rgb(231,77,14)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="79.50"></text></g><g><title>malloc (716,349 samples, 0.31%)</title><rect x="90.1174%" y="53" width="0.3062%" height="15" fill="rgb(240,135,9)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="63.50"></text></g><g><title>[libc.so.6] (716,349 samples, 0.31%)</title><rect x="90.1174%" y="37" width="0.3062%" height="15" fill="rgb(248,109,14)" fg:x="210815167" fg:w="716349"/><text x="90.3674%" y="47.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,895,822 samples, 0.81%)</title><rect x="90.1174%" y="725" width="0.8104%" height="15" fill="rgb(227,146,52)" fg:x="210815167" fg:w="1895822"/><text x="90.3674%" y="735.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,895,822 samples, 0.81%)</title><rect x="90.1174%" y="709" width="0.8104%" height="15" fill="rgb(232,54,3)" fg:x="210815167" fg:w="1895822"/><text x="90.3674%" y="719.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,895,822 samples, 0.81%)</title><rect x="90.1174%" y="693" width="0.8104%" height="15" fill="rgb(229,201,43)" fg:x="210815167" fg:w="1895822"/><text x="90.3674%" y="703.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,895,822 samples, 0.81%)</title><rect x="90.1174%" y="677" width="0.8104%" height="15" fill="rgb(252,161,33)" fg:x="210815167" fg:w="1895822"/><text x="90.3674%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,895,822 samples, 0.81%)</title><rect x="90.1174%" y="661" width="0.8104%" height="15" fill="rgb(226,146,40)" fg:x="210815167" fg:w="1895822"/><text x="90.3674%" y="671.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,895,822 samples, 0.81%)</title><rect x="90.1174%" y="645" width="0.8104%" height="15" fill="rgb(219,47,25)" fg:x="210815167" fg:w="1895822"/><text x="90.3674%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,895,822 samples, 0.81%)</title><rect x="90.1174%" y="629" width="0.8104%" height="15" fill="rgb(250,135,13)" fg:x="210815167" fg:w="1895822"/><text x="90.3674%" y="639.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,179,473 samples, 0.50%)</title><rect x="90.4236%" y="613" width="0.5042%" height="15" fill="rgb(219,229,18)" fg:x="211531516" fg:w="1179473"/><text x="90.6736%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,179,473 samples, 0.50%)</title><rect x="90.4236%" y="597" width="0.5042%" height="15" fill="rgb(217,152,27)" fg:x="211531516" fg:w="1179473"/><text x="90.6736%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1,179,473 samples, 0.50%)</title><rect x="90.4236%" y="581" width="0.5042%" height="15" fill="rgb(225,71,47)" fg:x="211531516" fg:w="1179473"/><text x="90.6736%" y="591.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,179,473 samples, 0.50%)</title><rect x="90.4236%" y="565" width="0.5042%" height="15" fill="rgb(220,139,14)" fg:x="211531516" fg:w="1179473"/><text x="90.6736%" y="575.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,179,473 samples, 0.50%)</title><rect x="90.4236%" y="549" width="0.5042%" height="15" fill="rgb(247,54,32)" fg:x="211531516" fg:w="1179473"/><text x="90.6736%" y="559.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,179,473 samples, 0.50%)</title><rect x="90.4236%" y="533" width="0.5042%" height="15" fill="rgb(252,131,39)" fg:x="211531516" fg:w="1179473"/><text x="90.6736%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (1,179,473 samples, 0.50%)</title><rect x="90.4236%" y="517" width="0.5042%" height="15" fill="rgb(210,108,39)" fg:x="211531516" fg:w="1179473"/><text x="90.6736%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (1,179,473 samples, 0.50%)</title><rect x="90.4236%" y="501" width="0.5042%" height="15" fill="rgb(205,23,29)" fg:x="211531516" fg:w="1179473"/><text x="90.6736%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,179,473 samples, 0.50%)</title><rect x="90.4236%" y="485" width="0.5042%" height="15" fill="rgb(246,139,46)" fg:x="211531516" fg:w="1179473"/><text x="90.6736%" y="495.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,179,473 samples, 0.50%)</title><rect x="90.4236%" y="469" width="0.5042%" height="15" fill="rgb(250,81,26)" fg:x="211531516" fg:w="1179473"/><text x="90.6736%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for isize&gt;::cmp (1,179,473 samples, 0.50%)</title><rect x="90.4236%" y="453" width="0.5042%" height="15" fill="rgb(214,104,7)" fg:x="211531516" fg:w="1179473"/><text x="90.6736%" y="463.50"></text></g><g><title>serde::de::MapAccess::next_entry (12,822,800 samples, 5.48%)</title><rect x="85.8749%" y="1653" width="5.4814%" height="15" fill="rgb(233,189,8)" fg:x="200890546" fg:w="12822800"/><text x="86.1249%" y="1663.50">serde::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (12,822,800 samples, 5.48%)</title><rect x="85.8749%" y="1637" width="5.4814%" height="15" fill="rgb(228,141,17)" fg:x="200890546" fg:w="12822800"/><text x="86.1249%" y="1647.50">serde::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11,751,581 samples, 5.02%)</title><rect x="86.3328%" y="1621" width="5.0235%" height="15" fill="rgb(247,157,1)" fg:x="201961765" fg:w="11751581"/><text x="86.5828%" y="1631.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,751,581 samples, 5.02%)</title><rect x="86.3328%" y="1605" width="5.0235%" height="15" fill="rgb(249,225,5)" fg:x="201961765" fg:w="11751581"/><text x="86.5828%" y="1615.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,751,581 samples, 5.02%)</title><rect x="86.3328%" y="1589" width="5.0235%" height="15" fill="rgb(242,55,13)" fg:x="201961765" fg:w="11751581"/><text x="86.5828%" y="1599.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,751,581 samples, 5.02%)</title><rect x="86.3328%" y="1573" width="5.0235%" height="15" fill="rgb(230,49,50)" fg:x="201961765" fg:w="11751581"/><text x="86.5828%" y="1583.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (9,181,808 samples, 3.92%)</title><rect x="87.4313%" y="1557" width="3.9250%" height="15" fill="rgb(241,111,38)" fg:x="204531538" fg:w="9181808"/><text x="87.6813%" y="1567.50">&lt;ser..</text></g><g><title>serde::de::SeqAccess::next_element (9,181,808 samples, 3.92%)</title><rect x="87.4313%" y="1541" width="3.9250%" height="15" fill="rgb(252,155,4)" fg:x="204531538" fg:w="9181808"/><text x="87.6813%" y="1551.50">serd..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (9,181,808 samples, 3.92%)</title><rect x="87.4313%" y="1525" width="3.9250%" height="15" fill="rgb(212,69,32)" fg:x="204531538" fg:w="9181808"/><text x="87.6813%" y="1535.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,181,808 samples, 3.92%)</title><rect x="87.4313%" y="1509" width="3.9250%" height="15" fill="rgb(243,107,47)" fg:x="204531538" fg:w="9181808"/><text x="87.6813%" y="1519.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,181,808 samples, 3.92%)</title><rect x="87.4313%" y="1493" width="3.9250%" height="15" fill="rgb(247,130,12)" fg:x="204531538" fg:w="9181808"/><text x="87.6813%" y="1503.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,181,808 samples, 3.92%)</title><rect x="87.4313%" y="1477" width="3.9250%" height="15" fill="rgb(233,74,16)" fg:x="204531538" fg:w="9181808"/><text x="87.6813%" y="1487.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9,181,808 samples, 3.92%)</title><rect x="87.4313%" y="1461" width="3.9250%" height="15" fill="rgb(208,58,18)" fg:x="204531538" fg:w="9181808"/><text x="87.6813%" y="1471.50">&lt;ser..</text></g><g><title>serde::de::MapAccess::next_entry (9,181,808 samples, 3.92%)</title><rect x="87.4313%" y="1445" width="3.9250%" height="15" fill="rgb(242,225,1)" fg:x="204531538" fg:w="9181808"/><text x="87.6813%" y="1455.50">serd..</text></g><g><title>serde::de::MapAccess::next_entry_seed (9,181,808 samples, 3.92%)</title><rect x="87.4313%" y="1429" width="3.9250%" height="15" fill="rgb(249,39,40)" fg:x="204531538" fg:w="9181808"/><text x="87.6813%" y="1439.50">serd..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (9,181,808 samples, 3.92%)</title><rect x="87.4313%" y="1413" width="3.9250%" height="15" fill="rgb(207,72,44)" fg:x="204531538" fg:w="9181808"/><text x="87.6813%" y="1423.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,181,808 samples, 3.92%)</title><rect x="87.4313%" y="1397" width="3.9250%" height="15" fill="rgb(215,193,12)" fg:x="204531538" fg:w="9181808"/><text x="87.6813%" y="1407.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,181,808 samples, 3.92%)</title><rect x="87.4313%" y="1381" width="3.9250%" height="15" fill="rgb(248,41,39)" fg:x="204531538" fg:w="9181808"/><text x="87.6813%" y="1391.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,181,808 samples, 3.92%)</title><rect x="87.4313%" y="1365" width="3.9250%" height="15" fill="rgb(253,85,4)" fg:x="204531538" fg:w="9181808"/><text x="87.6813%" y="1375.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (7,273,691 samples, 3.11%)</title><rect x="88.2470%" y="1349" width="3.1093%" height="15" fill="rgb(243,70,31)" fg:x="206439655" fg:w="7273691"/><text x="88.4970%" y="1359.50">&lt;se..</text></g><g><title>serde::de::SeqAccess::next_element (7,273,691 samples, 3.11%)</title><rect x="88.2470%" y="1333" width="3.1093%" height="15" fill="rgb(253,195,26)" fg:x="206439655" fg:w="7273691"/><text x="88.4970%" y="1343.50">ser..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (7,273,691 samples, 3.11%)</title><rect x="88.2470%" y="1317" width="3.1093%" height="15" fill="rgb(243,42,11)" fg:x="206439655" fg:w="7273691"/><text x="88.4970%" y="1327.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,273,691 samples, 3.11%)</title><rect x="88.2470%" y="1301" width="3.1093%" height="15" fill="rgb(239,66,17)" fg:x="206439655" fg:w="7273691"/><text x="88.4970%" y="1311.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,273,691 samples, 3.11%)</title><rect x="88.2470%" y="1285" width="3.1093%" height="15" fill="rgb(217,132,21)" fg:x="206439655" fg:w="7273691"/><text x="88.4970%" y="1295.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,273,691 samples, 3.11%)</title><rect x="88.2470%" y="1269" width="3.1093%" height="15" fill="rgb(252,202,21)" fg:x="206439655" fg:w="7273691"/><text x="88.4970%" y="1279.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7,273,691 samples, 3.11%)</title><rect x="88.2470%" y="1253" width="3.1093%" height="15" fill="rgb(233,98,36)" fg:x="206439655" fg:w="7273691"/><text x="88.4970%" y="1263.50">&lt;se..</text></g><g><title>serde::de::MapAccess::next_entry (6,253,372 samples, 2.67%)</title><rect x="88.6832%" y="1237" width="2.6731%" height="15" fill="rgb(216,153,54)" fg:x="207459974" fg:w="6253372"/><text x="88.9332%" y="1247.50">se..</text></g><g><title>serde::de::MapAccess::next_entry_seed (6,253,372 samples, 2.67%)</title><rect x="88.6832%" y="1221" width="2.6731%" height="15" fill="rgb(250,99,7)" fg:x="207459974" fg:w="6253372"/><text x="88.9332%" y="1231.50">se..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,913,046 samples, 2.10%)</title><rect x="89.2561%" y="1205" width="2.1002%" height="15" fill="rgb(207,56,50)" fg:x="208800300" fg:w="4913046"/><text x="89.5061%" y="1215.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,913,046 samples, 2.10%)</title><rect x="89.2561%" y="1189" width="2.1002%" height="15" fill="rgb(244,61,34)" fg:x="208800300" fg:w="4913046"/><text x="89.5061%" y="1199.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,913,046 samples, 2.10%)</title><rect x="89.2561%" y="1173" width="2.1002%" height="15" fill="rgb(241,50,38)" fg:x="208800300" fg:w="4913046"/><text x="89.5061%" y="1183.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,913,046 samples, 2.10%)</title><rect x="89.2561%" y="1157" width="2.1002%" height="15" fill="rgb(212,166,30)" fg:x="208800300" fg:w="4913046"/><text x="89.5061%" y="1167.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (3,990,240 samples, 1.71%)</title><rect x="89.6506%" y="1141" width="1.7057%" height="15" fill="rgb(249,127,32)" fg:x="209723106" fg:w="3990240"/><text x="89.9006%" y="1151.50"></text></g><g><title>serde::de::SeqAccess::next_element (3,990,240 samples, 1.71%)</title><rect x="89.6506%" y="1125" width="1.7057%" height="15" fill="rgb(209,103,0)" fg:x="209723106" fg:w="3990240"/><text x="89.9006%" y="1135.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (3,990,240 samples, 1.71%)</title><rect x="89.6506%" y="1109" width="1.7057%" height="15" fill="rgb(238,209,51)" fg:x="209723106" fg:w="3990240"/><text x="89.9006%" y="1119.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,990,240 samples, 1.71%)</title><rect x="89.6506%" y="1093" width="1.7057%" height="15" fill="rgb(237,56,23)" fg:x="209723106" fg:w="3990240"/><text x="89.9006%" y="1103.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,990,240 samples, 1.71%)</title><rect x="89.6506%" y="1077" width="1.7057%" height="15" fill="rgb(215,153,46)" fg:x="209723106" fg:w="3990240"/><text x="89.9006%" y="1087.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,990,240 samples, 1.71%)</title><rect x="89.6506%" y="1061" width="1.7057%" height="15" fill="rgb(224,49,31)" fg:x="209723106" fg:w="3990240"/><text x="89.9006%" y="1071.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,990,240 samples, 1.71%)</title><rect x="89.6506%" y="1045" width="1.7057%" height="15" fill="rgb(250,18,42)" fg:x="209723106" fg:w="3990240"/><text x="89.9006%" y="1055.50"></text></g><g><title>serde::de::MapAccess::next_entry (3,990,240 samples, 1.71%)</title><rect x="89.6506%" y="1029" width="1.7057%" height="15" fill="rgb(215,176,39)" fg:x="209723106" fg:w="3990240"/><text x="89.9006%" y="1039.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (3,990,240 samples, 1.71%)</title><rect x="89.6506%" y="1013" width="1.7057%" height="15" fill="rgb(223,77,29)" fg:x="209723106" fg:w="3990240"/><text x="89.9006%" y="1023.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,898,179 samples, 1.24%)</title><rect x="90.1174%" y="997" width="1.2389%" height="15" fill="rgb(234,94,52)" fg:x="210815167" fg:w="2898179"/><text x="90.3674%" y="1007.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,898,179 samples, 1.24%)</title><rect x="90.1174%" y="981" width="1.2389%" height="15" fill="rgb(220,154,50)" fg:x="210815167" fg:w="2898179"/><text x="90.3674%" y="991.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,898,179 samples, 1.24%)</title><rect x="90.1174%" y="965" width="1.2389%" height="15" fill="rgb(212,11,10)" fg:x="210815167" fg:w="2898179"/><text x="90.3674%" y="975.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,898,179 samples, 1.24%)</title><rect x="90.1174%" y="949" width="1.2389%" height="15" fill="rgb(205,166,19)" fg:x="210815167" fg:w="2898179"/><text x="90.3674%" y="959.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,898,179 samples, 1.24%)</title><rect x="90.1174%" y="933" width="1.2389%" height="15" fill="rgb(244,198,16)" fg:x="210815167" fg:w="2898179"/><text x="90.3674%" y="943.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,898,179 samples, 1.24%)</title><rect x="90.1174%" y="917" width="1.2389%" height="15" fill="rgb(219,69,12)" fg:x="210815167" fg:w="2898179"/><text x="90.3674%" y="927.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,898,179 samples, 1.24%)</title><rect x="90.1174%" y="901" width="1.2389%" height="15" fill="rgb(245,30,7)" fg:x="210815167" fg:w="2898179"/><text x="90.3674%" y="911.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,898,179 samples, 1.24%)</title><rect x="90.1174%" y="885" width="1.2389%" height="15" fill="rgb(218,221,48)" fg:x="210815167" fg:w="2898179"/><text x="90.3674%" y="895.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,898,179 samples, 1.24%)</title><rect x="90.1174%" y="869" width="1.2389%" height="15" fill="rgb(216,66,15)" fg:x="210815167" fg:w="2898179"/><text x="90.3674%" y="879.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,898,179 samples, 1.24%)</title><rect x="90.1174%" y="853" width="1.2389%" height="15" fill="rgb(226,122,50)" fg:x="210815167" fg:w="2898179"/><text x="90.3674%" y="863.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,898,179 samples, 1.24%)</title><rect x="90.1174%" y="837" width="1.2389%" height="15" fill="rgb(239,156,16)" fg:x="210815167" fg:w="2898179"/><text x="90.3674%" y="847.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,898,179 samples, 1.24%)</title><rect x="90.1174%" y="821" width="1.2389%" height="15" fill="rgb(224,27,38)" fg:x="210815167" fg:w="2898179"/><text x="90.3674%" y="831.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,898,179 samples, 1.24%)</title><rect x="90.1174%" y="805" width="1.2389%" height="15" fill="rgb(224,39,27)" fg:x="210815167" fg:w="2898179"/><text x="90.3674%" y="815.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,898,179 samples, 1.24%)</title><rect x="90.1174%" y="789" width="1.2389%" height="15" fill="rgb(215,92,29)" fg:x="210815167" fg:w="2898179"/><text x="90.3674%" y="799.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,898,179 samples, 1.24%)</title><rect x="90.1174%" y="773" width="1.2389%" height="15" fill="rgb(207,159,16)" fg:x="210815167" fg:w="2898179"/><text x="90.3674%" y="783.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,898,179 samples, 1.24%)</title><rect x="90.1174%" y="757" width="1.2389%" height="15" fill="rgb(238,163,47)" fg:x="210815167" fg:w="2898179"/><text x="90.3674%" y="767.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,898,179 samples, 1.24%)</title><rect x="90.1174%" y="741" width="1.2389%" height="15" fill="rgb(219,91,49)" fg:x="210815167" fg:w="2898179"/><text x="90.3674%" y="751.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_any_number (1,002,357 samples, 0.43%)</title><rect x="90.9278%" y="725" width="0.4285%" height="15" fill="rgb(227,167,31)" fg:x="212710989" fg:w="1002357"/><text x="91.1778%" y="735.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1,002,357 samples, 0.43%)</title><rect x="90.9278%" y="709" width="0.4285%" height="15" fill="rgb(234,80,54)" fg:x="212710989" fg:w="1002357"/><text x="91.1778%" y="719.50"></text></g><g><title>serde::de::MapAccess::next_entry (18,458,433 samples, 7.89%)</title><rect x="83.9725%" y="1861" width="7.8904%" height="15" fill="rgb(212,114,2)" fg:x="196440046" fg:w="18458433"/><text x="84.2225%" y="1871.50">serde::de::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (18,458,433 samples, 7.89%)</title><rect x="83.9725%" y="1845" width="7.8904%" height="15" fill="rgb(234,50,24)" fg:x="196440046" fg:w="18458433"/><text x="84.2225%" y="1855.50">serde::de::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (14,971,328 samples, 6.40%)</title><rect x="85.4631%" y="1829" width="6.3998%" height="15" fill="rgb(221,68,8)" fg:x="199927151" fg:w="14971328"/><text x="85.7131%" y="1839.50">&lt;serde_j..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14,971,328 samples, 6.40%)</title><rect x="85.4631%" y="1813" width="6.3998%" height="15" fill="rgb(254,180,31)" fg:x="199927151" fg:w="14971328"/><text x="85.7131%" y="1823.50">&lt;core::m..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14,971,328 samples, 6.40%)</title><rect x="85.4631%" y="1797" width="6.3998%" height="15" fill="rgb(247,130,50)" fg:x="199927151" fg:w="14971328"/><text x="85.7131%" y="1807.50">serde_js..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14,971,328 samples, 6.40%)</title><rect x="85.4631%" y="1781" width="6.3998%" height="15" fill="rgb(211,109,4)" fg:x="199927151" fg:w="14971328"/><text x="85.7131%" y="1791.50">&lt;&amp;mut se..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (14,007,933 samples, 5.99%)</title><rect x="85.8749%" y="1765" width="5.9880%" height="15" fill="rgb(238,50,21)" fg:x="200890546" fg:w="14007933"/><text x="86.1249%" y="1775.50">&lt;serde_j..</text></g><g><title>serde::de::SeqAccess::next_element (14,007,933 samples, 5.99%)</title><rect x="85.8749%" y="1749" width="5.9880%" height="15" fill="rgb(225,57,45)" fg:x="200890546" fg:w="14007933"/><text x="86.1249%" y="1759.50">serde::d..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (14,007,933 samples, 5.99%)</title><rect x="85.8749%" y="1733" width="5.9880%" height="15" fill="rgb(209,196,50)" fg:x="200890546" fg:w="14007933"/><text x="86.1249%" y="1743.50">&lt;serde_j..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14,007,933 samples, 5.99%)</title><rect x="85.8749%" y="1717" width="5.9880%" height="15" fill="rgb(242,140,13)" fg:x="200890546" fg:w="14007933"/><text x="86.1249%" y="1727.50">&lt;core::m..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14,007,933 samples, 5.99%)</title><rect x="85.8749%" y="1701" width="5.9880%" height="15" fill="rgb(217,111,7)" fg:x="200890546" fg:w="14007933"/><text x="86.1249%" y="1711.50">serde_js..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14,007,933 samples, 5.99%)</title><rect x="85.8749%" y="1685" width="5.9880%" height="15" fill="rgb(253,193,51)" fg:x="200890546" fg:w="14007933"/><text x="86.1249%" y="1695.50">&lt;&amp;mut se..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14,007,933 samples, 5.99%)</title><rect x="85.8749%" y="1669" width="5.9880%" height="15" fill="rgb(252,70,29)" fg:x="200890546" fg:w="14007933"/><text x="86.1249%" y="1679.50">&lt;serde_j..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,185,133 samples, 0.51%)</title><rect x="91.3563%" y="1653" width="0.5066%" height="15" fill="rgb(232,127,12)" fg:x="213713346" fg:w="1185133"/><text x="91.6063%" y="1663.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,185,133 samples, 0.51%)</title><rect x="91.3563%" y="1637" width="0.5066%" height="15" fill="rgb(211,180,21)" fg:x="213713346" fg:w="1185133"/><text x="91.6063%" y="1647.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,185,133 samples, 0.51%)</title><rect x="91.3563%" y="1621" width="0.5066%" height="15" fill="rgb(229,72,13)" fg:x="213713346" fg:w="1185133"/><text x="91.6063%" y="1631.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,185,133 samples, 0.51%)</title><rect x="91.3563%" y="1605" width="0.5066%" height="15" fill="rgb(240,211,49)" fg:x="213713346" fg:w="1185133"/><text x="91.6063%" y="1615.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1,185,133 samples, 0.51%)</title><rect x="91.3563%" y="1589" width="0.5066%" height="15" fill="rgb(219,149,40)" fg:x="213713346" fg:w="1185133"/><text x="91.6063%" y="1599.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (1,185,133 samples, 0.51%)</title><rect x="91.3563%" y="1573" width="0.5066%" height="15" fill="rgb(210,127,46)" fg:x="213713346" fg:w="1185133"/><text x="91.6063%" y="1583.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (1,185,133 samples, 0.51%)</title><rect x="91.3563%" y="1557" width="0.5066%" height="15" fill="rgb(220,106,7)" fg:x="213713346" fg:w="1185133"/><text x="91.6063%" y="1567.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (1,185,133 samples, 0.51%)</title><rect x="91.3563%" y="1541" width="0.5066%" height="15" fill="rgb(249,31,22)" fg:x="213713346" fg:w="1185133"/><text x="91.6063%" y="1551.50"></text></g><g><title>core::intrinsics::copy (1,185,133 samples, 0.51%)</title><rect x="91.3563%" y="1525" width="0.5066%" height="15" fill="rgb(253,1,49)" fg:x="213713346" fg:w="1185133"/><text x="91.6063%" y="1535.50"></text></g><g><title>[libc.so.6] (1,185,133 samples, 0.51%)</title><rect x="91.3563%" y="1509" width="0.5066%" height="15" fill="rgb(227,144,33)" fg:x="213713346" fg:w="1185133"/><text x="91.6063%" y="1519.50"></text></g><g><title>serde::de::MapAccess::next_entry (19,583,437 samples, 8.37%)</title><rect x="83.9725%" y="1973" width="8.3714%" height="15" fill="rgb(249,163,44)" fg:x="196440046" fg:w="19583437"/><text x="84.2225%" y="1983.50">serde::de::M..</text></g><g><title>serde::de::MapAccess::next_entry_seed (19,583,437 samples, 8.37%)</title><rect x="83.9725%" y="1957" width="8.3714%" height="15" fill="rgb(234,15,39)" fg:x="196440046" fg:w="19583437"/><text x="84.2225%" y="1967.50">serde::de::M..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (19,583,437 samples, 8.37%)</title><rect x="83.9725%" y="1941" width="8.3714%" height="15" fill="rgb(207,66,16)" fg:x="196440046" fg:w="19583437"/><text x="84.2225%" y="1951.50">&lt;serde_json:..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (19,583,437 samples, 8.37%)</title><rect x="83.9725%" y="1925" width="8.3714%" height="15" fill="rgb(233,112,24)" fg:x="196440046" fg:w="19583437"/><text x="84.2225%" y="1935.50">&lt;core::marke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (19,583,437 samples, 8.37%)</title><rect x="83.9725%" y="1909" width="8.3714%" height="15" fill="rgb(230,90,22)" fg:x="196440046" fg:w="19583437"/><text x="84.2225%" y="1919.50">serde_json::..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19,583,437 samples, 8.37%)</title><rect x="83.9725%" y="1893" width="8.3714%" height="15" fill="rgb(229,61,13)" fg:x="196440046" fg:w="19583437"/><text x="84.2225%" y="1903.50">&lt;&amp;mut serde_..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19,583,437 samples, 8.37%)</title><rect x="83.9725%" y="1877" width="8.3714%" height="15" fill="rgb(225,57,24)" fg:x="196440046" fg:w="19583437"/><text x="84.2225%" y="1887.50">&lt;serde_json:..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,125,004 samples, 0.48%)</title><rect x="91.8629%" y="1861" width="0.4809%" height="15" fill="rgb(208,169,48)" fg:x="214898479" fg:w="1125004"/><text x="92.1129%" y="1871.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,125,004 samples, 0.48%)</title><rect x="91.8629%" y="1845" width="0.4809%" height="15" fill="rgb(244,218,51)" fg:x="214898479" fg:w="1125004"/><text x="92.1129%" y="1855.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,125,004 samples, 0.48%)</title><rect x="91.8629%" y="1829" width="0.4809%" height="15" fill="rgb(214,148,10)" fg:x="214898479" fg:w="1125004"/><text x="92.1129%" y="1839.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,125,004 samples, 0.48%)</title><rect x="91.8629%" y="1813" width="0.4809%" height="15" fill="rgb(225,174,27)" fg:x="214898479" fg:w="1125004"/><text x="92.1129%" y="1823.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1,125,004 samples, 0.48%)</title><rect x="91.8629%" y="1797" width="0.4809%" height="15" fill="rgb(230,96,26)" fg:x="214898479" fg:w="1125004"/><text x="92.1129%" y="1807.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1,125,004 samples, 0.48%)</title><rect x="91.8629%" y="1781" width="0.4809%" height="15" fill="rgb(232,10,30)" fg:x="214898479" fg:w="1125004"/><text x="92.1129%" y="1791.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1,125,004 samples, 0.48%)</title><rect x="91.8629%" y="1765" width="0.4809%" height="15" fill="rgb(222,8,50)" fg:x="214898479" fg:w="1125004"/><text x="92.1129%" y="1775.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1,125,004 samples, 0.48%)</title><rect x="91.8629%" y="1749" width="0.4809%" height="15" fill="rgb(213,81,27)" fg:x="214898479" fg:w="1125004"/><text x="92.1129%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,125,004 samples, 0.48%)</title><rect x="91.8629%" y="1733" width="0.4809%" height="15" fill="rgb(245,50,10)" fg:x="214898479" fg:w="1125004"/><text x="92.1129%" y="1743.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,125,004 samples, 0.48%)</title><rect x="91.8629%" y="1717" width="0.4809%" height="15" fill="rgb(216,100,18)" fg:x="214898479" fg:w="1125004"/><text x="92.1129%" y="1727.50"></text></g><g><title>alloc::alloc::alloc (1,125,004 samples, 0.48%)</title><rect x="91.8629%" y="1701" width="0.4809%" height="15" fill="rgb(236,147,54)" fg:x="214898479" fg:w="1125004"/><text x="92.1129%" y="1711.50"></text></g><g><title>malloc (1,125,004 samples, 0.48%)</title><rect x="91.8629%" y="1685" width="0.4809%" height="15" fill="rgb(205,143,26)" fg:x="214898479" fg:w="1125004"/><text x="92.1129%" y="1695.50"></text></g><g><title>[libc.so.6] (1,125,004 samples, 0.48%)</title><rect x="91.8629%" y="1669" width="0.4809%" height="15" fill="rgb(236,26,9)" fg:x="214898479" fg:w="1125004"/><text x="92.1129%" y="1679.50"></text></g><g><title>benchmark::parse_web_layout_trace (23,932,708 samples, 10.23%)</title><rect x="82.5447%" y="2069" width="10.2305%" height="15" fill="rgb(221,165,53)" fg:x="193099956" fg:w="23932708"/><text x="82.7947%" y="2079.50">benchmark::pars..</text></g><g><title>serde_json::de::from_str (21,685,740 samples, 9.27%)</title><rect x="83.5052%" y="2053" width="9.2700%" height="15" fill="rgb(214,110,17)" fg:x="195346924" fg:w="21685740"/><text x="83.7552%" y="2063.50">serde_json::d..</text></g><g><title>serde_json::de::from_trait (21,685,740 samples, 9.27%)</title><rect x="83.5052%" y="2037" width="9.2700%" height="15" fill="rgb(237,197,12)" fg:x="195346924" fg:w="21685740"/><text x="83.7552%" y="2047.50">serde_json::d..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (21,685,740 samples, 9.27%)</title><rect x="83.5052%" y="2021" width="9.2700%" height="15" fill="rgb(205,84,17)" fg:x="195346924" fg:w="21685740"/><text x="83.7552%" y="2031.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (21,685,740 samples, 9.27%)</title><rect x="83.5052%" y="2005" width="9.2700%" height="15" fill="rgb(237,18,45)" fg:x="195346924" fg:w="21685740"/><text x="83.7552%" y="2015.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (21,685,740 samples, 9.27%)</title><rect x="83.5052%" y="1989" width="9.2700%" height="15" fill="rgb(221,87,14)" fg:x="195346924" fg:w="21685740"/><text x="83.7552%" y="1999.50">&lt;serde_json::..</text></g><g><title>serde::de::MapAccess::next_value (1,009,181 samples, 0.43%)</title><rect x="92.3438%" y="1973" width="0.4314%" height="15" fill="rgb(238,186,15)" fg:x="216023483" fg:w="1009181"/><text x="92.5938%" y="1983.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,009,181 samples, 0.43%)</title><rect x="92.3438%" y="1957" width="0.4314%" height="15" fill="rgb(208,115,11)" fg:x="216023483" fg:w="1009181"/><text x="92.5938%" y="1967.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,009,181 samples, 0.43%)</title><rect x="92.3438%" y="1941" width="0.4314%" height="15" fill="rgb(254,175,0)" fg:x="216023483" fg:w="1009181"/><text x="92.5938%" y="1951.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,009,181 samples, 0.43%)</title><rect x="92.3438%" y="1925" width="0.4314%" height="15" fill="rgb(227,24,42)" fg:x="216023483" fg:w="1009181"/><text x="92.5938%" y="1935.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,009,181 samples, 0.43%)</title><rect x="92.3438%" y="1909" width="0.4314%" height="15" fill="rgb(223,211,37)" fg:x="216023483" fg:w="1009181"/><text x="92.5938%" y="1919.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,009,181 samples, 0.43%)</title><rect x="92.3438%" y="1893" width="0.4314%" height="15" fill="rgb(235,49,27)" fg:x="216023483" fg:w="1009181"/><text x="92.5938%" y="1903.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,009,181 samples, 0.43%)</title><rect x="92.3438%" y="1877" width="0.4314%" height="15" fill="rgb(254,97,51)" fg:x="216023483" fg:w="1009181"/><text x="92.5938%" y="1887.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,009,181 samples, 0.43%)</title><rect x="92.3438%" y="1861" width="0.4314%" height="15" fill="rgb(249,51,40)" fg:x="216023483" fg:w="1009181"/><text x="92.5938%" y="1871.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,400,148 samples, 0.60%)</title><rect x="92.7752%" y="1877" width="0.5985%" height="15" fill="rgb(210,128,45)" fg:x="217032664" fg:w="1400148"/><text x="93.0252%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,400,148 samples, 0.60%)</title><rect x="92.7752%" y="1861" width="0.5985%" height="15" fill="rgb(224,137,50)" fg:x="217032664" fg:w="1400148"/><text x="93.0252%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,400,148 samples, 0.60%)</title><rect x="92.7752%" y="1845" width="0.5985%" height="15" fill="rgb(242,15,9)" fg:x="217032664" fg:w="1400148"/><text x="93.0252%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,400,148 samples, 0.60%)</title><rect x="92.7752%" y="1829" width="0.5985%" height="15" fill="rgb(233,187,41)" fg:x="217032664" fg:w="1400148"/><text x="93.0252%" y="1839.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,400,148 samples, 0.60%)</title><rect x="92.7752%" y="1813" width="0.5985%" height="15" fill="rgb(227,2,29)" fg:x="217032664" fg:w="1400148"/><text x="93.0252%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,400,148 samples, 0.60%)</title><rect x="92.7752%" y="1797" width="0.5985%" height="15" fill="rgb(222,70,3)" fg:x="217032664" fg:w="1400148"/><text x="93.0252%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,400,148 samples, 0.60%)</title><rect x="92.7752%" y="1781" width="0.5985%" height="15" fill="rgb(213,11,42)" fg:x="217032664" fg:w="1400148"/><text x="93.0252%" y="1791.50"></text></g><g><title>alloc::alloc::dealloc (1,400,148 samples, 0.60%)</title><rect x="92.7752%" y="1765" width="0.5985%" height="15" fill="rgb(225,150,9)" fg:x="217032664" fg:w="1400148"/><text x="93.0252%" y="1775.50"></text></g><g><title>cfree (1,400,148 samples, 0.60%)</title><rect x="92.7752%" y="1749" width="0.5985%" height="15" fill="rgb(230,162,45)" fg:x="217032664" fg:w="1400148"/><text x="93.0252%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,831,992 samples, 1.21%)</title><rect x="92.7752%" y="2053" width="1.2106%" height="15" fill="rgb(222,14,52)" fg:x="217032664" fg:w="2831992"/><text x="93.0252%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (2,831,992 samples, 1.21%)</title><rect x="92.7752%" y="2037" width="1.2106%" height="15" fill="rgb(254,198,14)" fg:x="217032664" fg:w="2831992"/><text x="93.0252%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (2,831,992 samples, 1.21%)</title><rect x="92.7752%" y="2021" width="1.2106%" height="15" fill="rgb(220,217,30)" fg:x="217032664" fg:w="2831992"/><text x="93.0252%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,831,992 samples, 1.21%)</title><rect x="92.7752%" y="2005" width="1.2106%" height="15" fill="rgb(215,146,41)" fg:x="217032664" fg:w="2831992"/><text x="93.0252%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,831,992 samples, 1.21%)</title><rect x="92.7752%" y="1989" width="1.2106%" height="15" fill="rgb(217,27,36)" fg:x="217032664" fg:w="2831992"/><text x="93.0252%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,831,992 samples, 1.21%)</title><rect x="92.7752%" y="1973" width="1.2106%" height="15" fill="rgb(219,218,39)" fg:x="217032664" fg:w="2831992"/><text x="93.0252%" y="1983.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,831,992 samples, 1.21%)</title><rect x="92.7752%" y="1957" width="1.2106%" height="15" fill="rgb(219,4,42)" fg:x="217032664" fg:w="2831992"/><text x="93.0252%" y="1967.50"></text></g><g><title>core::mem::drop (2,831,992 samples, 1.21%)</title><rect x="92.7752%" y="1941" width="1.2106%" height="15" fill="rgb(249,119,36)" fg:x="217032664" fg:w="2831992"/><text x="93.0252%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,831,992 samples, 1.21%)</title><rect x="92.7752%" y="1925" width="1.2106%" height="15" fill="rgb(209,23,33)" fg:x="217032664" fg:w="2831992"/><text x="93.0252%" y="1935.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,831,992 samples, 1.21%)</title><rect x="92.7752%" y="1909" width="1.2106%" height="15" fill="rgb(211,10,0)" fg:x="217032664" fg:w="2831992"/><text x="93.0252%" y="1919.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,831,992 samples, 1.21%)</title><rect x="92.7752%" y="1893" width="1.2106%" height="15" fill="rgb(208,99,37)" fg:x="217032664" fg:w="2831992"/><text x="93.0252%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1877" width="0.6121%" height="15" fill="rgb(213,132,31)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1887.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1861" width="0.6121%" height="15" fill="rgb(243,129,40)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1871.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1845" width="0.6121%" height="15" fill="rgb(210,66,33)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1829" width="0.6121%" height="15" fill="rgb(209,189,4)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1813" width="0.6121%" height="15" fill="rgb(214,107,37)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1797" width="0.6121%" height="15" fill="rgb(245,88,54)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1781" width="0.6121%" height="15" fill="rgb(205,146,20)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1791.50"></text></g><g><title>core::mem::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1765" width="0.6121%" height="15" fill="rgb(220,161,25)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1749" width="0.6121%" height="15" fill="rgb(215,152,15)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1759.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1733" width="0.6121%" height="15" fill="rgb(233,192,44)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1743.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1717" width="0.6121%" height="15" fill="rgb(240,170,46)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1701" width="0.6121%" height="15" fill="rgb(207,104,33)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1711.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1685" width="0.6121%" height="15" fill="rgb(219,21,39)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1695.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1669" width="0.6121%" height="15" fill="rgb(214,133,29)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1653" width="0.6121%" height="15" fill="rgb(226,93,6)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1637" width="0.6121%" height="15" fill="rgb(252,222,34)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1621" width="0.6121%" height="15" fill="rgb(252,92,48)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1605" width="0.6121%" height="15" fill="rgb(245,223,24)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1589" width="0.6121%" height="15" fill="rgb(205,176,3)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1573" width="0.6121%" height="15" fill="rgb(235,151,15)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1557" width="0.6121%" height="15" fill="rgb(237,209,11)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1567.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1541" width="0.6121%" height="15" fill="rgb(243,227,24)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1551.50"></text></g><g><title>core::mem::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1525" width="0.6121%" height="15" fill="rgb(239,193,16)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1509" width="0.6121%" height="15" fill="rgb(231,27,9)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1519.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1493" width="0.6121%" height="15" fill="rgb(219,169,10)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1503.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1477" width="0.6121%" height="15" fill="rgb(244,229,43)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1461" width="0.6121%" height="15" fill="rgb(254,38,20)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1471.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1445" width="0.6121%" height="15" fill="rgb(250,47,30)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1455.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1429" width="0.6121%" height="15" fill="rgb(224,124,36)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1413" width="0.6121%" height="15" fill="rgb(246,68,51)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1397" width="0.6121%" height="15" fill="rgb(253,43,49)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1381" width="0.6121%" height="15" fill="rgb(219,54,36)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1365" width="0.6121%" height="15" fill="rgb(227,133,34)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1349" width="0.6121%" height="15" fill="rgb(247,227,15)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1333" width="0.6121%" height="15" fill="rgb(229,96,14)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1317" width="0.6121%" height="15" fill="rgb(220,79,17)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1327.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1301" width="0.6121%" height="15" fill="rgb(205,131,53)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1311.50"></text></g><g><title>core::mem::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1285" width="0.6121%" height="15" fill="rgb(209,50,29)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1269" width="0.6121%" height="15" fill="rgb(245,86,46)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1279.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1253" width="0.6121%" height="15" fill="rgb(235,66,46)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1263.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1237" width="0.6121%" height="15" fill="rgb(232,148,31)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1221" width="0.6121%" height="15" fill="rgb(217,149,8)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1231.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1205" width="0.6121%" height="15" fill="rgb(209,183,11)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1215.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1189" width="0.6121%" height="15" fill="rgb(208,55,20)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1173" width="0.6121%" height="15" fill="rgb(218,39,14)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1157" width="0.6121%" height="15" fill="rgb(216,169,33)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1141" width="0.6121%" height="15" fill="rgb(233,80,24)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1125" width="0.6121%" height="15" fill="rgb(213,179,31)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1109" width="0.6121%" height="15" fill="rgb(209,19,5)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1093" width="0.6121%" height="15" fill="rgb(219,18,35)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1077" width="0.6121%" height="15" fill="rgb(209,169,16)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1061" width="0.6121%" height="15" fill="rgb(245,90,51)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1071.50"></text></g><g><title>core::mem::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1045" width="0.6121%" height="15" fill="rgb(220,99,45)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1029" width="0.6121%" height="15" fill="rgb(249,89,25)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="1013" width="0.6121%" height="15" fill="rgb(239,193,0)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="997" width="0.6121%" height="15" fill="rgb(231,126,1)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="981" width="0.6121%" height="15" fill="rgb(243,166,3)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="965" width="0.6121%" height="15" fill="rgb(223,22,34)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="975.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="949" width="0.6121%" height="15" fill="rgb(251,52,51)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="933" width="0.6121%" height="15" fill="rgb(221,165,28)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="917" width="0.6121%" height="15" fill="rgb(218,121,47)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="901" width="0.6121%" height="15" fill="rgb(209,120,9)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="885" width="0.6121%" height="15" fill="rgb(236,68,12)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="869" width="0.6121%" height="15" fill="rgb(225,194,26)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="853" width="0.6121%" height="15" fill="rgb(231,84,39)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="837" width="0.6121%" height="15" fill="rgb(210,11,45)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="847.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="821" width="0.6121%" height="15" fill="rgb(224,54,52)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="831.50"></text></g><g><title>core::mem::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="805" width="0.6121%" height="15" fill="rgb(238,102,14)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="789" width="0.6121%" height="15" fill="rgb(243,160,52)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="773" width="0.6121%" height="15" fill="rgb(216,114,19)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="783.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="757" width="0.6121%" height="15" fill="rgb(244,166,37)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="741" width="0.6121%" height="15" fill="rgb(246,29,44)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="725" width="0.6121%" height="15" fill="rgb(215,56,53)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="735.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="709" width="0.6121%" height="15" fill="rgb(217,60,2)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="693" width="0.6121%" height="15" fill="rgb(207,26,24)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="677" width="0.6121%" height="15" fill="rgb(252,210,15)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="661" width="0.6121%" height="15" fill="rgb(253,209,26)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="645" width="0.6121%" height="15" fill="rgb(238,170,14)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="655.50"></text></g><g><title>core::mem::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="629" width="0.6121%" height="15" fill="rgb(216,178,15)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="613" width="0.6121%" height="15" fill="rgb(250,197,2)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="597" width="0.6121%" height="15" fill="rgb(212,70,42)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="581" width="0.6121%" height="15" fill="rgb(227,213,9)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="591.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="565" width="0.6121%" height="15" fill="rgb(245,99,25)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="575.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="549" width="0.6121%" height="15" fill="rgb(250,82,29)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="559.50"></text></g><g><title>alloc::collections::btree::mem::replace (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="533" width="0.6121%" height="15" fill="rgb(241,226,54)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="517" width="0.6121%" height="15" fill="rgb(221,99,41)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="527.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="501" width="0.6121%" height="15" fill="rgb(213,90,21)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="485" width="0.6121%" height="15" fill="rgb(205,208,24)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="495.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (1,431,844 samples, 0.61%)</title><rect x="93.3737%" y="469" width="0.6121%" height="15" fill="rgb(246,31,12)" fg:x="218432812" fg:w="1431844"/><text x="93.6237%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::LayoutFrame&gt;&gt; (7,271,113 samples, 3.11%)</title><rect x="92.7752%" y="2069" width="3.1082%" height="15" fill="rgb(213,154,6)" fg:x="217032664" fg:w="7271113"/><text x="93.0252%" y="2079.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;benchmark::LayoutFrame&gt;&gt; (4,439,121 samples, 1.90%)</title><rect x="93.9858%" y="2053" width="1.8976%" height="15" fill="rgb(222,163,29)" fg:x="219864656" fg:w="4439121"/><text x="94.2358%" y="2063.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,439,121 samples, 1.90%)</title><rect x="93.9858%" y="2037" width="1.8976%" height="15" fill="rgb(227,201,8)" fg:x="219864656" fg:w="4439121"/><text x="94.2358%" y="2047.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,439,121 samples, 1.90%)</title><rect x="93.9858%" y="2021" width="1.8976%" height="15" fill="rgb(233,9,32)" fg:x="219864656" fg:w="4439121"/><text x="94.2358%" y="2031.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,439,121 samples, 1.90%)</title><rect x="93.9858%" y="2005" width="1.8976%" height="15" fill="rgb(217,54,24)" fg:x="219864656" fg:w="4439121"/><text x="94.2358%" y="2015.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (4,439,121 samples, 1.90%)</title><rect x="93.9858%" y="1989" width="1.8976%" height="15" fill="rgb(235,192,0)" fg:x="219864656" fg:w="4439121"/><text x="94.2358%" y="1999.50">a..</text></g><g><title>cfree (4,439,121 samples, 1.90%)</title><rect x="93.9858%" y="1973" width="1.8976%" height="15" fill="rgb(235,45,9)" fg:x="219864656" fg:w="4439121"/><text x="94.2358%" y="1983.50">c..</text></g><g><title>[libc.so.6] (4,439,121 samples, 1.90%)</title><rect x="93.9858%" y="1957" width="1.8976%" height="15" fill="rgb(246,42,40)" fg:x="219864656" fg:w="4439121"/><text x="94.2358%" y="1967.50">[..</text></g><g><title>[libc.so.6] (4,439,121 samples, 1.90%)</title><rect x="93.9858%" y="1941" width="1.8976%" height="15" fill="rgb(248,111,24)" fg:x="219864656" fg:w="4439121"/><text x="94.2358%" y="1951.50">[..</text></g><g><title>_start (200,340,989 samples, 85.64%)</title><rect x="10.8949%" y="2357" width="85.6400%" height="15" fill="rgb(249,65,22)" fg:x="25486881" fg:w="200340989"/><text x="11.1449%" y="2367.50">_start</text></g><g><title>__libc_start_main (200,340,989 samples, 85.64%)</title><rect x="10.8949%" y="2341" width="85.6400%" height="15" fill="rgb(238,111,51)" fg:x="25486881" fg:w="200340989"/><text x="11.1449%" y="2351.50">__libc_start_main</text></g><g><title>[libc.so.6] (200,340,989 samples, 85.64%)</title><rect x="10.8949%" y="2325" width="85.6400%" height="15" fill="rgb(250,118,22)" fg:x="25486881" fg:w="200340989"/><text x="11.1449%" y="2335.50">[libc.so.6]</text></g><g><title>main (200,340,989 samples, 85.64%)</title><rect x="10.8949%" y="2309" width="85.6400%" height="15" fill="rgb(234,84,26)" fg:x="25486881" fg:w="200340989"/><text x="11.1449%" y="2319.50">main</text></g><g><title>std::rt::lang_start_internal (200,340,989 samples, 85.64%)</title><rect x="10.8949%" y="2293" width="85.6400%" height="15" fill="rgb(243,172,12)" fg:x="25486881" fg:w="200340989"/><text x="11.1449%" y="2303.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (200,340,989 samples, 85.64%)</title><rect x="10.8949%" y="2277" width="85.6400%" height="15" fill="rgb(236,150,49)" fg:x="25486881" fg:w="200340989"/><text x="11.1449%" y="2287.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (200,340,989 samples, 85.64%)</title><rect x="10.8949%" y="2261" width="85.6400%" height="15" fill="rgb(225,197,26)" fg:x="25486881" fg:w="200340989"/><text x="11.1449%" y="2271.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (200,340,989 samples, 85.64%)</title><rect x="10.8949%" y="2245" width="85.6400%" height="15" fill="rgb(214,17,42)" fg:x="25486881" fg:w="200340989"/><text x="11.1449%" y="2255.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (200,340,989 samples, 85.64%)</title><rect x="10.8949%" y="2229" width="85.6400%" height="15" fill="rgb(224,165,40)" fg:x="25486881" fg:w="200340989"/><text x="11.1449%" y="2239.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (200,340,989 samples, 85.64%)</title><rect x="10.8949%" y="2213" width="85.6400%" height="15" fill="rgb(246,100,4)" fg:x="25486881" fg:w="200340989"/><text x="11.1449%" y="2223.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (200,340,989 samples, 85.64%)</title><rect x="10.8949%" y="2197" width="85.6400%" height="15" fill="rgb(222,103,0)" fg:x="25486881" fg:w="200340989"/><text x="11.1449%" y="2207.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (200,340,989 samples, 85.64%)</title><rect x="10.8949%" y="2181" width="85.6400%" height="15" fill="rgb(227,189,26)" fg:x="25486881" fg:w="200340989"/><text x="11.1449%" y="2191.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (200,340,989 samples, 85.64%)</title><rect x="10.8949%" y="2165" width="85.6400%" height="15" fill="rgb(214,202,17)" fg:x="25486881" fg:w="200340989"/><text x="11.1449%" y="2175.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (200,340,989 samples, 85.64%)</title><rect x="10.8949%" y="2149" width="85.6400%" height="15" fill="rgb(229,111,3)" fg:x="25486881" fg:w="200340989"/><text x="11.1449%" y="2159.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (200,340,989 samples, 85.64%)</title><rect x="10.8949%" y="2133" width="85.6400%" height="15" fill="rgb(229,172,15)" fg:x="25486881" fg:w="200340989"/><text x="11.1449%" y="2143.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (200,340,989 samples, 85.64%)</title><rect x="10.8949%" y="2117" width="85.6400%" height="15" fill="rgb(230,224,35)" fg:x="25486881" fg:w="200340989"/><text x="11.1449%" y="2127.50">core::ops::function::FnOnce::call_once</text></g><g><title>benchmark::main (200,340,989 samples, 85.64%)</title><rect x="10.8949%" y="2101" width="85.6400%" height="15" fill="rgb(251,141,6)" fg:x="25486881" fg:w="200340989"/><text x="11.1449%" y="2111.50">benchmark::main</text></g><g><title>benchmark::run_web_browser_layout_trace_benchmark (200,340,989 samples, 85.64%)</title><rect x="10.8949%" y="2085" width="85.6400%" height="15" fill="rgb(225,208,6)" fg:x="25486881" fg:w="200340989"/><text x="11.1449%" y="2095.50">benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="2069" width="0.6515%" height="15" fill="rgb(246,181,16)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="2053" width="0.6515%" height="15" fill="rgb(227,129,36)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="2063.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="2037" width="0.6515%" height="15" fill="rgb(248,117,24)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="2021" width="0.6515%" height="15" fill="rgb(214,185,35)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="2005" width="0.6515%" height="15" fill="rgb(236,150,34)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1989" width="0.6515%" height="15" fill="rgb(243,228,27)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1973" width="0.6515%" height="15" fill="rgb(245,77,44)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1957" width="0.6515%" height="15" fill="rgb(235,214,42)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1941" width="0.6515%" height="15" fill="rgb(221,74,3)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1925" width="0.6515%" height="15" fill="rgb(206,121,29)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1935.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1909" width="0.6515%" height="15" fill="rgb(249,131,53)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1893" width="0.6515%" height="15" fill="rgb(236,170,29)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1877" width="0.6515%" height="15" fill="rgb(247,96,15)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1861" width="0.6515%" height="15" fill="rgb(211,210,7)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1845" width="0.6515%" height="15" fill="rgb(240,88,50)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1829" width="0.6515%" height="15" fill="rgb(209,229,26)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1813" width="0.6515%" height="15" fill="rgb(210,68,23)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1797" width="0.6515%" height="15" fill="rgb(229,180,13)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1781" width="0.6515%" height="15" fill="rgb(236,53,44)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1765" width="0.6515%" height="15" fill="rgb(244,214,29)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1749" width="0.6515%" height="15" fill="rgb(220,75,29)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1733" width="0.6515%" height="15" fill="rgb(214,183,37)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1717" width="0.6515%" height="15" fill="rgb(239,117,29)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1701" width="0.6515%" height="15" fill="rgb(237,171,35)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1685" width="0.6515%" height="15" fill="rgb(229,178,53)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1669" width="0.6515%" height="15" fill="rgb(210,102,19)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1653" width="0.6515%" height="15" fill="rgb(235,127,22)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1637" width="0.6515%" height="15" fill="rgb(244,31,31)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1621" width="0.6515%" height="15" fill="rgb(231,43,21)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1605" width="0.6515%" height="15" fill="rgb(217,131,35)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1589" width="0.6515%" height="15" fill="rgb(221,149,4)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1573" width="0.6515%" height="15" fill="rgb(232,170,28)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1557" width="0.6515%" height="15" fill="rgb(238,56,10)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1541" width="0.6515%" height="15" fill="rgb(235,196,14)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1525" width="0.6515%" height="15" fill="rgb(216,45,48)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1509" width="0.6515%" height="15" fill="rgb(238,213,17)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1493" width="0.6515%" height="15" fill="rgb(212,13,2)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1477" width="0.6515%" height="15" fill="rgb(240,114,20)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1461" width="0.6515%" height="15" fill="rgb(228,41,40)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1445" width="0.6515%" height="15" fill="rgb(244,132,35)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1429" width="0.6515%" height="15" fill="rgb(253,189,4)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1413" width="0.6515%" height="15" fill="rgb(224,37,19)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1397" width="0.6515%" height="15" fill="rgb(235,223,18)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1381" width="0.6515%" height="15" fill="rgb(235,163,25)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1365" width="0.6515%" height="15" fill="rgb(217,145,28)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1375.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1349" width="0.6515%" height="15" fill="rgb(223,223,32)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1333" width="0.6515%" height="15" fill="rgb(227,189,39)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1317" width="0.6515%" height="15" fill="rgb(248,10,22)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1327.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1301" width="0.6515%" height="15" fill="rgb(248,46,39)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1311.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1285" width="0.6515%" height="15" fill="rgb(248,113,48)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1269" width="0.6515%" height="15" fill="rgb(245,16,25)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1253" width="0.6515%" height="15" fill="rgb(249,152,16)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1237" width="0.6515%" height="15" fill="rgb(250,16,1)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1221" width="0.6515%" height="15" fill="rgb(249,138,3)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1205" width="0.6515%" height="15" fill="rgb(227,71,41)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1189" width="0.6515%" height="15" fill="rgb(209,184,23)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1173" width="0.6515%" height="15" fill="rgb(223,215,31)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1157" width="0.6515%" height="15" fill="rgb(210,146,28)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1167.50"></text></g><g><title>cfree (1,524,093 samples, 0.65%)</title><rect x="95.8834%" y="1141" width="0.6515%" height="15" fill="rgb(209,183,41)" fg:x="224303777" fg:w="1524093"/><text x="96.1334%" y="1151.50"></text></g><g><title>benchmark::clear_dirty_flags (1,280,883 samples, 0.55%)</title><rect x="96.5349%" y="2357" width="0.5475%" height="15" fill="rgb(209,224,45)" fg:x="225827870" fg:w="1280883"/><text x="96.7849%" y="2367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,272,974 samples, 0.54%)</title><rect x="97.0824%" y="2357" width="0.5442%" height="15" fill="rgb(224,209,51)" fg:x="227108753" fg:w="1272974"/><text x="97.3324%" y="2367.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,778,359 samples, 1.62%)</title><rect x="97.6266%" y="2357" width="1.6151%" height="15" fill="rgb(223,17,39)" fg:x="228381727" fg:w="3778359"/><text x="97.8766%" y="2367.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::node_has_class_id (1,272,308 samples, 0.54%)</title><rect x="99.2417%" y="2357" width="0.5439%" height="15" fill="rgb(234,204,37)" fg:x="232160086" fg:w="1272308"/><text x="99.4917%" y="2367.50"></text></g><g><title>all (233,933,898 samples, 100%)</title><rect x="0.0000%" y="2389" width="100.0000%" height="15" fill="rgb(236,120,5)" fg:x="0" fg:w="233933898"/><text x="0.2500%" y="2399.50"></text></g><g><title>benchmark (233,933,898 samples, 100.00%)</title><rect x="0.0000%" y="2373" width="100.0000%" height="15" fill="rgb(248,97,27)" fg:x="0" fg:w="233933898"/><text x="0.2500%" y="2383.50">benchmark</text></g><g><title>std::io::default_read_to_end (501,504 samples, 0.21%)</title><rect x="99.7856%" y="2357" width="0.2144%" height="15" fill="rgb(240,66,17)" fg:x="233432394" fg:w="501504"/><text x="100.0356%" y="2367.50"></text></g></svg></svg>