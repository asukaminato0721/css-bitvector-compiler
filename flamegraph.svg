<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2598" onload="init(evt)" viewBox="0 0 1200 2598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2598" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2581.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2581.00"> </text><svg id="frames" x="10" width="1180" total_samples="230095479"><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,746,729 samples, 1.19%)</title><rect x="0.0000%" y="2517" width="1.1937%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2746729"/><text x="0.2500%" y="2527.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (1,344,016 samples, 0.58%)</title><rect x="0.6096%" y="2501" width="0.5841%" height="15" fill="rgb(217,0,24)" fg:x="1402713" fg:w="1344016"/><text x="0.8596%" y="2511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (554,881 samples, 0.24%)</title><rect x="1.1937%" y="2517" width="0.2412%" height="15" fill="rgb(221,193,54)" fg:x="2746729" fg:w="554881"/><text x="1.4437%" y="2527.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (554,881 samples, 0.24%)</title><rect x="1.1937%" y="2501" width="0.2412%" height="15" fill="rgb(248,212,6)" fg:x="2746729" fg:w="554881"/><text x="1.4437%" y="2511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (874,474 samples, 0.38%)</title><rect x="1.4349%" y="2517" width="0.3800%" height="15" fill="rgb(208,68,35)" fg:x="3301610" fg:w="874474"/><text x="1.6849%" y="2527.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,178,676 samples, 0.51%)</title><rect x="1.8149%" y="2517" width="0.5123%" height="15" fill="rgb(232,128,0)" fg:x="4176084" fg:w="1178676"/><text x="2.0649%" y="2527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,425,137 samples, 0.62%)</title><rect x="3.3417%" y="2501" width="0.6194%" height="15" fill="rgb(207,160,47)" fg:x="7689182" fg:w="1425137"/><text x="3.5917%" y="2511.50"></text></g><g><title>[libc.so.6] (5,015,261 samples, 2.18%)</title><rect x="2.3272%" y="2517" width="2.1796%" height="15" fill="rgb(228,23,34)" fg:x="5354760" fg:w="5015261"/><text x="2.5772%" y="2527.50">[..</text></g><g><title>[libc.so.6] (1,255,702 samples, 0.55%)</title><rect x="3.9611%" y="2501" width="0.5457%" height="15" fill="rgb(218,30,26)" fg:x="9114319" fg:w="1255702"/><text x="4.2111%" y="2511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,793,829 samples, 1.21%)</title><rect x="5.7919%" y="2501" width="1.2142%" height="15" fill="rgb(220,122,19)" fg:x="13326842" fg:w="2793829"/><text x="6.0419%" y="2511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,427,531 samples, 0.62%)</title><rect x="6.3857%" y="2485" width="0.6204%" height="15" fill="rgb(250,228,42)" fg:x="14693140" fg:w="1427531"/><text x="6.6357%" y="2495.50"></text></g><g><title>alloc::slice::hack::to_vec (1,427,531 samples, 0.62%)</title><rect x="6.3857%" y="2469" width="0.6204%" height="15" fill="rgb(240,193,28)" fg:x="14693140" fg:w="1427531"/><text x="6.6357%" y="2479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,427,531 samples, 0.62%)</title><rect x="6.3857%" y="2453" width="0.6204%" height="15" fill="rgb(216,20,37)" fg:x="14693140" fg:w="1427531"/><text x="6.6357%" y="2463.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,427,531 samples, 0.62%)</title><rect x="6.3857%" y="2437" width="0.6204%" height="15" fill="rgb(206,188,39)" fg:x="14693140" fg:w="1427531"/><text x="6.6357%" y="2447.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,427,531 samples, 0.62%)</title><rect x="6.3857%" y="2421" width="0.6204%" height="15" fill="rgb(217,207,13)" fg:x="14693140" fg:w="1427531"/><text x="6.6357%" y="2431.50"></text></g><g><title>[libc.so.6] (1,048,948 samples, 0.46%)</title><rect x="7.0061%" y="2501" width="0.4559%" height="15" fill="rgb(231,73,38)" fg:x="16120671" fg:w="1048948"/><text x="7.2561%" y="2511.50"></text></g><g><title>cfree (1,465,445 samples, 0.64%)</title><rect x="7.4620%" y="2501" width="0.6369%" height="15" fill="rgb(225,20,46)" fg:x="17169619" fg:w="1465445"/><text x="7.7120%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,561,766 samples, 0.68%)</title><rect x="8.0988%" y="2501" width="0.6787%" height="15" fill="rgb(210,31,41)" fg:x="18635064" fg:w="1561766"/><text x="8.3488%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,561,766 samples, 0.68%)</title><rect x="8.0988%" y="2485" width="0.6787%" height="15" fill="rgb(221,200,47)" fg:x="18635064" fg:w="1561766"/><text x="8.3488%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,561,766 samples, 0.68%)</title><rect x="8.0988%" y="2469" width="0.6787%" height="15" fill="rgb(226,26,5)" fg:x="18635064" fg:w="1561766"/><text x="8.3488%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,561,766 samples, 0.68%)</title><rect x="8.0988%" y="2453" width="0.6787%" height="15" fill="rgb(249,33,26)" fg:x="18635064" fg:w="1561766"/><text x="8.3488%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,561,766 samples, 0.68%)</title><rect x="8.0988%" y="2437" width="0.6787%" height="15" fill="rgb(235,183,28)" fg:x="18635064" fg:w="1561766"/><text x="8.3488%" y="2447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,561,766 samples, 0.68%)</title><rect x="8.0988%" y="2421" width="0.6787%" height="15" fill="rgb(221,5,38)" fg:x="18635064" fg:w="1561766"/><text x="8.3488%" y="2431.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,561,766 samples, 0.68%)</title><rect x="8.0988%" y="2405" width="0.6787%" height="15" fill="rgb(247,18,42)" fg:x="18635064" fg:w="1561766"/><text x="8.3488%" y="2415.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1,561,766 samples, 0.68%)</title><rect x="8.0988%" y="2389" width="0.6787%" height="15" fill="rgb(241,131,45)" fg:x="18635064" fg:w="1561766"/><text x="8.3488%" y="2399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,561,766 samples, 0.68%)</title><rect x="8.0988%" y="2373" width="0.6787%" height="15" fill="rgb(249,31,29)" fg:x="18635064" fg:w="1561766"/><text x="8.3488%" y="2383.50"></text></g><g><title>alloc::alloc::dealloc (1,561,766 samples, 0.68%)</title><rect x="8.0988%" y="2357" width="0.6787%" height="15" fill="rgb(225,111,53)" fg:x="18635064" fg:w="1561766"/><text x="8.3488%" y="2367.50"></text></g><g><title>[unknown] (11,085,800 samples, 4.82%)</title><rect x="4.5068%" y="2517" width="4.8179%" height="15" fill="rgb(238,160,17)" fg:x="10370021" fg:w="11085800"/><text x="4.7568%" y="2527.50">[unkno..</text></g><g><title>malloc (1,258,991 samples, 0.55%)</title><rect x="8.7776%" y="2501" width="0.5472%" height="15" fill="rgb(214,148,48)" fg:x="20196830" fg:w="1258991"/><text x="9.0276%" y="2511.50"></text></g><g><title>__rdl_dealloc (1,402,674 samples, 0.61%)</title><rect x="9.3247%" y="2517" width="0.6096%" height="15" fill="rgb(232,36,49)" fg:x="21455821" fg:w="1402674"/><text x="9.5747%" y="2527.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,402,674 samples, 0.61%)</title><rect x="9.3247%" y="2501" width="0.6096%" height="15" fill="rgb(209,103,24)" fg:x="21455821" fg:w="1402674"/><text x="9.5747%" y="2511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,256,302 samples, 0.55%)</title><rect x="9.9344%" y="1941" width="0.5460%" height="15" fill="rgb(229,88,8)" fg:x="22858495" fg:w="1256302"/><text x="10.1844%" y="1951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,256,302 samples, 0.55%)</title><rect x="9.9344%" y="1925" width="0.5460%" height="15" fill="rgb(213,181,19)" fg:x="22858495" fg:w="1256302"/><text x="10.1844%" y="1935.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,256,302 samples, 0.55%)</title><rect x="9.9344%" y="1909" width="0.5460%" height="15" fill="rgb(254,191,54)" fg:x="22858495" fg:w="1256302"/><text x="10.1844%" y="1919.50"></text></g><g><title>alloc::slice::hack::to_vec (1,256,302 samples, 0.55%)</title><rect x="9.9344%" y="1893" width="0.5460%" height="15" fill="rgb(241,83,37)" fg:x="22858495" fg:w="1256302"/><text x="10.1844%" y="1903.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,256,302 samples, 0.55%)</title><rect x="9.9344%" y="1877" width="0.5460%" height="15" fill="rgb(233,36,39)" fg:x="22858495" fg:w="1256302"/><text x="10.1844%" y="1887.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,256,302 samples, 0.55%)</title><rect x="9.9344%" y="1861" width="0.5460%" height="15" fill="rgb(226,3,54)" fg:x="22858495" fg:w="1256302"/><text x="10.1844%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,256,302 samples, 0.55%)</title><rect x="9.9344%" y="1845" width="0.5460%" height="15" fill="rgb(245,192,40)" fg:x="22858495" fg:w="1256302"/><text x="10.1844%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,256,302 samples, 0.55%)</title><rect x="9.9344%" y="1829" width="0.5460%" height="15" fill="rgb(238,167,29)" fg:x="22858495" fg:w="1256302"/><text x="10.1844%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,256,302 samples, 0.55%)</title><rect x="9.9344%" y="1813" width="0.5460%" height="15" fill="rgb(232,182,51)" fg:x="22858495" fg:w="1256302"/><text x="10.1844%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,256,302 samples, 0.55%)</title><rect x="9.9344%" y="1797" width="0.5460%" height="15" fill="rgb(231,60,39)" fg:x="22858495" fg:w="1256302"/><text x="10.1844%" y="1807.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,256,302 samples, 0.55%)</title><rect x="9.9344%" y="1781" width="0.5460%" height="15" fill="rgb(208,69,12)" fg:x="22858495" fg:w="1256302"/><text x="10.1844%" y="1791.50"></text></g><g><title>alloc::alloc::alloc (1,256,302 samples, 0.55%)</title><rect x="9.9344%" y="1765" width="0.5460%" height="15" fill="rgb(235,93,37)" fg:x="22858495" fg:w="1256302"/><text x="10.1844%" y="1775.50"></text></g><g><title>malloc (1,256,302 samples, 0.55%)</title><rect x="9.9344%" y="1749" width="0.5460%" height="15" fill="rgb(213,116,39)" fg:x="22858495" fg:w="1256302"/><text x="10.1844%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,298,168 samples, 0.56%)</title><rect x="11.0142%" y="1493" width="0.5642%" height="15" fill="rgb(222,207,29)" fg:x="25343287" fg:w="1298168"/><text x="11.2642%" y="1503.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,298,168 samples, 0.56%)</title><rect x="11.0142%" y="1477" width="0.5642%" height="15" fill="rgb(206,96,30)" fg:x="25343287" fg:w="1298168"/><text x="11.2642%" y="1487.50"></text></g><g><title>alloc::slice::hack::to_vec (1,298,168 samples, 0.56%)</title><rect x="11.0142%" y="1461" width="0.5642%" height="15" fill="rgb(218,138,4)" fg:x="25343287" fg:w="1298168"/><text x="11.2642%" y="1471.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,298,168 samples, 0.56%)</title><rect x="11.0142%" y="1445" width="0.5642%" height="15" fill="rgb(250,191,14)" fg:x="25343287" fg:w="1298168"/><text x="11.2642%" y="1455.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,298,168 samples, 0.56%)</title><rect x="11.0142%" y="1429" width="0.5642%" height="15" fill="rgb(239,60,40)" fg:x="25343287" fg:w="1298168"/><text x="11.2642%" y="1439.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,298,168 samples, 0.56%)</title><rect x="11.0142%" y="1413" width="0.5642%" height="15" fill="rgb(206,27,48)" fg:x="25343287" fg:w="1298168"/><text x="11.2642%" y="1423.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,298,168 samples, 0.56%)</title><rect x="11.0142%" y="1397" width="0.5642%" height="15" fill="rgb(225,35,8)" fg:x="25343287" fg:w="1298168"/><text x="11.2642%" y="1407.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,298,168 samples, 0.56%)</title><rect x="11.0142%" y="1381" width="0.5642%" height="15" fill="rgb(250,213,24)" fg:x="25343287" fg:w="1298168"/><text x="11.2642%" y="1391.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,298,168 samples, 0.56%)</title><rect x="11.0142%" y="1365" width="0.5642%" height="15" fill="rgb(247,123,22)" fg:x="25343287" fg:w="1298168"/><text x="11.2642%" y="1375.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,298,168 samples, 0.56%)</title><rect x="11.0142%" y="1349" width="0.5642%" height="15" fill="rgb(231,138,38)" fg:x="25343287" fg:w="1298168"/><text x="11.2642%" y="1359.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,298,168 samples, 0.56%)</title><rect x="11.0142%" y="1333" width="0.5642%" height="15" fill="rgb(231,145,46)" fg:x="25343287" fg:w="1298168"/><text x="11.2642%" y="1343.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,298,168 samples, 0.56%)</title><rect x="11.0142%" y="1317" width="0.5642%" height="15" fill="rgb(251,118,11)" fg:x="25343287" fg:w="1298168"/><text x="11.2642%" y="1327.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (1,298,168 samples, 0.56%)</title><rect x="11.0142%" y="1301" width="0.5642%" height="15" fill="rgb(217,147,25)" fg:x="25343287" fg:w="1298168"/><text x="11.2642%" y="1311.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push_with_handle (1,298,168 samples, 0.56%)</title><rect x="11.0142%" y="1285" width="0.5642%" height="15" fill="rgb(247,81,37)" fg:x="25343287" fg:w="1298168"/><text x="11.2642%" y="1295.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,298,168 samples, 0.56%)</title><rect x="11.0142%" y="1269" width="0.5642%" height="15" fill="rgb(209,12,38)" fg:x="25343287" fg:w="1298168"/><text x="11.2642%" y="1279.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,851,083 samples, 1.24%)</title><rect x="11.0142%" y="1653" width="1.2391%" height="15" fill="rgb(227,1,9)" fg:x="25343287" fg:w="2851083"/><text x="11.2642%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,851,083 samples, 1.24%)</title><rect x="11.0142%" y="1637" width="1.2391%" height="15" fill="rgb(248,47,43)" fg:x="25343287" fg:w="2851083"/><text x="11.2642%" y="1647.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,851,083 samples, 1.24%)</title><rect x="11.0142%" y="1621" width="1.2391%" height="15" fill="rgb(221,10,30)" fg:x="25343287" fg:w="2851083"/><text x="11.2642%" y="1631.50"></text></g><g><title>alloc::slice::hack::to_vec (2,851,083 samples, 1.24%)</title><rect x="11.0142%" y="1605" width="1.2391%" height="15" fill="rgb(210,229,1)" fg:x="25343287" fg:w="2851083"/><text x="11.2642%" y="1615.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,851,083 samples, 1.24%)</title><rect x="11.0142%" y="1589" width="1.2391%" height="15" fill="rgb(222,148,37)" fg:x="25343287" fg:w="2851083"/><text x="11.2642%" y="1599.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,851,083 samples, 1.24%)</title><rect x="11.0142%" y="1573" width="1.2391%" height="15" fill="rgb(234,67,33)" fg:x="25343287" fg:w="2851083"/><text x="11.2642%" y="1583.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,851,083 samples, 1.24%)</title><rect x="11.0142%" y="1557" width="1.2391%" height="15" fill="rgb(247,98,35)" fg:x="25343287" fg:w="2851083"/><text x="11.2642%" y="1567.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,851,083 samples, 1.24%)</title><rect x="11.0142%" y="1541" width="1.2391%" height="15" fill="rgb(247,138,52)" fg:x="25343287" fg:w="2851083"/><text x="11.2642%" y="1551.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,851,083 samples, 1.24%)</title><rect x="11.0142%" y="1525" width="1.2391%" height="15" fill="rgb(213,79,30)" fg:x="25343287" fg:w="2851083"/><text x="11.2642%" y="1535.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,851,083 samples, 1.24%)</title><rect x="11.0142%" y="1509" width="1.2391%" height="15" fill="rgb(246,177,23)" fg:x="25343287" fg:w="2851083"/><text x="11.2642%" y="1519.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,552,915 samples, 0.67%)</title><rect x="11.5784%" y="1493" width="0.6749%" height="15" fill="rgb(230,62,27)" fg:x="26641455" fg:w="1552915"/><text x="11.8284%" y="1503.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,552,915 samples, 0.67%)</title><rect x="11.5784%" y="1477" width="0.6749%" height="15" fill="rgb(216,154,8)" fg:x="26641455" fg:w="1552915"/><text x="11.8284%" y="1487.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,552,915 samples, 0.67%)</title><rect x="11.5784%" y="1461" width="0.6749%" height="15" fill="rgb(244,35,45)" fg:x="26641455" fg:w="1552915"/><text x="11.8284%" y="1471.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1,552,915 samples, 0.67%)</title><rect x="11.5784%" y="1445" width="0.6749%" height="15" fill="rgb(251,115,12)" fg:x="26641455" fg:w="1552915"/><text x="11.8284%" y="1455.50"></text></g><g><title>&lt;benchmark::LayoutFrame as core::clone::Clone&gt;::clone (6,383,997 samples, 2.77%)</title><rect x="9.9344%" y="2229" width="2.7745%" height="15" fill="rgb(240,54,50)" fg:x="22858495" fg:w="6383997"/><text x="10.1844%" y="2239.50">&lt;b..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (6,383,997 samples, 2.77%)</title><rect x="9.9344%" y="2213" width="2.7745%" height="15" fill="rgb(233,84,52)" fg:x="22858495" fg:w="6383997"/><text x="10.1844%" y="2223.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (6,383,997 samples, 2.77%)</title><rect x="9.9344%" y="2197" width="2.7745%" height="15" fill="rgb(207,117,47)" fg:x="22858495" fg:w="6383997"/><text x="10.1844%" y="2207.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (6,383,997 samples, 2.77%)</title><rect x="9.9344%" y="2181" width="2.7745%" height="15" fill="rgb(249,43,39)" fg:x="22858495" fg:w="6383997"/><text x="10.1844%" y="2191.50">&lt;a..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6,383,997 samples, 2.77%)</title><rect x="9.9344%" y="2165" width="2.7745%" height="15" fill="rgb(209,38,44)" fg:x="22858495" fg:w="6383997"/><text x="10.1844%" y="2175.50">&lt;a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (6,383,997 samples, 2.77%)</title><rect x="9.9344%" y="2149" width="2.7745%" height="15" fill="rgb(236,212,23)" fg:x="22858495" fg:w="6383997"/><text x="10.1844%" y="2159.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (6,383,997 samples, 2.77%)</title><rect x="9.9344%" y="2133" width="2.7745%" height="15" fill="rgb(242,79,21)" fg:x="22858495" fg:w="6383997"/><text x="10.1844%" y="2143.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (6,383,997 samples, 2.77%)</title><rect x="9.9344%" y="2117" width="2.7745%" height="15" fill="rgb(211,96,35)" fg:x="22858495" fg:w="6383997"/><text x="10.1844%" y="2127.50">&lt;a..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6,383,997 samples, 2.77%)</title><rect x="9.9344%" y="2101" width="2.7745%" height="15" fill="rgb(253,215,40)" fg:x="22858495" fg:w="6383997"/><text x="10.1844%" y="2111.50">&lt;a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (6,383,997 samples, 2.77%)</title><rect x="9.9344%" y="2085" width="2.7745%" height="15" fill="rgb(211,81,21)" fg:x="22858495" fg:w="6383997"/><text x="10.1844%" y="2095.50">&lt;s..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,383,997 samples, 2.77%)</title><rect x="9.9344%" y="2069" width="2.7745%" height="15" fill="rgb(208,190,38)" fg:x="22858495" fg:w="6383997"/><text x="10.1844%" y="2079.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,383,997 samples, 2.77%)</title><rect x="9.9344%" y="2053" width="2.7745%" height="15" fill="rgb(235,213,38)" fg:x="22858495" fg:w="6383997"/><text x="10.1844%" y="2063.50">al..</text></g><g><title>alloc::slice::hack::to_vec (6,383,997 samples, 2.77%)</title><rect x="9.9344%" y="2037" width="2.7745%" height="15" fill="rgb(237,122,38)" fg:x="22858495" fg:w="6383997"/><text x="10.1844%" y="2047.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,383,997 samples, 2.77%)</title><rect x="9.9344%" y="2021" width="2.7745%" height="15" fill="rgb(244,218,35)" fg:x="22858495" fg:w="6383997"/><text x="10.1844%" y="2031.50">&lt;T..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (6,383,997 samples, 2.77%)</title><rect x="9.9344%" y="2005" width="2.7745%" height="15" fill="rgb(240,68,47)" fg:x="22858495" fg:w="6383997"/><text x="10.1844%" y="2015.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (6,383,997 samples, 2.77%)</title><rect x="9.9344%" y="1989" width="2.7745%" height="15" fill="rgb(210,16,53)" fg:x="22858495" fg:w="6383997"/><text x="10.1844%" y="1999.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (6,383,997 samples, 2.77%)</title><rect x="9.9344%" y="1973" width="2.7745%" height="15" fill="rgb(235,124,12)" fg:x="22858495" fg:w="6383997"/><text x="10.1844%" y="1983.50">&lt;a..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6,383,997 samples, 2.77%)</title><rect x="9.9344%" y="1957" width="2.7745%" height="15" fill="rgb(224,169,11)" fg:x="22858495" fg:w="6383997"/><text x="10.1844%" y="1967.50">&lt;a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,127,695 samples, 2.23%)</title><rect x="10.4803%" y="1941" width="2.2285%" height="15" fill="rgb(250,166,2)" fg:x="24114797" fg:w="5127695"/><text x="10.7303%" y="1951.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,127,695 samples, 2.23%)</title><rect x="10.4803%" y="1925" width="2.2285%" height="15" fill="rgb(242,216,29)" fg:x="24114797" fg:w="5127695"/><text x="10.7303%" y="1935.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,127,695 samples, 2.23%)</title><rect x="10.4803%" y="1909" width="2.2285%" height="15" fill="rgb(230,116,27)" fg:x="24114797" fg:w="5127695"/><text x="10.7303%" y="1919.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,127,695 samples, 2.23%)</title><rect x="10.4803%" y="1893" width="2.2285%" height="15" fill="rgb(228,99,48)" fg:x="24114797" fg:w="5127695"/><text x="10.7303%" y="1903.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,127,695 samples, 2.23%)</title><rect x="10.4803%" y="1877" width="2.2285%" height="15" fill="rgb(253,11,6)" fg:x="24114797" fg:w="5127695"/><text x="10.7303%" y="1887.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,127,695 samples, 2.23%)</title><rect x="10.4803%" y="1861" width="2.2285%" height="15" fill="rgb(247,143,39)" fg:x="24114797" fg:w="5127695"/><text x="10.7303%" y="1871.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,127,695 samples, 2.23%)</title><rect x="10.4803%" y="1845" width="2.2285%" height="15" fill="rgb(236,97,10)" fg:x="24114797" fg:w="5127695"/><text x="10.7303%" y="1855.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,127,695 samples, 2.23%)</title><rect x="10.4803%" y="1829" width="2.2285%" height="15" fill="rgb(233,208,19)" fg:x="24114797" fg:w="5127695"/><text x="10.7303%" y="1839.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,127,695 samples, 2.23%)</title><rect x="10.4803%" y="1813" width="2.2285%" height="15" fill="rgb(216,164,2)" fg:x="24114797" fg:w="5127695"/><text x="10.7303%" y="1823.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,127,695 samples, 2.23%)</title><rect x="10.4803%" y="1797" width="2.2285%" height="15" fill="rgb(220,129,5)" fg:x="24114797" fg:w="5127695"/><text x="10.7303%" y="1807.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,899,205 samples, 1.69%)</title><rect x="11.0142%" y="1781" width="1.6946%" height="15" fill="rgb(242,17,10)" fg:x="25343287" fg:w="3899205"/><text x="11.2642%" y="1791.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,899,205 samples, 1.69%)</title><rect x="11.0142%" y="1765" width="1.6946%" height="15" fill="rgb(242,107,0)" fg:x="25343287" fg:w="3899205"/><text x="11.2642%" y="1775.50"></text></g><g><title>alloc::slice::hack::to_vec (3,899,205 samples, 1.69%)</title><rect x="11.0142%" y="1749" width="1.6946%" height="15" fill="rgb(251,28,31)" fg:x="25343287" fg:w="3899205"/><text x="11.2642%" y="1759.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,899,205 samples, 1.69%)</title><rect x="11.0142%" y="1733" width="1.6946%" height="15" fill="rgb(233,223,10)" fg:x="25343287" fg:w="3899205"/><text x="11.2642%" y="1743.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,899,205 samples, 1.69%)</title><rect x="11.0142%" y="1717" width="1.6946%" height="15" fill="rgb(215,21,27)" fg:x="25343287" fg:w="3899205"/><text x="11.2642%" y="1727.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (3,899,205 samples, 1.69%)</title><rect x="11.0142%" y="1701" width="1.6946%" height="15" fill="rgb(232,23,21)" fg:x="25343287" fg:w="3899205"/><text x="11.2642%" y="1711.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (3,899,205 samples, 1.69%)</title><rect x="11.0142%" y="1685" width="1.6946%" height="15" fill="rgb(244,5,23)" fg:x="25343287" fg:w="3899205"/><text x="11.2642%" y="1695.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3,899,205 samples, 1.69%)</title><rect x="11.0142%" y="1669" width="1.6946%" height="15" fill="rgb(226,81,46)" fg:x="25343287" fg:w="3899205"/><text x="11.2642%" y="1679.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (1,048,122 samples, 0.46%)</title><rect x="12.2533%" y="1653" width="0.4555%" height="15" fill="rgb(247,70,30)" fg:x="28194370" fg:w="1048122"/><text x="12.5033%" y="1663.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push_with_handle (1,048,122 samples, 0.46%)</title><rect x="12.2533%" y="1637" width="0.4555%" height="15" fill="rgb(212,68,19)" fg:x="28194370" fg:w="1048122"/><text x="12.5033%" y="1647.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,048,122 samples, 0.46%)</title><rect x="12.2533%" y="1621" width="0.4555%" height="15" fill="rgb(240,187,13)" fg:x="28194370" fg:w="1048122"/><text x="12.5033%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="2229" width="0.6773%" height="15" fill="rgb(223,113,26)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="2213" width="0.6773%" height="15" fill="rgb(206,192,2)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="2197" width="0.6773%" height="15" fill="rgb(241,108,4)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="2181" width="0.6773%" height="15" fill="rgb(247,173,49)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="2165" width="0.6773%" height="15" fill="rgb(224,114,35)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="2149" width="0.6773%" height="15" fill="rgb(245,159,27)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="2159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="2133" width="0.6773%" height="15" fill="rgb(245,172,44)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="2143.50"></text></g><g><title>core::mem::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="2117" width="0.6773%" height="15" fill="rgb(236,23,11)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="2101" width="0.6773%" height="15" fill="rgb(205,117,38)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="2111.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="2085" width="0.6773%" height="15" fill="rgb(237,72,25)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="2095.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="2069" width="0.6773%" height="15" fill="rgb(244,70,9)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="2053" width="0.6773%" height="15" fill="rgb(217,125,39)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="2063.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="2037" width="0.6773%" height="15" fill="rgb(235,36,10)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="2047.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="2021" width="0.6773%" height="15" fill="rgb(251,123,47)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="2005" width="0.6773%" height="15" fill="rgb(221,13,13)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1989" width="0.6773%" height="15" fill="rgb(238,131,9)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1973" width="0.6773%" height="15" fill="rgb(211,50,8)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1983.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1957" width="0.6773%" height="15" fill="rgb(245,182,24)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1967.50"></text></g><g><title>core::mem::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1941" width="0.6773%" height="15" fill="rgb(242,14,37)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1925" width="0.6773%" height="15" fill="rgb(246,228,12)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1935.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1909" width="0.6773%" height="15" fill="rgb(213,55,15)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1919.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1893" width="0.6773%" height="15" fill="rgb(209,9,3)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1877" width="0.6773%" height="15" fill="rgb(230,59,30)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1887.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1861" width="0.6773%" height="15" fill="rgb(209,121,21)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1871.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1845" width="0.6773%" height="15" fill="rgb(220,109,13)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1829" width="0.6773%" height="15" fill="rgb(232,18,1)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1813" width="0.6773%" height="15" fill="rgb(215,41,42)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1797" width="0.6773%" height="15" fill="rgb(224,123,36)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1781" width="0.6773%" height="15" fill="rgb(240,125,3)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1765" width="0.6773%" height="15" fill="rgb(205,98,50)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1749" width="0.6773%" height="15" fill="rgb(205,185,37)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1733" width="0.6773%" height="15" fill="rgb(238,207,15)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1743.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1717" width="0.6773%" height="15" fill="rgb(213,199,42)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1727.50"></text></g><g><title>core::mem::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1701" width="0.6773%" height="15" fill="rgb(235,201,11)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1685" width="0.6773%" height="15" fill="rgb(207,46,11)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1695.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1669" width="0.6773%" height="15" fill="rgb(241,35,35)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1679.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1653" width="0.6773%" height="15" fill="rgb(243,32,47)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1637" width="0.6773%" height="15" fill="rgb(247,202,23)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1647.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1621" width="0.6773%" height="15" fill="rgb(219,102,11)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1631.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1605" width="0.6773%" height="15" fill="rgb(243,110,44)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1589" width="0.6773%" height="15" fill="rgb(222,74,54)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1573" width="0.6773%" height="15" fill="rgb(216,99,12)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1557" width="0.6773%" height="15" fill="rgb(226,22,26)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1541" width="0.6773%" height="15" fill="rgb(217,163,10)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1525" width="0.6773%" height="15" fill="rgb(213,25,53)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1509" width="0.6773%" height="15" fill="rgb(252,105,26)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1493" width="0.6773%" height="15" fill="rgb(220,39,43)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1503.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1477" width="0.6773%" height="15" fill="rgb(229,68,48)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1487.50"></text></g><g><title>core::mem::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1461" width="0.6773%" height="15" fill="rgb(252,8,32)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1445" width="0.6773%" height="15" fill="rgb(223,20,43)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1455.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1429" width="0.6773%" height="15" fill="rgb(229,81,49)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1439.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1413" width="0.6773%" height="15" fill="rgb(236,28,36)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1397" width="0.6773%" height="15" fill="rgb(249,185,26)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1407.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1381" width="0.6773%" height="15" fill="rgb(249,174,33)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1391.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1365" width="0.6773%" height="15" fill="rgb(233,201,37)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1349" width="0.6773%" height="15" fill="rgb(221,78,26)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1333" width="0.6773%" height="15" fill="rgb(250,127,30)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1317" width="0.6773%" height="15" fill="rgb(230,49,44)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1301" width="0.6773%" height="15" fill="rgb(229,67,23)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1285" width="0.6773%" height="15" fill="rgb(249,83,47)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1269" width="0.6773%" height="15" fill="rgb(215,43,3)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1253" width="0.6773%" height="15" fill="rgb(238,154,13)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1263.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1237" width="0.6773%" height="15" fill="rgb(219,56,2)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1247.50"></text></g><g><title>core::mem::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1221" width="0.6773%" height="15" fill="rgb(233,0,4)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1205" width="0.6773%" height="15" fill="rgb(235,30,7)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1215.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1189" width="0.6773%" height="15" fill="rgb(250,79,13)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1199.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1173" width="0.6773%" height="15" fill="rgb(211,146,34)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1157" width="0.6773%" height="15" fill="rgb(228,22,38)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1141" width="0.6773%" height="15" fill="rgb(235,168,5)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1151.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1125" width="0.6773%" height="15" fill="rgb(221,155,16)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1109" width="0.6773%" height="15" fill="rgb(215,215,53)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1093" width="0.6773%" height="15" fill="rgb(223,4,10)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1077" width="0.6773%" height="15" fill="rgb(234,103,6)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1061" width="0.6773%" height="15" fill="rgb(227,97,0)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1045" width="0.6773%" height="15" fill="rgb(234,150,53)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1029" width="0.6773%" height="15" fill="rgb(228,201,54)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="1013" width="0.6773%" height="15" fill="rgb(222,22,37)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1023.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="997" width="0.6773%" height="15" fill="rgb(237,53,32)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="1007.50"></text></g><g><title>core::mem::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="981" width="0.6773%" height="15" fill="rgb(233,25,53)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="965" width="0.6773%" height="15" fill="rgb(210,40,34)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="949" width="0.6773%" height="15" fill="rgb(241,220,44)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="959.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="933" width="0.6773%" height="15" fill="rgb(235,28,35)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="917" width="0.6773%" height="15" fill="rgb(210,56,17)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="901" width="0.6773%" height="15" fill="rgb(224,130,29)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="911.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="885" width="0.6773%" height="15" fill="rgb(235,212,8)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="869" width="0.6773%" height="15" fill="rgb(223,33,50)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="853" width="0.6773%" height="15" fill="rgb(219,149,13)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="837" width="0.6773%" height="15" fill="rgb(250,156,29)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="821" width="0.6773%" height="15" fill="rgb(216,193,19)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="805" width="0.6773%" height="15" fill="rgb(216,135,14)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="789" width="0.6773%" height="15" fill="rgb(241,47,5)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="773" width="0.6773%" height="15" fill="rgb(233,42,35)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="757" width="0.6773%" height="15" fill="rgb(231,13,6)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="767.50"></text></g><g><title>core::mem::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="741" width="0.6773%" height="15" fill="rgb(207,181,40)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="725" width="0.6773%" height="15" fill="rgb(254,173,49)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="709" width="0.6773%" height="15" fill="rgb(221,1,38)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,558,524 samples, 0.68%)</title><rect x="12.7089%" y="693" width="0.6773%" height="15" fill="rgb(206,124,46)" fg:x="29242492" fg:w="1558524"/><text x="12.9589%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,267,727 samples, 0.55%)</title><rect x="13.3862%" y="2229" width="0.5510%" height="15" fill="rgb(249,21,11)" fg:x="30801016" fg:w="1267727"/><text x="13.6362%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,267,727 samples, 0.55%)</title><rect x="13.3862%" y="2213" width="0.5510%" height="15" fill="rgb(222,201,40)" fg:x="30801016" fg:w="1267727"/><text x="13.6362%" y="2223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,267,727 samples, 0.55%)</title><rect x="13.3862%" y="2197" width="0.5510%" height="15" fill="rgb(235,61,29)" fg:x="30801016" fg:w="1267727"/><text x="13.6362%" y="2207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,267,727 samples, 0.55%)</title><rect x="13.3862%" y="2181" width="0.5510%" height="15" fill="rgb(219,207,3)" fg:x="30801016" fg:w="1267727"/><text x="13.6362%" y="2191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,267,727 samples, 0.55%)</title><rect x="13.3862%" y="2165" width="0.5510%" height="15" fill="rgb(222,56,46)" fg:x="30801016" fg:w="1267727"/><text x="13.6362%" y="2175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,267,727 samples, 0.55%)</title><rect x="13.3862%" y="2149" width="0.5510%" height="15" fill="rgb(239,76,54)" fg:x="30801016" fg:w="1267727"/><text x="13.6362%" y="2159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,267,727 samples, 0.55%)</title><rect x="13.3862%" y="2133" width="0.5510%" height="15" fill="rgb(231,124,27)" fg:x="30801016" fg:w="1267727"/><text x="13.6362%" y="2143.50"></text></g><g><title>alloc::alloc::realloc (1,267,727 samples, 0.55%)</title><rect x="13.3862%" y="2117" width="0.5510%" height="15" fill="rgb(249,195,6)" fg:x="30801016" fg:w="1267727"/><text x="13.6362%" y="2127.50"></text></g><g><title>realloc (1,267,727 samples, 0.55%)</title><rect x="13.3862%" y="2101" width="0.5510%" height="15" fill="rgb(237,174,47)" fg:x="30801016" fg:w="1267727"/><text x="13.6362%" y="2111.50"></text></g><g><title>[libc.so.6] (1,267,727 samples, 0.55%)</title><rect x="13.3862%" y="2085" width="0.5510%" height="15" fill="rgb(206,201,31)" fg:x="30801016" fg:w="1267727"/><text x="13.6362%" y="2095.50"></text></g><g><title>[libc.so.6] (1,267,727 samples, 0.55%)</title><rect x="13.3862%" y="2069" width="0.5510%" height="15" fill="rgb(231,57,52)" fg:x="30801016" fg:w="1267727"/><text x="13.6362%" y="2079.50"></text></g><g><title>[libc.so.6] (1,267,727 samples, 0.55%)</title><rect x="13.3862%" y="2053" width="0.5510%" height="15" fill="rgb(248,177,22)" fg:x="30801016" fg:w="1267727"/><text x="13.6362%" y="2063.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8,636,859 samples, 3.75%)</title><rect x="13.9371%" y="2197" width="3.7536%" height="15" fill="rgb(215,211,37)" fg:x="32068743" fg:w="8636859"/><text x="14.1871%" y="2207.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8,636,859 samples, 3.75%)</title><rect x="13.9371%" y="2181" width="3.7536%" height="15" fill="rgb(241,128,51)" fg:x="32068743" fg:w="8636859"/><text x="14.1871%" y="2191.50">allo..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (8,636,859 samples, 3.75%)</title><rect x="13.9371%" y="2165" width="3.7536%" height="15" fill="rgb(227,165,31)" fg:x="32068743" fg:w="8636859"/><text x="14.1871%" y="2175.50">allo..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (8,636,859 samples, 3.75%)</title><rect x="13.9371%" y="2149" width="3.7536%" height="15" fill="rgb(228,167,24)" fg:x="32068743" fg:w="8636859"/><text x="14.1871%" y="2159.50">allo..</text></g><g><title>alloc::raw_vec::finish_grow (8,636,859 samples, 3.75%)</title><rect x="13.9371%" y="2133" width="3.7536%" height="15" fill="rgb(228,143,12)" fg:x="32068743" fg:w="8636859"/><text x="14.1871%" y="2143.50">allo..</text></g><g><title>malloc (8,636,859 samples, 3.75%)</title><rect x="13.9371%" y="2117" width="3.7536%" height="15" fill="rgb(249,149,8)" fg:x="32068743" fg:w="8636859"/><text x="14.1871%" y="2127.50">mall..</text></g><g><title>[libc.so.6] (8,636,859 samples, 3.75%)</title><rect x="13.9371%" y="2101" width="3.7536%" height="15" fill="rgb(243,35,44)" fg:x="32068743" fg:w="8636859"/><text x="14.1871%" y="2111.50">[lib..</text></g><g><title>[libc.so.6] (8,636,859 samples, 3.75%)</title><rect x="13.9371%" y="2085" width="3.7536%" height="15" fill="rgb(246,89,9)" fg:x="32068743" fg:w="8636859"/><text x="14.1871%" y="2095.50">[lib..</text></g><g><title>[libc.so.6] (3,077,493 samples, 1.34%)</title><rect x="16.3533%" y="2069" width="1.3375%" height="15" fill="rgb(233,213,13)" fg:x="37628109" fg:w="3077493"/><text x="16.6033%" y="2079.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,457,819 samples, 1.07%)</title><rect x="17.6907%" y="2181" width="1.0682%" height="15" fill="rgb(233,141,41)" fg:x="40705602" fg:w="2457819"/><text x="17.9407%" y="2191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,457,819 samples, 1.07%)</title><rect x="17.6907%" y="2165" width="1.0682%" height="15" fill="rgb(239,167,4)" fg:x="40705602" fg:w="2457819"/><text x="17.9407%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,457,819 samples, 1.07%)</title><rect x="17.6907%" y="2149" width="1.0682%" height="15" fill="rgb(209,217,16)" fg:x="40705602" fg:w="2457819"/><text x="17.9407%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,457,819 samples, 1.07%)</title><rect x="17.6907%" y="2133" width="1.0682%" height="15" fill="rgb(219,88,35)" fg:x="40705602" fg:w="2457819"/><text x="17.9407%" y="2143.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,457,819 samples, 1.07%)</title><rect x="17.6907%" y="2117" width="1.0682%" height="15" fill="rgb(220,193,23)" fg:x="40705602" fg:w="2457819"/><text x="17.9407%" y="2127.50"></text></g><g><title>malloc (2,457,819 samples, 1.07%)</title><rect x="17.6907%" y="2101" width="1.0682%" height="15" fill="rgb(230,90,52)" fg:x="40705602" fg:w="2457819"/><text x="17.9407%" y="2111.50"></text></g><g><title>[libc.so.6] (2,457,819 samples, 1.07%)</title><rect x="17.6907%" y="2085" width="1.0682%" height="15" fill="rgb(252,106,19)" fg:x="40705602" fg:w="2457819"/><text x="17.9407%" y="2095.50"></text></g><g><title>[libc.so.6] (2,457,819 samples, 1.07%)</title><rect x="17.6907%" y="2069" width="1.0682%" height="15" fill="rgb(206,74,20)" fg:x="40705602" fg:w="2457819"/><text x="17.9407%" y="2079.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,348,974 samples, 0.59%)</title><rect x="18.7589%" y="2165" width="0.5863%" height="15" fill="rgb(230,138,44)" fg:x="43163421" fg:w="1348974"/><text x="19.0089%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,348,974 samples, 0.59%)</title><rect x="18.7589%" y="2149" width="0.5863%" height="15" fill="rgb(235,182,43)" fg:x="43163421" fg:w="1348974"/><text x="19.0089%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,348,974 samples, 0.59%)</title><rect x="18.7589%" y="2133" width="0.5863%" height="15" fill="rgb(242,16,51)" fg:x="43163421" fg:w="1348974"/><text x="19.0089%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,348,974 samples, 0.59%)</title><rect x="18.7589%" y="2117" width="0.5863%" height="15" fill="rgb(248,9,4)" fg:x="43163421" fg:w="1348974"/><text x="19.0089%" y="2127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,348,974 samples, 0.59%)</title><rect x="18.7589%" y="2101" width="0.5863%" height="15" fill="rgb(210,31,22)" fg:x="43163421" fg:w="1348974"/><text x="19.0089%" y="2111.50"></text></g><g><title>malloc (1,348,974 samples, 0.59%)</title><rect x="18.7589%" y="2085" width="0.5863%" height="15" fill="rgb(239,54,39)" fg:x="43163421" fg:w="1348974"/><text x="19.0089%" y="2095.50"></text></g><g><title>[libc.so.6] (1,348,974 samples, 0.59%)</title><rect x="18.7589%" y="2069" width="0.5863%" height="15" fill="rgb(230,99,41)" fg:x="43163421" fg:w="1348974"/><text x="19.0089%" y="2079.50"></text></g><g><title>[libc.so.6] (1,348,974 samples, 0.59%)</title><rect x="18.7589%" y="2053" width="0.5863%" height="15" fill="rgb(253,106,12)" fg:x="43163421" fg:w="1348974"/><text x="19.0089%" y="2063.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,258,670 samples, 0.55%)</title><rect x="19.3452%" y="2133" width="0.5470%" height="15" fill="rgb(213,46,41)" fg:x="44512395" fg:w="1258670"/><text x="19.5952%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,258,670 samples, 0.55%)</title><rect x="19.3452%" y="2117" width="0.5470%" height="15" fill="rgb(215,133,35)" fg:x="44512395" fg:w="1258670"/><text x="19.5952%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,258,670 samples, 0.55%)</title><rect x="19.3452%" y="2101" width="0.5470%" height="15" fill="rgb(213,28,5)" fg:x="44512395" fg:w="1258670"/><text x="19.5952%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,258,670 samples, 0.55%)</title><rect x="19.3452%" y="2085" width="0.5470%" height="15" fill="rgb(215,77,49)" fg:x="44512395" fg:w="1258670"/><text x="19.5952%" y="2095.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,258,670 samples, 0.55%)</title><rect x="19.3452%" y="2069" width="0.5470%" height="15" fill="rgb(248,100,22)" fg:x="44512395" fg:w="1258670"/><text x="19.5952%" y="2079.50"></text></g><g><title>malloc (1,258,670 samples, 0.55%)</title><rect x="19.3452%" y="2053" width="0.5470%" height="15" fill="rgb(208,67,9)" fg:x="44512395" fg:w="1258670"/><text x="19.5952%" y="2063.50"></text></g><g><title>[libc.so.6] (1,258,670 samples, 0.55%)</title><rect x="19.3452%" y="2037" width="0.5470%" height="15" fill="rgb(219,133,21)" fg:x="44512395" fg:w="1258670"/><text x="19.5952%" y="2047.50"></text></g><g><title>[libc.so.6] (1,258,670 samples, 0.55%)</title><rect x="19.3452%" y="2021" width="0.5470%" height="15" fill="rgb(246,46,29)" fg:x="44512395" fg:w="1258670"/><text x="19.5952%" y="2031.50"></text></g><g><title>[libc.so.6] (1,258,670 samples, 0.55%)</title><rect x="19.3452%" y="2005" width="0.5470%" height="15" fill="rgb(246,185,52)" fg:x="44512395" fg:w="1258670"/><text x="19.5952%" y="2015.50"></text></g><g><title>benchmark::json_to_html_node (2,279,719 samples, 0.99%)</title><rect x="19.3452%" y="2165" width="0.9908%" height="15" fill="rgb(252,136,11)" fg:x="44512395" fg:w="2279719"/><text x="19.5952%" y="2175.50"></text></g><g><title>benchmark::json_to_html_node (2,279,719 samples, 0.99%)</title><rect x="19.3452%" y="2149" width="0.9908%" height="15" fill="rgb(219,138,53)" fg:x="44512395" fg:w="2279719"/><text x="19.5952%" y="2159.50"></text></g><g><title>benchmark::json_to_html_node (1,021,049 samples, 0.44%)</title><rect x="19.8922%" y="2133" width="0.4438%" height="15" fill="rgb(211,51,23)" fg:x="45771065" fg:w="1021049"/><text x="20.1422%" y="2143.50"></text></g><g><title>serde_json::value::Value::get (1,021,049 samples, 0.44%)</title><rect x="19.8922%" y="2117" width="0.4438%" height="15" fill="rgb(247,221,28)" fg:x="45771065" fg:w="1021049"/><text x="20.1422%" y="2127.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,021,049 samples, 0.44%)</title><rect x="19.8922%" y="2101" width="0.4438%" height="15" fill="rgb(251,222,45)" fg:x="45771065" fg:w="1021049"/><text x="20.1422%" y="2111.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,021,049 samples, 0.44%)</title><rect x="19.8922%" y="2085" width="0.4438%" height="15" fill="rgb(217,162,53)" fg:x="45771065" fg:w="1021049"/><text x="20.1422%" y="2095.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,021,049 samples, 0.44%)</title><rect x="19.8922%" y="2069" width="0.4438%" height="15" fill="rgb(229,93,14)" fg:x="45771065" fg:w="1021049"/><text x="20.1422%" y="2079.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,021,049 samples, 0.44%)</title><rect x="19.8922%" y="2053" width="0.4438%" height="15" fill="rgb(209,67,49)" fg:x="45771065" fg:w="1021049"/><text x="20.1422%" y="2063.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,021,049 samples, 0.44%)</title><rect x="19.8922%" y="2037" width="0.4438%" height="15" fill="rgb(213,87,29)" fg:x="45771065" fg:w="1021049"/><text x="20.1422%" y="2047.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,021,049 samples, 0.44%)</title><rect x="19.8922%" y="2021" width="0.4438%" height="15" fill="rgb(205,151,52)" fg:x="45771065" fg:w="1021049"/><text x="20.1422%" y="2031.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,021,049 samples, 0.44%)</title><rect x="19.8922%" y="2005" width="0.4438%" height="15" fill="rgb(253,215,39)" fg:x="45771065" fg:w="1021049"/><text x="20.1422%" y="2015.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,021,049 samples, 0.44%)</title><rect x="19.8922%" y="1989" width="0.4438%" height="15" fill="rgb(221,220,41)" fg:x="45771065" fg:w="1021049"/><text x="20.1422%" y="1999.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,021,049 samples, 0.44%)</title><rect x="19.8922%" y="1973" width="0.4438%" height="15" fill="rgb(218,133,21)" fg:x="45771065" fg:w="1021049"/><text x="20.1422%" y="1983.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,021,049 samples, 0.44%)</title><rect x="19.8922%" y="1957" width="0.4438%" height="15" fill="rgb(221,193,43)" fg:x="45771065" fg:w="1021049"/><text x="20.1422%" y="1967.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::new (1,345,098 samples, 0.58%)</title><rect x="20.3360%" y="2165" width="0.5846%" height="15" fill="rgb(240,128,52)" fg:x="46792114" fg:w="1345098"/><text x="20.5860%" y="2175.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1,345,098 samples, 0.58%)</title><rect x="20.3360%" y="2149" width="0.5846%" height="15" fill="rgb(253,114,12)" fg:x="46792114" fg:w="1345098"/><text x="20.5860%" y="2159.50"></text></g><g><title>alloc::str::convert_while_ascii (1,345,098 samples, 0.58%)</title><rect x="20.3360%" y="2133" width="0.5846%" height="15" fill="rgb(215,223,47)" fg:x="46792114" fg:w="1345098"/><text x="20.5860%" y="2143.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,345,098 samples, 0.58%)</title><rect x="20.3360%" y="2117" width="0.5846%" height="15" fill="rgb(248,225,23)" fg:x="46792114" fg:w="1345098"/><text x="20.5860%" y="2127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,345,098 samples, 0.58%)</title><rect x="20.3360%" y="2101" width="0.5846%" height="15" fill="rgb(250,108,0)" fg:x="46792114" fg:w="1345098"/><text x="20.5860%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,345,098 samples, 0.58%)</title><rect x="20.3360%" y="2085" width="0.5846%" height="15" fill="rgb(228,208,7)" fg:x="46792114" fg:w="1345098"/><text x="20.5860%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,345,098 samples, 0.58%)</title><rect x="20.3360%" y="2069" width="0.5846%" height="15" fill="rgb(244,45,10)" fg:x="46792114" fg:w="1345098"/><text x="20.5860%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,345,098 samples, 0.58%)</title><rect x="20.3360%" y="2053" width="0.5846%" height="15" fill="rgb(207,125,25)" fg:x="46792114" fg:w="1345098"/><text x="20.5860%" y="2063.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,345,098 samples, 0.58%)</title><rect x="20.3360%" y="2037" width="0.5846%" height="15" fill="rgb(210,195,18)" fg:x="46792114" fg:w="1345098"/><text x="20.5860%" y="2047.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,345,098 samples, 0.58%)</title><rect x="20.3360%" y="2021" width="0.5846%" height="15" fill="rgb(249,80,12)" fg:x="46792114" fg:w="1345098"/><text x="20.5860%" y="2031.50"></text></g><g><title>alloc::alloc::alloc (1,345,098 samples, 0.58%)</title><rect x="20.3360%" y="2005" width="0.5846%" height="15" fill="rgb(221,65,9)" fg:x="46792114" fg:w="1345098"/><text x="20.5860%" y="2015.50"></text></g><g><title>malloc (1,345,098 samples, 0.58%)</title><rect x="20.3360%" y="1989" width="0.5846%" height="15" fill="rgb(235,49,36)" fg:x="46792114" fg:w="1345098"/><text x="20.5860%" y="1999.50"></text></g><g><title>benchmark::apply_frame_modifications (17,036,826 samples, 7.40%)</title><rect x="13.9371%" y="2229" width="7.4042%" height="15" fill="rgb(225,32,20)" fg:x="32068743" fg:w="17036826"/><text x="14.1871%" y="2239.50">benchmark:..</text></g><g><title>benchmark::json_to_html_node (17,036,826 samples, 7.40%)</title><rect x="13.9371%" y="2213" width="7.4042%" height="15" fill="rgb(215,141,46)" fg:x="32068743" fg:w="17036826"/><text x="14.1871%" y="2223.50">benchmark:..</text></g><g><title>benchmark::json_to_html_node (8,399,967 samples, 3.65%)</title><rect x="17.6907%" y="2197" width="3.6506%" height="15" fill="rgb(250,160,47)" fg:x="40705602" fg:w="8399967"/><text x="17.9407%" y="2207.50">benc..</text></g><g><title>benchmark::json_to_html_node (5,942,148 samples, 2.58%)</title><rect x="18.7589%" y="2181" width="2.5825%" height="15" fill="rgb(216,222,40)" fg:x="43163421" fg:w="5942148"/><text x="19.0089%" y="2191.50">be..</text></g><g><title>serde_json::value::Value::get (968,357 samples, 0.42%)</title><rect x="20.9205%" y="2165" width="0.4209%" height="15" fill="rgb(234,217,39)" fg:x="48137212" fg:w="968357"/><text x="21.1705%" y="2175.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (968,357 samples, 0.42%)</title><rect x="20.9205%" y="2149" width="0.4209%" height="15" fill="rgb(207,178,40)" fg:x="48137212" fg:w="968357"/><text x="21.1705%" y="2159.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (968,357 samples, 0.42%)</title><rect x="20.9205%" y="2133" width="0.4209%" height="15" fill="rgb(221,136,13)" fg:x="48137212" fg:w="968357"/><text x="21.1705%" y="2143.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (968,357 samples, 0.42%)</title><rect x="20.9205%" y="2117" width="0.4209%" height="15" fill="rgb(249,199,10)" fg:x="48137212" fg:w="968357"/><text x="21.1705%" y="2127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (968,357 samples, 0.42%)</title><rect x="20.9205%" y="2101" width="0.4209%" height="15" fill="rgb(249,222,13)" fg:x="48137212" fg:w="968357"/><text x="21.1705%" y="2111.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (968,357 samples, 0.42%)</title><rect x="20.9205%" y="2085" width="0.4209%" height="15" fill="rgb(244,185,38)" fg:x="48137212" fg:w="968357"/><text x="21.1705%" y="2095.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (968,357 samples, 0.42%)</title><rect x="20.9205%" y="2069" width="0.4209%" height="15" fill="rgb(236,202,9)" fg:x="48137212" fg:w="968357"/><text x="21.1705%" y="2079.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (968,357 samples, 0.42%)</title><rect x="20.9205%" y="2053" width="0.4209%" height="15" fill="rgb(250,229,37)" fg:x="48137212" fg:w="968357"/><text x="21.1705%" y="2063.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,390,471 samples, 0.60%)</title><rect x="21.3414%" y="1877" width="0.6043%" height="15" fill="rgb(206,174,23)" fg:x="49105569" fg:w="1390471"/><text x="21.5914%" y="1887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,390,471 samples, 0.60%)</title><rect x="21.3414%" y="1861" width="0.6043%" height="15" fill="rgb(211,33,43)" fg:x="49105569" fg:w="1390471"/><text x="21.5914%" y="1871.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,390,471 samples, 0.60%)</title><rect x="21.3414%" y="1845" width="0.6043%" height="15" fill="rgb(245,58,50)" fg:x="49105569" fg:w="1390471"/><text x="21.5914%" y="1855.50"></text></g><g><title>alloc::slice::hack::to_vec (1,390,471 samples, 0.60%)</title><rect x="21.3414%" y="1829" width="0.6043%" height="15" fill="rgb(244,68,36)" fg:x="49105569" fg:w="1390471"/><text x="21.5914%" y="1839.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,390,471 samples, 0.60%)</title><rect x="21.3414%" y="1813" width="0.6043%" height="15" fill="rgb(232,229,15)" fg:x="49105569" fg:w="1390471"/><text x="21.5914%" y="1823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,390,471 samples, 0.60%)</title><rect x="21.3414%" y="1797" width="0.6043%" height="15" fill="rgb(254,30,23)" fg:x="49105569" fg:w="1390471"/><text x="21.5914%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,390,471 samples, 0.60%)</title><rect x="21.3414%" y="1781" width="0.6043%" height="15" fill="rgb(235,160,14)" fg:x="49105569" fg:w="1390471"/><text x="21.5914%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,390,471 samples, 0.60%)</title><rect x="21.3414%" y="1765" width="0.6043%" height="15" fill="rgb(212,155,44)" fg:x="49105569" fg:w="1390471"/><text x="21.5914%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,390,471 samples, 0.60%)</title><rect x="21.3414%" y="1749" width="0.6043%" height="15" fill="rgb(226,2,50)" fg:x="49105569" fg:w="1390471"/><text x="21.5914%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,390,471 samples, 0.60%)</title><rect x="21.3414%" y="1733" width="0.6043%" height="15" fill="rgb(234,177,6)" fg:x="49105569" fg:w="1390471"/><text x="21.5914%" y="1743.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,390,471 samples, 0.60%)</title><rect x="21.3414%" y="1717" width="0.6043%" height="15" fill="rgb(217,24,9)" fg:x="49105569" fg:w="1390471"/><text x="21.5914%" y="1727.50"></text></g><g><title>alloc::alloc::alloc (1,390,471 samples, 0.60%)</title><rect x="21.3414%" y="1701" width="0.6043%" height="15" fill="rgb(220,13,46)" fg:x="49105569" fg:w="1390471"/><text x="21.5914%" y="1711.50"></text></g><g><title>malloc (1,390,471 samples, 0.60%)</title><rect x="21.3414%" y="1685" width="0.6043%" height="15" fill="rgb(239,221,27)" fg:x="49105569" fg:w="1390471"/><text x="21.5914%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,546,708 samples, 0.67%)</title><rect x="21.9457%" y="1717" width="0.6722%" height="15" fill="rgb(222,198,25)" fg:x="50496040" fg:w="1546708"/><text x="22.1957%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,546,708 samples, 0.67%)</title><rect x="21.9457%" y="1701" width="0.6722%" height="15" fill="rgb(211,99,13)" fg:x="50496040" fg:w="1546708"/><text x="22.1957%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,546,708 samples, 0.67%)</title><rect x="21.9457%" y="1685" width="0.6722%" height="15" fill="rgb(232,111,31)" fg:x="50496040" fg:w="1546708"/><text x="22.1957%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,546,708 samples, 0.67%)</title><rect x="21.9457%" y="1669" width="0.6722%" height="15" fill="rgb(245,82,37)" fg:x="50496040" fg:w="1546708"/><text x="22.1957%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,546,708 samples, 0.67%)</title><rect x="21.9457%" y="1653" width="0.6722%" height="15" fill="rgb(227,149,46)" fg:x="50496040" fg:w="1546708"/><text x="22.1957%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,546,708 samples, 0.67%)</title><rect x="21.9457%" y="1637" width="0.6722%" height="15" fill="rgb(218,36,50)" fg:x="50496040" fg:w="1546708"/><text x="22.1957%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (1,546,708 samples, 0.67%)</title><rect x="21.9457%" y="1621" width="0.6722%" height="15" fill="rgb(226,80,48)" fg:x="50496040" fg:w="1546708"/><text x="22.1957%" y="1631.50"></text></g><g><title>malloc (1,546,708 samples, 0.67%)</title><rect x="21.9457%" y="1605" width="0.6722%" height="15" fill="rgb(238,224,15)" fg:x="50496040" fg:w="1546708"/><text x="22.1957%" y="1615.50"></text></g><g><title>[libc.so.6] (1,546,708 samples, 0.67%)</title><rect x="21.9457%" y="1589" width="0.6722%" height="15" fill="rgb(241,136,10)" fg:x="50496040" fg:w="1546708"/><text x="22.1957%" y="1599.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,088,135 samples, 1.34%)</title><rect x="21.9457%" y="1797" width="1.3421%" height="15" fill="rgb(208,32,45)" fg:x="50496040" fg:w="3088135"/><text x="22.1957%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,088,135 samples, 1.34%)</title><rect x="21.9457%" y="1781" width="1.3421%" height="15" fill="rgb(207,135,9)" fg:x="50496040" fg:w="3088135"/><text x="22.1957%" y="1791.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,088,135 samples, 1.34%)</title><rect x="21.9457%" y="1765" width="1.3421%" height="15" fill="rgb(206,86,44)" fg:x="50496040" fg:w="3088135"/><text x="22.1957%" y="1775.50"></text></g><g><title>alloc::slice::hack::to_vec (3,088,135 samples, 1.34%)</title><rect x="21.9457%" y="1749" width="1.3421%" height="15" fill="rgb(245,177,15)" fg:x="50496040" fg:w="3088135"/><text x="22.1957%" y="1759.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,088,135 samples, 1.34%)</title><rect x="21.9457%" y="1733" width="1.3421%" height="15" fill="rgb(206,64,50)" fg:x="50496040" fg:w="3088135"/><text x="22.1957%" y="1743.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,541,427 samples, 0.67%)</title><rect x="22.6179%" y="1717" width="0.6699%" height="15" fill="rgb(234,36,40)" fg:x="52042748" fg:w="1541427"/><text x="22.8679%" y="1727.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,541,427 samples, 0.67%)</title><rect x="22.6179%" y="1701" width="0.6699%" height="15" fill="rgb(213,64,8)" fg:x="52042748" fg:w="1541427"/><text x="22.8679%" y="1711.50"></text></g><g><title>[libc.so.6] (1,541,427 samples, 0.67%)</title><rect x="22.6179%" y="1685" width="0.6699%" height="15" fill="rgb(210,75,36)" fg:x="52042748" fg:w="1541427"/><text x="22.8679%" y="1695.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,978,750 samples, 1.29%)</title><rect x="23.9233%" y="1717" width="1.2946%" height="15" fill="rgb(229,88,21)" fg:x="55046339" fg:w="2978750"/><text x="24.1733%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,978,750 samples, 1.29%)</title><rect x="23.9233%" y="1701" width="1.2946%" height="15" fill="rgb(252,204,47)" fg:x="55046339" fg:w="2978750"/><text x="24.1733%" y="1711.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,978,750 samples, 1.29%)</title><rect x="23.9233%" y="1685" width="1.2946%" height="15" fill="rgb(208,77,27)" fg:x="55046339" fg:w="2978750"/><text x="24.1733%" y="1695.50"></text></g><g><title>alloc::slice::hack::to_vec (2,978,750 samples, 1.29%)</title><rect x="23.9233%" y="1669" width="1.2946%" height="15" fill="rgb(221,76,26)" fg:x="55046339" fg:w="2978750"/><text x="24.1733%" y="1679.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,978,750 samples, 1.29%)</title><rect x="23.9233%" y="1653" width="1.2946%" height="15" fill="rgb(225,139,18)" fg:x="55046339" fg:w="2978750"/><text x="24.1733%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,978,750 samples, 1.29%)</title><rect x="23.9233%" y="1637" width="1.2946%" height="15" fill="rgb(230,137,11)" fg:x="55046339" fg:w="2978750"/><text x="24.1733%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,978,750 samples, 1.29%)</title><rect x="23.9233%" y="1621" width="1.2946%" height="15" fill="rgb(212,28,1)" fg:x="55046339" fg:w="2978750"/><text x="24.1733%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,978,750 samples, 1.29%)</title><rect x="23.9233%" y="1605" width="1.2946%" height="15" fill="rgb(248,164,17)" fg:x="55046339" fg:w="2978750"/><text x="24.1733%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,978,750 samples, 1.29%)</title><rect x="23.9233%" y="1589" width="1.2946%" height="15" fill="rgb(222,171,42)" fg:x="55046339" fg:w="2978750"/><text x="24.1733%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,978,750 samples, 1.29%)</title><rect x="23.9233%" y="1573" width="1.2946%" height="15" fill="rgb(243,84,45)" fg:x="55046339" fg:w="2978750"/><text x="24.1733%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,978,750 samples, 1.29%)</title><rect x="23.9233%" y="1557" width="1.2946%" height="15" fill="rgb(252,49,23)" fg:x="55046339" fg:w="2978750"/><text x="24.1733%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (2,978,750 samples, 1.29%)</title><rect x="23.9233%" y="1541" width="1.2946%" height="15" fill="rgb(215,19,7)" fg:x="55046339" fg:w="2978750"/><text x="24.1733%" y="1551.50"></text></g><g><title>malloc (2,978,750 samples, 1.29%)</title><rect x="23.9233%" y="1525" width="1.2946%" height="15" fill="rgb(238,81,41)" fg:x="55046339" fg:w="2978750"/><text x="24.1733%" y="1535.50"></text></g><g><title>[libc.so.6] (1,553,095 samples, 0.67%)</title><rect x="24.5429%" y="1509" width="0.6750%" height="15" fill="rgb(210,199,37)" fg:x="56471994" fg:w="1553095"/><text x="24.7929%" y="1519.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4,172,478 samples, 1.81%)</title><rect x="25.8414%" y="1637" width="1.8134%" height="15" fill="rgb(244,192,49)" fg:x="59459876" fg:w="4172478"/><text x="26.0914%" y="1647.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,558,460 samples, 0.68%)</title><rect x="26.9775%" y="1621" width="0.6773%" height="15" fill="rgb(226,211,11)" fg:x="62073894" fg:w="1558460"/><text x="27.2275%" y="1631.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,558,460 samples, 0.68%)</title><rect x="26.9775%" y="1605" width="0.6773%" height="15" fill="rgb(236,162,54)" fg:x="62073894" fg:w="1558460"/><text x="27.2275%" y="1615.50"></text></g><g><title>alloc::slice::hack::to_vec (1,558,460 samples, 0.68%)</title><rect x="26.9775%" y="1589" width="0.6773%" height="15" fill="rgb(220,229,9)" fg:x="62073894" fg:w="1558460"/><text x="27.2275%" y="1599.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,558,460 samples, 0.68%)</title><rect x="26.9775%" y="1573" width="0.6773%" height="15" fill="rgb(250,87,22)" fg:x="62073894" fg:w="1558460"/><text x="27.2275%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,558,460 samples, 0.68%)</title><rect x="26.9775%" y="1557" width="0.6773%" height="15" fill="rgb(239,43,17)" fg:x="62073894" fg:w="1558460"/><text x="27.2275%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,558,460 samples, 0.68%)</title><rect x="26.9775%" y="1541" width="0.6773%" height="15" fill="rgb(231,177,25)" fg:x="62073894" fg:w="1558460"/><text x="27.2275%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,558,460 samples, 0.68%)</title><rect x="26.9775%" y="1525" width="0.6773%" height="15" fill="rgb(219,179,1)" fg:x="62073894" fg:w="1558460"/><text x="27.2275%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,558,460 samples, 0.68%)</title><rect x="26.9775%" y="1509" width="0.6773%" height="15" fill="rgb(238,219,53)" fg:x="62073894" fg:w="1558460"/><text x="27.2275%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,558,460 samples, 0.68%)</title><rect x="26.9775%" y="1493" width="0.6773%" height="15" fill="rgb(232,167,36)" fg:x="62073894" fg:w="1558460"/><text x="27.2275%" y="1503.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,558,460 samples, 0.68%)</title><rect x="26.9775%" y="1477" width="0.6773%" height="15" fill="rgb(244,19,51)" fg:x="62073894" fg:w="1558460"/><text x="27.2275%" y="1487.50"></text></g><g><title>alloc::alloc::alloc (1,558,460 samples, 0.68%)</title><rect x="26.9775%" y="1461" width="0.6773%" height="15" fill="rgb(224,6,22)" fg:x="62073894" fg:w="1558460"/><text x="27.2275%" y="1471.50"></text></g><g><title>malloc (1,558,460 samples, 0.68%)</title><rect x="26.9775%" y="1445" width="0.6773%" height="15" fill="rgb(224,145,5)" fg:x="62073894" fg:w="1558460"/><text x="27.2275%" y="1455.50"></text></g><g><title>[libc.so.6] (1,558,460 samples, 0.68%)</title><rect x="26.9775%" y="1429" width="0.6773%" height="15" fill="rgb(234,130,49)" fg:x="62073894" fg:w="1558460"/><text x="27.2275%" y="1439.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,557,545 samples, 1.11%)</title><rect x="27.6548%" y="1477" width="1.1115%" height="15" fill="rgb(254,6,2)" fg:x="63632354" fg:w="2557545"/><text x="27.9048%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,557,545 samples, 1.11%)</title><rect x="27.6548%" y="1461" width="1.1115%" height="15" fill="rgb(208,96,46)" fg:x="63632354" fg:w="2557545"/><text x="27.9048%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,557,545 samples, 1.11%)</title><rect x="27.6548%" y="1445" width="1.1115%" height="15" fill="rgb(239,3,39)" fg:x="63632354" fg:w="2557545"/><text x="27.9048%" y="1455.50"></text></g><g><title>alloc::slice::hack::to_vec (2,557,545 samples, 1.11%)</title><rect x="27.6548%" y="1429" width="1.1115%" height="15" fill="rgb(233,210,1)" fg:x="63632354" fg:w="2557545"/><text x="27.9048%" y="1439.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,557,545 samples, 1.11%)</title><rect x="27.6548%" y="1413" width="1.1115%" height="15" fill="rgb(244,137,37)" fg:x="63632354" fg:w="2557545"/><text x="27.9048%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,557,545 samples, 1.11%)</title><rect x="27.6548%" y="1397" width="1.1115%" height="15" fill="rgb(240,136,2)" fg:x="63632354" fg:w="2557545"/><text x="27.9048%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,557,545 samples, 1.11%)</title><rect x="27.6548%" y="1381" width="1.1115%" height="15" fill="rgb(239,18,37)" fg:x="63632354" fg:w="2557545"/><text x="27.9048%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,557,545 samples, 1.11%)</title><rect x="27.6548%" y="1365" width="1.1115%" height="15" fill="rgb(218,185,22)" fg:x="63632354" fg:w="2557545"/><text x="27.9048%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,557,545 samples, 1.11%)</title><rect x="27.6548%" y="1349" width="1.1115%" height="15" fill="rgb(225,218,4)" fg:x="63632354" fg:w="2557545"/><text x="27.9048%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,557,545 samples, 1.11%)</title><rect x="27.6548%" y="1333" width="1.1115%" height="15" fill="rgb(230,182,32)" fg:x="63632354" fg:w="2557545"/><text x="27.9048%" y="1343.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,557,545 samples, 1.11%)</title><rect x="27.6548%" y="1317" width="1.1115%" height="15" fill="rgb(242,56,43)" fg:x="63632354" fg:w="2557545"/><text x="27.9048%" y="1327.50"></text></g><g><title>alloc::alloc::alloc (2,557,545 samples, 1.11%)</title><rect x="27.6548%" y="1301" width="1.1115%" height="15" fill="rgb(233,99,24)" fg:x="63632354" fg:w="2557545"/><text x="27.9048%" y="1311.50"></text></g><g><title>malloc (2,557,545 samples, 1.11%)</title><rect x="27.6548%" y="1285" width="1.1115%" height="15" fill="rgb(234,209,42)" fg:x="63632354" fg:w="2557545"/><text x="27.9048%" y="1295.50"></text></g><g><title>[libc.so.6] (2,557,545 samples, 1.11%)</title><rect x="27.6548%" y="1269" width="1.1115%" height="15" fill="rgb(227,7,12)" fg:x="63632354" fg:w="2557545"/><text x="27.9048%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,260,484 samples, 0.55%)</title><rect x="28.7663%" y="1317" width="0.5478%" height="15" fill="rgb(245,203,43)" fg:x="66189899" fg:w="1260484"/><text x="29.0163%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,260,484 samples, 0.55%)</title><rect x="28.7663%" y="1301" width="0.5478%" height="15" fill="rgb(238,205,33)" fg:x="66189899" fg:w="1260484"/><text x="29.0163%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,260,484 samples, 0.55%)</title><rect x="28.7663%" y="1285" width="0.5478%" height="15" fill="rgb(231,56,7)" fg:x="66189899" fg:w="1260484"/><text x="29.0163%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,260,484 samples, 0.55%)</title><rect x="28.7663%" y="1269" width="0.5478%" height="15" fill="rgb(244,186,29)" fg:x="66189899" fg:w="1260484"/><text x="29.0163%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,260,484 samples, 0.55%)</title><rect x="28.7663%" y="1253" width="0.5478%" height="15" fill="rgb(234,111,31)" fg:x="66189899" fg:w="1260484"/><text x="29.0163%" y="1263.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,260,484 samples, 0.55%)</title><rect x="28.7663%" y="1237" width="0.5478%" height="15" fill="rgb(241,149,10)" fg:x="66189899" fg:w="1260484"/><text x="29.0163%" y="1247.50"></text></g><g><title>alloc::alloc::alloc (1,260,484 samples, 0.55%)</title><rect x="28.7663%" y="1221" width="0.5478%" height="15" fill="rgb(249,206,44)" fg:x="66189899" fg:w="1260484"/><text x="29.0163%" y="1231.50"></text></g><g><title>malloc (1,260,484 samples, 0.55%)</title><rect x="28.7663%" y="1205" width="0.5478%" height="15" fill="rgb(251,153,30)" fg:x="66189899" fg:w="1260484"/><text x="29.0163%" y="1215.50"></text></g><g><title>[libc.so.6] (1,260,484 samples, 0.55%)</title><rect x="28.7663%" y="1189" width="0.5478%" height="15" fill="rgb(239,152,38)" fg:x="66189899" fg:w="1260484"/><text x="29.0163%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,643,677 samples, 1.15%)</title><rect x="28.7663%" y="1397" width="1.1489%" height="15" fill="rgb(249,139,47)" fg:x="66189899" fg:w="2643677"/><text x="29.0163%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,643,677 samples, 1.15%)</title><rect x="28.7663%" y="1381" width="1.1489%" height="15" fill="rgb(244,64,35)" fg:x="66189899" fg:w="2643677"/><text x="29.0163%" y="1391.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,643,677 samples, 1.15%)</title><rect x="28.7663%" y="1365" width="1.1489%" height="15" fill="rgb(216,46,15)" fg:x="66189899" fg:w="2643677"/><text x="29.0163%" y="1375.50"></text></g><g><title>alloc::slice::hack::to_vec (2,643,677 samples, 1.15%)</title><rect x="28.7663%" y="1349" width="1.1489%" height="15" fill="rgb(250,74,19)" fg:x="66189899" fg:w="2643677"/><text x="29.0163%" y="1359.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,643,677 samples, 1.15%)</title><rect x="28.7663%" y="1333" width="1.1489%" height="15" fill="rgb(249,42,33)" fg:x="66189899" fg:w="2643677"/><text x="29.0163%" y="1343.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,383,193 samples, 0.60%)</title><rect x="29.3141%" y="1317" width="0.6011%" height="15" fill="rgb(242,149,17)" fg:x="67450383" fg:w="1383193"/><text x="29.5641%" y="1327.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,383,193 samples, 0.60%)</title><rect x="29.3141%" y="1301" width="0.6011%" height="15" fill="rgb(244,29,21)" fg:x="67450383" fg:w="1383193"/><text x="29.5641%" y="1311.50"></text></g><g><title>[libc.so.6] (1,383,193 samples, 0.60%)</title><rect x="29.3141%" y="1285" width="0.6011%" height="15" fill="rgb(220,130,37)" fg:x="67450383" fg:w="1383193"/><text x="29.5641%" y="1295.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,837,440 samples, 1.23%)</title><rect x="29.9152%" y="1237" width="1.2332%" height="15" fill="rgb(211,67,2)" fg:x="68833576" fg:w="2837440"/><text x="30.1652%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,420,997 samples, 0.62%)</title><rect x="30.5308%" y="1221" width="0.6176%" height="15" fill="rgb(235,68,52)" fg:x="70250019" fg:w="1420997"/><text x="30.7808%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,420,997 samples, 0.62%)</title><rect x="30.5308%" y="1205" width="0.6176%" height="15" fill="rgb(246,142,3)" fg:x="70250019" fg:w="1420997"/><text x="30.7808%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (1,420,997 samples, 0.62%)</title><rect x="30.5308%" y="1189" width="0.6176%" height="15" fill="rgb(241,25,7)" fg:x="70250019" fg:w="1420997"/><text x="30.7808%" y="1199.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,420,997 samples, 0.62%)</title><rect x="30.5308%" y="1173" width="0.6176%" height="15" fill="rgb(242,119,39)" fg:x="70250019" fg:w="1420997"/><text x="30.7808%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,420,997 samples, 0.62%)</title><rect x="30.5308%" y="1157" width="0.6176%" height="15" fill="rgb(241,98,45)" fg:x="70250019" fg:w="1420997"/><text x="30.7808%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,420,997 samples, 0.62%)</title><rect x="30.5308%" y="1141" width="0.6176%" height="15" fill="rgb(254,28,30)" fg:x="70250019" fg:w="1420997"/><text x="30.7808%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,420,997 samples, 0.62%)</title><rect x="30.5308%" y="1125" width="0.6176%" height="15" fill="rgb(241,142,54)" fg:x="70250019" fg:w="1420997"/><text x="30.7808%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,420,997 samples, 0.62%)</title><rect x="30.5308%" y="1109" width="0.6176%" height="15" fill="rgb(222,85,15)" fg:x="70250019" fg:w="1420997"/><text x="30.7808%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,420,997 samples, 0.62%)</title><rect x="30.5308%" y="1093" width="0.6176%" height="15" fill="rgb(210,85,47)" fg:x="70250019" fg:w="1420997"/><text x="30.7808%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,420,997 samples, 0.62%)</title><rect x="30.5308%" y="1077" width="0.6176%" height="15" fill="rgb(224,206,25)" fg:x="70250019" fg:w="1420997"/><text x="30.7808%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (1,420,997 samples, 0.62%)</title><rect x="30.5308%" y="1061" width="0.6176%" height="15" fill="rgb(243,201,19)" fg:x="70250019" fg:w="1420997"/><text x="30.7808%" y="1071.50"></text></g><g><title>malloc (1,420,997 samples, 0.62%)</title><rect x="30.5308%" y="1045" width="0.6176%" height="15" fill="rgb(236,59,4)" fg:x="70250019" fg:w="1420997"/><text x="30.7808%" y="1055.50"></text></g><g><title>[libc.so.6] (1,420,997 samples, 0.62%)</title><rect x="30.5308%" y="1029" width="0.6176%" height="15" fill="rgb(254,179,45)" fg:x="70250019" fg:w="1420997"/><text x="30.7808%" y="1039.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (1,554,739 samples, 0.68%)</title><rect x="31.1484%" y="773" width="0.6757%" height="15" fill="rgb(226,14,10)" fg:x="71671016" fg:w="1554739"/><text x="31.3984%" y="783.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,554,739 samples, 0.68%)</title><rect x="31.1484%" y="757" width="0.6757%" height="15" fill="rgb(244,27,41)" fg:x="71671016" fg:w="1554739"/><text x="31.3984%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,554,739 samples, 0.68%)</title><rect x="31.1484%" y="741" width="0.6757%" height="15" fill="rgb(235,35,32)" fg:x="71671016" fg:w="1554739"/><text x="31.3984%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,554,739 samples, 0.68%)</title><rect x="31.1484%" y="725" width="0.6757%" height="15" fill="rgb(218,68,31)" fg:x="71671016" fg:w="1554739"/><text x="31.3984%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,554,739 samples, 0.68%)</title><rect x="31.1484%" y="709" width="0.6757%" height="15" fill="rgb(207,120,37)" fg:x="71671016" fg:w="1554739"/><text x="31.3984%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1,554,739 samples, 0.68%)</title><rect x="31.1484%" y="693" width="0.6757%" height="15" fill="rgb(227,98,0)" fg:x="71671016" fg:w="1554739"/><text x="31.3984%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,554,739 samples, 0.68%)</title><rect x="31.1484%" y="677" width="0.6757%" height="15" fill="rgb(207,7,3)" fg:x="71671016" fg:w="1554739"/><text x="31.3984%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,554,739 samples, 0.68%)</title><rect x="31.1484%" y="661" width="0.6757%" height="15" fill="rgb(206,98,19)" fg:x="71671016" fg:w="1554739"/><text x="31.3984%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,554,739 samples, 0.68%)</title><rect x="31.1484%" y="645" width="0.6757%" height="15" fill="rgb(217,5,26)" fg:x="71671016" fg:w="1554739"/><text x="31.3984%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,554,739 samples, 0.68%)</title><rect x="31.1484%" y="629" width="0.6757%" height="15" fill="rgb(235,190,38)" fg:x="71671016" fg:w="1554739"/><text x="31.3984%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,554,739 samples, 0.68%)</title><rect x="31.1484%" y="613" width="0.6757%" height="15" fill="rgb(247,86,24)" fg:x="71671016" fg:w="1554739"/><text x="31.3984%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,554,739 samples, 0.68%)</title><rect x="31.1484%" y="597" width="0.6757%" height="15" fill="rgb(205,101,16)" fg:x="71671016" fg:w="1554739"/><text x="31.3984%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,554,739 samples, 0.68%)</title><rect x="31.1484%" y="581" width="0.6757%" height="15" fill="rgb(246,168,33)" fg:x="71671016" fg:w="1554739"/><text x="31.3984%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1,554,739 samples, 0.68%)</title><rect x="31.1484%" y="565" width="0.6757%" height="15" fill="rgb(231,114,1)" fg:x="71671016" fg:w="1554739"/><text x="31.3984%" y="575.50"></text></g><g><title>malloc (1,554,739 samples, 0.68%)</title><rect x="31.1484%" y="549" width="0.6757%" height="15" fill="rgb(207,184,53)" fg:x="71671016" fg:w="1554739"/><text x="31.3984%" y="559.50"></text></g><g><title>[libc.so.6] (1,554,739 samples, 0.68%)</title><rect x="31.1484%" y="533" width="0.6757%" height="15" fill="rgb(224,95,51)" fg:x="71671016" fg:w="1554739"/><text x="31.3984%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,111,325 samples, 1.35%)</title><rect x="31.1484%" y="837" width="1.3522%" height="15" fill="rgb(212,188,45)" fg:x="71671016" fg:w="3111325"/><text x="31.3984%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,111,325 samples, 1.35%)</title><rect x="31.1484%" y="821" width="1.3522%" height="15" fill="rgb(223,154,38)" fg:x="71671016" fg:w="3111325"/><text x="31.3984%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (3,111,325 samples, 1.35%)</title><rect x="31.1484%" y="805" width="1.3522%" height="15" fill="rgb(251,22,52)" fg:x="71671016" fg:w="3111325"/><text x="31.3984%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,111,325 samples, 1.35%)</title><rect x="31.1484%" y="789" width="1.3522%" height="15" fill="rgb(229,209,22)" fg:x="71671016" fg:w="3111325"/><text x="31.3984%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,556,586 samples, 0.68%)</title><rect x="31.8241%" y="773" width="0.6765%" height="15" fill="rgb(234,138,34)" fg:x="73225755" fg:w="1556586"/><text x="32.0741%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,556,586 samples, 0.68%)</title><rect x="31.8241%" y="757" width="0.6765%" height="15" fill="rgb(212,95,11)" fg:x="73225755" fg:w="1556586"/><text x="32.0741%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,556,586 samples, 0.68%)</title><rect x="31.8241%" y="741" width="0.6765%" height="15" fill="rgb(240,179,47)" fg:x="73225755" fg:w="1556586"/><text x="32.0741%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,556,586 samples, 0.68%)</title><rect x="31.8241%" y="725" width="0.6765%" height="15" fill="rgb(240,163,11)" fg:x="73225755" fg:w="1556586"/><text x="32.0741%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,556,586 samples, 0.68%)</title><rect x="31.8241%" y="709" width="0.6765%" height="15" fill="rgb(236,37,12)" fg:x="73225755" fg:w="1556586"/><text x="32.0741%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,556,586 samples, 0.68%)</title><rect x="31.8241%" y="693" width="0.6765%" height="15" fill="rgb(232,164,16)" fg:x="73225755" fg:w="1556586"/><text x="32.0741%" y="703.50"></text></g><g><title>alloc::alloc::alloc (1,556,586 samples, 0.68%)</title><rect x="31.8241%" y="677" width="0.6765%" height="15" fill="rgb(244,205,15)" fg:x="73225755" fg:w="1556586"/><text x="32.0741%" y="687.50"></text></g><g><title>malloc (1,556,586 samples, 0.68%)</title><rect x="31.8241%" y="661" width="0.6765%" height="15" fill="rgb(223,117,47)" fg:x="73225755" fg:w="1556586"/><text x="32.0741%" y="671.50"></text></g><g><title>[libc.so.6] (1,556,586 samples, 0.68%)</title><rect x="31.8241%" y="645" width="0.6765%" height="15" fill="rgb(244,107,35)" fg:x="73225755" fg:w="1556586"/><text x="32.0741%" y="655.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,567,522 samples, 0.68%)</title><rect x="32.5006%" y="837" width="0.6812%" height="15" fill="rgb(205,140,8)" fg:x="74782341" fg:w="1567522"/><text x="32.7506%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,567,522 samples, 0.68%)</title><rect x="32.5006%" y="821" width="0.6812%" height="15" fill="rgb(228,84,46)" fg:x="74782341" fg:w="1567522"/><text x="32.7506%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,567,522 samples, 0.68%)</title><rect x="32.5006%" y="805" width="0.6812%" height="15" fill="rgb(254,188,9)" fg:x="74782341" fg:w="1567522"/><text x="32.7506%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,567,522 samples, 0.68%)</title><rect x="32.5006%" y="789" width="0.6812%" height="15" fill="rgb(206,112,54)" fg:x="74782341" fg:w="1567522"/><text x="32.7506%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1,567,522 samples, 0.68%)</title><rect x="32.5006%" y="773" width="0.6812%" height="15" fill="rgb(216,84,49)" fg:x="74782341" fg:w="1567522"/><text x="32.7506%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,567,522 samples, 0.68%)</title><rect x="32.5006%" y="757" width="0.6812%" height="15" fill="rgb(214,194,35)" fg:x="74782341" fg:w="1567522"/><text x="32.7506%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,567,522 samples, 0.68%)</title><rect x="32.5006%" y="741" width="0.6812%" height="15" fill="rgb(249,28,3)" fg:x="74782341" fg:w="1567522"/><text x="32.7506%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,567,522 samples, 0.68%)</title><rect x="32.5006%" y="725" width="0.6812%" height="15" fill="rgb(222,56,52)" fg:x="74782341" fg:w="1567522"/><text x="32.7506%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,567,522 samples, 0.68%)</title><rect x="32.5006%" y="709" width="0.6812%" height="15" fill="rgb(245,217,50)" fg:x="74782341" fg:w="1567522"/><text x="32.7506%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,567,522 samples, 0.68%)</title><rect x="32.5006%" y="693" width="0.6812%" height="15" fill="rgb(213,201,24)" fg:x="74782341" fg:w="1567522"/><text x="32.7506%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,567,522 samples, 0.68%)</title><rect x="32.5006%" y="677" width="0.6812%" height="15" fill="rgb(248,116,28)" fg:x="74782341" fg:w="1567522"/><text x="32.7506%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,567,522 samples, 0.68%)</title><rect x="32.5006%" y="661" width="0.6812%" height="15" fill="rgb(219,72,43)" fg:x="74782341" fg:w="1567522"/><text x="32.7506%" y="671.50"></text></g><g><title>alloc::alloc::alloc (1,567,522 samples, 0.68%)</title><rect x="32.5006%" y="645" width="0.6812%" height="15" fill="rgb(209,138,14)" fg:x="74782341" fg:w="1567522"/><text x="32.7506%" y="655.50"></text></g><g><title>malloc (1,567,522 samples, 0.68%)</title><rect x="32.5006%" y="629" width="0.6812%" height="15" fill="rgb(222,18,33)" fg:x="74782341" fg:w="1567522"/><text x="32.7506%" y="639.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,476,106 samples, 0.64%)</title><rect x="33.1818%" y="837" width="0.6415%" height="15" fill="rgb(213,199,7)" fg:x="76349863" fg:w="1476106"/><text x="33.4318%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,476,106 samples, 0.64%)</title><rect x="33.1818%" y="821" width="0.6415%" height="15" fill="rgb(250,110,10)" fg:x="76349863" fg:w="1476106"/><text x="33.4318%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,476,106 samples, 0.64%)</title><rect x="33.1818%" y="805" width="0.6415%" height="15" fill="rgb(248,123,6)" fg:x="76349863" fg:w="1476106"/><text x="33.4318%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (1,476,106 samples, 0.64%)</title><rect x="33.1818%" y="789" width="0.6415%" height="15" fill="rgb(206,91,31)" fg:x="76349863" fg:w="1476106"/><text x="33.4318%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,476,106 samples, 0.64%)</title><rect x="33.1818%" y="773" width="0.6415%" height="15" fill="rgb(211,154,13)" fg:x="76349863" fg:w="1476106"/><text x="33.4318%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,476,106 samples, 0.64%)</title><rect x="33.1818%" y="757" width="0.6415%" height="15" fill="rgb(225,148,7)" fg:x="76349863" fg:w="1476106"/><text x="33.4318%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,476,106 samples, 0.64%)</title><rect x="33.1818%" y="741" width="0.6415%" height="15" fill="rgb(220,160,43)" fg:x="76349863" fg:w="1476106"/><text x="33.4318%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,476,106 samples, 0.64%)</title><rect x="33.1818%" y="725" width="0.6415%" height="15" fill="rgb(213,52,39)" fg:x="76349863" fg:w="1476106"/><text x="33.4318%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,476,106 samples, 0.64%)</title><rect x="33.1818%" y="709" width="0.6415%" height="15" fill="rgb(243,137,7)" fg:x="76349863" fg:w="1476106"/><text x="33.4318%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,476,106 samples, 0.64%)</title><rect x="33.1818%" y="693" width="0.6415%" height="15" fill="rgb(230,79,13)" fg:x="76349863" fg:w="1476106"/><text x="33.4318%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,476,106 samples, 0.64%)</title><rect x="33.1818%" y="677" width="0.6415%" height="15" fill="rgb(247,105,23)" fg:x="76349863" fg:w="1476106"/><text x="33.4318%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1,476,106 samples, 0.64%)</title><rect x="33.1818%" y="661" width="0.6415%" height="15" fill="rgb(223,179,41)" fg:x="76349863" fg:w="1476106"/><text x="33.4318%" y="671.50"></text></g><g><title>malloc (1,476,106 samples, 0.64%)</title><rect x="33.1818%" y="645" width="0.6415%" height="15" fill="rgb(218,9,34)" fg:x="76349863" fg:w="1476106"/><text x="33.4318%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,573,694 samples, 3.29%)</title><rect x="31.1484%" y="917" width="3.2915%" height="15" fill="rgb(222,106,8)" fg:x="71671016" fg:w="7573694"/><text x="31.3984%" y="927.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,573,694 samples, 3.29%)</title><rect x="31.1484%" y="901" width="3.2915%" height="15" fill="rgb(211,220,0)" fg:x="71671016" fg:w="7573694"/><text x="31.3984%" y="911.50">all..</text></g><g><title>alloc::slice::hack::to_vec (7,573,694 samples, 3.29%)</title><rect x="31.1484%" y="885" width="3.2915%" height="15" fill="rgb(229,52,16)" fg:x="71671016" fg:w="7573694"/><text x="31.3984%" y="895.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,573,694 samples, 3.29%)</title><rect x="31.1484%" y="869" width="3.2915%" height="15" fill="rgb(212,155,18)" fg:x="71671016" fg:w="7573694"/><text x="31.3984%" y="879.50">&lt;T ..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (7,573,694 samples, 3.29%)</title><rect x="31.1484%" y="853" width="3.2915%" height="15" fill="rgb(242,21,14)" fg:x="71671016" fg:w="7573694"/><text x="31.3984%" y="863.50">&lt;cs..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,418,741 samples, 0.62%)</title><rect x="33.8233%" y="837" width="0.6166%" height="15" fill="rgb(222,19,48)" fg:x="77825969" fg:w="1418741"/><text x="34.0733%" y="847.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,418,741 samples, 0.62%)</title><rect x="33.8233%" y="821" width="0.6166%" height="15" fill="rgb(232,45,27)" fg:x="77825969" fg:w="1418741"/><text x="34.0733%" y="831.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,418,741 samples, 0.62%)</title><rect x="33.8233%" y="805" width="0.6166%" height="15" fill="rgb(249,103,42)" fg:x="77825969" fg:w="1418741"/><text x="34.0733%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,418,741 samples, 0.62%)</title><rect x="33.8233%" y="789" width="0.6166%" height="15" fill="rgb(246,81,33)" fg:x="77825969" fg:w="1418741"/><text x="34.0733%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,418,741 samples, 0.62%)</title><rect x="33.8233%" y="773" width="0.6166%" height="15" fill="rgb(252,33,42)" fg:x="77825969" fg:w="1418741"/><text x="34.0733%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,418,741 samples, 0.62%)</title><rect x="33.8233%" y="757" width="0.6166%" height="15" fill="rgb(209,212,41)" fg:x="77825969" fg:w="1418741"/><text x="34.0733%" y="767.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,418,741 samples, 0.62%)</title><rect x="33.8233%" y="741" width="0.6166%" height="15" fill="rgb(207,154,6)" fg:x="77825969" fg:w="1418741"/><text x="34.0733%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,418,741 samples, 0.62%)</title><rect x="33.8233%" y="725" width="0.6166%" height="15" fill="rgb(223,64,47)" fg:x="77825969" fg:w="1418741"/><text x="34.0733%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,418,741 samples, 0.62%)</title><rect x="33.8233%" y="709" width="0.6166%" height="15" fill="rgb(211,161,38)" fg:x="77825969" fg:w="1418741"/><text x="34.0733%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1,418,741 samples, 0.62%)</title><rect x="33.8233%" y="693" width="0.6166%" height="15" fill="rgb(219,138,40)" fg:x="77825969" fg:w="1418741"/><text x="34.0733%" y="703.50"></text></g><g><title>malloc (1,418,741 samples, 0.62%)</title><rect x="33.8233%" y="677" width="0.6166%" height="15" fill="rgb(241,228,46)" fg:x="77825969" fg:w="1418741"/><text x="34.0733%" y="687.50"></text></g><g><title>[libc.so.6] (1,418,741 samples, 0.62%)</title><rect x="33.8233%" y="661" width="0.6166%" height="15" fill="rgb(223,209,38)" fg:x="77825969" fg:w="1418741"/><text x="34.0733%" y="671.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,555,761 samples, 0.68%)</title><rect x="34.4399%" y="917" width="0.6761%" height="15" fill="rgb(236,164,45)" fg:x="79244710" fg:w="1555761"/><text x="34.6899%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,555,761 samples, 0.68%)</title><rect x="34.4399%" y="901" width="0.6761%" height="15" fill="rgb(231,15,5)" fg:x="79244710" fg:w="1555761"/><text x="34.6899%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,555,761 samples, 0.68%)</title><rect x="34.4399%" y="885" width="0.6761%" height="15" fill="rgb(252,35,15)" fg:x="79244710" fg:w="1555761"/><text x="34.6899%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (1,555,761 samples, 0.68%)</title><rect x="34.4399%" y="869" width="0.6761%" height="15" fill="rgb(248,181,18)" fg:x="79244710" fg:w="1555761"/><text x="34.6899%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,555,761 samples, 0.68%)</title><rect x="34.4399%" y="853" width="0.6761%" height="15" fill="rgb(233,39,42)" fg:x="79244710" fg:w="1555761"/><text x="34.6899%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,555,761 samples, 0.68%)</title><rect x="34.4399%" y="837" width="0.6761%" height="15" fill="rgb(238,110,33)" fg:x="79244710" fg:w="1555761"/><text x="34.6899%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,555,761 samples, 0.68%)</title><rect x="34.4399%" y="821" width="0.6761%" height="15" fill="rgb(233,195,10)" fg:x="79244710" fg:w="1555761"/><text x="34.6899%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,555,761 samples, 0.68%)</title><rect x="34.4399%" y="805" width="0.6761%" height="15" fill="rgb(254,105,3)" fg:x="79244710" fg:w="1555761"/><text x="34.6899%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,555,761 samples, 0.68%)</title><rect x="34.4399%" y="789" width="0.6761%" height="15" fill="rgb(221,225,9)" fg:x="79244710" fg:w="1555761"/><text x="34.6899%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,555,761 samples, 0.68%)</title><rect x="34.4399%" y="773" width="0.6761%" height="15" fill="rgb(224,227,45)" fg:x="79244710" fg:w="1555761"/><text x="34.6899%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,555,761 samples, 0.68%)</title><rect x="34.4399%" y="757" width="0.6761%" height="15" fill="rgb(229,198,43)" fg:x="79244710" fg:w="1555761"/><text x="34.6899%" y="767.50"></text></g><g><title>alloc::alloc::alloc (1,555,761 samples, 0.68%)</title><rect x="34.4399%" y="741" width="0.6761%" height="15" fill="rgb(206,209,35)" fg:x="79244710" fg:w="1555761"/><text x="34.6899%" y="751.50"></text></g><g><title>malloc (1,555,761 samples, 0.68%)</title><rect x="34.4399%" y="725" width="0.6761%" height="15" fill="rgb(245,195,53)" fg:x="79244710" fg:w="1555761"/><text x="34.6899%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,626,787 samples, 4.62%)</title><rect x="31.1484%" y="997" width="4.6184%" height="15" fill="rgb(240,92,26)" fg:x="71671016" fg:w="10626787"/><text x="31.3984%" y="1007.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,626,787 samples, 4.62%)</title><rect x="31.1484%" y="981" width="4.6184%" height="15" fill="rgb(207,40,23)" fg:x="71671016" fg:w="10626787"/><text x="31.3984%" y="991.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (10,626,787 samples, 4.62%)</title><rect x="31.1484%" y="965" width="4.6184%" height="15" fill="rgb(223,111,35)" fg:x="71671016" fg:w="10626787"/><text x="31.3984%" y="975.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,626,787 samples, 4.62%)</title><rect x="31.1484%" y="949" width="4.6184%" height="15" fill="rgb(229,147,28)" fg:x="71671016" fg:w="10626787"/><text x="31.3984%" y="959.50">&lt;T as..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (10,626,787 samples, 4.62%)</title><rect x="31.1484%" y="933" width="4.6184%" height="15" fill="rgb(211,29,28)" fg:x="71671016" fg:w="10626787"/><text x="31.3984%" y="943.50">&lt;css_..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,497,332 samples, 0.65%)</title><rect x="35.1161%" y="917" width="0.6507%" height="15" fill="rgb(228,72,33)" fg:x="80800471" fg:w="1497332"/><text x="35.3661%" y="927.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,497,332 samples, 0.65%)</title><rect x="35.1161%" y="901" width="0.6507%" height="15" fill="rgb(205,214,31)" fg:x="80800471" fg:w="1497332"/><text x="35.3661%" y="911.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,497,332 samples, 0.65%)</title><rect x="35.1161%" y="885" width="0.6507%" height="15" fill="rgb(224,111,15)" fg:x="80800471" fg:w="1497332"/><text x="35.3661%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,497,332 samples, 0.65%)</title><rect x="35.1161%" y="869" width="0.6507%" height="15" fill="rgb(253,21,26)" fg:x="80800471" fg:w="1497332"/><text x="35.3661%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,497,332 samples, 0.65%)</title><rect x="35.1161%" y="853" width="0.6507%" height="15" fill="rgb(245,139,43)" fg:x="80800471" fg:w="1497332"/><text x="35.3661%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,497,332 samples, 0.65%)</title><rect x="35.1161%" y="837" width="0.6507%" height="15" fill="rgb(252,170,7)" fg:x="80800471" fg:w="1497332"/><text x="35.3661%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1,497,332 samples, 0.65%)</title><rect x="35.1161%" y="821" width="0.6507%" height="15" fill="rgb(231,118,14)" fg:x="80800471" fg:w="1497332"/><text x="35.3661%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,497,332 samples, 0.65%)</title><rect x="35.1161%" y="805" width="0.6507%" height="15" fill="rgb(238,83,0)" fg:x="80800471" fg:w="1497332"/><text x="35.3661%" y="815.50"></text></g><g><title>[libc.so.6] (1,497,332 samples, 0.65%)</title><rect x="35.1161%" y="789" width="0.6507%" height="15" fill="rgb(221,39,39)" fg:x="80800471" fg:w="1497332"/><text x="35.3661%" y="799.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,343,806 samples, 0.58%)</title><rect x="35.7668%" y="997" width="0.5840%" height="15" fill="rgb(222,119,46)" fg:x="82297803" fg:w="1343806"/><text x="36.0168%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,343,806 samples, 0.58%)</title><rect x="35.7668%" y="981" width="0.5840%" height="15" fill="rgb(222,165,49)" fg:x="82297803" fg:w="1343806"/><text x="36.0168%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,343,806 samples, 0.58%)</title><rect x="35.7668%" y="965" width="0.5840%" height="15" fill="rgb(219,113,52)" fg:x="82297803" fg:w="1343806"/><text x="36.0168%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (1,343,806 samples, 0.58%)</title><rect x="35.7668%" y="949" width="0.5840%" height="15" fill="rgb(214,7,15)" fg:x="82297803" fg:w="1343806"/><text x="36.0168%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,343,806 samples, 0.58%)</title><rect x="35.7668%" y="933" width="0.5840%" height="15" fill="rgb(235,32,4)" fg:x="82297803" fg:w="1343806"/><text x="36.0168%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,343,806 samples, 0.58%)</title><rect x="35.7668%" y="917" width="0.5840%" height="15" fill="rgb(238,90,54)" fg:x="82297803" fg:w="1343806"/><text x="36.0168%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,343,806 samples, 0.58%)</title><rect x="35.7668%" y="901" width="0.5840%" height="15" fill="rgb(213,208,19)" fg:x="82297803" fg:w="1343806"/><text x="36.0168%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,343,806 samples, 0.58%)</title><rect x="35.7668%" y="885" width="0.5840%" height="15" fill="rgb(233,156,4)" fg:x="82297803" fg:w="1343806"/><text x="36.0168%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,343,806 samples, 0.58%)</title><rect x="35.7668%" y="869" width="0.5840%" height="15" fill="rgb(207,194,5)" fg:x="82297803" fg:w="1343806"/><text x="36.0168%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,343,806 samples, 0.58%)</title><rect x="35.7668%" y="853" width="0.5840%" height="15" fill="rgb(206,111,30)" fg:x="82297803" fg:w="1343806"/><text x="36.0168%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,343,806 samples, 0.58%)</title><rect x="35.7668%" y="837" width="0.5840%" height="15" fill="rgb(243,70,54)" fg:x="82297803" fg:w="1343806"/><text x="36.0168%" y="847.50"></text></g><g><title>alloc::alloc::alloc (1,343,806 samples, 0.58%)</title><rect x="35.7668%" y="821" width="0.5840%" height="15" fill="rgb(242,28,8)" fg:x="82297803" fg:w="1343806"/><text x="36.0168%" y="831.50"></text></g><g><title>malloc (1,343,806 samples, 0.58%)</title><rect x="35.7668%" y="805" width="0.5840%" height="15" fill="rgb(219,106,18)" fg:x="82297803" fg:w="1343806"/><text x="36.0168%" y="815.50"></text></g><g><title>[libc.so.6] (1,343,806 samples, 0.58%)</title><rect x="35.7668%" y="789" width="0.5840%" height="15" fill="rgb(244,222,10)" fg:x="82297803" fg:w="1343806"/><text x="36.0168%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,508,532 samples, 5.87%)</title><rect x="31.1484%" y="1077" width="5.8708%" height="15" fill="rgb(236,179,52)" fg:x="71671016" fg:w="13508532"/><text x="31.3984%" y="1087.50">&lt;alloc:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,508,532 samples, 5.87%)</title><rect x="31.1484%" y="1061" width="5.8708%" height="15" fill="rgb(213,23,39)" fg:x="71671016" fg:w="13508532"/><text x="31.3984%" y="1071.50">alloc::..</text></g><g><title>alloc::slice::hack::to_vec (13,508,532 samples, 5.87%)</title><rect x="31.1484%" y="1045" width="5.8708%" height="15" fill="rgb(238,48,10)" fg:x="71671016" fg:w="13508532"/><text x="31.3984%" y="1055.50">alloc::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,508,532 samples, 5.87%)</title><rect x="31.1484%" y="1029" width="5.8708%" height="15" fill="rgb(251,196,23)" fg:x="71671016" fg:w="13508532"/><text x="31.3984%" y="1039.50">&lt;T as a..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (13,508,532 samples, 5.87%)</title><rect x="31.1484%" y="1013" width="5.8708%" height="15" fill="rgb(250,152,24)" fg:x="71671016" fg:w="13508532"/><text x="31.3984%" y="1023.50">&lt;css_bi..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,537,939 samples, 0.67%)</title><rect x="36.3508%" y="997" width="0.6684%" height="15" fill="rgb(209,150,17)" fg:x="83641609" fg:w="1537939"/><text x="36.6008%" y="1007.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,537,939 samples, 0.67%)</title><rect x="36.3508%" y="981" width="0.6684%" height="15" fill="rgb(234,202,34)" fg:x="83641609" fg:w="1537939"/><text x="36.6008%" y="991.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,537,939 samples, 0.67%)</title><rect x="36.3508%" y="965" width="0.6684%" height="15" fill="rgb(253,148,53)" fg:x="83641609" fg:w="1537939"/><text x="36.6008%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,537,939 samples, 0.67%)</title><rect x="36.3508%" y="949" width="0.6684%" height="15" fill="rgb(218,129,16)" fg:x="83641609" fg:w="1537939"/><text x="36.6008%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,537,939 samples, 0.67%)</title><rect x="36.3508%" y="933" width="0.6684%" height="15" fill="rgb(216,85,19)" fg:x="83641609" fg:w="1537939"/><text x="36.6008%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,537,939 samples, 0.67%)</title><rect x="36.3508%" y="917" width="0.6684%" height="15" fill="rgb(235,228,7)" fg:x="83641609" fg:w="1537939"/><text x="36.6008%" y="927.50"></text></g><g><title>core::clone::Clone::clone (1,537,939 samples, 0.67%)</title><rect x="36.3508%" y="901" width="0.6684%" height="15" fill="rgb(245,175,0)" fg:x="83641609" fg:w="1537939"/><text x="36.6008%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,537,939 samples, 0.67%)</title><rect x="36.3508%" y="885" width="0.6684%" height="15" fill="rgb(208,168,36)" fg:x="83641609" fg:w="1537939"/><text x="36.6008%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,537,939 samples, 0.67%)</title><rect x="36.3508%" y="869" width="0.6684%" height="15" fill="rgb(246,171,24)" fg:x="83641609" fg:w="1537939"/><text x="36.6008%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,537,939 samples, 0.67%)</title><rect x="36.3508%" y="853" width="0.6684%" height="15" fill="rgb(215,142,24)" fg:x="83641609" fg:w="1537939"/><text x="36.6008%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (1,537,939 samples, 0.67%)</title><rect x="36.3508%" y="837" width="0.6684%" height="15" fill="rgb(250,187,7)" fg:x="83641609" fg:w="1537939"/><text x="36.6008%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,537,939 samples, 0.67%)</title><rect x="36.3508%" y="821" width="0.6684%" height="15" fill="rgb(228,66,33)" fg:x="83641609" fg:w="1537939"/><text x="36.6008%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,537,939 samples, 0.67%)</title><rect x="36.3508%" y="805" width="0.6684%" height="15" fill="rgb(234,215,21)" fg:x="83641609" fg:w="1537939"/><text x="36.6008%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,537,939 samples, 0.67%)</title><rect x="36.3508%" y="789" width="0.6684%" height="15" fill="rgb(222,191,20)" fg:x="83641609" fg:w="1537939"/><text x="36.6008%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,537,939 samples, 0.67%)</title><rect x="36.3508%" y="773" width="0.6684%" height="15" fill="rgb(245,79,54)" fg:x="83641609" fg:w="1537939"/><text x="36.6008%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,537,939 samples, 0.67%)</title><rect x="36.3508%" y="757" width="0.6684%" height="15" fill="rgb(240,10,37)" fg:x="83641609" fg:w="1537939"/><text x="36.6008%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,537,939 samples, 0.67%)</title><rect x="36.3508%" y="741" width="0.6684%" height="15" fill="rgb(214,192,32)" fg:x="83641609" fg:w="1537939"/><text x="36.6008%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,537,939 samples, 0.67%)</title><rect x="36.3508%" y="725" width="0.6684%" height="15" fill="rgb(209,36,54)" fg:x="83641609" fg:w="1537939"/><text x="36.6008%" y="735.50"></text></g><g><title>alloc::alloc::alloc (1,537,939 samples, 0.67%)</title><rect x="36.3508%" y="709" width="0.6684%" height="15" fill="rgb(220,10,11)" fg:x="83641609" fg:w="1537939"/><text x="36.6008%" y="719.50"></text></g><g><title>malloc (1,537,939 samples, 0.67%)</title><rect x="36.3508%" y="693" width="0.6684%" height="15" fill="rgb(221,106,17)" fg:x="83641609" fg:w="1537939"/><text x="36.6008%" y="703.50"></text></g><g><title>[libc.so.6] (1,537,939 samples, 0.67%)</title><rect x="36.3508%" y="677" width="0.6684%" height="15" fill="rgb(251,142,44)" fg:x="83641609" fg:w="1537939"/><text x="36.6008%" y="687.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,415,494 samples, 0.62%)</title><rect x="37.0192%" y="1077" width="0.6152%" height="15" fill="rgb(238,13,15)" fg:x="85179548" fg:w="1415494"/><text x="37.2692%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,415,494 samples, 0.62%)</title><rect x="37.0192%" y="1061" width="0.6152%" height="15" fill="rgb(208,107,27)" fg:x="85179548" fg:w="1415494"/><text x="37.2692%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,415,494 samples, 0.62%)</title><rect x="37.0192%" y="1045" width="0.6152%" height="15" fill="rgb(205,136,37)" fg:x="85179548" fg:w="1415494"/><text x="37.2692%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (1,415,494 samples, 0.62%)</title><rect x="37.0192%" y="1029" width="0.6152%" height="15" fill="rgb(250,205,27)" fg:x="85179548" fg:w="1415494"/><text x="37.2692%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,415,494 samples, 0.62%)</title><rect x="37.0192%" y="1013" width="0.6152%" height="15" fill="rgb(210,80,43)" fg:x="85179548" fg:w="1415494"/><text x="37.2692%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,415,494 samples, 0.62%)</title><rect x="37.0192%" y="997" width="0.6152%" height="15" fill="rgb(247,160,36)" fg:x="85179548" fg:w="1415494"/><text x="37.2692%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,415,494 samples, 0.62%)</title><rect x="37.0192%" y="981" width="0.6152%" height="15" fill="rgb(234,13,49)" fg:x="85179548" fg:w="1415494"/><text x="37.2692%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,415,494 samples, 0.62%)</title><rect x="37.0192%" y="965" width="0.6152%" height="15" fill="rgb(234,122,0)" fg:x="85179548" fg:w="1415494"/><text x="37.2692%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,415,494 samples, 0.62%)</title><rect x="37.0192%" y="949" width="0.6152%" height="15" fill="rgb(207,146,38)" fg:x="85179548" fg:w="1415494"/><text x="37.2692%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,415,494 samples, 0.62%)</title><rect x="37.0192%" y="933" width="0.6152%" height="15" fill="rgb(207,177,25)" fg:x="85179548" fg:w="1415494"/><text x="37.2692%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,415,494 samples, 0.62%)</title><rect x="37.0192%" y="917" width="0.6152%" height="15" fill="rgb(211,178,42)" fg:x="85179548" fg:w="1415494"/><text x="37.2692%" y="927.50"></text></g><g><title>alloc::alloc::alloc (1,415,494 samples, 0.62%)</title><rect x="37.0192%" y="901" width="0.6152%" height="15" fill="rgb(230,69,54)" fg:x="85179548" fg:w="1415494"/><text x="37.2692%" y="911.50"></text></g><g><title>malloc (1,415,494 samples, 0.62%)</title><rect x="37.0192%" y="885" width="0.6152%" height="15" fill="rgb(214,135,41)" fg:x="85179548" fg:w="1415494"/><text x="37.2692%" y="895.50"></text></g><g><title>[libc.so.6] (1,415,494 samples, 0.62%)</title><rect x="37.0192%" y="869" width="0.6152%" height="15" fill="rgb(237,67,25)" fg:x="85179548" fg:w="1415494"/><text x="37.2692%" y="879.50"></text></g><g><title>core::clone::Clone::clone (1,397,090 samples, 0.61%)</title><rect x="37.6344%" y="981" width="0.6072%" height="15" fill="rgb(222,189,50)" fg:x="86595042" fg:w="1397090"/><text x="37.8844%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,397,090 samples, 0.61%)</title><rect x="37.6344%" y="965" width="0.6072%" height="15" fill="rgb(245,148,34)" fg:x="86595042" fg:w="1397090"/><text x="37.8844%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,397,090 samples, 0.61%)</title><rect x="37.6344%" y="949" width="0.6072%" height="15" fill="rgb(222,29,6)" fg:x="86595042" fg:w="1397090"/><text x="37.8844%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,397,090 samples, 0.61%)</title><rect x="37.6344%" y="933" width="0.6072%" height="15" fill="rgb(221,189,43)" fg:x="86595042" fg:w="1397090"/><text x="37.8844%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (1,397,090 samples, 0.61%)</title><rect x="37.6344%" y="917" width="0.6072%" height="15" fill="rgb(207,36,27)" fg:x="86595042" fg:w="1397090"/><text x="37.8844%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,397,090 samples, 0.61%)</title><rect x="37.6344%" y="901" width="0.6072%" height="15" fill="rgb(217,90,24)" fg:x="86595042" fg:w="1397090"/><text x="37.8844%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,397,090 samples, 0.61%)</title><rect x="37.6344%" y="885" width="0.6072%" height="15" fill="rgb(224,66,35)" fg:x="86595042" fg:w="1397090"/><text x="37.8844%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,397,090 samples, 0.61%)</title><rect x="37.6344%" y="869" width="0.6072%" height="15" fill="rgb(221,13,50)" fg:x="86595042" fg:w="1397090"/><text x="37.8844%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,397,090 samples, 0.61%)</title><rect x="37.6344%" y="853" width="0.6072%" height="15" fill="rgb(236,68,49)" fg:x="86595042" fg:w="1397090"/><text x="37.8844%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,397,090 samples, 0.61%)</title><rect x="37.6344%" y="837" width="0.6072%" height="15" fill="rgb(229,146,28)" fg:x="86595042" fg:w="1397090"/><text x="37.8844%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,397,090 samples, 0.61%)</title><rect x="37.6344%" y="821" width="0.6072%" height="15" fill="rgb(225,31,38)" fg:x="86595042" fg:w="1397090"/><text x="37.8844%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,397,090 samples, 0.61%)</title><rect x="37.6344%" y="805" width="0.6072%" height="15" fill="rgb(250,208,3)" fg:x="86595042" fg:w="1397090"/><text x="37.8844%" y="815.50"></text></g><g><title>alloc::alloc::alloc (1,397,090 samples, 0.61%)</title><rect x="37.6344%" y="789" width="0.6072%" height="15" fill="rgb(246,54,23)" fg:x="86595042" fg:w="1397090"/><text x="37.8844%" y="799.50"></text></g><g><title>malloc (1,397,090 samples, 0.61%)</title><rect x="37.6344%" y="773" width="0.6072%" height="15" fill="rgb(243,76,11)" fg:x="86595042" fg:w="1397090"/><text x="37.8844%" y="783.50"></text></g><g><title>[libc.so.6] (1,397,090 samples, 0.61%)</title><rect x="37.6344%" y="757" width="0.6072%" height="15" fill="rgb(245,21,50)" fg:x="86595042" fg:w="1397090"/><text x="37.8844%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (1,424,668 samples, 0.62%)</title><rect x="38.2416%" y="981" width="0.6192%" height="15" fill="rgb(228,9,43)" fg:x="87992132" fg:w="1424668"/><text x="38.4916%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,424,668 samples, 0.62%)</title><rect x="38.2416%" y="965" width="0.6192%" height="15" fill="rgb(208,100,47)" fg:x="87992132" fg:w="1424668"/><text x="38.4916%" y="975.50"></text></g><g><title>[libc.so.6] (1,424,668 samples, 0.62%)</title><rect x="38.2416%" y="949" width="0.6192%" height="15" fill="rgb(232,26,8)" fg:x="87992132" fg:w="1424668"/><text x="38.4916%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,059,912 samples, 8.28%)</title><rect x="31.1484%" y="1157" width="8.2835%" height="15" fill="rgb(216,166,38)" fg:x="71671016" fg:w="19059912"/><text x="31.3984%" y="1167.50">&lt;alloc::vec:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,059,912 samples, 8.28%)</title><rect x="31.1484%" y="1141" width="8.2835%" height="15" fill="rgb(251,202,51)" fg:x="71671016" fg:w="19059912"/><text x="31.3984%" y="1151.50">alloc::slice..</text></g><g><title>alloc::slice::hack::to_vec (19,059,912 samples, 8.28%)</title><rect x="31.1484%" y="1125" width="8.2835%" height="15" fill="rgb(254,216,34)" fg:x="71671016" fg:w="19059912"/><text x="31.3984%" y="1135.50">alloc::slice..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,059,912 samples, 8.28%)</title><rect x="31.1484%" y="1109" width="8.2835%" height="15" fill="rgb(251,32,27)" fg:x="71671016" fg:w="19059912"/><text x="31.3984%" y="1119.50">&lt;T as alloc:..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (19,059,912 samples, 8.28%)</title><rect x="31.1484%" y="1093" width="8.2835%" height="15" fill="rgb(208,127,28)" fg:x="71671016" fg:w="19059912"/><text x="31.3984%" y="1103.50">&lt;css_bitvect..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (4,135,886 samples, 1.80%)</title><rect x="37.6344%" y="1077" width="1.7975%" height="15" fill="rgb(224,137,22)" fg:x="86595042" fg:w="4135886"/><text x="37.8844%" y="1087.50">&lt;..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (4,135,886 samples, 1.80%)</title><rect x="37.6344%" y="1061" width="1.7975%" height="15" fill="rgb(254,70,32)" fg:x="86595042" fg:w="4135886"/><text x="37.8844%" y="1071.50">&lt;..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4,135,886 samples, 1.80%)</title><rect x="37.6344%" y="1045" width="1.7975%" height="15" fill="rgb(229,75,37)" fg:x="86595042" fg:w="4135886"/><text x="37.8844%" y="1055.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,135,886 samples, 1.80%)</title><rect x="37.6344%" y="1029" width="1.7975%" height="15" fill="rgb(252,64,23)" fg:x="86595042" fg:w="4135886"/><text x="37.8844%" y="1039.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (4,135,886 samples, 1.80%)</title><rect x="37.6344%" y="1013" width="1.7975%" height="15" fill="rgb(232,162,48)" fg:x="86595042" fg:w="4135886"/><text x="37.8844%" y="1023.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (4,135,886 samples, 1.80%)</title><rect x="37.6344%" y="997" width="1.7975%" height="15" fill="rgb(246,160,12)" fg:x="86595042" fg:w="4135886"/><text x="37.8844%" y="1007.50">h..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1,314,128 samples, 0.57%)</title><rect x="38.8607%" y="981" width="0.5711%" height="15" fill="rgb(247,166,0)" fg:x="89416800" fg:w="1314128"/><text x="39.1107%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1,314,128 samples, 0.57%)</title><rect x="38.8607%" y="965" width="0.5711%" height="15" fill="rgb(249,219,21)" fg:x="89416800" fg:w="1314128"/><text x="39.1107%" y="975.50"></text></g><g><title>core::ptr::write (1,314,128 samples, 0.57%)</title><rect x="38.8607%" y="949" width="0.5711%" height="15" fill="rgb(205,209,3)" fg:x="89416800" fg:w="1314128"/><text x="39.1107%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20,621,548 samples, 8.96%)</title><rect x="31.1484%" y="1237" width="8.9622%" height="15" fill="rgb(243,44,1)" fg:x="71671016" fg:w="20621548"/><text x="31.3984%" y="1247.50">&lt;alloc::vec::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20,621,548 samples, 8.96%)</title><rect x="31.1484%" y="1221" width="8.9622%" height="15" fill="rgb(206,159,16)" fg:x="71671016" fg:w="20621548"/><text x="31.3984%" y="1231.50">alloc::slice:..</text></g><g><title>alloc::slice::hack::to_vec (20,621,548 samples, 8.96%)</title><rect x="31.1484%" y="1205" width="8.9622%" height="15" fill="rgb(244,77,30)" fg:x="71671016" fg:w="20621548"/><text x="31.3984%" y="1215.50">alloc::slice:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20,621,548 samples, 8.96%)</title><rect x="31.1484%" y="1189" width="8.9622%" height="15" fill="rgb(218,69,12)" fg:x="71671016" fg:w="20621548"/><text x="31.3984%" y="1199.50">&lt;T as alloc::..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (20,621,548 samples, 8.96%)</title><rect x="31.1484%" y="1173" width="8.9622%" height="15" fill="rgb(212,87,7)" fg:x="71671016" fg:w="20621548"/><text x="31.3984%" y="1183.50">&lt;css_bitvecto..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,561,636 samples, 0.68%)</title><rect x="39.4319%" y="1157" width="0.6787%" height="15" fill="rgb(245,114,25)" fg:x="90730928" fg:w="1561636"/><text x="39.6819%" y="1167.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,561,636 samples, 0.68%)</title><rect x="39.4319%" y="1141" width="0.6787%" height="15" fill="rgb(210,61,42)" fg:x="90730928" fg:w="1561636"/><text x="39.6819%" y="1151.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,561,636 samples, 0.68%)</title><rect x="39.4319%" y="1125" width="0.6787%" height="15" fill="rgb(211,52,33)" fg:x="90730928" fg:w="1561636"/><text x="39.6819%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,561,636 samples, 0.68%)</title><rect x="39.4319%" y="1109" width="0.6787%" height="15" fill="rgb(234,58,33)" fg:x="90730928" fg:w="1561636"/><text x="39.6819%" y="1119.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,561,636 samples, 0.68%)</title><rect x="39.4319%" y="1093" width="0.6787%" height="15" fill="rgb(220,115,36)" fg:x="90730928" fg:w="1561636"/><text x="39.6819%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,561,636 samples, 0.68%)</title><rect x="39.4319%" y="1077" width="0.6787%" height="15" fill="rgb(243,153,54)" fg:x="90730928" fg:w="1561636"/><text x="39.6819%" y="1087.50"></text></g><g><title>core::clone::Clone::clone (1,561,636 samples, 0.68%)</title><rect x="39.4319%" y="1061" width="0.6787%" height="15" fill="rgb(251,47,18)" fg:x="90730928" fg:w="1561636"/><text x="39.6819%" y="1071.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,561,636 samples, 0.68%)</title><rect x="39.4319%" y="1045" width="0.6787%" height="15" fill="rgb(242,102,42)" fg:x="90730928" fg:w="1561636"/><text x="39.6819%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,561,636 samples, 0.68%)</title><rect x="39.4319%" y="1029" width="0.6787%" height="15" fill="rgb(234,31,38)" fg:x="90730928" fg:w="1561636"/><text x="39.6819%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,561,636 samples, 0.68%)</title><rect x="39.4319%" y="1013" width="0.6787%" height="15" fill="rgb(221,117,51)" fg:x="90730928" fg:w="1561636"/><text x="39.6819%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (1,561,636 samples, 0.68%)</title><rect x="39.4319%" y="997" width="0.6787%" height="15" fill="rgb(212,20,18)" fg:x="90730928" fg:w="1561636"/><text x="39.6819%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,561,636 samples, 0.68%)</title><rect x="39.4319%" y="981" width="0.6787%" height="15" fill="rgb(245,133,36)" fg:x="90730928" fg:w="1561636"/><text x="39.6819%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,561,636 samples, 0.68%)</title><rect x="39.4319%" y="965" width="0.6787%" height="15" fill="rgb(212,6,19)" fg:x="90730928" fg:w="1561636"/><text x="39.6819%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,561,636 samples, 0.68%)</title><rect x="39.4319%" y="949" width="0.6787%" height="15" fill="rgb(218,1,36)" fg:x="90730928" fg:w="1561636"/><text x="39.6819%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,561,636 samples, 0.68%)</title><rect x="39.4319%" y="933" width="0.6787%" height="15" fill="rgb(246,84,54)" fg:x="90730928" fg:w="1561636"/><text x="39.6819%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,561,636 samples, 0.68%)</title><rect x="39.4319%" y="917" width="0.6787%" height="15" fill="rgb(242,110,6)" fg:x="90730928" fg:w="1561636"/><text x="39.6819%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,561,636 samples, 0.68%)</title><rect x="39.4319%" y="901" width="0.6787%" height="15" fill="rgb(214,47,5)" fg:x="90730928" fg:w="1561636"/><text x="39.6819%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,561,636 samples, 0.68%)</title><rect x="39.4319%" y="885" width="0.6787%" height="15" fill="rgb(218,159,25)" fg:x="90730928" fg:w="1561636"/><text x="39.6819%" y="895.50"></text></g><g><title>alloc::alloc::alloc (1,561,636 samples, 0.68%)</title><rect x="39.4319%" y="869" width="0.6787%" height="15" fill="rgb(215,211,28)" fg:x="90730928" fg:w="1561636"/><text x="39.6819%" y="879.50"></text></g><g><title>malloc (1,561,636 samples, 0.68%)</title><rect x="39.4319%" y="853" width="0.6787%" height="15" fill="rgb(238,59,32)" fg:x="90730928" fg:w="1561636"/><text x="39.6819%" y="863.50"></text></g><g><title>[libc.so.6] (1,561,636 samples, 0.68%)</title><rect x="39.4319%" y="837" width="0.6787%" height="15" fill="rgb(226,82,3)" fg:x="90730928" fg:w="1561636"/><text x="39.6819%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,557,619 samples, 0.68%)</title><rect x="40.6980%" y="1045" width="0.6769%" height="15" fill="rgb(240,164,32)" fg:x="93644293" fg:w="1557619"/><text x="40.9480%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,557,619 samples, 0.68%)</title><rect x="40.6980%" y="1029" width="0.6769%" height="15" fill="rgb(232,46,7)" fg:x="93644293" fg:w="1557619"/><text x="40.9480%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,557,619 samples, 0.68%)</title><rect x="40.6980%" y="1013" width="0.6769%" height="15" fill="rgb(229,129,53)" fg:x="93644293" fg:w="1557619"/><text x="40.9480%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,557,619 samples, 0.68%)</title><rect x="40.6980%" y="997" width="0.6769%" height="15" fill="rgb(234,188,29)" fg:x="93644293" fg:w="1557619"/><text x="40.9480%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,557,619 samples, 0.68%)</title><rect x="40.6980%" y="981" width="0.6769%" height="15" fill="rgb(246,141,4)" fg:x="93644293" fg:w="1557619"/><text x="40.9480%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,557,619 samples, 0.68%)</title><rect x="40.6980%" y="965" width="0.6769%" height="15" fill="rgb(229,23,39)" fg:x="93644293" fg:w="1557619"/><text x="40.9480%" y="975.50"></text></g><g><title>alloc::alloc::alloc (1,557,619 samples, 0.68%)</title><rect x="40.6980%" y="949" width="0.6769%" height="15" fill="rgb(206,12,3)" fg:x="93644293" fg:w="1557619"/><text x="40.9480%" y="959.50"></text></g><g><title>__rdl_alloc (1,557,619 samples, 0.68%)</title><rect x="40.6980%" y="933" width="0.6769%" height="15" fill="rgb(252,226,20)" fg:x="93644293" fg:w="1557619"/><text x="40.9480%" y="943.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,557,619 samples, 0.68%)</title><rect x="40.6980%" y="917" width="0.6769%" height="15" fill="rgb(216,123,35)" fg:x="93644293" fg:w="1557619"/><text x="40.9480%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4,298,744 samples, 1.87%)</title><rect x="40.1106%" y="1125" width="1.8682%" height="15" fill="rgb(212,68,40)" fg:x="92292564" fg:w="4298744"/><text x="40.3606%" y="1135.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,947,015 samples, 1.28%)</title><rect x="40.6980%" y="1109" width="1.2808%" height="15" fill="rgb(254,125,32)" fg:x="93644293" fg:w="2947015"/><text x="40.9480%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,947,015 samples, 1.28%)</title><rect x="40.6980%" y="1093" width="1.2808%" height="15" fill="rgb(253,97,22)" fg:x="93644293" fg:w="2947015"/><text x="40.9480%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (2,947,015 samples, 1.28%)</title><rect x="40.6980%" y="1077" width="1.2808%" height="15" fill="rgb(241,101,14)" fg:x="93644293" fg:w="2947015"/><text x="40.9480%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,947,015 samples, 1.28%)</title><rect x="40.6980%" y="1061" width="1.2808%" height="15" fill="rgb(238,103,29)" fg:x="93644293" fg:w="2947015"/><text x="40.9480%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,389,396 samples, 0.60%)</title><rect x="41.3750%" y="1045" width="0.6038%" height="15" fill="rgb(233,195,47)" fg:x="95201912" fg:w="1389396"/><text x="41.6250%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,389,396 samples, 0.60%)</title><rect x="41.3750%" y="1029" width="0.6038%" height="15" fill="rgb(246,218,30)" fg:x="95201912" fg:w="1389396"/><text x="41.6250%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (29,179,576 samples, 12.68%)</title><rect x="29.9152%" y="1317" width="12.6815%" height="15" fill="rgb(219,145,47)" fg:x="68833576" fg:w="29179576"/><text x="30.1652%" y="1327.50">&lt;alloc::vec::Vec&lt;T,..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29,179,576 samples, 12.68%)</title><rect x="29.9152%" y="1301" width="12.6815%" height="15" fill="rgb(243,12,26)" fg:x="68833576" fg:w="29179576"/><text x="30.1652%" y="1311.50">alloc::slice::&lt;impl..</text></g><g><title>alloc::slice::hack::to_vec (29,179,576 samples, 12.68%)</title><rect x="29.9152%" y="1285" width="12.6815%" height="15" fill="rgb(214,87,16)" fg:x="68833576" fg:w="29179576"/><text x="30.1652%" y="1295.50">alloc::slice::hack:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (29,179,576 samples, 12.68%)</title><rect x="29.9152%" y="1269" width="12.6815%" height="15" fill="rgb(208,99,42)" fg:x="68833576" fg:w="29179576"/><text x="30.1652%" y="1279.50">&lt;T as alloc::slice:..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (29,179,576 samples, 12.68%)</title><rect x="29.9152%" y="1253" width="12.6815%" height="15" fill="rgb(253,99,2)" fg:x="68833576" fg:w="29179576"/><text x="30.1652%" y="1263.50">&lt;css_bitvector_comp..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (5,720,588 samples, 2.49%)</title><rect x="40.1106%" y="1237" width="2.4862%" height="15" fill="rgb(220,168,23)" fg:x="92292564" fg:w="5720588"/><text x="40.3606%" y="1247.50">&lt;s..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (5,720,588 samples, 2.49%)</title><rect x="40.1106%" y="1221" width="2.4862%" height="15" fill="rgb(242,38,24)" fg:x="92292564" fg:w="5720588"/><text x="40.3606%" y="1231.50">&lt;h..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5,720,588 samples, 2.49%)</title><rect x="40.1106%" y="1205" width="2.4862%" height="15" fill="rgb(225,182,9)" fg:x="92292564" fg:w="5720588"/><text x="40.3606%" y="1215.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,720,588 samples, 2.49%)</title><rect x="40.1106%" y="1189" width="2.4862%" height="15" fill="rgb(243,178,37)" fg:x="92292564" fg:w="5720588"/><text x="40.3606%" y="1199.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (5,720,588 samples, 2.49%)</title><rect x="40.1106%" y="1173" width="2.4862%" height="15" fill="rgb(232,139,19)" fg:x="92292564" fg:w="5720588"/><text x="40.3606%" y="1183.50">&lt;h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (5,720,588 samples, 2.49%)</title><rect x="40.1106%" y="1157" width="2.4862%" height="15" fill="rgb(225,201,24)" fg:x="92292564" fg:w="5720588"/><text x="40.3606%" y="1167.50">ha..</text></g><g><title>core::clone::Clone::clone (5,720,588 samples, 2.49%)</title><rect x="40.1106%" y="1141" width="2.4862%" height="15" fill="rgb(221,47,46)" fg:x="92292564" fg:w="5720588"/><text x="40.3606%" y="1151.50">co..</text></g><g><title>[unknown] (1,421,844 samples, 0.62%)</title><rect x="41.9788%" y="1125" width="0.6179%" height="15" fill="rgb(249,23,13)" fg:x="96591308" fg:w="1421844"/><text x="42.2288%" y="1135.50"></text></g><g><title>[libc.so.6] (1,421,844 samples, 0.62%)</title><rect x="41.9788%" y="1109" width="0.6179%" height="15" fill="rgb(219,9,5)" fg:x="96591308" fg:w="1421844"/><text x="42.2288%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (30,441,368 samples, 13.23%)</title><rect x="29.9152%" y="1397" width="13.2299%" height="15" fill="rgb(254,171,16)" fg:x="68833576" fg:w="30441368"/><text x="30.1652%" y="1407.50">&lt;alloc::vec::Vec&lt;T,A..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (30,441,368 samples, 13.23%)</title><rect x="29.9152%" y="1381" width="13.2299%" height="15" fill="rgb(230,171,20)" fg:x="68833576" fg:w="30441368"/><text x="30.1652%" y="1391.50">alloc::slice::&lt;impl ..</text></g><g><title>alloc::slice::hack::to_vec (30,441,368 samples, 13.23%)</title><rect x="29.9152%" y="1365" width="13.2299%" height="15" fill="rgb(210,71,41)" fg:x="68833576" fg:w="30441368"/><text x="30.1652%" y="1375.50">alloc::slice::hack::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (30,441,368 samples, 13.23%)</title><rect x="29.9152%" y="1349" width="13.2299%" height="15" fill="rgb(206,173,20)" fg:x="68833576" fg:w="30441368"/><text x="30.1652%" y="1359.50">&lt;T as alloc::slice::..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (30,441,368 samples, 13.23%)</title><rect x="29.9152%" y="1333" width="13.2299%" height="15" fill="rgb(233,88,34)" fg:x="68833576" fg:w="30441368"/><text x="30.1652%" y="1343.50">&lt;css_bitvector_compi..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,261,792 samples, 0.55%)</title><rect x="42.5967%" y="1317" width="0.5484%" height="15" fill="rgb(223,209,46)" fg:x="98013152" fg:w="1261792"/><text x="42.8467%" y="1327.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,261,792 samples, 0.55%)</title><rect x="42.5967%" y="1301" width="0.5484%" height="15" fill="rgb(250,43,18)" fg:x="98013152" fg:w="1261792"/><text x="42.8467%" y="1311.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,261,792 samples, 0.55%)</title><rect x="42.5967%" y="1285" width="0.5484%" height="15" fill="rgb(208,13,10)" fg:x="98013152" fg:w="1261792"/><text x="42.8467%" y="1295.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,261,792 samples, 0.55%)</title><rect x="42.5967%" y="1269" width="0.5484%" height="15" fill="rgb(212,200,36)" fg:x="98013152" fg:w="1261792"/><text x="42.8467%" y="1279.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,261,792 samples, 0.55%)</title><rect x="42.5967%" y="1253" width="0.5484%" height="15" fill="rgb(225,90,30)" fg:x="98013152" fg:w="1261792"/><text x="42.8467%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,261,792 samples, 0.55%)</title><rect x="42.5967%" y="1237" width="0.5484%" height="15" fill="rgb(236,182,39)" fg:x="98013152" fg:w="1261792"/><text x="42.8467%" y="1247.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,261,792 samples, 0.55%)</title><rect x="42.5967%" y="1221" width="0.5484%" height="15" fill="rgb(212,144,35)" fg:x="98013152" fg:w="1261792"/><text x="42.8467%" y="1231.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,286,890 samples, 0.56%)</title><rect x="43.1451%" y="1333" width="0.5593%" height="15" fill="rgb(228,63,44)" fg:x="99274944" fg:w="1286890"/><text x="43.3951%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,286,890 samples, 0.56%)</title><rect x="43.1451%" y="1317" width="0.5593%" height="15" fill="rgb(228,109,6)" fg:x="99274944" fg:w="1286890"/><text x="43.3951%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (1,286,890 samples, 0.56%)</title><rect x="43.1451%" y="1301" width="0.5593%" height="15" fill="rgb(238,117,24)" fg:x="99274944" fg:w="1286890"/><text x="43.3951%" y="1311.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (1,286,890 samples, 0.56%)</title><rect x="43.1451%" y="1285" width="0.5593%" height="15" fill="rgb(242,26,26)" fg:x="99274944" fg:w="1286890"/><text x="43.3951%" y="1295.50"></text></g><g><title>hashbrown::raw::offset_from (1,286,890 samples, 0.56%)</title><rect x="43.1451%" y="1269" width="0.5593%" height="15" fill="rgb(221,92,48)" fg:x="99274944" fg:w="1286890"/><text x="43.3951%" y="1279.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (1,286,890 samples, 0.56%)</title><rect x="43.1451%" y="1253" width="0.5593%" height="15" fill="rgb(209,209,32)" fg:x="99274944" fg:w="1286890"/><text x="43.3951%" y="1263.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (35,883,571 samples, 15.60%)</title><rect x="28.7663%" y="1413" width="15.5951%" height="15" fill="rgb(221,70,22)" fg:x="66189899" fg:w="35883571"/><text x="29.0163%" y="1423.50">&lt;css_bitvector_compiler:..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,798,526 samples, 1.22%)</title><rect x="43.1451%" y="1397" width="1.2162%" height="15" fill="rgb(248,145,5)" fg:x="99274944" fg:w="2798526"/><text x="43.3951%" y="1407.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,798,526 samples, 1.22%)</title><rect x="43.1451%" y="1381" width="1.2162%" height="15" fill="rgb(226,116,26)" fg:x="99274944" fg:w="2798526"/><text x="43.3951%" y="1391.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,798,526 samples, 1.22%)</title><rect x="43.1451%" y="1365" width="1.2162%" height="15" fill="rgb(244,5,17)" fg:x="99274944" fg:w="2798526"/><text x="43.3951%" y="1375.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,798,526 samples, 1.22%)</title><rect x="43.1451%" y="1349" width="1.2162%" height="15" fill="rgb(252,159,33)" fg:x="99274944" fg:w="2798526"/><text x="43.3951%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,511,636 samples, 0.66%)</title><rect x="43.7044%" y="1333" width="0.6570%" height="15" fill="rgb(206,71,0)" fg:x="100561834" fg:w="1511636"/><text x="43.9544%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,511,636 samples, 0.66%)</title><rect x="43.7044%" y="1317" width="0.6570%" height="15" fill="rgb(233,118,54)" fg:x="100561834" fg:w="1511636"/><text x="43.9544%" y="1327.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,511,636 samples, 0.66%)</title><rect x="43.7044%" y="1301" width="0.6570%" height="15" fill="rgb(234,83,48)" fg:x="100561834" fg:w="1511636"/><text x="43.9544%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,511,636 samples, 0.66%)</title><rect x="43.7044%" y="1285" width="0.6570%" height="15" fill="rgb(228,3,54)" fg:x="100561834" fg:w="1511636"/><text x="43.9544%" y="1295.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,511,636 samples, 0.66%)</title><rect x="43.7044%" y="1269" width="0.6570%" height="15" fill="rgb(226,155,13)" fg:x="100561834" fg:w="1511636"/><text x="43.9544%" y="1279.50"></text></g><g><title>alloc::alloc::alloc (1,511,636 samples, 0.66%)</title><rect x="43.7044%" y="1253" width="0.6570%" height="15" fill="rgb(241,28,37)" fg:x="100561834" fg:w="1511636"/><text x="43.9544%" y="1263.50"></text></g><g><title>malloc (1,511,636 samples, 0.66%)</title><rect x="43.7044%" y="1237" width="0.6570%" height="15" fill="rgb(233,93,10)" fg:x="100561834" fg:w="1511636"/><text x="43.9544%" y="1247.50"></text></g><g><title>[libc.so.6] (1,511,636 samples, 0.66%)</title><rect x="43.7044%" y="1221" width="0.6570%" height="15" fill="rgb(225,113,19)" fg:x="100561834" fg:w="1511636"/><text x="43.9544%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (36,972,702 samples, 16.07%)</title><rect x="28.7663%" y="1477" width="16.0684%" height="15" fill="rgb(241,2,18)" fg:x="66189899" fg:w="36972702"/><text x="29.0163%" y="1487.50">&lt;alloc::vec::Vec&lt;T,A&gt; as ..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (36,972,702 samples, 16.07%)</title><rect x="28.7663%" y="1461" width="16.0684%" height="15" fill="rgb(228,207,21)" fg:x="66189899" fg:w="36972702"/><text x="29.0163%" y="1471.50">alloc::slice::&lt;impl [T]&gt;:..</text></g><g><title>alloc::slice::hack::to_vec (36,972,702 samples, 16.07%)</title><rect x="28.7663%" y="1445" width="16.0684%" height="15" fill="rgb(213,211,35)" fg:x="66189899" fg:w="36972702"/><text x="29.0163%" y="1455.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (36,972,702 samples, 16.07%)</title><rect x="28.7663%" y="1429" width="16.0684%" height="15" fill="rgb(209,83,10)" fg:x="66189899" fg:w="36972702"/><text x="29.0163%" y="1439.50">&lt;T as alloc::slice::hack:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,089,131 samples, 0.47%)</title><rect x="44.3614%" y="1413" width="0.4733%" height="15" fill="rgb(209,164,1)" fg:x="102073470" fg:w="1089131"/><text x="44.6114%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,089,131 samples, 0.47%)</title><rect x="44.3614%" y="1397" width="0.4733%" height="15" fill="rgb(213,184,43)" fg:x="102073470" fg:w="1089131"/><text x="44.6114%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,089,131 samples, 0.47%)</title><rect x="44.3614%" y="1381" width="0.4733%" height="15" fill="rgb(231,61,34)" fg:x="102073470" fg:w="1089131"/><text x="44.6114%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,089,131 samples, 0.47%)</title><rect x="44.3614%" y="1365" width="0.4733%" height="15" fill="rgb(235,75,3)" fg:x="102073470" fg:w="1089131"/><text x="44.6114%" y="1375.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,089,131 samples, 0.47%)</title><rect x="44.3614%" y="1349" width="0.4733%" height="15" fill="rgb(220,106,47)" fg:x="102073470" fg:w="1089131"/><text x="44.6114%" y="1359.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,089,131 samples, 0.47%)</title><rect x="44.3614%" y="1333" width="0.4733%" height="15" fill="rgb(210,196,33)" fg:x="102073470" fg:w="1089131"/><text x="44.6114%" y="1343.50"></text></g><g><title>alloc::alloc::alloc (1,089,131 samples, 0.47%)</title><rect x="44.3614%" y="1317" width="0.4733%" height="15" fill="rgb(229,154,42)" fg:x="102073470" fg:w="1089131"/><text x="44.6114%" y="1327.50"></text></g><g><title>malloc (1,089,131 samples, 0.47%)</title><rect x="44.3614%" y="1301" width="0.4733%" height="15" fill="rgb(228,114,26)" fg:x="102073470" fg:w="1089131"/><text x="44.6114%" y="1311.50"></text></g><g><title>[libc.so.6] (1,089,131 samples, 0.47%)</title><rect x="44.3614%" y="1285" width="0.4733%" height="15" fill="rgb(208,144,1)" fg:x="102073470" fg:w="1089131"/><text x="44.6114%" y="1295.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,396,703 samples, 0.61%)</title><rect x="44.8347%" y="1413" width="0.6070%" height="15" fill="rgb(239,112,37)" fg:x="103162601" fg:w="1396703"/><text x="45.0847%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,396,703 samples, 0.61%)</title><rect x="44.8347%" y="1397" width="0.6070%" height="15" fill="rgb(210,96,50)" fg:x="103162601" fg:w="1396703"/><text x="45.0847%" y="1407.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1,396,703 samples, 0.61%)</title><rect x="44.8347%" y="1381" width="0.6070%" height="15" fill="rgb(222,178,2)" fg:x="103162601" fg:w="1396703"/><text x="45.0847%" y="1391.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1,396,703 samples, 0.61%)</title><rect x="44.8347%" y="1365" width="0.6070%" height="15" fill="rgb(226,74,18)" fg:x="103162601" fg:w="1396703"/><text x="45.0847%" y="1375.50"></text></g><g><title>core::ptr::write (1,396,703 samples, 0.61%)</title><rect x="44.8347%" y="1349" width="0.6070%" height="15" fill="rgb(225,67,54)" fg:x="103162601" fg:w="1396703"/><text x="45.0847%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (42,265,770 samples, 18.37%)</title><rect x="27.6548%" y="1557" width="18.3688%" height="15" fill="rgb(251,92,32)" fg:x="63632354" fg:w="42265770"/><text x="27.9048%" y="1567.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (42,265,770 samples, 18.37%)</title><rect x="27.6548%" y="1541" width="18.3688%" height="15" fill="rgb(228,149,22)" fg:x="63632354" fg:w="42265770"/><text x="27.9048%" y="1551.50">alloc::slice::&lt;impl [T]&gt;::to_..</text></g><g><title>alloc::slice::hack::to_vec (42,265,770 samples, 18.37%)</title><rect x="27.6548%" y="1525" width="18.3688%" height="15" fill="rgb(243,54,13)" fg:x="63632354" fg:w="42265770"/><text x="27.9048%" y="1535.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (42,265,770 samples, 18.37%)</title><rect x="27.6548%" y="1509" width="18.3688%" height="15" fill="rgb(243,180,28)" fg:x="63632354" fg:w="42265770"/><text x="27.9048%" y="1519.50">&lt;T as alloc::slice::hack::Con..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (42,265,770 samples, 18.37%)</title><rect x="27.6548%" y="1493" width="18.3688%" height="15" fill="rgb(208,167,24)" fg:x="63632354" fg:w="42265770"/><text x="27.9048%" y="1503.50">&lt;css_bitvector_compiler::Html..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,735,523 samples, 1.19%)</title><rect x="44.8347%" y="1477" width="1.1889%" height="15" fill="rgb(245,73,45)" fg:x="103162601" fg:w="2735523"/><text x="45.0847%" y="1487.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,735,523 samples, 1.19%)</title><rect x="44.8347%" y="1461" width="1.1889%" height="15" fill="rgb(237,203,48)" fg:x="103162601" fg:w="2735523"/><text x="45.0847%" y="1471.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,735,523 samples, 1.19%)</title><rect x="44.8347%" y="1445" width="1.1889%" height="15" fill="rgb(211,197,16)" fg:x="103162601" fg:w="2735523"/><text x="45.0847%" y="1455.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,735,523 samples, 1.19%)</title><rect x="44.8347%" y="1429" width="1.1889%" height="15" fill="rgb(243,99,51)" fg:x="103162601" fg:w="2735523"/><text x="45.0847%" y="1439.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (1,338,820 samples, 0.58%)</title><rect x="45.4417%" y="1413" width="0.5819%" height="15" fill="rgb(215,123,29)" fg:x="104559304" fg:w="1338820"/><text x="45.6917%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1,338,820 samples, 0.58%)</title><rect x="45.4417%" y="1397" width="0.5819%" height="15" fill="rgb(239,186,37)" fg:x="104559304" fg:w="1338820"/><text x="45.6917%" y="1407.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1,338,820 samples, 0.58%)</title><rect x="45.4417%" y="1381" width="0.5819%" height="15" fill="rgb(252,136,39)" fg:x="104559304" fg:w="1338820"/><text x="45.6917%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,338,820 samples, 0.58%)</title><rect x="45.4417%" y="1365" width="0.5819%" height="15" fill="rgb(223,213,32)" fg:x="104559304" fg:w="1338820"/><text x="45.6917%" y="1375.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,338,820 samples, 0.58%)</title><rect x="45.4417%" y="1349" width="0.5819%" height="15" fill="rgb(233,115,5)" fg:x="104559304" fg:w="1338820"/><text x="45.6917%" y="1359.50"></text></g><g><title>alloc::alloc::alloc (1,338,820 samples, 0.58%)</title><rect x="45.4417%" y="1333" width="0.5819%" height="15" fill="rgb(207,226,44)" fg:x="104559304" fg:w="1338820"/><text x="45.6917%" y="1343.50"></text></g><g><title>malloc (1,338,820 samples, 0.58%)</title><rect x="45.4417%" y="1317" width="0.5819%" height="15" fill="rgb(208,126,0)" fg:x="104559304" fg:w="1338820"/><text x="45.6917%" y="1327.50"></text></g><g><title>[libc.so.6] (1,338,820 samples, 0.58%)</title><rect x="45.4417%" y="1301" width="0.5819%" height="15" fill="rgb(244,66,21)" fg:x="104559304" fg:w="1338820"/><text x="45.6917%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (43,465,649 samples, 18.89%)</title><rect x="27.6548%" y="1637" width="18.8903%" height="15" fill="rgb(222,97,12)" fg:x="63632354" fg:w="43465649"/><text x="27.9048%" y="1647.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (43,465,649 samples, 18.89%)</title><rect x="27.6548%" y="1621" width="18.8903%" height="15" fill="rgb(219,213,19)" fg:x="63632354" fg:w="43465649"/><text x="27.9048%" y="1631.50">alloc::slice::&lt;impl [T]&gt;::to_v..</text></g><g><title>alloc::slice::hack::to_vec (43,465,649 samples, 18.89%)</title><rect x="27.6548%" y="1605" width="18.8903%" height="15" fill="rgb(252,169,30)" fg:x="63632354" fg:w="43465649"/><text x="27.9048%" y="1615.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (43,465,649 samples, 18.89%)</title><rect x="27.6548%" y="1589" width="18.8903%" height="15" fill="rgb(206,32,51)" fg:x="63632354" fg:w="43465649"/><text x="27.9048%" y="1599.50">&lt;T as alloc::slice::hack::Conv..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (43,465,649 samples, 18.89%)</title><rect x="27.6548%" y="1573" width="18.8903%" height="15" fill="rgb(250,172,42)" fg:x="63632354" fg:w="43465649"/><text x="27.9048%" y="1583.50">&lt;css_bitvector_compiler::HtmlN..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,199,879 samples, 0.52%)</title><rect x="46.0236%" y="1557" width="0.5215%" height="15" fill="rgb(209,34,43)" fg:x="105898124" fg:w="1199879"/><text x="46.2736%" y="1567.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,199,879 samples, 0.52%)</title><rect x="46.0236%" y="1541" width="0.5215%" height="15" fill="rgb(223,11,35)" fg:x="105898124" fg:w="1199879"/><text x="46.2736%" y="1551.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,199,879 samples, 0.52%)</title><rect x="46.0236%" y="1525" width="0.5215%" height="15" fill="rgb(251,219,26)" fg:x="105898124" fg:w="1199879"/><text x="46.2736%" y="1535.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,199,879 samples, 0.52%)</title><rect x="46.0236%" y="1509" width="0.5215%" height="15" fill="rgb(231,119,3)" fg:x="105898124" fg:w="1199879"/><text x="46.2736%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTableInner::buckets (1,199,879 samples, 0.52%)</title><rect x="46.0236%" y="1493" width="0.5215%" height="15" fill="rgb(216,97,11)" fg:x="105898124" fg:w="1199879"/><text x="46.2736%" y="1503.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,503,775 samples, 1.09%)</title><rect x="46.5450%" y="1637" width="1.0881%" height="15" fill="rgb(223,59,9)" fg:x="107098003" fg:w="2503775"/><text x="46.7950%" y="1647.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,351,175 samples, 0.59%)</title><rect x="47.0459%" y="1621" width="0.5872%" height="15" fill="rgb(233,93,31)" fg:x="108250603" fg:w="1351175"/><text x="47.2959%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,351,175 samples, 0.59%)</title><rect x="47.0459%" y="1605" width="0.5872%" height="15" fill="rgb(239,81,33)" fg:x="108250603" fg:w="1351175"/><text x="47.2959%" y="1615.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,351,175 samples, 0.59%)</title><rect x="47.0459%" y="1589" width="0.5872%" height="15" fill="rgb(213,120,34)" fg:x="108250603" fg:w="1351175"/><text x="47.2959%" y="1599.50"></text></g><g><title>alloc::slice::hack::to_vec (1,351,175 samples, 0.59%)</title><rect x="47.0459%" y="1573" width="0.5872%" height="15" fill="rgb(243,49,53)" fg:x="108250603" fg:w="1351175"/><text x="47.2959%" y="1583.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,351,175 samples, 0.59%)</title><rect x="47.0459%" y="1557" width="0.5872%" height="15" fill="rgb(247,216,33)" fg:x="108250603" fg:w="1351175"/><text x="47.2959%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,351,175 samples, 0.59%)</title><rect x="47.0459%" y="1541" width="0.5872%" height="15" fill="rgb(226,26,14)" fg:x="108250603" fg:w="1351175"/><text x="47.2959%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,351,175 samples, 0.59%)</title><rect x="47.0459%" y="1525" width="0.5872%" height="15" fill="rgb(215,49,53)" fg:x="108250603" fg:w="1351175"/><text x="47.2959%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,351,175 samples, 0.59%)</title><rect x="47.0459%" y="1509" width="0.5872%" height="15" fill="rgb(245,162,40)" fg:x="108250603" fg:w="1351175"/><text x="47.2959%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,351,175 samples, 0.59%)</title><rect x="47.0459%" y="1493" width="0.5872%" height="15" fill="rgb(229,68,17)" fg:x="108250603" fg:w="1351175"/><text x="47.2959%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,351,175 samples, 0.59%)</title><rect x="47.0459%" y="1477" width="0.5872%" height="15" fill="rgb(213,182,10)" fg:x="108250603" fg:w="1351175"/><text x="47.2959%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,351,175 samples, 0.59%)</title><rect x="47.0459%" y="1461" width="0.5872%" height="15" fill="rgb(245,125,30)" fg:x="108250603" fg:w="1351175"/><text x="47.2959%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (1,351,175 samples, 0.59%)</title><rect x="47.0459%" y="1445" width="0.5872%" height="15" fill="rgb(232,202,2)" fg:x="108250603" fg:w="1351175"/><text x="47.2959%" y="1455.50"></text></g><g><title>malloc (1,351,175 samples, 0.59%)</title><rect x="47.0459%" y="1429" width="0.5872%" height="15" fill="rgb(237,140,51)" fg:x="108250603" fg:w="1351175"/><text x="47.2959%" y="1439.50"></text></g><g><title>[libc.so.6] (1,351,175 samples, 0.59%)</title><rect x="47.0459%" y="1413" width="0.5872%" height="15" fill="rgb(236,157,25)" fg:x="108250603" fg:w="1351175"/><text x="47.2959%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,431,357 samples, 0.62%)</title><rect x="47.6332%" y="1557" width="0.6221%" height="15" fill="rgb(219,209,0)" fg:x="109601778" fg:w="1431357"/><text x="47.8832%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,431,357 samples, 0.62%)</title><rect x="47.6332%" y="1541" width="0.6221%" height="15" fill="rgb(240,116,54)" fg:x="109601778" fg:w="1431357"/><text x="47.8832%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,431,357 samples, 0.62%)</title><rect x="47.6332%" y="1525" width="0.6221%" height="15" fill="rgb(216,10,36)" fg:x="109601778" fg:w="1431357"/><text x="47.8832%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,431,357 samples, 0.62%)</title><rect x="47.6332%" y="1509" width="0.6221%" height="15" fill="rgb(222,72,44)" fg:x="109601778" fg:w="1431357"/><text x="47.8832%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,431,357 samples, 0.62%)</title><rect x="47.6332%" y="1493" width="0.6221%" height="15" fill="rgb(232,159,9)" fg:x="109601778" fg:w="1431357"/><text x="47.8832%" y="1503.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,431,357 samples, 0.62%)</title><rect x="47.6332%" y="1477" width="0.6221%" height="15" fill="rgb(210,39,32)" fg:x="109601778" fg:w="1431357"/><text x="47.8832%" y="1487.50"></text></g><g><title>alloc::alloc::alloc (1,431,357 samples, 0.62%)</title><rect x="47.6332%" y="1461" width="0.6221%" height="15" fill="rgb(216,194,45)" fg:x="109601778" fg:w="1431357"/><text x="47.8832%" y="1471.50"></text></g><g><title>malloc (1,431,357 samples, 0.62%)</title><rect x="47.6332%" y="1445" width="0.6221%" height="15" fill="rgb(218,18,35)" fg:x="109601778" fg:w="1431357"/><text x="47.8832%" y="1455.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (54,563,957 samples, 23.71%)</title><rect x="25.2178%" y="1653" width="23.7136%" height="15" fill="rgb(207,83,51)" fg:x="58025089" fg:w="54563957"/><text x="25.4678%" y="1663.50">&lt;css_bitvector_compiler::HtmlNode as c..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,987,268 samples, 1.30%)</title><rect x="47.6332%" y="1637" width="1.2983%" height="15" fill="rgb(225,63,43)" fg:x="109601778" fg:w="2987268"/><text x="47.8832%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,987,268 samples, 1.30%)</title><rect x="47.6332%" y="1621" width="1.2983%" height="15" fill="rgb(207,57,36)" fg:x="109601778" fg:w="2987268"/><text x="47.8832%" y="1631.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,987,268 samples, 1.30%)</title><rect x="47.6332%" y="1605" width="1.2983%" height="15" fill="rgb(216,99,33)" fg:x="109601778" fg:w="2987268"/><text x="47.8832%" y="1615.50"></text></g><g><title>alloc::slice::hack::to_vec (2,987,268 samples, 1.30%)</title><rect x="47.6332%" y="1589" width="1.2983%" height="15" fill="rgb(225,42,16)" fg:x="109601778" fg:w="2987268"/><text x="47.8832%" y="1599.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,987,268 samples, 1.30%)</title><rect x="47.6332%" y="1573" width="1.2983%" height="15" fill="rgb(220,201,45)" fg:x="109601778" fg:w="2987268"/><text x="47.8832%" y="1583.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,555,911 samples, 0.68%)</title><rect x="48.2552%" y="1557" width="0.6762%" height="15" fill="rgb(225,33,4)" fg:x="111033135" fg:w="1555911"/><text x="48.5052%" y="1567.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,555,911 samples, 0.68%)</title><rect x="48.2552%" y="1541" width="0.6762%" height="15" fill="rgb(224,33,50)" fg:x="111033135" fg:w="1555911"/><text x="48.5052%" y="1551.50"></text></g><g><title>[libc.so.6] (1,555,911 samples, 0.68%)</title><rect x="48.2552%" y="1525" width="0.6762%" height="15" fill="rgb(246,198,51)" fg:x="111033135" fg:w="1555911"/><text x="48.5052%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (55,821,395 samples, 24.26%)</title><rect x="25.2178%" y="1717" width="24.2601%" height="15" fill="rgb(205,22,4)" fg:x="58025089" fg:w="55821395"/><text x="25.4678%" y="1727.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::C..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (55,821,395 samples, 24.26%)</title><rect x="25.2178%" y="1701" width="24.2601%" height="15" fill="rgb(206,3,8)" fg:x="58025089" fg:w="55821395"/><text x="25.4678%" y="1711.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (55,821,395 samples, 24.26%)</title><rect x="25.2178%" y="1685" width="24.2601%" height="15" fill="rgb(251,23,15)" fg:x="58025089" fg:w="55821395"/><text x="25.4678%" y="1695.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (55,821,395 samples, 24.26%)</title><rect x="25.2178%" y="1669" width="24.2601%" height="15" fill="rgb(252,88,28)" fg:x="58025089" fg:w="55821395"/><text x="25.4678%" y="1679.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,257,438 samples, 0.55%)</title><rect x="48.9314%" y="1653" width="0.5465%" height="15" fill="rgb(212,127,14)" fg:x="112589046" fg:w="1257438"/><text x="49.1814%" y="1663.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,722,703 samples, 1.18%)</title><rect x="49.4779%" y="1717" width="1.1833%" height="15" fill="rgb(247,145,37)" fg:x="113846484" fg:w="2722703"/><text x="49.7279%" y="1727.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,722,703 samples, 1.18%)</title><rect x="49.4779%" y="1701" width="1.1833%" height="15" fill="rgb(209,117,53)" fg:x="113846484" fg:w="2722703"/><text x="49.7279%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,722,703 samples, 1.18%)</title><rect x="49.4779%" y="1685" width="1.1833%" height="15" fill="rgb(212,90,42)" fg:x="113846484" fg:w="2722703"/><text x="49.7279%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,722,703 samples, 1.18%)</title><rect x="49.4779%" y="1669" width="1.1833%" height="15" fill="rgb(218,164,37)" fg:x="113846484" fg:w="2722703"/><text x="49.7279%" y="1679.50"></text></g><g><title>alloc::slice::hack::to_vec (2,722,703 samples, 1.18%)</title><rect x="49.4779%" y="1653" width="1.1833%" height="15" fill="rgb(246,65,34)" fg:x="113846484" fg:w="2722703"/><text x="49.7279%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,722,703 samples, 1.18%)</title><rect x="49.4779%" y="1637" width="1.1833%" height="15" fill="rgb(231,100,33)" fg:x="113846484" fg:w="2722703"/><text x="49.7279%" y="1647.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,722,703 samples, 1.18%)</title><rect x="49.4779%" y="1621" width="1.1833%" height="15" fill="rgb(228,126,14)" fg:x="113846484" fg:w="2722703"/><text x="49.7279%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,722,703 samples, 1.18%)</title><rect x="49.4779%" y="1605" width="1.1833%" height="15" fill="rgb(215,173,21)" fg:x="113846484" fg:w="2722703"/><text x="49.7279%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,722,703 samples, 1.18%)</title><rect x="49.4779%" y="1589" width="1.1833%" height="15" fill="rgb(210,6,40)" fg:x="113846484" fg:w="2722703"/><text x="49.7279%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,722,703 samples, 1.18%)</title><rect x="49.4779%" y="1573" width="1.1833%" height="15" fill="rgb(212,48,18)" fg:x="113846484" fg:w="2722703"/><text x="49.7279%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,722,703 samples, 1.18%)</title><rect x="49.4779%" y="1557" width="1.1833%" height="15" fill="rgb(230,214,11)" fg:x="113846484" fg:w="2722703"/><text x="49.7279%" y="1567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,722,703 samples, 1.18%)</title><rect x="49.4779%" y="1541" width="1.1833%" height="15" fill="rgb(254,105,39)" fg:x="113846484" fg:w="2722703"/><text x="49.7279%" y="1551.50"></text></g><g><title>alloc::alloc::alloc (2,722,703 samples, 1.18%)</title><rect x="49.4779%" y="1525" width="1.1833%" height="15" fill="rgb(245,158,5)" fg:x="113846484" fg:w="2722703"/><text x="49.7279%" y="1535.50"></text></g><g><title>malloc (2,722,703 samples, 1.18%)</title><rect x="49.4779%" y="1509" width="1.1833%" height="15" fill="rgb(249,208,11)" fg:x="113846484" fg:w="2722703"/><text x="49.7279%" y="1519.50"></text></g><g><title>[libc.so.6] (1,368,166 samples, 0.59%)</title><rect x="50.0666%" y="1493" width="0.5946%" height="15" fill="rgb(210,39,28)" fg:x="115201021" fg:w="1368166"/><text x="50.3166%" y="1503.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,719,050 samples, 1.18%)</title><rect x="50.6612%" y="1717" width="1.1817%" height="15" fill="rgb(211,56,53)" fg:x="116569187" fg:w="2719050"/><text x="50.9112%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,719,050 samples, 1.18%)</title><rect x="50.6612%" y="1701" width="1.1817%" height="15" fill="rgb(226,201,30)" fg:x="116569187" fg:w="2719050"/><text x="50.9112%" y="1711.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,719,050 samples, 1.18%)</title><rect x="50.6612%" y="1685" width="1.1817%" height="15" fill="rgb(239,101,34)" fg:x="116569187" fg:w="2719050"/><text x="50.9112%" y="1695.50"></text></g><g><title>alloc::slice::hack::to_vec (2,719,050 samples, 1.18%)</title><rect x="50.6612%" y="1669" width="1.1817%" height="15" fill="rgb(226,209,5)" fg:x="116569187" fg:w="2719050"/><text x="50.9112%" y="1679.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,719,050 samples, 1.18%)</title><rect x="50.6612%" y="1653" width="1.1817%" height="15" fill="rgb(250,105,47)" fg:x="116569187" fg:w="2719050"/><text x="50.9112%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,719,050 samples, 1.18%)</title><rect x="50.6612%" y="1637" width="1.1817%" height="15" fill="rgb(230,72,3)" fg:x="116569187" fg:w="2719050"/><text x="50.9112%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,719,050 samples, 1.18%)</title><rect x="50.6612%" y="1621" width="1.1817%" height="15" fill="rgb(232,218,39)" fg:x="116569187" fg:w="2719050"/><text x="50.9112%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,719,050 samples, 1.18%)</title><rect x="50.6612%" y="1605" width="1.1817%" height="15" fill="rgb(248,166,6)" fg:x="116569187" fg:w="2719050"/><text x="50.9112%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,719,050 samples, 1.18%)</title><rect x="50.6612%" y="1589" width="1.1817%" height="15" fill="rgb(247,89,20)" fg:x="116569187" fg:w="2719050"/><text x="50.9112%" y="1599.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,719,050 samples, 1.18%)</title><rect x="50.6612%" y="1573" width="1.1817%" height="15" fill="rgb(248,130,54)" fg:x="116569187" fg:w="2719050"/><text x="50.9112%" y="1583.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,719,050 samples, 1.18%)</title><rect x="50.6612%" y="1557" width="1.1817%" height="15" fill="rgb(234,196,4)" fg:x="116569187" fg:w="2719050"/><text x="50.9112%" y="1567.50"></text></g><g><title>alloc::alloc::alloc (2,719,050 samples, 1.18%)</title><rect x="50.6612%" y="1541" width="1.1817%" height="15" fill="rgb(250,143,31)" fg:x="116569187" fg:w="2719050"/><text x="50.9112%" y="1551.50"></text></g><g><title>malloc (2,719,050 samples, 1.18%)</title><rect x="50.6612%" y="1525" width="1.1817%" height="15" fill="rgb(211,110,34)" fg:x="116569187" fg:w="2719050"/><text x="50.9112%" y="1535.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (67,084,371 samples, 29.16%)</title><rect x="23.2878%" y="1733" width="29.1550%" height="15" fill="rgb(215,124,48)" fg:x="53584175" fg:w="67084371"/><text x="23.5378%" y="1743.50">&lt;css_bitvector_compiler::HtmlNode as core::clon..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,380,309 samples, 0.60%)</title><rect x="51.8429%" y="1717" width="0.5999%" height="15" fill="rgb(216,46,13)" fg:x="119288237" fg:w="1380309"/><text x="52.0929%" y="1727.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,380,309 samples, 0.60%)</title><rect x="51.8429%" y="1701" width="0.5999%" height="15" fill="rgb(205,184,25)" fg:x="119288237" fg:w="1380309"/><text x="52.0929%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (71,746,465 samples, 31.18%)</title><rect x="21.9457%" y="1877" width="31.1812%" height="15" fill="rgb(228,1,10)" fg:x="50496040" fg:w="71746465"/><text x="22.1957%" y="1887.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (71,746,465 samples, 31.18%)</title><rect x="21.9457%" y="1861" width="31.1812%" height="15" fill="rgb(213,116,27)" fg:x="50496040" fg:w="71746465"/><text x="22.1957%" y="1871.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (71,746,465 samples, 31.18%)</title><rect x="21.9457%" y="1845" width="31.1812%" height="15" fill="rgb(241,95,50)" fg:x="50496040" fg:w="71746465"/><text x="22.1957%" y="1855.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (71,746,465 samples, 31.18%)</title><rect x="21.9457%" y="1829" width="31.1812%" height="15" fill="rgb(238,48,32)" fg:x="50496040" fg:w="71746465"/><text x="22.1957%" y="1839.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (71,746,465 samples, 31.18%)</title><rect x="21.9457%" y="1813" width="31.1812%" height="15" fill="rgb(235,113,49)" fg:x="50496040" fg:w="71746465"/><text x="22.1957%" y="1823.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (68,658,330 samples, 29.84%)</title><rect x="23.2878%" y="1797" width="29.8391%" height="15" fill="rgb(205,127,43)" fg:x="53584175" fg:w="68658330"/><text x="23.5378%" y="1807.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::cl..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (68,658,330 samples, 29.84%)</title><rect x="23.2878%" y="1781" width="29.8391%" height="15" fill="rgb(250,162,2)" fg:x="53584175" fg:w="68658330"/><text x="23.5378%" y="1791.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (68,658,330 samples, 29.84%)</title><rect x="23.2878%" y="1765" width="29.8391%" height="15" fill="rgb(220,13,41)" fg:x="53584175" fg:w="68658330"/><text x="23.5378%" y="1775.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (68,658,330 samples, 29.84%)</title><rect x="23.2878%" y="1749" width="29.8391%" height="15" fill="rgb(249,221,25)" fg:x="53584175" fg:w="68658330"/><text x="23.5378%" y="1759.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,573,959 samples, 0.68%)</title><rect x="52.4428%" y="1733" width="0.6840%" height="15" fill="rgb(215,208,19)" fg:x="120668546" fg:w="1573959"/><text x="52.6928%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (74,406,621 samples, 32.34%)</title><rect x="21.3414%" y="1957" width="32.3373%" height="15" fill="rgb(236,175,2)" fg:x="49105569" fg:w="74406621"/><text x="21.5914%" y="1967.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (74,406,621 samples, 32.34%)</title><rect x="21.3414%" y="1941" width="32.3373%" height="15" fill="rgb(241,52,2)" fg:x="49105569" fg:w="74406621"/><text x="21.5914%" y="1951.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (74,406,621 samples, 32.34%)</title><rect x="21.3414%" y="1925" width="32.3373%" height="15" fill="rgb(248,140,14)" fg:x="49105569" fg:w="74406621"/><text x="21.5914%" y="1935.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (74,406,621 samples, 32.34%)</title><rect x="21.3414%" y="1909" width="32.3373%" height="15" fill="rgb(253,22,42)" fg:x="49105569" fg:w="74406621"/><text x="21.5914%" y="1919.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (74,406,621 samples, 32.34%)</title><rect x="21.3414%" y="1893" width="32.3373%" height="15" fill="rgb(234,61,47)" fg:x="49105569" fg:w="74406621"/><text x="21.5914%" y="1903.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Cl..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,269,685 samples, 0.55%)</title><rect x="53.1269%" y="1877" width="0.5518%" height="15" fill="rgb(208,226,15)" fg:x="122242505" fg:w="1269685"/><text x="53.3769%" y="1887.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,269,685 samples, 0.55%)</title><rect x="53.1269%" y="1861" width="0.5518%" height="15" fill="rgb(217,221,4)" fg:x="122242505" fg:w="1269685"/><text x="53.3769%" y="1871.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,269,685 samples, 0.55%)</title><rect x="53.1269%" y="1845" width="0.5518%" height="15" fill="rgb(212,174,34)" fg:x="122242505" fg:w="1269685"/><text x="53.3769%" y="1855.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,269,685 samples, 0.55%)</title><rect x="53.1269%" y="1829" width="0.5518%" height="15" fill="rgb(253,83,4)" fg:x="122242505" fg:w="1269685"/><text x="53.3769%" y="1839.50"></text></g><g><title>alloc::slice::hack::to_vec (1,269,685 samples, 0.55%)</title><rect x="53.1269%" y="1813" width="0.5518%" height="15" fill="rgb(250,195,49)" fg:x="122242505" fg:w="1269685"/><text x="53.3769%" y="1823.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,269,685 samples, 0.55%)</title><rect x="53.1269%" y="1797" width="0.5518%" height="15" fill="rgb(241,192,25)" fg:x="122242505" fg:w="1269685"/><text x="53.3769%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,269,685 samples, 0.55%)</title><rect x="53.1269%" y="1781" width="0.5518%" height="15" fill="rgb(208,124,10)" fg:x="122242505" fg:w="1269685"/><text x="53.3769%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,269,685 samples, 0.55%)</title><rect x="53.1269%" y="1765" width="0.5518%" height="15" fill="rgb(222,33,0)" fg:x="122242505" fg:w="1269685"/><text x="53.3769%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,269,685 samples, 0.55%)</title><rect x="53.1269%" y="1749" width="0.5518%" height="15" fill="rgb(234,209,28)" fg:x="122242505" fg:w="1269685"/><text x="53.3769%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,269,685 samples, 0.55%)</title><rect x="53.1269%" y="1733" width="0.5518%" height="15" fill="rgb(224,11,23)" fg:x="122242505" fg:w="1269685"/><text x="53.3769%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,269,685 samples, 0.55%)</title><rect x="53.1269%" y="1717" width="0.5518%" height="15" fill="rgb(232,99,1)" fg:x="122242505" fg:w="1269685"/><text x="53.3769%" y="1727.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,269,685 samples, 0.55%)</title><rect x="53.1269%" y="1701" width="0.5518%" height="15" fill="rgb(237,95,45)" fg:x="122242505" fg:w="1269685"/><text x="53.3769%" y="1711.50"></text></g><g><title>alloc::alloc::alloc (1,269,685 samples, 0.55%)</title><rect x="53.1269%" y="1685" width="0.5518%" height="15" fill="rgb(208,109,11)" fg:x="122242505" fg:w="1269685"/><text x="53.3769%" y="1695.50"></text></g><g><title>malloc (1,269,685 samples, 0.55%)</title><rect x="53.1269%" y="1669" width="0.5518%" height="15" fill="rgb(216,190,48)" fg:x="122242505" fg:w="1269685"/><text x="53.3769%" y="1679.50"></text></g><g><title>[libc.so.6] (1,269,685 samples, 0.55%)</title><rect x="53.1269%" y="1653" width="0.5518%" height="15" fill="rgb(251,171,36)" fg:x="122242505" fg:w="1269685"/><text x="53.3769%" y="1663.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (75,715,860 samples, 32.91%)</title><rect x="21.3414%" y="1973" width="32.9063%" height="15" fill="rgb(230,62,22)" fg:x="49105569" fg:w="75715860"/><text x="21.5914%" y="1983.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clo..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (1,309,239 samples, 0.57%)</title><rect x="53.6787%" y="1957" width="0.5690%" height="15" fill="rgb(225,114,35)" fg:x="123512190" fg:w="1309239"/><text x="53.9287%" y="1967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,309,239 samples, 0.57%)</title><rect x="53.6787%" y="1941" width="0.5690%" height="15" fill="rgb(215,118,42)" fg:x="123512190" fg:w="1309239"/><text x="53.9287%" y="1951.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,309,239 samples, 0.57%)</title><rect x="53.6787%" y="1925" width="0.5690%" height="15" fill="rgb(243,119,21)" fg:x="123512190" fg:w="1309239"/><text x="53.9287%" y="1935.50"></text></g><g><title>alloc::slice::hack::to_vec (1,309,239 samples, 0.57%)</title><rect x="53.6787%" y="1909" width="0.5690%" height="15" fill="rgb(252,177,53)" fg:x="123512190" fg:w="1309239"/><text x="53.9287%" y="1919.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,309,239 samples, 0.57%)</title><rect x="53.6787%" y="1893" width="0.5690%" height="15" fill="rgb(237,209,29)" fg:x="123512190" fg:w="1309239"/><text x="53.9287%" y="1903.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,309,239 samples, 0.57%)</title><rect x="53.6787%" y="1877" width="0.5690%" height="15" fill="rgb(212,65,23)" fg:x="123512190" fg:w="1309239"/><text x="53.9287%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,309,239 samples, 0.57%)</title><rect x="53.6787%" y="1861" width="0.5690%" height="15" fill="rgb(230,222,46)" fg:x="123512190" fg:w="1309239"/><text x="53.9287%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,309,239 samples, 0.57%)</title><rect x="53.6787%" y="1845" width="0.5690%" height="15" fill="rgb(215,135,32)" fg:x="123512190" fg:w="1309239"/><text x="53.9287%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,309,239 samples, 0.57%)</title><rect x="53.6787%" y="1829" width="0.5690%" height="15" fill="rgb(246,101,22)" fg:x="123512190" fg:w="1309239"/><text x="53.9287%" y="1839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,309,239 samples, 0.57%)</title><rect x="53.6787%" y="1813" width="0.5690%" height="15" fill="rgb(206,107,13)" fg:x="123512190" fg:w="1309239"/><text x="53.9287%" y="1823.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,309,239 samples, 0.57%)</title><rect x="53.6787%" y="1797" width="0.5690%" height="15" fill="rgb(250,100,44)" fg:x="123512190" fg:w="1309239"/><text x="53.9287%" y="1807.50"></text></g><g><title>alloc::alloc::alloc (1,309,239 samples, 0.57%)</title><rect x="53.6787%" y="1781" width="0.5690%" height="15" fill="rgb(231,147,38)" fg:x="123512190" fg:w="1309239"/><text x="53.9287%" y="1791.50"></text></g><g><title>malloc (1,309,239 samples, 0.57%)</title><rect x="53.6787%" y="1765" width="0.5690%" height="15" fill="rgb(229,8,40)" fg:x="123512190" fg:w="1309239"/><text x="53.9287%" y="1775.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (78,169,364 samples, 33.97%)</title><rect x="21.3414%" y="2213" width="33.9726%" height="15" fill="rgb(221,135,30)" fg:x="49105569" fg:w="78169364"/><text x="21.5914%" y="2223.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (78,169,364 samples, 33.97%)</title><rect x="21.3414%" y="2197" width="33.9726%" height="15" fill="rgb(249,193,18)" fg:x="49105569" fg:w="78169364"/><text x="21.5914%" y="2207.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (78,169,364 samples, 33.97%)</title><rect x="21.3414%" y="2181" width="33.9726%" height="15" fill="rgb(209,133,39)" fg:x="49105569" fg:w="78169364"/><text x="21.5914%" y="2191.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (78,169,364 samples, 33.97%)</title><rect x="21.3414%" y="2165" width="33.9726%" height="15" fill="rgb(232,100,14)" fg:x="49105569" fg:w="78169364"/><text x="21.5914%" y="2175.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (78,169,364 samples, 33.97%)</title><rect x="21.3414%" y="2149" width="33.9726%" height="15" fill="rgb(224,185,1)" fg:x="49105569" fg:w="78169364"/><text x="21.5914%" y="2159.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (78,169,364 samples, 33.97%)</title><rect x="21.3414%" y="2133" width="33.9726%" height="15" fill="rgb(223,139,8)" fg:x="49105569" fg:w="78169364"/><text x="21.5914%" y="2143.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (78,169,364 samples, 33.97%)</title><rect x="21.3414%" y="2117" width="33.9726%" height="15" fill="rgb(232,213,38)" fg:x="49105569" fg:w="78169364"/><text x="21.5914%" y="2127.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (78,169,364 samples, 33.97%)</title><rect x="21.3414%" y="2101" width="33.9726%" height="15" fill="rgb(207,94,22)" fg:x="49105569" fg:w="78169364"/><text x="21.5914%" y="2111.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (78,169,364 samples, 33.97%)</title><rect x="21.3414%" y="2085" width="33.9726%" height="15" fill="rgb(219,183,54)" fg:x="49105569" fg:w="78169364"/><text x="21.5914%" y="2095.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (78,169,364 samples, 33.97%)</title><rect x="21.3414%" y="2069" width="33.9726%" height="15" fill="rgb(216,185,54)" fg:x="49105569" fg:w="78169364"/><text x="21.5914%" y="2079.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (78,169,364 samples, 33.97%)</title><rect x="21.3414%" y="2053" width="33.9726%" height="15" fill="rgb(254,217,39)" fg:x="49105569" fg:w="78169364"/><text x="21.5914%" y="2063.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (78,169,364 samples, 33.97%)</title><rect x="21.3414%" y="2037" width="33.9726%" height="15" fill="rgb(240,178,23)" fg:x="49105569" fg:w="78169364"/><text x="21.5914%" y="2047.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (78,169,364 samples, 33.97%)</title><rect x="21.3414%" y="2021" width="33.9726%" height="15" fill="rgb(218,11,47)" fg:x="49105569" fg:w="78169364"/><text x="21.5914%" y="2031.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (78,169,364 samples, 33.97%)</title><rect x="21.3414%" y="2005" width="33.9726%" height="15" fill="rgb(218,51,51)" fg:x="49105569" fg:w="78169364"/><text x="21.5914%" y="2015.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (78,169,364 samples, 33.97%)</title><rect x="21.3414%" y="1989" width="33.9726%" height="15" fill="rgb(238,126,27)" fg:x="49105569" fg:w="78169364"/><text x="21.5914%" y="1999.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,453,504 samples, 1.07%)</title><rect x="54.2477%" y="1973" width="1.0663%" height="15" fill="rgb(249,202,22)" fg:x="124821429" fg:w="2453504"/><text x="54.4977%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,453,504 samples, 1.07%)</title><rect x="54.2477%" y="1957" width="1.0663%" height="15" fill="rgb(254,195,49)" fg:x="124821429" fg:w="2453504"/><text x="54.4977%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,453,504 samples, 1.07%)</title><rect x="54.2477%" y="1941" width="1.0663%" height="15" fill="rgb(208,123,14)" fg:x="124821429" fg:w="2453504"/><text x="54.4977%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,453,504 samples, 1.07%)</title><rect x="54.2477%" y="1925" width="1.0663%" height="15" fill="rgb(224,200,8)" fg:x="124821429" fg:w="2453504"/><text x="54.4977%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,453,504 samples, 1.07%)</title><rect x="54.2477%" y="1909" width="1.0663%" height="15" fill="rgb(217,61,36)" fg:x="124821429" fg:w="2453504"/><text x="54.4977%" y="1919.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,453,504 samples, 1.07%)</title><rect x="54.2477%" y="1893" width="1.0663%" height="15" fill="rgb(206,35,45)" fg:x="124821429" fg:w="2453504"/><text x="54.4977%" y="1903.50"></text></g><g><title>alloc::alloc::alloc (2,453,504 samples, 1.07%)</title><rect x="54.2477%" y="1877" width="1.0663%" height="15" fill="rgb(217,65,33)" fg:x="124821429" fg:w="2453504"/><text x="54.4977%" y="1887.50"></text></g><g><title>malloc (2,453,504 samples, 1.07%)</title><rect x="54.2477%" y="1861" width="1.0663%" height="15" fill="rgb(222,158,48)" fg:x="124821429" fg:w="2453504"/><text x="54.4977%" y="1871.50"></text></g><g><title>[libc.so.6] (2,453,504 samples, 1.07%)</title><rect x="54.2477%" y="1845" width="1.0663%" height="15" fill="rgb(254,2,54)" fg:x="124821429" fg:w="2453504"/><text x="54.4977%" y="1855.50"></text></g><g><title>[libc.so.6] (2,453,504 samples, 1.07%)</title><rect x="54.2477%" y="1829" width="1.0663%" height="15" fill="rgb(250,143,38)" fg:x="124821429" fg:w="2453504"/><text x="54.4977%" y="1839.50"></text></g><g><title>[libc.so.6] (2,453,504 samples, 1.07%)</title><rect x="54.2477%" y="1813" width="1.0663%" height="15" fill="rgb(248,25,0)" fg:x="124821429" fg:w="2453504"/><text x="54.4977%" y="1823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (1,426,715 samples, 0.62%)</title><rect x="55.3140%" y="2197" width="0.6201%" height="15" fill="rgb(206,152,27)" fg:x="127274933" fg:w="1426715"/><text x="55.5640%" y="2207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,426,715 samples, 0.62%)</title><rect x="55.3140%" y="2181" width="0.6201%" height="15" fill="rgb(240,77,30)" fg:x="127274933" fg:w="1426715"/><text x="55.5640%" y="2191.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,426,715 samples, 0.62%)</title><rect x="55.3140%" y="2165" width="0.6201%" height="15" fill="rgb(231,5,3)" fg:x="127274933" fg:w="1426715"/><text x="55.5640%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,426,715 samples, 0.62%)</title><rect x="55.3140%" y="2149" width="0.6201%" height="15" fill="rgb(207,226,32)" fg:x="127274933" fg:w="1426715"/><text x="55.5640%" y="2159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,426,715 samples, 0.62%)</title><rect x="55.3140%" y="2133" width="0.6201%" height="15" fill="rgb(222,207,47)" fg:x="127274933" fg:w="1426715"/><text x="55.5640%" y="2143.50"></text></g><g><title>malloc (1,426,715 samples, 0.62%)</title><rect x="55.3140%" y="2117" width="0.6201%" height="15" fill="rgb(229,115,45)" fg:x="127274933" fg:w="1426715"/><text x="55.5640%" y="2127.50"></text></g><g><title>[libc.so.6] (1,426,715 samples, 0.62%)</title><rect x="55.3140%" y="2101" width="0.6201%" height="15" fill="rgb(224,191,6)" fg:x="127274933" fg:w="1426715"/><text x="55.5640%" y="2111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,512,615 samples, 0.66%)</title><rect x="55.9340%" y="2085" width="0.6574%" height="15" fill="rgb(230,227,24)" fg:x="128701648" fg:w="1512615"/><text x="56.1840%" y="2095.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,512,615 samples, 0.66%)</title><rect x="55.9340%" y="2069" width="0.6574%" height="15" fill="rgb(228,80,19)" fg:x="128701648" fg:w="1512615"/><text x="56.1840%" y="2079.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,512,615 samples, 0.66%)</title><rect x="55.9340%" y="2053" width="0.6574%" height="15" fill="rgb(247,229,0)" fg:x="128701648" fg:w="1512615"/><text x="56.1840%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,512,615 samples, 0.66%)</title><rect x="55.9340%" y="2037" width="0.6574%" height="15" fill="rgb(237,194,15)" fg:x="128701648" fg:w="1512615"/><text x="56.1840%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,512,615 samples, 0.66%)</title><rect x="55.9340%" y="2021" width="0.6574%" height="15" fill="rgb(219,203,20)" fg:x="128701648" fg:w="1512615"/><text x="56.1840%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,512,615 samples, 0.66%)</title><rect x="55.9340%" y="2005" width="0.6574%" height="15" fill="rgb(234,128,8)" fg:x="128701648" fg:w="1512615"/><text x="56.1840%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,512,615 samples, 0.66%)</title><rect x="55.9340%" y="1989" width="0.6574%" height="15" fill="rgb(248,202,8)" fg:x="128701648" fg:w="1512615"/><text x="56.1840%" y="1999.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,512,615 samples, 0.66%)</title><rect x="55.9340%" y="1973" width="0.6574%" height="15" fill="rgb(206,104,37)" fg:x="128701648" fg:w="1512615"/><text x="56.1840%" y="1983.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,512,615 samples, 0.66%)</title><rect x="55.9340%" y="1957" width="0.6574%" height="15" fill="rgb(223,8,27)" fg:x="128701648" fg:w="1512615"/><text x="56.1840%" y="1967.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,512,615 samples, 0.66%)</title><rect x="55.9340%" y="1941" width="0.6574%" height="15" fill="rgb(216,217,28)" fg:x="128701648" fg:w="1512615"/><text x="56.1840%" y="1951.50"></text></g><g><title>alloc::alloc::realloc (1,512,615 samples, 0.66%)</title><rect x="55.9340%" y="1925" width="0.6574%" height="15" fill="rgb(249,199,1)" fg:x="128701648" fg:w="1512615"/><text x="56.1840%" y="1935.50"></text></g><g><title>realloc (1,512,615 samples, 0.66%)</title><rect x="55.9340%" y="1909" width="0.6574%" height="15" fill="rgb(240,85,17)" fg:x="128701648" fg:w="1512615"/><text x="56.1840%" y="1919.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,452,387 samples, 0.63%)</title><rect x="56.5914%" y="2085" width="0.6312%" height="15" fill="rgb(206,108,45)" fg:x="130214263" fg:w="1452387"/><text x="56.8414%" y="2095.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,452,387 samples, 0.63%)</title><rect x="56.5914%" y="2069" width="0.6312%" height="15" fill="rgb(245,210,41)" fg:x="130214263" fg:w="1452387"/><text x="56.8414%" y="2079.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (1,452,387 samples, 0.63%)</title><rect x="56.5914%" y="2053" width="0.6312%" height="15" fill="rgb(206,13,37)" fg:x="130214263" fg:w="1452387"/><text x="56.8414%" y="2063.50"></text></g><g><title>benchmark::extract_path_from_command (4,419,313 samples, 1.92%)</title><rect x="55.9340%" y="2197" width="1.9206%" height="15" fill="rgb(250,61,18)" fg:x="128701648" fg:w="4419313"/><text x="56.1840%" y="2207.50">b..</text></g><g><title>core::option::Option&lt;T&gt;::map (4,419,313 samples, 1.92%)</title><rect x="55.9340%" y="2181" width="1.9206%" height="15" fill="rgb(235,172,48)" fg:x="128701648" fg:w="4419313"/><text x="56.1840%" y="2191.50">c..</text></g><g><title>benchmark::extract_path_from_command::_{{closure}} (4,419,313 samples, 1.92%)</title><rect x="55.9340%" y="2165" width="1.9206%" height="15" fill="rgb(249,201,17)" fg:x="128701648" fg:w="4419313"/><text x="56.1840%" y="2175.50">b..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (4,419,313 samples, 1.92%)</title><rect x="55.9340%" y="2149" width="1.9206%" height="15" fill="rgb(219,208,6)" fg:x="128701648" fg:w="4419313"/><text x="56.1840%" y="2159.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4,419,313 samples, 1.92%)</title><rect x="55.9340%" y="2133" width="1.9206%" height="15" fill="rgb(248,31,23)" fg:x="128701648" fg:w="4419313"/><text x="56.1840%" y="2143.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,419,313 samples, 1.92%)</title><rect x="55.9340%" y="2117" width="1.9206%" height="15" fill="rgb(245,15,42)" fg:x="128701648" fg:w="4419313"/><text x="56.1840%" y="2127.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4,419,313 samples, 1.92%)</title><rect x="55.9340%" y="2101" width="1.9206%" height="15" fill="rgb(222,217,39)" fg:x="128701648" fg:w="4419313"/><text x="56.1840%" y="2111.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,454,311 samples, 0.63%)</title><rect x="57.2226%" y="2085" width="0.6320%" height="15" fill="rgb(210,219,27)" fg:x="131666650" fg:w="1454311"/><text x="57.4726%" y="2095.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,454,311 samples, 0.63%)</title><rect x="57.2226%" y="2069" width="0.6320%" height="15" fill="rgb(252,166,36)" fg:x="131666650" fg:w="1454311"/><text x="57.4726%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,454,311 samples, 0.63%)</title><rect x="57.2226%" y="2053" width="0.6320%" height="15" fill="rgb(245,132,34)" fg:x="131666650" fg:w="1454311"/><text x="57.4726%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,454,311 samples, 0.63%)</title><rect x="57.2226%" y="2037" width="0.6320%" height="15" fill="rgb(236,54,3)" fg:x="131666650" fg:w="1454311"/><text x="57.4726%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,454,311 samples, 0.63%)</title><rect x="57.2226%" y="2021" width="0.6320%" height="15" fill="rgb(241,173,43)" fg:x="131666650" fg:w="1454311"/><text x="57.4726%" y="2031.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,454,311 samples, 0.63%)</title><rect x="57.2226%" y="2005" width="0.6320%" height="15" fill="rgb(215,190,9)" fg:x="131666650" fg:w="1454311"/><text x="57.4726%" y="2015.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,454,311 samples, 0.63%)</title><rect x="57.2226%" y="1989" width="0.6320%" height="15" fill="rgb(242,101,16)" fg:x="131666650" fg:w="1454311"/><text x="57.4726%" y="1999.50"></text></g><g><title>alloc::alloc::alloc (1,454,311 samples, 0.63%)</title><rect x="57.2226%" y="1973" width="0.6320%" height="15" fill="rgb(223,190,21)" fg:x="131666650" fg:w="1454311"/><text x="57.4726%" y="1983.50"></text></g><g><title>malloc (1,454,311 samples, 0.63%)</title><rect x="57.2226%" y="1957" width="0.6320%" height="15" fill="rgb(215,228,25)" fg:x="131666650" fg:w="1454311"/><text x="57.4726%" y="1967.50"></text></g><g><title>[libc.so.6] (1,454,311 samples, 0.63%)</title><rect x="57.2226%" y="1941" width="0.6320%" height="15" fill="rgb(225,36,22)" fg:x="131666650" fg:w="1454311"/><text x="57.4726%" y="1951.50"></text></g><g><title>benchmark::json_to_html_node (976,697 samples, 0.42%)</title><rect x="57.8547%" y="2117" width="0.4245%" height="15" fill="rgb(251,106,46)" fg:x="133120961" fg:w="976697"/><text x="58.1047%" y="2127.50"></text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (976,697 samples, 0.42%)</title><rect x="57.8547%" y="2101" width="0.4245%" height="15" fill="rgb(208,90,1)" fg:x="133120961" fg:w="976697"/><text x="58.1047%" y="2111.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (976,697 samples, 0.42%)</title><rect x="57.8547%" y="2085" width="0.4245%" height="15" fill="rgb(243,10,4)" fg:x="133120961" fg:w="976697"/><text x="58.1047%" y="2095.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (976,697 samples, 0.42%)</title><rect x="57.8547%" y="2069" width="0.4245%" height="15" fill="rgb(212,137,27)" fg:x="133120961" fg:w="976697"/><text x="58.1047%" y="2079.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (976,697 samples, 0.42%)</title><rect x="57.8547%" y="2053" width="0.4245%" height="15" fill="rgb(231,220,49)" fg:x="133120961" fg:w="976697"/><text x="58.1047%" y="2063.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (976,697 samples, 0.42%)</title><rect x="57.8547%" y="2037" width="0.4245%" height="15" fill="rgb(237,96,20)" fg:x="133120961" fg:w="976697"/><text x="58.1047%" y="2047.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (976,697 samples, 0.42%)</title><rect x="57.8547%" y="2021" width="0.4245%" height="15" fill="rgb(239,229,30)" fg:x="133120961" fg:w="976697"/><text x="58.1047%" y="2031.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (976,697 samples, 0.42%)</title><rect x="57.8547%" y="2005" width="0.4245%" height="15" fill="rgb(219,65,33)" fg:x="133120961" fg:w="976697"/><text x="58.1047%" y="2015.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (976,697 samples, 0.42%)</title><rect x="57.8547%" y="1989" width="0.4245%" height="15" fill="rgb(243,134,7)" fg:x="133120961" fg:w="976697"/><text x="58.1047%" y="1999.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (976,697 samples, 0.42%)</title><rect x="57.8547%" y="1973" width="0.4245%" height="15" fill="rgb(216,177,54)" fg:x="133120961" fg:w="976697"/><text x="58.1047%" y="1983.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (976,697 samples, 0.42%)</title><rect x="57.8547%" y="1957" width="0.4245%" height="15" fill="rgb(211,160,20)" fg:x="133120961" fg:w="976697"/><text x="58.1047%" y="1967.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (976,697 samples, 0.42%)</title><rect x="57.8547%" y="1941" width="0.4245%" height="15" fill="rgb(239,85,39)" fg:x="133120961" fg:w="976697"/><text x="58.1047%" y="1951.50"></text></g><g><title>[libc.so.6] (976,697 samples, 0.42%)</title><rect x="57.8547%" y="1925" width="0.4245%" height="15" fill="rgb(232,125,22)" fg:x="133120961" fg:w="976697"/><text x="58.1047%" y="1935.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="2117" width="0.6788%" height="15" fill="rgb(244,57,34)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="2127.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="2101" width="0.6788%" height="15" fill="rgb(214,203,32)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="2111.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="2085" width="0.6788%" height="15" fill="rgb(207,58,43)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="2095.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="2069" width="0.6788%" height="15" fill="rgb(215,193,15)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="2079.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="2053" width="0.6788%" height="15" fill="rgb(232,15,44)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="2063.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="2037" width="0.6788%" height="15" fill="rgb(212,3,48)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="2047.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="2021" width="0.6788%" height="15" fill="rgb(218,128,7)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="2031.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="2005" width="0.6788%" height="15" fill="rgb(226,216,39)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="2015.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="1989" width="0.6788%" height="15" fill="rgb(243,47,51)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="1999.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="1973" width="0.6788%" height="15" fill="rgb(241,183,40)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="1983.50"></text></g><g><title>benchmark::json_to_html_node::_{{closure}} (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="1957" width="0.6788%" height="15" fill="rgb(231,217,32)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="1967.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="1941" width="0.6788%" height="15" fill="rgb(229,61,38)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="1951.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="1925" width="0.6788%" height="15" fill="rgb(225,210,5)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="1935.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="1909" width="0.6788%" height="15" fill="rgb(231,79,45)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="1919.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="1893" width="0.6788%" height="15" fill="rgb(224,100,7)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="1903.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="1877" width="0.6788%" height="15" fill="rgb(241,198,18)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="1887.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="1861" width="0.6788%" height="15" fill="rgb(252,97,53)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="1871.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="1845" width="0.6788%" height="15" fill="rgb(220,88,7)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="1855.50"></text></g><g><title>alloc::slice::hack::to_vec (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="1829" width="0.6788%" height="15" fill="rgb(213,176,14)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="1839.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="1813" width="0.6788%" height="15" fill="rgb(246,73,7)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="1823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="1797" width="0.6788%" height="15" fill="rgb(245,64,36)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="1781" width="0.6788%" height="15" fill="rgb(245,80,10)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="1765" width="0.6788%" height="15" fill="rgb(232,107,50)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="1749" width="0.6788%" height="15" fill="rgb(253,3,0)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="1733" width="0.6788%" height="15" fill="rgb(212,99,53)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="1743.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="1717" width="0.6788%" height="15" fill="rgb(249,111,54)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="1727.50"></text></g><g><title>alloc::alloc::alloc (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="1701" width="0.6788%" height="15" fill="rgb(249,55,30)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="1711.50"></text></g><g><title>malloc (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="1685" width="0.6788%" height="15" fill="rgb(237,47,42)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="1695.50"></text></g><g><title>[libc.so.6] (1,561,777 samples, 0.68%)</title><rect x="58.2791%" y="1669" width="0.6788%" height="15" fill="rgb(211,20,18)" fg:x="134097658" fg:w="1561777"/><text x="58.5291%" y="1679.50"></text></g><g><title>benchmark::json_to_html_node (3,560,329 samples, 1.55%)</title><rect x="57.8547%" y="2149" width="1.5473%" height="15" fill="rgb(231,203,46)" fg:x="133120961" fg:w="3560329"/><text x="58.1047%" y="2159.50"></text></g><g><title>benchmark::json_to_html_node (3,560,329 samples, 1.55%)</title><rect x="57.8547%" y="2133" width="1.5473%" height="15" fill="rgb(237,142,3)" fg:x="133120961" fg:w="3560329"/><text x="58.1047%" y="2143.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,021,855 samples, 0.44%)</title><rect x="58.9579%" y="2117" width="0.4441%" height="15" fill="rgb(241,107,1)" fg:x="135659435" fg:w="1021855"/><text x="59.2079%" y="2127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,021,855 samples, 0.44%)</title><rect x="58.9579%" y="2101" width="0.4441%" height="15" fill="rgb(229,83,13)" fg:x="135659435" fg:w="1021855"/><text x="59.2079%" y="2111.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,021,855 samples, 0.44%)</title><rect x="58.9579%" y="2085" width="0.4441%" height="15" fill="rgb(241,91,40)" fg:x="135659435" fg:w="1021855"/><text x="59.2079%" y="2095.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,021,855 samples, 0.44%)</title><rect x="58.9579%" y="2069" width="0.4441%" height="15" fill="rgb(225,3,45)" fg:x="135659435" fg:w="1021855"/><text x="59.2079%" y="2079.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,021,855 samples, 0.44%)</title><rect x="58.9579%" y="2053" width="0.4441%" height="15" fill="rgb(244,223,14)" fg:x="135659435" fg:w="1021855"/><text x="59.2079%" y="2063.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (1,021,855 samples, 0.44%)</title><rect x="58.9579%" y="2037" width="0.4441%" height="15" fill="rgb(224,124,37)" fg:x="135659435" fg:w="1021855"/><text x="59.2079%" y="2047.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::new (1,552,039 samples, 0.67%)</title><rect x="59.4020%" y="2149" width="0.6745%" height="15" fill="rgb(251,171,30)" fg:x="136681290" fg:w="1552039"/><text x="59.6520%" y="2159.50"></text></g><g><title>css_bitvector_compiler::BitVector::new (1,552,039 samples, 0.67%)</title><rect x="59.4020%" y="2133" width="0.6745%" height="15" fill="rgb(236,46,54)" fg:x="136681290" fg:w="1552039"/><text x="59.6520%" y="2143.50"></text></g><g><title>alloc::vec::from_elem (1,552,039 samples, 0.67%)</title><rect x="59.4020%" y="2117" width="0.6745%" height="15" fill="rgb(245,213,5)" fg:x="136681290" fg:w="1552039"/><text x="59.6520%" y="2127.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,552,039 samples, 0.67%)</title><rect x="59.4020%" y="2101" width="0.6745%" height="15" fill="rgb(230,144,27)" fg:x="136681290" fg:w="1552039"/><text x="59.6520%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1,552,039 samples, 0.67%)</title><rect x="59.4020%" y="2085" width="0.6745%" height="15" fill="rgb(220,86,6)" fg:x="136681290" fg:w="1552039"/><text x="59.6520%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (1,552,039 samples, 0.67%)</title><rect x="59.4020%" y="2069" width="0.6745%" height="15" fill="rgb(240,20,13)" fg:x="136681290" fg:w="1552039"/><text x="59.6520%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,552,039 samples, 0.67%)</title><rect x="59.4020%" y="2053" width="0.6745%" height="15" fill="rgb(217,89,34)" fg:x="136681290" fg:w="1552039"/><text x="59.6520%" y="2063.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1,552,039 samples, 0.67%)</title><rect x="59.4020%" y="2037" width="0.6745%" height="15" fill="rgb(229,13,5)" fg:x="136681290" fg:w="1552039"/><text x="59.6520%" y="2047.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,552,039 samples, 0.67%)</title><rect x="59.4020%" y="2021" width="0.6745%" height="15" fill="rgb(244,67,35)" fg:x="136681290" fg:w="1552039"/><text x="59.6520%" y="2031.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1,552,039 samples, 0.67%)</title><rect x="59.4020%" y="2005" width="0.6745%" height="15" fill="rgb(221,40,2)" fg:x="136681290" fg:w="1552039"/><text x="59.6520%" y="2015.50"></text></g><g><title>__libc_calloc (1,552,039 samples, 0.67%)</title><rect x="59.4020%" y="1989" width="0.6745%" height="15" fill="rgb(237,157,21)" fg:x="136681290" fg:w="1552039"/><text x="59.6520%" y="1999.50"></text></g><g><title>benchmark::json_to_html_node (6,214,612 samples, 2.70%)</title><rect x="57.8547%" y="2197" width="2.7009%" height="15" fill="rgb(222,94,11)" fg:x="133120961" fg:w="6214612"/><text x="58.1047%" y="2207.50">be..</text></g><g><title>benchmark::json_to_html_node (6,214,612 samples, 2.70%)</title><rect x="57.8547%" y="2181" width="2.7009%" height="15" fill="rgb(249,113,6)" fg:x="133120961" fg:w="6214612"/><text x="58.1047%" y="2191.50">be..</text></g><g><title>benchmark::json_to_html_node (6,214,612 samples, 2.70%)</title><rect x="57.8547%" y="2165" width="2.7009%" height="15" fill="rgb(238,137,36)" fg:x="133120961" fg:w="6214612"/><text x="58.1047%" y="2175.50">be..</text></g><g><title>serde_json::value::Value::get (1,102,244 samples, 0.48%)</title><rect x="60.0765%" y="2149" width="0.4790%" height="15" fill="rgb(210,102,26)" fg:x="138233329" fg:w="1102244"/><text x="60.3265%" y="2159.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (1,102,244 samples, 0.48%)</title><rect x="60.0765%" y="2133" width="0.4790%" height="15" fill="rgb(218,30,30)" fg:x="138233329" fg:w="1102244"/><text x="60.3265%" y="2143.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (1,102,244 samples, 0.48%)</title><rect x="60.0765%" y="2117" width="0.4790%" height="15" fill="rgb(214,67,26)" fg:x="138233329" fg:w="1102244"/><text x="60.3265%" y="2127.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (1,102,244 samples, 0.48%)</title><rect x="60.0765%" y="2101" width="0.4790%" height="15" fill="rgb(251,9,53)" fg:x="138233329" fg:w="1102244"/><text x="60.3265%" y="2111.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1,102,244 samples, 0.48%)</title><rect x="60.0765%" y="2085" width="0.4790%" height="15" fill="rgb(228,204,25)" fg:x="138233329" fg:w="1102244"/><text x="60.3265%" y="2095.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,102,244 samples, 0.48%)</title><rect x="60.0765%" y="2069" width="0.4790%" height="15" fill="rgb(207,153,8)" fg:x="138233329" fg:w="1102244"/><text x="60.3265%" y="2079.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,102,244 samples, 0.48%)</title><rect x="60.0765%" y="2053" width="0.4790%" height="15" fill="rgb(242,9,16)" fg:x="138233329" fg:w="1102244"/><text x="60.3265%" y="2063.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,102,244 samples, 0.48%)</title><rect x="60.0765%" y="2037" width="0.4790%" height="15" fill="rgb(217,211,10)" fg:x="138233329" fg:w="1102244"/><text x="60.3265%" y="2047.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (1,102,244 samples, 0.48%)</title><rect x="60.0765%" y="2021" width="0.4790%" height="15" fill="rgb(219,228,52)" fg:x="138233329" fg:w="1102244"/><text x="60.3265%" y="2031.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (1,102,244 samples, 0.48%)</title><rect x="60.0765%" y="2005" width="0.4790%" height="15" fill="rgb(231,92,29)" fg:x="138233329" fg:w="1102244"/><text x="60.3265%" y="2015.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (1,102,244 samples, 0.48%)</title><rect x="60.0765%" y="1989" width="0.4790%" height="15" fill="rgb(232,8,23)" fg:x="138233329" fg:w="1102244"/><text x="60.3265%" y="1999.50"></text></g><g><title>[libc.so.6] (1,102,244 samples, 0.48%)</title><rect x="60.0765%" y="1973" width="0.4790%" height="15" fill="rgb(216,211,34)" fg:x="138233329" fg:w="1102244"/><text x="60.3265%" y="1983.50"></text></g><g><title>benchmark::apply_frame_modifications (13,316,742 samples, 5.79%)</title><rect x="55.3140%" y="2213" width="5.7875%" height="15" fill="rgb(236,151,0)" fg:x="127274933" fg:w="13316742"/><text x="55.5640%" y="2223.50">benchma..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,256,102 samples, 0.55%)</title><rect x="60.5555%" y="2197" width="0.5459%" height="15" fill="rgb(209,168,3)" fg:x="139335573" fg:w="1256102"/><text x="60.8055%" y="2207.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,256,102 samples, 0.55%)</title><rect x="60.5555%" y="2181" width="0.5459%" height="15" fill="rgb(208,129,28)" fg:x="139335573" fg:w="1256102"/><text x="60.8055%" y="2191.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,256,102 samples, 0.55%)</title><rect x="60.5555%" y="2165" width="0.5459%" height="15" fill="rgb(229,78,22)" fg:x="139335573" fg:w="1256102"/><text x="60.8055%" y="2175.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,256,102 samples, 0.55%)</title><rect x="60.5555%" y="2149" width="0.5459%" height="15" fill="rgb(228,187,13)" fg:x="139335573" fg:w="1256102"/><text x="60.8055%" y="2159.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,256,102 samples, 0.55%)</title><rect x="60.5555%" y="2133" width="0.5459%" height="15" fill="rgb(240,119,24)" fg:x="139335573" fg:w="1256102"/><text x="60.8055%" y="2143.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,256,102 samples, 0.55%)</title><rect x="60.5555%" y="2117" width="0.5459%" height="15" fill="rgb(209,194,42)" fg:x="139335573" fg:w="1256102"/><text x="60.8055%" y="2127.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,256,102 samples, 0.55%)</title><rect x="60.5555%" y="2101" width="0.5459%" height="15" fill="rgb(247,200,46)" fg:x="139335573" fg:w="1256102"/><text x="60.8055%" y="2111.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,256,102 samples, 0.55%)</title><rect x="60.5555%" y="2085" width="0.5459%" height="15" fill="rgb(218,76,16)" fg:x="139335573" fg:w="1256102"/><text x="60.8055%" y="2095.50"></text></g><g><title>benchmark::count_nodes (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="2213" width="0.5589%" height="15" fill="rgb(225,21,48)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="2223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="2197" width="0.5589%" height="15" fill="rgb(239,223,50)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="2207.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="2181" width="0.5589%" height="15" fill="rgb(244,45,21)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="2191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="2165" width="0.5589%" height="15" fill="rgb(232,33,43)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="2175.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="2149" width="0.5589%" height="15" fill="rgb(209,8,3)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="2159.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="2133" width="0.5589%" height="15" fill="rgb(214,25,53)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="2143.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="2117" width="0.5589%" height="15" fill="rgb(254,186,54)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="2127.50"></text></g><g><title>benchmark::count_nodes (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="2101" width="0.5589%" height="15" fill="rgb(208,174,49)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="2111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="2085" width="0.5589%" height="15" fill="rgb(233,191,51)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="2095.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="2069" width="0.5589%" height="15" fill="rgb(222,134,10)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="2079.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="2053" width="0.5589%" height="15" fill="rgb(230,226,20)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="2063.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="2037" width="0.5589%" height="15" fill="rgb(251,111,25)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="2047.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="2021" width="0.5589%" height="15" fill="rgb(224,40,46)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="2031.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="2005" width="0.5589%" height="15" fill="rgb(236,108,47)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="2015.50"></text></g><g><title>benchmark::count_nodes (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1989" width="0.5589%" height="15" fill="rgb(234,93,0)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1999.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1973" width="0.5589%" height="15" fill="rgb(224,213,32)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1983.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1957" width="0.5589%" height="15" fill="rgb(251,11,48)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1967.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1941" width="0.5589%" height="15" fill="rgb(236,173,5)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1951.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1925" width="0.5589%" height="15" fill="rgb(230,95,12)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1935.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1909" width="0.5589%" height="15" fill="rgb(232,209,1)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1919.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1893" width="0.5589%" height="15" fill="rgb(232,6,1)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1903.50"></text></g><g><title>benchmark::count_nodes (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1877" width="0.5589%" height="15" fill="rgb(210,224,50)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1887.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1861" width="0.5589%" height="15" fill="rgb(228,127,35)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1871.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1845" width="0.5589%" height="15" fill="rgb(245,102,45)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1855.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1829" width="0.5589%" height="15" fill="rgb(214,1,49)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1839.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1813" width="0.5589%" height="15" fill="rgb(226,163,40)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1823.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1797" width="0.5589%" height="15" fill="rgb(239,212,28)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1807.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1781" width="0.5589%" height="15" fill="rgb(220,20,13)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1791.50"></text></g><g><title>benchmark::count_nodes (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1765" width="0.5589%" height="15" fill="rgb(210,164,35)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1775.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1749" width="0.5589%" height="15" fill="rgb(248,109,41)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1759.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1733" width="0.5589%" height="15" fill="rgb(238,23,50)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1743.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1717" width="0.5589%" height="15" fill="rgb(211,48,49)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1727.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1701" width="0.5589%" height="15" fill="rgb(223,36,21)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1711.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1685" width="0.5589%" height="15" fill="rgb(207,123,46)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1695.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1669" width="0.5589%" height="15" fill="rgb(240,218,32)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1679.50"></text></g><g><title>benchmark::count_nodes (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1653" width="0.5589%" height="15" fill="rgb(252,5,43)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1663.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1637" width="0.5589%" height="15" fill="rgb(252,84,19)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1647.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1621" width="0.5589%" height="15" fill="rgb(243,152,39)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1631.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1605" width="0.5589%" height="15" fill="rgb(234,160,15)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1615.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1589" width="0.5589%" height="15" fill="rgb(237,34,20)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1599.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1573" width="0.5589%" height="15" fill="rgb(229,97,13)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1583.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1557" width="0.5589%" height="15" fill="rgb(234,71,50)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1567.50"></text></g><g><title>benchmark::count_nodes (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1541" width="0.5589%" height="15" fill="rgb(253,155,4)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1525" width="0.5589%" height="15" fill="rgb(222,185,37)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1535.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1509" width="0.5589%" height="15" fill="rgb(251,177,13)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1519.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1493" width="0.5589%" height="15" fill="rgb(250,179,40)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1503.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1477" width="0.5589%" height="15" fill="rgb(242,44,2)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1487.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1461" width="0.5589%" height="15" fill="rgb(216,177,13)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1471.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1445" width="0.5589%" height="15" fill="rgb(216,106,43)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1455.50"></text></g><g><title>benchmark::count_nodes (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1429" width="0.5589%" height="15" fill="rgb(216,183,2)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1413" width="0.5589%" height="15" fill="rgb(249,75,3)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1423.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1397" width="0.5589%" height="15" fill="rgb(219,67,39)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1407.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1381" width="0.5589%" height="15" fill="rgb(253,228,2)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1391.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1365" width="0.5589%" height="15" fill="rgb(235,138,27)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1375.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1349" width="0.5589%" height="15" fill="rgb(236,97,51)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1359.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1333" width="0.5589%" height="15" fill="rgb(240,80,30)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1343.50"></text></g><g><title>benchmark::count_nodes (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1317" width="0.5589%" height="15" fill="rgb(230,178,19)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1301" width="0.5589%" height="15" fill="rgb(210,190,27)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1311.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1285" width="0.5589%" height="15" fill="rgb(222,107,31)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1269" width="0.5589%" height="15" fill="rgb(216,127,34)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1279.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1253" width="0.5589%" height="15" fill="rgb(234,116,52)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1263.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1237" width="0.5589%" height="15" fill="rgb(222,124,15)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1247.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1221" width="0.5589%" height="15" fill="rgb(231,179,28)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1231.50"></text></g><g><title>benchmark::count_nodes (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1205" width="0.5589%" height="15" fill="rgb(226,93,45)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1189" width="0.5589%" height="15" fill="rgb(215,8,51)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1199.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1173" width="0.5589%" height="15" fill="rgb(223,106,5)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1157" width="0.5589%" height="15" fill="rgb(250,191,5)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1141" width="0.5589%" height="15" fill="rgb(242,132,44)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1151.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1125" width="0.5589%" height="15" fill="rgb(251,152,29)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1135.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1109" width="0.5589%" height="15" fill="rgb(218,179,5)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1119.50"></text></g><g><title>benchmark::count_nodes (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1093" width="0.5589%" height="15" fill="rgb(227,67,19)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1077" width="0.5589%" height="15" fill="rgb(233,119,31)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1087.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1061" width="0.5589%" height="15" fill="rgb(241,120,22)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1045" width="0.5589%" height="15" fill="rgb(224,102,30)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1055.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1029" width="0.5589%" height="15" fill="rgb(210,164,37)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1039.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="1013" width="0.5589%" height="15" fill="rgb(226,191,16)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1023.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="997" width="0.5589%" height="15" fill="rgb(214,40,45)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="1007.50"></text></g><g><title>benchmark::count_nodes (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="981" width="0.5589%" height="15" fill="rgb(244,29,26)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="965" width="0.5589%" height="15" fill="rgb(216,16,5)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="975.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="949" width="0.5589%" height="15" fill="rgb(249,76,35)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="933" width="0.5589%" height="15" fill="rgb(207,11,44)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="917" width="0.5589%" height="15" fill="rgb(228,190,49)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="927.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="901" width="0.5589%" height="15" fill="rgb(214,173,12)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="911.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="885" width="0.5589%" height="15" fill="rgb(218,26,35)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="895.50"></text></g><g><title>benchmark::count_nodes (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="869" width="0.5589%" height="15" fill="rgb(220,200,19)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="853" width="0.5589%" height="15" fill="rgb(239,95,49)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="863.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="837" width="0.5589%" height="15" fill="rgb(235,85,53)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="821" width="0.5589%" height="15" fill="rgb(233,133,31)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="805" width="0.5589%" height="15" fill="rgb(218,25,20)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="815.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="789" width="0.5589%" height="15" fill="rgb(252,210,38)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="799.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="773" width="0.5589%" height="15" fill="rgb(242,134,21)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="783.50"></text></g><g><title>benchmark::count_nodes (1,286,011 samples, 0.56%)</title><rect x="61.1015%" y="757" width="0.5589%" height="15" fill="rgb(213,28,48)" fg:x="140591675" fg:w="1286011"/><text x="61.3515%" y="767.50"></text></g><g><title>benchmark::invoke_bitvector_layout (1,400,037 samples, 0.61%)</title><rect x="61.6604%" y="2213" width="0.6085%" height="15" fill="rgb(250,196,2)" fg:x="141877686" fg:w="1400037"/><text x="61.9104%" y="2223.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_bitvector_incremental_with_stats (1,400,037 samples, 0.61%)</title><rect x="61.6604%" y="2197" width="0.6085%" height="15" fill="rgb(227,5,17)" fg:x="141877686" fg:w="1400037"/><text x="61.9104%" y="2207.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_recursive_bitvector_incremental (1,400,037 samples, 0.61%)</title><rect x="61.6604%" y="2181" width="0.6085%" height="15" fill="rgb(221,226,24)" fg:x="141877686" fg:w="1400037"/><text x="61.9104%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,400,037 samples, 0.61%)</title><rect x="61.6604%" y="2165" width="0.6085%" height="15" fill="rgb(211,5,48)" fg:x="141877686" fg:w="1400037"/><text x="61.9104%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,400,037 samples, 0.61%)</title><rect x="61.6604%" y="2149" width="0.6085%" height="15" fill="rgb(219,150,6)" fg:x="141877686" fg:w="1400037"/><text x="61.9104%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,400,037 samples, 0.61%)</title><rect x="61.6604%" y="2133" width="0.6085%" height="15" fill="rgb(251,46,16)" fg:x="141877686" fg:w="1400037"/><text x="61.9104%" y="2143.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,400,037 samples, 0.61%)</title><rect x="61.6604%" y="2117" width="0.6085%" height="15" fill="rgb(220,204,40)" fg:x="141877686" fg:w="1400037"/><text x="61.9104%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,907,328 samples, 1.26%)</title><rect x="62.2688%" y="1941" width="1.2635%" height="15" fill="rgb(211,85,2)" fg:x="143277723" fg:w="2907328"/><text x="62.5188%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,907,328 samples, 1.26%)</title><rect x="62.2688%" y="1925" width="1.2635%" height="15" fill="rgb(229,17,7)" fg:x="143277723" fg:w="2907328"/><text x="62.5188%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,907,328 samples, 1.26%)</title><rect x="62.2688%" y="1909" width="1.2635%" height="15" fill="rgb(239,72,28)" fg:x="143277723" fg:w="2907328"/><text x="62.5188%" y="1919.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,907,328 samples, 1.26%)</title><rect x="62.2688%" y="1893" width="1.2635%" height="15" fill="rgb(230,47,54)" fg:x="143277723" fg:w="2907328"/><text x="62.5188%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,907,328 samples, 1.26%)</title><rect x="62.2688%" y="1877" width="1.2635%" height="15" fill="rgb(214,50,8)" fg:x="143277723" fg:w="2907328"/><text x="62.5188%" y="1887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,907,328 samples, 1.26%)</title><rect x="62.2688%" y="1861" width="1.2635%" height="15" fill="rgb(216,198,43)" fg:x="143277723" fg:w="2907328"/><text x="62.5188%" y="1871.50"></text></g><g><title>alloc::alloc::dealloc (2,907,328 samples, 1.26%)</title><rect x="62.2688%" y="1845" width="1.2635%" height="15" fill="rgb(234,20,35)" fg:x="143277723" fg:w="2907328"/><text x="62.5188%" y="1855.50"></text></g><g><title>cfree (2,907,328 samples, 1.26%)</title><rect x="62.2688%" y="1829" width="1.2635%" height="15" fill="rgb(254,45,19)" fg:x="143277723" fg:w="2907328"/><text x="62.5188%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,361,574 samples, 0.59%)</title><rect x="63.5323%" y="1877" width="0.5917%" height="15" fill="rgb(219,14,44)" fg:x="146185051" fg:w="1361574"/><text x="63.7823%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,361,574 samples, 0.59%)</title><rect x="63.5323%" y="1861" width="0.5917%" height="15" fill="rgb(217,220,26)" fg:x="146185051" fg:w="1361574"/><text x="63.7823%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,361,574 samples, 0.59%)</title><rect x="63.5323%" y="1845" width="0.5917%" height="15" fill="rgb(213,158,28)" fg:x="146185051" fg:w="1361574"/><text x="63.7823%" y="1855.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,361,574 samples, 0.59%)</title><rect x="63.5323%" y="1829" width="0.5917%" height="15" fill="rgb(252,51,52)" fg:x="146185051" fg:w="1361574"/><text x="63.7823%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,361,574 samples, 0.59%)</title><rect x="63.5323%" y="1813" width="0.5917%" height="15" fill="rgb(246,89,16)" fg:x="146185051" fg:w="1361574"/><text x="63.7823%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,361,574 samples, 0.59%)</title><rect x="63.5323%" y="1797" width="0.5917%" height="15" fill="rgb(216,158,49)" fg:x="146185051" fg:w="1361574"/><text x="63.7823%" y="1807.50"></text></g><g><title>alloc::alloc::dealloc (1,361,574 samples, 0.59%)</title><rect x="63.5323%" y="1781" width="0.5917%" height="15" fill="rgb(236,107,19)" fg:x="146185051" fg:w="1361574"/><text x="63.7823%" y="1791.50"></text></g><g><title>cfree (1,361,574 samples, 0.59%)</title><rect x="63.5323%" y="1765" width="0.5917%" height="15" fill="rgb(228,185,30)" fg:x="146185051" fg:w="1361574"/><text x="63.7823%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,562,109 samples, 0.68%)</title><rect x="64.1241%" y="1813" width="0.6789%" height="15" fill="rgb(246,134,8)" fg:x="147546625" fg:w="1562109"/><text x="64.3741%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,562,109 samples, 0.68%)</title><rect x="64.1241%" y="1797" width="0.6789%" height="15" fill="rgb(214,143,50)" fg:x="147546625" fg:w="1562109"/><text x="64.3741%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,562,109 samples, 0.68%)</title><rect x="64.1241%" y="1781" width="0.6789%" height="15" fill="rgb(228,75,8)" fg:x="147546625" fg:w="1562109"/><text x="64.3741%" y="1791.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,562,109 samples, 0.68%)</title><rect x="64.1241%" y="1765" width="0.6789%" height="15" fill="rgb(207,175,4)" fg:x="147546625" fg:w="1562109"/><text x="64.3741%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,562,109 samples, 0.68%)</title><rect x="64.1241%" y="1749" width="0.6789%" height="15" fill="rgb(205,108,24)" fg:x="147546625" fg:w="1562109"/><text x="64.3741%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,562,109 samples, 0.68%)</title><rect x="64.1241%" y="1733" width="0.6789%" height="15" fill="rgb(244,120,49)" fg:x="147546625" fg:w="1562109"/><text x="64.3741%" y="1743.50"></text></g><g><title>alloc::alloc::dealloc (1,562,109 samples, 0.68%)</title><rect x="64.1241%" y="1717" width="0.6789%" height="15" fill="rgb(223,47,38)" fg:x="147546625" fg:w="1562109"/><text x="64.3741%" y="1727.50"></text></g><g><title>cfree (1,562,109 samples, 0.68%)</title><rect x="64.1241%" y="1701" width="0.6789%" height="15" fill="rgb(229,179,11)" fg:x="147546625" fg:w="1562109"/><text x="64.3741%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,844,576 samples, 1.24%)</title><rect x="65.4140%" y="1749" width="1.2363%" height="15" fill="rgb(231,122,1)" fg:x="150514767" fg:w="2844576"/><text x="65.6640%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,844,576 samples, 1.24%)</title><rect x="65.4140%" y="1733" width="1.2363%" height="15" fill="rgb(245,119,9)" fg:x="150514767" fg:w="2844576"/><text x="65.6640%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,844,576 samples, 1.24%)</title><rect x="65.4140%" y="1717" width="1.2363%" height="15" fill="rgb(241,163,25)" fg:x="150514767" fg:w="2844576"/><text x="65.6640%" y="1727.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,844,576 samples, 1.24%)</title><rect x="65.4140%" y="1701" width="1.2363%" height="15" fill="rgb(217,214,3)" fg:x="150514767" fg:w="2844576"/><text x="65.6640%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,844,576 samples, 1.24%)</title><rect x="65.4140%" y="1685" width="1.2363%" height="15" fill="rgb(240,86,28)" fg:x="150514767" fg:w="2844576"/><text x="65.6640%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,844,576 samples, 1.24%)</title><rect x="65.4140%" y="1669" width="1.2363%" height="15" fill="rgb(215,47,9)" fg:x="150514767" fg:w="2844576"/><text x="65.6640%" y="1679.50"></text></g><g><title>alloc::alloc::dealloc (2,844,576 samples, 1.24%)</title><rect x="65.4140%" y="1653" width="1.2363%" height="15" fill="rgb(252,25,45)" fg:x="150514767" fg:w="2844576"/><text x="65.6640%" y="1663.50"></text></g><g><title>cfree (2,844,576 samples, 1.24%)</title><rect x="65.4140%" y="1637" width="1.2363%" height="15" fill="rgb(251,164,9)" fg:x="150514767" fg:w="2844576"/><text x="65.6640%" y="1647.50"></text></g><g><title>[libc.so.6] (1,384,599 samples, 0.60%)</title><rect x="66.0486%" y="1621" width="0.6017%" height="15" fill="rgb(233,194,0)" fg:x="151974744" fg:w="1384599"/><text x="66.2986%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="1237" width="0.6129%" height="15" fill="rgb(249,111,24)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="1221" width="0.6129%" height="15" fill="rgb(250,223,3)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="1205" width="0.6129%" height="15" fill="rgb(236,178,37)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="1189" width="0.6129%" height="15" fill="rgb(241,158,50)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="1173" width="0.6129%" height="15" fill="rgb(213,121,41)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="1157" width="0.6129%" height="15" fill="rgb(240,92,3)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="1141" width="0.6129%" height="15" fill="rgb(205,123,3)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="1125" width="0.6129%" height="15" fill="rgb(205,97,47)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="1109" width="0.6129%" height="15" fill="rgb(247,152,14)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="1093" width="0.6129%" height="15" fill="rgb(248,195,53)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="1077" width="0.6129%" height="15" fill="rgb(226,201,16)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="1061" width="0.6129%" height="15" fill="rgb(205,98,0)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="1045" width="0.6129%" height="15" fill="rgb(214,191,48)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="1029" width="0.6129%" height="15" fill="rgb(237,112,39)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="1013" width="0.6129%" height="15" fill="rgb(247,203,27)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="997" width="0.6129%" height="15" fill="rgb(235,124,28)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="981" width="0.6129%" height="15" fill="rgb(208,207,46)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="965" width="0.6129%" height="15" fill="rgb(234,176,4)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="949" width="0.6129%" height="15" fill="rgb(230,133,28)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="933" width="0.6129%" height="15" fill="rgb(211,137,40)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="917" width="0.6129%" height="15" fill="rgb(254,35,13)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="901" width="0.6129%" height="15" fill="rgb(225,49,51)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="911.50"></text></g><g><title>cfree (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="885" width="0.6129%" height="15" fill="rgb(251,10,15)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="895.50"></text></g><g><title>[libc.so.6] (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="869" width="0.6129%" height="15" fill="rgb(228,207,15)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="879.50"></text></g><g><title>[libc.so.6] (1,410,171 samples, 0.61%)</title><rect x="66.6503%" y="853" width="0.6129%" height="15" fill="rgb(241,99,19)" fg:x="153359343" fg:w="1410171"/><text x="66.9003%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,828,122 samples, 1.23%)</title><rect x="66.6503%" y="1285" width="1.2291%" height="15" fill="rgb(207,104,49)" fg:x="153359343" fg:w="2828122"/><text x="66.9003%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,828,122 samples, 1.23%)</title><rect x="66.6503%" y="1269" width="1.2291%" height="15" fill="rgb(234,99,18)" fg:x="153359343" fg:w="2828122"/><text x="66.9003%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,828,122 samples, 1.23%)</title><rect x="66.6503%" y="1253" width="1.2291%" height="15" fill="rgb(213,191,49)" fg:x="153359343" fg:w="2828122"/><text x="66.9003%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,417,951 samples, 0.62%)</title><rect x="67.2632%" y="1237" width="0.6162%" height="15" fill="rgb(210,226,19)" fg:x="154769514" fg:w="1417951"/><text x="67.5132%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,417,951 samples, 0.62%)</title><rect x="67.2632%" y="1221" width="0.6162%" height="15" fill="rgb(229,97,18)" fg:x="154769514" fg:w="1417951"/><text x="67.5132%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,417,951 samples, 0.62%)</title><rect x="67.2632%" y="1205" width="0.6162%" height="15" fill="rgb(211,167,15)" fg:x="154769514" fg:w="1417951"/><text x="67.5132%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,417,951 samples, 0.62%)</title><rect x="67.2632%" y="1189" width="0.6162%" height="15" fill="rgb(210,169,34)" fg:x="154769514" fg:w="1417951"/><text x="67.5132%" y="1199.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,417,951 samples, 0.62%)</title><rect x="67.2632%" y="1173" width="0.6162%" height="15" fill="rgb(241,121,31)" fg:x="154769514" fg:w="1417951"/><text x="67.5132%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,417,951 samples, 0.62%)</title><rect x="67.2632%" y="1157" width="0.6162%" height="15" fill="rgb(232,40,11)" fg:x="154769514" fg:w="1417951"/><text x="67.5132%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,417,951 samples, 0.62%)</title><rect x="67.2632%" y="1141" width="0.6162%" height="15" fill="rgb(205,86,26)" fg:x="154769514" fg:w="1417951"/><text x="67.5132%" y="1151.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,417,951 samples, 0.62%)</title><rect x="67.2632%" y="1125" width="0.6162%" height="15" fill="rgb(231,126,28)" fg:x="154769514" fg:w="1417951"/><text x="67.5132%" y="1135.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,417,951 samples, 0.62%)</title><rect x="67.2632%" y="1109" width="0.6162%" height="15" fill="rgb(219,221,18)" fg:x="154769514" fg:w="1417951"/><text x="67.5132%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,417,951 samples, 0.62%)</title><rect x="67.2632%" y="1093" width="0.6162%" height="15" fill="rgb(211,40,0)" fg:x="154769514" fg:w="1417951"/><text x="67.5132%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,417,951 samples, 0.62%)</title><rect x="67.2632%" y="1077" width="0.6162%" height="15" fill="rgb(239,85,43)" fg:x="154769514" fg:w="1417951"/><text x="67.5132%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,417,951 samples, 0.62%)</title><rect x="67.2632%" y="1061" width="0.6162%" height="15" fill="rgb(231,55,21)" fg:x="154769514" fg:w="1417951"/><text x="67.5132%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,417,951 samples, 0.62%)</title><rect x="67.2632%" y="1045" width="0.6162%" height="15" fill="rgb(225,184,43)" fg:x="154769514" fg:w="1417951"/><text x="67.5132%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,417,951 samples, 0.62%)</title><rect x="67.2632%" y="1029" width="0.6162%" height="15" fill="rgb(251,158,41)" fg:x="154769514" fg:w="1417951"/><text x="67.5132%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,417,951 samples, 0.62%)</title><rect x="67.2632%" y="1013" width="0.6162%" height="15" fill="rgb(234,159,37)" fg:x="154769514" fg:w="1417951"/><text x="67.5132%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,417,951 samples, 0.62%)</title><rect x="67.2632%" y="997" width="0.6162%" height="15" fill="rgb(216,204,22)" fg:x="154769514" fg:w="1417951"/><text x="67.5132%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (1,417,951 samples, 0.62%)</title><rect x="67.2632%" y="981" width="0.6162%" height="15" fill="rgb(214,17,3)" fg:x="154769514" fg:w="1417951"/><text x="67.5132%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (4,157,968 samples, 1.81%)</title><rect x="66.6503%" y="1301" width="1.8071%" height="15" fill="rgb(212,111,17)" fg:x="153359343" fg:w="4157968"/><text x="66.9003%" y="1311.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,329,846 samples, 0.58%)</title><rect x="67.8794%" y="1285" width="0.5780%" height="15" fill="rgb(221,157,24)" fg:x="156187465" fg:w="1329846"/><text x="68.1294%" y="1295.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,329,846 samples, 0.58%)</title><rect x="67.8794%" y="1269" width="0.5780%" height="15" fill="rgb(252,16,13)" fg:x="156187465" fg:w="1329846"/><text x="68.1294%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,329,846 samples, 0.58%)</title><rect x="67.8794%" y="1253" width="0.5780%" height="15" fill="rgb(221,62,2)" fg:x="156187465" fg:w="1329846"/><text x="68.1294%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,329,846 samples, 0.58%)</title><rect x="67.8794%" y="1237" width="0.5780%" height="15" fill="rgb(247,87,22)" fg:x="156187465" fg:w="1329846"/><text x="68.1294%" y="1247.50"></text></g><g><title>alloc::alloc::dealloc (1,329,846 samples, 0.58%)</title><rect x="67.8794%" y="1221" width="0.5780%" height="15" fill="rgb(215,73,9)" fg:x="156187465" fg:w="1329846"/><text x="68.1294%" y="1231.50"></text></g><g><title>cfree (1,329,846 samples, 0.58%)</title><rect x="67.8794%" y="1205" width="0.5780%" height="15" fill="rgb(207,175,33)" fg:x="156187465" fg:w="1329846"/><text x="68.1294%" y="1215.50"></text></g><g><title>[libc.so.6] (1,329,846 samples, 0.58%)</title><rect x="67.8794%" y="1189" width="0.5780%" height="15" fill="rgb(243,129,54)" fg:x="156187465" fg:w="1329846"/><text x="68.1294%" y="1199.50"></text></g><g><title>[libc.so.6] (1,329,846 samples, 0.58%)</title><rect x="67.8794%" y="1173" width="0.5780%" height="15" fill="rgb(227,119,45)" fg:x="156187465" fg:w="1329846"/><text x="68.1294%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1749" width="2.4843%" height="15" fill="rgb(205,109,36)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1759.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1733" width="2.4843%" height="15" fill="rgb(205,6,39)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1743.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1717" width="2.4843%" height="15" fill="rgb(221,32,16)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1727.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1701" width="2.4843%" height="15" fill="rgb(228,144,50)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1711.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1685" width="2.4843%" height="15" fill="rgb(229,201,53)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1695.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1669" width="2.4843%" height="15" fill="rgb(249,153,27)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1679.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1653" width="2.4843%" height="15" fill="rgb(227,106,25)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1663.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1637" width="2.4843%" height="15" fill="rgb(230,65,29)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1647.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1621" width="2.4843%" height="15" fill="rgb(221,57,46)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1631.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1605" width="2.4843%" height="15" fill="rgb(229,161,17)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1615.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1589" width="2.4843%" height="15" fill="rgb(222,213,11)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1599.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1573" width="2.4843%" height="15" fill="rgb(235,35,13)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1583.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1557" width="2.4843%" height="15" fill="rgb(233,158,34)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1567.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1541" width="2.4843%" height="15" fill="rgb(215,151,48)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1551.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1525" width="2.4843%" height="15" fill="rgb(229,84,14)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1535.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1509" width="2.4843%" height="15" fill="rgb(229,68,14)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1519.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1493" width="2.4843%" height="15" fill="rgb(243,106,26)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1503.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1477" width="2.4843%" height="15" fill="rgb(206,45,38)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1487.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1461" width="2.4843%" height="15" fill="rgb(226,6,15)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1471.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1445" width="2.4843%" height="15" fill="rgb(232,22,54)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1455.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1429" width="2.4843%" height="15" fill="rgb(229,222,32)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1439.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1413" width="2.4843%" height="15" fill="rgb(228,62,29)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1423.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1397" width="2.4843%" height="15" fill="rgb(251,103,34)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1407.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1381" width="2.4843%" height="15" fill="rgb(233,12,30)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1391.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1365" width="2.4843%" height="15" fill="rgb(238,52,0)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1375.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1349" width="2.4843%" height="15" fill="rgb(223,98,5)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1359.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1333" width="2.4843%" height="15" fill="rgb(228,75,37)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1343.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,716,168 samples, 2.48%)</title><rect x="66.6503%" y="1317" width="2.4843%" height="15" fill="rgb(205,115,49)" fg:x="153359343" fg:w="5716168"/><text x="66.9003%" y="1327.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,558,200 samples, 0.68%)</title><rect x="68.4574%" y="1301" width="0.6772%" height="15" fill="rgb(250,154,43)" fg:x="157517311" fg:w="1558200"/><text x="68.7074%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,558,200 samples, 0.68%)</title><rect x="68.4574%" y="1285" width="0.6772%" height="15" fill="rgb(226,43,29)" fg:x="157517311" fg:w="1558200"/><text x="68.7074%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,558,200 samples, 0.68%)</title><rect x="68.4574%" y="1269" width="0.6772%" height="15" fill="rgb(249,228,39)" fg:x="157517311" fg:w="1558200"/><text x="68.7074%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,558,200 samples, 0.68%)</title><rect x="68.4574%" y="1253" width="0.6772%" height="15" fill="rgb(216,79,43)" fg:x="157517311" fg:w="1558200"/><text x="68.7074%" y="1263.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,558,200 samples, 0.68%)</title><rect x="68.4574%" y="1237" width="0.6772%" height="15" fill="rgb(228,95,12)" fg:x="157517311" fg:w="1558200"/><text x="68.7074%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,558,200 samples, 0.68%)</title><rect x="68.4574%" y="1221" width="0.6772%" height="15" fill="rgb(249,221,15)" fg:x="157517311" fg:w="1558200"/><text x="68.7074%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (1,558,200 samples, 0.68%)</title><rect x="68.4574%" y="1205" width="0.6772%" height="15" fill="rgb(233,34,13)" fg:x="157517311" fg:w="1558200"/><text x="68.7074%" y="1215.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1,558,200 samples, 0.68%)</title><rect x="68.4574%" y="1189" width="0.6772%" height="15" fill="rgb(214,103,39)" fg:x="157517311" fg:w="1558200"/><text x="68.7074%" y="1199.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1,558,200 samples, 0.68%)</title><rect x="68.4574%" y="1173" width="0.6772%" height="15" fill="rgb(251,126,39)" fg:x="157517311" fg:w="1558200"/><text x="68.7074%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (1,558,200 samples, 0.68%)</title><rect x="68.4574%" y="1157" width="0.6772%" height="15" fill="rgb(214,216,36)" fg:x="157517311" fg:w="1558200"/><text x="68.7074%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,558,200 samples, 0.68%)</title><rect x="68.4574%" y="1141" width="0.6772%" height="15" fill="rgb(220,221,8)" fg:x="157517311" fg:w="1558200"/><text x="68.7074%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,558,200 samples, 0.68%)</title><rect x="68.4574%" y="1125" width="0.6772%" height="15" fill="rgb(240,216,3)" fg:x="157517311" fg:w="1558200"/><text x="68.7074%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,558,200 samples, 0.68%)</title><rect x="68.4574%" y="1109" width="0.6772%" height="15" fill="rgb(232,218,17)" fg:x="157517311" fg:w="1558200"/><text x="68.7074%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,558,200 samples, 0.68%)</title><rect x="68.4574%" y="1093" width="0.6772%" height="15" fill="rgb(229,163,45)" fg:x="157517311" fg:w="1558200"/><text x="68.7074%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,558,200 samples, 0.68%)</title><rect x="68.4574%" y="1077" width="0.6772%" height="15" fill="rgb(231,110,42)" fg:x="157517311" fg:w="1558200"/><text x="68.7074%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1,558,200 samples, 0.68%)</title><rect x="68.4574%" y="1061" width="0.6772%" height="15" fill="rgb(208,170,48)" fg:x="157517311" fg:w="1558200"/><text x="68.7074%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (11,491,906 samples, 4.99%)</title><rect x="64.8030%" y="1813" width="4.9944%" height="15" fill="rgb(239,116,25)" fg:x="149108734" fg:w="11491906"/><text x="65.0530%" y="1823.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11,491,906 samples, 4.99%)</title><rect x="64.8030%" y="1797" width="4.9944%" height="15" fill="rgb(219,200,50)" fg:x="149108734" fg:w="11491906"/><text x="65.0530%" y="1807.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (11,491,906 samples, 4.99%)</title><rect x="64.8030%" y="1781" width="4.9944%" height="15" fill="rgb(245,200,0)" fg:x="149108734" fg:w="11491906"/><text x="65.0530%" y="1791.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (10,085,873 samples, 4.38%)</title><rect x="65.4140%" y="1765" width="4.3833%" height="15" fill="rgb(245,119,33)" fg:x="150514767" fg:w="10085873"/><text x="65.6640%" y="1775.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,525,129 samples, 0.66%)</title><rect x="69.1346%" y="1749" width="0.6628%" height="15" fill="rgb(231,125,12)" fg:x="159075511" fg:w="1525129"/><text x="69.3846%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,525,129 samples, 0.66%)</title><rect x="69.1346%" y="1733" width="0.6628%" height="15" fill="rgb(216,96,41)" fg:x="159075511" fg:w="1525129"/><text x="69.3846%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,525,129 samples, 0.66%)</title><rect x="69.1346%" y="1717" width="0.6628%" height="15" fill="rgb(248,43,45)" fg:x="159075511" fg:w="1525129"/><text x="69.3846%" y="1727.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,525,129 samples, 0.66%)</title><rect x="69.1346%" y="1701" width="0.6628%" height="15" fill="rgb(217,222,7)" fg:x="159075511" fg:w="1525129"/><text x="69.3846%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,525,129 samples, 0.66%)</title><rect x="69.1346%" y="1685" width="0.6628%" height="15" fill="rgb(233,28,6)" fg:x="159075511" fg:w="1525129"/><text x="69.3846%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,525,129 samples, 0.66%)</title><rect x="69.1346%" y="1669" width="0.6628%" height="15" fill="rgb(231,218,15)" fg:x="159075511" fg:w="1525129"/><text x="69.3846%" y="1679.50"></text></g><g><title>alloc::alloc::dealloc (1,525,129 samples, 0.66%)</title><rect x="69.1346%" y="1653" width="0.6628%" height="15" fill="rgb(226,171,48)" fg:x="159075511" fg:w="1525129"/><text x="69.3846%" y="1663.50"></text></g><g><title>cfree (1,525,129 samples, 0.66%)</title><rect x="69.1346%" y="1637" width="0.6628%" height="15" fill="rgb(235,201,9)" fg:x="159075511" fg:w="1525129"/><text x="69.3846%" y="1647.50"></text></g><g><title>[libc.so.6] (1,525,129 samples, 0.66%)</title><rect x="69.1346%" y="1621" width="0.6628%" height="15" fill="rgb(217,80,15)" fg:x="159075511" fg:w="1525129"/><text x="69.3846%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,707,923 samples, 1.18%)</title><rect x="69.7974%" y="1813" width="1.1769%" height="15" fill="rgb(219,152,8)" fg:x="160600640" fg:w="2707923"/><text x="70.0474%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,707,923 samples, 1.18%)</title><rect x="69.7974%" y="1797" width="1.1769%" height="15" fill="rgb(243,107,38)" fg:x="160600640" fg:w="2707923"/><text x="70.0474%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,707,923 samples, 1.18%)</title><rect x="69.7974%" y="1781" width="1.1769%" height="15" fill="rgb(231,17,5)" fg:x="160600640" fg:w="2707923"/><text x="70.0474%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,707,923 samples, 1.18%)</title><rect x="69.7974%" y="1765" width="1.1769%" height="15" fill="rgb(209,25,54)" fg:x="160600640" fg:w="2707923"/><text x="70.0474%" y="1775.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,707,923 samples, 1.18%)</title><rect x="69.7974%" y="1749" width="1.1769%" height="15" fill="rgb(219,0,2)" fg:x="160600640" fg:w="2707923"/><text x="70.0474%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,707,923 samples, 1.18%)</title><rect x="69.7974%" y="1733" width="1.1769%" height="15" fill="rgb(246,9,5)" fg:x="160600640" fg:w="2707923"/><text x="70.0474%" y="1743.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,707,923 samples, 1.18%)</title><rect x="69.7974%" y="1717" width="1.1769%" height="15" fill="rgb(226,159,4)" fg:x="160600640" fg:w="2707923"/><text x="70.0474%" y="1727.50"></text></g><g><title>alloc::alloc::dealloc (2,707,923 samples, 1.18%)</title><rect x="69.7974%" y="1701" width="1.1769%" height="15" fill="rgb(219,175,34)" fg:x="160600640" fg:w="2707923"/><text x="70.0474%" y="1711.50"></text></g><g><title>cfree (2,707,923 samples, 1.18%)</title><rect x="69.7974%" y="1685" width="1.1769%" height="15" fill="rgb(236,10,46)" fg:x="160600640" fg:w="2707923"/><text x="70.0474%" y="1695.50"></text></g><g><title>[libc.so.6] (1,437,684 samples, 0.62%)</title><rect x="70.3494%" y="1669" width="0.6248%" height="15" fill="rgb(240,211,16)" fg:x="161870879" fg:w="1437684"/><text x="70.5994%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,073,802 samples, 7.42%)</title><rect x="64.1241%" y="1861" width="7.4203%" height="15" fill="rgb(205,3,43)" fg:x="147546625" fg:w="17073802"/><text x="64.3741%" y="1871.50">&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (17,073,802 samples, 7.42%)</title><rect x="64.1241%" y="1845" width="7.4203%" height="15" fill="rgb(245,7,22)" fg:x="147546625" fg:w="17073802"/><text x="64.3741%" y="1855.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (17,073,802 samples, 7.42%)</title><rect x="64.1241%" y="1829" width="7.4203%" height="15" fill="rgb(239,132,32)" fg:x="147546625" fg:w="17073802"/><text x="64.3741%" y="1839.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,311,864 samples, 0.57%)</title><rect x="70.9743%" y="1813" width="0.5701%" height="15" fill="rgb(228,202,34)" fg:x="163308563" fg:w="1311864"/><text x="71.2243%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,311,864 samples, 0.57%)</title><rect x="70.9743%" y="1797" width="0.5701%" height="15" fill="rgb(254,200,22)" fg:x="163308563" fg:w="1311864"/><text x="71.2243%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,311,864 samples, 0.57%)</title><rect x="70.9743%" y="1781" width="0.5701%" height="15" fill="rgb(219,10,39)" fg:x="163308563" fg:w="1311864"/><text x="71.2243%" y="1791.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,311,864 samples, 0.57%)</title><rect x="70.9743%" y="1765" width="0.5701%" height="15" fill="rgb(226,210,39)" fg:x="163308563" fg:w="1311864"/><text x="71.2243%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,311,864 samples, 0.57%)</title><rect x="70.9743%" y="1749" width="0.5701%" height="15" fill="rgb(208,219,16)" fg:x="163308563" fg:w="1311864"/><text x="71.2243%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,311,864 samples, 0.57%)</title><rect x="70.9743%" y="1733" width="0.5701%" height="15" fill="rgb(216,158,51)" fg:x="163308563" fg:w="1311864"/><text x="71.2243%" y="1743.50"></text></g><g><title>alloc::alloc::dealloc (1,311,864 samples, 0.57%)</title><rect x="70.9743%" y="1717" width="0.5701%" height="15" fill="rgb(233,14,44)" fg:x="163308563" fg:w="1311864"/><text x="71.2243%" y="1727.50"></text></g><g><title>cfree (1,311,864 samples, 0.57%)</title><rect x="70.9743%" y="1701" width="0.5701%" height="15" fill="rgb(237,97,39)" fg:x="163308563" fg:w="1311864"/><text x="71.2243%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (27,992,982 samples, 12.17%)</title><rect x="64.1241%" y="1877" width="12.1658%" height="15" fill="rgb(218,198,43)" fg:x="147546625" fg:w="27992982"/><text x="64.3741%" y="1887.50">core::ptr::drop_in..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (10,919,180 samples, 4.75%)</title><rect x="71.5444%" y="1861" width="4.7455%" height="15" fill="rgb(231,104,20)" fg:x="164620427" fg:w="10919180"/><text x="71.7944%" y="1871.50">core::..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,919,180 samples, 4.75%)</title><rect x="71.5444%" y="1845" width="4.7455%" height="15" fill="rgb(254,36,13)" fg:x="164620427" fg:w="10919180"/><text x="71.7944%" y="1855.50">&lt;alloc..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (10,919,180 samples, 4.75%)</title><rect x="71.5444%" y="1829" width="4.7455%" height="15" fill="rgb(248,14,50)" fg:x="164620427" fg:w="10919180"/><text x="71.7944%" y="1839.50">alloc:..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10,919,180 samples, 4.75%)</title><rect x="71.5444%" y="1813" width="4.7455%" height="15" fill="rgb(217,107,29)" fg:x="164620427" fg:w="10919180"/><text x="71.7944%" y="1823.50">&lt;alloc..</text></g><g><title>alloc::alloc::dealloc (10,919,180 samples, 4.75%)</title><rect x="71.5444%" y="1797" width="4.7455%" height="15" fill="rgb(251,169,33)" fg:x="164620427" fg:w="10919180"/><text x="71.7944%" y="1807.50">alloc:..</text></g><g><title>cfree (10,919,180 samples, 4.75%)</title><rect x="71.5444%" y="1781" width="4.7455%" height="15" fill="rgb(217,108,32)" fg:x="164620427" fg:w="10919180"/><text x="71.7944%" y="1791.50">cfree</text></g><g><title>[libc.so.6] (10,919,180 samples, 4.75%)</title><rect x="71.5444%" y="1765" width="4.7455%" height="15" fill="rgb(219,66,42)" fg:x="164620427" fg:w="10919180"/><text x="71.7944%" y="1775.50">[libc...</text></g><g><title>[libc.so.6] (10,919,180 samples, 4.75%)</title><rect x="71.5444%" y="1749" width="4.7455%" height="15" fill="rgb(206,180,7)" fg:x="164620427" fg:w="10919180"/><text x="71.7944%" y="1759.50">[libc...</text></g><g><title>[libc.so.6] (5,315,904 samples, 2.31%)</title><rect x="73.9796%" y="1733" width="2.3103%" height="15" fill="rgb(208,226,31)" fg:x="170223703" fg:w="5315904"/><text x="74.2296%" y="1743.50">[..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (1,379,805 samples, 0.60%)</title><rect x="76.2899%" y="1877" width="0.5997%" height="15" fill="rgb(218,26,49)" fg:x="175539607" fg:w="1379805"/><text x="76.5399%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,379,805 samples, 0.60%)</title><rect x="76.2899%" y="1861" width="0.5997%" height="15" fill="rgb(233,197,48)" fg:x="175539607" fg:w="1379805"/><text x="76.5399%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,379,805 samples, 0.60%)</title><rect x="76.2899%" y="1845" width="0.5997%" height="15" fill="rgb(252,181,51)" fg:x="175539607" fg:w="1379805"/><text x="76.5399%" y="1855.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,379,805 samples, 0.60%)</title><rect x="76.2899%" y="1829" width="0.5997%" height="15" fill="rgb(253,90,19)" fg:x="175539607" fg:w="1379805"/><text x="76.5399%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,379,805 samples, 0.60%)</title><rect x="76.2899%" y="1813" width="0.5997%" height="15" fill="rgb(215,171,30)" fg:x="175539607" fg:w="1379805"/><text x="76.5399%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,379,805 samples, 0.60%)</title><rect x="76.2899%" y="1797" width="0.5997%" height="15" fill="rgb(214,222,9)" fg:x="175539607" fg:w="1379805"/><text x="76.5399%" y="1807.50"></text></g><g><title>alloc::alloc::dealloc (1,379,805 samples, 0.60%)</title><rect x="76.2899%" y="1781" width="0.5997%" height="15" fill="rgb(223,3,22)" fg:x="175539607" fg:w="1379805"/><text x="76.5399%" y="1791.50"></text></g><g><title>cfree (1,379,805 samples, 0.60%)</title><rect x="76.2899%" y="1765" width="0.5997%" height="15" fill="rgb(225,196,46)" fg:x="175539607" fg:w="1379805"/><text x="76.5399%" y="1775.50"></text></g><g><title>[libc.so.6] (1,379,805 samples, 0.60%)</title><rect x="76.2899%" y="1749" width="0.5997%" height="15" fill="rgb(209,110,37)" fg:x="175539607" fg:w="1379805"/><text x="76.5399%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35,199,304 samples, 15.30%)</title><rect x="62.2688%" y="1989" width="15.2977%" height="15" fill="rgb(249,89,12)" fg:x="143277723" fg:w="35199304"/><text x="62.5188%" y="1999.50">&lt;alloc::vec::Vec&lt;T,A&gt; a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (35,199,304 samples, 15.30%)</title><rect x="62.2688%" y="1973" width="15.2977%" height="15" fill="rgb(226,27,33)" fg:x="143277723" fg:w="35199304"/><text x="62.5188%" y="1983.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (35,199,304 samples, 15.30%)</title><rect x="62.2688%" y="1957" width="15.2977%" height="15" fill="rgb(213,82,22)" fg:x="143277723" fg:w="35199304"/><text x="62.5188%" y="1967.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (32,291,976 samples, 14.03%)</title><rect x="63.5323%" y="1941" width="14.0342%" height="15" fill="rgb(248,140,0)" fg:x="146185051" fg:w="32291976"/><text x="63.7823%" y="1951.50">core::ptr::drop_in_pl..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32,291,976 samples, 14.03%)</title><rect x="63.5323%" y="1925" width="14.0342%" height="15" fill="rgb(228,106,3)" fg:x="146185051" fg:w="32291976"/><text x="63.7823%" y="1935.50">&lt;alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (32,291,976 samples, 14.03%)</title><rect x="63.5323%" y="1909" width="14.0342%" height="15" fill="rgb(209,23,37)" fg:x="146185051" fg:w="32291976"/><text x="63.7823%" y="1919.50">core::ptr::drop_in_pl..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (32,291,976 samples, 14.03%)</title><rect x="63.5323%" y="1893" width="14.0342%" height="15" fill="rgb(241,93,50)" fg:x="146185051" fg:w="32291976"/><text x="63.7823%" y="1903.50">core::ptr::drop_in_pl..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (1,557,615 samples, 0.68%)</title><rect x="76.8896%" y="1877" width="0.6769%" height="15" fill="rgb(253,46,43)" fg:x="176919412" fg:w="1557615"/><text x="77.1396%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (1,557,615 samples, 0.68%)</title><rect x="76.8896%" y="1861" width="0.6769%" height="15" fill="rgb(226,206,43)" fg:x="176919412" fg:w="1557615"/><text x="77.1396%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (1,557,615 samples, 0.68%)</title><rect x="76.8896%" y="1845" width="0.6769%" height="15" fill="rgb(217,54,7)" fg:x="176919412" fg:w="1557615"/><text x="77.1396%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1,557,615 samples, 0.68%)</title><rect x="76.8896%" y="1829" width="0.6769%" height="15" fill="rgb(223,5,52)" fg:x="176919412" fg:w="1557615"/><text x="77.1396%" y="1839.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,557,615 samples, 0.68%)</title><rect x="76.8896%" y="1813" width="0.6769%" height="15" fill="rgb(206,52,46)" fg:x="176919412" fg:w="1557615"/><text x="77.1396%" y="1823.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (1,557,615 samples, 0.68%)</title><rect x="76.8896%" y="1797" width="0.6769%" height="15" fill="rgb(253,136,11)" fg:x="176919412" fg:w="1557615"/><text x="77.1396%" y="1807.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (1,557,615 samples, 0.68%)</title><rect x="76.8896%" y="1781" width="0.6769%" height="15" fill="rgb(208,106,33)" fg:x="176919412" fg:w="1557615"/><text x="77.1396%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,557,615 samples, 0.68%)</title><rect x="76.8896%" y="1765" width="0.6769%" height="15" fill="rgb(206,54,4)" fg:x="176919412" fg:w="1557615"/><text x="77.1396%" y="1775.50"></text></g><g><title>alloc::alloc::dealloc (1,557,615 samples, 0.68%)</title><rect x="76.8896%" y="1749" width="0.6769%" height="15" fill="rgb(213,3,15)" fg:x="176919412" fg:w="1557615"/><text x="77.1396%" y="1759.50"></text></g><g><title>cfree (1,557,615 samples, 0.68%)</title><rect x="76.8896%" y="1733" width="0.6769%" height="15" fill="rgb(252,211,39)" fg:x="176919412" fg:w="1557615"/><text x="77.1396%" y="1743.50"></text></g><g><title>[libc.so.6] (1,557,615 samples, 0.68%)</title><rect x="76.8896%" y="1717" width="0.6769%" height="15" fill="rgb(223,6,36)" fg:x="176919412" fg:w="1557615"/><text x="77.1396%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (36,771,599 samples, 15.98%)</title><rect x="62.2688%" y="2213" width="15.9810%" height="15" fill="rgb(252,169,45)" fg:x="143277723" fg:w="36771599"/><text x="62.5188%" y="2223.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (36,771,599 samples, 15.98%)</title><rect x="62.2688%" y="2197" width="15.9810%" height="15" fill="rgb(212,48,26)" fg:x="143277723" fg:w="36771599"/><text x="62.5188%" y="2207.50">core::ptr::drop_in_place&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36,771,599 samples, 15.98%)</title><rect x="62.2688%" y="2181" width="15.9810%" height="15" fill="rgb(251,102,48)" fg:x="143277723" fg:w="36771599"/><text x="62.5188%" y="2191.50">&lt;alloc::vec::Vec&lt;T,A&gt; as ..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (36,771,599 samples, 15.98%)</title><rect x="62.2688%" y="2165" width="15.9810%" height="15" fill="rgb(243,208,16)" fg:x="143277723" fg:w="36771599"/><text x="62.5188%" y="2175.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (36,771,599 samples, 15.98%)</title><rect x="62.2688%" y="2149" width="15.9810%" height="15" fill="rgb(219,96,24)" fg:x="143277723" fg:w="36771599"/><text x="62.5188%" y="2159.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (36,771,599 samples, 15.98%)</title><rect x="62.2688%" y="2133" width="15.9810%" height="15" fill="rgb(219,33,29)" fg:x="143277723" fg:w="36771599"/><text x="62.5188%" y="2143.50">core::ptr::drop_in_place&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36,771,599 samples, 15.98%)</title><rect x="62.2688%" y="2117" width="15.9810%" height="15" fill="rgb(223,176,5)" fg:x="143277723" fg:w="36771599"/><text x="62.5188%" y="2127.50">&lt;alloc::vec::Vec&lt;T,A&gt; as ..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (36,771,599 samples, 15.98%)</title><rect x="62.2688%" y="2101" width="15.9810%" height="15" fill="rgb(228,140,14)" fg:x="143277723" fg:w="36771599"/><text x="62.5188%" y="2111.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (36,771,599 samples, 15.98%)</title><rect x="62.2688%" y="2085" width="15.9810%" height="15" fill="rgb(217,179,31)" fg:x="143277723" fg:w="36771599"/><text x="62.5188%" y="2095.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (36,771,599 samples, 15.98%)</title><rect x="62.2688%" y="2069" width="15.9810%" height="15" fill="rgb(230,9,30)" fg:x="143277723" fg:w="36771599"/><text x="62.5188%" y="2079.50">core::ptr::drop_in_place&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36,771,599 samples, 15.98%)</title><rect x="62.2688%" y="2053" width="15.9810%" height="15" fill="rgb(230,136,20)" fg:x="143277723" fg:w="36771599"/><text x="62.5188%" y="2063.50">&lt;alloc::vec::Vec&lt;T,A&gt; as ..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (36,771,599 samples, 15.98%)</title><rect x="62.2688%" y="2037" width="15.9810%" height="15" fill="rgb(215,210,22)" fg:x="143277723" fg:w="36771599"/><text x="62.5188%" y="2047.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (36,771,599 samples, 15.98%)</title><rect x="62.2688%" y="2021" width="15.9810%" height="15" fill="rgb(218,43,5)" fg:x="143277723" fg:w="36771599"/><text x="62.5188%" y="2031.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (36,771,599 samples, 15.98%)</title><rect x="62.2688%" y="2005" width="15.9810%" height="15" fill="rgb(216,11,5)" fg:x="143277723" fg:w="36771599"/><text x="62.5188%" y="2015.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (1,572,295 samples, 0.68%)</title><rect x="77.5665%" y="1989" width="0.6833%" height="15" fill="rgb(209,82,29)" fg:x="178477027" fg:w="1572295"/><text x="77.8165%" y="1999.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,572,295 samples, 0.68%)</title><rect x="77.5665%" y="1973" width="0.6833%" height="15" fill="rgb(244,115,12)" fg:x="178477027" fg:w="1572295"/><text x="77.8165%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,572,295 samples, 0.68%)</title><rect x="77.5665%" y="1957" width="0.6833%" height="15" fill="rgb(222,82,18)" fg:x="178477027" fg:w="1572295"/><text x="77.8165%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,572,295 samples, 0.68%)</title><rect x="77.5665%" y="1941" width="0.6833%" height="15" fill="rgb(249,227,8)" fg:x="178477027" fg:w="1572295"/><text x="77.8165%" y="1951.50"></text></g><g><title>alloc::alloc::dealloc (1,572,295 samples, 0.68%)</title><rect x="77.5665%" y="1925" width="0.6833%" height="15" fill="rgb(253,141,45)" fg:x="178477027" fg:w="1572295"/><text x="77.8165%" y="1935.50"></text></g><g><title>cfree (1,572,295 samples, 0.68%)</title><rect x="77.5665%" y="1909" width="0.6833%" height="15" fill="rgb(234,184,4)" fg:x="178477027" fg:w="1572295"/><text x="77.8165%" y="1919.50"></text></g><g><title>[libc.so.6] (1,572,295 samples, 0.68%)</title><rect x="77.5665%" y="1893" width="0.6833%" height="15" fill="rgb(218,194,23)" fg:x="178477027" fg:w="1572295"/><text x="77.8165%" y="1903.50"></text></g><g><title>[libc.so.6] (1,572,295 samples, 0.68%)</title><rect x="77.5665%" y="1877" width="0.6833%" height="15" fill="rgb(235,66,41)" fg:x="178477027" fg:w="1572295"/><text x="77.8165%" y="1887.50"></text></g><g><title>[libc.so.6] (1,572,295 samples, 0.68%)</title><rect x="77.5665%" y="1861" width="0.6833%" height="15" fill="rgb(245,217,1)" fg:x="178477027" fg:w="1572295"/><text x="77.8165%" y="1871.50"></text></g><g><title>benchmark::benchmark_accumulated_modifications (132,342,695 samples, 57.52%)</title><rect x="21.3414%" y="2229" width="57.5164%" height="15" fill="rgb(229,91,1)" fg:x="49105569" fg:w="132342695"/><text x="21.5914%" y="2239.50">benchmark::benchmark_accumulated_modifications</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,398,942 samples, 0.61%)</title><rect x="78.2498%" y="2213" width="0.6080%" height="15" fill="rgb(207,101,30)" fg:x="180049322" fg:w="1398942"/><text x="78.4998%" y="2223.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,398,942 samples, 0.61%)</title><rect x="78.2498%" y="2197" width="0.6080%" height="15" fill="rgb(223,82,49)" fg:x="180049322" fg:w="1398942"/><text x="78.4998%" y="2207.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,398,942 samples, 0.61%)</title><rect x="78.2498%" y="2181" width="0.6080%" height="15" fill="rgb(218,167,17)" fg:x="180049322" fg:w="1398942"/><text x="78.4998%" y="2191.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,398,942 samples, 0.61%)</title><rect x="78.2498%" y="2165" width="0.6080%" height="15" fill="rgb(208,103,14)" fg:x="180049322" fg:w="1398942"/><text x="78.4998%" y="2175.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,398,942 samples, 0.61%)</title><rect x="78.2498%" y="2149" width="0.6080%" height="15" fill="rgb(238,20,8)" fg:x="180049322" fg:w="1398942"/><text x="78.4998%" y="2159.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,398,942 samples, 0.61%)</title><rect x="78.2498%" y="2133" width="0.6080%" height="15" fill="rgb(218,80,54)" fg:x="180049322" fg:w="1398942"/><text x="78.4998%" y="2143.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,398,942 samples, 0.61%)</title><rect x="78.2498%" y="2117" width="0.6080%" height="15" fill="rgb(240,144,17)" fg:x="180049322" fg:w="1398942"/><text x="78.4998%" y="2127.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,398,942 samples, 0.61%)</title><rect x="78.2498%" y="2101" width="0.6080%" height="15" fill="rgb(245,27,50)" fg:x="180049322" fg:w="1398942"/><text x="78.4998%" y="2111.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,398,942 samples, 0.61%)</title><rect x="78.2498%" y="2085" width="0.6080%" height="15" fill="rgb(251,51,7)" fg:x="180049322" fg:w="1398942"/><text x="78.4998%" y="2095.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,398,942 samples, 0.61%)</title><rect x="78.2498%" y="2069" width="0.6080%" height="15" fill="rgb(245,217,29)" fg:x="180049322" fg:w="1398942"/><text x="78.4998%" y="2079.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,398,942 samples, 0.61%)</title><rect x="78.2498%" y="2053" width="0.6080%" height="15" fill="rgb(221,176,29)" fg:x="180049322" fg:w="1398942"/><text x="78.4998%" y="2063.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,398,942 samples, 0.61%)</title><rect x="78.2498%" y="2037" width="0.6080%" height="15" fill="rgb(212,180,24)" fg:x="180049322" fg:w="1398942"/><text x="78.4998%" y="2047.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,398,942 samples, 0.61%)</title><rect x="78.2498%" y="2021" width="0.6080%" height="15" fill="rgb(254,24,2)" fg:x="180049322" fg:w="1398942"/><text x="78.4998%" y="2031.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,398,942 samples, 0.61%)</title><rect x="78.2498%" y="2005" width="0.6080%" height="15" fill="rgb(230,100,2)" fg:x="180049322" fg:w="1398942"/><text x="78.4998%" y="2015.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,398,942 samples, 0.61%)</title><rect x="78.2498%" y="1989" width="0.6080%" height="15" fill="rgb(219,142,25)" fg:x="180049322" fg:w="1398942"/><text x="78.4998%" y="1999.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,398,942 samples, 0.61%)</title><rect x="78.2498%" y="1973" width="0.6080%" height="15" fill="rgb(240,73,43)" fg:x="180049322" fg:w="1398942"/><text x="78.4998%" y="1983.50"></text></g><g><title>benchmark::generate_web_layout_csv (1,466,678 samples, 0.64%)</title><rect x="78.8578%" y="2229" width="0.6374%" height="15" fill="rgb(214,114,15)" fg:x="181448264" fg:w="1466678"/><text x="79.1078%" y="2239.50"></text></g><g><title>alloc::fmt::format (1,466,678 samples, 0.64%)</title><rect x="78.8578%" y="2213" width="0.6374%" height="15" fill="rgb(207,130,4)" fg:x="181448264" fg:w="1466678"/><text x="79.1078%" y="2223.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1,466,678 samples, 0.64%)</title><rect x="78.8578%" y="2197" width="0.6374%" height="15" fill="rgb(221,25,40)" fg:x="181448264" fg:w="1466678"/><text x="79.1078%" y="2207.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (1,466,678 samples, 0.64%)</title><rect x="78.8578%" y="2181" width="0.6374%" height="15" fill="rgb(241,184,7)" fg:x="181448264" fg:w="1466678"/><text x="79.1078%" y="2191.50"></text></g><g><title>alloc::fmt::format::format_inner (1,466,678 samples, 0.64%)</title><rect x="78.8578%" y="2165" width="0.6374%" height="15" fill="rgb(235,159,4)" fg:x="181448264" fg:w="1466678"/><text x="79.1078%" y="2175.50"></text></g><g><title>core::fmt::Write::write_fmt (1,466,678 samples, 0.64%)</title><rect x="78.8578%" y="2149" width="0.6374%" height="15" fill="rgb(214,87,48)" fg:x="181448264" fg:w="1466678"/><text x="79.1078%" y="2159.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (1,466,678 samples, 0.64%)</title><rect x="78.8578%" y="2133" width="0.6374%" height="15" fill="rgb(246,198,24)" fg:x="181448264" fg:w="1466678"/><text x="79.1078%" y="2143.50"></text></g><g><title>core::fmt::write (1,466,678 samples, 0.64%)</title><rect x="78.8578%" y="2117" width="0.6374%" height="15" fill="rgb(209,66,40)" fg:x="181448264" fg:w="1466678"/><text x="79.1078%" y="2127.50"></text></g><g><title>core::fmt::run (1,466,678 samples, 0.64%)</title><rect x="78.8578%" y="2101" width="0.6374%" height="15" fill="rgb(233,147,39)" fg:x="181448264" fg:w="1466678"/><text x="79.1078%" y="2111.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1,466,678 samples, 0.64%)</title><rect x="78.8578%" y="2085" width="0.6374%" height="15" fill="rgb(231,145,52)" fg:x="181448264" fg:w="1466678"/><text x="79.1078%" y="2095.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (1,466,678 samples, 0.64%)</title><rect x="78.8578%" y="2069" width="0.6374%" height="15" fill="rgb(206,20,26)" fg:x="181448264" fg:w="1466678"/><text x="79.1078%" y="2079.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (992,587 samples, 0.43%)</title><rect x="79.4952%" y="2213" width="0.4314%" height="15" fill="rgb(238,220,4)" fg:x="182914942" fg:w="992587"/><text x="79.7452%" y="2223.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (992,587 samples, 0.43%)</title><rect x="79.4952%" y="2197" width="0.4314%" height="15" fill="rgb(252,195,42)" fg:x="182914942" fg:w="992587"/><text x="79.7452%" y="2207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (992,587 samples, 0.43%)</title><rect x="79.4952%" y="2181" width="0.4314%" height="15" fill="rgb(209,10,6)" fg:x="182914942" fg:w="992587"/><text x="79.7452%" y="2191.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (992,587 samples, 0.43%)</title><rect x="79.4952%" y="2165" width="0.4314%" height="15" fill="rgb(229,3,52)" fg:x="182914942" fg:w="992587"/><text x="79.7452%" y="2175.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (992,587 samples, 0.43%)</title><rect x="79.4952%" y="2149" width="0.4314%" height="15" fill="rgb(253,49,37)" fg:x="182914942" fg:w="992587"/><text x="79.7452%" y="2159.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (992,587 samples, 0.43%)</title><rect x="79.4952%" y="2133" width="0.4314%" height="15" fill="rgb(240,103,49)" fg:x="182914942" fg:w="992587"/><text x="79.7452%" y="2143.50"></text></g><g><title>core::slice::memchr::memchr (992,587 samples, 0.43%)</title><rect x="79.4952%" y="2117" width="0.4314%" height="15" fill="rgb(250,182,30)" fg:x="182914942" fg:w="992587"/><text x="79.7452%" y="2127.50"></text></g><g><title>core::slice::memchr::memchr_aligned (992,587 samples, 0.43%)</title><rect x="79.4952%" y="2101" width="0.4314%" height="15" fill="rgb(248,8,30)" fg:x="182914942" fg:w="992587"/><text x="79.7452%" y="2111.50"></text></g><g><title>core::slice::memchr::memchr_aligned::runtime (992,587 samples, 0.43%)</title><rect x="79.4952%" y="2085" width="0.4314%" height="15" fill="rgb(237,120,30)" fg:x="182914942" fg:w="992587"/><text x="79.7452%" y="2095.50"></text></g><g><title>core::slice::memchr::memchr_naive (992,587 samples, 0.43%)</title><rect x="79.4952%" y="2069" width="0.4314%" height="15" fill="rgb(221,146,34)" fg:x="182914942" fg:w="992587"/><text x="79.7452%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="2213" width="0.3283%" height="15" fill="rgb(242,55,13)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="2197" width="0.3283%" height="15" fill="rgb(242,112,31)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="2181" width="0.3283%" height="15" fill="rgb(249,192,27)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="2191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="2165" width="0.3283%" height="15" fill="rgb(208,204,44)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="2175.50"></text></g><g><title>core::mem::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="2149" width="0.3283%" height="15" fill="rgb(208,93,54)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="2133" width="0.3283%" height="15" fill="rgb(242,1,31)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="2143.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="2117" width="0.3283%" height="15" fill="rgb(241,83,25)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="2127.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (755,344 samples, 0.33%)</title><rect x="79.9266%" y="2101" width="0.3283%" height="15" fill="rgb(205,169,50)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="2085" width="0.3283%" height="15" fill="rgb(239,186,37)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="2095.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="2069" width="0.3283%" height="15" fill="rgb(205,221,10)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="2079.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="2053" width="0.3283%" height="15" fill="rgb(218,196,15)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="2037" width="0.3283%" height="15" fill="rgb(218,196,35)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="2021" width="0.3283%" height="15" fill="rgb(233,63,24)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="2005" width="0.3283%" height="15" fill="rgb(225,8,4)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="2015.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1989" width="0.3283%" height="15" fill="rgb(234,105,35)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1999.50"></text></g><g><title>core::mem::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1973" width="0.3283%" height="15" fill="rgb(236,21,32)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1957" width="0.3283%" height="15" fill="rgb(228,109,6)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1967.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1941" width="0.3283%" height="15" fill="rgb(229,215,31)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1951.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1925" width="0.3283%" height="15" fill="rgb(221,52,54)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1909" width="0.3283%" height="15" fill="rgb(252,129,43)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1919.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1893" width="0.3283%" height="15" fill="rgb(248,183,27)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1903.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1877" width="0.3283%" height="15" fill="rgb(250,0,22)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1861" width="0.3283%" height="15" fill="rgb(213,166,10)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1845" width="0.3283%" height="15" fill="rgb(207,163,36)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1829" width="0.3283%" height="15" fill="rgb(208,122,22)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1813" width="0.3283%" height="15" fill="rgb(207,104,49)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1797" width="0.3283%" height="15" fill="rgb(248,211,50)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1781" width="0.3283%" height="15" fill="rgb(217,13,45)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1765" width="0.3283%" height="15" fill="rgb(211,216,49)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1775.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1749" width="0.3283%" height="15" fill="rgb(221,58,53)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1759.50"></text></g><g><title>core::mem::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1733" width="0.3283%" height="15" fill="rgb(220,112,41)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1717" width="0.3283%" height="15" fill="rgb(236,38,28)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1727.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1701" width="0.3283%" height="15" fill="rgb(227,195,22)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1711.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1685" width="0.3283%" height="15" fill="rgb(214,55,33)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1669" width="0.3283%" height="15" fill="rgb(248,80,13)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1653" width="0.3283%" height="15" fill="rgb(238,52,6)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1663.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1637" width="0.3283%" height="15" fill="rgb(224,198,47)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1621" width="0.3283%" height="15" fill="rgb(233,171,20)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1605" width="0.3283%" height="15" fill="rgb(241,30,25)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1589" width="0.3283%" height="15" fill="rgb(207,171,38)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1573" width="0.3283%" height="15" fill="rgb(234,70,1)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1557" width="0.3283%" height="15" fill="rgb(232,178,18)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1541" width="0.3283%" height="15" fill="rgb(241,78,40)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1525" width="0.3283%" height="15" fill="rgb(222,35,25)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1535.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1509" width="0.3283%" height="15" fill="rgb(207,92,16)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1519.50"></text></g><g><title>core::mem::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1493" width="0.3283%" height="15" fill="rgb(216,59,51)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1477" width="0.3283%" height="15" fill="rgb(213,80,28)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1487.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1461" width="0.3283%" height="15" fill="rgb(220,93,7)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1471.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1445" width="0.3283%" height="15" fill="rgb(225,24,44)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1429" width="0.3283%" height="15" fill="rgb(243,74,40)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1439.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1413" width="0.3283%" height="15" fill="rgb(228,39,7)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1423.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1397" width="0.3283%" height="15" fill="rgb(227,79,8)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1381" width="0.3283%" height="15" fill="rgb(236,58,11)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1365" width="0.3283%" height="15" fill="rgb(249,63,35)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1349" width="0.3283%" height="15" fill="rgb(252,114,16)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1333" width="0.3283%" height="15" fill="rgb(254,151,24)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1317" width="0.3283%" height="15" fill="rgb(253,54,39)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1301" width="0.3283%" height="15" fill="rgb(243,25,45)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1285" width="0.3283%" height="15" fill="rgb(234,134,9)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1295.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1269" width="0.3283%" height="15" fill="rgb(227,166,31)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1279.50"></text></g><g><title>core::mem::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1253" width="0.3283%" height="15" fill="rgb(245,143,41)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1237" width="0.3283%" height="15" fill="rgb(238,181,32)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1247.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1221" width="0.3283%" height="15" fill="rgb(224,113,18)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1231.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1205" width="0.3283%" height="15" fill="rgb(240,229,28)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1189" width="0.3283%" height="15" fill="rgb(250,185,3)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1173" width="0.3283%" height="15" fill="rgb(212,59,25)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1183.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1157" width="0.3283%" height="15" fill="rgb(221,87,20)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1141" width="0.3283%" height="15" fill="rgb(213,74,28)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1125" width="0.3283%" height="15" fill="rgb(224,132,34)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1109" width="0.3283%" height="15" fill="rgb(222,101,24)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1093" width="0.3283%" height="15" fill="rgb(254,142,4)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1077" width="0.3283%" height="15" fill="rgb(230,229,49)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1061" width="0.3283%" height="15" fill="rgb(238,70,47)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1045" width="0.3283%" height="15" fill="rgb(231,160,17)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1029" width="0.3283%" height="15" fill="rgb(218,68,53)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1039.50"></text></g><g><title>core::mem::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="1013" width="0.3283%" height="15" fill="rgb(236,111,10)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="997" width="0.3283%" height="15" fill="rgb(224,34,41)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="981" width="0.3283%" height="15" fill="rgb(241,118,19)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (755,344 samples, 0.33%)</title><rect x="79.9266%" y="965" width="0.3283%" height="15" fill="rgb(238,129,25)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="949" width="0.3283%" height="15" fill="rgb(238,22,31)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="933" width="0.3283%" height="15" fill="rgb(222,174,48)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="943.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="917" width="0.3283%" height="15" fill="rgb(206,152,40)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="901" width="0.3283%" height="15" fill="rgb(218,99,54)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="885" width="0.3283%" height="15" fill="rgb(220,174,26)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="869" width="0.3283%" height="15" fill="rgb(245,116,9)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="853" width="0.3283%" height="15" fill="rgb(209,72,35)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="837" width="0.3283%" height="15" fill="rgb(226,126,21)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="821" width="0.3283%" height="15" fill="rgb(227,192,1)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="805" width="0.3283%" height="15" fill="rgb(237,180,29)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="789" width="0.3283%" height="15" fill="rgb(230,197,35)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="799.50"></text></g><g><title>core::mem::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="773" width="0.3283%" height="15" fill="rgb(246,193,31)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="757" width="0.3283%" height="15" fill="rgb(241,36,4)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="741" width="0.3283%" height="15" fill="rgb(241,130,17)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="751.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (755,344 samples, 0.33%)</title><rect x="79.9266%" y="725" width="0.3283%" height="15" fill="rgb(206,137,32)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="709" width="0.3283%" height="15" fill="rgb(237,228,51)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="693" width="0.3283%" height="15" fill="rgb(243,6,42)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="677" width="0.3283%" height="15" fill="rgb(251,74,28)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="661" width="0.3283%" height="15" fill="rgb(218,20,49)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="645" width="0.3283%" height="15" fill="rgb(238,28,14)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="629" width="0.3283%" height="15" fill="rgb(229,40,46)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="613" width="0.3283%" height="15" fill="rgb(244,195,20)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="597" width="0.3283%" height="15" fill="rgb(253,56,35)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="581" width="0.3283%" height="15" fill="rgb(210,149,44)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="565" width="0.3283%" height="15" fill="rgb(240,135,12)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="549" width="0.3283%" height="15" fill="rgb(251,24,50)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="559.50"></text></g><g><title>core::mem::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="533" width="0.3283%" height="15" fill="rgb(243,200,47)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="517" width="0.3283%" height="15" fill="rgb(224,166,26)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="501" width="0.3283%" height="15" fill="rgb(233,0,47)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (755,344 samples, 0.33%)</title><rect x="79.9266%" y="485" width="0.3283%" height="15" fill="rgb(253,80,5)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (755,344 samples, 0.33%)</title><rect x="79.9266%" y="469" width="0.3283%" height="15" fill="rgb(214,133,25)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="453" width="0.3283%" height="15" fill="rgb(209,27,14)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="463.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (755,344 samples, 0.33%)</title><rect x="79.9266%" y="437" width="0.3283%" height="15" fill="rgb(219,102,51)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="447.50"></text></g><g><title>cfree (755,344 samples, 0.33%)</title><rect x="79.9266%" y="421" width="0.3283%" height="15" fill="rgb(237,18,16)" fg:x="183907529" fg:w="755344"/><text x="80.1766%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,126,344 samples, 0.49%)</title><rect x="80.2549%" y="1925" width="0.4895%" height="15" fill="rgb(241,85,17)" fg:x="184662873" fg:w="1126344"/><text x="80.5049%" y="1935.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,126,344 samples, 0.49%)</title><rect x="80.2549%" y="1909" width="0.4895%" height="15" fill="rgb(236,90,42)" fg:x="184662873" fg:w="1126344"/><text x="80.5049%" y="1919.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,126,344 samples, 0.49%)</title><rect x="80.2549%" y="1893" width="0.4895%" height="15" fill="rgb(249,57,21)" fg:x="184662873" fg:w="1126344"/><text x="80.5049%" y="1903.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,126,344 samples, 0.49%)</title><rect x="80.2549%" y="1877" width="0.4895%" height="15" fill="rgb(243,12,36)" fg:x="184662873" fg:w="1126344"/><text x="80.5049%" y="1887.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,126,344 samples, 0.49%)</title><rect x="80.2549%" y="1861" width="0.4895%" height="15" fill="rgb(253,128,47)" fg:x="184662873" fg:w="1126344"/><text x="80.5049%" y="1871.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1,126,344 samples, 0.49%)</title><rect x="80.2549%" y="1845" width="0.4895%" height="15" fill="rgb(207,33,20)" fg:x="184662873" fg:w="1126344"/><text x="80.5049%" y="1855.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (1,126,344 samples, 0.49%)</title><rect x="80.2549%" y="1829" width="0.4895%" height="15" fill="rgb(233,215,35)" fg:x="184662873" fg:w="1126344"/><text x="80.5049%" y="1839.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (1,126,344 samples, 0.49%)</title><rect x="80.2549%" y="1813" width="0.4895%" height="15" fill="rgb(249,188,52)" fg:x="184662873" fg:w="1126344"/><text x="80.5049%" y="1823.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,171,217 samples, 0.51%)</title><rect x="80.7444%" y="1781" width="0.5090%" height="15" fill="rgb(225,12,32)" fg:x="185789217" fg:w="1171217"/><text x="80.9944%" y="1791.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,171,217 samples, 0.51%)</title><rect x="80.7444%" y="1765" width="0.5090%" height="15" fill="rgb(247,98,14)" fg:x="185789217" fg:w="1171217"/><text x="80.9944%" y="1775.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,171,217 samples, 0.51%)</title><rect x="80.7444%" y="1749" width="0.5090%" height="15" fill="rgb(247,219,48)" fg:x="185789217" fg:w="1171217"/><text x="80.9944%" y="1759.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,171,217 samples, 0.51%)</title><rect x="80.7444%" y="1733" width="0.5090%" height="15" fill="rgb(253,60,48)" fg:x="185789217" fg:w="1171217"/><text x="80.9944%" y="1743.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,171,217 samples, 0.51%)</title><rect x="80.7444%" y="1717" width="0.5090%" height="15" fill="rgb(245,15,52)" fg:x="185789217" fg:w="1171217"/><text x="80.9944%" y="1727.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1,171,217 samples, 0.51%)</title><rect x="80.7444%" y="1701" width="0.5090%" height="15" fill="rgb(220,133,28)" fg:x="185789217" fg:w="1171217"/><text x="80.9944%" y="1711.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,171,217 samples, 0.51%)</title><rect x="80.7444%" y="1685" width="0.5090%" height="15" fill="rgb(217,180,4)" fg:x="185789217" fg:w="1171217"/><text x="80.9944%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,171,217 samples, 0.51%)</title><rect x="80.7444%" y="1669" width="0.5090%" height="15" fill="rgb(251,24,1)" fg:x="185789217" fg:w="1171217"/><text x="80.9944%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,171,217 samples, 0.51%)</title><rect x="80.7444%" y="1653" width="0.5090%" height="15" fill="rgb(212,185,49)" fg:x="185789217" fg:w="1171217"/><text x="80.9944%" y="1663.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,171,217 samples, 0.51%)</title><rect x="80.7444%" y="1637" width="0.5090%" height="15" fill="rgb(215,175,22)" fg:x="185789217" fg:w="1171217"/><text x="80.9944%" y="1647.50"></text></g><g><title>alloc::slice::hack::to_vec (1,171,217 samples, 0.51%)</title><rect x="80.7444%" y="1621" width="0.5090%" height="15" fill="rgb(250,205,14)" fg:x="185789217" fg:w="1171217"/><text x="80.9944%" y="1631.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,171,217 samples, 0.51%)</title><rect x="80.7444%" y="1605" width="0.5090%" height="15" fill="rgb(225,211,22)" fg:x="185789217" fg:w="1171217"/><text x="80.9944%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,171,217 samples, 0.51%)</title><rect x="80.7444%" y="1589" width="0.5090%" height="15" fill="rgb(251,179,42)" fg:x="185789217" fg:w="1171217"/><text x="80.9944%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,171,217 samples, 0.51%)</title><rect x="80.7444%" y="1573" width="0.5090%" height="15" fill="rgb(208,216,51)" fg:x="185789217" fg:w="1171217"/><text x="80.9944%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,171,217 samples, 0.51%)</title><rect x="80.7444%" y="1557" width="0.5090%" height="15" fill="rgb(235,36,11)" fg:x="185789217" fg:w="1171217"/><text x="80.9944%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,171,217 samples, 0.51%)</title><rect x="80.7444%" y="1541" width="0.5090%" height="15" fill="rgb(213,189,28)" fg:x="185789217" fg:w="1171217"/><text x="80.9944%" y="1551.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (485,118 samples, 0.21%)</title><rect x="81.2534%" y="1685" width="0.2108%" height="15" fill="rgb(227,203,42)" fg:x="186960434" fg:w="485118"/><text x="81.5034%" y="1695.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (485,118 samples, 0.21%)</title><rect x="81.2534%" y="1669" width="0.2108%" height="15" fill="rgb(244,72,36)" fg:x="186960434" fg:w="485118"/><text x="81.5034%" y="1679.50"></text></g><g><title>core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (485,118 samples, 0.21%)</title><rect x="81.2534%" y="1653" width="0.2108%" height="15" fill="rgb(213,53,17)" fg:x="186960434" fg:w="485118"/><text x="81.5034%" y="1663.50"></text></g><g><title>core::result::Result&lt;&amp;T,E&gt;::copied (485,118 samples, 0.21%)</title><rect x="81.2534%" y="1637" width="0.2108%" height="15" fill="rgb(207,167,3)" fg:x="186960434" fg:w="485118"/><text x="81.5034%" y="1647.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,121,368 samples, 0.49%)</title><rect x="81.2534%" y="1717" width="0.4873%" height="15" fill="rgb(216,98,30)" fg:x="186960434" fg:w="1121368"/><text x="81.5034%" y="1727.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,121,368 samples, 0.49%)</title><rect x="81.2534%" y="1701" width="0.4873%" height="15" fill="rgb(236,123,15)" fg:x="186960434" fg:w="1121368"/><text x="81.5034%" y="1711.50"></text></g><g><title>serde_json::read::parse_escape (636,250 samples, 0.28%)</title><rect x="81.4642%" y="1685" width="0.2765%" height="15" fill="rgb(248,81,50)" fg:x="187445552" fg:w="636250"/><text x="81.7142%" y="1695.50"></text></g><g><title>serde_json::read::next_or_eof (636,250 samples, 0.28%)</title><rect x="81.4642%" y="1669" width="0.2765%" height="15" fill="rgb(214,120,4)" fg:x="187445552" fg:w="636250"/><text x="81.7142%" y="1679.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::next (636,250 samples, 0.28%)</title><rect x="81.4642%" y="1653" width="0.2765%" height="15" fill="rgb(208,179,34)" fg:x="187445552" fg:w="636250"/><text x="81.7142%" y="1663.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,266,022 samples, 0.98%)</title><rect x="81.7408%" y="1573" width="0.9848%" height="15" fill="rgb(227,140,7)" fg:x="188081802" fg:w="2266022"/><text x="81.9908%" y="1583.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,266,022 samples, 0.98%)</title><rect x="81.7408%" y="1557" width="0.9848%" height="15" fill="rgb(214,22,6)" fg:x="188081802" fg:w="2266022"/><text x="81.9908%" y="1567.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2,266,022 samples, 0.98%)</title><rect x="81.7408%" y="1541" width="0.9848%" height="15" fill="rgb(207,137,27)" fg:x="188081802" fg:w="2266022"/><text x="81.9908%" y="1551.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (2,266,022 samples, 0.98%)</title><rect x="81.7408%" y="1525" width="0.9848%" height="15" fill="rgb(210,8,46)" fg:x="188081802" fg:w="2266022"/><text x="81.9908%" y="1535.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,266,022 samples, 0.98%)</title><rect x="81.7408%" y="1509" width="0.9848%" height="15" fill="rgb(240,16,54)" fg:x="188081802" fg:w="2266022"/><text x="81.9908%" y="1519.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (2,266,022 samples, 0.98%)</title><rect x="81.7408%" y="1493" width="0.9848%" height="15" fill="rgb(211,209,29)" fg:x="188081802" fg:w="2266022"/><text x="81.9908%" y="1503.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2,266,022 samples, 0.98%)</title><rect x="81.7408%" y="1477" width="0.9848%" height="15" fill="rgb(226,228,24)" fg:x="188081802" fg:w="2266022"/><text x="81.9908%" y="1487.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2,266,022 samples, 0.98%)</title><rect x="81.7408%" y="1461" width="0.9848%" height="15" fill="rgb(222,84,9)" fg:x="188081802" fg:w="2266022"/><text x="81.9908%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,266,022 samples, 0.98%)</title><rect x="81.7408%" y="1445" width="0.9848%" height="15" fill="rgb(234,203,30)" fg:x="188081802" fg:w="2266022"/><text x="81.9908%" y="1455.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,266,022 samples, 0.98%)</title><rect x="81.7408%" y="1429" width="0.9848%" height="15" fill="rgb(238,109,14)" fg:x="188081802" fg:w="2266022"/><text x="81.9908%" y="1439.50"></text></g><g><title>alloc::slice::hack::to_vec (2,266,022 samples, 0.98%)</title><rect x="81.7408%" y="1413" width="0.9848%" height="15" fill="rgb(233,206,34)" fg:x="188081802" fg:w="2266022"/><text x="81.9908%" y="1423.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,266,022 samples, 0.98%)</title><rect x="81.7408%" y="1397" width="0.9848%" height="15" fill="rgb(220,167,47)" fg:x="188081802" fg:w="2266022"/><text x="81.9908%" y="1407.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,266,022 samples, 0.98%)</title><rect x="81.7408%" y="1381" width="0.9848%" height="15" fill="rgb(238,105,10)" fg:x="188081802" fg:w="2266022"/><text x="81.9908%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,266,022 samples, 0.98%)</title><rect x="81.7408%" y="1365" width="0.9848%" height="15" fill="rgb(213,227,17)" fg:x="188081802" fg:w="2266022"/><text x="81.9908%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,266,022 samples, 0.98%)</title><rect x="81.7408%" y="1349" width="0.9848%" height="15" fill="rgb(217,132,38)" fg:x="188081802" fg:w="2266022"/><text x="81.9908%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,266,022 samples, 0.98%)</title><rect x="81.7408%" y="1333" width="0.9848%" height="15" fill="rgb(242,146,4)" fg:x="188081802" fg:w="2266022"/><text x="81.9908%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,266,022 samples, 0.98%)</title><rect x="81.7408%" y="1317" width="0.9848%" height="15" fill="rgb(212,61,9)" fg:x="188081802" fg:w="2266022"/><text x="81.9908%" y="1327.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,266,022 samples, 0.98%)</title><rect x="81.7408%" y="1301" width="0.9848%" height="15" fill="rgb(247,126,22)" fg:x="188081802" fg:w="2266022"/><text x="81.9908%" y="1311.50"></text></g><g><title>alloc::alloc::alloc (2,266,022 samples, 0.98%)</title><rect x="81.7408%" y="1285" width="0.9848%" height="15" fill="rgb(220,196,2)" fg:x="188081802" fg:w="2266022"/><text x="81.9908%" y="1295.50"></text></g><g><title>malloc (2,266,022 samples, 0.98%)</title><rect x="81.7408%" y="1269" width="0.9848%" height="15" fill="rgb(208,46,4)" fg:x="188081802" fg:w="2266022"/><text x="81.9908%" y="1279.50"></text></g><g><title>[libc.so.6] (2,266,022 samples, 0.98%)</title><rect x="81.7408%" y="1253" width="0.9848%" height="15" fill="rgb(252,104,46)" fg:x="188081802" fg:w="2266022"/><text x="81.9908%" y="1263.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (797,573 samples, 0.35%)</title><rect x="82.7256%" y="1365" width="0.3466%" height="15" fill="rgb(237,152,48)" fg:x="190347824" fg:w="797573"/><text x="82.9756%" y="1375.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (797,573 samples, 0.35%)</title><rect x="82.7256%" y="1349" width="0.3466%" height="15" fill="rgb(221,59,37)" fg:x="190347824" fg:w="797573"/><text x="82.9756%" y="1359.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (797,573 samples, 0.35%)</title><rect x="82.7256%" y="1333" width="0.3466%" height="15" fill="rgb(209,202,51)" fg:x="190347824" fg:w="797573"/><text x="82.9756%" y="1343.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (797,573 samples, 0.35%)</title><rect x="82.7256%" y="1317" width="0.3466%" height="15" fill="rgb(228,81,30)" fg:x="190347824" fg:w="797573"/><text x="82.9756%" y="1327.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (797,573 samples, 0.35%)</title><rect x="82.7256%" y="1301" width="0.3466%" height="15" fill="rgb(227,42,39)" fg:x="190347824" fg:w="797573"/><text x="82.9756%" y="1311.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (797,573 samples, 0.35%)</title><rect x="82.7256%" y="1285" width="0.3466%" height="15" fill="rgb(221,26,2)" fg:x="190347824" fg:w="797573"/><text x="82.9756%" y="1295.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (797,573 samples, 0.35%)</title><rect x="82.7256%" y="1269" width="0.3466%" height="15" fill="rgb(254,61,31)" fg:x="190347824" fg:w="797573"/><text x="82.9756%" y="1279.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (797,573 samples, 0.35%)</title><rect x="82.7256%" y="1253" width="0.3466%" height="15" fill="rgb(222,173,38)" fg:x="190347824" fg:w="797573"/><text x="82.9756%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (797,573 samples, 0.35%)</title><rect x="82.7256%" y="1237" width="0.3466%" height="15" fill="rgb(218,50,12)" fg:x="190347824" fg:w="797573"/><text x="82.9756%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (797,573 samples, 0.35%)</title><rect x="82.7256%" y="1221" width="0.3466%" height="15" fill="rgb(223,88,40)" fg:x="190347824" fg:w="797573"/><text x="82.9756%" y="1231.50"></text></g><g><title>alloc::slice::hack::to_vec (797,573 samples, 0.35%)</title><rect x="82.7256%" y="1205" width="0.3466%" height="15" fill="rgb(237,54,19)" fg:x="190347824" fg:w="797573"/><text x="82.9756%" y="1215.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (797,573 samples, 0.35%)</title><rect x="82.7256%" y="1189" width="0.3466%" height="15" fill="rgb(251,129,25)" fg:x="190347824" fg:w="797573"/><text x="82.9756%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (797,573 samples, 0.35%)</title><rect x="82.7256%" y="1173" width="0.3466%" height="15" fill="rgb(238,97,19)" fg:x="190347824" fg:w="797573"/><text x="82.9756%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (797,573 samples, 0.35%)</title><rect x="82.7256%" y="1157" width="0.3466%" height="15" fill="rgb(240,169,18)" fg:x="190347824" fg:w="797573"/><text x="82.9756%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (797,573 samples, 0.35%)</title><rect x="82.7256%" y="1141" width="0.3466%" height="15" fill="rgb(230,187,49)" fg:x="190347824" fg:w="797573"/><text x="82.9756%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (797,573 samples, 0.35%)</title><rect x="82.7256%" y="1125" width="0.3466%" height="15" fill="rgb(209,44,26)" fg:x="190347824" fg:w="797573"/><text x="82.9756%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (797,573 samples, 0.35%)</title><rect x="82.7256%" y="1109" width="0.3466%" height="15" fill="rgb(244,0,6)" fg:x="190347824" fg:w="797573"/><text x="82.9756%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (797,573 samples, 0.35%)</title><rect x="82.7256%" y="1093" width="0.3466%" height="15" fill="rgb(248,18,21)" fg:x="190347824" fg:w="797573"/><text x="82.9756%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (797,573 samples, 0.35%)</title><rect x="82.7256%" y="1077" width="0.3466%" height="15" fill="rgb(245,180,19)" fg:x="190347824" fg:w="797573"/><text x="82.9756%" y="1087.50"></text></g><g><title>__rdl_alloc (797,573 samples, 0.35%)</title><rect x="82.7256%" y="1061" width="0.3466%" height="15" fill="rgb(252,118,36)" fg:x="190347824" fg:w="797573"/><text x="82.9756%" y="1071.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (797,573 samples, 0.35%)</title><rect x="82.7256%" y="1045" width="0.3466%" height="15" fill="rgb(210,224,19)" fg:x="190347824" fg:w="797573"/><text x="82.9756%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,182,268 samples, 0.51%)</title><rect x="83.0722%" y="1077" width="0.5138%" height="15" fill="rgb(218,30,24)" fg:x="191145397" fg:w="1182268"/><text x="83.3222%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,182,268 samples, 0.51%)</title><rect x="83.0722%" y="1061" width="0.5138%" height="15" fill="rgb(219,75,50)" fg:x="191145397" fg:w="1182268"/><text x="83.3222%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,182,268 samples, 0.51%)</title><rect x="83.0722%" y="1045" width="0.5138%" height="15" fill="rgb(234,72,50)" fg:x="191145397" fg:w="1182268"/><text x="83.3222%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,182,268 samples, 0.51%)</title><rect x="83.0722%" y="1029" width="0.5138%" height="15" fill="rgb(219,100,48)" fg:x="191145397" fg:w="1182268"/><text x="83.3222%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,182,268 samples, 0.51%)</title><rect x="83.0722%" y="1013" width="0.5138%" height="15" fill="rgb(253,5,41)" fg:x="191145397" fg:w="1182268"/><text x="83.3222%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,182,268 samples, 0.51%)</title><rect x="83.0722%" y="997" width="0.5138%" height="15" fill="rgb(247,181,11)" fg:x="191145397" fg:w="1182268"/><text x="83.3222%" y="1007.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,182,268 samples, 0.51%)</title><rect x="83.0722%" y="981" width="0.5138%" height="15" fill="rgb(222,223,25)" fg:x="191145397" fg:w="1182268"/><text x="83.3222%" y="991.50"></text></g><g><title>alloc::alloc::realloc (1,182,268 samples, 0.51%)</title><rect x="83.0722%" y="965" width="0.5138%" height="15" fill="rgb(214,198,28)" fg:x="191145397" fg:w="1182268"/><text x="83.3222%" y="975.50"></text></g><g><title>realloc (1,182,268 samples, 0.51%)</title><rect x="83.0722%" y="949" width="0.5138%" height="15" fill="rgb(230,46,43)" fg:x="191145397" fg:w="1182268"/><text x="83.3222%" y="959.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (942,267 samples, 0.41%)</title><rect x="83.5860%" y="949" width="0.4095%" height="15" fill="rgb(233,65,53)" fg:x="192327665" fg:w="942267"/><text x="83.8360%" y="959.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (942,267 samples, 0.41%)</title><rect x="83.5860%" y="933" width="0.4095%" height="15" fill="rgb(221,121,27)" fg:x="192327665" fg:w="942267"/><text x="83.8360%" y="943.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (942,267 samples, 0.41%)</title><rect x="83.5860%" y="917" width="0.4095%" height="15" fill="rgb(247,70,47)" fg:x="192327665" fg:w="942267"/><text x="83.8360%" y="927.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (942,267 samples, 0.41%)</title><rect x="83.5860%" y="901" width="0.4095%" height="15" fill="rgb(228,85,35)" fg:x="192327665" fg:w="942267"/><text x="83.8360%" y="911.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (942,267 samples, 0.41%)</title><rect x="83.5860%" y="885" width="0.4095%" height="15" fill="rgb(209,50,18)" fg:x="192327665" fg:w="942267"/><text x="83.8360%" y="895.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (942,267 samples, 0.41%)</title><rect x="83.5860%" y="869" width="0.4095%" height="15" fill="rgb(250,19,35)" fg:x="192327665" fg:w="942267"/><text x="83.8360%" y="879.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (942,267 samples, 0.41%)</title><rect x="83.5860%" y="853" width="0.4095%" height="15" fill="rgb(253,107,29)" fg:x="192327665" fg:w="942267"/><text x="83.8360%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (942,267 samples, 0.41%)</title><rect x="83.5860%" y="837" width="0.4095%" height="15" fill="rgb(252,179,29)" fg:x="192327665" fg:w="942267"/><text x="83.8360%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (942,267 samples, 0.41%)</title><rect x="83.5860%" y="821" width="0.4095%" height="15" fill="rgb(238,194,6)" fg:x="192327665" fg:w="942267"/><text x="83.8360%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (942,267 samples, 0.41%)</title><rect x="83.5860%" y="805" width="0.4095%" height="15" fill="rgb(238,164,29)" fg:x="192327665" fg:w="942267"/><text x="83.8360%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (942,267 samples, 0.41%)</title><rect x="83.5860%" y="789" width="0.4095%" height="15" fill="rgb(224,25,9)" fg:x="192327665" fg:w="942267"/><text x="83.8360%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (942,267 samples, 0.41%)</title><rect x="83.5860%" y="773" width="0.4095%" height="15" fill="rgb(244,153,23)" fg:x="192327665" fg:w="942267"/><text x="83.8360%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (942,267 samples, 0.41%)</title><rect x="83.5860%" y="757" width="0.4095%" height="15" fill="rgb(212,203,14)" fg:x="192327665" fg:w="942267"/><text x="83.8360%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (942,267 samples, 0.41%)</title><rect x="83.5860%" y="741" width="0.4095%" height="15" fill="rgb(220,164,20)" fg:x="192327665" fg:w="942267"/><text x="83.8360%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (942,267 samples, 0.41%)</title><rect x="83.5860%" y="725" width="0.4095%" height="15" fill="rgb(222,203,48)" fg:x="192327665" fg:w="942267"/><text x="83.8360%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (942,267 samples, 0.41%)</title><rect x="83.5860%" y="709" width="0.4095%" height="15" fill="rgb(215,159,22)" fg:x="192327665" fg:w="942267"/><text x="83.8360%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (942,267 samples, 0.41%)</title><rect x="83.5860%" y="693" width="0.4095%" height="15" fill="rgb(216,183,47)" fg:x="192327665" fg:w="942267"/><text x="83.8360%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (942,267 samples, 0.41%)</title><rect x="83.5860%" y="677" width="0.4095%" height="15" fill="rgb(229,195,25)" fg:x="192327665" fg:w="942267"/><text x="83.8360%" y="687.50"></text></g><g><title>alloc::alloc::alloc (942,267 samples, 0.41%)</title><rect x="83.5860%" y="661" width="0.4095%" height="15" fill="rgb(224,132,51)" fg:x="192327665" fg:w="942267"/><text x="83.8360%" y="671.50"></text></g><g><title>malloc (942,267 samples, 0.41%)</title><rect x="83.5860%" y="645" width="0.4095%" height="15" fill="rgb(240,63,7)" fg:x="192327665" fg:w="942267"/><text x="83.8360%" y="655.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,651,780 samples, 0.72%)</title><rect x="83.9955%" y="773" width="0.7179%" height="15" fill="rgb(249,182,41)" fg:x="193269932" fg:w="1651780"/><text x="84.2455%" y="783.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,651,780 samples, 0.72%)</title><rect x="83.9955%" y="757" width="0.7179%" height="15" fill="rgb(243,47,26)" fg:x="193269932" fg:w="1651780"/><text x="84.2455%" y="767.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,651,780 samples, 0.72%)</title><rect x="83.9955%" y="741" width="0.7179%" height="15" fill="rgb(233,48,2)" fg:x="193269932" fg:w="1651780"/><text x="84.2455%" y="751.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,651,780 samples, 0.72%)</title><rect x="83.9955%" y="725" width="0.7179%" height="15" fill="rgb(244,165,34)" fg:x="193269932" fg:w="1651780"/><text x="84.2455%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,651,780 samples, 0.72%)</title><rect x="83.9955%" y="709" width="0.7179%" height="15" fill="rgb(207,89,7)" fg:x="193269932" fg:w="1651780"/><text x="84.2455%" y="719.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,651,780 samples, 0.72%)</title><rect x="83.9955%" y="693" width="0.7179%" height="15" fill="rgb(244,117,36)" fg:x="193269932" fg:w="1651780"/><text x="84.2455%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,651,780 samples, 0.72%)</title><rect x="83.9955%" y="677" width="0.7179%" height="15" fill="rgb(226,144,34)" fg:x="193269932" fg:w="1651780"/><text x="84.2455%" y="687.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,651,780 samples, 0.72%)</title><rect x="83.9955%" y="661" width="0.7179%" height="15" fill="rgb(213,23,19)" fg:x="193269932" fg:w="1651780"/><text x="84.2455%" y="671.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,651,780 samples, 0.72%)</title><rect x="83.9955%" y="645" width="0.7179%" height="15" fill="rgb(217,75,12)" fg:x="193269932" fg:w="1651780"/><text x="84.2455%" y="655.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,651,780 samples, 0.72%)</title><rect x="83.9955%" y="629" width="0.7179%" height="15" fill="rgb(224,159,17)" fg:x="193269932" fg:w="1651780"/><text x="84.2455%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,651,780 samples, 0.72%)</title><rect x="83.9955%" y="613" width="0.7179%" height="15" fill="rgb(217,118,1)" fg:x="193269932" fg:w="1651780"/><text x="84.2455%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,651,780 samples, 0.72%)</title><rect x="83.9955%" y="597" width="0.7179%" height="15" fill="rgb(232,180,48)" fg:x="193269932" fg:w="1651780"/><text x="84.2455%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,651,780 samples, 0.72%)</title><rect x="83.9955%" y="581" width="0.7179%" height="15" fill="rgb(230,27,33)" fg:x="193269932" fg:w="1651780"/><text x="84.2455%" y="591.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,651,780 samples, 0.72%)</title><rect x="83.9955%" y="565" width="0.7179%" height="15" fill="rgb(205,31,21)" fg:x="193269932" fg:w="1651780"/><text x="84.2455%" y="575.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,651,780 samples, 0.72%)</title><rect x="83.9955%" y="549" width="0.7179%" height="15" fill="rgb(253,59,4)" fg:x="193269932" fg:w="1651780"/><text x="84.2455%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (928,157 samples, 0.40%)</title><rect x="84.3100%" y="533" width="0.4034%" height="15" fill="rgb(224,201,9)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="543.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (928,157 samples, 0.40%)</title><rect x="84.3100%" y="517" width="0.4034%" height="15" fill="rgb(229,206,30)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (928,157 samples, 0.40%)</title><rect x="84.3100%" y="501" width="0.4034%" height="15" fill="rgb(212,67,47)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (928,157 samples, 0.40%)</title><rect x="84.3100%" y="485" width="0.4034%" height="15" fill="rgb(211,96,50)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (928,157 samples, 0.40%)</title><rect x="84.3100%" y="469" width="0.4034%" height="15" fill="rgb(252,114,18)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="479.50"></text></g><g><title>serde::de::SeqAccess::next_element (928,157 samples, 0.40%)</title><rect x="84.3100%" y="453" width="0.4034%" height="15" fill="rgb(223,58,37)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="463.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (928,157 samples, 0.40%)</title><rect x="84.3100%" y="437" width="0.4034%" height="15" fill="rgb(237,70,4)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="447.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (928,157 samples, 0.40%)</title><rect x="84.3100%" y="421" width="0.4034%" height="15" fill="rgb(244,85,46)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (928,157 samples, 0.40%)</title><rect x="84.3100%" y="405" width="0.4034%" height="15" fill="rgb(223,39,52)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (928,157 samples, 0.40%)</title><rect x="84.3100%" y="389" width="0.4034%" height="15" fill="rgb(218,200,14)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (928,157 samples, 0.40%)</title><rect x="84.3100%" y="373" width="0.4034%" height="15" fill="rgb(208,171,16)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="383.50"></text></g><g><title>serde::de::MapAccess::next_entry (928,157 samples, 0.40%)</title><rect x="84.3100%" y="357" width="0.4034%" height="15" fill="rgb(234,200,18)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="367.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (928,157 samples, 0.40%)</title><rect x="84.3100%" y="341" width="0.4034%" height="15" fill="rgb(228,45,11)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (928,157 samples, 0.40%)</title><rect x="84.3100%" y="325" width="0.4034%" height="15" fill="rgb(237,182,11)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="335.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (928,157 samples, 0.40%)</title><rect x="84.3100%" y="309" width="0.4034%" height="15" fill="rgb(241,175,49)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (928,157 samples, 0.40%)</title><rect x="84.3100%" y="293" width="0.4034%" height="15" fill="rgb(247,38,35)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="303.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (928,157 samples, 0.40%)</title><rect x="84.3100%" y="277" width="0.4034%" height="15" fill="rgb(228,39,49)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (928,157 samples, 0.40%)</title><rect x="84.3100%" y="261" width="0.4034%" height="15" fill="rgb(226,101,26)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="271.50"></text></g><g><title>serde::de::SeqAccess::next_element (928,157 samples, 0.40%)</title><rect x="84.3100%" y="245" width="0.4034%" height="15" fill="rgb(206,141,19)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="255.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (928,157 samples, 0.40%)</title><rect x="84.3100%" y="229" width="0.4034%" height="15" fill="rgb(211,200,13)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="239.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (928,157 samples, 0.40%)</title><rect x="84.3100%" y="213" width="0.4034%" height="15" fill="rgb(241,121,6)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (928,157 samples, 0.40%)</title><rect x="84.3100%" y="197" width="0.4034%" height="15" fill="rgb(234,221,29)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (928,157 samples, 0.40%)</title><rect x="84.3100%" y="181" width="0.4034%" height="15" fill="rgb(229,136,5)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (928,157 samples, 0.40%)</title><rect x="84.3100%" y="165" width="0.4034%" height="15" fill="rgb(238,36,11)" fg:x="193993555" fg:w="928157"/><text x="84.5600%" y="175.50"></text></g><g><title>serde::de::MapAccess::next_entry (3,573,658 samples, 1.55%)</title><rect x="83.5860%" y="981" width="1.5531%" height="15" fill="rgb(251,55,41)" fg:x="192327665" fg:w="3573658"/><text x="83.8360%" y="991.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (3,573,658 samples, 1.55%)</title><rect x="83.5860%" y="965" width="1.5531%" height="15" fill="rgb(242,34,40)" fg:x="192327665" fg:w="3573658"/><text x="83.8360%" y="975.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,631,391 samples, 1.14%)</title><rect x="83.9955%" y="949" width="1.1436%" height="15" fill="rgb(215,42,17)" fg:x="193269932" fg:w="2631391"/><text x="84.2455%" y="959.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,631,391 samples, 1.14%)</title><rect x="83.9955%" y="933" width="1.1436%" height="15" fill="rgb(207,44,46)" fg:x="193269932" fg:w="2631391"/><text x="84.2455%" y="943.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,631,391 samples, 1.14%)</title><rect x="83.9955%" y="917" width="1.1436%" height="15" fill="rgb(211,206,28)" fg:x="193269932" fg:w="2631391"/><text x="84.2455%" y="927.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,631,391 samples, 1.14%)</title><rect x="83.9955%" y="901" width="1.1436%" height="15" fill="rgb(237,167,16)" fg:x="193269932" fg:w="2631391"/><text x="84.2455%" y="911.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,631,391 samples, 1.14%)</title><rect x="83.9955%" y="885" width="1.1436%" height="15" fill="rgb(233,66,6)" fg:x="193269932" fg:w="2631391"/><text x="84.2455%" y="895.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,631,391 samples, 1.14%)</title><rect x="83.9955%" y="869" width="1.1436%" height="15" fill="rgb(246,123,29)" fg:x="193269932" fg:w="2631391"/><text x="84.2455%" y="879.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,631,391 samples, 1.14%)</title><rect x="83.9955%" y="853" width="1.1436%" height="15" fill="rgb(209,62,40)" fg:x="193269932" fg:w="2631391"/><text x="84.2455%" y="863.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,631,391 samples, 1.14%)</title><rect x="83.9955%" y="837" width="1.1436%" height="15" fill="rgb(218,4,25)" fg:x="193269932" fg:w="2631391"/><text x="84.2455%" y="847.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,631,391 samples, 1.14%)</title><rect x="83.9955%" y="821" width="1.1436%" height="15" fill="rgb(253,91,49)" fg:x="193269932" fg:w="2631391"/><text x="84.2455%" y="831.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,631,391 samples, 1.14%)</title><rect x="83.9955%" y="805" width="1.1436%" height="15" fill="rgb(228,155,29)" fg:x="193269932" fg:w="2631391"/><text x="84.2455%" y="815.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,631,391 samples, 1.14%)</title><rect x="83.9955%" y="789" width="1.1436%" height="15" fill="rgb(243,57,37)" fg:x="193269932" fg:w="2631391"/><text x="84.2455%" y="799.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (979,611 samples, 0.43%)</title><rect x="84.7134%" y="773" width="0.4257%" height="15" fill="rgb(244,167,17)" fg:x="194921712" fg:w="979611"/><text x="84.9634%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (979,611 samples, 0.43%)</title><rect x="84.7134%" y="757" width="0.4257%" height="15" fill="rgb(207,181,38)" fg:x="194921712" fg:w="979611"/><text x="84.9634%" y="767.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (979,611 samples, 0.43%)</title><rect x="84.7134%" y="741" width="0.4257%" height="15" fill="rgb(211,8,23)" fg:x="194921712" fg:w="979611"/><text x="84.9634%" y="751.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (979,611 samples, 0.43%)</title><rect x="84.7134%" y="725" width="0.4257%" height="15" fill="rgb(235,11,44)" fg:x="194921712" fg:w="979611"/><text x="84.9634%" y="735.50"></text></g><g><title>serde::de::MapAccess::next_entry (5,697,773 samples, 2.48%)</title><rect x="83.0722%" y="1189" width="2.4763%" height="15" fill="rgb(248,18,52)" fg:x="191145397" fg:w="5697773"/><text x="83.3222%" y="1199.50">se..</text></g><g><title>serde::de::MapAccess::next_entry_seed (5,697,773 samples, 2.48%)</title><rect x="83.0722%" y="1173" width="2.4763%" height="15" fill="rgb(208,4,7)" fg:x="191145397" fg:w="5697773"/><text x="83.3222%" y="1183.50">se..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5,697,773 samples, 2.48%)</title><rect x="83.0722%" y="1157" width="2.4763%" height="15" fill="rgb(240,17,39)" fg:x="191145397" fg:w="5697773"/><text x="83.3222%" y="1167.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,697,773 samples, 2.48%)</title><rect x="83.0722%" y="1141" width="2.4763%" height="15" fill="rgb(207,170,3)" fg:x="191145397" fg:w="5697773"/><text x="83.3222%" y="1151.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,697,773 samples, 2.48%)</title><rect x="83.0722%" y="1125" width="2.4763%" height="15" fill="rgb(236,100,52)" fg:x="191145397" fg:w="5697773"/><text x="83.3222%" y="1135.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,697,773 samples, 2.48%)</title><rect x="83.0722%" y="1109" width="2.4763%" height="15" fill="rgb(246,78,51)" fg:x="191145397" fg:w="5697773"/><text x="83.3222%" y="1119.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (5,697,773 samples, 2.48%)</title><rect x="83.0722%" y="1093" width="2.4763%" height="15" fill="rgb(211,17,15)" fg:x="191145397" fg:w="5697773"/><text x="83.3222%" y="1103.50">&lt;s..</text></g><g><title>serde::de::SeqAccess::next_element (4,515,505 samples, 1.96%)</title><rect x="83.5860%" y="1077" width="1.9624%" height="15" fill="rgb(209,59,46)" fg:x="192327665" fg:w="4515505"/><text x="83.8360%" y="1087.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,515,505 samples, 1.96%)</title><rect x="83.5860%" y="1061" width="1.9624%" height="15" fill="rgb(210,92,25)" fg:x="192327665" fg:w="4515505"/><text x="83.8360%" y="1071.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,515,505 samples, 1.96%)</title><rect x="83.5860%" y="1045" width="1.9624%" height="15" fill="rgb(238,174,52)" fg:x="192327665" fg:w="4515505"/><text x="83.8360%" y="1055.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,515,505 samples, 1.96%)</title><rect x="83.5860%" y="1029" width="1.9624%" height="15" fill="rgb(230,73,7)" fg:x="192327665" fg:w="4515505"/><text x="83.8360%" y="1039.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,515,505 samples, 1.96%)</title><rect x="83.5860%" y="1013" width="1.9624%" height="15" fill="rgb(243,124,40)" fg:x="192327665" fg:w="4515505"/><text x="83.8360%" y="1023.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,515,505 samples, 1.96%)</title><rect x="83.5860%" y="997" width="1.9624%" height="15" fill="rgb(244,170,11)" fg:x="192327665" fg:w="4515505"/><text x="83.8360%" y="1007.50">&lt;..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (941,847 samples, 0.41%)</title><rect x="85.1391%" y="981" width="0.4093%" height="15" fill="rgb(207,114,54)" fg:x="195901323" fg:w="941847"/><text x="85.3891%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (941,847 samples, 0.41%)</title><rect x="85.1391%" y="965" width="0.4093%" height="15" fill="rgb(205,42,20)" fg:x="195901323" fg:w="941847"/><text x="85.3891%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (941,847 samples, 0.41%)</title><rect x="85.1391%" y="949" width="0.4093%" height="15" fill="rgb(230,30,28)" fg:x="195901323" fg:w="941847"/><text x="85.3891%" y="959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (941,847 samples, 0.41%)</title><rect x="85.1391%" y="933" width="0.4093%" height="15" fill="rgb(205,73,54)" fg:x="195901323" fg:w="941847"/><text x="85.3891%" y="943.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (941,847 samples, 0.41%)</title><rect x="85.1391%" y="917" width="0.4093%" height="15" fill="rgb(254,227,23)" fg:x="195901323" fg:w="941847"/><text x="85.3891%" y="927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (941,847 samples, 0.41%)</title><rect x="85.1391%" y="901" width="0.4093%" height="15" fill="rgb(228,202,34)" fg:x="195901323" fg:w="941847"/><text x="85.3891%" y="911.50"></text></g><g><title>serde::de::MapAccess::next_entry (7,483,838 samples, 3.25%)</title><rect x="82.7256%" y="1397" width="3.2525%" height="15" fill="rgb(222,225,37)" fg:x="190347824" fg:w="7483838"/><text x="82.9756%" y="1407.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (7,483,838 samples, 3.25%)</title><rect x="82.7256%" y="1381" width="3.2525%" height="15" fill="rgb(221,14,54)" fg:x="190347824" fg:w="7483838"/><text x="82.9756%" y="1391.50">ser..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6,686,265 samples, 2.91%)</title><rect x="83.0722%" y="1365" width="2.9059%" height="15" fill="rgb(254,102,2)" fg:x="191145397" fg:w="6686265"/><text x="83.3222%" y="1375.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,686,265 samples, 2.91%)</title><rect x="83.0722%" y="1349" width="2.9059%" height="15" fill="rgb(232,104,17)" fg:x="191145397" fg:w="6686265"/><text x="83.3222%" y="1359.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,686,265 samples, 2.91%)</title><rect x="83.0722%" y="1333" width="2.9059%" height="15" fill="rgb(250,220,14)" fg:x="191145397" fg:w="6686265"/><text x="83.3222%" y="1343.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,686,265 samples, 2.91%)</title><rect x="83.0722%" y="1317" width="2.9059%" height="15" fill="rgb(241,158,9)" fg:x="191145397" fg:w="6686265"/><text x="83.3222%" y="1327.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (6,686,265 samples, 2.91%)</title><rect x="83.0722%" y="1301" width="2.9059%" height="15" fill="rgb(246,9,43)" fg:x="191145397" fg:w="6686265"/><text x="83.3222%" y="1311.50">&lt;s..</text></g><g><title>serde::de::SeqAccess::next_element (6,686,265 samples, 2.91%)</title><rect x="83.0722%" y="1285" width="2.9059%" height="15" fill="rgb(206,73,33)" fg:x="191145397" fg:w="6686265"/><text x="83.3222%" y="1295.50">se..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (6,686,265 samples, 2.91%)</title><rect x="83.0722%" y="1269" width="2.9059%" height="15" fill="rgb(222,79,8)" fg:x="191145397" fg:w="6686265"/><text x="83.3222%" y="1279.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,686,265 samples, 2.91%)</title><rect x="83.0722%" y="1253" width="2.9059%" height="15" fill="rgb(234,8,54)" fg:x="191145397" fg:w="6686265"/><text x="83.3222%" y="1263.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,686,265 samples, 2.91%)</title><rect x="83.0722%" y="1237" width="2.9059%" height="15" fill="rgb(209,134,38)" fg:x="191145397" fg:w="6686265"/><text x="83.3222%" y="1247.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,686,265 samples, 2.91%)</title><rect x="83.0722%" y="1221" width="2.9059%" height="15" fill="rgb(230,127,29)" fg:x="191145397" fg:w="6686265"/><text x="83.3222%" y="1231.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6,686,265 samples, 2.91%)</title><rect x="83.0722%" y="1205" width="2.9059%" height="15" fill="rgb(242,44,41)" fg:x="191145397" fg:w="6686265"/><text x="83.3222%" y="1215.50">&lt;s..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (988,492 samples, 0.43%)</title><rect x="85.5485%" y="1189" width="0.4296%" height="15" fill="rgb(222,56,43)" fg:x="196843170" fg:w="988492"/><text x="85.7985%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (988,492 samples, 0.43%)</title><rect x="85.5485%" y="1173" width="0.4296%" height="15" fill="rgb(238,39,47)" fg:x="196843170" fg:w="988492"/><text x="85.7985%" y="1183.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (988,492 samples, 0.43%)</title><rect x="85.5485%" y="1157" width="0.4296%" height="15" fill="rgb(226,79,43)" fg:x="196843170" fg:w="988492"/><text x="85.7985%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (988,492 samples, 0.43%)</title><rect x="85.5485%" y="1141" width="0.4296%" height="15" fill="rgb(242,105,53)" fg:x="196843170" fg:w="988492"/><text x="85.7985%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (988,492 samples, 0.43%)</title><rect x="85.5485%" y="1125" width="0.4296%" height="15" fill="rgb(251,132,46)" fg:x="196843170" fg:w="988492"/><text x="85.7985%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (988,492 samples, 0.43%)</title><rect x="85.5485%" y="1109" width="0.4296%" height="15" fill="rgb(231,77,14)" fg:x="196843170" fg:w="988492"/><text x="85.7985%" y="1119.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (988,492 samples, 0.43%)</title><rect x="85.5485%" y="1093" width="0.4296%" height="15" fill="rgb(240,135,9)" fg:x="196843170" fg:w="988492"/><text x="85.7985%" y="1103.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (988,492 samples, 0.43%)</title><rect x="85.5485%" y="1077" width="0.4296%" height="15" fill="rgb(248,109,14)" fg:x="196843170" fg:w="988492"/><text x="85.7985%" y="1087.50"></text></g><g><title>core::intrinsics::copy (988,492 samples, 0.43%)</title><rect x="85.5485%" y="1061" width="0.4296%" height="15" fill="rgb(227,146,52)" fg:x="196843170" fg:w="988492"/><text x="85.7985%" y="1071.50"></text></g><g><title>[libc.so.6] (988,492 samples, 0.43%)</title><rect x="85.5485%" y="1045" width="0.4296%" height="15" fill="rgb(232,54,3)" fg:x="196843170" fg:w="988492"/><text x="85.7985%" y="1055.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (10,138,492 samples, 4.41%)</title><rect x="81.7408%" y="1717" width="4.4062%" height="15" fill="rgb(229,201,43)" fg:x="188081802" fg:w="10138492"/><text x="81.9908%" y="1727.50">&lt;serd..</text></g><g><title>serde::de::SeqAccess::next_element (10,138,492 samples, 4.41%)</title><rect x="81.7408%" y="1701" width="4.4062%" height="15" fill="rgb(252,161,33)" fg:x="188081802" fg:w="10138492"/><text x="81.9908%" y="1711.50">serde..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (10,138,492 samples, 4.41%)</title><rect x="81.7408%" y="1685" width="4.4062%" height="15" fill="rgb(226,146,40)" fg:x="188081802" fg:w="10138492"/><text x="81.9908%" y="1695.50">&lt;serd..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,138,492 samples, 4.41%)</title><rect x="81.7408%" y="1669" width="4.4062%" height="15" fill="rgb(219,47,25)" fg:x="188081802" fg:w="10138492"/><text x="81.9908%" y="1679.50">&lt;core..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,138,492 samples, 4.41%)</title><rect x="81.7408%" y="1653" width="4.4062%" height="15" fill="rgb(250,135,13)" fg:x="188081802" fg:w="10138492"/><text x="81.9908%" y="1663.50">serde..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,138,492 samples, 4.41%)</title><rect x="81.7408%" y="1637" width="4.4062%" height="15" fill="rgb(219,229,18)" fg:x="188081802" fg:w="10138492"/><text x="81.9908%" y="1647.50">&lt;&amp;mut..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10,138,492 samples, 4.41%)</title><rect x="81.7408%" y="1621" width="4.4062%" height="15" fill="rgb(217,152,27)" fg:x="188081802" fg:w="10138492"/><text x="81.9908%" y="1631.50">&lt;serd..</text></g><g><title>serde::de::MapAccess::next_entry (10,138,492 samples, 4.41%)</title><rect x="81.7408%" y="1605" width="4.4062%" height="15" fill="rgb(225,71,47)" fg:x="188081802" fg:w="10138492"/><text x="81.9908%" y="1615.50">serde..</text></g><g><title>serde::de::MapAccess::next_entry_seed (10,138,492 samples, 4.41%)</title><rect x="81.7408%" y="1589" width="4.4062%" height="15" fill="rgb(220,139,14)" fg:x="188081802" fg:w="10138492"/><text x="81.9908%" y="1599.50">serde..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (7,872,470 samples, 3.42%)</title><rect x="82.7256%" y="1573" width="3.4214%" height="15" fill="rgb(247,54,32)" fg:x="190347824" fg:w="7872470"/><text x="82.9756%" y="1583.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,872,470 samples, 3.42%)</title><rect x="82.7256%" y="1557" width="3.4214%" height="15" fill="rgb(252,131,39)" fg:x="190347824" fg:w="7872470"/><text x="82.9756%" y="1567.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,872,470 samples, 3.42%)</title><rect x="82.7256%" y="1541" width="3.4214%" height="15" fill="rgb(210,108,39)" fg:x="190347824" fg:w="7872470"/><text x="82.9756%" y="1551.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,872,470 samples, 3.42%)</title><rect x="82.7256%" y="1525" width="3.4214%" height="15" fill="rgb(205,23,29)" fg:x="190347824" fg:w="7872470"/><text x="82.9756%" y="1535.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (7,872,470 samples, 3.42%)</title><rect x="82.7256%" y="1509" width="3.4214%" height="15" fill="rgb(246,139,46)" fg:x="190347824" fg:w="7872470"/><text x="82.9756%" y="1519.50">&lt;se..</text></g><g><title>serde::de::SeqAccess::next_element (7,872,470 samples, 3.42%)</title><rect x="82.7256%" y="1493" width="3.4214%" height="15" fill="rgb(250,81,26)" fg:x="190347824" fg:w="7872470"/><text x="82.9756%" y="1503.50">ser..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (7,872,470 samples, 3.42%)</title><rect x="82.7256%" y="1477" width="3.4214%" height="15" fill="rgb(214,104,7)" fg:x="190347824" fg:w="7872470"/><text x="82.9756%" y="1487.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,872,470 samples, 3.42%)</title><rect x="82.7256%" y="1461" width="3.4214%" height="15" fill="rgb(233,189,8)" fg:x="190347824" fg:w="7872470"/><text x="82.9756%" y="1471.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,872,470 samples, 3.42%)</title><rect x="82.7256%" y="1445" width="3.4214%" height="15" fill="rgb(228,141,17)" fg:x="190347824" fg:w="7872470"/><text x="82.9756%" y="1455.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,872,470 samples, 3.42%)</title><rect x="82.7256%" y="1429" width="3.4214%" height="15" fill="rgb(247,157,1)" fg:x="190347824" fg:w="7872470"/><text x="82.9756%" y="1439.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7,872,470 samples, 3.42%)</title><rect x="82.7256%" y="1413" width="3.4214%" height="15" fill="rgb(249,225,5)" fg:x="190347824" fg:w="7872470"/><text x="82.9756%" y="1423.50">&lt;se..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (388,632 samples, 0.17%)</title><rect x="85.9781%" y="1397" width="0.1689%" height="15" fill="rgb(242,55,13)" fg:x="197831662" fg:w="388632"/><text x="86.2281%" y="1407.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (388,632 samples, 0.17%)</title><rect x="85.9781%" y="1381" width="0.1689%" height="15" fill="rgb(230,49,50)" fg:x="197831662" fg:w="388632"/><text x="86.2281%" y="1391.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (388,632 samples, 0.17%)</title><rect x="85.9781%" y="1365" width="0.1689%" height="15" fill="rgb(241,111,38)" fg:x="197831662" fg:w="388632"/><text x="86.2281%" y="1375.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (388,632 samples, 0.17%)</title><rect x="85.9781%" y="1349" width="0.1689%" height="15" fill="rgb(252,155,4)" fg:x="197831662" fg:w="388632"/><text x="86.2281%" y="1359.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (388,632 samples, 0.17%)</title><rect x="85.9781%" y="1333" width="0.1689%" height="15" fill="rgb(212,69,32)" fg:x="197831662" fg:w="388632"/><text x="86.2281%" y="1343.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (388,632 samples, 0.17%)</title><rect x="85.9781%" y="1317" width="0.1689%" height="15" fill="rgb(243,107,47)" fg:x="197831662" fg:w="388632"/><text x="86.2281%" y="1327.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (388,632 samples, 0.17%)</title><rect x="85.9781%" y="1301" width="0.1689%" height="15" fill="rgb(247,130,12)" fg:x="197831662" fg:w="388632"/><text x="86.2281%" y="1311.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (388,632 samples, 0.17%)</title><rect x="85.9781%" y="1285" width="0.1689%" height="15" fill="rgb(233,74,16)" fg:x="197831662" fg:w="388632"/><text x="86.2281%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (388,632 samples, 0.17%)</title><rect x="85.9781%" y="1269" width="0.1689%" height="15" fill="rgb(208,58,18)" fg:x="197831662" fg:w="388632"/><text x="86.2281%" y="1279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (388,632 samples, 0.17%)</title><rect x="85.9781%" y="1253" width="0.1689%" height="15" fill="rgb(242,225,1)" fg:x="197831662" fg:w="388632"/><text x="86.2281%" y="1263.50"></text></g><g><title>alloc::alloc::alloc (388,632 samples, 0.17%)</title><rect x="85.9781%" y="1237" width="0.1689%" height="15" fill="rgb(249,39,40)" fg:x="197831662" fg:w="388632"/><text x="86.2281%" y="1247.50"></text></g><g><title>malloc (388,632 samples, 0.17%)</title><rect x="85.9781%" y="1221" width="0.1689%" height="15" fill="rgb(207,72,44)" fg:x="197831662" fg:w="388632"/><text x="86.2281%" y="1231.50"></text></g><g><title>[libc.so.6] (388,632 samples, 0.17%)</title><rect x="85.9781%" y="1205" width="0.1689%" height="15" fill="rgb(215,193,12)" fg:x="197831662" fg:w="388632"/><text x="86.2281%" y="1215.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (13,330,600 samples, 5.79%)</title><rect x="80.7444%" y="1925" width="5.7935%" height="15" fill="rgb(248,41,39)" fg:x="185789217" fg:w="13330600"/><text x="80.9944%" y="1935.50">&lt;serde_..</text></g><g><title>serde::de::SeqAccess::next_element (13,330,600 samples, 5.79%)</title><rect x="80.7444%" y="1909" width="5.7935%" height="15" fill="rgb(253,85,4)" fg:x="185789217" fg:w="13330600"/><text x="80.9944%" y="1919.50">serde::..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (13,330,600 samples, 5.79%)</title><rect x="80.7444%" y="1893" width="5.7935%" height="15" fill="rgb(243,70,31)" fg:x="185789217" fg:w="13330600"/><text x="80.9944%" y="1903.50">&lt;serde_..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (13,330,600 samples, 5.79%)</title><rect x="80.7444%" y="1877" width="5.7935%" height="15" fill="rgb(253,195,26)" fg:x="185789217" fg:w="13330600"/><text x="80.9944%" y="1887.50">&lt;core::..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13,330,600 samples, 5.79%)</title><rect x="80.7444%" y="1861" width="5.7935%" height="15" fill="rgb(243,42,11)" fg:x="185789217" fg:w="13330600"/><text x="80.9944%" y="1871.50">serde_j..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13,330,600 samples, 5.79%)</title><rect x="80.7444%" y="1845" width="5.7935%" height="15" fill="rgb(239,66,17)" fg:x="185789217" fg:w="13330600"/><text x="80.9944%" y="1855.50">&lt;&amp;mut s..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13,330,600 samples, 5.79%)</title><rect x="80.7444%" y="1829" width="5.7935%" height="15" fill="rgb(217,132,21)" fg:x="185789217" fg:w="13330600"/><text x="80.9944%" y="1839.50">&lt;serde_..</text></g><g><title>serde::de::MapAccess::next_entry (13,330,600 samples, 5.79%)</title><rect x="80.7444%" y="1813" width="5.7935%" height="15" fill="rgb(252,202,21)" fg:x="185789217" fg:w="13330600"/><text x="80.9944%" y="1823.50">serde::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (13,330,600 samples, 5.79%)</title><rect x="80.7444%" y="1797" width="5.7935%" height="15" fill="rgb(233,98,36)" fg:x="185789217" fg:w="13330600"/><text x="80.9944%" y="1807.50">serde::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12,159,383 samples, 5.28%)</title><rect x="81.2534%" y="1781" width="5.2845%" height="15" fill="rgb(216,153,54)" fg:x="186960434" fg:w="12159383"/><text x="81.5034%" y="1791.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,159,383 samples, 5.28%)</title><rect x="81.2534%" y="1765" width="5.2845%" height="15" fill="rgb(250,99,7)" fg:x="186960434" fg:w="12159383"/><text x="81.5034%" y="1775.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,159,383 samples, 5.28%)</title><rect x="81.2534%" y="1749" width="5.2845%" height="15" fill="rgb(207,56,50)" fg:x="186960434" fg:w="12159383"/><text x="81.5034%" y="1759.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,159,383 samples, 5.28%)</title><rect x="81.2534%" y="1733" width="5.2845%" height="15" fill="rgb(244,61,34)" fg:x="186960434" fg:w="12159383"/><text x="81.5034%" y="1743.50">&lt;&amp;mut ..</text></g><g><title>serde::de::Visitor::visit_borrowed_str (899,523 samples, 0.39%)</title><rect x="86.1470%" y="1717" width="0.3909%" height="15" fill="rgb(241,50,38)" fg:x="198220294" fg:w="899523"/><text x="86.3970%" y="1727.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (899,523 samples, 0.39%)</title><rect x="86.1470%" y="1701" width="0.3909%" height="15" fill="rgb(212,166,30)" fg:x="198220294" fg:w="899523"/><text x="86.3970%" y="1711.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (899,523 samples, 0.39%)</title><rect x="86.1470%" y="1685" width="0.3909%" height="15" fill="rgb(249,127,32)" fg:x="198220294" fg:w="899523"/><text x="86.3970%" y="1695.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (899,523 samples, 0.39%)</title><rect x="86.1470%" y="1669" width="0.3909%" height="15" fill="rgb(209,103,0)" fg:x="198220294" fg:w="899523"/><text x="86.3970%" y="1679.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (899,523 samples, 0.39%)</title><rect x="86.1470%" y="1653" width="0.3909%" height="15" fill="rgb(238,209,51)" fg:x="198220294" fg:w="899523"/><text x="86.3970%" y="1663.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (899,523 samples, 0.39%)</title><rect x="86.1470%" y="1637" width="0.3909%" height="15" fill="rgb(237,56,23)" fg:x="198220294" fg:w="899523"/><text x="86.3970%" y="1647.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (899,523 samples, 0.39%)</title><rect x="86.1470%" y="1621" width="0.3909%" height="15" fill="rgb(215,153,46)" fg:x="198220294" fg:w="899523"/><text x="86.3970%" y="1631.50"></text></g><g><title>alloc::slice::hack::to_vec (899,523 samples, 0.39%)</title><rect x="86.1470%" y="1605" width="0.3909%" height="15" fill="rgb(224,49,31)" fg:x="198220294" fg:w="899523"/><text x="86.3970%" y="1615.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (899,523 samples, 0.39%)</title><rect x="86.1470%" y="1589" width="0.3909%" height="15" fill="rgb(250,18,42)" fg:x="198220294" fg:w="899523"/><text x="86.3970%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (899,523 samples, 0.39%)</title><rect x="86.1470%" y="1573" width="0.3909%" height="15" fill="rgb(215,176,39)" fg:x="198220294" fg:w="899523"/><text x="86.3970%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (899,523 samples, 0.39%)</title><rect x="86.1470%" y="1557" width="0.3909%" height="15" fill="rgb(223,77,29)" fg:x="198220294" fg:w="899523"/><text x="86.3970%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (899,523 samples, 0.39%)</title><rect x="86.1470%" y="1541" width="0.3909%" height="15" fill="rgb(234,94,52)" fg:x="198220294" fg:w="899523"/><text x="86.3970%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (899,523 samples, 0.39%)</title><rect x="86.1470%" y="1525" width="0.3909%" height="15" fill="rgb(220,154,50)" fg:x="198220294" fg:w="899523"/><text x="86.3970%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (899,523 samples, 0.39%)</title><rect x="86.1470%" y="1509" width="0.3909%" height="15" fill="rgb(212,11,10)" fg:x="198220294" fg:w="899523"/><text x="86.3970%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (899,523 samples, 0.39%)</title><rect x="86.1470%" y="1493" width="0.3909%" height="15" fill="rgb(205,166,19)" fg:x="198220294" fg:w="899523"/><text x="86.3970%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (899,523 samples, 0.39%)</title><rect x="86.1470%" y="1477" width="0.3909%" height="15" fill="rgb(244,198,16)" fg:x="198220294" fg:w="899523"/><text x="86.3970%" y="1487.50"></text></g><g><title>malloc (899,523 samples, 0.39%)</title><rect x="86.1470%" y="1461" width="0.3909%" height="15" fill="rgb(219,69,12)" fg:x="198220294" fg:w="899523"/><text x="86.3970%" y="1471.50"></text></g><g><title>[libc.so.6] (899,523 samples, 0.39%)</title><rect x="86.1470%" y="1445" width="0.3909%" height="15" fill="rgb(245,30,7)" fg:x="198220294" fg:w="899523"/><text x="86.3970%" y="1455.50"></text></g><g><title>serde::de::MapAccess::next_entry (15,562,701 samples, 6.76%)</title><rect x="80.2549%" y="2021" width="6.7636%" height="15" fill="rgb(218,221,48)" fg:x="184662873" fg:w="15562701"/><text x="80.5049%" y="2031.50">serde::de..</text></g><g><title>serde::de::MapAccess::next_entry_seed (15,562,701 samples, 6.76%)</title><rect x="80.2549%" y="2005" width="6.7636%" height="15" fill="rgb(216,66,15)" fg:x="184662873" fg:w="15562701"/><text x="80.5049%" y="2015.50">serde::de..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (15,562,701 samples, 6.76%)</title><rect x="80.2549%" y="1989" width="6.7636%" height="15" fill="rgb(226,122,50)" fg:x="184662873" fg:w="15562701"/><text x="80.5049%" y="1999.50">&lt;serde_js..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (15,562,701 samples, 6.76%)</title><rect x="80.2549%" y="1973" width="6.7636%" height="15" fill="rgb(239,156,16)" fg:x="184662873" fg:w="15562701"/><text x="80.5049%" y="1983.50">&lt;core::ma..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15,562,701 samples, 6.76%)</title><rect x="80.2549%" y="1957" width="6.7636%" height="15" fill="rgb(224,27,38)" fg:x="184662873" fg:w="15562701"/><text x="80.5049%" y="1967.50">serde_jso..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15,562,701 samples, 6.76%)</title><rect x="80.2549%" y="1941" width="6.7636%" height="15" fill="rgb(224,39,27)" fg:x="184662873" fg:w="15562701"/><text x="80.5049%" y="1951.50">&lt;&amp;mut ser..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_any_number (1,105,757 samples, 0.48%)</title><rect x="86.5379%" y="1925" width="0.4806%" height="15" fill="rgb(215,92,29)" fg:x="199119817" fg:w="1105757"/><text x="86.7879%" y="1935.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_number (1,105,757 samples, 0.48%)</title><rect x="86.5379%" y="1909" width="0.4806%" height="15" fill="rgb(207,159,16)" fg:x="199119817" fg:w="1105757"/><text x="86.7879%" y="1919.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1,153,167 samples, 0.50%)</title><rect x="87.0185%" y="1989" width="0.5012%" height="15" fill="rgb(238,163,47)" fg:x="200225574" fg:w="1153167"/><text x="87.2685%" y="1999.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,153,167 samples, 0.50%)</title><rect x="87.0185%" y="1973" width="0.5012%" height="15" fill="rgb(219,91,49)" fg:x="200225574" fg:w="1153167"/><text x="87.2685%" y="1983.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (1,153,167 samples, 0.50%)</title><rect x="87.0185%" y="1957" width="0.5012%" height="15" fill="rgb(227,167,31)" fg:x="200225574" fg:w="1153167"/><text x="87.2685%" y="1967.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (1,153,167 samples, 0.50%)</title><rect x="87.0185%" y="1941" width="0.5012%" height="15" fill="rgb(234,80,54)" fg:x="200225574" fg:w="1153167"/><text x="87.2685%" y="1951.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17,789,736 samples, 7.73%)</title><rect x="80.2549%" y="2037" width="7.7315%" height="15" fill="rgb(212,114,2)" fg:x="184662873" fg:w="17789736"/><text x="80.5049%" y="2047.50">&lt;serde_json..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (2,227,035 samples, 0.97%)</title><rect x="87.0185%" y="2021" width="0.9679%" height="15" fill="rgb(234,50,24)" fg:x="200225574" fg:w="2227035"/><text x="87.2685%" y="2031.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2,227,035 samples, 0.97%)</title><rect x="87.0185%" y="2005" width="0.9679%" height="15" fill="rgb(221,68,8)" fg:x="200225574" fg:w="2227035"/><text x="87.2685%" y="2015.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,073,868 samples, 0.47%)</title><rect x="87.5196%" y="1989" width="0.4667%" height="15" fill="rgb(254,180,31)" fg:x="201378741" fg:w="1073868"/><text x="87.7696%" y="1999.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,073,868 samples, 0.47%)</title><rect x="87.5196%" y="1973" width="0.4667%" height="15" fill="rgb(247,130,50)" fg:x="201378741" fg:w="1073868"/><text x="87.7696%" y="1983.50"></text></g><g><title>serde_json::de::from_str (18,817,405 samples, 8.18%)</title><rect x="80.2549%" y="2213" width="8.1781%" height="15" fill="rgb(211,109,4)" fg:x="184662873" fg:w="18817405"/><text x="80.5049%" y="2223.50">serde_json:..</text></g><g><title>serde_json::de::from_trait (18,817,405 samples, 8.18%)</title><rect x="80.2549%" y="2197" width="8.1781%" height="15" fill="rgb(238,50,21)" fg:x="184662873" fg:w="18817405"/><text x="80.5049%" y="2207.50">serde_json:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18,817,405 samples, 8.18%)</title><rect x="80.2549%" y="2181" width="8.1781%" height="15" fill="rgb(225,57,45)" fg:x="184662873" fg:w="18817405"/><text x="80.5049%" y="2191.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18,817,405 samples, 8.18%)</title><rect x="80.2549%" y="2165" width="8.1781%" height="15" fill="rgb(209,196,50)" fg:x="184662873" fg:w="18817405"/><text x="80.5049%" y="2175.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18,817,405 samples, 8.18%)</title><rect x="80.2549%" y="2149" width="8.1781%" height="15" fill="rgb(242,140,13)" fg:x="184662873" fg:w="18817405"/><text x="80.5049%" y="2159.50">&lt;serde_json..</text></g><g><title>serde::de::MapAccess::next_entry (18,817,405 samples, 8.18%)</title><rect x="80.2549%" y="2133" width="8.1781%" height="15" fill="rgb(217,111,7)" fg:x="184662873" fg:w="18817405"/><text x="80.5049%" y="2143.50">serde::de::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (18,817,405 samples, 8.18%)</title><rect x="80.2549%" y="2117" width="8.1781%" height="15" fill="rgb(253,193,51)" fg:x="184662873" fg:w="18817405"/><text x="80.5049%" y="2127.50">serde::de::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (18,817,405 samples, 8.18%)</title><rect x="80.2549%" y="2101" width="8.1781%" height="15" fill="rgb(252,70,29)" fg:x="184662873" fg:w="18817405"/><text x="80.5049%" y="2111.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (18,817,405 samples, 8.18%)</title><rect x="80.2549%" y="2085" width="8.1781%" height="15" fill="rgb(232,127,12)" fg:x="184662873" fg:w="18817405"/><text x="80.5049%" y="2095.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (18,817,405 samples, 8.18%)</title><rect x="80.2549%" y="2069" width="8.1781%" height="15" fill="rgb(211,180,21)" fg:x="184662873" fg:w="18817405"/><text x="80.5049%" y="2079.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18,817,405 samples, 8.18%)</title><rect x="80.2549%" y="2053" width="8.1781%" height="15" fill="rgb(229,72,13)" fg:x="184662873" fg:w="18817405"/><text x="80.5049%" y="2063.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,027,669 samples, 0.45%)</title><rect x="87.9863%" y="2037" width="0.4466%" height="15" fill="rgb(240,211,49)" fg:x="202452609" fg:w="1027669"/><text x="88.2363%" y="2047.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,027,669 samples, 0.45%)</title><rect x="87.9863%" y="2021" width="0.4466%" height="15" fill="rgb(219,149,40)" fg:x="202452609" fg:w="1027669"/><text x="88.2363%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,027,669 samples, 0.45%)</title><rect x="87.9863%" y="2005" width="0.4466%" height="15" fill="rgb(210,127,46)" fg:x="202452609" fg:w="1027669"/><text x="88.2363%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,027,669 samples, 0.45%)</title><rect x="87.9863%" y="1989" width="0.4466%" height="15" fill="rgb(220,106,7)" fg:x="202452609" fg:w="1027669"/><text x="88.2363%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,027,669 samples, 0.45%)</title><rect x="87.9863%" y="1973" width="0.4466%" height="15" fill="rgb(249,31,22)" fg:x="202452609" fg:w="1027669"/><text x="88.2363%" y="1983.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,027,669 samples, 0.45%)</title><rect x="87.9863%" y="1957" width="0.4466%" height="15" fill="rgb(253,1,49)" fg:x="202452609" fg:w="1027669"/><text x="88.2363%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,027,669 samples, 0.45%)</title><rect x="87.9863%" y="1941" width="0.4466%" height="15" fill="rgb(227,144,33)" fg:x="202452609" fg:w="1027669"/><text x="88.2363%" y="1951.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,027,669 samples, 0.45%)</title><rect x="87.9863%" y="1925" width="0.4466%" height="15" fill="rgb(249,163,44)" fg:x="202452609" fg:w="1027669"/><text x="88.2363%" y="1935.50"></text></g><g><title>alloc::alloc::realloc (1,027,669 samples, 0.45%)</title><rect x="87.9863%" y="1909" width="0.4466%" height="15" fill="rgb(234,15,39)" fg:x="202452609" fg:w="1027669"/><text x="88.2363%" y="1919.50"></text></g><g><title>realloc (1,027,669 samples, 0.45%)</title><rect x="87.9863%" y="1893" width="0.4466%" height="15" fill="rgb(207,66,16)" fg:x="202452609" fg:w="1027669"/><text x="88.2363%" y="1903.50"></text></g><g><title>benchmark::parse_web_layout_trace (21,066,840 samples, 9.16%)</title><rect x="79.4952%" y="2229" width="9.1557%" height="15" fill="rgb(233,112,24)" fg:x="182914942" fg:w="21066840"/><text x="79.7452%" y="2239.50">benchmark::pa..</text></g><g><title>std::fs::read_to_string (501,504 samples, 0.22%)</title><rect x="88.4330%" y="2213" width="0.2180%" height="15" fill="rgb(230,90,22)" fg:x="203480278" fg:w="501504"/><text x="88.6830%" y="2223.50"></text></g><g><title>std::fs::read_to_string::inner (501,504 samples, 0.22%)</title><rect x="88.4330%" y="2197" width="0.2180%" height="15" fill="rgb(229,61,13)" fg:x="203480278" fg:w="501504"/><text x="88.6830%" y="2207.50"></text></g><g><title>std::io::default_read_to_string (501,504 samples, 0.22%)</title><rect x="88.4330%" y="2181" width="0.2180%" height="15" fill="rgb(225,57,24)" fg:x="203480278" fg:w="501504"/><text x="88.6830%" y="2191.50"></text></g><g><title>std::io::append_to_string (501,504 samples, 0.22%)</title><rect x="88.4330%" y="2165" width="0.2180%" height="15" fill="rgb(208,169,48)" fg:x="203480278" fg:w="501504"/><text x="88.6830%" y="2175.50"></text></g><g><title>core::str::converts::from_utf8 (501,504 samples, 0.22%)</title><rect x="88.4330%" y="2149" width="0.2180%" height="15" fill="rgb(244,218,51)" fg:x="203480278" fg:w="501504"/><text x="88.6830%" y="2159.50"></text></g><g><title>core::str::validations::run_utf8_validation (501,504 samples, 0.22%)</title><rect x="88.4330%" y="2133" width="0.2180%" height="15" fill="rgb(214,148,10)" fg:x="203480278" fg:w="501504"/><text x="88.6830%" y="2143.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,412,035 samples, 0.61%)</title><rect x="88.6509%" y="2037" width="0.6137%" height="15" fill="rgb(225,174,27)" fg:x="203981782" fg:w="1412035"/><text x="88.9009%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,412,035 samples, 0.61%)</title><rect x="88.6509%" y="2021" width="0.6137%" height="15" fill="rgb(230,96,26)" fg:x="203981782" fg:w="1412035"/><text x="88.9009%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,412,035 samples, 0.61%)</title><rect x="88.6509%" y="2005" width="0.6137%" height="15" fill="rgb(232,10,30)" fg:x="203981782" fg:w="1412035"/><text x="88.9009%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,412,035 samples, 0.61%)</title><rect x="88.6509%" y="1989" width="0.6137%" height="15" fill="rgb(222,8,50)" fg:x="203981782" fg:w="1412035"/><text x="88.9009%" y="1999.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,412,035 samples, 0.61%)</title><rect x="88.6509%" y="1973" width="0.6137%" height="15" fill="rgb(213,81,27)" fg:x="203981782" fg:w="1412035"/><text x="88.9009%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,412,035 samples, 0.61%)</title><rect x="88.6509%" y="1957" width="0.6137%" height="15" fill="rgb(245,50,10)" fg:x="203981782" fg:w="1412035"/><text x="88.9009%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,412,035 samples, 0.61%)</title><rect x="88.6509%" y="1941" width="0.6137%" height="15" fill="rgb(216,100,18)" fg:x="203981782" fg:w="1412035"/><text x="88.9009%" y="1951.50"></text></g><g><title>alloc::alloc::dealloc (1,412,035 samples, 0.61%)</title><rect x="88.6509%" y="1925" width="0.6137%" height="15" fill="rgb(236,147,54)" fg:x="203981782" fg:w="1412035"/><text x="88.9009%" y="1935.50"></text></g><g><title>cfree (1,412,035 samples, 0.61%)</title><rect x="88.6509%" y="1909" width="0.6137%" height="15" fill="rgb(205,143,26)" fg:x="203981782" fg:w="1412035"/><text x="88.9009%" y="1919.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,424,848 samples, 0.62%)</title><rect x="89.2646%" y="677" width="0.6192%" height="15" fill="rgb(236,26,9)" fg:x="205393817" fg:w="1424848"/><text x="89.5146%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1797" width="1.2475%" height="15" fill="rgb(221,165,53)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1781" width="1.2475%" height="15" fill="rgb(214,110,17)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1765" width="1.2475%" height="15" fill="rgb(237,197,12)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1749" width="1.2475%" height="15" fill="rgb(205,84,17)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1733" width="1.2475%" height="15" fill="rgb(237,18,45)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1717" width="1.2475%" height="15" fill="rgb(221,87,14)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1727.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1701" width="1.2475%" height="15" fill="rgb(238,186,15)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1711.50"></text></g><g><title>core::mem::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1685" width="1.2475%" height="15" fill="rgb(208,115,11)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1669" width="1.2475%" height="15" fill="rgb(254,175,0)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1653" width="1.2475%" height="15" fill="rgb(227,24,42)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1663.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1637" width="1.2475%" height="15" fill="rgb(223,211,37)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1621" width="1.2475%" height="15" fill="rgb(235,49,27)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1605" width="1.2475%" height="15" fill="rgb(254,97,51)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1615.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1589" width="1.2475%" height="15" fill="rgb(249,51,40)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1573" width="1.2475%" height="15" fill="rgb(210,128,45)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1557" width="1.2475%" height="15" fill="rgb(224,137,50)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1541" width="1.2475%" height="15" fill="rgb(242,15,9)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1525" width="1.2475%" height="15" fill="rgb(233,187,41)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1509" width="1.2475%" height="15" fill="rgb(227,2,29)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1493" width="1.2475%" height="15" fill="rgb(222,70,3)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1477" width="1.2475%" height="15" fill="rgb(213,11,42)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1487.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1461" width="1.2475%" height="15" fill="rgb(225,150,9)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1471.50"></text></g><g><title>core::mem::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1445" width="1.2475%" height="15" fill="rgb(230,162,45)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1429" width="1.2475%" height="15" fill="rgb(222,14,52)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1439.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1413" width="1.2475%" height="15" fill="rgb(254,198,14)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1423.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1397" width="1.2475%" height="15" fill="rgb(220,217,30)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1381" width="1.2475%" height="15" fill="rgb(215,146,41)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1391.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1365" width="1.2475%" height="15" fill="rgb(217,27,36)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1375.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1349" width="1.2475%" height="15" fill="rgb(219,218,39)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1333" width="1.2475%" height="15" fill="rgb(219,4,42)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1317" width="1.2475%" height="15" fill="rgb(249,119,36)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1301" width="1.2475%" height="15" fill="rgb(209,23,33)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1285" width="1.2475%" height="15" fill="rgb(211,10,0)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1269" width="1.2475%" height="15" fill="rgb(208,99,37)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1253" width="1.2475%" height="15" fill="rgb(213,132,31)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1237" width="1.2475%" height="15" fill="rgb(243,129,40)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1247.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1221" width="1.2475%" height="15" fill="rgb(210,66,33)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1231.50"></text></g><g><title>core::mem::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1205" width="1.2475%" height="15" fill="rgb(209,189,4)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1189" width="1.2475%" height="15" fill="rgb(214,107,37)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1173" width="1.2475%" height="15" fill="rgb(245,88,54)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1183.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1157" width="1.2475%" height="15" fill="rgb(205,146,20)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1141" width="1.2475%" height="15" fill="rgb(220,161,25)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1125" width="1.2475%" height="15" fill="rgb(215,152,15)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1135.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1109" width="1.2475%" height="15" fill="rgb(233,192,44)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1093" width="1.2475%" height="15" fill="rgb(240,170,46)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1077" width="1.2475%" height="15" fill="rgb(207,104,33)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1061" width="1.2475%" height="15" fill="rgb(219,21,39)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1045" width="1.2475%" height="15" fill="rgb(214,133,29)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1029" width="1.2475%" height="15" fill="rgb(226,93,6)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="1013" width="1.2475%" height="15" fill="rgb(252,222,34)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="997" width="1.2475%" height="15" fill="rgb(252,92,48)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="1007.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="981" width="1.2475%" height="15" fill="rgb(245,223,24)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="991.50"></text></g><g><title>core::mem::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="965" width="1.2475%" height="15" fill="rgb(205,176,3)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="949" width="1.2475%" height="15" fill="rgb(235,151,15)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="933" width="1.2475%" height="15" fill="rgb(237,209,11)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="943.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="917" width="1.2475%" height="15" fill="rgb(243,227,24)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="901" width="1.2475%" height="15" fill="rgb(239,193,16)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="885" width="1.2475%" height="15" fill="rgb(231,27,9)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="895.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="869" width="1.2475%" height="15" fill="rgb(219,169,10)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="853" width="1.2475%" height="15" fill="rgb(244,229,43)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="837" width="1.2475%" height="15" fill="rgb(254,38,20)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="821" width="1.2475%" height="15" fill="rgb(250,47,30)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="805" width="1.2475%" height="15" fill="rgb(224,124,36)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="789" width="1.2475%" height="15" fill="rgb(246,68,51)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="773" width="1.2475%" height="15" fill="rgb(253,43,49)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="757" width="1.2475%" height="15" fill="rgb(219,54,36)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="741" width="1.2475%" height="15" fill="rgb(227,133,34)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="751.50"></text></g><g><title>core::mem::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="725" width="1.2475%" height="15" fill="rgb(247,227,15)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="709" width="1.2475%" height="15" fill="rgb(229,96,14)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,870,496 samples, 1.25%)</title><rect x="89.2646%" y="693" width="1.2475%" height="15" fill="rgb(220,79,17)" fg:x="205393817" fg:w="2870496"/><text x="89.5146%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="677" width="0.6283%" height="15" fill="rgb(205,131,53)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="661" width="0.6283%" height="15" fill="rgb(209,50,29)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="645" width="0.6283%" height="15" fill="rgb(245,86,46)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="655.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="629" width="0.6283%" height="15" fill="rgb(235,66,46)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="613" width="0.6283%" height="15" fill="rgb(232,148,31)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="597" width="0.6283%" height="15" fill="rgb(217,149,8)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="581" width="0.6283%" height="15" fill="rgb(209,183,11)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="565" width="0.6283%" height="15" fill="rgb(208,55,20)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="549" width="0.6283%" height="15" fill="rgb(218,39,14)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="533" width="0.6283%" height="15" fill="rgb(216,169,33)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="517" width="0.6283%" height="15" fill="rgb(233,80,24)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="501" width="0.6283%" height="15" fill="rgb(213,179,31)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="511.50"></text></g><g><title>core::mem::drop (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="485" width="0.6283%" height="15" fill="rgb(209,19,5)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="469" width="0.6283%" height="15" fill="rgb(219,18,35)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="453" width="0.6283%" height="15" fill="rgb(209,169,16)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="437" width="0.6283%" height="15" fill="rgb(245,90,51)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="421" width="0.6283%" height="15" fill="rgb(220,99,45)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="405" width="0.6283%" height="15" fill="rgb(249,89,25)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="415.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="389" width="0.6283%" height="15" fill="rgb(239,193,0)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="373" width="0.6283%" height="15" fill="rgb(231,126,1)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="357" width="0.6283%" height="15" fill="rgb(243,166,3)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="341" width="0.6283%" height="15" fill="rgb(223,22,34)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="325" width="0.6283%" height="15" fill="rgb(251,52,51)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="309" width="0.6283%" height="15" fill="rgb(221,165,28)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="293" width="0.6283%" height="15" fill="rgb(218,121,47)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="277" width="0.6283%" height="15" fill="rgb(209,120,9)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="261" width="0.6283%" height="15" fill="rgb(236,68,12)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="271.50"></text></g><g><title>core::mem::drop (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="245" width="0.6283%" height="15" fill="rgb(225,194,26)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="229" width="0.6283%" height="15" fill="rgb(231,84,39)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="213" width="0.6283%" height="15" fill="rgb(210,11,45)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="223.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="197" width="0.6283%" height="15" fill="rgb(224,54,52)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="181" width="0.6283%" height="15" fill="rgb(238,102,14)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="165" width="0.6283%" height="15" fill="rgb(243,160,52)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="175.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="149" width="0.6283%" height="15" fill="rgb(216,114,19)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="133" width="0.6283%" height="15" fill="rgb(244,166,37)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="117" width="0.6283%" height="15" fill="rgb(246,29,44)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="101" width="0.6283%" height="15" fill="rgb(215,56,53)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="85" width="0.6283%" height="15" fill="rgb(217,60,2)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="69" width="0.6283%" height="15" fill="rgb(207,26,24)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="53" width="0.6283%" height="15" fill="rgb(252,210,15)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (1,445,648 samples, 0.63%)</title><rect x="89.8838%" y="37" width="0.6283%" height="15" fill="rgb(253,209,26)" fg:x="206818665" fg:w="1445648"/><text x="90.1338%" y="47.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,759,948 samples, 2.50%)</title><rect x="88.6509%" y="2213" width="2.5033%" height="15" fill="rgb(238,170,14)" fg:x="203981782" fg:w="5759948"/><text x="88.9009%" y="2223.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (5,759,948 samples, 2.50%)</title><rect x="88.6509%" y="2197" width="2.5033%" height="15" fill="rgb(216,178,15)" fg:x="203981782" fg:w="5759948"/><text x="88.9009%" y="2207.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (5,759,948 samples, 2.50%)</title><rect x="88.6509%" y="2181" width="2.5033%" height="15" fill="rgb(250,197,2)" fg:x="203981782" fg:w="5759948"/><text x="88.9009%" y="2191.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5,759,948 samples, 2.50%)</title><rect x="88.6509%" y="2165" width="2.5033%" height="15" fill="rgb(212,70,42)" fg:x="203981782" fg:w="5759948"/><text x="88.9009%" y="2175.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,759,948 samples, 2.50%)</title><rect x="88.6509%" y="2149" width="2.5033%" height="15" fill="rgb(227,213,9)" fg:x="203981782" fg:w="5759948"/><text x="88.9009%" y="2159.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,759,948 samples, 2.50%)</title><rect x="88.6509%" y="2133" width="2.5033%" height="15" fill="rgb(245,99,25)" fg:x="203981782" fg:w="5759948"/><text x="88.9009%" y="2143.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,759,948 samples, 2.50%)</title><rect x="88.6509%" y="2117" width="2.5033%" height="15" fill="rgb(250,82,29)" fg:x="203981782" fg:w="5759948"/><text x="88.9009%" y="2127.50">&lt;a..</text></g><g><title>core::mem::drop (5,759,948 samples, 2.50%)</title><rect x="88.6509%" y="2101" width="2.5033%" height="15" fill="rgb(241,226,54)" fg:x="203981782" fg:w="5759948"/><text x="88.9009%" y="2111.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5,759,948 samples, 2.50%)</title><rect x="88.6509%" y="2085" width="2.5033%" height="15" fill="rgb(221,99,41)" fg:x="203981782" fg:w="5759948"/><text x="88.9009%" y="2095.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5,759,948 samples, 2.50%)</title><rect x="88.6509%" y="2069" width="2.5033%" height="15" fill="rgb(213,90,21)" fg:x="203981782" fg:w="5759948"/><text x="88.9009%" y="2079.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (5,759,948 samples, 2.50%)</title><rect x="88.6509%" y="2053" width="2.5033%" height="15" fill="rgb(205,208,24)" fg:x="203981782" fg:w="5759948"/><text x="88.9009%" y="2063.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,347,913 samples, 1.89%)</title><rect x="89.2646%" y="2037" width="1.8896%" height="15" fill="rgb(246,31,12)" fg:x="205393817" fg:w="4347913"/><text x="89.5146%" y="2047.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,347,913 samples, 1.89%)</title><rect x="89.2646%" y="2021" width="1.8896%" height="15" fill="rgb(213,154,6)" fg:x="205393817" fg:w="4347913"/><text x="89.5146%" y="2031.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,347,913 samples, 1.89%)</title><rect x="89.2646%" y="2005" width="1.8896%" height="15" fill="rgb(222,163,29)" fg:x="205393817" fg:w="4347913"/><text x="89.5146%" y="2015.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,347,913 samples, 1.89%)</title><rect x="89.2646%" y="1989" width="1.8896%" height="15" fill="rgb(227,201,8)" fg:x="205393817" fg:w="4347913"/><text x="89.5146%" y="1999.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,347,913 samples, 1.89%)</title><rect x="89.2646%" y="1973" width="1.8896%" height="15" fill="rgb(233,9,32)" fg:x="205393817" fg:w="4347913"/><text x="89.5146%" y="1983.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,347,913 samples, 1.89%)</title><rect x="89.2646%" y="1957" width="1.8896%" height="15" fill="rgb(217,54,24)" fg:x="205393817" fg:w="4347913"/><text x="89.5146%" y="1967.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,347,913 samples, 1.89%)</title><rect x="89.2646%" y="1941" width="1.8896%" height="15" fill="rgb(235,192,0)" fg:x="205393817" fg:w="4347913"/><text x="89.5146%" y="1951.50">&lt;..</text></g><g><title>core::mem::drop (4,347,913 samples, 1.89%)</title><rect x="89.2646%" y="1925" width="1.8896%" height="15" fill="rgb(235,45,9)" fg:x="205393817" fg:w="4347913"/><text x="89.5146%" y="1935.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,347,913 samples, 1.89%)</title><rect x="89.2646%" y="1909" width="1.8896%" height="15" fill="rgb(246,42,40)" fg:x="205393817" fg:w="4347913"/><text x="89.5146%" y="1919.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,347,913 samples, 1.89%)</title><rect x="89.2646%" y="1893" width="1.8896%" height="15" fill="rgb(248,111,24)" fg:x="205393817" fg:w="4347913"/><text x="89.5146%" y="1903.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,347,913 samples, 1.89%)</title><rect x="89.2646%" y="1877" width="1.8896%" height="15" fill="rgb(249,65,22)" fg:x="205393817" fg:w="4347913"/><text x="89.5146%" y="1887.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,347,913 samples, 1.89%)</title><rect x="89.2646%" y="1861" width="1.8896%" height="15" fill="rgb(238,111,51)" fg:x="205393817" fg:w="4347913"/><text x="89.5146%" y="1871.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,347,913 samples, 1.89%)</title><rect x="89.2646%" y="1845" width="1.8896%" height="15" fill="rgb(250,118,22)" fg:x="205393817" fg:w="4347913"/><text x="89.5146%" y="1855.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,347,913 samples, 1.89%)</title><rect x="89.2646%" y="1829" width="1.8896%" height="15" fill="rgb(234,84,26)" fg:x="205393817" fg:w="4347913"/><text x="89.5146%" y="1839.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,347,913 samples, 1.89%)</title><rect x="89.2646%" y="1813" width="1.8896%" height="15" fill="rgb(243,172,12)" fg:x="205393817" fg:w="4347913"/><text x="89.5146%" y="1823.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,477,417 samples, 0.64%)</title><rect x="90.5121%" y="1797" width="0.6421%" height="15" fill="rgb(236,150,49)" fg:x="208264313" fg:w="1477417"/><text x="90.7621%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,477,417 samples, 0.64%)</title><rect x="90.5121%" y="1781" width="0.6421%" height="15" fill="rgb(225,197,26)" fg:x="208264313" fg:w="1477417"/><text x="90.7621%" y="1791.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,477,417 samples, 0.64%)</title><rect x="90.5121%" y="1765" width="0.6421%" height="15" fill="rgb(214,17,42)" fg:x="208264313" fg:w="1477417"/><text x="90.7621%" y="1775.50"></text></g><g><title>core::mem::drop (1,477,417 samples, 0.64%)</title><rect x="90.5121%" y="1749" width="0.6421%" height="15" fill="rgb(224,165,40)" fg:x="208264313" fg:w="1477417"/><text x="90.7621%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,477,417 samples, 0.64%)</title><rect x="90.5121%" y="1733" width="0.6421%" height="15" fill="rgb(246,100,4)" fg:x="208264313" fg:w="1477417"/><text x="90.7621%" y="1743.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,477,417 samples, 0.64%)</title><rect x="90.5121%" y="1717" width="0.6421%" height="15" fill="rgb(222,103,0)" fg:x="208264313" fg:w="1477417"/><text x="90.7621%" y="1727.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,477,417 samples, 0.64%)</title><rect x="90.5121%" y="1701" width="0.6421%" height="15" fill="rgb(227,189,26)" fg:x="208264313" fg:w="1477417"/><text x="90.7621%" y="1711.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,477,417 samples, 0.64%)</title><rect x="90.5121%" y="1685" width="0.6421%" height="15" fill="rgb(214,202,17)" fg:x="208264313" fg:w="1477417"/><text x="90.7621%" y="1695.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (1,477,417 samples, 0.64%)</title><rect x="90.5121%" y="1669" width="0.6421%" height="15" fill="rgb(229,111,3)" fg:x="208264313" fg:w="1477417"/><text x="90.7621%" y="1679.50"></text></g><g><title>alloc::collections::btree::mem::replace (1,477,417 samples, 0.64%)</title><rect x="90.5121%" y="1653" width="0.6421%" height="15" fill="rgb(229,172,15)" fg:x="208264313" fg:w="1477417"/><text x="90.7621%" y="1663.50"></text></g><g><title>alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::_{{closure}} (1,477,417 samples, 0.64%)</title><rect x="90.5121%" y="1637" width="0.6421%" height="15" fill="rgb(230,224,35)" fg:x="208264313" fg:w="1477417"/><text x="90.7621%" y="1647.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (1,477,417 samples, 0.64%)</title><rect x="90.5121%" y="1621" width="0.6421%" height="15" fill="rgb(251,141,6)" fg:x="208264313" fg:w="1477417"/><text x="90.7621%" y="1631.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1,477,417 samples, 0.64%)</title><rect x="90.5121%" y="1605" width="0.6421%" height="15" fill="rgb(225,208,6)" fg:x="208264313" fg:w="1477417"/><text x="90.7621%" y="1615.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (1,477,417 samples, 0.64%)</title><rect x="90.5121%" y="1589" width="0.6421%" height="15" fill="rgb(246,181,16)" fg:x="208264313" fg:w="1477417"/><text x="90.7621%" y="1599.50"></text></g><g><title>_start (191,415,846 samples, 83.19%)</title><rect x="9.9344%" y="2517" width="83.1897%" height="15" fill="rgb(227,129,36)" fg:x="22858495" fg:w="191415846"/><text x="10.1844%" y="2527.50">_start</text></g><g><title>__libc_start_main (191,415,846 samples, 83.19%)</title><rect x="9.9344%" y="2501" width="83.1897%" height="15" fill="rgb(248,117,24)" fg:x="22858495" fg:w="191415846"/><text x="10.1844%" y="2511.50">__libc_start_main</text></g><g><title>[libc.so.6] (191,415,846 samples, 83.19%)</title><rect x="9.9344%" y="2485" width="83.1897%" height="15" fill="rgb(214,185,35)" fg:x="22858495" fg:w="191415846"/><text x="10.1844%" y="2495.50">[libc.so.6]</text></g><g><title>main (191,415,846 samples, 83.19%)</title><rect x="9.9344%" y="2469" width="83.1897%" height="15" fill="rgb(236,150,34)" fg:x="22858495" fg:w="191415846"/><text x="10.1844%" y="2479.50">main</text></g><g><title>std::rt::lang_start_internal (191,415,846 samples, 83.19%)</title><rect x="9.9344%" y="2453" width="83.1897%" height="15" fill="rgb(243,228,27)" fg:x="22858495" fg:w="191415846"/><text x="10.1844%" y="2463.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (191,415,846 samples, 83.19%)</title><rect x="9.9344%" y="2437" width="83.1897%" height="15" fill="rgb(245,77,44)" fg:x="22858495" fg:w="191415846"/><text x="10.1844%" y="2447.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (191,415,846 samples, 83.19%)</title><rect x="9.9344%" y="2421" width="83.1897%" height="15" fill="rgb(235,214,42)" fg:x="22858495" fg:w="191415846"/><text x="10.1844%" y="2431.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (191,415,846 samples, 83.19%)</title><rect x="9.9344%" y="2405" width="83.1897%" height="15" fill="rgb(221,74,3)" fg:x="22858495" fg:w="191415846"/><text x="10.1844%" y="2415.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (191,415,846 samples, 83.19%)</title><rect x="9.9344%" y="2389" width="83.1897%" height="15" fill="rgb(206,121,29)" fg:x="22858495" fg:w="191415846"/><text x="10.1844%" y="2399.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (191,415,846 samples, 83.19%)</title><rect x="9.9344%" y="2373" width="83.1897%" height="15" fill="rgb(249,131,53)" fg:x="22858495" fg:w="191415846"/><text x="10.1844%" y="2383.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (191,415,846 samples, 83.19%)</title><rect x="9.9344%" y="2357" width="83.1897%" height="15" fill="rgb(236,170,29)" fg:x="22858495" fg:w="191415846"/><text x="10.1844%" y="2367.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (191,415,846 samples, 83.19%)</title><rect x="9.9344%" y="2341" width="83.1897%" height="15" fill="rgb(247,96,15)" fg:x="22858495" fg:w="191415846"/><text x="10.1844%" y="2351.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (191,415,846 samples, 83.19%)</title><rect x="9.9344%" y="2325" width="83.1897%" height="15" fill="rgb(211,210,7)" fg:x="22858495" fg:w="191415846"/><text x="10.1844%" y="2335.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (191,415,846 samples, 83.19%)</title><rect x="9.9344%" y="2309" width="83.1897%" height="15" fill="rgb(240,88,50)" fg:x="22858495" fg:w="191415846"/><text x="10.1844%" y="2319.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (191,415,846 samples, 83.19%)</title><rect x="9.9344%" y="2293" width="83.1897%" height="15" fill="rgb(209,229,26)" fg:x="22858495" fg:w="191415846"/><text x="10.1844%" y="2303.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (191,415,846 samples, 83.19%)</title><rect x="9.9344%" y="2277" width="83.1897%" height="15" fill="rgb(210,68,23)" fg:x="22858495" fg:w="191415846"/><text x="10.1844%" y="2287.50">core::ops::function::FnOnce::call_once</text></g><g><title>benchmark::main (191,415,846 samples, 83.19%)</title><rect x="9.9344%" y="2261" width="83.1897%" height="15" fill="rgb(229,180,13)" fg:x="22858495" fg:w="191415846"/><text x="10.1844%" y="2271.50">benchmark::main</text></g><g><title>benchmark::run_web_browser_layout_trace_benchmark (191,415,846 samples, 83.19%)</title><rect x="9.9344%" y="2245" width="83.1897%" height="15" fill="rgb(236,53,44)" fg:x="22858495" fg:w="191415846"/><text x="10.1844%" y="2255.50">benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::LayoutFrame&gt;&gt; (10,292,559 samples, 4.47%)</title><rect x="88.6509%" y="2229" width="4.4732%" height="15" fill="rgb(244,214,29)" fg:x="203981782" fg:w="10292559"/><text x="88.9009%" y="2239.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;benchmark::LayoutFrame&gt;&gt; (4,532,611 samples, 1.97%)</title><rect x="91.1542%" y="2213" width="1.9699%" height="15" fill="rgb(220,75,29)" fg:x="209741730" fg:w="4532611"/><text x="91.4042%" y="2223.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,532,611 samples, 1.97%)</title><rect x="91.1542%" y="2197" width="1.9699%" height="15" fill="rgb(214,183,37)" fg:x="209741730" fg:w="4532611"/><text x="91.4042%" y="2207.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,532,611 samples, 1.97%)</title><rect x="91.1542%" y="2181" width="1.9699%" height="15" fill="rgb(239,117,29)" fg:x="209741730" fg:w="4532611"/><text x="91.4042%" y="2191.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,532,611 samples, 1.97%)</title><rect x="91.1542%" y="2165" width="1.9699%" height="15" fill="rgb(237,171,35)" fg:x="209741730" fg:w="4532611"/><text x="91.4042%" y="2175.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (4,532,611 samples, 1.97%)</title><rect x="91.1542%" y="2149" width="1.9699%" height="15" fill="rgb(229,178,53)" fg:x="209741730" fg:w="4532611"/><text x="91.4042%" y="2159.50">a..</text></g><g><title>cfree (4,532,611 samples, 1.97%)</title><rect x="91.1542%" y="2133" width="1.9699%" height="15" fill="rgb(210,102,19)" fg:x="209741730" fg:w="4532611"/><text x="91.4042%" y="2143.50">c..</text></g><g><title>[libc.so.6] (4,532,611 samples, 1.97%)</title><rect x="91.1542%" y="2117" width="1.9699%" height="15" fill="rgb(235,127,22)" fg:x="209741730" fg:w="4532611"/><text x="91.4042%" y="2127.50">[..</text></g><g><title>[libc.so.6] (4,532,611 samples, 1.97%)</title><rect x="91.1542%" y="2101" width="1.9699%" height="15" fill="rgb(244,31,31)" fg:x="209741730" fg:w="4532611"/><text x="91.4042%" y="2111.50">[..</text></g><g><title>[libc.so.6] (3,051,145 samples, 1.33%)</title><rect x="91.7981%" y="2085" width="1.3260%" height="15" fill="rgb(231,43,21)" fg:x="211223196" fg:w="3051145"/><text x="92.0481%" y="2095.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,521,926 samples, 0.66%)</title><rect x="93.1241%" y="2517" width="0.6614%" height="15" fill="rgb(217,131,35)" fg:x="214274341" fg:w="1521926"/><text x="93.3741%" y="2527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1,065,743 samples, 0.46%)</title><rect x="93.7855%" y="2517" width="0.4632%" height="15" fill="rgb(221,149,4)" fg:x="215796267" fg:w="1065743"/><text x="94.0355%" y="2527.50"></text></g><g><title>benchmark::clear_dirty_flags (1,048,672 samples, 0.46%)</title><rect x="94.2487%" y="2517" width="0.4558%" height="15" fill="rgb(232,170,28)" fg:x="216862010" fg:w="1048672"/><text x="94.4987%" y="2527.50"></text></g><g><title>benchmark::count_nodes (1,552,664 samples, 0.67%)</title><rect x="94.7045%" y="2517" width="0.6748%" height="15" fill="rgb(238,56,10)" fg:x="217910682" fg:w="1552664"/><text x="94.9545%" y="2527.50"></text></g><g><title>cfree (1,423,209 samples, 0.62%)</title><rect x="95.3793%" y="2517" width="0.6185%" height="15" fill="rgb(235,196,14)" fg:x="219463346" fg:w="1423209"/><text x="95.6293%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,806,492 samples, 1.22%)</title><rect x="95.9978%" y="2517" width="1.2197%" height="15" fill="rgb(216,45,48)" fg:x="220886555" fg:w="2806492"/><text x="96.2478%" y="2527.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,375,609 samples, 0.60%)</title><rect x="97.2175%" y="2517" width="0.5978%" height="15" fill="rgb(238,213,17)" fg:x="223693047" fg:w="1375609"/><text x="97.4675%" y="2527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,545,747 samples, 0.67%)</title><rect x="97.8153%" y="2517" width="0.6718%" height="15" fill="rgb(212,13,2)" fg:x="225068656" fg:w="1545747"/><text x="98.0653%" y="2527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (1,545,747 samples, 0.67%)</title><rect x="97.8153%" y="2501" width="0.6718%" height="15" fill="rgb(240,114,20)" fg:x="225068656" fg:w="1545747"/><text x="98.0653%" y="2511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1,545,747 samples, 0.67%)</title><rect x="97.8153%" y="2485" width="0.6718%" height="15" fill="rgb(228,41,40)" fg:x="225068656" fg:w="1545747"/><text x="98.0653%" y="2495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,545,747 samples, 0.67%)</title><rect x="97.8153%" y="2469" width="0.6718%" height="15" fill="rgb(244,132,35)" fg:x="225068656" fg:w="1545747"/><text x="98.0653%" y="2479.50"></text></g><g><title>malloc (2,297,133 samples, 1.00%)</title><rect x="98.4871%" y="2517" width="0.9983%" height="15" fill="rgb(253,189,4)" fg:x="226614403" fg:w="2297133"/><text x="98.7371%" y="2527.50"></text></g><g><title>all (230,095,479 samples, 100%)</title><rect x="0.0000%" y="2549" width="100.0000%" height="15" fill="rgb(224,37,19)" fg:x="0" fg:w="230095479"/><text x="0.2500%" y="2559.50"></text></g><g><title>benchmark (230,095,479 samples, 100.00%)</title><rect x="0.0000%" y="2533" width="100.0000%" height="15" fill="rgb(235,223,18)" fg:x="0" fg:w="230095479"/><text x="0.2500%" y="2543.50">benchmark</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,183,943 samples, 0.51%)</title><rect x="99.4855%" y="2517" width="0.5145%" height="15" fill="rgb(235,163,25)" fg:x="228911536" fg:w="1183943"/><text x="99.7355%" y="2527.50"></text></g></svg></svg>