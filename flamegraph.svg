<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2262" onload="init(evt)" viewBox="0 0 1200 2262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2245.00"> </text><svg id="frames" x="10" width="1180" total_samples="267986417"><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,851,429 samples, 1.06%)</title><rect x="0.0000%" y="2181" width="1.0640%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2851429"/><text x="0.2500%" y="2191.50"></text></g><g><title>[libc.so.6] (2,966,564 samples, 1.11%)</title><rect x="1.0640%" y="2181" width="1.1070%" height="15" fill="rgb(217,0,24)" fg:x="2851429" fg:w="2966564"/><text x="1.3140%" y="2191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,808,930 samples, 1.05%)</title><rect x="4.2850%" y="2165" width="1.0482%" height="15" fill="rgb(221,193,54)" fg:x="11483290" fg:w="2808930"/><text x="4.5350%" y="2175.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,808,930 samples, 1.05%)</title><rect x="4.2850%" y="2149" width="1.0482%" height="15" fill="rgb(248,212,6)" fg:x="11483290" fg:w="2808930"/><text x="4.5350%" y="2159.50"></text></g><g><title>alloc::slice::hack::to_vec (2,808,930 samples, 1.05%)</title><rect x="4.2850%" y="2133" width="1.0482%" height="15" fill="rgb(208,68,35)" fg:x="11483290" fg:w="2808930"/><text x="4.5350%" y="2143.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,808,930 samples, 1.05%)</title><rect x="4.2850%" y="2117" width="1.0482%" height="15" fill="rgb(232,128,0)" fg:x="11483290" fg:w="2808930"/><text x="4.5350%" y="2127.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (2,808,930 samples, 1.05%)</title><rect x="4.2850%" y="2101" width="1.0482%" height="15" fill="rgb(207,160,47)" fg:x="11483290" fg:w="2808930"/><text x="4.5350%" y="2111.50"></text></g><g><title>[libc.so.6] (2,851,127 samples, 1.06%)</title><rect x="5.3332%" y="2165" width="1.0639%" height="15" fill="rgb(228,23,34)" fg:x="14292220" fg:w="2851127"/><text x="5.5832%" y="2175.50"></text></g><g><title>[unknown] (13,101,461 samples, 4.89%)</title><rect x="2.1710%" y="2181" width="4.8889%" height="15" fill="rgb(218,30,26)" fg:x="5817993" fg:w="13101461"/><text x="2.4210%" y="2191.50">[unkno..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,776,107 samples, 0.66%)</title><rect x="6.3971%" y="2165" width="0.6628%" height="15" fill="rgb(220,122,19)" fg:x="17143347" fg:w="1776107"/><text x="6.6471%" y="2175.50"></text></g><g><title>__rdl_dealloc (2,699,792 samples, 1.01%)</title><rect x="7.0599%" y="2181" width="1.0074%" height="15" fill="rgb(250,228,42)" fg:x="18919454" fg:w="2699792"/><text x="7.3099%" y="2191.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2,699,792 samples, 1.01%)</title><rect x="7.0599%" y="2165" width="1.0074%" height="15" fill="rgb(240,193,28)" fg:x="18919454" fg:w="2699792"/><text x="7.3099%" y="2175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,040,983 samples, 1.13%)</title><rect x="8.0673%" y="1797" width="1.1348%" height="15" fill="rgb(216,20,37)" fg:x="21619246" fg:w="3040983"/><text x="8.3173%" y="1807.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,040,983 samples, 1.13%)</title><rect x="8.0673%" y="1781" width="1.1348%" height="15" fill="rgb(206,188,39)" fg:x="21619246" fg:w="3040983"/><text x="8.3173%" y="1791.50"></text></g><g><title>alloc::slice::hack::to_vec (3,040,983 samples, 1.13%)</title><rect x="8.0673%" y="1765" width="1.1348%" height="15" fill="rgb(217,207,13)" fg:x="21619246" fg:w="3040983"/><text x="8.3173%" y="1775.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,040,983 samples, 1.13%)</title><rect x="8.0673%" y="1749" width="1.1348%" height="15" fill="rgb(231,73,38)" fg:x="21619246" fg:w="3040983"/><text x="8.3173%" y="1759.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3,040,983 samples, 1.13%)</title><rect x="8.0673%" y="1733" width="1.1348%" height="15" fill="rgb(225,20,46)" fg:x="21619246" fg:w="3040983"/><text x="8.3173%" y="1743.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="1029" width="1.0136%" height="15" fill="rgb(210,31,41)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="1013" width="1.0136%" height="15" fill="rgb(221,200,47)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="997" width="1.0136%" height="15" fill="rgb(226,26,5)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="981" width="1.0136%" height="15" fill="rgb(249,33,26)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="965" width="1.0136%" height="15" fill="rgb(235,183,28)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="975.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="949" width="1.0136%" height="15" fill="rgb(221,5,38)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="959.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="933" width="1.0136%" height="15" fill="rgb(247,18,42)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="917" width="1.0136%" height="15" fill="rgb(241,131,45)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="927.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="901" width="1.0136%" height="15" fill="rgb(249,31,29)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="911.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="885" width="1.0136%" height="15" fill="rgb(225,111,53)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="895.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="869" width="1.0136%" height="15" fill="rgb(238,160,17)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="879.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="853" width="1.0136%" height="15" fill="rgb(214,148,48)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="837" width="1.0136%" height="15" fill="rgb(232,36,49)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="821" width="1.0136%" height="15" fill="rgb(209,103,24)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="805" width="1.0136%" height="15" fill="rgb(229,88,8)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="789" width="1.0136%" height="15" fill="rgb(213,181,19)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="773" width="1.0136%" height="15" fill="rgb(254,191,54)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="757" width="1.0136%" height="15" fill="rgb(241,83,37)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="741" width="1.0136%" height="15" fill="rgb(233,36,39)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="725" width="1.0136%" height="15" fill="rgb(226,3,54)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="709" width="1.0136%" height="15" fill="rgb(245,192,40)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="693" width="1.0136%" height="15" fill="rgb(238,167,29)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="677" width="1.0136%" height="15" fill="rgb(232,182,51)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="661" width="1.0136%" height="15" fill="rgb(231,60,39)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="671.50"></text></g><g><title>alloc::alloc::alloc (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="645" width="1.0136%" height="15" fill="rgb(208,69,12)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="655.50"></text></g><g><title>malloc (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="629" width="1.0136%" height="15" fill="rgb(235,93,37)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="639.50"></text></g><g><title>[libc.so.6] (2,716,407 samples, 1.01%)</title><rect x="9.2020%" y="613" width="1.0136%" height="15" fill="rgb(213,116,39)" fg:x="24660229" fg:w="2716407"/><text x="9.4520%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,095,031 samples, 1.90%)</title><rect x="9.2020%" y="1157" width="1.9012%" height="15" fill="rgb(222,207,29)" fg:x="24660229" fg:w="5095031"/><text x="9.4520%" y="1167.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,095,031 samples, 1.90%)</title><rect x="9.2020%" y="1141" width="1.9012%" height="15" fill="rgb(206,96,30)" fg:x="24660229" fg:w="5095031"/><text x="9.4520%" y="1151.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,095,031 samples, 1.90%)</title><rect x="9.2020%" y="1125" width="1.9012%" height="15" fill="rgb(218,138,4)" fg:x="24660229" fg:w="5095031"/><text x="9.4520%" y="1135.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,095,031 samples, 1.90%)</title><rect x="9.2020%" y="1109" width="1.9012%" height="15" fill="rgb(250,191,14)" fg:x="24660229" fg:w="5095031"/><text x="9.4520%" y="1119.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,095,031 samples, 1.90%)</title><rect x="9.2020%" y="1093" width="1.9012%" height="15" fill="rgb(239,60,40)" fg:x="24660229" fg:w="5095031"/><text x="9.4520%" y="1103.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,095,031 samples, 1.90%)</title><rect x="9.2020%" y="1077" width="1.9012%" height="15" fill="rgb(206,27,48)" fg:x="24660229" fg:w="5095031"/><text x="9.4520%" y="1087.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,095,031 samples, 1.90%)</title><rect x="9.2020%" y="1061" width="1.9012%" height="15" fill="rgb(225,35,8)" fg:x="24660229" fg:w="5095031"/><text x="9.4520%" y="1071.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,095,031 samples, 1.90%)</title><rect x="9.2020%" y="1045" width="1.9012%" height="15" fill="rgb(250,213,24)" fg:x="24660229" fg:w="5095031"/><text x="9.4520%" y="1055.50">&lt;..</text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (2,378,624 samples, 0.89%)</title><rect x="10.2157%" y="1029" width="0.8876%" height="15" fill="rgb(247,123,22)" fg:x="27376636" fg:w="2378624"/><text x="10.4657%" y="1039.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (2,378,624 samples, 0.89%)</title><rect x="10.2157%" y="1013" width="0.8876%" height="15" fill="rgb(231,138,38)" fg:x="27376636" fg:w="2378624"/><text x="10.4657%" y="1023.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (2,378,624 samples, 0.89%)</title><rect x="10.2157%" y="997" width="0.8876%" height="15" fill="rgb(231,145,46)" fg:x="27376636" fg:w="2378624"/><text x="10.4657%" y="1007.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (2,378,624 samples, 0.89%)</title><rect x="10.2157%" y="981" width="0.8876%" height="15" fill="rgb(251,118,11)" fg:x="27376636" fg:w="2378624"/><text x="10.4657%" y="991.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (2,378,624 samples, 0.89%)</title><rect x="10.2157%" y="965" width="0.8876%" height="15" fill="rgb(217,147,25)" fg:x="27376636" fg:w="2378624"/><text x="10.4657%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,378,624 samples, 0.89%)</title><rect x="10.2157%" y="949" width="0.8876%" height="15" fill="rgb(247,81,37)" fg:x="27376636" fg:w="2378624"/><text x="10.4657%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,378,624 samples, 0.89%)</title><rect x="10.2157%" y="933" width="0.8876%" height="15" fill="rgb(209,12,38)" fg:x="27376636" fg:w="2378624"/><text x="10.4657%" y="943.50"></text></g><g><title>alloc::alloc::alloc (2,378,624 samples, 0.89%)</title><rect x="10.2157%" y="917" width="0.8876%" height="15" fill="rgb(227,1,9)" fg:x="27376636" fg:w="2378624"/><text x="10.4657%" y="927.50"></text></g><g><title>__rdl_alloc (2,378,624 samples, 0.89%)</title><rect x="10.2157%" y="901" width="0.8876%" height="15" fill="rgb(248,47,43)" fg:x="27376636" fg:w="2378624"/><text x="10.4657%" y="911.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,378,624 samples, 0.89%)</title><rect x="10.2157%" y="885" width="0.8876%" height="15" fill="rgb(221,10,30)" fg:x="27376636" fg:w="2378624"/><text x="10.4657%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,380,614 samples, 2.75%)</title><rect x="9.2020%" y="1301" width="2.7541%" height="15" fill="rgb(210,229,1)" fg:x="24660229" fg:w="7380614"/><text x="9.4520%" y="1311.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,380,614 samples, 2.75%)</title><rect x="9.2020%" y="1285" width="2.7541%" height="15" fill="rgb(222,148,37)" fg:x="24660229" fg:w="7380614"/><text x="9.4520%" y="1295.50">al..</text></g><g><title>alloc::slice::hack::to_vec (7,380,614 samples, 2.75%)</title><rect x="9.2020%" y="1269" width="2.7541%" height="15" fill="rgb(234,67,33)" fg:x="24660229" fg:w="7380614"/><text x="9.4520%" y="1279.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,380,614 samples, 2.75%)</title><rect x="9.2020%" y="1253" width="2.7541%" height="15" fill="rgb(247,98,35)" fg:x="24660229" fg:w="7380614"/><text x="9.4520%" y="1263.50">&lt;T..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,380,614 samples, 2.75%)</title><rect x="9.2020%" y="1237" width="2.7541%" height="15" fill="rgb(247,138,52)" fg:x="24660229" fg:w="7380614"/><text x="9.4520%" y="1247.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,380,614 samples, 2.75%)</title><rect x="9.2020%" y="1221" width="2.7541%" height="15" fill="rgb(213,79,30)" fg:x="24660229" fg:w="7380614"/><text x="9.4520%" y="1231.50">&lt;s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,380,614 samples, 2.75%)</title><rect x="9.2020%" y="1205" width="2.7541%" height="15" fill="rgb(246,177,23)" fg:x="24660229" fg:w="7380614"/><text x="9.4520%" y="1215.50">&lt;a..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,380,614 samples, 2.75%)</title><rect x="9.2020%" y="1189" width="2.7541%" height="15" fill="rgb(230,62,27)" fg:x="24660229" fg:w="7380614"/><text x="9.4520%" y="1199.50">&lt;a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,380,614 samples, 2.75%)</title><rect x="9.2020%" y="1173" width="2.7541%" height="15" fill="rgb(216,154,8)" fg:x="24660229" fg:w="7380614"/><text x="9.4520%" y="1183.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,285,583 samples, 0.85%)</title><rect x="11.1033%" y="1157" width="0.8529%" height="15" fill="rgb(244,35,45)" fg:x="29755260" fg:w="2285583"/><text x="11.3533%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,285,583 samples, 0.85%)</title><rect x="11.1033%" y="1141" width="0.8529%" height="15" fill="rgb(251,115,12)" fg:x="29755260" fg:w="2285583"/><text x="11.3533%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,285,583 samples, 0.85%)</title><rect x="11.1033%" y="1125" width="0.8529%" height="15" fill="rgb(240,54,50)" fg:x="29755260" fg:w="2285583"/><text x="11.3533%" y="1135.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,285,583 samples, 0.85%)</title><rect x="11.1033%" y="1109" width="0.8529%" height="15" fill="rgb(233,84,52)" fg:x="29755260" fg:w="2285583"/><text x="11.3533%" y="1119.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,285,583 samples, 0.85%)</title><rect x="11.1033%" y="1093" width="0.8529%" height="15" fill="rgb(207,117,47)" fg:x="29755260" fg:w="2285583"/><text x="11.3533%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,285,583 samples, 0.85%)</title><rect x="11.1033%" y="1077" width="0.8529%" height="15" fill="rgb(249,43,39)" fg:x="29755260" fg:w="2285583"/><text x="11.3533%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,285,583 samples, 0.85%)</title><rect x="11.1033%" y="1061" width="0.8529%" height="15" fill="rgb(209,38,44)" fg:x="29755260" fg:w="2285583"/><text x="11.3533%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (2,285,583 samples, 0.85%)</title><rect x="11.1033%" y="1045" width="0.8529%" height="15" fill="rgb(236,212,23)" fg:x="29755260" fg:w="2285583"/><text x="11.3533%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,285,583 samples, 0.85%)</title><rect x="11.1033%" y="1029" width="0.8529%" height="15" fill="rgb(242,79,21)" fg:x="29755260" fg:w="2285583"/><text x="11.3533%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,285,583 samples, 0.85%)</title><rect x="11.1033%" y="1013" width="0.8529%" height="15" fill="rgb(211,96,35)" fg:x="29755260" fg:w="2285583"/><text x="11.3533%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,285,583 samples, 0.85%)</title><rect x="11.1033%" y="997" width="0.8529%" height="15" fill="rgb(253,215,40)" fg:x="29755260" fg:w="2285583"/><text x="11.3533%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,285,583 samples, 0.85%)</title><rect x="11.1033%" y="981" width="0.8529%" height="15" fill="rgb(211,81,21)" fg:x="29755260" fg:w="2285583"/><text x="11.3533%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,285,583 samples, 0.85%)</title><rect x="11.1033%" y="965" width="0.8529%" height="15" fill="rgb(208,190,38)" fg:x="29755260" fg:w="2285583"/><text x="11.3533%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,285,583 samples, 0.85%)</title><rect x="11.1033%" y="949" width="0.8529%" height="15" fill="rgb(235,213,38)" fg:x="29755260" fg:w="2285583"/><text x="11.3533%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,285,583 samples, 0.85%)</title><rect x="11.1033%" y="933" width="0.8529%" height="15" fill="rgb(237,122,38)" fg:x="29755260" fg:w="2285583"/><text x="11.3533%" y="943.50"></text></g><g><title>alloc::alloc::alloc (2,285,583 samples, 0.85%)</title><rect x="11.1033%" y="917" width="0.8529%" height="15" fill="rgb(244,218,35)" fg:x="29755260" fg:w="2285583"/><text x="11.3533%" y="927.50"></text></g><g><title>__rdl_alloc (2,285,583 samples, 0.85%)</title><rect x="11.1033%" y="901" width="0.8529%" height="15" fill="rgb(240,68,47)" fg:x="29755260" fg:w="2285583"/><text x="11.3533%" y="911.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,285,583 samples, 0.85%)</title><rect x="11.1033%" y="885" width="0.8529%" height="15" fill="rgb(210,16,53)" fg:x="29755260" fg:w="2285583"/><text x="11.3533%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,702,531 samples, 3.62%)</title><rect x="9.2020%" y="1445" width="3.6205%" height="15" fill="rgb(235,124,12)" fg:x="24660229" fg:w="9702531"/><text x="9.4520%" y="1455.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,702,531 samples, 3.62%)</title><rect x="9.2020%" y="1429" width="3.6205%" height="15" fill="rgb(224,169,11)" fg:x="24660229" fg:w="9702531"/><text x="9.4520%" y="1439.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (9,702,531 samples, 3.62%)</title><rect x="9.2020%" y="1413" width="3.6205%" height="15" fill="rgb(250,166,2)" fg:x="24660229" fg:w="9702531"/><text x="9.4520%" y="1423.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,702,531 samples, 3.62%)</title><rect x="9.2020%" y="1397" width="3.6205%" height="15" fill="rgb(242,216,29)" fg:x="24660229" fg:w="9702531"/><text x="9.4520%" y="1407.50">&lt;T a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (9,702,531 samples, 3.62%)</title><rect x="9.2020%" y="1381" width="3.6205%" height="15" fill="rgb(230,116,27)" fg:x="24660229" fg:w="9702531"/><text x="9.4520%" y="1391.50">&lt;ser..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (9,702,531 samples, 3.62%)</title><rect x="9.2020%" y="1365" width="3.6205%" height="15" fill="rgb(228,99,48)" fg:x="24660229" fg:w="9702531"/><text x="9.4520%" y="1375.50">&lt;ser..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (9,702,531 samples, 3.62%)</title><rect x="9.2020%" y="1349" width="3.6205%" height="15" fill="rgb(253,11,6)" fg:x="24660229" fg:w="9702531"/><text x="9.4520%" y="1359.50">&lt;all..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (9,702,531 samples, 3.62%)</title><rect x="9.2020%" y="1333" width="3.6205%" height="15" fill="rgb(247,143,39)" fg:x="24660229" fg:w="9702531"/><text x="9.4520%" y="1343.50">&lt;all..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (9,702,531 samples, 3.62%)</title><rect x="9.2020%" y="1317" width="3.6205%" height="15" fill="rgb(236,97,10)" fg:x="24660229" fg:w="9702531"/><text x="9.4520%" y="1327.50">&lt;ser..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,321,917 samples, 0.87%)</title><rect x="11.9561%" y="1301" width="0.8664%" height="15" fill="rgb(233,208,19)" fg:x="32040843" fg:w="2321917"/><text x="12.2061%" y="1311.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,321,917 samples, 0.87%)</title><rect x="11.9561%" y="1285" width="0.8664%" height="15" fill="rgb(216,164,2)" fg:x="32040843" fg:w="2321917"/><text x="12.2061%" y="1295.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,321,917 samples, 0.87%)</title><rect x="11.9561%" y="1269" width="0.8664%" height="15" fill="rgb(220,129,5)" fg:x="32040843" fg:w="2321917"/><text x="12.2061%" y="1279.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (2,321,917 samples, 0.87%)</title><rect x="11.9561%" y="1253" width="0.8664%" height="15" fill="rgb(242,17,10)" fg:x="32040843" fg:w="2321917"/><text x="12.2061%" y="1263.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push_with_handle (2,321,917 samples, 0.87%)</title><rect x="11.9561%" y="1237" width="0.8664%" height="15" fill="rgb(242,107,0)" fg:x="32040843" fg:w="2321917"/><text x="12.2061%" y="1247.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2,321,917 samples, 0.87%)</title><rect x="11.9561%" y="1221" width="0.8664%" height="15" fill="rgb(251,28,31)" fg:x="32040843" fg:w="2321917"/><text x="12.2061%" y="1231.50"></text></g><g><title>&lt;benchmark::LayoutFrame as core::clone::Clone&gt;::clone (15,415,075 samples, 5.75%)</title><rect x="8.0673%" y="1893" width="5.7522%" height="15" fill="rgb(233,223,10)" fg:x="21619246" fg:w="15415075"/><text x="8.3173%" y="1903.50">&lt;benchm..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (15,415,075 samples, 5.75%)</title><rect x="8.0673%" y="1877" width="5.7522%" height="15" fill="rgb(215,21,27)" fg:x="21619246" fg:w="15415075"/><text x="8.3173%" y="1887.50">&lt;serde_..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (15,415,075 samples, 5.75%)</title><rect x="8.0673%" y="1861" width="5.7522%" height="15" fill="rgb(232,23,21)" fg:x="21619246" fg:w="15415075"/><text x="8.3173%" y="1871.50">&lt;serde_..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (15,415,075 samples, 5.75%)</title><rect x="8.0673%" y="1845" width="5.7522%" height="15" fill="rgb(244,5,23)" fg:x="21619246" fg:w="15415075"/><text x="8.3173%" y="1855.50">&lt;alloc:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (15,415,075 samples, 5.75%)</title><rect x="8.0673%" y="1829" width="5.7522%" height="15" fill="rgb(226,81,46)" fg:x="21619246" fg:w="15415075"/><text x="8.3173%" y="1839.50">&lt;alloc:..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (15,415,075 samples, 5.75%)</title><rect x="8.0673%" y="1813" width="5.7522%" height="15" fill="rgb(247,70,30)" fg:x="21619246" fg:w="15415075"/><text x="8.3173%" y="1823.50">&lt;serde_..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1797" width="4.6174%" height="15" fill="rgb(212,68,19)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1807.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1781" width="4.6174%" height="15" fill="rgb(240,187,13)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1791.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1765" width="4.6174%" height="15" fill="rgb(223,113,26)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1775.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1749" width="4.6174%" height="15" fill="rgb(206,192,2)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1759.50">&lt;serd..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1733" width="4.6174%" height="15" fill="rgb(241,108,4)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1743.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1717" width="4.6174%" height="15" fill="rgb(247,173,49)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1727.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1701" width="4.6174%" height="15" fill="rgb(224,114,35)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1711.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1685" width="4.6174%" height="15" fill="rgb(245,159,27)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1695.50">&lt;T as..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1669" width="4.6174%" height="15" fill="rgb(245,172,44)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1679.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1653" width="4.6174%" height="15" fill="rgb(236,23,11)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1663.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1637" width="4.6174%" height="15" fill="rgb(205,117,38)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1647.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1621" width="4.6174%" height="15" fill="rgb(237,72,25)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1631.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1605" width="4.6174%" height="15" fill="rgb(244,70,9)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1615.50">&lt;serd..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1589" width="4.6174%" height="15" fill="rgb(217,125,39)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1599.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1573" width="4.6174%" height="15" fill="rgb(235,36,10)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1583.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1557" width="4.6174%" height="15" fill="rgb(251,123,47)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1567.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1541" width="4.6174%" height="15" fill="rgb(221,13,13)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1551.50">&lt;T as..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1525" width="4.6174%" height="15" fill="rgb(238,131,9)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1535.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1509" width="4.6174%" height="15" fill="rgb(211,50,8)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1519.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1493" width="4.6174%" height="15" fill="rgb(245,182,24)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1503.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1477" width="4.6174%" height="15" fill="rgb(242,14,37)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1487.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (12,374,092 samples, 4.62%)</title><rect x="9.2020%" y="1461" width="4.6174%" height="15" fill="rgb(246,228,12)" fg:x="24660229" fg:w="12374092"/><text x="9.4520%" y="1471.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,671,561 samples, 1.00%)</title><rect x="12.8226%" y="1445" width="0.9969%" height="15" fill="rgb(213,55,15)" fg:x="34362760" fg:w="2671561"/><text x="13.0726%" y="1455.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,671,561 samples, 1.00%)</title><rect x="12.8226%" y="1429" width="0.9969%" height="15" fill="rgb(209,9,3)" fg:x="34362760" fg:w="2671561"/><text x="13.0726%" y="1439.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,671,561 samples, 1.00%)</title><rect x="12.8226%" y="1413" width="0.9969%" height="15" fill="rgb(230,59,30)" fg:x="34362760" fg:w="2671561"/><text x="13.0726%" y="1423.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,671,561 samples, 1.00%)</title><rect x="12.8226%" y="1397" width="0.9969%" height="15" fill="rgb(209,121,21)" fg:x="34362760" fg:w="2671561"/><text x="13.0726%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,671,561 samples, 1.00%)</title><rect x="12.8226%" y="1381" width="0.9969%" height="15" fill="rgb(220,109,13)" fg:x="34362760" fg:w="2671561"/><text x="13.0726%" y="1391.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,671,561 samples, 1.00%)</title><rect x="12.8226%" y="1365" width="0.9969%" height="15" fill="rgb(232,18,1)" fg:x="34362760" fg:w="2671561"/><text x="13.0726%" y="1375.50"></text></g><g><title>alloc::slice::hack::to_vec (2,671,561 samples, 1.00%)</title><rect x="12.8226%" y="1349" width="0.9969%" height="15" fill="rgb(215,41,42)" fg:x="34362760" fg:w="2671561"/><text x="13.0726%" y="1359.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,671,561 samples, 1.00%)</title><rect x="12.8226%" y="1333" width="0.9969%" height="15" fill="rgb(224,123,36)" fg:x="34362760" fg:w="2671561"/><text x="13.0726%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,671,561 samples, 1.00%)</title><rect x="12.8226%" y="1317" width="0.9969%" height="15" fill="rgb(240,125,3)" fg:x="34362760" fg:w="2671561"/><text x="13.0726%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,671,561 samples, 1.00%)</title><rect x="12.8226%" y="1301" width="0.9969%" height="15" fill="rgb(205,98,50)" fg:x="34362760" fg:w="2671561"/><text x="13.0726%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,671,561 samples, 1.00%)</title><rect x="12.8226%" y="1285" width="0.9969%" height="15" fill="rgb(205,185,37)" fg:x="34362760" fg:w="2671561"/><text x="13.0726%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,671,561 samples, 1.00%)</title><rect x="12.8226%" y="1269" width="0.9969%" height="15" fill="rgb(238,207,15)" fg:x="34362760" fg:w="2671561"/><text x="13.0726%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,671,561 samples, 1.00%)</title><rect x="12.8226%" y="1253" width="0.9969%" height="15" fill="rgb(213,199,42)" fg:x="34362760" fg:w="2671561"/><text x="13.0726%" y="1263.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,671,561 samples, 1.00%)</title><rect x="12.8226%" y="1237" width="0.9969%" height="15" fill="rgb(235,201,11)" fg:x="34362760" fg:w="2671561"/><text x="13.0726%" y="1247.50"></text></g><g><title>alloc::alloc::alloc (2,671,561 samples, 1.00%)</title><rect x="12.8226%" y="1221" width="0.9969%" height="15" fill="rgb(207,46,11)" fg:x="34362760" fg:w="2671561"/><text x="13.0726%" y="1231.50"></text></g><g><title>malloc (2,671,561 samples, 1.00%)</title><rect x="12.8226%" y="1205" width="0.9969%" height="15" fill="rgb(241,35,35)" fg:x="34362760" fg:w="2671561"/><text x="13.0726%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,772,466 samples, 1.03%)</title><rect x="13.8195%" y="1861" width="1.0346%" height="15" fill="rgb(243,32,47)" fg:x="37034321" fg:w="2772466"/><text x="14.0695%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,772,466 samples, 1.03%)</title><rect x="13.8195%" y="1845" width="1.0346%" height="15" fill="rgb(247,202,23)" fg:x="37034321" fg:w="2772466"/><text x="14.0695%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,772,466 samples, 1.03%)</title><rect x="13.8195%" y="1829" width="1.0346%" height="15" fill="rgb(219,102,11)" fg:x="37034321" fg:w="2772466"/><text x="14.0695%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,772,466 samples, 1.03%)</title><rect x="13.8195%" y="1813" width="1.0346%" height="15" fill="rgb(243,110,44)" fg:x="37034321" fg:w="2772466"/><text x="14.0695%" y="1823.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,772,466 samples, 1.03%)</title><rect x="13.8195%" y="1797" width="1.0346%" height="15" fill="rgb(222,74,54)" fg:x="37034321" fg:w="2772466"/><text x="14.0695%" y="1807.50"></text></g><g><title>malloc (2,772,466 samples, 1.03%)</title><rect x="13.8195%" y="1781" width="1.0346%" height="15" fill="rgb(216,99,12)" fg:x="37034321" fg:w="2772466"/><text x="14.0695%" y="1791.50"></text></g><g><title>[libc.so.6] (2,772,466 samples, 1.03%)</title><rect x="13.8195%" y="1765" width="1.0346%" height="15" fill="rgb(226,22,26)" fg:x="37034321" fg:w="2772466"/><text x="14.0695%" y="1775.50"></text></g><g><title>[libc.so.6] (2,772,466 samples, 1.03%)</title><rect x="13.8195%" y="1749" width="1.0346%" height="15" fill="rgb(217,163,10)" fg:x="37034321" fg:w="2772466"/><text x="14.0695%" y="1759.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (2,559,835 samples, 0.96%)</title><rect x="14.8540%" y="1797" width="0.9552%" height="15" fill="rgb(213,25,53)" fg:x="39806787" fg:w="2559835"/><text x="15.1040%" y="1807.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (2,559,835 samples, 0.96%)</title><rect x="14.8540%" y="1781" width="0.9552%" height="15" fill="rgb(252,105,26)" fg:x="39806787" fg:w="2559835"/><text x="15.1040%" y="1791.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (2,559,835 samples, 0.96%)</title><rect x="14.8540%" y="1765" width="0.9552%" height="15" fill="rgb(220,39,43)" fg:x="39806787" fg:w="2559835"/><text x="15.1040%" y="1775.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2,559,835 samples, 0.96%)</title><rect x="14.8540%" y="1749" width="0.9552%" height="15" fill="rgb(229,68,48)" fg:x="39806787" fg:w="2559835"/><text x="15.1040%" y="1759.50"></text></g><g><title>alloc::string::String::push_str (2,559,835 samples, 0.96%)</title><rect x="14.8540%" y="1733" width="0.9552%" height="15" fill="rgb(252,8,32)" fg:x="39806787" fg:w="2559835"/><text x="15.1040%" y="1743.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2,559,835 samples, 0.96%)</title><rect x="14.8540%" y="1717" width="0.9552%" height="15" fill="rgb(223,20,43)" fg:x="39806787" fg:w="2559835"/><text x="15.1040%" y="1727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2,559,835 samples, 0.96%)</title><rect x="14.8540%" y="1701" width="0.9552%" height="15" fill="rgb(229,81,49)" fg:x="39806787" fg:w="2559835"/><text x="15.1040%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2,559,835 samples, 0.96%)</title><rect x="14.8540%" y="1685" width="0.9552%" height="15" fill="rgb(236,28,36)" fg:x="39806787" fg:w="2559835"/><text x="15.1040%" y="1695.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (2,559,835 samples, 0.96%)</title><rect x="14.8540%" y="1669" width="0.9552%" height="15" fill="rgb(249,185,26)" fg:x="39806787" fg:w="2559835"/><text x="15.1040%" y="1679.50"></text></g><g><title>benchmark::json_to_html_node (5,233,879 samples, 1.95%)</title><rect x="14.8540%" y="1845" width="1.9530%" height="15" fill="rgb(249,174,33)" fg:x="39806787" fg:w="5233879"/><text x="15.1040%" y="1855.50">b..</text></g><g><title>benchmark::json_to_html_node (5,233,879 samples, 1.95%)</title><rect x="14.8540%" y="1829" width="1.9530%" height="15" fill="rgb(233,201,37)" fg:x="39806787" fg:w="5233879"/><text x="15.1040%" y="1839.50">b..</text></g><g><title>benchmark::json_to_html_node (5,233,879 samples, 1.95%)</title><rect x="14.8540%" y="1813" width="1.9530%" height="15" fill="rgb(221,78,26)" fg:x="39806787" fg:w="5233879"/><text x="15.1040%" y="1823.50">b..</text></g><g><title>benchmark::json_to_html_node (2,674,044 samples, 1.00%)</title><rect x="15.8092%" y="1797" width="0.9978%" height="15" fill="rgb(250,127,30)" fg:x="42366622" fg:w="2674044"/><text x="16.0592%" y="1807.50"></text></g><g><title>serde_json::value::Value::get (2,674,044 samples, 1.00%)</title><rect x="15.8092%" y="1781" width="0.9978%" height="15" fill="rgb(230,49,44)" fg:x="42366622" fg:w="2674044"/><text x="16.0592%" y="1791.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (2,674,044 samples, 1.00%)</title><rect x="15.8092%" y="1765" width="0.9978%" height="15" fill="rgb(229,67,23)" fg:x="42366622" fg:w="2674044"/><text x="16.0592%" y="1775.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (2,674,044 samples, 1.00%)</title><rect x="15.8092%" y="1749" width="0.9978%" height="15" fill="rgb(249,83,47)" fg:x="42366622" fg:w="2674044"/><text x="16.0592%" y="1759.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (2,674,044 samples, 1.00%)</title><rect x="15.8092%" y="1733" width="0.9978%" height="15" fill="rgb(215,43,3)" fg:x="42366622" fg:w="2674044"/><text x="16.0592%" y="1743.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (2,674,044 samples, 1.00%)</title><rect x="15.8092%" y="1717" width="0.9978%" height="15" fill="rgb(238,154,13)" fg:x="42366622" fg:w="2674044"/><text x="16.0592%" y="1727.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2,674,044 samples, 1.00%)</title><rect x="15.8092%" y="1701" width="0.9978%" height="15" fill="rgb(219,56,2)" fg:x="42366622" fg:w="2674044"/><text x="16.0592%" y="1711.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2,674,044 samples, 1.00%)</title><rect x="15.8092%" y="1685" width="0.9978%" height="15" fill="rgb(233,0,4)" fg:x="42366622" fg:w="2674044"/><text x="16.0592%" y="1695.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2,674,044 samples, 1.00%)</title><rect x="15.8092%" y="1669" width="0.9978%" height="15" fill="rgb(235,30,7)" fg:x="42366622" fg:w="2674044"/><text x="16.0592%" y="1679.50"></text></g><g><title>benchmark::json_to_html_node (8,281,972 samples, 3.09%)</title><rect x="14.8540%" y="1861" width="3.0904%" height="15" fill="rgb(250,79,13)" fg:x="39806787" fg:w="8281972"/><text x="15.1040%" y="1871.50">ben..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (3,048,093 samples, 1.14%)</title><rect x="16.8071%" y="1845" width="1.1374%" height="15" fill="rgb(211,146,34)" fg:x="45040666" fg:w="3048093"/><text x="17.0571%" y="1855.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (3,048,093 samples, 1.14%)</title><rect x="16.8071%" y="1829" width="1.1374%" height="15" fill="rgb(228,22,38)" fg:x="45040666" fg:w="3048093"/><text x="17.0571%" y="1839.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (3,048,093 samples, 1.14%)</title><rect x="16.8071%" y="1813" width="1.1374%" height="15" fill="rgb(235,168,5)" fg:x="45040666" fg:w="3048093"/><text x="17.0571%" y="1823.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (3,048,093 samples, 1.14%)</title><rect x="16.8071%" y="1797" width="1.1374%" height="15" fill="rgb(221,155,16)" fg:x="45040666" fg:w="3048093"/><text x="17.0571%" y="1807.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (3,048,093 samples, 1.14%)</title><rect x="16.8071%" y="1781" width="1.1374%" height="15" fill="rgb(215,215,53)" fg:x="45040666" fg:w="3048093"/><text x="17.0571%" y="1791.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (3,048,093 samples, 1.14%)</title><rect x="16.8071%" y="1765" width="1.1374%" height="15" fill="rgb(223,4,10)" fg:x="45040666" fg:w="3048093"/><text x="17.0571%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,751,310 samples, 1.03%)</title><rect x="17.9445%" y="1861" width="1.0267%" height="15" fill="rgb(234,103,6)" fg:x="48088759" fg:w="2751310"/><text x="18.1945%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,751,310 samples, 1.03%)</title><rect x="17.9445%" y="1845" width="1.0267%" height="15" fill="rgb(227,97,0)" fg:x="48088759" fg:w="2751310"/><text x="18.1945%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,751,310 samples, 1.03%)</title><rect x="17.9445%" y="1829" width="1.0267%" height="15" fill="rgb(234,150,53)" fg:x="48088759" fg:w="2751310"/><text x="18.1945%" y="1839.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,751,310 samples, 1.03%)</title><rect x="17.9445%" y="1813" width="1.0267%" height="15" fill="rgb(228,201,54)" fg:x="48088759" fg:w="2751310"/><text x="18.1945%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,751,310 samples, 1.03%)</title><rect x="17.9445%" y="1797" width="1.0267%" height="15" fill="rgb(222,22,37)" fg:x="48088759" fg:w="2751310"/><text x="18.1945%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,751,310 samples, 1.03%)</title><rect x="17.9445%" y="1781" width="1.0267%" height="15" fill="rgb(237,53,32)" fg:x="48088759" fg:w="2751310"/><text x="18.1945%" y="1791.50"></text></g><g><title>alloc::alloc::dealloc (2,751,310 samples, 1.03%)</title><rect x="17.9445%" y="1765" width="1.0267%" height="15" fill="rgb(233,25,53)" fg:x="48088759" fg:w="2751310"/><text x="18.1945%" y="1775.50"></text></g><g><title>cfree (2,751,310 samples, 1.03%)</title><rect x="17.9445%" y="1749" width="1.0267%" height="15" fill="rgb(210,40,34)" fg:x="48088759" fg:w="2751310"/><text x="18.1945%" y="1759.50"></text></g><g><title>benchmark::apply_frame_modifications (16,536,580 samples, 6.17%)</title><rect x="13.8195%" y="1893" width="6.1707%" height="15" fill="rgb(241,220,44)" fg:x="37034321" fg:w="16536580"/><text x="14.0695%" y="1903.50">benchmar..</text></g><g><title>benchmark::json_to_html_node (16,536,580 samples, 6.17%)</title><rect x="13.8195%" y="1877" width="6.1707%" height="15" fill="rgb(235,28,35)" fg:x="37034321" fg:w="16536580"/><text x="14.0695%" y="1887.50">benchmar..</text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (2,730,832 samples, 1.02%)</title><rect x="18.9711%" y="1861" width="1.0190%" height="15" fill="rgb(210,56,17)" fg:x="50840069" fg:w="2730832"/><text x="19.2211%" y="1871.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (2,730,832 samples, 1.02%)</title><rect x="18.9711%" y="1845" width="1.0190%" height="15" fill="rgb(224,130,29)" fg:x="50840069" fg:w="2730832"/><text x="19.2211%" y="1855.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (2,730,832 samples, 1.02%)</title><rect x="18.9711%" y="1829" width="1.0190%" height="15" fill="rgb(235,212,8)" fg:x="50840069" fg:w="2730832"/><text x="19.2211%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,149,537 samples, 1.18%)</title><rect x="19.9902%" y="1541" width="1.1753%" height="15" fill="rgb(223,33,50)" fg:x="53570901" fg:w="3149537"/><text x="20.2402%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,149,537 samples, 1.18%)</title><rect x="19.9902%" y="1525" width="1.1753%" height="15" fill="rgb(219,149,13)" fg:x="53570901" fg:w="3149537"/><text x="20.2402%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,149,537 samples, 1.18%)</title><rect x="19.9902%" y="1509" width="1.1753%" height="15" fill="rgb(250,156,29)" fg:x="53570901" fg:w="3149537"/><text x="20.2402%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,149,537 samples, 1.18%)</title><rect x="19.9902%" y="1493" width="1.1753%" height="15" fill="rgb(216,193,19)" fg:x="53570901" fg:w="3149537"/><text x="20.2402%" y="1503.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,149,537 samples, 1.18%)</title><rect x="19.9902%" y="1477" width="1.1753%" height="15" fill="rgb(216,135,14)" fg:x="53570901" fg:w="3149537"/><text x="20.2402%" y="1487.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,149,537 samples, 1.18%)</title><rect x="19.9902%" y="1461" width="1.1753%" height="15" fill="rgb(241,47,5)" fg:x="53570901" fg:w="3149537"/><text x="20.2402%" y="1471.50"></text></g><g><title>alloc::alloc::alloc (3,149,537 samples, 1.18%)</title><rect x="19.9902%" y="1445" width="1.1753%" height="15" fill="rgb(233,42,35)" fg:x="53570901" fg:w="3149537"/><text x="20.2402%" y="1455.50"></text></g><g><title>malloc (3,149,537 samples, 1.18%)</title><rect x="19.9902%" y="1429" width="1.1753%" height="15" fill="rgb(231,13,6)" fg:x="53570901" fg:w="3149537"/><text x="20.2402%" y="1439.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,917,465 samples, 2.21%)</title><rect x="19.9902%" y="1621" width="2.2081%" height="15" fill="rgb(207,181,40)" fg:x="53570901" fg:w="5917465"/><text x="20.2402%" y="1631.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,917,465 samples, 2.21%)</title><rect x="19.9902%" y="1605" width="2.2081%" height="15" fill="rgb(254,173,49)" fg:x="53570901" fg:w="5917465"/><text x="20.2402%" y="1615.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,917,465 samples, 2.21%)</title><rect x="19.9902%" y="1589" width="2.2081%" height="15" fill="rgb(221,1,38)" fg:x="53570901" fg:w="5917465"/><text x="20.2402%" y="1599.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,917,465 samples, 2.21%)</title><rect x="19.9902%" y="1573" width="2.2081%" height="15" fill="rgb(206,124,46)" fg:x="53570901" fg:w="5917465"/><text x="20.2402%" y="1583.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,917,465 samples, 2.21%)</title><rect x="19.9902%" y="1557" width="2.2081%" height="15" fill="rgb(249,21,11)" fg:x="53570901" fg:w="5917465"/><text x="20.2402%" y="1567.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,767,928 samples, 1.03%)</title><rect x="21.1654%" y="1541" width="1.0329%" height="15" fill="rgb(222,201,40)" fg:x="56720438" fg:w="2767928"/><text x="21.4154%" y="1551.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,767,928 samples, 1.03%)</title><rect x="21.1654%" y="1525" width="1.0329%" height="15" fill="rgb(235,61,29)" fg:x="56720438" fg:w="2767928"/><text x="21.4154%" y="1535.50"></text></g><g><title>[libc.so.6] (2,767,928 samples, 1.03%)</title><rect x="21.1654%" y="1509" width="1.0329%" height="15" fill="rgb(219,207,3)" fg:x="56720438" fg:w="2767928"/><text x="21.4154%" y="1519.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,658,462 samples, 0.99%)</title><rect x="22.1983%" y="1541" width="0.9920%" height="15" fill="rgb(222,56,46)" fg:x="59488366" fg:w="2658462"/><text x="22.4483%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,658,462 samples, 0.99%)</title><rect x="22.1983%" y="1525" width="0.9920%" height="15" fill="rgb(239,76,54)" fg:x="59488366" fg:w="2658462"/><text x="22.4483%" y="1535.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,658,462 samples, 0.99%)</title><rect x="22.1983%" y="1509" width="0.9920%" height="15" fill="rgb(231,124,27)" fg:x="59488366" fg:w="2658462"/><text x="22.4483%" y="1519.50"></text></g><g><title>alloc::slice::hack::to_vec (2,658,462 samples, 0.99%)</title><rect x="22.1983%" y="1493" width="0.9920%" height="15" fill="rgb(249,195,6)" fg:x="59488366" fg:w="2658462"/><text x="22.4483%" y="1503.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,658,462 samples, 0.99%)</title><rect x="22.1983%" y="1477" width="0.9920%" height="15" fill="rgb(237,174,47)" fg:x="59488366" fg:w="2658462"/><text x="22.4483%" y="1487.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,658,462 samples, 0.99%)</title><rect x="22.1983%" y="1461" width="0.9920%" height="15" fill="rgb(206,201,31)" fg:x="59488366" fg:w="2658462"/><text x="22.4483%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,658,462 samples, 0.99%)</title><rect x="22.1983%" y="1445" width="0.9920%" height="15" fill="rgb(231,57,52)" fg:x="59488366" fg:w="2658462"/><text x="22.4483%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,658,462 samples, 0.99%)</title><rect x="22.1983%" y="1429" width="0.9920%" height="15" fill="rgb(248,177,22)" fg:x="59488366" fg:w="2658462"/><text x="22.4483%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,658,462 samples, 0.99%)</title><rect x="22.1983%" y="1413" width="0.9920%" height="15" fill="rgb(215,211,37)" fg:x="59488366" fg:w="2658462"/><text x="22.4483%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,658,462 samples, 0.99%)</title><rect x="22.1983%" y="1397" width="0.9920%" height="15" fill="rgb(241,128,51)" fg:x="59488366" fg:w="2658462"/><text x="22.4483%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,658,462 samples, 0.99%)</title><rect x="22.1983%" y="1381" width="0.9920%" height="15" fill="rgb(227,165,31)" fg:x="59488366" fg:w="2658462"/><text x="22.4483%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (2,658,462 samples, 0.99%)</title><rect x="22.1983%" y="1365" width="0.9920%" height="15" fill="rgb(228,167,24)" fg:x="59488366" fg:w="2658462"/><text x="22.4483%" y="1375.50"></text></g><g><title>malloc (2,658,462 samples, 0.99%)</title><rect x="22.1983%" y="1349" width="0.9920%" height="15" fill="rgb(228,143,12)" fg:x="59488366" fg:w="2658462"/><text x="22.4483%" y="1359.50"></text></g><g><title>[libc.so.6] (2,658,462 samples, 0.99%)</title><rect x="22.1983%" y="1333" width="0.9920%" height="15" fill="rgb(249,149,8)" fg:x="59488366" fg:w="2658462"/><text x="22.4483%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,889,674 samples, 2.20%)</title><rect x="23.1903%" y="1301" width="2.1978%" height="15" fill="rgb(243,35,44)" fg:x="62146828" fg:w="5889674"/><text x="23.4403%" y="1311.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,889,674 samples, 2.20%)</title><rect x="23.1903%" y="1285" width="2.1978%" height="15" fill="rgb(246,89,9)" fg:x="62146828" fg:w="5889674"/><text x="23.4403%" y="1295.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,889,674 samples, 2.20%)</title><rect x="23.1903%" y="1269" width="2.1978%" height="15" fill="rgb(233,213,13)" fg:x="62146828" fg:w="5889674"/><text x="23.4403%" y="1279.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,889,674 samples, 2.20%)</title><rect x="23.1903%" y="1253" width="2.1978%" height="15" fill="rgb(233,141,41)" fg:x="62146828" fg:w="5889674"/><text x="23.4403%" y="1263.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,889,674 samples, 2.20%)</title><rect x="23.1903%" y="1237" width="2.1978%" height="15" fill="rgb(239,167,4)" fg:x="62146828" fg:w="5889674"/><text x="23.4403%" y="1247.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (5,889,674 samples, 2.20%)</title><rect x="23.1903%" y="1221" width="2.1978%" height="15" fill="rgb(209,217,16)" fg:x="62146828" fg:w="5889674"/><text x="23.4403%" y="1231.50">a..</text></g><g><title>alloc::alloc::alloc (5,889,674 samples, 2.20%)</title><rect x="23.1903%" y="1205" width="2.1978%" height="15" fill="rgb(219,88,35)" fg:x="62146828" fg:w="5889674"/><text x="23.4403%" y="1215.50">a..</text></g><g><title>malloc (5,889,674 samples, 2.20%)</title><rect x="23.1903%" y="1189" width="2.1978%" height="15" fill="rgb(220,193,23)" fg:x="62146828" fg:w="5889674"/><text x="23.4403%" y="1199.50">m..</text></g><g><title>[libc.so.6] (5,889,674 samples, 2.20%)</title><rect x="23.1903%" y="1173" width="2.1978%" height="15" fill="rgb(230,90,52)" fg:x="62146828" fg:w="5889674"/><text x="23.4403%" y="1183.50">[..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (8,502,835 samples, 3.17%)</title><rect x="23.1903%" y="1381" width="3.1729%" height="15" fill="rgb(252,106,19)" fg:x="62146828" fg:w="8502835"/><text x="23.4403%" y="1391.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,502,835 samples, 3.17%)</title><rect x="23.1903%" y="1365" width="3.1729%" height="15" fill="rgb(206,74,20)" fg:x="62146828" fg:w="8502835"/><text x="23.4403%" y="1375.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,502,835 samples, 3.17%)</title><rect x="23.1903%" y="1349" width="3.1729%" height="15" fill="rgb(230,138,44)" fg:x="62146828" fg:w="8502835"/><text x="23.4403%" y="1359.50">all..</text></g><g><title>alloc::slice::hack::to_vec (8,502,835 samples, 3.17%)</title><rect x="23.1903%" y="1333" width="3.1729%" height="15" fill="rgb(235,182,43)" fg:x="62146828" fg:w="8502835"/><text x="23.4403%" y="1343.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,502,835 samples, 3.17%)</title><rect x="23.1903%" y="1317" width="3.1729%" height="15" fill="rgb(242,16,51)" fg:x="62146828" fg:w="8502835"/><text x="23.4403%" y="1327.50">&lt;T ..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,613,161 samples, 0.98%)</title><rect x="25.3880%" y="1301" width="0.9751%" height="15" fill="rgb(248,9,4)" fg:x="68036502" fg:w="2613161"/><text x="25.6380%" y="1311.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,613,161 samples, 0.98%)</title><rect x="25.3880%" y="1285" width="0.9751%" height="15" fill="rgb(210,31,22)" fg:x="68036502" fg:w="2613161"/><text x="25.6380%" y="1295.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,636,849 samples, 0.98%)</title><rect x="27.2359%" y="741" width="0.9839%" height="15" fill="rgb(239,54,39)" fg:x="72988539" fg:w="2636849"/><text x="27.4859%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,636,849 samples, 0.98%)</title><rect x="27.2359%" y="725" width="0.9839%" height="15" fill="rgb(230,99,41)" fg:x="72988539" fg:w="2636849"/><text x="27.4859%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,636,849 samples, 0.98%)</title><rect x="27.2359%" y="709" width="0.9839%" height="15" fill="rgb(253,106,12)" fg:x="72988539" fg:w="2636849"/><text x="27.4859%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (2,636,849 samples, 0.98%)</title><rect x="27.2359%" y="693" width="0.9839%" height="15" fill="rgb(213,46,41)" fg:x="72988539" fg:w="2636849"/><text x="27.4859%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,636,849 samples, 0.98%)</title><rect x="27.2359%" y="677" width="0.9839%" height="15" fill="rgb(215,133,35)" fg:x="72988539" fg:w="2636849"/><text x="27.4859%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,636,849 samples, 0.98%)</title><rect x="27.2359%" y="661" width="0.9839%" height="15" fill="rgb(213,28,5)" fg:x="72988539" fg:w="2636849"/><text x="27.4859%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,636,849 samples, 0.98%)</title><rect x="27.2359%" y="645" width="0.9839%" height="15" fill="rgb(215,77,49)" fg:x="72988539" fg:w="2636849"/><text x="27.4859%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,636,849 samples, 0.98%)</title><rect x="27.2359%" y="629" width="0.9839%" height="15" fill="rgb(248,100,22)" fg:x="72988539" fg:w="2636849"/><text x="27.4859%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,636,849 samples, 0.98%)</title><rect x="27.2359%" y="613" width="0.9839%" height="15" fill="rgb(208,67,9)" fg:x="72988539" fg:w="2636849"/><text x="27.4859%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,636,849 samples, 0.98%)</title><rect x="27.2359%" y="597" width="0.9839%" height="15" fill="rgb(219,133,21)" fg:x="72988539" fg:w="2636849"/><text x="27.4859%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,636,849 samples, 0.98%)</title><rect x="27.2359%" y="581" width="0.9839%" height="15" fill="rgb(246,46,29)" fg:x="72988539" fg:w="2636849"/><text x="27.4859%" y="591.50"></text></g><g><title>alloc::alloc::alloc (2,636,849 samples, 0.98%)</title><rect x="27.2359%" y="565" width="0.9839%" height="15" fill="rgb(246,185,52)" fg:x="72988539" fg:w="2636849"/><text x="27.4859%" y="575.50"></text></g><g><title>malloc (2,636,849 samples, 0.98%)</title><rect x="27.2359%" y="549" width="0.9839%" height="15" fill="rgb(252,136,11)" fg:x="72988539" fg:w="2636849"/><text x="27.4859%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,015,903 samples, 1.13%)</title><rect x="29.0149%" y="581" width="1.1254%" height="15" fill="rgb(219,138,53)" fg:x="77756101" fg:w="3015903"/><text x="29.2649%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,015,903 samples, 1.13%)</title><rect x="29.0149%" y="565" width="1.1254%" height="15" fill="rgb(211,51,23)" fg:x="77756101" fg:w="3015903"/><text x="29.2649%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,015,903 samples, 1.13%)</title><rect x="29.0149%" y="549" width="1.1254%" height="15" fill="rgb(247,221,28)" fg:x="77756101" fg:w="3015903"/><text x="29.2649%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (3,015,903 samples, 1.13%)</title><rect x="29.0149%" y="533" width="1.1254%" height="15" fill="rgb(251,222,45)" fg:x="77756101" fg:w="3015903"/><text x="29.2649%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,015,903 samples, 1.13%)</title><rect x="29.0149%" y="517" width="1.1254%" height="15" fill="rgb(217,162,53)" fg:x="77756101" fg:w="3015903"/><text x="29.2649%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,015,903 samples, 1.13%)</title><rect x="29.0149%" y="501" width="1.1254%" height="15" fill="rgb(229,93,14)" fg:x="77756101" fg:w="3015903"/><text x="29.2649%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,015,903 samples, 1.13%)</title><rect x="29.0149%" y="485" width="1.1254%" height="15" fill="rgb(209,67,49)" fg:x="77756101" fg:w="3015903"/><text x="29.2649%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,015,903 samples, 1.13%)</title><rect x="29.0149%" y="469" width="1.1254%" height="15" fill="rgb(213,87,29)" fg:x="77756101" fg:w="3015903"/><text x="29.2649%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,015,903 samples, 1.13%)</title><rect x="29.0149%" y="453" width="1.1254%" height="15" fill="rgb(205,151,52)" fg:x="77756101" fg:w="3015903"/><text x="29.2649%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,015,903 samples, 1.13%)</title><rect x="29.0149%" y="437" width="1.1254%" height="15" fill="rgb(253,215,39)" fg:x="77756101" fg:w="3015903"/><text x="29.2649%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,015,903 samples, 1.13%)</title><rect x="29.0149%" y="421" width="1.1254%" height="15" fill="rgb(221,220,41)" fg:x="77756101" fg:w="3015903"/><text x="29.2649%" y="431.50"></text></g><g><title>alloc::alloc::alloc (3,015,903 samples, 1.13%)</title><rect x="29.0149%" y="405" width="1.1254%" height="15" fill="rgb(218,133,21)" fg:x="77756101" fg:w="3015903"/><text x="29.2649%" y="415.50"></text></g><g><title>__rdl_alloc (3,015,903 samples, 1.13%)</title><rect x="29.0149%" y="389" width="1.1254%" height="15" fill="rgb(221,193,43)" fg:x="77756101" fg:w="3015903"/><text x="29.2649%" y="399.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,015,903 samples, 1.13%)</title><rect x="29.0149%" y="373" width="1.1254%" height="15" fill="rgb(240,128,52)" fg:x="77756101" fg:w="3015903"/><text x="29.2649%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (811,196 samples, 0.30%)</title><rect x="30.1403%" y="501" width="0.3027%" height="15" fill="rgb(253,114,12)" fg:x="80772004" fg:w="811196"/><text x="30.3903%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (811,196 samples, 0.30%)</title><rect x="30.1403%" y="485" width="0.3027%" height="15" fill="rgb(215,223,47)" fg:x="80772004" fg:w="811196"/><text x="30.3903%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (811,196 samples, 0.30%)</title><rect x="30.1403%" y="469" width="0.3027%" height="15" fill="rgb(248,225,23)" fg:x="80772004" fg:w="811196"/><text x="30.3903%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (811,196 samples, 0.30%)</title><rect x="30.1403%" y="453" width="0.3027%" height="15" fill="rgb(250,108,0)" fg:x="80772004" fg:w="811196"/><text x="30.3903%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (811,196 samples, 0.30%)</title><rect x="30.1403%" y="437" width="0.3027%" height="15" fill="rgb(228,208,7)" fg:x="80772004" fg:w="811196"/><text x="30.3903%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (811,196 samples, 0.30%)</title><rect x="30.1403%" y="421" width="0.3027%" height="15" fill="rgb(244,45,10)" fg:x="80772004" fg:w="811196"/><text x="30.3903%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (811,196 samples, 0.30%)</title><rect x="30.1403%" y="405" width="0.3027%" height="15" fill="rgb(207,125,25)" fg:x="80772004" fg:w="811196"/><text x="30.3903%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (811,196 samples, 0.30%)</title><rect x="30.1403%" y="389" width="0.3027%" height="15" fill="rgb(210,195,18)" fg:x="80772004" fg:w="811196"/><text x="30.3903%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11,429,459 samples, 4.26%)</title><rect x="27.2359%" y="821" width="4.2649%" height="15" fill="rgb(249,80,12)" fg:x="72988539" fg:w="11429459"/><text x="27.4859%" y="831.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11,429,459 samples, 4.26%)</title><rect x="27.2359%" y="805" width="4.2649%" height="15" fill="rgb(221,65,9)" fg:x="72988539" fg:w="11429459"/><text x="27.4859%" y="815.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (11,429,459 samples, 4.26%)</title><rect x="27.2359%" y="789" width="4.2649%" height="15" fill="rgb(235,49,36)" fg:x="72988539" fg:w="11429459"/><text x="27.4859%" y="799.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11,429,459 samples, 4.26%)</title><rect x="27.2359%" y="773" width="4.2649%" height="15" fill="rgb(225,32,20)" fg:x="72988539" fg:w="11429459"/><text x="27.4859%" y="783.50">&lt;T as..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (11,429,459 samples, 4.26%)</title><rect x="27.2359%" y="757" width="4.2649%" height="15" fill="rgb(215,141,46)" fg:x="72988539" fg:w="11429459"/><text x="27.4859%" y="767.50">&lt;css_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,792,610 samples, 3.28%)</title><rect x="28.2199%" y="741" width="3.2810%" height="15" fill="rgb(250,160,47)" fg:x="75625388" fg:w="8792610"/><text x="28.4699%" y="751.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,792,610 samples, 3.28%)</title><rect x="28.2199%" y="725" width="3.2810%" height="15" fill="rgb(216,222,40)" fg:x="75625388" fg:w="8792610"/><text x="28.4699%" y="735.50">all..</text></g><g><title>alloc::slice::hack::to_vec (8,792,610 samples, 3.28%)</title><rect x="28.2199%" y="709" width="3.2810%" height="15" fill="rgb(234,217,39)" fg:x="75625388" fg:w="8792610"/><text x="28.4699%" y="719.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,792,610 samples, 3.28%)</title><rect x="28.2199%" y="693" width="3.2810%" height="15" fill="rgb(207,178,40)" fg:x="75625388" fg:w="8792610"/><text x="28.4699%" y="703.50">&lt;T ..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (8,792,610 samples, 3.28%)</title><rect x="28.2199%" y="677" width="3.2810%" height="15" fill="rgb(221,136,13)" fg:x="75625388" fg:w="8792610"/><text x="28.4699%" y="687.50">&lt;cs..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,661,897 samples, 2.49%)</title><rect x="29.0149%" y="661" width="2.4859%" height="15" fill="rgb(249,199,10)" fg:x="77756101" fg:w="6661897"/><text x="29.2649%" y="671.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,661,897 samples, 2.49%)</title><rect x="29.0149%" y="645" width="2.4859%" height="15" fill="rgb(249,222,13)" fg:x="77756101" fg:w="6661897"/><text x="29.2649%" y="655.50">al..</text></g><g><title>alloc::slice::hack::to_vec (6,661,897 samples, 2.49%)</title><rect x="29.0149%" y="629" width="2.4859%" height="15" fill="rgb(244,185,38)" fg:x="77756101" fg:w="6661897"/><text x="29.2649%" y="639.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,661,897 samples, 2.49%)</title><rect x="29.0149%" y="613" width="2.4859%" height="15" fill="rgb(236,202,9)" fg:x="77756101" fg:w="6661897"/><text x="29.2649%" y="623.50">&lt;T..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (6,661,897 samples, 2.49%)</title><rect x="29.0149%" y="597" width="2.4859%" height="15" fill="rgb(250,229,37)" fg:x="77756101" fg:w="6661897"/><text x="29.2649%" y="607.50">&lt;c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,645,994 samples, 1.36%)</title><rect x="30.1403%" y="581" width="1.3605%" height="15" fill="rgb(206,174,23)" fg:x="80772004" fg:w="3645994"/><text x="30.3903%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,645,994 samples, 1.36%)</title><rect x="30.1403%" y="565" width="1.3605%" height="15" fill="rgb(211,33,43)" fg:x="80772004" fg:w="3645994"/><text x="30.3903%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (3,645,994 samples, 1.36%)</title><rect x="30.1403%" y="549" width="1.3605%" height="15" fill="rgb(245,58,50)" fg:x="80772004" fg:w="3645994"/><text x="30.3903%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,645,994 samples, 1.36%)</title><rect x="30.1403%" y="533" width="1.3605%" height="15" fill="rgb(244,68,36)" fg:x="80772004" fg:w="3645994"/><text x="30.3903%" y="543.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (3,645,994 samples, 1.36%)</title><rect x="30.1403%" y="517" width="1.3605%" height="15" fill="rgb(232,229,15)" fg:x="80772004" fg:w="3645994"/><text x="30.3903%" y="527.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,834,798 samples, 1.06%)</title><rect x="30.4430%" y="501" width="1.0578%" height="15" fill="rgb(254,30,23)" fg:x="81583200" fg:w="2834798"/><text x="30.6930%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,834,798 samples, 1.06%)</title><rect x="30.4430%" y="485" width="1.0578%" height="15" fill="rgb(235,160,14)" fg:x="81583200" fg:w="2834798"/><text x="30.6930%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,834,798 samples, 1.06%)</title><rect x="30.4430%" y="469" width="1.0578%" height="15" fill="rgb(212,155,44)" fg:x="81583200" fg:w="2834798"/><text x="30.6930%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2,834,798 samples, 1.06%)</title><rect x="30.4430%" y="453" width="1.0578%" height="15" fill="rgb(226,2,50)" fg:x="81583200" fg:w="2834798"/><text x="30.6930%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,834,798 samples, 1.06%)</title><rect x="30.4430%" y="437" width="1.0578%" height="15" fill="rgb(234,177,6)" fg:x="81583200" fg:w="2834798"/><text x="30.6930%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,834,798 samples, 1.06%)</title><rect x="30.4430%" y="421" width="1.0578%" height="15" fill="rgb(217,24,9)" fg:x="81583200" fg:w="2834798"/><text x="30.6930%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,834,798 samples, 1.06%)</title><rect x="30.4430%" y="405" width="1.0578%" height="15" fill="rgb(220,13,46)" fg:x="81583200" fg:w="2834798"/><text x="30.6930%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,834,798 samples, 1.06%)</title><rect x="30.4430%" y="389" width="1.0578%" height="15" fill="rgb(239,221,27)" fg:x="81583200" fg:w="2834798"/><text x="30.6930%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,834,798 samples, 1.06%)</title><rect x="30.4430%" y="373" width="1.0578%" height="15" fill="rgb(222,198,25)" fg:x="81583200" fg:w="2834798"/><text x="30.6930%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,834,798 samples, 1.06%)</title><rect x="30.4430%" y="357" width="1.0578%" height="15" fill="rgb(211,99,13)" fg:x="81583200" fg:w="2834798"/><text x="30.6930%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,834,798 samples, 1.06%)</title><rect x="30.4430%" y="341" width="1.0578%" height="15" fill="rgb(232,111,31)" fg:x="81583200" fg:w="2834798"/><text x="30.6930%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2,834,798 samples, 1.06%)</title><rect x="30.4430%" y="325" width="1.0578%" height="15" fill="rgb(245,82,37)" fg:x="81583200" fg:w="2834798"/><text x="30.6930%" y="335.50"></text></g><g><title>malloc (2,834,798 samples, 1.06%)</title><rect x="30.4430%" y="309" width="1.0578%" height="15" fill="rgb(227,149,46)" fg:x="81583200" fg:w="2834798"/><text x="30.6930%" y="319.50"></text></g><g><title>[libc.so.6] (2,834,798 samples, 1.06%)</title><rect x="30.4430%" y="293" width="1.0578%" height="15" fill="rgb(218,36,50)" fg:x="81583200" fg:w="2834798"/><text x="30.6930%" y="303.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (17,635,356 samples, 6.58%)</title><rect x="27.2359%" y="837" width="6.5807%" height="15" fill="rgb(226,80,48)" fg:x="72988539" fg:w="17635356"/><text x="27.4859%" y="847.50">&lt;css_bitv..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (6,205,897 samples, 2.32%)</title><rect x="31.5008%" y="821" width="2.3158%" height="15" fill="rgb(238,224,15)" fg:x="84417998" fg:w="6205897"/><text x="31.7508%" y="831.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,205,897 samples, 2.32%)</title><rect x="31.5008%" y="805" width="2.3158%" height="15" fill="rgb(241,136,10)" fg:x="84417998" fg:w="6205897"/><text x="31.7508%" y="815.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,205,897 samples, 2.32%)</title><rect x="31.5008%" y="789" width="2.3158%" height="15" fill="rgb(208,32,45)" fg:x="84417998" fg:w="6205897"/><text x="31.7508%" y="799.50">a..</text></g><g><title>alloc::slice::hack::to_vec (6,205,897 samples, 2.32%)</title><rect x="31.5008%" y="773" width="2.3158%" height="15" fill="rgb(207,135,9)" fg:x="84417998" fg:w="6205897"/><text x="31.7508%" y="783.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,205,897 samples, 2.32%)</title><rect x="31.5008%" y="757" width="2.3158%" height="15" fill="rgb(206,86,44)" fg:x="84417998" fg:w="6205897"/><text x="31.7508%" y="767.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,205,897 samples, 2.32%)</title><rect x="31.5008%" y="741" width="2.3158%" height="15" fill="rgb(245,177,15)" fg:x="84417998" fg:w="6205897"/><text x="31.7508%" y="751.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,205,897 samples, 2.32%)</title><rect x="31.5008%" y="725" width="2.3158%" height="15" fill="rgb(206,64,50)" fg:x="84417998" fg:w="6205897"/><text x="31.7508%" y="735.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,205,897 samples, 2.32%)</title><rect x="31.5008%" y="709" width="2.3158%" height="15" fill="rgb(234,36,40)" fg:x="84417998" fg:w="6205897"/><text x="31.7508%" y="719.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,205,897 samples, 2.32%)</title><rect x="31.5008%" y="693" width="2.3158%" height="15" fill="rgb(213,64,8)" fg:x="84417998" fg:w="6205897"/><text x="31.7508%" y="703.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,205,897 samples, 2.32%)</title><rect x="31.5008%" y="677" width="2.3158%" height="15" fill="rgb(210,75,36)" fg:x="84417998" fg:w="6205897"/><text x="31.7508%" y="687.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (6,205,897 samples, 2.32%)</title><rect x="31.5008%" y="661" width="2.3158%" height="15" fill="rgb(229,88,21)" fg:x="84417998" fg:w="6205897"/><text x="31.7508%" y="671.50">a..</text></g><g><title>alloc::alloc::alloc (6,205,897 samples, 2.32%)</title><rect x="31.5008%" y="645" width="2.3158%" height="15" fill="rgb(252,204,47)" fg:x="84417998" fg:w="6205897"/><text x="31.7508%" y="655.50">a..</text></g><g><title>malloc (6,205,897 samples, 2.32%)</title><rect x="31.5008%" y="629" width="2.3158%" height="15" fill="rgb(208,77,27)" fg:x="84417998" fg:w="6205897"/><text x="31.7508%" y="639.50">m..</text></g><g><title>[libc.so.6] (3,096,257 samples, 1.16%)</title><rect x="32.6612%" y="613" width="1.1554%" height="15" fill="rgb(221,76,26)" fg:x="87527638" fg:w="3096257"/><text x="32.9112%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23,576,784 samples, 8.80%)</title><rect x="27.2359%" y="981" width="8.7978%" height="15" fill="rgb(225,139,18)" fg:x="72988539" fg:w="23576784"/><text x="27.4859%" y="991.50">&lt;alloc::vec:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23,576,784 samples, 8.80%)</title><rect x="27.2359%" y="965" width="8.7978%" height="15" fill="rgb(230,137,11)" fg:x="72988539" fg:w="23576784"/><text x="27.4859%" y="975.50">alloc::slice..</text></g><g><title>alloc::slice::hack::to_vec (23,576,784 samples, 8.80%)</title><rect x="27.2359%" y="949" width="8.7978%" height="15" fill="rgb(212,28,1)" fg:x="72988539" fg:w="23576784"/><text x="27.4859%" y="959.50">alloc::slice..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23,576,784 samples, 8.80%)</title><rect x="27.2359%" y="933" width="8.7978%" height="15" fill="rgb(248,164,17)" fg:x="72988539" fg:w="23576784"/><text x="27.4859%" y="943.50">&lt;T as alloc:..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (23,576,784 samples, 8.80%)</title><rect x="27.2359%" y="917" width="8.7978%" height="15" fill="rgb(222,171,42)" fg:x="72988539" fg:w="23576784"/><text x="27.4859%" y="927.50">&lt;css_bitvect..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23,576,784 samples, 8.80%)</title><rect x="27.2359%" y="901" width="8.7978%" height="15" fill="rgb(243,84,45)" fg:x="72988539" fg:w="23576784"/><text x="27.4859%" y="911.50">&lt;alloc::vec:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23,576,784 samples, 8.80%)</title><rect x="27.2359%" y="885" width="8.7978%" height="15" fill="rgb(252,49,23)" fg:x="72988539" fg:w="23576784"/><text x="27.4859%" y="895.50">alloc::slice..</text></g><g><title>alloc::slice::hack::to_vec (23,576,784 samples, 8.80%)</title><rect x="27.2359%" y="869" width="8.7978%" height="15" fill="rgb(215,19,7)" fg:x="72988539" fg:w="23576784"/><text x="27.4859%" y="879.50">alloc::slice..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23,576,784 samples, 8.80%)</title><rect x="27.2359%" y="853" width="8.7978%" height="15" fill="rgb(238,81,41)" fg:x="72988539" fg:w="23576784"/><text x="27.4859%" y="863.50">&lt;T as alloc:..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (5,941,428 samples, 2.22%)</title><rect x="33.8166%" y="837" width="2.2171%" height="15" fill="rgb(210,199,37)" fg:x="90623895" fg:w="5941428"/><text x="34.0666%" y="847.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (26,755,756 samples, 9.98%)</title><rect x="27.2359%" y="1061" width="9.9840%" height="15" fill="rgb(244,192,49)" fg:x="72988539" fg:w="26755756"/><text x="27.4859%" y="1071.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26,755,756 samples, 9.98%)</title><rect x="27.2359%" y="1045" width="9.9840%" height="15" fill="rgb(226,211,11)" fg:x="72988539" fg:w="26755756"/><text x="27.4859%" y="1055.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (26,755,756 samples, 9.98%)</title><rect x="27.2359%" y="1029" width="9.9840%" height="15" fill="rgb(236,162,54)" fg:x="72988539" fg:w="26755756"/><text x="27.4859%" y="1039.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26,755,756 samples, 9.98%)</title><rect x="27.2359%" y="1013" width="9.9840%" height="15" fill="rgb(220,229,9)" fg:x="72988539" fg:w="26755756"/><text x="27.4859%" y="1023.50">&lt;T as alloc::s..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (26,755,756 samples, 9.98%)</title><rect x="27.2359%" y="997" width="9.9840%" height="15" fill="rgb(250,87,22)" fg:x="72988539" fg:w="26755756"/><text x="27.4859%" y="1007.50">&lt;css_bitvector..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,178,972 samples, 1.19%)</title><rect x="36.0337%" y="981" width="1.1862%" height="15" fill="rgb(239,43,17)" fg:x="96565323" fg:w="3178972"/><text x="36.2837%" y="991.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,178,972 samples, 1.19%)</title><rect x="36.0337%" y="965" width="1.1862%" height="15" fill="rgb(231,177,25)" fg:x="96565323" fg:w="3178972"/><text x="36.2837%" y="975.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,178,972 samples, 1.19%)</title><rect x="36.0337%" y="949" width="1.1862%" height="15" fill="rgb(219,179,1)" fg:x="96565323" fg:w="3178972"/><text x="36.2837%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,178,972 samples, 1.19%)</title><rect x="36.0337%" y="933" width="1.1862%" height="15" fill="rgb(238,219,53)" fg:x="96565323" fg:w="3178972"/><text x="36.2837%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,178,972 samples, 1.19%)</title><rect x="36.0337%" y="917" width="1.1862%" height="15" fill="rgb(232,167,36)" fg:x="96565323" fg:w="3178972"/><text x="36.2837%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,178,972 samples, 1.19%)</title><rect x="36.0337%" y="901" width="1.1862%" height="15" fill="rgb(244,19,51)" fg:x="96565323" fg:w="3178972"/><text x="36.2837%" y="911.50"></text></g><g><title>core::clone::Clone::clone (3,178,972 samples, 1.19%)</title><rect x="36.0337%" y="885" width="1.1862%" height="15" fill="rgb(224,6,22)" fg:x="96565323" fg:w="3178972"/><text x="36.2837%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,178,972 samples, 1.19%)</title><rect x="36.0337%" y="869" width="1.1862%" height="15" fill="rgb(224,145,5)" fg:x="96565323" fg:w="3178972"/><text x="36.2837%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,178,972 samples, 1.19%)</title><rect x="36.0337%" y="853" width="1.1862%" height="15" fill="rgb(234,130,49)" fg:x="96565323" fg:w="3178972"/><text x="36.2837%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,178,972 samples, 1.19%)</title><rect x="36.0337%" y="837" width="1.1862%" height="15" fill="rgb(254,6,2)" fg:x="96565323" fg:w="3178972"/><text x="36.2837%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (3,178,972 samples, 1.19%)</title><rect x="36.0337%" y="821" width="1.1862%" height="15" fill="rgb(208,96,46)" fg:x="96565323" fg:w="3178972"/><text x="36.2837%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,178,972 samples, 1.19%)</title><rect x="36.0337%" y="805" width="1.1862%" height="15" fill="rgb(239,3,39)" fg:x="96565323" fg:w="3178972"/><text x="36.2837%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,178,972 samples, 1.19%)</title><rect x="36.0337%" y="789" width="1.1862%" height="15" fill="rgb(233,210,1)" fg:x="96565323" fg:w="3178972"/><text x="36.2837%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,178,972 samples, 1.19%)</title><rect x="36.0337%" y="773" width="1.1862%" height="15" fill="rgb(244,137,37)" fg:x="96565323" fg:w="3178972"/><text x="36.2837%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,178,972 samples, 1.19%)</title><rect x="36.0337%" y="757" width="1.1862%" height="15" fill="rgb(240,136,2)" fg:x="96565323" fg:w="3178972"/><text x="36.2837%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,178,972 samples, 1.19%)</title><rect x="36.0337%" y="741" width="1.1862%" height="15" fill="rgb(239,18,37)" fg:x="96565323" fg:w="3178972"/><text x="36.2837%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (29,800,984 samples, 11.12%)</title><rect x="27.2359%" y="1141" width="11.1203%" height="15" fill="rgb(218,185,22)" fg:x="72988539" fg:w="29800984"/><text x="27.4859%" y="1151.50">&lt;alloc::vec::Vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29,800,984 samples, 11.12%)</title><rect x="27.2359%" y="1125" width="11.1203%" height="15" fill="rgb(225,218,4)" fg:x="72988539" fg:w="29800984"/><text x="27.4859%" y="1135.50">alloc::slice::&lt;i..</text></g><g><title>alloc::slice::hack::to_vec (29,800,984 samples, 11.12%)</title><rect x="27.2359%" y="1109" width="11.1203%" height="15" fill="rgb(230,182,32)" fg:x="72988539" fg:w="29800984"/><text x="27.4859%" y="1119.50">alloc::slice::ha..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (29,800,984 samples, 11.12%)</title><rect x="27.2359%" y="1093" width="11.1203%" height="15" fill="rgb(242,56,43)" fg:x="72988539" fg:w="29800984"/><text x="27.4859%" y="1103.50">&lt;T as alloc::sli..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (29,800,984 samples, 11.12%)</title><rect x="27.2359%" y="1077" width="11.1203%" height="15" fill="rgb(233,99,24)" fg:x="72988539" fg:w="29800984"/><text x="27.4859%" y="1087.50">&lt;css_bitvector_c..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,045,228 samples, 1.14%)</title><rect x="37.2199%" y="1061" width="1.1363%" height="15" fill="rgb(234,209,42)" fg:x="99744295" fg:w="3045228"/><text x="37.4699%" y="1071.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,045,228 samples, 1.14%)</title><rect x="37.2199%" y="1045" width="1.1363%" height="15" fill="rgb(227,7,12)" fg:x="99744295" fg:w="3045228"/><text x="37.4699%" y="1055.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,045,228 samples, 1.14%)</title><rect x="37.2199%" y="1029" width="1.1363%" height="15" fill="rgb(245,203,43)" fg:x="99744295" fg:w="3045228"/><text x="37.4699%" y="1039.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (35,354,200 samples, 13.19%)</title><rect x="27.2359%" y="1157" width="13.1925%" height="15" fill="rgb(238,205,33)" fg:x="72988539" fg:w="35354200"/><text x="27.4859%" y="1167.50">&lt;css_bitvector_compi..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (5,553,216 samples, 2.07%)</title><rect x="38.3562%" y="1141" width="2.0722%" height="15" fill="rgb(231,56,7)" fg:x="102789523" fg:w="5553216"/><text x="38.6062%" y="1151.50">&lt;..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (5,553,216 samples, 2.07%)</title><rect x="38.3562%" y="1125" width="2.0722%" height="15" fill="rgb(244,186,29)" fg:x="102789523" fg:w="5553216"/><text x="38.6062%" y="1135.50">&lt;..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5,553,216 samples, 2.07%)</title><rect x="38.3562%" y="1109" width="2.0722%" height="15" fill="rgb(234,111,31)" fg:x="102789523" fg:w="5553216"/><text x="38.6062%" y="1119.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,553,216 samples, 2.07%)</title><rect x="38.3562%" y="1093" width="2.0722%" height="15" fill="rgb(241,149,10)" fg:x="102789523" fg:w="5553216"/><text x="38.6062%" y="1103.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (5,553,216 samples, 2.07%)</title><rect x="38.3562%" y="1077" width="2.0722%" height="15" fill="rgb(249,206,44)" fg:x="102789523" fg:w="5553216"/><text x="38.6062%" y="1087.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (5,553,216 samples, 2.07%)</title><rect x="38.3562%" y="1061" width="2.0722%" height="15" fill="rgb(251,153,30)" fg:x="102789523" fg:w="5553216"/><text x="38.6062%" y="1071.50">h..</text></g><g><title>core::clone::Clone::clone (5,553,216 samples, 2.07%)</title><rect x="38.3562%" y="1045" width="2.0722%" height="15" fill="rgb(239,152,38)" fg:x="102789523" fg:w="5553216"/><text x="38.6062%" y="1055.50">c..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,553,216 samples, 2.07%)</title><rect x="38.3562%" y="1029" width="2.0722%" height="15" fill="rgb(249,139,47)" fg:x="102789523" fg:w="5553216"/><text x="38.6062%" y="1039.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,553,216 samples, 2.07%)</title><rect x="38.3562%" y="1013" width="2.0722%" height="15" fill="rgb(244,64,35)" fg:x="102789523" fg:w="5553216"/><text x="38.6062%" y="1023.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,553,216 samples, 2.07%)</title><rect x="38.3562%" y="997" width="2.0722%" height="15" fill="rgb(216,46,15)" fg:x="102789523" fg:w="5553216"/><text x="38.6062%" y="1007.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,553,216 samples, 2.07%)</title><rect x="38.3562%" y="981" width="2.0722%" height="15" fill="rgb(250,74,19)" fg:x="102789523" fg:w="5553216"/><text x="38.6062%" y="991.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,553,216 samples, 2.07%)</title><rect x="38.3562%" y="965" width="2.0722%" height="15" fill="rgb(249,42,33)" fg:x="102789523" fg:w="5553216"/><text x="38.6062%" y="975.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,553,216 samples, 2.07%)</title><rect x="38.3562%" y="949" width="2.0722%" height="15" fill="rgb(242,149,17)" fg:x="102789523" fg:w="5553216"/><text x="38.6062%" y="959.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,553,216 samples, 2.07%)</title><rect x="38.3562%" y="933" width="2.0722%" height="15" fill="rgb(244,29,21)" fg:x="102789523" fg:w="5553216"/><text x="38.6062%" y="943.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,553,216 samples, 2.07%)</title><rect x="38.3562%" y="917" width="2.0722%" height="15" fill="rgb(220,130,37)" fg:x="102789523" fg:w="5553216"/><text x="38.6062%" y="927.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,553,216 samples, 2.07%)</title><rect x="38.3562%" y="901" width="2.0722%" height="15" fill="rgb(211,67,2)" fg:x="102789523" fg:w="5553216"/><text x="38.6062%" y="911.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,011,555 samples, 1.12%)</title><rect x="39.3047%" y="885" width="1.1238%" height="15" fill="rgb(235,68,52)" fg:x="105331184" fg:w="3011555"/><text x="39.5547%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,011,555 samples, 1.12%)</title><rect x="39.3047%" y="869" width="1.1238%" height="15" fill="rgb(246,142,3)" fg:x="105331184" fg:w="3011555"/><text x="39.5547%" y="879.50"></text></g><g><title>alloc::alloc::alloc (3,011,555 samples, 1.12%)</title><rect x="39.3047%" y="853" width="1.1238%" height="15" fill="rgb(241,25,7)" fg:x="105331184" fg:w="3011555"/><text x="39.5547%" y="863.50"></text></g><g><title>malloc (3,011,555 samples, 1.12%)</title><rect x="39.3047%" y="837" width="1.1238%" height="15" fill="rgb(242,119,39)" fg:x="105331184" fg:w="3011555"/><text x="39.5547%" y="847.50"></text></g><g><title>[libc.so.6] (3,011,555 samples, 1.12%)</title><rect x="39.3047%" y="821" width="1.1238%" height="15" fill="rgb(241,98,45)" fg:x="105331184" fg:w="3011555"/><text x="39.5547%" y="831.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (41,375,056 samples, 15.44%)</title><rect x="27.2359%" y="1237" width="15.4392%" height="15" fill="rgb(254,28,30)" fg:x="72988539" fg:w="41375056"/><text x="27.4859%" y="1247.50">&lt;css_bitvector_compiler:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (41,375,056 samples, 15.44%)</title><rect x="27.2359%" y="1221" width="15.4392%" height="15" fill="rgb(241,142,54)" fg:x="72988539" fg:w="41375056"/><text x="27.4859%" y="1231.50">&lt;alloc::vec::Vec&lt;T,A&gt; as..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (41,375,056 samples, 15.44%)</title><rect x="27.2359%" y="1205" width="15.4392%" height="15" fill="rgb(222,85,15)" fg:x="72988539" fg:w="41375056"/><text x="27.4859%" y="1215.50">alloc::slice::&lt;impl [T]&gt;..</text></g><g><title>alloc::slice::hack::to_vec (41,375,056 samples, 15.44%)</title><rect x="27.2359%" y="1189" width="15.4392%" height="15" fill="rgb(210,85,47)" fg:x="72988539" fg:w="41375056"/><text x="27.4859%" y="1199.50">alloc::slice::hack::to_v..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (41,375,056 samples, 15.44%)</title><rect x="27.2359%" y="1173" width="15.4392%" height="15" fill="rgb(224,206,25)" fg:x="72988539" fg:w="41375056"/><text x="27.4859%" y="1183.50">&lt;T as alloc::slice::hack..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (6,020,856 samples, 2.25%)</title><rect x="40.4284%" y="1157" width="2.2467%" height="15" fill="rgb(243,201,19)" fg:x="108342739" fg:w="6020856"/><text x="40.6784%" y="1167.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (44,461,401 samples, 16.59%)</title><rect x="27.2359%" y="1301" width="16.5909%" height="15" fill="rgb(236,59,4)" fg:x="72988539" fg:w="44461401"/><text x="27.4859%" y="1311.50">&lt;alloc::vec::Vec&lt;T,A&gt; as c..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (44,461,401 samples, 16.59%)</title><rect x="27.2359%" y="1285" width="16.5909%" height="15" fill="rgb(254,179,45)" fg:x="72988539" fg:w="44461401"/><text x="27.4859%" y="1295.50">alloc::slice::&lt;impl [T]&gt;::..</text></g><g><title>alloc::slice::hack::to_vec (44,461,401 samples, 16.59%)</title><rect x="27.2359%" y="1269" width="16.5909%" height="15" fill="rgb(226,14,10)" fg:x="72988539" fg:w="44461401"/><text x="27.4859%" y="1279.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (44,461,401 samples, 16.59%)</title><rect x="27.2359%" y="1253" width="16.5909%" height="15" fill="rgb(244,27,41)" fg:x="72988539" fg:w="44461401"/><text x="27.4859%" y="1263.50">&lt;T as alloc::slice::hack::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,086,345 samples, 1.15%)</title><rect x="42.6751%" y="1237" width="1.1517%" height="15" fill="rgb(235,35,32)" fg:x="114363595" fg:w="3086345"/><text x="42.9251%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,086,345 samples, 1.15%)</title><rect x="42.6751%" y="1221" width="1.1517%" height="15" fill="rgb(218,68,31)" fg:x="114363595" fg:w="3086345"/><text x="42.9251%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,086,345 samples, 1.15%)</title><rect x="42.6751%" y="1205" width="1.1517%" height="15" fill="rgb(207,120,37)" fg:x="114363595" fg:w="3086345"/><text x="42.9251%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,086,345 samples, 1.15%)</title><rect x="42.6751%" y="1189" width="1.1517%" height="15" fill="rgb(227,98,0)" fg:x="114363595" fg:w="3086345"/><text x="42.9251%" y="1199.50"></text></g><g><title>alloc::raw_vec::layout_array (3,086,345 samples, 1.15%)</title><rect x="42.6751%" y="1173" width="1.1517%" height="15" fill="rgb(207,7,3)" fg:x="114363595" fg:w="3086345"/><text x="42.9251%" y="1183.50"></text></g><g><title>core::alloc::layout::Layout::repeat (3,086,345 samples, 1.15%)</title><rect x="42.6751%" y="1157" width="1.1517%" height="15" fill="rgb(206,98,19)" fg:x="114363595" fg:w="3086345"/><text x="42.9251%" y="1167.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (52,296,913 samples, 19.51%)</title><rect x="26.3632%" y="1317" width="19.5148%" height="15" fill="rgb(217,5,26)" fg:x="70649663" fg:w="52296913"/><text x="26.6132%" y="1327.50">&lt;css_bitvector_compiler::HtmlNo..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5,496,636 samples, 2.05%)</title><rect x="43.8268%" y="1301" width="2.0511%" height="15" fill="rgb(235,190,38)" fg:x="117449940" fg:w="5496636"/><text x="44.0768%" y="1311.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,496,636 samples, 2.05%)</title><rect x="43.8268%" y="1285" width="2.0511%" height="15" fill="rgb(247,86,24)" fg:x="117449940" fg:w="5496636"/><text x="44.0768%" y="1295.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,496,636 samples, 2.05%)</title><rect x="43.8268%" y="1269" width="2.0511%" height="15" fill="rgb(205,101,16)" fg:x="117449940" fg:w="5496636"/><text x="44.0768%" y="1279.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,496,636 samples, 2.05%)</title><rect x="43.8268%" y="1253" width="2.0511%" height="15" fill="rgb(246,168,33)" fg:x="117449940" fg:w="5496636"/><text x="44.0768%" y="1263.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,496,636 samples, 2.05%)</title><rect x="43.8268%" y="1237" width="2.0511%" height="15" fill="rgb(231,114,1)" fg:x="117449940" fg:w="5496636"/><text x="44.0768%" y="1247.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,496,636 samples, 2.05%)</title><rect x="43.8268%" y="1221" width="2.0511%" height="15" fill="rgb(207,184,53)" fg:x="117449940" fg:w="5496636"/><text x="44.0768%" y="1231.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,496,636 samples, 2.05%)</title><rect x="43.8268%" y="1205" width="2.0511%" height="15" fill="rgb(224,95,51)" fg:x="117449940" fg:w="5496636"/><text x="44.0768%" y="1215.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,496,636 samples, 2.05%)</title><rect x="43.8268%" y="1189" width="2.0511%" height="15" fill="rgb(212,188,45)" fg:x="117449940" fg:w="5496636"/><text x="44.0768%" y="1199.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,496,636 samples, 2.05%)</title><rect x="43.8268%" y="1173" width="2.0511%" height="15" fill="rgb(223,154,38)" fg:x="117449940" fg:w="5496636"/><text x="44.0768%" y="1183.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,496,636 samples, 2.05%)</title><rect x="43.8268%" y="1157" width="2.0511%" height="15" fill="rgb(251,22,52)" fg:x="117449940" fg:w="5496636"/><text x="44.0768%" y="1167.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,496,636 samples, 2.05%)</title><rect x="43.8268%" y="1141" width="2.0511%" height="15" fill="rgb(229,209,22)" fg:x="117449940" fg:w="5496636"/><text x="44.0768%" y="1151.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (5,496,636 samples, 2.05%)</title><rect x="43.8268%" y="1125" width="2.0511%" height="15" fill="rgb(234,138,34)" fg:x="117449940" fg:w="5496636"/><text x="44.0768%" y="1135.50">a..</text></g><g><title>alloc::alloc::alloc (5,496,636 samples, 2.05%)</title><rect x="43.8268%" y="1109" width="2.0511%" height="15" fill="rgb(212,95,11)" fg:x="117449940" fg:w="5496636"/><text x="44.0768%" y="1119.50">a..</text></g><g><title>malloc (5,496,636 samples, 2.05%)</title><rect x="43.8268%" y="1093" width="2.0511%" height="15" fill="rgb(240,179,47)" fg:x="117449940" fg:w="5496636"/><text x="44.0768%" y="1103.50">m..</text></g><g><title>[libc.so.6] (5,496,636 samples, 2.05%)</title><rect x="43.8268%" y="1077" width="2.0511%" height="15" fill="rgb(240,163,11)" fg:x="117449940" fg:w="5496636"/><text x="44.0768%" y="1087.50">[..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8,565,448 samples, 3.20%)</title><rect x="45.8779%" y="1317" width="3.1962%" height="15" fill="rgb(236,37,12)" fg:x="122946576" fg:w="8565448"/><text x="46.1279%" y="1327.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8,565,448 samples, 3.20%)</title><rect x="45.8779%" y="1301" width="3.1962%" height="15" fill="rgb(232,164,16)" fg:x="122946576" fg:w="8565448"/><text x="46.1279%" y="1311.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (8,565,448 samples, 3.20%)</title><rect x="45.8779%" y="1285" width="3.1962%" height="15" fill="rgb(244,205,15)" fg:x="122946576" fg:w="8565448"/><text x="46.1279%" y="1295.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (8,565,448 samples, 3.20%)</title><rect x="45.8779%" y="1269" width="3.1962%" height="15" fill="rgb(223,117,47)" fg:x="122946576" fg:w="8565448"/><text x="46.1279%" y="1279.50">all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8,565,448 samples, 3.20%)</title><rect x="45.8779%" y="1253" width="3.1962%" height="15" fill="rgb(244,107,35)" fg:x="122946576" fg:w="8565448"/><text x="46.1279%" y="1263.50">&lt;al..</text></g><g><title>alloc::alloc::Global::alloc_impl (8,565,448 samples, 3.20%)</title><rect x="45.8779%" y="1237" width="3.1962%" height="15" fill="rgb(205,140,8)" fg:x="122946576" fg:w="8565448"/><text x="46.1279%" y="1247.50">all..</text></g><g><title>alloc::alloc::alloc (8,565,448 samples, 3.20%)</title><rect x="45.8779%" y="1221" width="3.1962%" height="15" fill="rgb(228,84,46)" fg:x="122946576" fg:w="8565448"/><text x="46.1279%" y="1231.50">all..</text></g><g><title>malloc (8,565,448 samples, 3.20%)</title><rect x="45.8779%" y="1205" width="3.1962%" height="15" fill="rgb(254,188,9)" fg:x="122946576" fg:w="8565448"/><text x="46.1279%" y="1215.50">mal..</text></g><g><title>[libc.so.6] (8,565,448 samples, 3.20%)</title><rect x="45.8779%" y="1189" width="3.1962%" height="15" fill="rgb(206,112,54)" fg:x="122946576" fg:w="8565448"/><text x="46.1279%" y="1199.50">[li..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (66,897,021 samples, 24.96%)</title><rect x="26.3632%" y="1381" width="24.9628%" height="15" fill="rgb(216,84,49)" fg:x="70649663" fg:w="66897021"/><text x="26.6132%" y="1391.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Cl..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (66,897,021 samples, 24.96%)</title><rect x="26.3632%" y="1365" width="24.9628%" height="15" fill="rgb(214,194,35)" fg:x="70649663" fg:w="66897021"/><text x="26.6132%" y="1375.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (66,897,021 samples, 24.96%)</title><rect x="26.3632%" y="1349" width="24.9628%" height="15" fill="rgb(249,28,3)" fg:x="70649663" fg:w="66897021"/><text x="26.6132%" y="1359.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (66,897,021 samples, 24.96%)</title><rect x="26.3632%" y="1333" width="24.9628%" height="15" fill="rgb(222,56,52)" fg:x="70649663" fg:w="66897021"/><text x="26.6132%" y="1343.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::t..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (6,034,660 samples, 2.25%)</title><rect x="49.0741%" y="1317" width="2.2519%" height="15" fill="rgb(245,217,50)" fg:x="131512024" fg:w="6034660"/><text x="49.3241%" y="1327.50">c..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,025,989 samples, 1.13%)</title><rect x="51.3260%" y="1381" width="1.1292%" height="15" fill="rgb(213,201,24)" fg:x="137546684" fg:w="3025989"/><text x="51.5760%" y="1391.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,025,989 samples, 1.13%)</title><rect x="51.3260%" y="1365" width="1.1292%" height="15" fill="rgb(248,116,28)" fg:x="137546684" fg:w="3025989"/><text x="51.5760%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,025,989 samples, 1.13%)</title><rect x="51.3260%" y="1349" width="1.1292%" height="15" fill="rgb(219,72,43)" fg:x="137546684" fg:w="3025989"/><text x="51.5760%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,025,989 samples, 1.13%)</title><rect x="51.3260%" y="1333" width="1.1292%" height="15" fill="rgb(209,138,14)" fg:x="137546684" fg:w="3025989"/><text x="51.5760%" y="1343.50"></text></g><g><title>alloc::slice::hack::to_vec (3,025,989 samples, 1.13%)</title><rect x="51.3260%" y="1317" width="1.1292%" height="15" fill="rgb(222,18,33)" fg:x="137546684" fg:w="3025989"/><text x="51.5760%" y="1327.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,025,989 samples, 1.13%)</title><rect x="51.3260%" y="1301" width="1.1292%" height="15" fill="rgb(213,199,7)" fg:x="137546684" fg:w="3025989"/><text x="51.5760%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,025,989 samples, 1.13%)</title><rect x="51.3260%" y="1285" width="1.1292%" height="15" fill="rgb(250,110,10)" fg:x="137546684" fg:w="3025989"/><text x="51.5760%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,025,989 samples, 1.13%)</title><rect x="51.3260%" y="1269" width="1.1292%" height="15" fill="rgb(248,123,6)" fg:x="137546684" fg:w="3025989"/><text x="51.5760%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,025,989 samples, 1.13%)</title><rect x="51.3260%" y="1253" width="1.1292%" height="15" fill="rgb(206,91,31)" fg:x="137546684" fg:w="3025989"/><text x="51.5760%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,025,989 samples, 1.13%)</title><rect x="51.3260%" y="1237" width="1.1292%" height="15" fill="rgb(211,154,13)" fg:x="137546684" fg:w="3025989"/><text x="51.5760%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,025,989 samples, 1.13%)</title><rect x="51.3260%" y="1221" width="1.1292%" height="15" fill="rgb(225,148,7)" fg:x="137546684" fg:w="3025989"/><text x="51.5760%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,025,989 samples, 1.13%)</title><rect x="51.3260%" y="1205" width="1.1292%" height="15" fill="rgb(220,160,43)" fg:x="137546684" fg:w="3025989"/><text x="51.5760%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (3,025,989 samples, 1.13%)</title><rect x="51.3260%" y="1189" width="1.1292%" height="15" fill="rgb(213,52,39)" fg:x="137546684" fg:w="3025989"/><text x="51.5760%" y="1199.50"></text></g><g><title>malloc (3,025,989 samples, 1.13%)</title><rect x="51.3260%" y="1173" width="1.1292%" height="15" fill="rgb(243,137,7)" fg:x="137546684" fg:w="3025989"/><text x="51.5760%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,606,144 samples, 0.97%)</title><rect x="52.4551%" y="1301" width="0.9725%" height="15" fill="rgb(230,79,13)" fg:x="140572673" fg:w="2606144"/><text x="52.7051%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,606,144 samples, 0.97%)</title><rect x="52.4551%" y="1285" width="0.9725%" height="15" fill="rgb(247,105,23)" fg:x="140572673" fg:w="2606144"/><text x="52.7051%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,606,144 samples, 0.97%)</title><rect x="52.4551%" y="1269" width="0.9725%" height="15" fill="rgb(223,179,41)" fg:x="140572673" fg:w="2606144"/><text x="52.7051%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,606,144 samples, 0.97%)</title><rect x="52.4551%" y="1253" width="0.9725%" height="15" fill="rgb(218,9,34)" fg:x="140572673" fg:w="2606144"/><text x="52.7051%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,606,144 samples, 0.97%)</title><rect x="52.4551%" y="1237" width="0.9725%" height="15" fill="rgb(222,106,8)" fg:x="140572673" fg:w="2606144"/><text x="52.7051%" y="1247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,606,144 samples, 0.97%)</title><rect x="52.4551%" y="1221" width="0.9725%" height="15" fill="rgb(211,220,0)" fg:x="140572673" fg:w="2606144"/><text x="52.7051%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (2,606,144 samples, 0.97%)</title><rect x="52.4551%" y="1205" width="0.9725%" height="15" fill="rgb(229,52,16)" fg:x="140572673" fg:w="2606144"/><text x="52.7051%" y="1215.50"></text></g><g><title>malloc (2,606,144 samples, 0.97%)</title><rect x="52.4551%" y="1189" width="0.9725%" height="15" fill="rgb(212,155,18)" fg:x="140572673" fg:w="2606144"/><text x="52.7051%" y="1199.50"></text></g><g><title>[libc.so.6] (2,606,144 samples, 0.97%)</title><rect x="52.4551%" y="1173" width="0.9725%" height="15" fill="rgb(242,21,14)" fg:x="140572673" fg:w="2606144"/><text x="52.7051%" y="1183.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (5,415,938 samples, 2.02%)</title><rect x="52.4551%" y="1381" width="2.0210%" height="15" fill="rgb(222,19,48)" fg:x="140572673" fg:w="5415938"/><text x="52.7051%" y="1391.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,415,938 samples, 2.02%)</title><rect x="52.4551%" y="1365" width="2.0210%" height="15" fill="rgb(232,45,27)" fg:x="140572673" fg:w="5415938"/><text x="52.7051%" y="1375.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,415,938 samples, 2.02%)</title><rect x="52.4551%" y="1349" width="2.0210%" height="15" fill="rgb(249,103,42)" fg:x="140572673" fg:w="5415938"/><text x="52.7051%" y="1359.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,415,938 samples, 2.02%)</title><rect x="52.4551%" y="1333" width="2.0210%" height="15" fill="rgb(246,81,33)" fg:x="140572673" fg:w="5415938"/><text x="52.7051%" y="1343.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,415,938 samples, 2.02%)</title><rect x="52.4551%" y="1317" width="2.0210%" height="15" fill="rgb(252,33,42)" fg:x="140572673" fg:w="5415938"/><text x="52.7051%" y="1327.50">&lt;..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,809,794 samples, 1.05%)</title><rect x="53.4276%" y="1301" width="1.0485%" height="15" fill="rgb(209,212,41)" fg:x="143178817" fg:w="2809794"/><text x="53.6776%" y="1311.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,809,794 samples, 1.05%)</title><rect x="53.4276%" y="1285" width="1.0485%" height="15" fill="rgb(207,154,6)" fg:x="143178817" fg:w="2809794"/><text x="53.6776%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (86,860,626 samples, 32.41%)</title><rect x="23.1903%" y="1461" width="32.4123%" height="15" fill="rgb(223,64,47)" fg:x="62146828" fg:w="86860626"/><text x="23.4403%" y="1471.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (86,860,626 samples, 32.41%)</title><rect x="23.1903%" y="1445" width="32.4123%" height="15" fill="rgb(211,161,38)" fg:x="62146828" fg:w="86860626"/><text x="23.4403%" y="1455.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (86,860,626 samples, 32.41%)</title><rect x="23.1903%" y="1429" width="32.4123%" height="15" fill="rgb(219,138,40)" fg:x="62146828" fg:w="86860626"/><text x="23.4403%" y="1439.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (86,860,626 samples, 32.41%)</title><rect x="23.1903%" y="1413" width="32.4123%" height="15" fill="rgb(241,228,46)" fg:x="62146828" fg:w="86860626"/><text x="23.4403%" y="1423.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (86,860,626 samples, 32.41%)</title><rect x="23.1903%" y="1397" width="32.4123%" height="15" fill="rgb(223,209,38)" fg:x="62146828" fg:w="86860626"/><text x="23.4403%" y="1407.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Cl..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (3,018,843 samples, 1.13%)</title><rect x="54.4761%" y="1381" width="1.1265%" height="15" fill="rgb(236,164,45)" fg:x="145988611" fg:w="3018843"/><text x="54.7261%" y="1391.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (3,018,843 samples, 1.13%)</title><rect x="54.4761%" y="1365" width="1.1265%" height="15" fill="rgb(231,15,5)" fg:x="145988611" fg:w="3018843"/><text x="54.7261%" y="1375.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,018,843 samples, 1.13%)</title><rect x="54.4761%" y="1349" width="1.1265%" height="15" fill="rgb(252,35,15)" fg:x="145988611" fg:w="3018843"/><text x="54.7261%" y="1359.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,018,843 samples, 1.13%)</title><rect x="54.4761%" y="1333" width="1.1265%" height="15" fill="rgb(248,181,18)" fg:x="145988611" fg:w="3018843"/><text x="54.7261%" y="1343.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,018,843 samples, 1.13%)</title><rect x="54.4761%" y="1317" width="1.1265%" height="15" fill="rgb(233,39,42)" fg:x="145988611" fg:w="3018843"/><text x="54.7261%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,018,843 samples, 1.13%)</title><rect x="54.4761%" y="1301" width="1.1265%" height="15" fill="rgb(238,110,33)" fg:x="145988611" fg:w="3018843"/><text x="54.7261%" y="1311.50"></text></g><g><title>core::clone::Clone::clone (3,018,843 samples, 1.13%)</title><rect x="54.4761%" y="1285" width="1.1265%" height="15" fill="rgb(233,195,10)" fg:x="145988611" fg:w="3018843"/><text x="54.7261%" y="1295.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,018,843 samples, 1.13%)</title><rect x="54.4761%" y="1269" width="1.1265%" height="15" fill="rgb(254,105,3)" fg:x="145988611" fg:w="3018843"/><text x="54.7261%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,018,843 samples, 1.13%)</title><rect x="54.4761%" y="1253" width="1.1265%" height="15" fill="rgb(221,225,9)" fg:x="145988611" fg:w="3018843"/><text x="54.7261%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,018,843 samples, 1.13%)</title><rect x="54.4761%" y="1237" width="1.1265%" height="15" fill="rgb(224,227,45)" fg:x="145988611" fg:w="3018843"/><text x="54.7261%" y="1247.50"></text></g><g><title>alloc::slice::hack::to_vec (3,018,843 samples, 1.13%)</title><rect x="54.4761%" y="1221" width="1.1265%" height="15" fill="rgb(229,198,43)" fg:x="145988611" fg:w="3018843"/><text x="54.7261%" y="1231.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,018,843 samples, 1.13%)</title><rect x="54.4761%" y="1205" width="1.1265%" height="15" fill="rgb(206,209,35)" fg:x="145988611" fg:w="3018843"/><text x="54.7261%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,018,843 samples, 1.13%)</title><rect x="54.4761%" y="1189" width="1.1265%" height="15" fill="rgb(245,195,53)" fg:x="145988611" fg:w="3018843"/><text x="54.7261%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,018,843 samples, 1.13%)</title><rect x="54.4761%" y="1173" width="1.1265%" height="15" fill="rgb(240,92,26)" fg:x="145988611" fg:w="3018843"/><text x="54.7261%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,018,843 samples, 1.13%)</title><rect x="54.4761%" y="1157" width="1.1265%" height="15" fill="rgb(207,40,23)" fg:x="145988611" fg:w="3018843"/><text x="54.7261%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,018,843 samples, 1.13%)</title><rect x="54.4761%" y="1141" width="1.1265%" height="15" fill="rgb(223,111,35)" fg:x="145988611" fg:w="3018843"/><text x="54.7261%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,018,843 samples, 1.13%)</title><rect x="54.4761%" y="1125" width="1.1265%" height="15" fill="rgb(229,147,28)" fg:x="145988611" fg:w="3018843"/><text x="54.7261%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,018,843 samples, 1.13%)</title><rect x="54.4761%" y="1109" width="1.1265%" height="15" fill="rgb(211,29,28)" fg:x="145988611" fg:w="3018843"/><text x="54.7261%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (3,018,843 samples, 1.13%)</title><rect x="54.4761%" y="1093" width="1.1265%" height="15" fill="rgb(228,72,33)" fg:x="145988611" fg:w="3018843"/><text x="54.7261%" y="1103.50"></text></g><g><title>malloc (3,018,843 samples, 1.13%)</title><rect x="54.4761%" y="1077" width="1.1265%" height="15" fill="rgb(205,214,31)" fg:x="145988611" fg:w="3018843"/><text x="54.7261%" y="1087.50"></text></g><g><title>[libc.so.6] (3,018,843 samples, 1.13%)</title><rect x="54.4761%" y="1061" width="1.1265%" height="15" fill="rgb(224,111,15)" fg:x="145988611" fg:w="3018843"/><text x="54.7261%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (87,951,138 samples, 32.82%)</title><rect x="23.1903%" y="1541" width="32.8193%" height="15" fill="rgb(253,21,26)" fg:x="62146828" fg:w="87951138"/><text x="23.4403%" y="1551.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (87,951,138 samples, 32.82%)</title><rect x="23.1903%" y="1525" width="32.8193%" height="15" fill="rgb(245,139,43)" fg:x="62146828" fg:w="87951138"/><text x="23.4403%" y="1535.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (87,951,138 samples, 32.82%)</title><rect x="23.1903%" y="1509" width="32.8193%" height="15" fill="rgb(252,170,7)" fg:x="62146828" fg:w="87951138"/><text x="23.4403%" y="1519.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (87,951,138 samples, 32.82%)</title><rect x="23.1903%" y="1493" width="32.8193%" height="15" fill="rgb(231,118,14)" fg:x="62146828" fg:w="87951138"/><text x="23.4403%" y="1503.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (87,951,138 samples, 32.82%)</title><rect x="23.1903%" y="1477" width="32.8193%" height="15" fill="rgb(238,83,0)" fg:x="62146828" fg:w="87951138"/><text x="23.4403%" y="1487.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clo..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (1,090,512 samples, 0.41%)</title><rect x="55.6026%" y="1461" width="0.4069%" height="15" fill="rgb(221,39,39)" fg:x="149007454" fg:w="1090512"/><text x="55.8526%" y="1471.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (1,090,512 samples, 0.41%)</title><rect x="55.6026%" y="1445" width="0.4069%" height="15" fill="rgb(222,119,46)" fg:x="149007454" fg:w="1090512"/><text x="55.8526%" y="1455.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (1,090,512 samples, 0.41%)</title><rect x="55.6026%" y="1429" width="0.4069%" height="15" fill="rgb(222,165,49)" fg:x="149007454" fg:w="1090512"/><text x="55.8526%" y="1439.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,090,512 samples, 0.41%)</title><rect x="55.6026%" y="1413" width="0.4069%" height="15" fill="rgb(219,113,52)" fg:x="149007454" fg:w="1090512"/><text x="55.8526%" y="1423.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (1,090,512 samples, 0.41%)</title><rect x="55.6026%" y="1397" width="0.4069%" height="15" fill="rgb(214,7,15)" fg:x="149007454" fg:w="1090512"/><text x="55.8526%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (1,090,512 samples, 0.41%)</title><rect x="55.6026%" y="1381" width="0.4069%" height="15" fill="rgb(235,32,4)" fg:x="149007454" fg:w="1090512"/><text x="55.8526%" y="1391.50"></text></g><g><title>core::clone::Clone::clone (1,090,512 samples, 0.41%)</title><rect x="55.6026%" y="1365" width="0.4069%" height="15" fill="rgb(238,90,54)" fg:x="149007454" fg:w="1090512"/><text x="55.8526%" y="1375.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,090,512 samples, 0.41%)</title><rect x="55.6026%" y="1349" width="0.4069%" height="15" fill="rgb(213,208,19)" fg:x="149007454" fg:w="1090512"/><text x="55.8526%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,090,512 samples, 0.41%)</title><rect x="55.6026%" y="1333" width="0.4069%" height="15" fill="rgb(233,156,4)" fg:x="149007454" fg:w="1090512"/><text x="55.8526%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,090,512 samples, 0.41%)</title><rect x="55.6026%" y="1317" width="0.4069%" height="15" fill="rgb(207,194,5)" fg:x="149007454" fg:w="1090512"/><text x="55.8526%" y="1327.50"></text></g><g><title>alloc::slice::hack::to_vec (1,090,512 samples, 0.41%)</title><rect x="55.6026%" y="1301" width="0.4069%" height="15" fill="rgb(206,111,30)" fg:x="149007454" fg:w="1090512"/><text x="55.8526%" y="1311.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,090,512 samples, 0.41%)</title><rect x="55.6026%" y="1285" width="0.4069%" height="15" fill="rgb(243,70,54)" fg:x="149007454" fg:w="1090512"/><text x="55.8526%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,090,512 samples, 0.41%)</title><rect x="55.6026%" y="1269" width="0.4069%" height="15" fill="rgb(242,28,8)" fg:x="149007454" fg:w="1090512"/><text x="55.8526%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,090,512 samples, 0.41%)</title><rect x="55.6026%" y="1253" width="0.4069%" height="15" fill="rgb(219,106,18)" fg:x="149007454" fg:w="1090512"/><text x="55.8526%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,090,512 samples, 0.41%)</title><rect x="55.6026%" y="1237" width="0.4069%" height="15" fill="rgb(244,222,10)" fg:x="149007454" fg:w="1090512"/><text x="55.8526%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,090,512 samples, 0.41%)</title><rect x="55.6026%" y="1221" width="0.4069%" height="15" fill="rgb(236,179,52)" fg:x="149007454" fg:w="1090512"/><text x="55.8526%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,090,512 samples, 0.41%)</title><rect x="55.6026%" y="1205" width="0.4069%" height="15" fill="rgb(213,23,39)" fg:x="149007454" fg:w="1090512"/><text x="55.8526%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,090,512 samples, 0.41%)</title><rect x="55.6026%" y="1189" width="0.4069%" height="15" fill="rgb(238,48,10)" fg:x="149007454" fg:w="1090512"/><text x="55.8526%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (1,090,512 samples, 0.41%)</title><rect x="55.6026%" y="1173" width="0.4069%" height="15" fill="rgb(251,196,23)" fg:x="149007454" fg:w="1090512"/><text x="55.8526%" y="1183.50"></text></g><g><title>malloc (1,090,512 samples, 0.41%)</title><rect x="55.6026%" y="1157" width="0.4069%" height="15" fill="rgb(250,152,24)" fg:x="149007454" fg:w="1090512"/><text x="55.8526%" y="1167.50"></text></g><g><title>[libc.so.6] (1,090,512 samples, 0.41%)</title><rect x="55.6026%" y="1141" width="0.4069%" height="15" fill="rgb(209,150,17)" fg:x="149007454" fg:w="1090512"/><text x="55.8526%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (93,346,531 samples, 34.83%)</title><rect x="22.1983%" y="1621" width="34.8326%" height="15" fill="rgb(234,202,34)" fg:x="59488366" fg:w="93346531"/><text x="22.4483%" y="1631.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (93,346,531 samples, 34.83%)</title><rect x="22.1983%" y="1605" width="34.8326%" height="15" fill="rgb(253,148,53)" fg:x="59488366" fg:w="93346531"/><text x="22.4483%" y="1615.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (93,346,531 samples, 34.83%)</title><rect x="22.1983%" y="1589" width="34.8326%" height="15" fill="rgb(218,129,16)" fg:x="59488366" fg:w="93346531"/><text x="22.4483%" y="1599.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (93,346,531 samples, 34.83%)</title><rect x="22.1983%" y="1573" width="34.8326%" height="15" fill="rgb(216,85,19)" fg:x="59488366" fg:w="93346531"/><text x="22.4483%" y="1583.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (93,346,531 samples, 34.83%)</title><rect x="22.1983%" y="1557" width="34.8326%" height="15" fill="rgb(235,228,7)" fg:x="59488366" fg:w="93346531"/><text x="22.4483%" y="1567.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;:..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,736,931 samples, 1.02%)</title><rect x="56.0095%" y="1541" width="1.0213%" height="15" fill="rgb(245,175,0)" fg:x="150097966" fg:w="2736931"/><text x="56.2595%" y="1551.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,736,931 samples, 1.02%)</title><rect x="56.0095%" y="1525" width="1.0213%" height="15" fill="rgb(208,168,36)" fg:x="150097966" fg:w="2736931"/><text x="56.2595%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,736,931 samples, 1.02%)</title><rect x="56.0095%" y="1509" width="1.0213%" height="15" fill="rgb(246,171,24)" fg:x="150097966" fg:w="2736931"/><text x="56.2595%" y="1519.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,736,931 samples, 1.02%)</title><rect x="56.0095%" y="1493" width="1.0213%" height="15" fill="rgb(215,142,24)" fg:x="150097966" fg:w="2736931"/><text x="56.2595%" y="1503.50"></text></g><g><title>alloc::slice::hack::to_vec (2,736,931 samples, 1.02%)</title><rect x="56.0095%" y="1477" width="1.0213%" height="15" fill="rgb(250,187,7)" fg:x="150097966" fg:w="2736931"/><text x="56.2595%" y="1487.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,736,931 samples, 1.02%)</title><rect x="56.0095%" y="1461" width="1.0213%" height="15" fill="rgb(228,66,33)" fg:x="150097966" fg:w="2736931"/><text x="56.2595%" y="1471.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,736,931 samples, 1.02%)</title><rect x="56.0095%" y="1445" width="1.0213%" height="15" fill="rgb(234,215,21)" fg:x="150097966" fg:w="2736931"/><text x="56.2595%" y="1455.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,736,931 samples, 1.02%)</title><rect x="56.0095%" y="1429" width="1.0213%" height="15" fill="rgb(222,191,20)" fg:x="150097966" fg:w="2736931"/><text x="56.2595%" y="1439.50"></text></g><g><title>[libc.so.6] (2,736,931 samples, 1.02%)</title><rect x="56.0095%" y="1413" width="1.0213%" height="15" fill="rgb(245,79,54)" fg:x="150097966" fg:w="2736931"/><text x="56.2595%" y="1423.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,176,164 samples, 0.81%)</title><rect x="58.0384%" y="1557" width="0.8120%" height="15" fill="rgb(240,10,37)" fg:x="155535052" fg:w="2176164"/><text x="58.2884%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,176,164 samples, 0.81%)</title><rect x="58.0384%" y="1541" width="0.8120%" height="15" fill="rgb(214,192,32)" fg:x="155535052" fg:w="2176164"/><text x="58.2884%" y="1551.50"></text></g><g><title>core::clone::Clone::clone (2,176,164 samples, 0.81%)</title><rect x="58.0384%" y="1525" width="0.8120%" height="15" fill="rgb(209,36,54)" fg:x="155535052" fg:w="2176164"/><text x="58.2884%" y="1535.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,176,164 samples, 0.81%)</title><rect x="58.0384%" y="1509" width="0.8120%" height="15" fill="rgb(220,10,11)" fg:x="155535052" fg:w="2176164"/><text x="58.2884%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,176,164 samples, 0.81%)</title><rect x="58.0384%" y="1493" width="0.8120%" height="15" fill="rgb(221,106,17)" fg:x="155535052" fg:w="2176164"/><text x="58.2884%" y="1503.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,176,164 samples, 0.81%)</title><rect x="58.0384%" y="1477" width="0.8120%" height="15" fill="rgb(251,142,44)" fg:x="155535052" fg:w="2176164"/><text x="58.2884%" y="1487.50"></text></g><g><title>alloc::slice::hack::to_vec (2,176,164 samples, 0.81%)</title><rect x="58.0384%" y="1461" width="0.8120%" height="15" fill="rgb(238,13,15)" fg:x="155535052" fg:w="2176164"/><text x="58.2884%" y="1471.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,176,164 samples, 0.81%)</title><rect x="58.0384%" y="1445" width="0.8120%" height="15" fill="rgb(208,107,27)" fg:x="155535052" fg:w="2176164"/><text x="58.2884%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,176,164 samples, 0.81%)</title><rect x="58.0384%" y="1429" width="0.8120%" height="15" fill="rgb(205,136,37)" fg:x="155535052" fg:w="2176164"/><text x="58.2884%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,176,164 samples, 0.81%)</title><rect x="58.0384%" y="1413" width="0.8120%" height="15" fill="rgb(250,205,27)" fg:x="155535052" fg:w="2176164"/><text x="58.2884%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,176,164 samples, 0.81%)</title><rect x="58.0384%" y="1397" width="0.8120%" height="15" fill="rgb(210,80,43)" fg:x="155535052" fg:w="2176164"/><text x="58.2884%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,176,164 samples, 0.81%)</title><rect x="58.0384%" y="1381" width="0.8120%" height="15" fill="rgb(247,160,36)" fg:x="155535052" fg:w="2176164"/><text x="58.2884%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,176,164 samples, 0.81%)</title><rect x="58.0384%" y="1365" width="0.8120%" height="15" fill="rgb(234,13,49)" fg:x="155535052" fg:w="2176164"/><text x="58.2884%" y="1375.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,176,164 samples, 0.81%)</title><rect x="58.0384%" y="1349" width="0.8120%" height="15" fill="rgb(234,122,0)" fg:x="155535052" fg:w="2176164"/><text x="58.2884%" y="1359.50"></text></g><g><title>alloc::alloc::alloc (2,176,164 samples, 0.81%)</title><rect x="58.0384%" y="1333" width="0.8120%" height="15" fill="rgb(207,146,38)" fg:x="155535052" fg:w="2176164"/><text x="58.2884%" y="1343.50"></text></g><g><title>malloc (2,176,164 samples, 0.81%)</title><rect x="58.0384%" y="1317" width="0.8120%" height="15" fill="rgb(207,177,25)" fg:x="155535052" fg:w="2176164"/><text x="58.2884%" y="1327.50"></text></g><g><title>[libc.so.6] (2,176,164 samples, 0.81%)</title><rect x="58.0384%" y="1301" width="0.8120%" height="15" fill="rgb(211,178,42)" fg:x="155535052" fg:w="2176164"/><text x="58.2884%" y="1311.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (106,764,019 samples, 39.84%)</title><rect x="19.9902%" y="1877" width="39.8393%" height="15" fill="rgb(230,69,54)" fg:x="53570901" fg:w="106764019"/><text x="20.2402%" y="1887.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (106,764,019 samples, 39.84%)</title><rect x="19.9902%" y="1861" width="39.8393%" height="15" fill="rgb(214,135,41)" fg:x="53570901" fg:w="106764019"/><text x="20.2402%" y="1871.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (106,764,019 samples, 39.84%)</title><rect x="19.9902%" y="1845" width="39.8393%" height="15" fill="rgb(237,67,25)" fg:x="53570901" fg:w="106764019"/><text x="20.2402%" y="1855.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (106,764,019 samples, 39.84%)</title><rect x="19.9902%" y="1829" width="39.8393%" height="15" fill="rgb(222,189,50)" fg:x="53570901" fg:w="106764019"/><text x="20.2402%" y="1839.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (106,764,019 samples, 39.84%)</title><rect x="19.9902%" y="1813" width="39.8393%" height="15" fill="rgb(245,148,34)" fg:x="53570901" fg:w="106764019"/><text x="20.2402%" y="1823.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (106,764,019 samples, 39.84%)</title><rect x="19.9902%" y="1797" width="39.8393%" height="15" fill="rgb(222,29,6)" fg:x="53570901" fg:w="106764019"/><text x="20.2402%" y="1807.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (106,764,019 samples, 39.84%)</title><rect x="19.9902%" y="1781" width="39.8393%" height="15" fill="rgb(221,189,43)" fg:x="53570901" fg:w="106764019"/><text x="20.2402%" y="1791.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (106,764,019 samples, 39.84%)</title><rect x="19.9902%" y="1765" width="39.8393%" height="15" fill="rgb(207,36,27)" fg:x="53570901" fg:w="106764019"/><text x="20.2402%" y="1775.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (106,764,019 samples, 39.84%)</title><rect x="19.9902%" y="1749" width="39.8393%" height="15" fill="rgb(217,90,24)" fg:x="53570901" fg:w="106764019"/><text x="20.2402%" y="1759.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (106,764,019 samples, 39.84%)</title><rect x="19.9902%" y="1733" width="39.8393%" height="15" fill="rgb(224,66,35)" fg:x="53570901" fg:w="106764019"/><text x="20.2402%" y="1743.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (106,764,019 samples, 39.84%)</title><rect x="19.9902%" y="1717" width="39.8393%" height="15" fill="rgb(221,13,50)" fg:x="53570901" fg:w="106764019"/><text x="20.2402%" y="1727.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (106,764,019 samples, 39.84%)</title><rect x="19.9902%" y="1701" width="39.8393%" height="15" fill="rgb(236,68,49)" fg:x="53570901" fg:w="106764019"/><text x="20.2402%" y="1711.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (106,764,019 samples, 39.84%)</title><rect x="19.9902%" y="1685" width="39.8393%" height="15" fill="rgb(229,146,28)" fg:x="53570901" fg:w="106764019"/><text x="20.2402%" y="1695.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (106,764,019 samples, 39.84%)</title><rect x="19.9902%" y="1669" width="39.8393%" height="15" fill="rgb(225,31,38)" fg:x="53570901" fg:w="106764019"/><text x="20.2402%" y="1679.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (106,764,019 samples, 39.84%)</title><rect x="19.9902%" y="1653" width="39.8393%" height="15" fill="rgb(250,208,3)" fg:x="53570901" fg:w="106764019"/><text x="20.2402%" y="1663.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (106,764,019 samples, 39.84%)</title><rect x="19.9902%" y="1637" width="39.8393%" height="15" fill="rgb(246,54,23)" fg:x="53570901" fg:w="106764019"/><text x="20.2402%" y="1647.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (7,500,023 samples, 2.80%)</title><rect x="57.0308%" y="1621" width="2.7987%" height="15" fill="rgb(243,76,11)" fg:x="152834897" fg:w="7500023"/><text x="57.2808%" y="1631.50">&lt;s..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (7,500,023 samples, 2.80%)</title><rect x="57.0308%" y="1605" width="2.7987%" height="15" fill="rgb(245,21,50)" fg:x="152834897" fg:w="7500023"/><text x="57.2808%" y="1615.50">&lt;h..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4,799,868 samples, 1.79%)</title><rect x="58.0384%" y="1589" width="1.7911%" height="15" fill="rgb(228,9,43)" fg:x="155535052" fg:w="4799868"/><text x="58.2884%" y="1599.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,799,868 samples, 1.79%)</title><rect x="58.0384%" y="1573" width="1.7911%" height="15" fill="rgb(208,100,47)" fg:x="155535052" fg:w="4799868"/><text x="58.2884%" y="1583.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2,623,704 samples, 0.98%)</title><rect x="58.8505%" y="1557" width="0.9790%" height="15" fill="rgb(232,26,8)" fg:x="157711216" fg:w="2623704"/><text x="59.1005%" y="1567.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2,623,704 samples, 0.98%)</title><rect x="58.8505%" y="1541" width="0.9790%" height="15" fill="rgb(216,166,38)" fg:x="157711216" fg:w="2623704"/><text x="59.1005%" y="1551.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2,623,704 samples, 0.98%)</title><rect x="58.8505%" y="1525" width="0.9790%" height="15" fill="rgb(251,202,51)" fg:x="157711216" fg:w="2623704"/><text x="59.1005%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,623,704 samples, 0.98%)</title><rect x="58.8505%" y="1509" width="0.9790%" height="15" fill="rgb(254,216,34)" fg:x="157711216" fg:w="2623704"/><text x="59.1005%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,623,704 samples, 0.98%)</title><rect x="58.8505%" y="1493" width="0.9790%" height="15" fill="rgb(251,32,27)" fg:x="157711216" fg:w="2623704"/><text x="59.1005%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (2,623,704 samples, 0.98%)</title><rect x="58.8505%" y="1477" width="0.9790%" height="15" fill="rgb(208,127,28)" fg:x="157711216" fg:w="2623704"/><text x="59.1005%" y="1487.50"></text></g><g><title>__rust_alloc (2,623,704 samples, 0.98%)</title><rect x="58.8505%" y="1461" width="0.9790%" height="15" fill="rgb(224,137,22)" fg:x="157711216" fg:w="2623704"/><text x="59.1005%" y="1471.50"></text></g><g><title>alloc::fmt::format (3,015,734 samples, 1.13%)</title><rect x="59.8295%" y="1877" width="1.1253%" height="15" fill="rgb(254,70,32)" fg:x="160334920" fg:w="3015734"/><text x="60.0795%" y="1887.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (3,015,734 samples, 1.13%)</title><rect x="59.8295%" y="1861" width="1.1253%" height="15" fill="rgb(229,75,37)" fg:x="160334920" fg:w="3015734"/><text x="60.0795%" y="1871.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (3,015,734 samples, 1.13%)</title><rect x="59.8295%" y="1845" width="1.1253%" height="15" fill="rgb(252,64,23)" fg:x="160334920" fg:w="3015734"/><text x="60.0795%" y="1855.50"></text></g><g><title>alloc::fmt::format::format_inner (3,015,734 samples, 1.13%)</title><rect x="59.8295%" y="1829" width="1.1253%" height="15" fill="rgb(232,162,48)" fg:x="160334920" fg:w="3015734"/><text x="60.0795%" y="1839.50"></text></g><g><title>core::fmt::Write::write_fmt (3,015,734 samples, 1.13%)</title><rect x="59.8295%" y="1813" width="1.1253%" height="15" fill="rgb(246,160,12)" fg:x="160334920" fg:w="3015734"/><text x="60.0795%" y="1823.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (3,015,734 samples, 1.13%)</title><rect x="59.8295%" y="1797" width="1.1253%" height="15" fill="rgb(247,166,0)" fg:x="160334920" fg:w="3015734"/><text x="60.0795%" y="1807.50"></text></g><g><title>core::fmt::write (3,015,734 samples, 1.13%)</title><rect x="59.8295%" y="1781" width="1.1253%" height="15" fill="rgb(249,219,21)" fg:x="160334920" fg:w="3015734"/><text x="60.0795%" y="1791.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3,015,734 samples, 1.13%)</title><rect x="59.8295%" y="1765" width="1.1253%" height="15" fill="rgb(205,209,3)" fg:x="160334920" fg:w="3015734"/><text x="60.0795%" y="1775.50"></text></g><g><title>alloc::string::String::push_str (3,015,734 samples, 1.13%)</title><rect x="59.8295%" y="1749" width="1.1253%" height="15" fill="rgb(243,44,1)" fg:x="160334920" fg:w="3015734"/><text x="60.0795%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3,015,734 samples, 1.13%)</title><rect x="59.8295%" y="1733" width="1.1253%" height="15" fill="rgb(206,159,16)" fg:x="160334920" fg:w="3015734"/><text x="60.0795%" y="1743.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3,015,734 samples, 1.13%)</title><rect x="59.8295%" y="1717" width="1.1253%" height="15" fill="rgb(244,77,30)" fg:x="160334920" fg:w="3015734"/><text x="60.0795%" y="1727.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3,015,734 samples, 1.13%)</title><rect x="59.8295%" y="1701" width="1.1253%" height="15" fill="rgb(218,69,12)" fg:x="160334920" fg:w="3015734"/><text x="60.0795%" y="1711.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3,015,734 samples, 1.13%)</title><rect x="59.8295%" y="1685" width="1.1253%" height="15" fill="rgb(212,87,7)" fg:x="160334920" fg:w="3015734"/><text x="60.0795%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,015,734 samples, 1.13%)</title><rect x="59.8295%" y="1669" width="1.1253%" height="15" fill="rgb(245,114,25)" fg:x="160334920" fg:w="3015734"/><text x="60.0795%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (3,015,734 samples, 1.13%)</title><rect x="59.8295%" y="1653" width="1.1253%" height="15" fill="rgb(210,61,42)" fg:x="160334920" fg:w="3015734"/><text x="60.0795%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3,015,734 samples, 1.13%)</title><rect x="59.8295%" y="1637" width="1.1253%" height="15" fill="rgb(211,52,33)" fg:x="160334920" fg:w="3015734"/><text x="60.0795%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,015,734 samples, 1.13%)</title><rect x="59.8295%" y="1621" width="1.1253%" height="15" fill="rgb(234,58,33)" fg:x="160334920" fg:w="3015734"/><text x="60.0795%" y="1631.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (3,015,734 samples, 1.13%)</title><rect x="59.8295%" y="1605" width="1.1253%" height="15" fill="rgb(220,115,36)" fg:x="160334920" fg:w="3015734"/><text x="60.0795%" y="1615.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (3,037,866 samples, 1.13%)</title><rect x="60.9548%" y="1829" width="1.1336%" height="15" fill="rgb(243,153,54)" fg:x="163350654" fg:w="3037866"/><text x="61.2048%" y="1839.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (3,037,866 samples, 1.13%)</title><rect x="60.9548%" y="1813" width="1.1336%" height="15" fill="rgb(251,47,18)" fg:x="163350654" fg:w="3037866"/><text x="61.2048%" y="1823.50"></text></g><g><title>alloc::string::String::new (3,037,866 samples, 1.13%)</title><rect x="60.9548%" y="1797" width="1.1336%" height="15" fill="rgb(242,102,42)" fg:x="163350654" fg:w="3037866"/><text x="61.2048%" y="1807.50"></text></g><g><title>benchmark::json_to_html_node (5,350,338 samples, 2.00%)</title><rect x="60.9548%" y="1861" width="1.9965%" height="15" fill="rgb(234,31,38)" fg:x="163350654" fg:w="5350338"/><text x="61.2048%" y="1871.50">b..</text></g><g><title>benchmark::json_to_html_node (5,350,338 samples, 2.00%)</title><rect x="60.9548%" y="1845" width="1.9965%" height="15" fill="rgb(221,117,51)" fg:x="163350654" fg:w="5350338"/><text x="61.2048%" y="1855.50">b..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,312,472 samples, 0.86%)</title><rect x="62.0884%" y="1829" width="0.8629%" height="15" fill="rgb(212,20,18)" fg:x="166388520" fg:w="2312472"/><text x="62.3384%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,312,472 samples, 0.86%)</title><rect x="62.0884%" y="1813" width="0.8629%" height="15" fill="rgb(245,133,36)" fg:x="166388520" fg:w="2312472"/><text x="62.3384%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,312,472 samples, 0.86%)</title><rect x="62.0884%" y="1797" width="0.8629%" height="15" fill="rgb(212,6,19)" fg:x="166388520" fg:w="2312472"/><text x="62.3384%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,312,472 samples, 0.86%)</title><rect x="62.0884%" y="1781" width="0.8629%" height="15" fill="rgb(218,1,36)" fg:x="166388520" fg:w="2312472"/><text x="62.3384%" y="1791.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,312,472 samples, 0.86%)</title><rect x="62.0884%" y="1765" width="0.8629%" height="15" fill="rgb(246,84,54)" fg:x="166388520" fg:w="2312472"/><text x="62.3384%" y="1775.50"></text></g><g><title>malloc (2,312,472 samples, 0.86%)</title><rect x="62.0884%" y="1749" width="0.8629%" height="15" fill="rgb(242,110,6)" fg:x="166388520" fg:w="2312472"/><text x="62.3384%" y="1759.50"></text></g><g><title>[libc.so.6] (2,312,472 samples, 0.86%)</title><rect x="62.0884%" y="1733" width="0.8629%" height="15" fill="rgb(214,47,5)" fg:x="166388520" fg:w="2312472"/><text x="62.3384%" y="1743.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2,681,695 samples, 1.00%)</title><rect x="62.9513%" y="1861" width="1.0007%" height="15" fill="rgb(218,159,25)" fg:x="168700992" fg:w="2681695"/><text x="63.2013%" y="1871.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2,681,695 samples, 1.00%)</title><rect x="62.9513%" y="1845" width="1.0007%" height="15" fill="rgb(215,211,28)" fg:x="168700992" fg:w="2681695"/><text x="63.2013%" y="1855.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (2,681,695 samples, 1.00%)</title><rect x="62.9513%" y="1829" width="1.0007%" height="15" fill="rgb(238,59,32)" fg:x="168700992" fg:w="2681695"/><text x="63.2013%" y="1839.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2,681,695 samples, 1.00%)</title><rect x="62.9513%" y="1813" width="1.0007%" height="15" fill="rgb(226,82,3)" fg:x="168700992" fg:w="2681695"/><text x="63.2013%" y="1823.50"></text></g><g><title>benchmark::apply_frame_modifications (11,247,477 samples, 4.20%)</title><rect x="60.9548%" y="1877" width="4.1970%" height="15" fill="rgb(240,164,32)" fg:x="163350654" fg:w="11247477"/><text x="61.2048%" y="1887.50">bench..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,215,444 samples, 1.20%)</title><rect x="63.9520%" y="1861" width="1.1999%" height="15" fill="rgb(232,46,7)" fg:x="171382687" fg:w="3215444"/><text x="64.2020%" y="1871.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,215,444 samples, 1.20%)</title><rect x="63.9520%" y="1845" width="1.1999%" height="15" fill="rgb(229,129,53)" fg:x="171382687" fg:w="3215444"/><text x="64.2020%" y="1855.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,215,444 samples, 1.20%)</title><rect x="63.9520%" y="1829" width="1.1999%" height="15" fill="rgb(234,188,29)" fg:x="171382687" fg:w="3215444"/><text x="64.2020%" y="1839.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,215,444 samples, 1.20%)</title><rect x="63.9520%" y="1813" width="1.1999%" height="15" fill="rgb(246,141,4)" fg:x="171382687" fg:w="3215444"/><text x="64.2020%" y="1823.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,215,444 samples, 1.20%)</title><rect x="63.9520%" y="1797" width="1.1999%" height="15" fill="rgb(229,23,39)" fg:x="171382687" fg:w="3215444"/><text x="64.2020%" y="1807.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,215,444 samples, 1.20%)</title><rect x="63.9520%" y="1781" width="1.1999%" height="15" fill="rgb(206,12,3)" fg:x="171382687" fg:w="3215444"/><text x="64.2020%" y="1791.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,215,444 samples, 1.20%)</title><rect x="63.9520%" y="1765" width="1.1999%" height="15" fill="rgb(252,226,20)" fg:x="171382687" fg:w="3215444"/><text x="64.2020%" y="1775.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,215,444 samples, 1.20%)</title><rect x="63.9520%" y="1749" width="1.1999%" height="15" fill="rgb(216,123,35)" fg:x="171382687" fg:w="3215444"/><text x="64.2020%" y="1759.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,215,444 samples, 1.20%)</title><rect x="63.9520%" y="1733" width="1.1999%" height="15" fill="rgb(212,68,40)" fg:x="171382687" fg:w="3215444"/><text x="64.2020%" y="1743.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,215,444 samples, 1.20%)</title><rect x="63.9520%" y="1717" width="1.1999%" height="15" fill="rgb(254,125,32)" fg:x="171382687" fg:w="3215444"/><text x="64.2020%" y="1727.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,215,444 samples, 1.20%)</title><rect x="63.9520%" y="1701" width="1.1999%" height="15" fill="rgb(253,97,22)" fg:x="171382687" fg:w="3215444"/><text x="64.2020%" y="1711.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,215,444 samples, 1.20%)</title><rect x="63.9520%" y="1685" width="1.1999%" height="15" fill="rgb(241,101,14)" fg:x="171382687" fg:w="3215444"/><text x="64.2020%" y="1695.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,215,444 samples, 1.20%)</title><rect x="63.9520%" y="1669" width="1.1999%" height="15" fill="rgb(238,103,29)" fg:x="171382687" fg:w="3215444"/><text x="64.2020%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,215,444 samples, 1.20%)</title><rect x="63.9520%" y="1653" width="1.1999%" height="15" fill="rgb(233,195,47)" fg:x="171382687" fg:w="3215444"/><text x="64.2020%" y="1663.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (3,215,444 samples, 1.20%)</title><rect x="63.9520%" y="1637" width="1.1999%" height="15" fill="rgb(246,218,30)" fg:x="171382687" fg:w="3215444"/><text x="64.2020%" y="1647.50"></text></g><g><title>benchmark::clear_dirty_flags (2,670,961 samples, 1.00%)</title><rect x="65.1519%" y="1877" width="0.9967%" height="15" fill="rgb(219,145,47)" fg:x="174598131" fg:w="2670961"/><text x="65.4019%" y="1887.50"></text></g><g><title>benchmark::clear_dirty_flags (2,670,961 samples, 1.00%)</title><rect x="65.1519%" y="1861" width="0.9967%" height="15" fill="rgb(243,12,26)" fg:x="174598131" fg:w="2670961"/><text x="65.4019%" y="1871.50"></text></g><g><title>benchmark::clear_dirty_flags (2,670,961 samples, 1.00%)</title><rect x="65.1519%" y="1845" width="0.9967%" height="15" fill="rgb(214,87,16)" fg:x="174598131" fg:w="2670961"/><text x="65.4019%" y="1855.50"></text></g><g><title>benchmark::clear_dirty_flags (2,670,961 samples, 1.00%)</title><rect x="65.1519%" y="1829" width="0.9967%" height="15" fill="rgb(208,99,42)" fg:x="174598131" fg:w="2670961"/><text x="65.4019%" y="1839.50"></text></g><g><title>benchmark::clear_dirty_flags (2,670,961 samples, 1.00%)</title><rect x="65.1519%" y="1813" width="0.9967%" height="15" fill="rgb(253,99,2)" fg:x="174598131" fg:w="2670961"/><text x="65.4019%" y="1823.50"></text></g><g><title>benchmark::clear_dirty_flags (2,670,961 samples, 1.00%)</title><rect x="65.1519%" y="1797" width="0.9967%" height="15" fill="rgb(220,168,23)" fg:x="174598131" fg:w="2670961"/><text x="65.4019%" y="1807.50"></text></g><g><title>benchmark::clear_dirty_flags (2,670,961 samples, 1.00%)</title><rect x="65.1519%" y="1781" width="0.9967%" height="15" fill="rgb(242,38,24)" fg:x="174598131" fg:w="2670961"/><text x="65.4019%" y="1791.50"></text></g><g><title>benchmark::clear_dirty_flags (2,670,961 samples, 1.00%)</title><rect x="65.1519%" y="1765" width="0.9967%" height="15" fill="rgb(225,182,9)" fg:x="174598131" fg:w="2670961"/><text x="65.4019%" y="1775.50"></text></g><g><title>benchmark::clear_dirty_flags (2,670,961 samples, 1.00%)</title><rect x="65.1519%" y="1749" width="0.9967%" height="15" fill="rgb(243,178,37)" fg:x="174598131" fg:w="2670961"/><text x="65.4019%" y="1759.50"></text></g><g><title>benchmark::clear_dirty_flags (2,670,961 samples, 1.00%)</title><rect x="65.1519%" y="1733" width="0.9967%" height="15" fill="rgb(232,139,19)" fg:x="174598131" fg:w="2670961"/><text x="65.4019%" y="1743.50"></text></g><g><title>benchmark::clear_dirty_flags (2,670,961 samples, 1.00%)</title><rect x="65.1519%" y="1717" width="0.9967%" height="15" fill="rgb(225,201,24)" fg:x="174598131" fg:w="2670961"/><text x="65.4019%" y="1727.50"></text></g><g><title>benchmark::clear_dirty_flags (2,670,961 samples, 1.00%)</title><rect x="65.1519%" y="1701" width="0.9967%" height="15" fill="rgb(221,47,46)" fg:x="174598131" fg:w="2670961"/><text x="65.4019%" y="1711.50"></text></g><g><title>benchmark::clear_dirty_flags (2,670,961 samples, 1.00%)</title><rect x="65.1519%" y="1685" width="0.9967%" height="15" fill="rgb(249,23,13)" fg:x="174598131" fg:w="2670961"/><text x="65.4019%" y="1695.50"></text></g><g><title>benchmark::clear_dirty_flags (2,670,961 samples, 1.00%)</title><rect x="65.1519%" y="1669" width="0.9967%" height="15" fill="rgb(219,9,5)" fg:x="174598131" fg:w="2670961"/><text x="65.4019%" y="1679.50"></text></g><g><title>benchmark::clear_dirty_flags (2,670,961 samples, 1.00%)</title><rect x="65.1519%" y="1653" width="0.9967%" height="15" fill="rgb(254,171,16)" fg:x="174598131" fg:w="2670961"/><text x="65.4019%" y="1663.50"></text></g><g><title>benchmark::clear_dirty_flags (2,670,961 samples, 1.00%)</title><rect x="65.1519%" y="1637" width="0.9967%" height="15" fill="rgb(230,171,20)" fg:x="174598131" fg:w="2670961"/><text x="65.4019%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,839,529 samples, 1.06%)</title><rect x="66.1485%" y="1477" width="1.0596%" height="15" fill="rgb(210,71,41)" fg:x="177269092" fg:w="2839529"/><text x="66.3985%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,839,529 samples, 1.06%)</title><rect x="66.1485%" y="1461" width="1.0596%" height="15" fill="rgb(206,173,20)" fg:x="177269092" fg:w="2839529"/><text x="66.3985%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,839,529 samples, 1.06%)</title><rect x="66.1485%" y="1445" width="1.0596%" height="15" fill="rgb(233,88,34)" fg:x="177269092" fg:w="2839529"/><text x="66.3985%" y="1455.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,839,529 samples, 1.06%)</title><rect x="66.1485%" y="1429" width="1.0596%" height="15" fill="rgb(223,209,46)" fg:x="177269092" fg:w="2839529"/><text x="66.3985%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,839,529 samples, 1.06%)</title><rect x="66.1485%" y="1413" width="1.0596%" height="15" fill="rgb(250,43,18)" fg:x="177269092" fg:w="2839529"/><text x="66.3985%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,839,529 samples, 1.06%)</title><rect x="66.1485%" y="1397" width="1.0596%" height="15" fill="rgb(208,13,10)" fg:x="177269092" fg:w="2839529"/><text x="66.3985%" y="1407.50"></text></g><g><title>alloc::alloc::dealloc (2,839,529 samples, 1.06%)</title><rect x="66.1485%" y="1381" width="1.0596%" height="15" fill="rgb(212,200,36)" fg:x="177269092" fg:w="2839529"/><text x="66.3985%" y="1391.50"></text></g><g><title>cfree (2,839,529 samples, 1.06%)</title><rect x="66.1485%" y="1365" width="1.0596%" height="15" fill="rgb(225,90,30)" fg:x="177269092" fg:w="2839529"/><text x="66.3985%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="901" width="0.9315%" height="15" fill="rgb(236,182,39)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="885" width="0.9315%" height="15" fill="rgb(212,144,35)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="869" width="0.9315%" height="15" fill="rgb(228,63,44)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="853" width="0.9315%" height="15" fill="rgb(228,109,6)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="837" width="0.9315%" height="15" fill="rgb(238,117,24)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="821" width="0.9315%" height="15" fill="rgb(242,26,26)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="805" width="0.9315%" height="15" fill="rgb(221,92,48)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="789" width="0.9315%" height="15" fill="rgb(209,209,32)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="773" width="0.9315%" height="15" fill="rgb(221,70,22)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="757" width="0.9315%" height="15" fill="rgb(248,145,5)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="741" width="0.9315%" height="15" fill="rgb(226,116,26)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="725" width="0.9315%" height="15" fill="rgb(244,5,17)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="709" width="0.9315%" height="15" fill="rgb(252,159,33)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="693" width="0.9315%" height="15" fill="rgb(206,71,0)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="677" width="0.9315%" height="15" fill="rgb(233,118,54)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="661" width="0.9315%" height="15" fill="rgb(234,83,48)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="645" width="0.9315%" height="15" fill="rgb(228,3,54)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="629" width="0.9315%" height="15" fill="rgb(226,155,13)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="613" width="0.9315%" height="15" fill="rgb(241,28,37)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="597" width="0.9315%" height="15" fill="rgb(233,93,10)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="581" width="0.9315%" height="15" fill="rgb(225,113,19)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="565" width="0.9315%" height="15" fill="rgb(241,2,18)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="549" width="0.9315%" height="15" fill="rgb(228,207,21)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="533" width="0.9315%" height="15" fill="rgb(213,211,35)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="517" width="0.9315%" height="15" fill="rgb(209,83,10)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="527.50"></text></g><g><title>cfree (2,496,406 samples, 0.93%)</title><rect x="67.2081%" y="501" width="0.9315%" height="15" fill="rgb(209,164,1)" fg:x="180108621" fg:w="2496406"/><text x="67.4581%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,271,126 samples, 1.97%)</title><rect x="67.2081%" y="1029" width="1.9669%" height="15" fill="rgb(213,184,43)" fg:x="180108621" fg:w="5271126"/><text x="67.4581%" y="1039.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,271,126 samples, 1.97%)</title><rect x="67.2081%" y="1013" width="1.9669%" height="15" fill="rgb(231,61,34)" fg:x="180108621" fg:w="5271126"/><text x="67.4581%" y="1023.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,271,126 samples, 1.97%)</title><rect x="67.2081%" y="997" width="1.9669%" height="15" fill="rgb(235,75,3)" fg:x="180108621" fg:w="5271126"/><text x="67.4581%" y="1007.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,271,126 samples, 1.97%)</title><rect x="67.2081%" y="981" width="1.9669%" height="15" fill="rgb(220,106,47)" fg:x="180108621" fg:w="5271126"/><text x="67.4581%" y="991.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,271,126 samples, 1.97%)</title><rect x="67.2081%" y="965" width="1.9669%" height="15" fill="rgb(210,196,33)" fg:x="180108621" fg:w="5271126"/><text x="67.4581%" y="975.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,271,126 samples, 1.97%)</title><rect x="67.2081%" y="949" width="1.9669%" height="15" fill="rgb(229,154,42)" fg:x="180108621" fg:w="5271126"/><text x="67.4581%" y="959.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,271,126 samples, 1.97%)</title><rect x="67.2081%" y="933" width="1.9669%" height="15" fill="rgb(228,114,26)" fg:x="180108621" fg:w="5271126"/><text x="67.4581%" y="943.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,271,126 samples, 1.97%)</title><rect x="67.2081%" y="917" width="1.9669%" height="15" fill="rgb(208,144,1)" fg:x="180108621" fg:w="5271126"/><text x="67.4581%" y="927.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,774,720 samples, 1.04%)</title><rect x="68.1397%" y="901" width="1.0354%" height="15" fill="rgb(239,112,37)" fg:x="182605027" fg:w="2774720"/><text x="68.3897%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,774,720 samples, 1.04%)</title><rect x="68.1397%" y="885" width="1.0354%" height="15" fill="rgb(210,96,50)" fg:x="182605027" fg:w="2774720"/><text x="68.3897%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,774,720 samples, 1.04%)</title><rect x="68.1397%" y="869" width="1.0354%" height="15" fill="rgb(222,178,2)" fg:x="182605027" fg:w="2774720"/><text x="68.3897%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,774,720 samples, 1.04%)</title><rect x="68.1397%" y="853" width="1.0354%" height="15" fill="rgb(226,74,18)" fg:x="182605027" fg:w="2774720"/><text x="68.3897%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,774,720 samples, 1.04%)</title><rect x="68.1397%" y="837" width="1.0354%" height="15" fill="rgb(225,67,54)" fg:x="182605027" fg:w="2774720"/><text x="68.3897%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,774,720 samples, 1.04%)</title><rect x="68.1397%" y="821" width="1.0354%" height="15" fill="rgb(251,92,32)" fg:x="182605027" fg:w="2774720"/><text x="68.3897%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,774,720 samples, 1.04%)</title><rect x="68.1397%" y="805" width="1.0354%" height="15" fill="rgb(228,149,22)" fg:x="182605027" fg:w="2774720"/><text x="68.3897%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (2,774,720 samples, 1.04%)</title><rect x="68.1397%" y="789" width="1.0354%" height="15" fill="rgb(243,54,13)" fg:x="182605027" fg:w="2774720"/><text x="68.3897%" y="799.50"></text></g><g><title>__rdl_dealloc (2,774,720 samples, 1.04%)</title><rect x="68.1397%" y="773" width="1.0354%" height="15" fill="rgb(243,180,28)" fg:x="182605027" fg:w="2774720"/><text x="68.3897%" y="783.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2,774,720 samples, 1.04%)</title><rect x="68.1397%" y="757" width="1.0354%" height="15" fill="rgb(208,167,24)" fg:x="182605027" fg:w="2774720"/><text x="68.3897%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (8,009,881 samples, 2.99%)</title><rect x="67.2081%" y="1093" width="2.9889%" height="15" fill="rgb(245,73,45)" fg:x="180108621" fg:w="8009881"/><text x="67.4581%" y="1103.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,009,881 samples, 2.99%)</title><rect x="67.2081%" y="1077" width="2.9889%" height="15" fill="rgb(237,203,48)" fg:x="180108621" fg:w="8009881"/><text x="67.4581%" y="1087.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (8,009,881 samples, 2.99%)</title><rect x="67.2081%" y="1061" width="2.9889%" height="15" fill="rgb(211,197,16)" fg:x="180108621" fg:w="8009881"/><text x="67.4581%" y="1071.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (8,009,881 samples, 2.99%)</title><rect x="67.2081%" y="1045" width="2.9889%" height="15" fill="rgb(243,99,51)" fg:x="180108621" fg:w="8009881"/><text x="67.4581%" y="1055.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,738,755 samples, 1.02%)</title><rect x="69.1751%" y="1029" width="1.0220%" height="15" fill="rgb(215,123,29)" fg:x="185379747" fg:w="2738755"/><text x="69.4251%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,738,755 samples, 1.02%)</title><rect x="69.1751%" y="1013" width="1.0220%" height="15" fill="rgb(239,186,37)" fg:x="185379747" fg:w="2738755"/><text x="69.4251%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,738,755 samples, 1.02%)</title><rect x="69.1751%" y="997" width="1.0220%" height="15" fill="rgb(252,136,39)" fg:x="185379747" fg:w="2738755"/><text x="69.4251%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,738,755 samples, 1.02%)</title><rect x="69.1751%" y="981" width="1.0220%" height="15" fill="rgb(223,213,32)" fg:x="185379747" fg:w="2738755"/><text x="69.4251%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,738,755 samples, 1.02%)</title><rect x="69.1751%" y="965" width="1.0220%" height="15" fill="rgb(233,115,5)" fg:x="185379747" fg:w="2738755"/><text x="69.4251%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,738,755 samples, 1.02%)</title><rect x="69.1751%" y="949" width="1.0220%" height="15" fill="rgb(207,226,44)" fg:x="185379747" fg:w="2738755"/><text x="69.4251%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,738,755 samples, 1.02%)</title><rect x="69.1751%" y="933" width="1.0220%" height="15" fill="rgb(208,126,0)" fg:x="185379747" fg:w="2738755"/><text x="69.4251%" y="943.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2,738,755 samples, 1.02%)</title><rect x="69.1751%" y="917" width="1.0220%" height="15" fill="rgb(244,66,21)" fg:x="185379747" fg:w="2738755"/><text x="69.4251%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2,738,755 samples, 1.02%)</title><rect x="69.1751%" y="901" width="1.0220%" height="15" fill="rgb(222,97,12)" fg:x="185379747" fg:w="2738755"/><text x="69.4251%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (2,738,755 samples, 1.02%)</title><rect x="69.1751%" y="885" width="1.0220%" height="15" fill="rgb(219,213,19)" fg:x="185379747" fg:w="2738755"/><text x="69.4251%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,738,755 samples, 1.02%)</title><rect x="69.1751%" y="869" width="1.0220%" height="15" fill="rgb(252,169,30)" fg:x="185379747" fg:w="2738755"/><text x="69.4251%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,738,755 samples, 1.02%)</title><rect x="69.1751%" y="853" width="1.0220%" height="15" fill="rgb(206,32,51)" fg:x="185379747" fg:w="2738755"/><text x="69.4251%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,738,755 samples, 1.02%)</title><rect x="69.1751%" y="837" width="1.0220%" height="15" fill="rgb(250,172,42)" fg:x="185379747" fg:w="2738755"/><text x="69.4251%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,738,755 samples, 1.02%)</title><rect x="69.1751%" y="821" width="1.0220%" height="15" fill="rgb(209,34,43)" fg:x="185379747" fg:w="2738755"/><text x="69.4251%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,738,755 samples, 1.02%)</title><rect x="69.1751%" y="805" width="1.0220%" height="15" fill="rgb(223,11,35)" fg:x="185379747" fg:w="2738755"/><text x="69.4251%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,738,755 samples, 1.02%)</title><rect x="69.1751%" y="789" width="1.0220%" height="15" fill="rgb(251,219,26)" fg:x="185379747" fg:w="2738755"/><text x="69.4251%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (2,738,755 samples, 1.02%)</title><rect x="69.1751%" y="773" width="1.0220%" height="15" fill="rgb(231,119,3)" fg:x="185379747" fg:w="2738755"/><text x="69.4251%" y="783.50"></text></g><g><title>cfree (2,738,755 samples, 1.02%)</title><rect x="69.1751%" y="757" width="1.0220%" height="15" fill="rgb(216,97,11)" fg:x="185379747" fg:w="2738755"/><text x="69.4251%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (11,031,440 samples, 4.12%)</title><rect x="67.2081%" y="1221" width="4.1164%" height="15" fill="rgb(223,59,9)" fg:x="180108621" fg:w="11031440"/><text x="67.4581%" y="1231.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11,031,440 samples, 4.12%)</title><rect x="67.2081%" y="1205" width="4.1164%" height="15" fill="rgb(233,93,31)" fg:x="180108621" fg:w="11031440"/><text x="67.4581%" y="1215.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (11,031,440 samples, 4.12%)</title><rect x="67.2081%" y="1189" width="4.1164%" height="15" fill="rgb(239,81,33)" fg:x="180108621" fg:w="11031440"/><text x="67.4581%" y="1199.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (11,031,440 samples, 4.12%)</title><rect x="67.2081%" y="1173" width="4.1164%" height="15" fill="rgb(213,120,34)" fg:x="180108621" fg:w="11031440"/><text x="67.4581%" y="1183.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (11,031,440 samples, 4.12%)</title><rect x="67.2081%" y="1157" width="4.1164%" height="15" fill="rgb(243,49,53)" fg:x="180108621" fg:w="11031440"/><text x="67.4581%" y="1167.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11,031,440 samples, 4.12%)</title><rect x="67.2081%" y="1141" width="4.1164%" height="15" fill="rgb(247,216,33)" fg:x="180108621" fg:w="11031440"/><text x="67.4581%" y="1151.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (11,031,440 samples, 4.12%)</title><rect x="67.2081%" y="1125" width="4.1164%" height="15" fill="rgb(226,26,14)" fg:x="180108621" fg:w="11031440"/><text x="67.4581%" y="1135.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (11,031,440 samples, 4.12%)</title><rect x="67.2081%" y="1109" width="4.1164%" height="15" fill="rgb(215,49,53)" fg:x="180108621" fg:w="11031440"/><text x="67.4581%" y="1119.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (3,021,559 samples, 1.13%)</title><rect x="70.1970%" y="1093" width="1.1275%" height="15" fill="rgb(245,162,40)" fg:x="188118502" fg:w="3021559"/><text x="70.4470%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (3,021,559 samples, 1.13%)</title><rect x="70.1970%" y="1077" width="1.1275%" height="15" fill="rgb(229,68,17)" fg:x="188118502" fg:w="3021559"/><text x="70.4470%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (3,021,559 samples, 1.13%)</title><rect x="70.1970%" y="1061" width="1.1275%" height="15" fill="rgb(213,182,10)" fg:x="188118502" fg:w="3021559"/><text x="70.4470%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,021,559 samples, 1.13%)</title><rect x="70.1970%" y="1045" width="1.1275%" height="15" fill="rgb(245,125,30)" fg:x="188118502" fg:w="3021559"/><text x="70.4470%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,021,559 samples, 1.13%)</title><rect x="70.1970%" y="1029" width="1.1275%" height="15" fill="rgb(232,202,2)" fg:x="188118502" fg:w="3021559"/><text x="70.4470%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,021,559 samples, 1.13%)</title><rect x="70.1970%" y="1013" width="1.1275%" height="15" fill="rgb(237,140,51)" fg:x="188118502" fg:w="3021559"/><text x="70.4470%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (3,021,559 samples, 1.13%)</title><rect x="70.1970%" y="997" width="1.1275%" height="15" fill="rgb(236,157,25)" fg:x="188118502" fg:w="3021559"/><text x="70.4470%" y="1007.50"></text></g><g><title>cfree (3,021,559 samples, 1.13%)</title><rect x="70.1970%" y="981" width="1.1275%" height="15" fill="rgb(219,209,0)" fg:x="188118502" fg:w="3021559"/><text x="70.4470%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (13,700,601 samples, 5.11%)</title><rect x="67.2081%" y="1349" width="5.1124%" height="15" fill="rgb(240,116,54)" fg:x="180108621" fg:w="13700601"/><text x="67.4581%" y="1359.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,700,601 samples, 5.11%)</title><rect x="67.2081%" y="1333" width="5.1124%" height="15" fill="rgb(216,10,36)" fg:x="180108621" fg:w="13700601"/><text x="67.4581%" y="1343.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (13,700,601 samples, 5.11%)</title><rect x="67.2081%" y="1317" width="5.1124%" height="15" fill="rgb(222,72,44)" fg:x="180108621" fg:w="13700601"/><text x="67.4581%" y="1327.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (13,700,601 samples, 5.11%)</title><rect x="67.2081%" y="1301" width="5.1124%" height="15" fill="rgb(232,159,9)" fg:x="180108621" fg:w="13700601"/><text x="67.4581%" y="1311.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (13,700,601 samples, 5.11%)</title><rect x="67.2081%" y="1285" width="5.1124%" height="15" fill="rgb(210,39,32)" fg:x="180108621" fg:w="13700601"/><text x="67.4581%" y="1295.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,700,601 samples, 5.11%)</title><rect x="67.2081%" y="1269" width="5.1124%" height="15" fill="rgb(216,194,45)" fg:x="180108621" fg:w="13700601"/><text x="67.4581%" y="1279.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (13,700,601 samples, 5.11%)</title><rect x="67.2081%" y="1253" width="5.1124%" height="15" fill="rgb(218,18,35)" fg:x="180108621" fg:w="13700601"/><text x="67.4581%" y="1263.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (13,700,601 samples, 5.11%)</title><rect x="67.2081%" y="1237" width="5.1124%" height="15" fill="rgb(207,83,51)" fg:x="180108621" fg:w="13700601"/><text x="67.4581%" y="1247.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,669,161 samples, 1.00%)</title><rect x="71.3245%" y="1221" width="0.9960%" height="15" fill="rgb(225,63,43)" fg:x="191140061" fg:w="2669161"/><text x="71.5745%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (2,669,161 samples, 1.00%)</title><rect x="71.3245%" y="1205" width="0.9960%" height="15" fill="rgb(207,57,36)" fg:x="191140061" fg:w="2669161"/><text x="71.5745%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2,669,161 samples, 1.00%)</title><rect x="71.3245%" y="1189" width="0.9960%" height="15" fill="rgb(216,99,33)" fg:x="191140061" fg:w="2669161"/><text x="71.5745%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,669,161 samples, 1.00%)</title><rect x="71.3245%" y="1173" width="0.9960%" height="15" fill="rgb(225,42,16)" fg:x="191140061" fg:w="2669161"/><text x="71.5745%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,669,161 samples, 1.00%)</title><rect x="71.3245%" y="1157" width="0.9960%" height="15" fill="rgb(220,201,45)" fg:x="191140061" fg:w="2669161"/><text x="71.5745%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,669,161 samples, 1.00%)</title><rect x="71.3245%" y="1141" width="0.9960%" height="15" fill="rgb(225,33,4)" fg:x="191140061" fg:w="2669161"/><text x="71.5745%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (2,669,161 samples, 1.00%)</title><rect x="71.3245%" y="1125" width="0.9960%" height="15" fill="rgb(224,33,50)" fg:x="191140061" fg:w="2669161"/><text x="71.5745%" y="1135.50"></text></g><g><title>cfree (2,669,161 samples, 1.00%)</title><rect x="71.3245%" y="1109" width="0.9960%" height="15" fill="rgb(246,198,51)" fg:x="191140061" fg:w="2669161"/><text x="71.5745%" y="1119.50"></text></g><g><title>[libc.so.6] (2,669,161 samples, 1.00%)</title><rect x="71.3245%" y="1093" width="0.9960%" height="15" fill="rgb(205,22,4)" fg:x="191140061" fg:w="2669161"/><text x="71.5745%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (16,407,354 samples, 6.12%)</title><rect x="67.2081%" y="1413" width="6.1225%" height="15" fill="rgb(206,3,8)" fg:x="180108621" fg:w="16407354"/><text x="67.4581%" y="1423.50">core::pt..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,407,354 samples, 6.12%)</title><rect x="67.2081%" y="1397" width="6.1225%" height="15" fill="rgb(251,23,15)" fg:x="180108621" fg:w="16407354"/><text x="67.4581%" y="1407.50">&lt;alloc::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (16,407,354 samples, 6.12%)</title><rect x="67.2081%" y="1381" width="6.1225%" height="15" fill="rgb(252,88,28)" fg:x="180108621" fg:w="16407354"/><text x="67.4581%" y="1391.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (16,407,354 samples, 6.12%)</title><rect x="67.2081%" y="1365" width="6.1225%" height="15" fill="rgb(212,127,14)" fg:x="180108621" fg:w="16407354"/><text x="67.4581%" y="1375.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,706,753 samples, 1.01%)</title><rect x="72.3205%" y="1349" width="1.0100%" height="15" fill="rgb(247,145,37)" fg:x="193809222" fg:w="2706753"/><text x="72.5705%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (2,706,753 samples, 1.01%)</title><rect x="72.3205%" y="1333" width="1.0100%" height="15" fill="rgb(209,117,53)" fg:x="193809222" fg:w="2706753"/><text x="72.5705%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2,706,753 samples, 1.01%)</title><rect x="72.3205%" y="1317" width="1.0100%" height="15" fill="rgb(212,90,42)" fg:x="193809222" fg:w="2706753"/><text x="72.5705%" y="1327.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,706,753 samples, 1.01%)</title><rect x="72.3205%" y="1301" width="1.0100%" height="15" fill="rgb(218,164,37)" fg:x="193809222" fg:w="2706753"/><text x="72.5705%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,706,753 samples, 1.01%)</title><rect x="72.3205%" y="1285" width="1.0100%" height="15" fill="rgb(246,65,34)" fg:x="193809222" fg:w="2706753"/><text x="72.5705%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,706,753 samples, 1.01%)</title><rect x="72.3205%" y="1269" width="1.0100%" height="15" fill="rgb(231,100,33)" fg:x="193809222" fg:w="2706753"/><text x="72.5705%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (2,706,753 samples, 1.01%)</title><rect x="72.3205%" y="1253" width="1.0100%" height="15" fill="rgb(228,126,14)" fg:x="193809222" fg:w="2706753"/><text x="72.5705%" y="1263.50"></text></g><g><title>cfree (2,706,753 samples, 1.01%)</title><rect x="72.3205%" y="1237" width="1.0100%" height="15" fill="rgb(215,173,21)" fg:x="193809222" fg:w="2706753"/><text x="72.5705%" y="1247.50"></text></g><g><title>[libc.so.6] (2,706,753 samples, 1.01%)</title><rect x="72.3205%" y="1221" width="1.0100%" height="15" fill="rgb(210,6,40)" fg:x="193809222" fg:w="2706753"/><text x="72.5705%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (5,768,523 samples, 2.15%)</title><rect x="73.3306%" y="1413" width="2.1525%" height="15" fill="rgb(212,48,18)" fg:x="196515975" fg:w="5768523"/><text x="73.5806%" y="1423.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,780,509 samples, 1.04%)</title><rect x="74.4456%" y="1397" width="1.0376%" height="15" fill="rgb(230,214,11)" fg:x="199503989" fg:w="2780509"/><text x="74.6956%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,780,509 samples, 1.04%)</title><rect x="74.4456%" y="1381" width="1.0376%" height="15" fill="rgb(254,105,39)" fg:x="199503989" fg:w="2780509"/><text x="74.6956%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,780,509 samples, 1.04%)</title><rect x="74.4456%" y="1365" width="1.0376%" height="15" fill="rgb(245,158,5)" fg:x="199503989" fg:w="2780509"/><text x="74.6956%" y="1375.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,780,509 samples, 1.04%)</title><rect x="74.4456%" y="1349" width="1.0376%" height="15" fill="rgb(249,208,11)" fg:x="199503989" fg:w="2780509"/><text x="74.6956%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,780,509 samples, 1.04%)</title><rect x="74.4456%" y="1333" width="1.0376%" height="15" fill="rgb(210,39,28)" fg:x="199503989" fg:w="2780509"/><text x="74.6956%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,780,509 samples, 1.04%)</title><rect x="74.4456%" y="1317" width="1.0376%" height="15" fill="rgb(211,56,53)" fg:x="199503989" fg:w="2780509"/><text x="74.6956%" y="1327.50"></text></g><g><title>alloc::alloc::dealloc (2,780,509 samples, 1.04%)</title><rect x="74.4456%" y="1301" width="1.0376%" height="15" fill="rgb(226,201,30)" fg:x="199503989" fg:w="2780509"/><text x="74.6956%" y="1311.50"></text></g><g><title>cfree (2,780,509 samples, 1.04%)</title><rect x="74.4456%" y="1285" width="1.0376%" height="15" fill="rgb(239,101,34)" fg:x="199503989" fg:w="2780509"/><text x="74.6956%" y="1295.50"></text></g><g><title>[libc.so.6] (2,780,509 samples, 1.04%)</title><rect x="74.4456%" y="1269" width="1.0376%" height="15" fill="rgb(226,209,5)" fg:x="199503989" fg:w="2780509"/><text x="74.6956%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24,908,936 samples, 9.29%)</title><rect x="67.2081%" y="1461" width="9.2949%" height="15" fill="rgb(250,105,47)" fg:x="180108621" fg:w="24908936"/><text x="67.4581%" y="1471.50">&lt;alloc::vec::..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (24,908,936 samples, 9.29%)</title><rect x="67.2081%" y="1445" width="9.2949%" height="15" fill="rgb(230,72,3)" fg:x="180108621" fg:w="24908936"/><text x="67.4581%" y="1455.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (24,908,936 samples, 9.29%)</title><rect x="67.2081%" y="1429" width="9.2949%" height="15" fill="rgb(232,218,39)" fg:x="180108621" fg:w="24908936"/><text x="67.4581%" y="1439.50">core::ptr::dr..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,733,059 samples, 1.02%)</title><rect x="75.4831%" y="1413" width="1.0198%" height="15" fill="rgb(248,166,6)" fg:x="202284498" fg:w="2733059"/><text x="75.7331%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (2,733,059 samples, 1.02%)</title><rect x="75.4831%" y="1397" width="1.0198%" height="15" fill="rgb(247,89,20)" fg:x="202284498" fg:w="2733059"/><text x="75.7331%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2,733,059 samples, 1.02%)</title><rect x="75.4831%" y="1381" width="1.0198%" height="15" fill="rgb(248,130,54)" fg:x="202284498" fg:w="2733059"/><text x="75.7331%" y="1391.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,733,059 samples, 1.02%)</title><rect x="75.4831%" y="1365" width="1.0198%" height="15" fill="rgb(234,196,4)" fg:x="202284498" fg:w="2733059"/><text x="75.7331%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,733,059 samples, 1.02%)</title><rect x="75.4831%" y="1349" width="1.0198%" height="15" fill="rgb(250,143,31)" fg:x="202284498" fg:w="2733059"/><text x="75.7331%" y="1359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,733,059 samples, 1.02%)</title><rect x="75.4831%" y="1333" width="1.0198%" height="15" fill="rgb(211,110,34)" fg:x="202284498" fg:w="2733059"/><text x="75.7331%" y="1343.50"></text></g><g><title>alloc::alloc::dealloc (2,733,059 samples, 1.02%)</title><rect x="75.4831%" y="1317" width="1.0198%" height="15" fill="rgb(215,124,48)" fg:x="202284498" fg:w="2733059"/><text x="75.7331%" y="1327.50"></text></g><g><title>cfree (2,733,059 samples, 1.02%)</title><rect x="75.4831%" y="1301" width="1.0198%" height="15" fill="rgb(216,46,13)" fg:x="202284498" fg:w="2733059"/><text x="75.7331%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (30,715,526 samples, 11.46%)</title><rect x="67.2081%" y="1477" width="11.4616%" height="15" fill="rgb(205,184,25)" fg:x="180108621" fg:w="30715526"/><text x="67.4581%" y="1487.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,806,590 samples, 2.17%)</title><rect x="76.5030%" y="1461" width="2.1667%" height="15" fill="rgb(228,1,10)" fg:x="205017557" fg:w="5806590"/><text x="76.7530%" y="1471.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,806,590 samples, 2.17%)</title><rect x="76.5030%" y="1445" width="2.1667%" height="15" fill="rgb(213,116,27)" fg:x="205017557" fg:w="5806590"/><text x="76.7530%" y="1455.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,806,590 samples, 2.17%)</title><rect x="76.5030%" y="1429" width="2.1667%" height="15" fill="rgb(241,95,50)" fg:x="205017557" fg:w="5806590"/><text x="76.7530%" y="1439.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,806,590 samples, 2.17%)</title><rect x="76.5030%" y="1413" width="2.1667%" height="15" fill="rgb(238,48,32)" fg:x="205017557" fg:w="5806590"/><text x="76.7530%" y="1423.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (5,806,590 samples, 2.17%)</title><rect x="76.5030%" y="1397" width="2.1667%" height="15" fill="rgb(235,113,49)" fg:x="205017557" fg:w="5806590"/><text x="76.7530%" y="1407.50">a..</text></g><g><title>cfree (5,806,590 samples, 2.17%)</title><rect x="76.5030%" y="1381" width="2.1667%" height="15" fill="rgb(205,127,43)" fg:x="205017557" fg:w="5806590"/><text x="76.7530%" y="1391.50">c..</text></g><g><title>[libc.so.6] (5,806,590 samples, 2.17%)</title><rect x="76.5030%" y="1365" width="2.1667%" height="15" fill="rgb(250,162,2)" fg:x="205017557" fg:w="5806590"/><text x="76.7530%" y="1375.50">[..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35,822,140 samples, 13.37%)</title><rect x="66.1485%" y="1525" width="13.3671%" height="15" fill="rgb(220,13,41)" fg:x="177269092" fg:w="35822140"/><text x="66.3985%" y="1535.50">&lt;alloc::vec::Vec&lt;T,A..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (35,822,140 samples, 13.37%)</title><rect x="66.1485%" y="1509" width="13.3671%" height="15" fill="rgb(249,221,25)" fg:x="177269092" fg:w="35822140"/><text x="66.3985%" y="1519.50">core::ptr::drop_in_p..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (35,822,140 samples, 13.37%)</title><rect x="66.1485%" y="1493" width="13.3671%" height="15" fill="rgb(215,208,19)" fg:x="177269092" fg:w="35822140"/><text x="66.3985%" y="1503.50">core::ptr::drop_in_p..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,267,085 samples, 0.85%)</title><rect x="78.6697%" y="1477" width="0.8460%" height="15" fill="rgb(236,175,2)" fg:x="210824147" fg:w="2267085"/><text x="78.9197%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (2,267,085 samples, 0.85%)</title><rect x="78.6697%" y="1461" width="0.8460%" height="15" fill="rgb(241,52,2)" fg:x="210824147" fg:w="2267085"/><text x="78.9197%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2,267,085 samples, 0.85%)</title><rect x="78.6697%" y="1445" width="0.8460%" height="15" fill="rgb(248,140,14)" fg:x="210824147" fg:w="2267085"/><text x="78.9197%" y="1455.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,267,085 samples, 0.85%)</title><rect x="78.6697%" y="1429" width="0.8460%" height="15" fill="rgb(253,22,42)" fg:x="210824147" fg:w="2267085"/><text x="78.9197%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,267,085 samples, 0.85%)</title><rect x="78.6697%" y="1413" width="0.8460%" height="15" fill="rgb(234,61,47)" fg:x="210824147" fg:w="2267085"/><text x="78.9197%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,267,085 samples, 0.85%)</title><rect x="78.6697%" y="1397" width="0.8460%" height="15" fill="rgb(208,226,15)" fg:x="210824147" fg:w="2267085"/><text x="78.9197%" y="1407.50"></text></g><g><title>alloc::alloc::dealloc (2,267,085 samples, 0.85%)</title><rect x="78.6697%" y="1381" width="0.8460%" height="15" fill="rgb(217,221,4)" fg:x="210824147" fg:w="2267085"/><text x="78.9197%" y="1391.50"></text></g><g><title>cfree (2,267,085 samples, 0.85%)</title><rect x="78.6697%" y="1365" width="0.8460%" height="15" fill="rgb(212,174,34)" fg:x="210824147" fg:w="2267085"/><text x="78.9197%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (42,874,447 samples, 16.00%)</title><rect x="66.1485%" y="1541" width="15.9987%" height="15" fill="rgb(253,83,4)" fg:x="177269092" fg:w="42874447"/><text x="66.3985%" y="1551.50">core::ptr::drop_in_place&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (7,052,307 samples, 2.63%)</title><rect x="79.5157%" y="1525" width="2.6316%" height="15" fill="rgb(250,195,49)" fg:x="213091232" fg:w="7052307"/><text x="79.7657%" y="1535.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,052,307 samples, 2.63%)</title><rect x="79.5157%" y="1509" width="2.6316%" height="15" fill="rgb(241,192,25)" fg:x="213091232" fg:w="7052307"/><text x="79.7657%" y="1519.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (7,052,307 samples, 2.63%)</title><rect x="79.5157%" y="1493" width="2.6316%" height="15" fill="rgb(208,124,10)" fg:x="213091232" fg:w="7052307"/><text x="79.7657%" y="1503.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7,052,307 samples, 2.63%)</title><rect x="79.5157%" y="1477" width="2.6316%" height="15" fill="rgb(222,33,0)" fg:x="213091232" fg:w="7052307"/><text x="79.7657%" y="1487.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (7,052,307 samples, 2.63%)</title><rect x="79.5157%" y="1461" width="2.6316%" height="15" fill="rgb(234,209,28)" fg:x="213091232" fg:w="7052307"/><text x="79.7657%" y="1471.50">al..</text></g><g><title>cfree (7,052,307 samples, 2.63%)</title><rect x="79.5157%" y="1445" width="2.6316%" height="15" fill="rgb(224,11,23)" fg:x="213091232" fg:w="7052307"/><text x="79.7657%" y="1455.50">cf..</text></g><g><title>[libc.so.6] (7,052,307 samples, 2.63%)</title><rect x="79.5157%" y="1429" width="2.6316%" height="15" fill="rgb(232,99,1)" fg:x="213091232" fg:w="7052307"/><text x="79.7657%" y="1439.50">[l..</text></g><g><title>[libc.so.6] (7,052,307 samples, 2.63%)</title><rect x="79.5157%" y="1413" width="2.6316%" height="15" fill="rgb(237,95,45)" fg:x="213091232" fg:w="7052307"/><text x="79.7657%" y="1423.50">[l..</text></g><g><title>[libc.so.6] (3,021,196 samples, 1.13%)</title><rect x="81.0199%" y="1397" width="1.1274%" height="15" fill="rgb(208,109,11)" fg:x="217122343" fg:w="3021196"/><text x="81.2699%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (45,912,265 samples, 17.13%)</title><rect x="66.1485%" y="1605" width="17.1323%" height="15" fill="rgb(216,190,48)" fg:x="177269092" fg:w="45912265"/><text x="66.3985%" y="1615.50">core::ptr::drop_in_place&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45,912,265 samples, 17.13%)</title><rect x="66.1485%" y="1589" width="17.1323%" height="15" fill="rgb(251,171,36)" fg:x="177269092" fg:w="45912265"/><text x="66.3985%" y="1599.50">&lt;alloc::vec::Vec&lt;T,A&gt; as co..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (45,912,265 samples, 17.13%)</title><rect x="66.1485%" y="1573" width="17.1323%" height="15" fill="rgb(230,62,22)" fg:x="177269092" fg:w="45912265"/><text x="66.3985%" y="1583.50">core::ptr::drop_in_place&lt;[c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (45,912,265 samples, 17.13%)</title><rect x="66.1485%" y="1557" width="17.1323%" height="15" fill="rgb(225,114,35)" fg:x="177269092" fg:w="45912265"/><text x="66.3985%" y="1567.50">core::ptr::drop_in_place&lt;cs..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (3,037,818 samples, 1.13%)</title><rect x="82.1473%" y="1541" width="1.1336%" height="15" fill="rgb(215,118,42)" fg:x="220143539" fg:w="3037818"/><text x="82.3973%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (3,037,818 samples, 1.13%)</title><rect x="82.1473%" y="1525" width="1.1336%" height="15" fill="rgb(243,119,21)" fg:x="220143539" fg:w="3037818"/><text x="82.3973%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (3,037,818 samples, 1.13%)</title><rect x="82.1473%" y="1509" width="1.1336%" height="15" fill="rgb(252,177,53)" fg:x="220143539" fg:w="3037818"/><text x="82.3973%" y="1519.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,037,818 samples, 1.13%)</title><rect x="82.1473%" y="1493" width="1.1336%" height="15" fill="rgb(237,209,29)" fg:x="220143539" fg:w="3037818"/><text x="82.3973%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,037,818 samples, 1.13%)</title><rect x="82.1473%" y="1477" width="1.1336%" height="15" fill="rgb(212,65,23)" fg:x="220143539" fg:w="3037818"/><text x="82.3973%" y="1487.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,037,818 samples, 1.13%)</title><rect x="82.1473%" y="1461" width="1.1336%" height="15" fill="rgb(230,222,46)" fg:x="220143539" fg:w="3037818"/><text x="82.3973%" y="1471.50"></text></g><g><title>alloc::alloc::dealloc (3,037,818 samples, 1.13%)</title><rect x="82.1473%" y="1445" width="1.1336%" height="15" fill="rgb(215,135,32)" fg:x="220143539" fg:w="3037818"/><text x="82.3973%" y="1455.50"></text></g><g><title>cfree (3,037,818 samples, 1.13%)</title><rect x="82.1473%" y="1429" width="1.1336%" height="15" fill="rgb(246,101,22)" fg:x="220143539" fg:w="3037818"/><text x="82.3973%" y="1439.50"></text></g><g><title>[libc.so.6] (3,037,818 samples, 1.13%)</title><rect x="82.1473%" y="1413" width="1.1336%" height="15" fill="rgb(206,107,13)" fg:x="220143539" fg:w="3037818"/><text x="82.3973%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (501,504 samples, 0.19%)</title><rect x="83.2808%" y="1605" width="0.1871%" height="15" fill="rgb(250,100,44)" fg:x="223181357" fg:w="501504"/><text x="83.5308%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48,993,177 samples, 18.28%)</title><rect x="66.1485%" y="1653" width="18.2820%" height="15" fill="rgb(231,147,38)" fg:x="177269092" fg:w="48993177"/><text x="66.3985%" y="1663.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (48,993,177 samples, 18.28%)</title><rect x="66.1485%" y="1637" width="18.2820%" height="15" fill="rgb(229,8,40)" fg:x="177269092" fg:w="48993177"/><text x="66.3985%" y="1647.50">core::ptr::drop_in_place&lt;[cs..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (48,993,177 samples, 18.28%)</title><rect x="66.1485%" y="1621" width="18.2820%" height="15" fill="rgb(221,135,30)" fg:x="177269092" fg:w="48993177"/><text x="66.3985%" y="1631.50">core::ptr::drop_in_place&lt;css..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,579,408 samples, 0.96%)</title><rect x="83.4680%" y="1605" width="0.9625%" height="15" fill="rgb(249,193,18)" fg:x="223682861" fg:w="2579408"/><text x="83.7180%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (2,579,408 samples, 0.96%)</title><rect x="83.4680%" y="1589" width="0.9625%" height="15" fill="rgb(209,133,39)" fg:x="223682861" fg:w="2579408"/><text x="83.7180%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2,579,408 samples, 0.96%)</title><rect x="83.4680%" y="1573" width="0.9625%" height="15" fill="rgb(232,100,14)" fg:x="223682861" fg:w="2579408"/><text x="83.7180%" y="1583.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,579,408 samples, 0.96%)</title><rect x="83.4680%" y="1557" width="0.9625%" height="15" fill="rgb(224,185,1)" fg:x="223682861" fg:w="2579408"/><text x="83.7180%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,579,408 samples, 0.96%)</title><rect x="83.4680%" y="1541" width="0.9625%" height="15" fill="rgb(223,139,8)" fg:x="223682861" fg:w="2579408"/><text x="83.7180%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,579,408 samples, 0.96%)</title><rect x="83.4680%" y="1525" width="0.9625%" height="15" fill="rgb(232,213,38)" fg:x="223682861" fg:w="2579408"/><text x="83.7180%" y="1535.50"></text></g><g><title>alloc::alloc::dealloc (2,579,408 samples, 0.96%)</title><rect x="83.4680%" y="1509" width="0.9625%" height="15" fill="rgb(207,94,22)" fg:x="223682861" fg:w="2579408"/><text x="83.7180%" y="1519.50"></text></g><g><title>cfree (2,579,408 samples, 0.96%)</title><rect x="83.4680%" y="1493" width="0.9625%" height="15" fill="rgb(219,183,54)" fg:x="223682861" fg:w="2579408"/><text x="83.7180%" y="1503.50"></text></g><g><title>[libc.so.6] (2,579,408 samples, 0.96%)</title><rect x="83.4680%" y="1477" width="0.9625%" height="15" fill="rgb(216,185,54)" fg:x="223682861" fg:w="2579408"/><text x="83.7180%" y="1487.50"></text></g><g><title>[libc.so.6] (2,579,408 samples, 0.96%)</title><rect x="83.4680%" y="1461" width="0.9625%" height="15" fill="rgb(254,217,39)" fg:x="223682861" fg:w="2579408"/><text x="83.7180%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (51,447,890 samples, 19.20%)</title><rect x="66.1485%" y="1877" width="19.1979%" height="15" fill="rgb(240,178,23)" fg:x="177269092" fg:w="51447890"/><text x="66.3985%" y="1887.50">core::ptr::drop_in_place&lt;css_b..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (51,447,890 samples, 19.20%)</title><rect x="66.1485%" y="1861" width="19.1979%" height="15" fill="rgb(218,11,47)" fg:x="177269092" fg:w="51447890"/><text x="66.3985%" y="1871.50">core::ptr::drop_in_place&lt;alloc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51,447,890 samples, 19.20%)</title><rect x="66.1485%" y="1845" width="19.1979%" height="15" fill="rgb(218,51,51)" fg:x="177269092" fg:w="51447890"/><text x="66.3985%" y="1855.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (51,447,890 samples, 19.20%)</title><rect x="66.1485%" y="1829" width="19.1979%" height="15" fill="rgb(238,126,27)" fg:x="177269092" fg:w="51447890"/><text x="66.3985%" y="1839.50">core::ptr::drop_in_place&lt;[css_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (51,447,890 samples, 19.20%)</title><rect x="66.1485%" y="1813" width="19.1979%" height="15" fill="rgb(249,202,22)" fg:x="177269092" fg:w="51447890"/><text x="66.3985%" y="1823.50">core::ptr::drop_in_place&lt;css_b..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (51,447,890 samples, 19.20%)</title><rect x="66.1485%" y="1797" width="19.1979%" height="15" fill="rgb(254,195,49)" fg:x="177269092" fg:w="51447890"/><text x="66.3985%" y="1807.50">core::ptr::drop_in_place&lt;alloc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51,447,890 samples, 19.20%)</title><rect x="66.1485%" y="1781" width="19.1979%" height="15" fill="rgb(208,123,14)" fg:x="177269092" fg:w="51447890"/><text x="66.3985%" y="1791.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (51,447,890 samples, 19.20%)</title><rect x="66.1485%" y="1765" width="19.1979%" height="15" fill="rgb(224,200,8)" fg:x="177269092" fg:w="51447890"/><text x="66.3985%" y="1775.50">core::ptr::drop_in_place&lt;[css_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (51,447,890 samples, 19.20%)</title><rect x="66.1485%" y="1749" width="19.1979%" height="15" fill="rgb(217,61,36)" fg:x="177269092" fg:w="51447890"/><text x="66.3985%" y="1759.50">core::ptr::drop_in_place&lt;css_b..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (51,447,890 samples, 19.20%)</title><rect x="66.1485%" y="1733" width="19.1979%" height="15" fill="rgb(206,35,45)" fg:x="177269092" fg:w="51447890"/><text x="66.3985%" y="1743.50">core::ptr::drop_in_place&lt;alloc..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51,447,890 samples, 19.20%)</title><rect x="66.1485%" y="1717" width="19.1979%" height="15" fill="rgb(217,65,33)" fg:x="177269092" fg:w="51447890"/><text x="66.3985%" y="1727.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (51,447,890 samples, 19.20%)</title><rect x="66.1485%" y="1701" width="19.1979%" height="15" fill="rgb(222,158,48)" fg:x="177269092" fg:w="51447890"/><text x="66.3985%" y="1711.50">core::ptr::drop_in_place&lt;[css_..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (51,447,890 samples, 19.20%)</title><rect x="66.1485%" y="1685" width="19.1979%" height="15" fill="rgb(254,2,54)" fg:x="177269092" fg:w="51447890"/><text x="66.3985%" y="1695.50">core::ptr::drop_in_place&lt;css_b..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (51,447,890 samples, 19.20%)</title><rect x="66.1485%" y="1669" width="19.1979%" height="15" fill="rgb(250,143,38)" fg:x="177269092" fg:w="51447890"/><text x="66.3985%" y="1679.50">core::ptr::drop_in_place&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,454,713 samples, 0.92%)</title><rect x="84.4305%" y="1653" width="0.9160%" height="15" fill="rgb(248,25,0)" fg:x="226262269" fg:w="2454713"/><text x="84.6805%" y="1663.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,454,713 samples, 0.92%)</title><rect x="84.4305%" y="1637" width="0.9160%" height="15" fill="rgb(206,152,27)" fg:x="226262269" fg:w="2454713"/><text x="84.6805%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,454,713 samples, 0.92%)</title><rect x="84.4305%" y="1621" width="0.9160%" height="15" fill="rgb(240,77,30)" fg:x="226262269" fg:w="2454713"/><text x="84.6805%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,454,713 samples, 0.92%)</title><rect x="84.4305%" y="1605" width="0.9160%" height="15" fill="rgb(231,5,3)" fg:x="226262269" fg:w="2454713"/><text x="84.6805%" y="1615.50"></text></g><g><title>alloc::alloc::dealloc (2,454,713 samples, 0.92%)</title><rect x="84.4305%" y="1589" width="0.9160%" height="15" fill="rgb(207,226,32)" fg:x="226262269" fg:w="2454713"/><text x="84.6805%" y="1599.50"></text></g><g><title>cfree (2,454,713 samples, 0.92%)</title><rect x="84.4305%" y="1573" width="0.9160%" height="15" fill="rgb(222,207,47)" fg:x="226262269" fg:w="2454713"/><text x="84.6805%" y="1583.50"></text></g><g><title>[libc.so.6] (2,454,713 samples, 0.92%)</title><rect x="84.4305%" y="1557" width="0.9160%" height="15" fill="rgb(229,115,45)" fg:x="226262269" fg:w="2454713"/><text x="84.6805%" y="1567.50"></text></g><g><title>benchmark::benchmark_accumulated_modifications (176,848,161 samples, 65.99%)</title><rect x="19.9902%" y="1893" width="65.9915%" height="15" fill="rgb(224,191,6)" fg:x="53570901" fg:w="176848161"/><text x="20.2402%" y="1903.50">benchmark::benchmark_accumulated_modifications</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,702,080 samples, 0.64%)</title><rect x="85.3465%" y="1877" width="0.6351%" height="15" fill="rgb(230,227,24)" fg:x="228716982" fg:w="1702080"/><text x="85.5965%" y="1887.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,702,080 samples, 0.64%)</title><rect x="85.3465%" y="1861" width="0.6351%" height="15" fill="rgb(228,80,19)" fg:x="228716982" fg:w="1702080"/><text x="85.5965%" y="1871.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,702,080 samples, 0.64%)</title><rect x="85.3465%" y="1845" width="0.6351%" height="15" fill="rgb(247,229,0)" fg:x="228716982" fg:w="1702080"/><text x="85.5965%" y="1855.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,702,080 samples, 0.64%)</title><rect x="85.3465%" y="1829" width="0.6351%" height="15" fill="rgb(237,194,15)" fg:x="228716982" fg:w="1702080"/><text x="85.5965%" y="1839.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,702,080 samples, 0.64%)</title><rect x="85.3465%" y="1813" width="0.6351%" height="15" fill="rgb(219,203,20)" fg:x="228716982" fg:w="1702080"/><text x="85.5965%" y="1823.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,702,080 samples, 0.64%)</title><rect x="85.3465%" y="1797" width="0.6351%" height="15" fill="rgb(234,128,8)" fg:x="228716982" fg:w="1702080"/><text x="85.5965%" y="1807.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,702,080 samples, 0.64%)</title><rect x="85.3465%" y="1781" width="0.6351%" height="15" fill="rgb(248,202,8)" fg:x="228716982" fg:w="1702080"/><text x="85.5965%" y="1791.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (1,702,080 samples, 0.64%)</title><rect x="85.3465%" y="1765" width="0.6351%" height="15" fill="rgb(206,104,37)" fg:x="228716982" fg:w="1702080"/><text x="85.5965%" y="1775.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,702,080 samples, 0.64%)</title><rect x="85.3465%" y="1749" width="0.6351%" height="15" fill="rgb(223,8,27)" fg:x="228716982" fg:w="1702080"/><text x="85.5965%" y="1759.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,702,080 samples, 0.64%)</title><rect x="85.3465%" y="1733" width="0.6351%" height="15" fill="rgb(216,217,28)" fg:x="228716982" fg:w="1702080"/><text x="85.5965%" y="1743.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,237,407 samples, 0.83%)</title><rect x="85.9816%" y="1797" width="0.8349%" height="15" fill="rgb(249,199,1)" fg:x="230419062" fg:w="2237407"/><text x="86.2316%" y="1807.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (2,237,407 samples, 0.83%)</title><rect x="85.9816%" y="1781" width="0.8349%" height="15" fill="rgb(240,85,17)" fg:x="230419062" fg:w="2237407"/><text x="86.2316%" y="1791.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (2,237,407 samples, 0.83%)</title><rect x="85.9816%" y="1765" width="0.8349%" height="15" fill="rgb(206,108,45)" fg:x="230419062" fg:w="2237407"/><text x="86.2316%" y="1775.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,237,407 samples, 0.83%)</title><rect x="85.9816%" y="1749" width="0.8349%" height="15" fill="rgb(245,210,41)" fg:x="230419062" fg:w="2237407"/><text x="86.2316%" y="1759.50"></text></g><g><title>malloc (2,237,407 samples, 0.83%)</title><rect x="85.9816%" y="1733" width="0.8349%" height="15" fill="rgb(206,13,37)" fg:x="230419062" fg:w="2237407"/><text x="86.2316%" y="1743.50"></text></g><g><title>[libc.so.6] (2,237,407 samples, 0.83%)</title><rect x="85.9816%" y="1717" width="0.8349%" height="15" fill="rgb(250,61,18)" fg:x="230419062" fg:w="2237407"/><text x="86.2316%" y="1727.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,057,878 samples, 0.77%)</title><rect x="86.8165%" y="1653" width="0.7679%" height="15" fill="rgb(235,172,48)" fg:x="232656469" fg:w="2057878"/><text x="87.0665%" y="1663.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,178,396 samples, 0.44%)</title><rect x="87.5844%" y="1381" width="0.4397%" height="15" fill="rgb(249,201,17)" fg:x="234714347" fg:w="1178396"/><text x="87.8344%" y="1391.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,178,396 samples, 0.44%)</title><rect x="87.5844%" y="1365" width="0.4397%" height="15" fill="rgb(219,208,6)" fg:x="234714347" fg:w="1178396"/><text x="87.8344%" y="1375.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,178,396 samples, 0.44%)</title><rect x="87.5844%" y="1349" width="0.4397%" height="15" fill="rgb(248,31,23)" fg:x="234714347" fg:w="1178396"/><text x="87.8344%" y="1359.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::chunks_exact (724,391 samples, 0.27%)</title><rect x="87.7538%" y="1333" width="0.2703%" height="15" fill="rgb(245,15,42)" fg:x="235168352" fg:w="724391"/><text x="88.0038%" y="1343.50"></text></g><g><title>core::slice::iter::ChunksExact&lt;T&gt;::new (724,391 samples, 0.27%)</title><rect x="87.7538%" y="1317" width="0.2703%" height="15" fill="rgb(222,217,39)" fg:x="235168352" fg:w="724391"/><text x="88.0038%" y="1327.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="757" width="0.4083%" height="15" fill="rgb(210,219,27)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="767.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="741" width="0.4083%" height="15" fill="rgb(252,166,36)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="751.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="725" width="0.4083%" height="15" fill="rgb(245,132,34)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="735.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="709" width="0.4083%" height="15" fill="rgb(236,54,3)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="693" width="0.4083%" height="15" fill="rgb(241,173,43)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="703.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="677" width="0.4083%" height="15" fill="rgb(215,190,9)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="661" width="0.4083%" height="15" fill="rgb(242,101,16)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="671.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="645" width="0.4083%" height="15" fill="rgb(223,190,21)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="655.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="629" width="0.4083%" height="15" fill="rgb(215,228,25)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="613" width="0.4083%" height="15" fill="rgb(225,36,22)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="623.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="597" width="0.4083%" height="15" fill="rgb(251,106,46)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="581" width="0.4083%" height="15" fill="rgb(208,90,1)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="565" width="0.4083%" height="15" fill="rgb(243,10,4)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="549" width="0.4083%" height="15" fill="rgb(212,137,27)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="559.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="533" width="0.4083%" height="15" fill="rgb(231,220,49)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="543.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="517" width="0.4083%" height="15" fill="rgb(237,96,20)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="527.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="501" width="0.4083%" height="15" fill="rgb(239,229,30)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="485" width="0.4083%" height="15" fill="rgb(219,65,33)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="469" width="0.4083%" height="15" fill="rgb(243,134,7)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="453" width="0.4083%" height="15" fill="rgb(216,177,54)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="463.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="437" width="0.4083%" height="15" fill="rgb(211,160,20)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="447.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="421" width="0.4083%" height="15" fill="rgb(239,85,39)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="405" width="0.4083%" height="15" fill="rgb(232,125,22)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="415.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="389" width="0.4083%" height="15" fill="rgb(244,57,34)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="373" width="0.4083%" height="15" fill="rgb(214,203,32)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="357" width="0.4083%" height="15" fill="rgb(207,58,43)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="341" width="0.4083%" height="15" fill="rgb(215,193,15)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="351.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="325" width="0.4083%" height="15" fill="rgb(232,15,44)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="335.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="309" width="0.4083%" height="15" fill="rgb(212,3,48)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="319.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="293" width="0.4083%" height="15" fill="rgb(218,128,7)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="277" width="0.4083%" height="15" fill="rgb(226,216,39)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="261" width="0.4083%" height="15" fill="rgb(243,47,51)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="245" width="0.4083%" height="15" fill="rgb(241,183,40)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="255.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="229" width="0.4083%" height="15" fill="rgb(231,217,32)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="213" width="0.4083%" height="15" fill="rgb(229,61,38)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="197" width="0.4083%" height="15" fill="rgb(225,210,5)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="181" width="0.4083%" height="15" fill="rgb(231,79,45)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="191.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="165" width="0.4083%" height="15" fill="rgb(224,100,7)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="175.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="149" width="0.4083%" height="15" fill="rgb(241,198,18)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="159.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="133" width="0.4083%" height="15" fill="rgb(252,97,53)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="143.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="117" width="0.4083%" height="15" fill="rgb(220,88,7)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="101" width="0.4083%" height="15" fill="rgb(213,176,14)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="85" width="0.4083%" height="15" fill="rgb(246,73,7)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="69" width="0.4083%" height="15" fill="rgb(245,64,36)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="79.50"></text></g><g><title>__rdl_alloc (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="53" width="0.4083%" height="15" fill="rgb(245,80,10)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="63.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,094,221 samples, 0.41%)</title><rect x="88.0241%" y="37" width="0.4083%" height="15" fill="rgb(232,107,50)" fg:x="235892743" fg:w="1094221"/><text x="88.2741%" y="47.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,363,095 samples, 0.88%)</title><rect x="88.0241%" y="853" width="0.8818%" height="15" fill="rgb(253,3,0)" fg:x="235892743" fg:w="2363095"/><text x="88.2741%" y="863.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,363,095 samples, 0.88%)</title><rect x="88.0241%" y="837" width="0.8818%" height="15" fill="rgb(212,99,53)" fg:x="235892743" fg:w="2363095"/><text x="88.2741%" y="847.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,363,095 samples, 0.88%)</title><rect x="88.0241%" y="821" width="0.8818%" height="15" fill="rgb(249,111,54)" fg:x="235892743" fg:w="2363095"/><text x="88.2741%" y="831.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,363,095 samples, 0.88%)</title><rect x="88.0241%" y="805" width="0.8818%" height="15" fill="rgb(249,55,30)" fg:x="235892743" fg:w="2363095"/><text x="88.2741%" y="815.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,363,095 samples, 0.88%)</title><rect x="88.0241%" y="789" width="0.8818%" height="15" fill="rgb(237,47,42)" fg:x="235892743" fg:w="2363095"/><text x="88.2741%" y="799.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,363,095 samples, 0.88%)</title><rect x="88.0241%" y="773" width="0.8818%" height="15" fill="rgb(211,20,18)" fg:x="235892743" fg:w="2363095"/><text x="88.2741%" y="783.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (1,268,874 samples, 0.47%)</title><rect x="88.4325%" y="757" width="0.4735%" height="15" fill="rgb(231,203,46)" fg:x="236986964" fg:w="1268874"/><text x="88.6825%" y="767.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (1,268,874 samples, 0.47%)</title><rect x="88.4325%" y="741" width="0.4735%" height="15" fill="rgb(237,142,3)" fg:x="236986964" fg:w="1268874"/><text x="88.6825%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,268,874 samples, 0.47%)</title><rect x="88.4325%" y="725" width="0.4735%" height="15" fill="rgb(241,107,1)" fg:x="236986964" fg:w="1268874"/><text x="88.6825%" y="735.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,268,874 samples, 0.47%)</title><rect x="88.4325%" y="709" width="0.4735%" height="15" fill="rgb(229,83,13)" fg:x="236986964" fg:w="1268874"/><text x="88.6825%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,268,874 samples, 0.47%)</title><rect x="88.4325%" y="693" width="0.4735%" height="15" fill="rgb(241,91,40)" fg:x="236986964" fg:w="1268874"/><text x="88.6825%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,268,874 samples, 0.47%)</title><rect x="88.4325%" y="677" width="0.4735%" height="15" fill="rgb(225,3,45)" fg:x="236986964" fg:w="1268874"/><text x="88.6825%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,268,874 samples, 0.47%)</title><rect x="88.4325%" y="661" width="0.4735%" height="15" fill="rgb(244,223,14)" fg:x="236986964" fg:w="1268874"/><text x="88.6825%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1,268,874 samples, 0.47%)</title><rect x="88.4325%" y="645" width="0.4735%" height="15" fill="rgb(224,124,37)" fg:x="236986964" fg:w="1268874"/><text x="88.6825%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,268,874 samples, 0.47%)</title><rect x="88.4325%" y="629" width="0.4735%" height="15" fill="rgb(251,171,30)" fg:x="236986964" fg:w="1268874"/><text x="88.6825%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,268,874 samples, 0.47%)</title><rect x="88.4325%" y="613" width="0.4735%" height="15" fill="rgb(236,46,54)" fg:x="236986964" fg:w="1268874"/><text x="88.6825%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,268,874 samples, 0.47%)</title><rect x="88.4325%" y="597" width="0.4735%" height="15" fill="rgb(245,213,5)" fg:x="236986964" fg:w="1268874"/><text x="88.6825%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,268,874 samples, 0.47%)</title><rect x="88.4325%" y="581" width="0.4735%" height="15" fill="rgb(230,144,27)" fg:x="236986964" fg:w="1268874"/><text x="88.6825%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,268,874 samples, 0.47%)</title><rect x="88.4325%" y="565" width="0.4735%" height="15" fill="rgb(220,86,6)" fg:x="236986964" fg:w="1268874"/><text x="88.6825%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,268,874 samples, 0.47%)</title><rect x="88.4325%" y="549" width="0.4735%" height="15" fill="rgb(240,20,13)" fg:x="236986964" fg:w="1268874"/><text x="88.6825%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,268,874 samples, 0.47%)</title><rect x="88.4325%" y="533" width="0.4735%" height="15" fill="rgb(217,89,34)" fg:x="236986964" fg:w="1268874"/><text x="88.6825%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1,268,874 samples, 0.47%)</title><rect x="88.4325%" y="517" width="0.4735%" height="15" fill="rgb(229,13,5)" fg:x="236986964" fg:w="1268874"/><text x="88.6825%" y="527.50"></text></g><g><title>malloc (1,268,874 samples, 0.47%)</title><rect x="88.4325%" y="501" width="0.4735%" height="15" fill="rgb(244,67,35)" fg:x="236986964" fg:w="1268874"/><text x="88.6825%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (5,462,781 samples, 2.04%)</title><rect x="87.5844%" y="1589" width="2.0385%" height="15" fill="rgb(221,40,2)" fg:x="234714347" fg:w="5462781"/><text x="87.8344%" y="1599.50">&lt;..</text></g><g><title>serde::de::SeqAccess::next_element (5,462,781 samples, 2.04%)</title><rect x="87.5844%" y="1573" width="2.0385%" height="15" fill="rgb(237,157,21)" fg:x="234714347" fg:w="5462781"/><text x="87.8344%" y="1583.50">s..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (5,462,781 samples, 2.04%)</title><rect x="87.5844%" y="1557" width="2.0385%" height="15" fill="rgb(222,94,11)" fg:x="234714347" fg:w="5462781"/><text x="87.8344%" y="1567.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,462,781 samples, 2.04%)</title><rect x="87.5844%" y="1541" width="2.0385%" height="15" fill="rgb(249,113,6)" fg:x="234714347" fg:w="5462781"/><text x="87.8344%" y="1551.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,462,781 samples, 2.04%)</title><rect x="87.5844%" y="1525" width="2.0385%" height="15" fill="rgb(238,137,36)" fg:x="234714347" fg:w="5462781"/><text x="87.8344%" y="1535.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,462,781 samples, 2.04%)</title><rect x="87.5844%" y="1509" width="2.0385%" height="15" fill="rgb(210,102,26)" fg:x="234714347" fg:w="5462781"/><text x="87.8344%" y="1519.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5,462,781 samples, 2.04%)</title><rect x="87.5844%" y="1493" width="2.0385%" height="15" fill="rgb(218,30,30)" fg:x="234714347" fg:w="5462781"/><text x="87.8344%" y="1503.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (5,462,781 samples, 2.04%)</title><rect x="87.5844%" y="1477" width="2.0385%" height="15" fill="rgb(214,67,26)" fg:x="234714347" fg:w="5462781"/><text x="87.8344%" y="1487.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (5,462,781 samples, 2.04%)</title><rect x="87.5844%" y="1461" width="2.0385%" height="15" fill="rgb(251,9,53)" fg:x="234714347" fg:w="5462781"/><text x="87.8344%" y="1471.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (5,462,781 samples, 2.04%)</title><rect x="87.5844%" y="1445" width="2.0385%" height="15" fill="rgb(228,204,25)" fg:x="234714347" fg:w="5462781"/><text x="87.8344%" y="1455.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5,462,781 samples, 2.04%)</title><rect x="87.5844%" y="1429" width="2.0385%" height="15" fill="rgb(207,153,8)" fg:x="234714347" fg:w="5462781"/><text x="87.8344%" y="1439.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,462,781 samples, 2.04%)</title><rect x="87.5844%" y="1413" width="2.0385%" height="15" fill="rgb(242,9,16)" fg:x="234714347" fg:w="5462781"/><text x="87.8344%" y="1423.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5,462,781 samples, 2.04%)</title><rect x="87.5844%" y="1397" width="2.0385%" height="15" fill="rgb(217,211,10)" fg:x="234714347" fg:w="5462781"/><text x="87.8344%" y="1407.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1381" width="1.5987%" height="15" fill="rgb(219,228,52)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1391.50"></text></g><g><title>serde::de::SeqAccess::next_element (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1365" width="1.5987%" height="15" fill="rgb(231,92,29)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1375.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1349" width="1.5987%" height="15" fill="rgb(232,8,23)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1359.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1333" width="1.5987%" height="15" fill="rgb(216,211,34)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1343.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1317" width="1.5987%" height="15" fill="rgb(236,151,0)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1327.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1301" width="1.5987%" height="15" fill="rgb(209,168,3)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1311.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1285" width="1.5987%" height="15" fill="rgb(208,129,28)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1295.50"></text></g><g><title>serde::de::MapAccess::next_entry (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1269" width="1.5987%" height="15" fill="rgb(229,78,22)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1279.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1253" width="1.5987%" height="15" fill="rgb(228,187,13)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1263.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1237" width="1.5987%" height="15" fill="rgb(240,119,24)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1247.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1221" width="1.5987%" height="15" fill="rgb(209,194,42)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1231.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1205" width="1.5987%" height="15" fill="rgb(247,200,46)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1215.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1189" width="1.5987%" height="15" fill="rgb(218,76,16)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1199.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1173" width="1.5987%" height="15" fill="rgb(225,21,48)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1183.50"></text></g><g><title>serde::de::SeqAccess::next_element (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1157" width="1.5987%" height="15" fill="rgb(239,223,50)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1167.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1141" width="1.5987%" height="15" fill="rgb(244,45,21)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1151.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1125" width="1.5987%" height="15" fill="rgb(232,33,43)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1135.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1109" width="1.5987%" height="15" fill="rgb(209,8,3)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1119.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1093" width="1.5987%" height="15" fill="rgb(214,25,53)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1103.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1077" width="1.5987%" height="15" fill="rgb(254,186,54)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1087.50"></text></g><g><title>serde::de::MapAccess::next_entry (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1061" width="1.5987%" height="15" fill="rgb(208,174,49)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1071.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1045" width="1.5987%" height="15" fill="rgb(233,191,51)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1055.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1029" width="1.5987%" height="15" fill="rgb(222,134,10)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1039.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="1013" width="1.5987%" height="15" fill="rgb(230,226,20)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1023.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="997" width="1.5987%" height="15" fill="rgb(251,111,25)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="1007.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="981" width="1.5987%" height="15" fill="rgb(224,40,46)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="991.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="965" width="1.5987%" height="15" fill="rgb(236,108,47)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="975.50"></text></g><g><title>serde::de::SeqAccess::next_element (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="949" width="1.5987%" height="15" fill="rgb(234,93,0)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="959.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="933" width="1.5987%" height="15" fill="rgb(224,213,32)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="943.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="917" width="1.5987%" height="15" fill="rgb(251,11,48)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="927.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="901" width="1.5987%" height="15" fill="rgb(236,173,5)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="911.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="885" width="1.5987%" height="15" fill="rgb(230,95,12)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="895.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,284,385 samples, 1.60%)</title><rect x="88.0241%" y="869" width="1.5987%" height="15" fill="rgb(232,209,1)" fg:x="235892743" fg:w="4284385"/><text x="88.2741%" y="879.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,921,290 samples, 0.72%)</title><rect x="88.9059%" y="853" width="0.7169%" height="15" fill="rgb(232,6,1)" fg:x="238255838" fg:w="1921290"/><text x="89.1559%" y="863.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,921,290 samples, 0.72%)</title><rect x="88.9059%" y="837" width="0.7169%" height="15" fill="rgb(210,224,50)" fg:x="238255838" fg:w="1921290"/><text x="89.1559%" y="847.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,921,290 samples, 0.72%)</title><rect x="88.9059%" y="821" width="0.7169%" height="15" fill="rgb(228,127,35)" fg:x="238255838" fg:w="1921290"/><text x="89.1559%" y="831.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,921,290 samples, 0.72%)</title><rect x="88.9059%" y="805" width="0.7169%" height="15" fill="rgb(245,102,45)" fg:x="238255838" fg:w="1921290"/><text x="89.1559%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1,921,290 samples, 0.72%)</title><rect x="88.9059%" y="789" width="0.7169%" height="15" fill="rgb(214,1,49)" fg:x="238255838" fg:w="1921290"/><text x="89.1559%" y="799.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (1,921,290 samples, 0.72%)</title><rect x="88.9059%" y="773" width="0.7169%" height="15" fill="rgb(226,163,40)" fg:x="238255838" fg:w="1921290"/><text x="89.1559%" y="783.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (1,921,290 samples, 0.72%)</title><rect x="88.9059%" y="757" width="0.7169%" height="15" fill="rgb(239,212,28)" fg:x="238255838" fg:w="1921290"/><text x="89.1559%" y="767.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (1,921,290 samples, 0.72%)</title><rect x="88.9059%" y="741" width="0.7169%" height="15" fill="rgb(220,20,13)" fg:x="238255838" fg:w="1921290"/><text x="89.1559%" y="751.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1,921,290 samples, 0.72%)</title><rect x="88.9059%" y="725" width="0.7169%" height="15" fill="rgb(210,164,35)" fg:x="238255838" fg:w="1921290"/><text x="89.1559%" y="735.50"></text></g><g><title>serde::de::MapAccess::next_entry (8,423,108 samples, 3.14%)</title><rect x="86.8165%" y="1685" width="3.1431%" height="15" fill="rgb(248,109,41)" fg:x="232656469" fg:w="8423108"/><text x="87.0665%" y="1695.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (8,423,108 samples, 3.14%)</title><rect x="86.8165%" y="1669" width="3.1431%" height="15" fill="rgb(238,23,50)" fg:x="232656469" fg:w="8423108"/><text x="87.0665%" y="1679.50">ser..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6,365,230 samples, 2.38%)</title><rect x="87.5844%" y="1653" width="2.3752%" height="15" fill="rgb(211,48,49)" fg:x="234714347" fg:w="6365230"/><text x="87.8344%" y="1663.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,365,230 samples, 2.38%)</title><rect x="87.5844%" y="1637" width="2.3752%" height="15" fill="rgb(223,36,21)" fg:x="234714347" fg:w="6365230"/><text x="87.8344%" y="1647.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,365,230 samples, 2.38%)</title><rect x="87.5844%" y="1621" width="2.3752%" height="15" fill="rgb(207,123,46)" fg:x="234714347" fg:w="6365230"/><text x="87.8344%" y="1631.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,365,230 samples, 2.38%)</title><rect x="87.5844%" y="1605" width="2.3752%" height="15" fill="rgb(240,218,32)" fg:x="234714347" fg:w="6365230"/><text x="87.8344%" y="1615.50">&lt;&amp;..</text></g><g><title>serde::de::Visitor::visit_borrowed_str (902,449 samples, 0.34%)</title><rect x="89.6229%" y="1589" width="0.3368%" height="15" fill="rgb(252,5,43)" fg:x="240177128" fg:w="902449"/><text x="89.8729%" y="1599.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (902,449 samples, 0.34%)</title><rect x="89.6229%" y="1573" width="0.3368%" height="15" fill="rgb(252,84,19)" fg:x="240177128" fg:w="902449"/><text x="89.8729%" y="1583.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (902,449 samples, 0.34%)</title><rect x="89.6229%" y="1557" width="0.3368%" height="15" fill="rgb(243,152,39)" fg:x="240177128" fg:w="902449"/><text x="89.8729%" y="1567.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (902,449 samples, 0.34%)</title><rect x="89.6229%" y="1541" width="0.3368%" height="15" fill="rgb(234,160,15)" fg:x="240177128" fg:w="902449"/><text x="89.8729%" y="1551.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (902,449 samples, 0.34%)</title><rect x="89.6229%" y="1525" width="0.3368%" height="15" fill="rgb(237,34,20)" fg:x="240177128" fg:w="902449"/><text x="89.8729%" y="1535.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (902,449 samples, 0.34%)</title><rect x="89.6229%" y="1509" width="0.3368%" height="15" fill="rgb(229,97,13)" fg:x="240177128" fg:w="902449"/><text x="89.8729%" y="1519.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (902,449 samples, 0.34%)</title><rect x="89.6229%" y="1493" width="0.3368%" height="15" fill="rgb(234,71,50)" fg:x="240177128" fg:w="902449"/><text x="89.8729%" y="1503.50"></text></g><g><title>alloc::slice::hack::to_vec (902,449 samples, 0.34%)</title><rect x="89.6229%" y="1477" width="0.3368%" height="15" fill="rgb(253,155,4)" fg:x="240177128" fg:w="902449"/><text x="89.8729%" y="1487.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (902,449 samples, 0.34%)</title><rect x="89.6229%" y="1461" width="0.3368%" height="15" fill="rgb(222,185,37)" fg:x="240177128" fg:w="902449"/><text x="89.8729%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (902,449 samples, 0.34%)</title><rect x="89.6229%" y="1445" width="0.3368%" height="15" fill="rgb(251,177,13)" fg:x="240177128" fg:w="902449"/><text x="89.8729%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (902,449 samples, 0.34%)</title><rect x="89.6229%" y="1429" width="0.3368%" height="15" fill="rgb(250,179,40)" fg:x="240177128" fg:w="902449"/><text x="89.8729%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (902,449 samples, 0.34%)</title><rect x="89.6229%" y="1413" width="0.3368%" height="15" fill="rgb(242,44,2)" fg:x="240177128" fg:w="902449"/><text x="89.8729%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (902,449 samples, 0.34%)</title><rect x="89.6229%" y="1397" width="0.3368%" height="15" fill="rgb(216,177,13)" fg:x="240177128" fg:w="902449"/><text x="89.8729%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (902,449 samples, 0.34%)</title><rect x="89.6229%" y="1381" width="0.3368%" height="15" fill="rgb(216,106,43)" fg:x="240177128" fg:w="902449"/><text x="89.8729%" y="1391.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (902,449 samples, 0.34%)</title><rect x="89.6229%" y="1365" width="0.3368%" height="15" fill="rgb(216,183,2)" fg:x="240177128" fg:w="902449"/><text x="89.8729%" y="1375.50"></text></g><g><title>alloc::alloc::alloc (902,449 samples, 0.34%)</title><rect x="89.6229%" y="1349" width="0.3368%" height="15" fill="rgb(249,75,3)" fg:x="240177128" fg:w="902449"/><text x="89.8729%" y="1359.50"></text></g><g><title>malloc (902,449 samples, 0.34%)</title><rect x="89.6229%" y="1333" width="0.3368%" height="15" fill="rgb(219,67,39)" fg:x="240177128" fg:w="902449"/><text x="89.8729%" y="1343.50"></text></g><g><title>[libc.so.6] (902,449 samples, 0.34%)</title><rect x="89.6229%" y="1317" width="0.3368%" height="15" fill="rgb(253,228,2)" fg:x="240177128" fg:w="902449"/><text x="89.8729%" y="1327.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10,722,492 samples, 4.00%)</title><rect x="86.8165%" y="1701" width="4.0011%" height="15" fill="rgb(235,138,27)" fg:x="232656469" fg:w="10722492"/><text x="87.0665%" y="1711.50">&lt;ser..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (2,299,384 samples, 0.86%)</title><rect x="89.9596%" y="1685" width="0.8580%" height="15" fill="rgb(236,97,51)" fg:x="241079577" fg:w="2299384"/><text x="90.2096%" y="1695.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2,299,384 samples, 0.86%)</title><rect x="89.9596%" y="1669" width="0.8580%" height="15" fill="rgb(240,80,30)" fg:x="241079577" fg:w="2299384"/><text x="90.2096%" y="1679.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (2,299,384 samples, 0.86%)</title><rect x="89.9596%" y="1653" width="0.8580%" height="15" fill="rgb(230,178,19)" fg:x="241079577" fg:w="2299384"/><text x="90.2096%" y="1663.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2,299,384 samples, 0.86%)</title><rect x="89.9596%" y="1637" width="0.8580%" height="15" fill="rgb(210,190,27)" fg:x="241079577" fg:w="2299384"/><text x="90.2096%" y="1647.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2,299,384 samples, 0.86%)</title><rect x="89.9596%" y="1621" width="0.8580%" height="15" fill="rgb(222,107,31)" fg:x="241079577" fg:w="2299384"/><text x="90.2096%" y="1631.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2,299,384 samples, 0.86%)</title><rect x="89.9596%" y="1605" width="0.8580%" height="15" fill="rgb(216,127,34)" fg:x="241079577" fg:w="2299384"/><text x="90.2096%" y="1615.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::Ord&gt;::cmp (2,299,384 samples, 0.86%)</title><rect x="89.9596%" y="1589" width="0.8580%" height="15" fill="rgb(234,116,52)" fg:x="241079577" fg:w="2299384"/><text x="90.2096%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::cmp::Ord&gt;::cmp (2,299,384 samples, 0.86%)</title><rect x="89.9596%" y="1573" width="0.8580%" height="15" fill="rgb(222,124,15)" fg:x="241079577" fg:w="2299384"/><text x="90.2096%" y="1583.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (2,299,384 samples, 0.86%)</title><rect x="89.9596%" y="1557" width="0.8580%" height="15" fill="rgb(231,179,28)" fg:x="241079577" fg:w="2299384"/><text x="90.2096%" y="1567.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (2,299,384 samples, 0.86%)</title><rect x="89.9596%" y="1541" width="0.8580%" height="15" fill="rgb(226,93,45)" fg:x="241079577" fg:w="2299384"/><text x="90.2096%" y="1551.50"></text></g><g><title>[libc.so.6] (2,299,384 samples, 0.86%)</title><rect x="89.9596%" y="1525" width="0.8580%" height="15" fill="rgb(215,8,51)" fg:x="241079577" fg:w="2299384"/><text x="90.2096%" y="1535.50"></text></g><g><title>serde_json::de::from_str (15,141,581 samples, 5.65%)</title><rect x="85.9816%" y="1877" width="5.6501%" height="15" fill="rgb(223,106,5)" fg:x="230419062" fg:w="15141581"/><text x="86.2316%" y="1887.50">serde_j..</text></g><g><title>serde_json::de::from_trait (15,141,581 samples, 5.65%)</title><rect x="85.9816%" y="1861" width="5.6501%" height="15" fill="rgb(250,191,5)" fg:x="230419062" fg:w="15141581"/><text x="86.2316%" y="1871.50">serde_j..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15,141,581 samples, 5.65%)</title><rect x="85.9816%" y="1845" width="5.6501%" height="15" fill="rgb(242,132,44)" fg:x="230419062" fg:w="15141581"/><text x="86.2316%" y="1855.50">serde_j..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (15,141,581 samples, 5.65%)</title><rect x="85.9816%" y="1829" width="5.6501%" height="15" fill="rgb(251,152,29)" fg:x="230419062" fg:w="15141581"/><text x="86.2316%" y="1839.50">&lt;&amp;mut s..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15,141,581 samples, 5.65%)</title><rect x="85.9816%" y="1813" width="5.6501%" height="15" fill="rgb(218,179,5)" fg:x="230419062" fg:w="15141581"/><text x="86.2316%" y="1823.50">&lt;serde_..</text></g><g><title>serde::de::MapAccess::next_entry (12,904,174 samples, 4.82%)</title><rect x="86.8165%" y="1797" width="4.8152%" height="15" fill="rgb(227,67,19)" fg:x="232656469" fg:w="12904174"/><text x="87.0665%" y="1807.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (12,904,174 samples, 4.82%)</title><rect x="86.8165%" y="1781" width="4.8152%" height="15" fill="rgb(233,119,31)" fg:x="232656469" fg:w="12904174"/><text x="87.0665%" y="1791.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12,904,174 samples, 4.82%)</title><rect x="86.8165%" y="1765" width="4.8152%" height="15" fill="rgb(241,120,22)" fg:x="232656469" fg:w="12904174"/><text x="87.0665%" y="1775.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,904,174 samples, 4.82%)</title><rect x="86.8165%" y="1749" width="4.8152%" height="15" fill="rgb(224,102,30)" fg:x="232656469" fg:w="12904174"/><text x="87.0665%" y="1759.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,904,174 samples, 4.82%)</title><rect x="86.8165%" y="1733" width="4.8152%" height="15" fill="rgb(210,164,37)" fg:x="232656469" fg:w="12904174"/><text x="87.0665%" y="1743.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,904,174 samples, 4.82%)</title><rect x="86.8165%" y="1717" width="4.8152%" height="15" fill="rgb(226,191,16)" fg:x="232656469" fg:w="12904174"/><text x="87.0665%" y="1727.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,181,682 samples, 0.81%)</title><rect x="90.8176%" y="1701" width="0.8141%" height="15" fill="rgb(214,40,45)" fg:x="243378961" fg:w="2181682"/><text x="91.0676%" y="1711.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,181,682 samples, 0.81%)</title><rect x="90.8176%" y="1685" width="0.8141%" height="15" fill="rgb(244,29,26)" fg:x="243378961" fg:w="2181682"/><text x="91.0676%" y="1695.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,181,682 samples, 0.81%)</title><rect x="90.8176%" y="1669" width="0.8141%" height="15" fill="rgb(216,16,5)" fg:x="243378961" fg:w="2181682"/><text x="91.0676%" y="1679.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,181,682 samples, 0.81%)</title><rect x="90.8176%" y="1653" width="0.8141%" height="15" fill="rgb(249,76,35)" fg:x="243378961" fg:w="2181682"/><text x="91.0676%" y="1663.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,181,682 samples, 0.81%)</title><rect x="90.8176%" y="1637" width="0.8141%" height="15" fill="rgb(207,11,44)" fg:x="243378961" fg:w="2181682"/><text x="91.0676%" y="1647.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,181,682 samples, 0.81%)</title><rect x="90.8176%" y="1621" width="0.8141%" height="15" fill="rgb(228,190,49)" fg:x="243378961" fg:w="2181682"/><text x="91.0676%" y="1631.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (2,181,682 samples, 0.81%)</title><rect x="90.8176%" y="1605" width="0.8141%" height="15" fill="rgb(214,173,12)" fg:x="243378961" fg:w="2181682"/><text x="91.0676%" y="1615.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (2,181,682 samples, 0.81%)</title><rect x="90.8176%" y="1589" width="0.8141%" height="15" fill="rgb(218,26,35)" fg:x="243378961" fg:w="2181682"/><text x="91.0676%" y="1599.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (2,181,682 samples, 0.81%)</title><rect x="90.8176%" y="1573" width="0.8141%" height="15" fill="rgb(220,200,19)" fg:x="243378961" fg:w="2181682"/><text x="91.0676%" y="1583.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (2,181,682 samples, 0.81%)</title><rect x="90.8176%" y="1557" width="0.8141%" height="15" fill="rgb(239,95,49)" fg:x="243378961" fg:w="2181682"/><text x="91.0676%" y="1567.50"></text></g><g><title>benchmark::parse_web_layout_trace (15,592,468 samples, 5.82%)</title><rect x="85.9816%" y="1893" width="5.8184%" height="15" fill="rgb(235,85,53)" fg:x="230419062" fg:w="15592468"/><text x="86.2316%" y="1903.50">benchma..</text></g><g><title>std::fs::read_to_string (450,887 samples, 0.17%)</title><rect x="91.6317%" y="1877" width="0.1682%" height="15" fill="rgb(233,133,31)" fg:x="245560643" fg:w="450887"/><text x="91.8817%" y="1887.50"></text></g><g><title>std::fs::read_to_string::inner (450,887 samples, 0.17%)</title><rect x="91.6317%" y="1861" width="0.1682%" height="15" fill="rgb(218,25,20)" fg:x="245560643" fg:w="450887"/><text x="91.8817%" y="1871.50"></text></g><g><title>std::io::default_read_to_string (450,887 samples, 0.17%)</title><rect x="91.6317%" y="1845" width="0.1682%" height="15" fill="rgb(252,210,38)" fg:x="245560643" fg:w="450887"/><text x="91.8817%" y="1855.50"></text></g><g><title>std::io::append_to_string (450,887 samples, 0.17%)</title><rect x="91.6317%" y="1829" width="0.1682%" height="15" fill="rgb(242,134,21)" fg:x="245560643" fg:w="450887"/><text x="91.8817%" y="1839.50"></text></g><g><title>core::str::converts::from_utf8 (450,887 samples, 0.17%)</title><rect x="91.6317%" y="1813" width="0.1682%" height="15" fill="rgb(213,28,48)" fg:x="245560643" fg:w="450887"/><text x="91.8817%" y="1823.50"></text></g><g><title>core::str::validations::run_utf8_validation (450,887 samples, 0.17%)</title><rect x="91.6317%" y="1797" width="0.1682%" height="15" fill="rgb(250,196,2)" fg:x="245560643" fg:w="450887"/><text x="91.8817%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1877" width="0.9680%" height="15" fill="rgb(227,5,17)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1861" width="0.9680%" height="15" fill="rgb(221,226,24)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1845" width="0.9680%" height="15" fill="rgb(211,5,48)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1829" width="0.9680%" height="15" fill="rgb(219,150,6)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1813" width="0.9680%" height="15" fill="rgb(251,46,16)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1797" width="0.9680%" height="15" fill="rgb(220,204,40)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1807.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1781" width="0.9680%" height="15" fill="rgb(211,85,2)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1791.50"></text></g><g><title>core::mem::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1765" width="0.9680%" height="15" fill="rgb(229,17,7)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1749" width="0.9680%" height="15" fill="rgb(239,72,28)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1759.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1733" width="0.9680%" height="15" fill="rgb(230,47,54)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1743.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1717" width="0.9680%" height="15" fill="rgb(214,50,8)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1701" width="0.9680%" height="15" fill="rgb(216,198,43)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1711.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1685" width="0.9680%" height="15" fill="rgb(234,20,35)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1695.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1669" width="0.9680%" height="15" fill="rgb(254,45,19)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1653" width="0.9680%" height="15" fill="rgb(219,14,44)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1637" width="0.9680%" height="15" fill="rgb(217,220,26)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1621" width="0.9680%" height="15" fill="rgb(213,158,28)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1605" width="0.9680%" height="15" fill="rgb(252,51,52)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1615.50"></text></g><g><title>core::mem::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1589" width="0.9680%" height="15" fill="rgb(246,89,16)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1573" width="0.9680%" height="15" fill="rgb(216,158,49)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1583.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1557" width="0.9680%" height="15" fill="rgb(236,107,19)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1567.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1541" width="0.9680%" height="15" fill="rgb(228,185,30)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1525" width="0.9680%" height="15" fill="rgb(246,134,8)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1535.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1509" width="0.9680%" height="15" fill="rgb(214,143,50)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1519.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1493" width="0.9680%" height="15" fill="rgb(228,75,8)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1477" width="0.9680%" height="15" fill="rgb(207,175,4)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1461" width="0.9680%" height="15" fill="rgb(205,108,24)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1445" width="0.9680%" height="15" fill="rgb(244,120,49)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1429" width="0.9680%" height="15" fill="rgb(223,47,38)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1413" width="0.9680%" height="15" fill="rgb(229,179,11)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1397" width="0.9680%" height="15" fill="rgb(231,122,1)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1381" width="0.9680%" height="15" fill="rgb(245,119,9)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1391.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1365" width="0.9680%" height="15" fill="rgb(241,163,25)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1375.50"></text></g><g><title>core::mem::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1349" width="0.9680%" height="15" fill="rgb(217,214,3)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1333" width="0.9680%" height="15" fill="rgb(240,86,28)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1343.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1317" width="0.9680%" height="15" fill="rgb(215,47,9)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1327.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1301" width="0.9680%" height="15" fill="rgb(252,25,45)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1285" width="0.9680%" height="15" fill="rgb(251,164,9)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1295.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1269" width="0.9680%" height="15" fill="rgb(233,194,0)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1279.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1253" width="0.9680%" height="15" fill="rgb(249,111,24)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1237" width="0.9680%" height="15" fill="rgb(250,223,3)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1221" width="0.9680%" height="15" fill="rgb(236,178,37)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1205" width="0.9680%" height="15" fill="rgb(241,158,50)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1189" width="0.9680%" height="15" fill="rgb(213,121,41)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1173" width="0.9680%" height="15" fill="rgb(240,92,3)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1157" width="0.9680%" height="15" fill="rgb(205,123,3)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1141" width="0.9680%" height="15" fill="rgb(205,97,47)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1125" width="0.9680%" height="15" fill="rgb(247,152,14)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1135.50"></text></g><g><title>core::mem::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1109" width="0.9680%" height="15" fill="rgb(248,195,53)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1093" width="0.9680%" height="15" fill="rgb(226,201,16)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1077" width="0.9680%" height="15" fill="rgb(205,98,0)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1087.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1061" width="0.9680%" height="15" fill="rgb(214,191,48)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1045" width="0.9680%" height="15" fill="rgb(237,112,39)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1055.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1029" width="0.9680%" height="15" fill="rgb(247,203,27)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1039.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="1013" width="0.9680%" height="15" fill="rgb(235,124,28)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="997" width="0.9680%" height="15" fill="rgb(208,207,46)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="981" width="0.9680%" height="15" fill="rgb(234,176,4)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="965" width="0.9680%" height="15" fill="rgb(230,133,28)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="949" width="0.9680%" height="15" fill="rgb(211,137,40)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="933" width="0.9680%" height="15" fill="rgb(254,35,13)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="917" width="0.9680%" height="15" fill="rgb(225,49,51)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="901" width="0.9680%" height="15" fill="rgb(251,10,15)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="911.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="885" width="0.9680%" height="15" fill="rgb(228,207,15)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="895.50"></text></g><g><title>core::mem::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="869" width="0.9680%" height="15" fill="rgb(241,99,19)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="853" width="0.9680%" height="15" fill="rgb(207,104,49)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="863.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="837" width="0.9680%" height="15" fill="rgb(234,99,18)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="847.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="821" width="0.9680%" height="15" fill="rgb(213,191,49)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="805" width="0.9680%" height="15" fill="rgb(210,226,19)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="789" width="0.9680%" height="15" fill="rgb(229,97,18)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="799.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="773" width="0.9680%" height="15" fill="rgb(211,167,15)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="757" width="0.9680%" height="15" fill="rgb(210,169,34)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="741" width="0.9680%" height="15" fill="rgb(241,121,31)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="725" width="0.9680%" height="15" fill="rgb(232,40,11)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="709" width="0.9680%" height="15" fill="rgb(205,86,26)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="693" width="0.9680%" height="15" fill="rgb(231,126,28)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="677" width="0.9680%" height="15" fill="rgb(219,221,18)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="661" width="0.9680%" height="15" fill="rgb(211,40,0)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="645" width="0.9680%" height="15" fill="rgb(239,85,43)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="655.50"></text></g><g><title>core::mem::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="629" width="0.9680%" height="15" fill="rgb(231,55,21)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="613" width="0.9680%" height="15" fill="rgb(225,184,43)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="597" width="0.9680%" height="15" fill="rgb(251,158,41)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="581" width="0.9680%" height="15" fill="rgb(234,159,37)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="565" width="0.9680%" height="15" fill="rgb(216,204,22)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="549" width="0.9680%" height="15" fill="rgb(214,17,3)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="559.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="533" width="0.9680%" height="15" fill="rgb(212,111,17)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="543.50"></text></g><g><title>cfree (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="517" width="0.9680%" height="15" fill="rgb(221,157,24)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="527.50"></text></g><g><title>[libc.so.6] (2,594,189 samples, 0.97%)</title><rect x="91.8000%" y="501" width="0.9680%" height="15" fill="rgb(252,16,13)" fg:x="246011530" fg:w="2594189"/><text x="92.0500%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::LayoutFrame&gt;&gt; (5,248,445 samples, 1.96%)</title><rect x="91.8000%" y="1893" width="1.9585%" height="15" fill="rgb(221,62,2)" fg:x="246011530" fg:w="5248445"/><text x="92.0500%" y="1903.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;benchmark::LayoutFrame&gt;&gt; (2,654,256 samples, 0.99%)</title><rect x="92.7680%" y="1877" width="0.9904%" height="15" fill="rgb(247,87,22)" fg:x="248605719" fg:w="2654256"/><text x="93.0180%" y="1887.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,654,256 samples, 0.99%)</title><rect x="92.7680%" y="1861" width="0.9904%" height="15" fill="rgb(215,73,9)" fg:x="248605719" fg:w="2654256"/><text x="93.0180%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,654,256 samples, 0.99%)</title><rect x="92.7680%" y="1845" width="0.9904%" height="15" fill="rgb(207,175,33)" fg:x="248605719" fg:w="2654256"/><text x="93.0180%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,654,256 samples, 0.99%)</title><rect x="92.7680%" y="1829" width="0.9904%" height="15" fill="rgb(243,129,54)" fg:x="248605719" fg:w="2654256"/><text x="93.0180%" y="1839.50"></text></g><g><title>alloc::alloc::dealloc (2,654,256 samples, 0.99%)</title><rect x="92.7680%" y="1813" width="0.9904%" height="15" fill="rgb(227,119,45)" fg:x="248605719" fg:w="2654256"/><text x="93.0180%" y="1823.50"></text></g><g><title>cfree (2,654,256 samples, 0.99%)</title><rect x="92.7680%" y="1797" width="0.9904%" height="15" fill="rgb(205,109,36)" fg:x="248605719" fg:w="2654256"/><text x="93.0180%" y="1807.50"></text></g><g><title>[libc.so.6] (2,654,256 samples, 0.99%)</title><rect x="92.7680%" y="1781" width="0.9904%" height="15" fill="rgb(205,6,39)" fg:x="248605719" fg:w="2654256"/><text x="93.0180%" y="1791.50"></text></g><g><title>[libc.so.6] (2,654,256 samples, 0.99%)</title><rect x="92.7680%" y="1765" width="0.9904%" height="15" fill="rgb(221,32,16)" fg:x="248605719" fg:w="2654256"/><text x="93.0180%" y="1775.50"></text></g><g><title>std::panic::catch_unwind (232,408,001 samples, 86.72%)</title><rect x="8.0673%" y="2037" width="86.7238%" height="15" fill="rgb(228,144,50)" fg:x="21619246" fg:w="232408001"/><text x="8.3173%" y="2047.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (232,408,001 samples, 86.72%)</title><rect x="8.0673%" y="2021" width="86.7238%" height="15" fill="rgb(229,201,53)" fg:x="21619246" fg:w="232408001"/><text x="8.3173%" y="2031.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (232,408,001 samples, 86.72%)</title><rect x="8.0673%" y="2005" width="86.7238%" height="15" fill="rgb(249,153,27)" fg:x="21619246" fg:w="232408001"/><text x="8.3173%" y="2015.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (232,408,001 samples, 86.72%)</title><rect x="8.0673%" y="1989" width="86.7238%" height="15" fill="rgb(227,106,25)" fg:x="21619246" fg:w="232408001"/><text x="8.3173%" y="1999.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (232,408,001 samples, 86.72%)</title><rect x="8.0673%" y="1973" width="86.7238%" height="15" fill="rgb(230,65,29)" fg:x="21619246" fg:w="232408001"/><text x="8.3173%" y="1983.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (232,408,001 samples, 86.72%)</title><rect x="8.0673%" y="1957" width="86.7238%" height="15" fill="rgb(221,57,46)" fg:x="21619246" fg:w="232408001"/><text x="8.3173%" y="1967.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (232,408,001 samples, 86.72%)</title><rect x="8.0673%" y="1941" width="86.7238%" height="15" fill="rgb(229,161,17)" fg:x="21619246" fg:w="232408001"/><text x="8.3173%" y="1951.50">core::ops::function::FnOnce::call_once</text></g><g><title>benchmark::main (232,408,001 samples, 86.72%)</title><rect x="8.0673%" y="1925" width="86.7238%" height="15" fill="rgb(222,213,11)" fg:x="21619246" fg:w="232408001"/><text x="8.3173%" y="1935.50">benchmark::main</text></g><g><title>benchmark::run_web_browser_layout_trace_benchmark (232,408,001 samples, 86.72%)</title><rect x="8.0673%" y="1909" width="86.7238%" height="15" fill="rgb(235,35,13)" fg:x="21619246" fg:w="232408001"/><text x="8.3173%" y="1919.50">benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1893" width="1.0326%" height="15" fill="rgb(233,158,34)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1877" width="1.0326%" height="15" fill="rgb(215,151,48)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1861" width="1.0326%" height="15" fill="rgb(229,84,14)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1845" width="1.0326%" height="15" fill="rgb(229,68,14)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1829" width="1.0326%" height="15" fill="rgb(243,106,26)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1813" width="1.0326%" height="15" fill="rgb(206,45,38)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1823.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1797" width="1.0326%" height="15" fill="rgb(226,6,15)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1781" width="1.0326%" height="15" fill="rgb(232,22,54)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1765" width="1.0326%" height="15" fill="rgb(229,222,32)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1775.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1749" width="1.0326%" height="15" fill="rgb(228,62,29)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1759.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1733" width="1.0326%" height="15" fill="rgb(251,103,34)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1717" width="1.0326%" height="15" fill="rgb(233,12,30)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1701" width="1.0326%" height="15" fill="rgb(238,52,0)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1685" width="1.0326%" height="15" fill="rgb(223,98,5)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1669" width="1.0326%" height="15" fill="rgb(228,75,37)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1653" width="1.0326%" height="15" fill="rgb(205,115,49)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1637" width="1.0326%" height="15" fill="rgb(250,154,43)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1621" width="1.0326%" height="15" fill="rgb(226,43,29)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1605" width="1.0326%" height="15" fill="rgb(249,228,39)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1589" width="1.0326%" height="15" fill="rgb(216,79,43)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1573" width="1.0326%" height="15" fill="rgb(228,95,12)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1557" width="1.0326%" height="15" fill="rgb(249,221,15)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1541" width="1.0326%" height="15" fill="rgb(233,34,13)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1525" width="1.0326%" height="15" fill="rgb(214,103,39)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1509" width="1.0326%" height="15" fill="rgb(251,126,39)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1493" width="1.0326%" height="15" fill="rgb(214,216,36)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1477" width="1.0326%" height="15" fill="rgb(220,221,8)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1461" width="1.0326%" height="15" fill="rgb(240,216,3)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1445" width="1.0326%" height="15" fill="rgb(232,218,17)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1429" width="1.0326%" height="15" fill="rgb(229,163,45)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1439.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1413" width="1.0326%" height="15" fill="rgb(231,110,42)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1397" width="1.0326%" height="15" fill="rgb(208,170,48)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1381" width="1.0326%" height="15" fill="rgb(239,116,25)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1365" width="1.0326%" height="15" fill="rgb(219,200,50)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1349" width="1.0326%" height="15" fill="rgb(245,200,0)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1333" width="1.0326%" height="15" fill="rgb(245,119,33)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1317" width="1.0326%" height="15" fill="rgb(231,125,12)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1301" width="1.0326%" height="15" fill="rgb(216,96,41)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1285" width="1.0326%" height="15" fill="rgb(248,43,45)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1269" width="1.0326%" height="15" fill="rgb(217,222,7)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1253" width="1.0326%" height="15" fill="rgb(233,28,6)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1237" width="1.0326%" height="15" fill="rgb(231,218,15)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1221" width="1.0326%" height="15" fill="rgb(226,171,48)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1205" width="1.0326%" height="15" fill="rgb(235,201,9)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1189" width="1.0326%" height="15" fill="rgb(217,80,15)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1173" width="1.0326%" height="15" fill="rgb(219,152,8)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1157" width="1.0326%" height="15" fill="rgb(243,107,38)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1141" width="1.0326%" height="15" fill="rgb(231,17,5)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1125" width="1.0326%" height="15" fill="rgb(209,25,54)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1109" width="1.0326%" height="15" fill="rgb(219,0,2)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1093" width="1.0326%" height="15" fill="rgb(246,9,5)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1077" width="1.0326%" height="15" fill="rgb(226,159,4)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1061" width="1.0326%" height="15" fill="rgb(219,175,34)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1045" width="1.0326%" height="15" fill="rgb(236,10,46)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1029" width="1.0326%" height="15" fill="rgb(240,211,16)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="1013" width="1.0326%" height="15" fill="rgb(205,3,43)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="997" width="1.0326%" height="15" fill="rgb(245,7,22)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="981" width="1.0326%" height="15" fill="rgb(239,132,32)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="965" width="1.0326%" height="15" fill="rgb(228,202,34)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="949" width="1.0326%" height="15" fill="rgb(254,200,22)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="933" width="1.0326%" height="15" fill="rgb(219,10,39)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="917" width="1.0326%" height="15" fill="rgb(226,210,39)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="901" width="1.0326%" height="15" fill="rgb(208,219,16)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="885" width="1.0326%" height="15" fill="rgb(216,158,51)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="869" width="1.0326%" height="15" fill="rgb(233,14,44)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="853" width="1.0326%" height="15" fill="rgb(237,97,39)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="837" width="1.0326%" height="15" fill="rgb(218,198,43)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="821" width="1.0326%" height="15" fill="rgb(231,104,20)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="805" width="1.0326%" height="15" fill="rgb(254,36,13)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="789" width="1.0326%" height="15" fill="rgb(248,14,50)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="773" width="1.0326%" height="15" fill="rgb(217,107,29)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="757" width="1.0326%" height="15" fill="rgb(251,169,33)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="741" width="1.0326%" height="15" fill="rgb(217,108,32)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="725" width="1.0326%" height="15" fill="rgb(219,66,42)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="709" width="1.0326%" height="15" fill="rgb(206,180,7)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="693" width="1.0326%" height="15" fill="rgb(208,226,31)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="677" width="1.0326%" height="15" fill="rgb(218,26,49)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="661" width="1.0326%" height="15" fill="rgb(233,197,48)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="645" width="1.0326%" height="15" fill="rgb(252,181,51)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="629" width="1.0326%" height="15" fill="rgb(253,90,19)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="613" width="1.0326%" height="15" fill="rgb(215,171,30)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="597" width="1.0326%" height="15" fill="rgb(214,222,9)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="581" width="1.0326%" height="15" fill="rgb(223,3,22)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="565" width="1.0326%" height="15" fill="rgb(225,196,46)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="575.50"></text></g><g><title>cfree (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="549" width="1.0326%" height="15" fill="rgb(209,110,37)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="559.50"></text></g><g><title>[libc.so.6] (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="533" width="1.0326%" height="15" fill="rgb(249,89,12)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="543.50"></text></g><g><title>[libc.so.6] (2,767,272 samples, 1.03%)</title><rect x="93.7585%" y="517" width="1.0326%" height="15" fill="rgb(226,27,33)" fg:x="251259975" fg:w="2767272"/><text x="94.0085%" y="527.50"></text></g><g><title>_start (232,909,505 samples, 86.91%)</title><rect x="8.0673%" y="2181" width="86.9109%" height="15" fill="rgb(213,82,22)" fg:x="21619246" fg:w="232909505"/><text x="8.3173%" y="2191.50">_start</text></g><g><title>__libc_start_main (232,909,505 samples, 86.91%)</title><rect x="8.0673%" y="2165" width="86.9109%" height="15" fill="rgb(248,140,0)" fg:x="21619246" fg:w="232909505"/><text x="8.3173%" y="2175.50">__libc_start_main</text></g><g><title>[libc.so.6] (232,909,505 samples, 86.91%)</title><rect x="8.0673%" y="2149" width="86.9109%" height="15" fill="rgb(228,106,3)" fg:x="21619246" fg:w="232909505"/><text x="8.3173%" y="2159.50">[libc.so.6]</text></g><g><title>main (232,909,505 samples, 86.91%)</title><rect x="8.0673%" y="2133" width="86.9109%" height="15" fill="rgb(209,23,37)" fg:x="21619246" fg:w="232909505"/><text x="8.3173%" y="2143.50">main</text></g><g><title>std::rt::lang_start_internal (232,909,505 samples, 86.91%)</title><rect x="8.0673%" y="2117" width="86.9109%" height="15" fill="rgb(241,93,50)" fg:x="21619246" fg:w="232909505"/><text x="8.3173%" y="2127.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (232,909,505 samples, 86.91%)</title><rect x="8.0673%" y="2101" width="86.9109%" height="15" fill="rgb(253,46,43)" fg:x="21619246" fg:w="232909505"/><text x="8.3173%" y="2111.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (232,909,505 samples, 86.91%)</title><rect x="8.0673%" y="2085" width="86.9109%" height="15" fill="rgb(226,206,43)" fg:x="21619246" fg:w="232909505"/><text x="8.3173%" y="2095.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (232,909,505 samples, 86.91%)</title><rect x="8.0673%" y="2069" width="86.9109%" height="15" fill="rgb(217,54,7)" fg:x="21619246" fg:w="232909505"/><text x="8.3173%" y="2079.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (232,909,505 samples, 86.91%)</title><rect x="8.0673%" y="2053" width="86.9109%" height="15" fill="rgb(223,5,52)" fg:x="21619246" fg:w="232909505"/><text x="8.3173%" y="2063.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::rt::init (501,504 samples, 0.19%)</title><rect x="94.7911%" y="2037" width="0.1871%" height="15" fill="rgb(206,52,46)" fg:x="254027247" fg:w="501504"/><text x="95.0411%" y="2047.50"></text></g><g><title>std::sys::pal::unix::init (501,504 samples, 0.19%)</title><rect x="94.7911%" y="2021" width="0.1871%" height="15" fill="rgb(253,136,11)" fg:x="254027247" fg:w="501504"/><text x="95.0411%" y="2031.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::init (501,504 samples, 0.19%)</title><rect x="94.7911%" y="2005" width="0.1871%" height="15" fill="rgb(208,106,33)" fg:x="254027247" fg:w="501504"/><text x="95.0411%" y="2015.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard (501,504 samples, 0.19%)</title><rect x="94.7911%" y="1989" width="0.1871%" height="15" fill="rgb(206,54,4)" fg:x="254027247" fg:w="501504"/><text x="95.0411%" y="1999.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard_linux (501,504 samples, 0.19%)</title><rect x="94.7911%" y="1973" width="0.1871%" height="15" fill="rgb(213,3,15)" fg:x="254027247" fg:w="501504"/><text x="95.0411%" y="1983.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::stack_start_aligned (501,504 samples, 0.19%)</title><rect x="94.7911%" y="1957" width="0.1871%" height="15" fill="rgb(252,211,39)" fg:x="254027247" fg:w="501504"/><text x="95.0411%" y="1967.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack_start (501,504 samples, 0.19%)</title><rect x="94.7911%" y="1941" width="0.1871%" height="15" fill="rgb(223,6,36)" fg:x="254027247" fg:w="501504"/><text x="95.0411%" y="1951.50"></text></g><g><title>pthread_getattr_np (501,504 samples, 0.19%)</title><rect x="94.7911%" y="1925" width="0.1871%" height="15" fill="rgb(252,169,45)" fg:x="254027247" fg:w="501504"/><text x="95.0411%" y="1935.50"></text></g><g><title>__isoc23_sscanf (501,504 samples, 0.19%)</title><rect x="94.7911%" y="1909" width="0.1871%" height="15" fill="rgb(212,48,26)" fg:x="254027247" fg:w="501504"/><text x="95.0411%" y="1919.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.19%)</title><rect x="94.7911%" y="1893" width="0.1871%" height="15" fill="rgb(251,102,48)" fg:x="254027247" fg:w="501504"/><text x="95.0411%" y="1903.50"></text></g><g><title>benchmark::find_node_by_path_mut (3,014,469 samples, 1.12%)</title><rect x="94.9782%" y="2181" width="1.1249%" height="15" fill="rgb(243,208,16)" fg:x="254528751" fg:w="3014469"/><text x="95.2282%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,844,540 samples, 1.06%)</title><rect x="96.1031%" y="2181" width="1.0614%" height="15" fill="rgb(219,96,24)" fg:x="257543220" fg:w="2844540"/><text x="96.3531%" y="2191.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,791,953 samples, 1.04%)</title><rect x="97.1645%" y="2181" width="1.0418%" height="15" fill="rgb(219,33,29)" fg:x="260387760" fg:w="2791953"/><text x="97.4145%" y="2191.50"></text></g><g><title>all (267,986,417 samples, 100%)</title><rect x="0.0000%" y="2213" width="100.0000%" height="15" fill="rgb(223,176,5)" fg:x="0" fg:w="267986417"/><text x="0.2500%" y="2223.50"></text></g><g><title>benchmark (267,986,417 samples, 100.00%)</title><rect x="0.0000%" y="2197" width="100.0000%" height="15" fill="rgb(228,140,14)" fg:x="0" fg:w="267986417"/><text x="0.2500%" y="2207.50">benchmark</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,806,704 samples, 1.79%)</title><rect x="98.2064%" y="2181" width="1.7936%" height="15" fill="rgb(217,179,31)" fg:x="263179713" fg:w="4806704"/><text x="98.4564%" y="2191.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,806,704 samples, 1.79%)</title><rect x="98.2064%" y="2165" width="1.7936%" height="15" fill="rgb(230,9,30)" fg:x="263179713" fg:w="4806704"/><text x="98.4564%" y="2175.50">&lt;..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_any_number (2,430,128 samples, 0.91%)</title><rect x="99.0932%" y="2149" width="0.9068%" height="15" fill="rgb(230,136,20)" fg:x="265556289" fg:w="2430128"/><text x="99.3432%" y="2159.50"></text></g></svg></svg>