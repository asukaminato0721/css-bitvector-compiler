<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2086" onload="init(evt)" viewBox="0 0 1200 2086" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2086" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2069.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2069.00"> </text><svg id="frames" x="10" width="1180" total_samples="302005980"><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,128,883 samples, 1.04%)</title><rect x="0.0000%" y="2005" width="1.0360%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3128883"/><text x="0.2500%" y="2015.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,695,030 samples, 0.56%)</title><rect x="1.0360%" y="2005" width="0.5613%" height="15" fill="rgb(217,0,24)" fg:x="3128883" fg:w="1695030"/><text x="1.2860%" y="2015.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,695,030 samples, 0.56%)</title><rect x="1.0360%" y="1989" width="0.5613%" height="15" fill="rgb(221,193,54)" fg:x="3128883" fg:w="1695030"/><text x="1.2860%" y="1999.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,695,030 samples, 0.56%)</title><rect x="1.0360%" y="1973" width="0.5613%" height="15" fill="rgb(248,212,6)" fg:x="3128883" fg:w="1695030"/><text x="1.2860%" y="1983.50"></text></g><g><title>[libc.so.6] (6,079,586 samples, 2.01%)</title><rect x="1.5973%" y="2005" width="2.0131%" height="15" fill="rgb(208,68,35)" fg:x="4823913" fg:w="6079586"/><text x="1.8473%" y="2015.50">[..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,161,686 samples, 1.05%)</title><rect x="4.5691%" y="1989" width="1.0469%" height="15" fill="rgb(232,128,0)" fg:x="13798944" fg:w="3161686"/><text x="4.8191%" y="1999.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,161,686 samples, 1.05%)</title><rect x="4.5691%" y="1973" width="1.0469%" height="15" fill="rgb(207,160,47)" fg:x="13798944" fg:w="3161686"/><text x="4.8191%" y="1983.50"></text></g><g><title>alloc::slice::hack::to_vec (3,161,686 samples, 1.05%)</title><rect x="4.5691%" y="1957" width="1.0469%" height="15" fill="rgb(228,23,34)" fg:x="13798944" fg:w="3161686"/><text x="4.8191%" y="1967.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,161,686 samples, 1.05%)</title><rect x="4.5691%" y="1941" width="1.0469%" height="15" fill="rgb(218,30,26)" fg:x="13798944" fg:w="3161686"/><text x="4.8191%" y="1951.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (3,161,686 samples, 1.05%)</title><rect x="4.5691%" y="1925" width="1.0469%" height="15" fill="rgb(220,122,19)" fg:x="13798944" fg:w="3161686"/><text x="4.8191%" y="1935.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,161,686 samples, 1.05%)</title><rect x="4.5691%" y="1909" width="1.0469%" height="15" fill="rgb(250,228,42)" fg:x="13798944" fg:w="3161686"/><text x="4.8191%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,161,686 samples, 1.05%)</title><rect x="4.5691%" y="1893" width="1.0469%" height="15" fill="rgb(240,193,28)" fg:x="13798944" fg:w="3161686"/><text x="4.8191%" y="1903.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,161,686 samples, 1.05%)</title><rect x="4.5691%" y="1877" width="1.0469%" height="15" fill="rgb(216,20,37)" fg:x="13798944" fg:w="3161686"/><text x="4.8191%" y="1887.50"></text></g><g><title>alloc::slice::hack::to_vec (3,161,686 samples, 1.05%)</title><rect x="4.5691%" y="1861" width="1.0469%" height="15" fill="rgb(206,188,39)" fg:x="13798944" fg:w="3161686"/><text x="4.8191%" y="1871.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,161,686 samples, 1.05%)</title><rect x="4.5691%" y="1845" width="1.0469%" height="15" fill="rgb(217,207,13)" fg:x="13798944" fg:w="3161686"/><text x="4.8191%" y="1855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,161,686 samples, 1.05%)</title><rect x="4.5691%" y="1829" width="1.0469%" height="15" fill="rgb(231,73,38)" fg:x="13798944" fg:w="3161686"/><text x="4.8191%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,161,686 samples, 1.05%)</title><rect x="4.5691%" y="1813" width="1.0469%" height="15" fill="rgb(225,20,46)" fg:x="13798944" fg:w="3161686"/><text x="4.8191%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,161,686 samples, 1.05%)</title><rect x="4.5691%" y="1797" width="1.0469%" height="15" fill="rgb(210,31,41)" fg:x="13798944" fg:w="3161686"/><text x="4.8191%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,161,686 samples, 1.05%)</title><rect x="4.5691%" y="1781" width="1.0469%" height="15" fill="rgb(221,200,47)" fg:x="13798944" fg:w="3161686"/><text x="4.8191%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,161,686 samples, 1.05%)</title><rect x="4.5691%" y="1765" width="1.0469%" height="15" fill="rgb(226,26,5)" fg:x="13798944" fg:w="3161686"/><text x="4.8191%" y="1775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,161,686 samples, 1.05%)</title><rect x="4.5691%" y="1749" width="1.0469%" height="15" fill="rgb(249,33,26)" fg:x="13798944" fg:w="3161686"/><text x="4.8191%" y="1759.50"></text></g><g><title>alloc::alloc::alloc (3,161,686 samples, 1.05%)</title><rect x="4.5691%" y="1733" width="1.0469%" height="15" fill="rgb(235,183,28)" fg:x="13798944" fg:w="3161686"/><text x="4.8191%" y="1743.50"></text></g><g><title>[unknown] (8,945,899 samples, 2.96%)</title><rect x="3.6104%" y="2005" width="2.9622%" height="15" fill="rgb(221,5,38)" fg:x="10903499" fg:w="8945899"/><text x="3.8604%" y="2015.50">[un..</text></g><g><title>malloc (2,888,768 samples, 0.96%)</title><rect x="5.6160%" y="1989" width="0.9565%" height="15" fill="rgb(247,18,42)" fg:x="16960630" fg:w="2888768"/><text x="5.8660%" y="1999.50"></text></g><g><title>__rdl_dealloc (2,951,759 samples, 0.98%)</title><rect x="6.5725%" y="2005" width="0.9774%" height="15" fill="rgb(241,131,45)" fg:x="19849398" fg:w="2951759"/><text x="6.8225%" y="2015.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2,951,759 samples, 0.98%)</title><rect x="6.5725%" y="1989" width="0.9774%" height="15" fill="rgb(249,31,29)" fg:x="19849398" fg:w="2951759"/><text x="6.8225%" y="1999.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,076,841 samples, 1.02%)</title><rect x="7.5499%" y="1557" width="1.0188%" height="15" fill="rgb(225,111,53)" fg:x="22801157" fg:w="3076841"/><text x="7.7999%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,076,841 samples, 1.02%)</title><rect x="7.5499%" y="1541" width="1.0188%" height="15" fill="rgb(238,160,17)" fg:x="22801157" fg:w="3076841"/><text x="7.7999%" y="1551.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,076,841 samples, 1.02%)</title><rect x="7.5499%" y="1525" width="1.0188%" height="15" fill="rgb(214,148,48)" fg:x="22801157" fg:w="3076841"/><text x="7.7999%" y="1535.50"></text></g><g><title>alloc::slice::hack::to_vec (3,076,841 samples, 1.02%)</title><rect x="7.5499%" y="1509" width="1.0188%" height="15" fill="rgb(232,36,49)" fg:x="22801157" fg:w="3076841"/><text x="7.7999%" y="1519.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,076,841 samples, 1.02%)</title><rect x="7.5499%" y="1493" width="1.0188%" height="15" fill="rgb(209,103,24)" fg:x="22801157" fg:w="3076841"/><text x="7.7999%" y="1503.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,076,841 samples, 1.02%)</title><rect x="7.5499%" y="1477" width="1.0188%" height="15" fill="rgb(229,88,8)" fg:x="22801157" fg:w="3076841"/><text x="7.7999%" y="1487.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,076,841 samples, 1.02%)</title><rect x="7.5499%" y="1461" width="1.0188%" height="15" fill="rgb(213,181,19)" fg:x="22801157" fg:w="3076841"/><text x="7.7999%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,740,910 samples, 0.91%)</title><rect x="9.4036%" y="837" width="0.9076%" height="15" fill="rgb(254,191,54)" fg:x="28399394" fg:w="2740910"/><text x="9.6536%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,740,910 samples, 0.91%)</title><rect x="9.4036%" y="821" width="0.9076%" height="15" fill="rgb(241,83,37)" fg:x="28399394" fg:w="2740910"/><text x="9.6536%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (2,740,910 samples, 0.91%)</title><rect x="9.4036%" y="805" width="0.9076%" height="15" fill="rgb(233,36,39)" fg:x="28399394" fg:w="2740910"/><text x="9.6536%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,740,910 samples, 0.91%)</title><rect x="9.4036%" y="789" width="0.9076%" height="15" fill="rgb(226,3,54)" fg:x="28399394" fg:w="2740910"/><text x="9.6536%" y="799.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,740,910 samples, 0.91%)</title><rect x="9.4036%" y="773" width="0.9076%" height="15" fill="rgb(245,192,40)" fg:x="28399394" fg:w="2740910"/><text x="9.6536%" y="783.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,740,910 samples, 0.91%)</title><rect x="9.4036%" y="757" width="0.9076%" height="15" fill="rgb(238,167,29)" fg:x="28399394" fg:w="2740910"/><text x="9.6536%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,740,910 samples, 0.91%)</title><rect x="9.4036%" y="741" width="0.9076%" height="15" fill="rgb(232,182,51)" fg:x="28399394" fg:w="2740910"/><text x="9.6536%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,740,910 samples, 0.91%)</title><rect x="9.4036%" y="725" width="0.9076%" height="15" fill="rgb(231,60,39)" fg:x="28399394" fg:w="2740910"/><text x="9.6536%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,740,910 samples, 0.91%)</title><rect x="9.4036%" y="709" width="0.9076%" height="15" fill="rgb(208,69,12)" fg:x="28399394" fg:w="2740910"/><text x="9.6536%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,740,910 samples, 0.91%)</title><rect x="9.4036%" y="693" width="0.9076%" height="15" fill="rgb(235,93,37)" fg:x="28399394" fg:w="2740910"/><text x="9.6536%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,740,910 samples, 0.91%)</title><rect x="9.4036%" y="677" width="0.9076%" height="15" fill="rgb(213,116,39)" fg:x="28399394" fg:w="2740910"/><text x="9.6536%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (2,740,910 samples, 0.91%)</title><rect x="9.4036%" y="661" width="0.9076%" height="15" fill="rgb(222,207,29)" fg:x="28399394" fg:w="2740910"/><text x="9.6536%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,740,910 samples, 0.91%)</title><rect x="9.4036%" y="645" width="0.9076%" height="15" fill="rgb(206,96,30)" fg:x="28399394" fg:w="2740910"/><text x="9.6536%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,740,910 samples, 0.91%)</title><rect x="9.4036%" y="629" width="0.9076%" height="15" fill="rgb(218,138,4)" fg:x="28399394" fg:w="2740910"/><text x="9.6536%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,740,910 samples, 0.91%)</title><rect x="9.4036%" y="613" width="0.9076%" height="15" fill="rgb(250,191,14)" fg:x="28399394" fg:w="2740910"/><text x="9.6536%" y="623.50"></text></g><g><title>[libc.so.6] (2,740,910 samples, 0.91%)</title><rect x="9.4036%" y="597" width="0.9076%" height="15" fill="rgb(239,60,40)" fg:x="28399394" fg:w="2740910"/><text x="9.6536%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,399,862 samples, 2.78%)</title><rect x="8.5687%" y="1269" width="2.7814%" height="15" fill="rgb(206,27,48)" fg:x="25877998" fg:w="8399862"/><text x="8.8187%" y="1279.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,399,862 samples, 2.78%)</title><rect x="8.5687%" y="1253" width="2.7814%" height="15" fill="rgb(225,35,8)" fg:x="25877998" fg:w="8399862"/><text x="8.8187%" y="1263.50">al..</text></g><g><title>alloc::slice::hack::to_vec (8,399,862 samples, 2.78%)</title><rect x="8.5687%" y="1237" width="2.7814%" height="15" fill="rgb(250,213,24)" fg:x="25877998" fg:w="8399862"/><text x="8.8187%" y="1247.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,399,862 samples, 2.78%)</title><rect x="8.5687%" y="1221" width="2.7814%" height="15" fill="rgb(247,123,22)" fg:x="25877998" fg:w="8399862"/><text x="8.8187%" y="1231.50">&lt;T..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (8,399,862 samples, 2.78%)</title><rect x="8.5687%" y="1205" width="2.7814%" height="15" fill="rgb(231,138,38)" fg:x="25877998" fg:w="8399862"/><text x="8.8187%" y="1215.50">&lt;s..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="1189" width="1.9465%" height="15" fill="rgb(231,145,46)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="1199.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="1173" width="1.9465%" height="15" fill="rgb(251,118,11)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="1183.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="1157" width="1.9465%" height="15" fill="rgb(217,147,25)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="1167.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="1141" width="1.9465%" height="15" fill="rgb(247,81,37)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="1151.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="1125" width="1.9465%" height="15" fill="rgb(209,12,38)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="1135.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="1109" width="1.9465%" height="15" fill="rgb(227,1,9)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="1119.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="1093" width="1.9465%" height="15" fill="rgb(248,47,43)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="1103.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="1077" width="1.9465%" height="15" fill="rgb(221,10,30)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="1087.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="1061" width="1.9465%" height="15" fill="rgb(210,229,1)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="1071.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="1045" width="1.9465%" height="15" fill="rgb(222,148,37)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="1055.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="1029" width="1.9465%" height="15" fill="rgb(234,67,33)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="1039.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="1013" width="1.9465%" height="15" fill="rgb(247,98,35)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="1023.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="997" width="1.9465%" height="15" fill="rgb(247,138,52)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="1007.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="981" width="1.9465%" height="15" fill="rgb(213,79,30)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="991.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="965" width="1.9465%" height="15" fill="rgb(246,177,23)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="975.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="949" width="1.9465%" height="15" fill="rgb(230,62,27)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="959.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="933" width="1.9465%" height="15" fill="rgb(216,154,8)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="943.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="917" width="1.9465%" height="15" fill="rgb(244,35,45)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="927.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="901" width="1.9465%" height="15" fill="rgb(251,115,12)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="911.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="885" width="1.9465%" height="15" fill="rgb(240,54,50)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="895.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="869" width="1.9465%" height="15" fill="rgb(233,84,52)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="879.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,878,466 samples, 1.95%)</title><rect x="9.4036%" y="853" width="1.9465%" height="15" fill="rgb(207,117,47)" fg:x="28399394" fg:w="5878466"/><text x="9.6536%" y="863.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (3,137,556 samples, 1.04%)</title><rect x="10.3112%" y="837" width="1.0389%" height="15" fill="rgb(249,43,39)" fg:x="31140304" fg:w="3137556"/><text x="10.5612%" y="847.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (3,137,556 samples, 1.04%)</title><rect x="10.3112%" y="821" width="1.0389%" height="15" fill="rgb(209,38,44)" fg:x="31140304" fg:w="3137556"/><text x="10.5612%" y="831.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3,137,556 samples, 1.04%)</title><rect x="10.3112%" y="805" width="1.0389%" height="15" fill="rgb(236,212,23)" fg:x="31140304" fg:w="3137556"/><text x="10.5612%" y="815.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (3,137,556 samples, 1.04%)</title><rect x="10.3112%" y="789" width="1.0389%" height="15" fill="rgb(242,79,21)" fg:x="31140304" fg:w="3137556"/><text x="10.5612%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push_with_handle (3,137,556 samples, 1.04%)</title><rect x="10.3112%" y="773" width="1.0389%" height="15" fill="rgb(211,96,35)" fg:x="31140304" fg:w="3137556"/><text x="10.5612%" y="783.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3,137,556 samples, 1.04%)</title><rect x="10.3112%" y="757" width="1.0389%" height="15" fill="rgb(253,215,40)" fg:x="31140304" fg:w="3137556"/><text x="10.5612%" y="767.50"></text></g><g><title>&lt;benchmark::LayoutFrame as core::clone::Clone&gt;::clone (14,063,714 samples, 4.66%)</title><rect x="7.5499%" y="1717" width="4.6568%" height="15" fill="rgb(211,81,21)" fg:x="22801157" fg:w="14063714"/><text x="7.7999%" y="1727.50">&lt;benc..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (14,063,714 samples, 4.66%)</title><rect x="7.5499%" y="1701" width="4.6568%" height="15" fill="rgb(208,190,38)" fg:x="22801157" fg:w="14063714"/><text x="7.7999%" y="1711.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (14,063,714 samples, 4.66%)</title><rect x="7.5499%" y="1685" width="4.6568%" height="15" fill="rgb(235,213,38)" fg:x="22801157" fg:w="14063714"/><text x="7.7999%" y="1695.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (14,063,714 samples, 4.66%)</title><rect x="7.5499%" y="1669" width="4.6568%" height="15" fill="rgb(237,122,38)" fg:x="22801157" fg:w="14063714"/><text x="7.7999%" y="1679.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (14,063,714 samples, 4.66%)</title><rect x="7.5499%" y="1653" width="4.6568%" height="15" fill="rgb(244,218,35)" fg:x="22801157" fg:w="14063714"/><text x="7.7999%" y="1663.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (14,063,714 samples, 4.66%)</title><rect x="7.5499%" y="1637" width="4.6568%" height="15" fill="rgb(240,68,47)" fg:x="22801157" fg:w="14063714"/><text x="7.7999%" y="1647.50">&lt;serd..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (14,063,714 samples, 4.66%)</title><rect x="7.5499%" y="1621" width="4.6568%" height="15" fill="rgb(210,16,53)" fg:x="22801157" fg:w="14063714"/><text x="7.7999%" y="1631.50">&lt;serd..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (14,063,714 samples, 4.66%)</title><rect x="7.5499%" y="1605" width="4.6568%" height="15" fill="rgb(235,124,12)" fg:x="22801157" fg:w="14063714"/><text x="7.7999%" y="1615.50">&lt;allo..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (14,063,714 samples, 4.66%)</title><rect x="7.5499%" y="1589" width="4.6568%" height="15" fill="rgb(224,169,11)" fg:x="22801157" fg:w="14063714"/><text x="7.7999%" y="1599.50">&lt;allo..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (14,063,714 samples, 4.66%)</title><rect x="7.5499%" y="1573" width="4.6568%" height="15" fill="rgb(250,166,2)" fg:x="22801157" fg:w="14063714"/><text x="7.7999%" y="1583.50">&lt;serd..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,986,873 samples, 3.64%)</title><rect x="8.5687%" y="1557" width="3.6380%" height="15" fill="rgb(242,216,29)" fg:x="25877998" fg:w="10986873"/><text x="8.8187%" y="1567.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,986,873 samples, 3.64%)</title><rect x="8.5687%" y="1541" width="3.6380%" height="15" fill="rgb(230,116,27)" fg:x="25877998" fg:w="10986873"/><text x="8.8187%" y="1551.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (10,986,873 samples, 3.64%)</title><rect x="8.5687%" y="1525" width="3.6380%" height="15" fill="rgb(228,99,48)" fg:x="25877998" fg:w="10986873"/><text x="8.8187%" y="1535.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,986,873 samples, 3.64%)</title><rect x="8.5687%" y="1509" width="3.6380%" height="15" fill="rgb(253,11,6)" fg:x="25877998" fg:w="10986873"/><text x="8.8187%" y="1519.50">&lt;T a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (10,986,873 samples, 3.64%)</title><rect x="8.5687%" y="1493" width="3.6380%" height="15" fill="rgb(247,143,39)" fg:x="25877998" fg:w="10986873"/><text x="8.8187%" y="1503.50">&lt;ser..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (10,986,873 samples, 3.64%)</title><rect x="8.5687%" y="1477" width="3.6380%" height="15" fill="rgb(236,97,10)" fg:x="25877998" fg:w="10986873"/><text x="8.8187%" y="1487.50">&lt;ser..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (10,986,873 samples, 3.64%)</title><rect x="8.5687%" y="1461" width="3.6380%" height="15" fill="rgb(233,208,19)" fg:x="25877998" fg:w="10986873"/><text x="8.8187%" y="1471.50">&lt;all..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (10,986,873 samples, 3.64%)</title><rect x="8.5687%" y="1445" width="3.6380%" height="15" fill="rgb(216,164,2)" fg:x="25877998" fg:w="10986873"/><text x="8.8187%" y="1455.50">&lt;all..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (10,986,873 samples, 3.64%)</title><rect x="8.5687%" y="1429" width="3.6380%" height="15" fill="rgb(220,129,5)" fg:x="25877998" fg:w="10986873"/><text x="8.8187%" y="1439.50">&lt;ser..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,986,873 samples, 3.64%)</title><rect x="8.5687%" y="1413" width="3.6380%" height="15" fill="rgb(242,17,10)" fg:x="25877998" fg:w="10986873"/><text x="8.8187%" y="1423.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,986,873 samples, 3.64%)</title><rect x="8.5687%" y="1397" width="3.6380%" height="15" fill="rgb(242,107,0)" fg:x="25877998" fg:w="10986873"/><text x="8.8187%" y="1407.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (10,986,873 samples, 3.64%)</title><rect x="8.5687%" y="1381" width="3.6380%" height="15" fill="rgb(251,28,31)" fg:x="25877998" fg:w="10986873"/><text x="8.8187%" y="1391.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,986,873 samples, 3.64%)</title><rect x="8.5687%" y="1365" width="3.6380%" height="15" fill="rgb(233,223,10)" fg:x="25877998" fg:w="10986873"/><text x="8.8187%" y="1375.50">&lt;T a..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (10,986,873 samples, 3.64%)</title><rect x="8.5687%" y="1349" width="3.6380%" height="15" fill="rgb(215,21,27)" fg:x="25877998" fg:w="10986873"/><text x="8.8187%" y="1359.50">&lt;ser..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (10,986,873 samples, 3.64%)</title><rect x="8.5687%" y="1333" width="3.6380%" height="15" fill="rgb(232,23,21)" fg:x="25877998" fg:w="10986873"/><text x="8.8187%" y="1343.50">&lt;ser..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (10,986,873 samples, 3.64%)</title><rect x="8.5687%" y="1317" width="3.6380%" height="15" fill="rgb(244,5,23)" fg:x="25877998" fg:w="10986873"/><text x="8.8187%" y="1327.50">&lt;all..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (10,986,873 samples, 3.64%)</title><rect x="8.5687%" y="1301" width="3.6380%" height="15" fill="rgb(226,81,46)" fg:x="25877998" fg:w="10986873"/><text x="8.8187%" y="1311.50">&lt;all..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (10,986,873 samples, 3.64%)</title><rect x="8.5687%" y="1285" width="3.6380%" height="15" fill="rgb(247,70,30)" fg:x="25877998" fg:w="10986873"/><text x="8.8187%" y="1295.50">&lt;ser..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,587,011 samples, 0.86%)</title><rect x="11.3501%" y="1269" width="0.8566%" height="15" fill="rgb(212,68,19)" fg:x="34277860" fg:w="2587011"/><text x="11.6001%" y="1279.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,587,011 samples, 0.86%)</title><rect x="11.3501%" y="1253" width="0.8566%" height="15" fill="rgb(240,187,13)" fg:x="34277860" fg:w="2587011"/><text x="11.6001%" y="1263.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,587,011 samples, 0.86%)</title><rect x="11.3501%" y="1237" width="0.8566%" height="15" fill="rgb(223,113,26)" fg:x="34277860" fg:w="2587011"/><text x="11.6001%" y="1247.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (2,587,011 samples, 0.86%)</title><rect x="11.3501%" y="1221" width="0.8566%" height="15" fill="rgb(206,192,2)" fg:x="34277860" fg:w="2587011"/><text x="11.6001%" y="1231.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,587,011 samples, 0.86%)</title><rect x="11.3501%" y="1205" width="0.8566%" height="15" fill="rgb(241,108,4)" fg:x="34277860" fg:w="2587011"/><text x="11.6001%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,587,011 samples, 0.86%)</title><rect x="11.3501%" y="1189" width="0.8566%" height="15" fill="rgb(247,173,49)" fg:x="34277860" fg:w="2587011"/><text x="11.6001%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,587,011 samples, 0.86%)</title><rect x="11.3501%" y="1173" width="0.8566%" height="15" fill="rgb(224,114,35)" fg:x="34277860" fg:w="2587011"/><text x="11.6001%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (2,587,011 samples, 0.86%)</title><rect x="11.3501%" y="1157" width="0.8566%" height="15" fill="rgb(245,159,27)" fg:x="34277860" fg:w="2587011"/><text x="11.6001%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,587,011 samples, 0.86%)</title><rect x="11.3501%" y="1141" width="0.8566%" height="15" fill="rgb(245,172,44)" fg:x="34277860" fg:w="2587011"/><text x="11.6001%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,587,011 samples, 0.86%)</title><rect x="11.3501%" y="1125" width="0.8566%" height="15" fill="rgb(236,23,11)" fg:x="34277860" fg:w="2587011"/><text x="11.6001%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,587,011 samples, 0.86%)</title><rect x="11.3501%" y="1109" width="0.8566%" height="15" fill="rgb(205,117,38)" fg:x="34277860" fg:w="2587011"/><text x="11.6001%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,587,011 samples, 0.86%)</title><rect x="11.3501%" y="1093" width="0.8566%" height="15" fill="rgb(237,72,25)" fg:x="34277860" fg:w="2587011"/><text x="11.6001%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,587,011 samples, 0.86%)</title><rect x="11.3501%" y="1077" width="0.8566%" height="15" fill="rgb(244,70,9)" fg:x="34277860" fg:w="2587011"/><text x="11.6001%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,587,011 samples, 0.86%)</title><rect x="11.3501%" y="1061" width="0.8566%" height="15" fill="rgb(217,125,39)" fg:x="34277860" fg:w="2587011"/><text x="11.6001%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,587,011 samples, 0.86%)</title><rect x="11.3501%" y="1045" width="0.8566%" height="15" fill="rgb(235,36,10)" fg:x="34277860" fg:w="2587011"/><text x="11.6001%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (2,587,011 samples, 0.86%)</title><rect x="11.3501%" y="1029" width="0.8566%" height="15" fill="rgb(251,123,47)" fg:x="34277860" fg:w="2587011"/><text x="11.6001%" y="1039.50"></text></g><g><title>malloc (2,587,011 samples, 0.86%)</title><rect x="11.3501%" y="1013" width="0.8566%" height="15" fill="rgb(221,13,13)" fg:x="34277860" fg:w="2587011"/><text x="11.6001%" y="1023.50"></text></g><g><title>[libc.so.6] (2,587,011 samples, 0.86%)</title><rect x="11.3501%" y="997" width="0.8566%" height="15" fill="rgb(238,131,9)" fg:x="34277860" fg:w="2587011"/><text x="11.6001%" y="1007.50"></text></g><g><title>[libc.so.6] (2,587,011 samples, 0.86%)</title><rect x="11.3501%" y="981" width="0.8566%" height="15" fill="rgb(211,50,8)" fg:x="34277860" fg:w="2587011"/><text x="11.6001%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="581" width="1.0098%" height="15" fill="rgb(245,182,24)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="565" width="1.0098%" height="15" fill="rgb(242,14,37)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="549" width="1.0098%" height="15" fill="rgb(246,228,12)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="533" width="1.0098%" height="15" fill="rgb(213,55,15)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="517" width="1.0098%" height="15" fill="rgb(209,9,3)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="501" width="1.0098%" height="15" fill="rgb(230,59,30)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="485" width="1.0098%" height="15" fill="rgb(209,121,21)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="495.50"></text></g><g><title>core::mem::drop (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="469" width="1.0098%" height="15" fill="rgb(220,109,13)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="453" width="1.0098%" height="15" fill="rgb(232,18,1)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="437" width="1.0098%" height="15" fill="rgb(215,41,42)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="421" width="1.0098%" height="15" fill="rgb(224,123,36)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="405" width="1.0098%" height="15" fill="rgb(240,125,3)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="389" width="1.0098%" height="15" fill="rgb(205,98,50)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="399.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="373" width="1.0098%" height="15" fill="rgb(205,185,37)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="357" width="1.0098%" height="15" fill="rgb(238,207,15)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="341" width="1.0098%" height="15" fill="rgb(213,199,42)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="325" width="1.0098%" height="15" fill="rgb(235,201,11)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="309" width="1.0098%" height="15" fill="rgb(207,46,11)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="293" width="1.0098%" height="15" fill="rgb(241,35,35)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="277" width="1.0098%" height="15" fill="rgb(243,32,47)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="261" width="1.0098%" height="15" fill="rgb(247,202,23)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="245" width="1.0098%" height="15" fill="rgb(219,102,11)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="255.50"></text></g><g><title>core::mem::drop (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="229" width="1.0098%" height="15" fill="rgb(243,110,44)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="213" width="1.0098%" height="15" fill="rgb(222,74,54)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="197" width="1.0098%" height="15" fill="rgb(216,99,12)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="207.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="181" width="1.0098%" height="15" fill="rgb(226,22,26)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="191.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="165" width="1.0098%" height="15" fill="rgb(217,163,10)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="149" width="1.0098%" height="15" fill="rgb(213,25,53)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="133" width="1.0098%" height="15" fill="rgb(252,105,26)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="117" width="1.0098%" height="15" fill="rgb(220,39,43)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="127.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="101" width="1.0098%" height="15" fill="rgb(229,68,48)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="85" width="1.0098%" height="15" fill="rgb(252,8,32)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="95.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="69" width="1.0098%" height="15" fill="rgb(223,20,43)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="79.50"></text></g><g><title>alloc::alloc::dealloc (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="53" width="1.0098%" height="15" fill="rgb(229,81,49)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="63.50"></text></g><g><title>cfree (3,049,633 samples, 1.01%)</title><rect x="12.2067%" y="37" width="1.0098%" height="15" fill="rgb(236,28,36)" fg:x="36864871" fg:w="3049633"/><text x="12.4567%" y="47.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1717" width="2.0478%" height="15" fill="rgb(249,185,26)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1727.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1701" width="2.0478%" height="15" fill="rgb(249,174,33)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1711.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1685" width="2.0478%" height="15" fill="rgb(233,201,37)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1695.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1669" width="2.0478%" height="15" fill="rgb(221,78,26)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1679.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1653" width="2.0478%" height="15" fill="rgb(250,127,30)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1663.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1637" width="2.0478%" height="15" fill="rgb(230,49,44)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1647.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1621" width="2.0478%" height="15" fill="rgb(229,67,23)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1631.50">&lt;..</text></g><g><title>core::mem::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1605" width="2.0478%" height="15" fill="rgb(249,83,47)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1615.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1589" width="2.0478%" height="15" fill="rgb(215,43,3)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1599.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1573" width="2.0478%" height="15" fill="rgb(238,154,13)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1583.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1557" width="2.0478%" height="15" fill="rgb(219,56,2)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1567.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1541" width="2.0478%" height="15" fill="rgb(233,0,4)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1551.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1525" width="2.0478%" height="15" fill="rgb(235,30,7)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1535.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1509" width="2.0478%" height="15" fill="rgb(250,79,13)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1519.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1493" width="2.0478%" height="15" fill="rgb(211,146,34)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1503.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1477" width="2.0478%" height="15" fill="rgb(228,22,38)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1487.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1461" width="2.0478%" height="15" fill="rgb(235,168,5)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1471.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1445" width="2.0478%" height="15" fill="rgb(221,155,16)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1455.50">&lt;..</text></g><g><title>core::mem::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1429" width="2.0478%" height="15" fill="rgb(215,215,53)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1439.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1413" width="2.0478%" height="15" fill="rgb(223,4,10)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1423.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1397" width="2.0478%" height="15" fill="rgb(234,103,6)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1407.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1381" width="2.0478%" height="15" fill="rgb(227,97,0)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1391.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1365" width="2.0478%" height="15" fill="rgb(234,150,53)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1375.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1349" width="2.0478%" height="15" fill="rgb(228,201,54)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1359.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1333" width="2.0478%" height="15" fill="rgb(222,22,37)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1343.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1317" width="2.0478%" height="15" fill="rgb(237,53,32)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1327.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1301" width="2.0478%" height="15" fill="rgb(233,25,53)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1311.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1285" width="2.0478%" height="15" fill="rgb(210,40,34)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1295.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1269" width="2.0478%" height="15" fill="rgb(241,220,44)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1279.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1253" width="2.0478%" height="15" fill="rgb(235,28,35)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1263.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1237" width="2.0478%" height="15" fill="rgb(210,56,17)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1247.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1221" width="2.0478%" height="15" fill="rgb(224,130,29)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1231.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1205" width="2.0478%" height="15" fill="rgb(235,212,8)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1215.50">&lt;..</text></g><g><title>core::mem::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1189" width="2.0478%" height="15" fill="rgb(223,33,50)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1199.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1173" width="2.0478%" height="15" fill="rgb(219,149,13)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1183.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1157" width="2.0478%" height="15" fill="rgb(250,156,29)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1167.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1141" width="2.0478%" height="15" fill="rgb(216,193,19)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1151.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1125" width="2.0478%" height="15" fill="rgb(216,135,14)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1135.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1109" width="2.0478%" height="15" fill="rgb(241,47,5)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1119.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1093" width="2.0478%" height="15" fill="rgb(233,42,35)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1103.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1077" width="2.0478%" height="15" fill="rgb(231,13,6)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1087.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1061" width="2.0478%" height="15" fill="rgb(207,181,40)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1071.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1045" width="2.0478%" height="15" fill="rgb(254,173,49)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1055.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1029" width="2.0478%" height="15" fill="rgb(221,1,38)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1039.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="1013" width="2.0478%" height="15" fill="rgb(206,124,46)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1023.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="997" width="2.0478%" height="15" fill="rgb(249,21,11)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="1007.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="981" width="2.0478%" height="15" fill="rgb(222,201,40)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="991.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="965" width="2.0478%" height="15" fill="rgb(235,61,29)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="975.50">&lt;..</text></g><g><title>core::mem::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="949" width="2.0478%" height="15" fill="rgb(219,207,3)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="959.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="933" width="2.0478%" height="15" fill="rgb(222,56,46)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="943.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="917" width="2.0478%" height="15" fill="rgb(239,76,54)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="927.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="901" width="2.0478%" height="15" fill="rgb(231,124,27)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="911.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="885" width="2.0478%" height="15" fill="rgb(249,195,6)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="895.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="869" width="2.0478%" height="15" fill="rgb(237,174,47)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="879.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="853" width="2.0478%" height="15" fill="rgb(206,201,31)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="863.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="837" width="2.0478%" height="15" fill="rgb(231,57,52)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="847.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="821" width="2.0478%" height="15" fill="rgb(248,177,22)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="831.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="805" width="2.0478%" height="15" fill="rgb(215,211,37)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="815.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="789" width="2.0478%" height="15" fill="rgb(241,128,51)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="799.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="773" width="2.0478%" height="15" fill="rgb(227,165,31)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="783.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="757" width="2.0478%" height="15" fill="rgb(228,167,24)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="767.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="741" width="2.0478%" height="15" fill="rgb(228,143,12)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="751.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="725" width="2.0478%" height="15" fill="rgb(249,149,8)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="735.50">&lt;..</text></g><g><title>core::mem::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="709" width="2.0478%" height="15" fill="rgb(243,35,44)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="719.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="693" width="2.0478%" height="15" fill="rgb(246,89,9)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="703.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="677" width="2.0478%" height="15" fill="rgb(233,213,13)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="687.50">&lt;..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="661" width="2.0478%" height="15" fill="rgb(233,141,41)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="671.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="645" width="2.0478%" height="15" fill="rgb(239,167,4)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="655.50">c..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="629" width="2.0478%" height="15" fill="rgb(209,217,16)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="639.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="613" width="2.0478%" height="15" fill="rgb(219,88,35)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="623.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,184,603 samples, 2.05%)</title><rect x="12.2067%" y="597" width="2.0478%" height="15" fill="rgb(220,193,23)" fg:x="36864871" fg:w="6184603"/><text x="12.4567%" y="607.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,134,970 samples, 1.04%)</title><rect x="13.2165%" y="581" width="1.0380%" height="15" fill="rgb(230,90,52)" fg:x="39914504" fg:w="3134970"/><text x="13.4665%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,134,970 samples, 1.04%)</title><rect x="13.2165%" y="565" width="1.0380%" height="15" fill="rgb(252,106,19)" fg:x="39914504" fg:w="3134970"/><text x="13.4665%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,134,970 samples, 1.04%)</title><rect x="13.2165%" y="549" width="1.0380%" height="15" fill="rgb(206,74,20)" fg:x="39914504" fg:w="3134970"/><text x="13.4665%" y="559.50"></text></g><g><title>core::mem::drop (3,134,970 samples, 1.04%)</title><rect x="13.2165%" y="533" width="1.0380%" height="15" fill="rgb(230,138,44)" fg:x="39914504" fg:w="3134970"/><text x="13.4665%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,134,970 samples, 1.04%)</title><rect x="13.2165%" y="517" width="1.0380%" height="15" fill="rgb(235,182,43)" fg:x="39914504" fg:w="3134970"/><text x="13.4665%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,134,970 samples, 1.04%)</title><rect x="13.2165%" y="501" width="1.0380%" height="15" fill="rgb(242,16,51)" fg:x="39914504" fg:w="3134970"/><text x="13.4665%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3,134,970 samples, 1.04%)</title><rect x="13.2165%" y="485" width="1.0380%" height="15" fill="rgb(248,9,4)" fg:x="39914504" fg:w="3134970"/><text x="13.4665%" y="495.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (3,134,970 samples, 1.04%)</title><rect x="13.2165%" y="469" width="1.0380%" height="15" fill="rgb(210,31,22)" fg:x="39914504" fg:w="3134970"/><text x="13.4665%" y="479.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (3,134,970 samples, 1.04%)</title><rect x="13.2165%" y="453" width="1.0380%" height="15" fill="rgb(239,54,39)" fg:x="39914504" fg:w="3134970"/><text x="13.4665%" y="463.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (3,134,970 samples, 1.04%)</title><rect x="13.2165%" y="437" width="1.0380%" height="15" fill="rgb(230,99,41)" fg:x="39914504" fg:w="3134970"/><text x="13.4665%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,134,970 samples, 1.04%)</title><rect x="13.2165%" y="421" width="1.0380%" height="15" fill="rgb(253,106,12)" fg:x="39914504" fg:w="3134970"/><text x="13.4665%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (3,134,970 samples, 1.04%)</title><rect x="13.2165%" y="405" width="1.0380%" height="15" fill="rgb(213,46,41)" fg:x="39914504" fg:w="3134970"/><text x="13.4665%" y="415.50"></text></g><g><title>cfree (3,134,970 samples, 1.04%)</title><rect x="13.2165%" y="389" width="1.0380%" height="15" fill="rgb(215,133,35)" fg:x="39914504" fg:w="3134970"/><text x="13.4665%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (3,233,406 samples, 1.07%)</title><rect x="14.2545%" y="1701" width="1.0706%" height="15" fill="rgb(213,28,5)" fg:x="43049474" fg:w="3233406"/><text x="14.5045%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3,233,406 samples, 1.07%)</title><rect x="14.2545%" y="1685" width="1.0706%" height="15" fill="rgb(215,77,49)" fg:x="43049474" fg:w="3233406"/><text x="14.5045%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (3,233,406 samples, 1.07%)</title><rect x="14.2545%" y="1669" width="1.0706%" height="15" fill="rgb(248,100,22)" fg:x="43049474" fg:w="3233406"/><text x="14.5045%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,233,406 samples, 1.07%)</title><rect x="14.2545%" y="1653" width="1.0706%" height="15" fill="rgb(208,67,9)" fg:x="43049474" fg:w="3233406"/><text x="14.5045%" y="1663.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,233,406 samples, 1.07%)</title><rect x="14.2545%" y="1637" width="1.0706%" height="15" fill="rgb(219,133,21)" fg:x="43049474" fg:w="3233406"/><text x="14.5045%" y="1647.50"></text></g><g><title>malloc (3,233,406 samples, 1.07%)</title><rect x="14.2545%" y="1621" width="1.0706%" height="15" fill="rgb(246,46,29)" fg:x="43049474" fg:w="3233406"/><text x="14.5045%" y="1631.50"></text></g><g><title>[libc.so.6] (3,233,406 samples, 1.07%)</title><rect x="14.2545%" y="1605" width="1.0706%" height="15" fill="rgb(246,185,52)" fg:x="43049474" fg:w="3233406"/><text x="14.5045%" y="1615.50"></text></g><g><title>[libc.so.6] (3,233,406 samples, 1.07%)</title><rect x="14.2545%" y="1589" width="1.0706%" height="15" fill="rgb(252,136,11)" fg:x="43049474" fg:w="3233406"/><text x="14.5045%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,650,924 samples, 0.88%)</title><rect x="15.3252%" y="1669" width="0.8778%" height="15" fill="rgb(219,138,53)" fg:x="46282880" fg:w="2650924"/><text x="15.5752%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,650,924 samples, 0.88%)</title><rect x="15.3252%" y="1653" width="0.8778%" height="15" fill="rgb(211,51,23)" fg:x="46282880" fg:w="2650924"/><text x="15.5752%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,650,924 samples, 0.88%)</title><rect x="15.3252%" y="1637" width="0.8778%" height="15" fill="rgb(247,221,28)" fg:x="46282880" fg:w="2650924"/><text x="15.5752%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,650,924 samples, 0.88%)</title><rect x="15.3252%" y="1621" width="0.8778%" height="15" fill="rgb(251,222,45)" fg:x="46282880" fg:w="2650924"/><text x="15.5752%" y="1631.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,650,924 samples, 0.88%)</title><rect x="15.3252%" y="1605" width="0.8778%" height="15" fill="rgb(217,162,53)" fg:x="46282880" fg:w="2650924"/><text x="15.5752%" y="1615.50"></text></g><g><title>malloc (2,650,924 samples, 0.88%)</title><rect x="15.3252%" y="1589" width="0.8778%" height="15" fill="rgb(229,93,14)" fg:x="46282880" fg:w="2650924"/><text x="15.5752%" y="1599.50"></text></g><g><title>[libc.so.6] (2,650,924 samples, 0.88%)</title><rect x="15.3252%" y="1573" width="0.8778%" height="15" fill="rgb(209,67,49)" fg:x="46282880" fg:w="2650924"/><text x="15.5752%" y="1583.50"></text></g><g><title>[libc.so.6] (2,650,924 samples, 0.88%)</title><rect x="15.3252%" y="1557" width="0.8778%" height="15" fill="rgb(213,87,29)" fg:x="46282880" fg:w="2650924"/><text x="15.5752%" y="1567.50"></text></g><g><title>[libc.so.6] (2,447,346 samples, 0.81%)</title><rect x="16.2029%" y="1637" width="0.8104%" height="15" fill="rgb(205,151,52)" fg:x="48933804" fg:w="2447346"/><text x="16.4529%" y="1647.50"></text></g><g><title>benchmark::apply_frame_modifications (11,447,939 samples, 3.79%)</title><rect x="14.2545%" y="1717" width="3.7906%" height="15" fill="rgb(253,215,39)" fg:x="43049474" fg:w="11447939"/><text x="14.5045%" y="1727.50">benc..</text></g><g><title>benchmark::json_to_html_node (8,214,533 samples, 2.72%)</title><rect x="15.3252%" y="1701" width="2.7200%" height="15" fill="rgb(221,220,41)" fg:x="46282880" fg:w="8214533"/><text x="15.5752%" y="1711.50">be..</text></g><g><title>benchmark::json_to_html_node (8,214,533 samples, 2.72%)</title><rect x="15.3252%" y="1685" width="2.7200%" height="15" fill="rgb(218,133,21)" fg:x="46282880" fg:w="8214533"/><text x="15.5752%" y="1695.50">be..</text></g><g><title>benchmark::json_to_html_node (5,563,609 samples, 1.84%)</title><rect x="16.2029%" y="1669" width="1.8422%" height="15" fill="rgb(221,193,43)" fg:x="48933804" fg:w="5563609"/><text x="16.4529%" y="1679.50">b..</text></g><g><title>benchmark::json_to_html_node (5,563,609 samples, 1.84%)</title><rect x="16.2029%" y="1653" width="1.8422%" height="15" fill="rgb(240,128,52)" fg:x="48933804" fg:w="5563609"/><text x="16.4529%" y="1663.50">b..</text></g><g><title>benchmark::json_to_html_node (3,116,263 samples, 1.03%)</title><rect x="17.0133%" y="1637" width="1.0319%" height="15" fill="rgb(253,114,12)" fg:x="51381150" fg:w="3116263"/><text x="17.2633%" y="1647.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::new (3,116,263 samples, 1.03%)</title><rect x="17.0133%" y="1621" width="1.0319%" height="15" fill="rgb(215,223,47)" fg:x="51381150" fg:w="3116263"/><text x="17.2633%" y="1631.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (3,116,263 samples, 1.03%)</title><rect x="17.0133%" y="1605" width="1.0319%" height="15" fill="rgb(248,225,23)" fg:x="51381150" fg:w="3116263"/><text x="17.2633%" y="1615.50"></text></g><g><title>alloc::str::convert_while_ascii (3,116,263 samples, 1.03%)</title><rect x="17.0133%" y="1589" width="1.0319%" height="15" fill="rgb(250,108,0)" fg:x="51381150" fg:w="3116263"/><text x="17.2633%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,116,263 samples, 1.03%)</title><rect x="17.0133%" y="1573" width="1.0319%" height="15" fill="rgb(228,208,7)" fg:x="51381150" fg:w="3116263"/><text x="17.2633%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,116,263 samples, 1.03%)</title><rect x="17.0133%" y="1557" width="1.0319%" height="15" fill="rgb(244,45,10)" fg:x="51381150" fg:w="3116263"/><text x="17.2633%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,116,263 samples, 1.03%)</title><rect x="17.0133%" y="1541" width="1.0319%" height="15" fill="rgb(207,125,25)" fg:x="51381150" fg:w="3116263"/><text x="17.2633%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,116,263 samples, 1.03%)</title><rect x="17.0133%" y="1525" width="1.0319%" height="15" fill="rgb(210,195,18)" fg:x="51381150" fg:w="3116263"/><text x="17.2633%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,116,263 samples, 1.03%)</title><rect x="17.0133%" y="1509" width="1.0319%" height="15" fill="rgb(249,80,12)" fg:x="51381150" fg:w="3116263"/><text x="17.2633%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,116,263 samples, 1.03%)</title><rect x="17.0133%" y="1493" width="1.0319%" height="15" fill="rgb(221,65,9)" fg:x="51381150" fg:w="3116263"/><text x="17.2633%" y="1503.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,116,263 samples, 1.03%)</title><rect x="17.0133%" y="1477" width="1.0319%" height="15" fill="rgb(235,49,36)" fg:x="51381150" fg:w="3116263"/><text x="17.2633%" y="1487.50"></text></g><g><title>alloc::alloc::alloc (3,116,263 samples, 1.03%)</title><rect x="17.0133%" y="1461" width="1.0319%" height="15" fill="rgb(225,32,20)" fg:x="51381150" fg:w="3116263"/><text x="17.2633%" y="1471.50"></text></g><g><title>malloc (3,116,263 samples, 1.03%)</title><rect x="17.0133%" y="1445" width="1.0319%" height="15" fill="rgb(215,141,46)" fg:x="51381150" fg:w="3116263"/><text x="17.2633%" y="1455.50"></text></g><g><title>[libc.so.6] (3,116,263 samples, 1.03%)</title><rect x="17.0133%" y="1429" width="1.0319%" height="15" fill="rgb(250,160,47)" fg:x="51381150" fg:w="3116263"/><text x="17.2633%" y="1439.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6,251,006 samples, 2.07%)</title><rect x="18.0451%" y="1205" width="2.0698%" height="15" fill="rgb(216,222,40)" fg:x="54497413" fg:w="6251006"/><text x="18.2951%" y="1215.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,847,918 samples, 0.94%)</title><rect x="20.1150%" y="725" width="0.9430%" height="15" fill="rgb(234,217,39)" fg:x="60748419" fg:w="2847918"/><text x="20.3650%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,847,918 samples, 0.94%)</title><rect x="20.1150%" y="709" width="0.9430%" height="15" fill="rgb(207,178,40)" fg:x="60748419" fg:w="2847918"/><text x="20.3650%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,847,918 samples, 0.94%)</title><rect x="20.1150%" y="693" width="0.9430%" height="15" fill="rgb(221,136,13)" fg:x="60748419" fg:w="2847918"/><text x="20.3650%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (2,847,918 samples, 0.94%)</title><rect x="20.1150%" y="677" width="0.9430%" height="15" fill="rgb(249,199,10)" fg:x="60748419" fg:w="2847918"/><text x="20.3650%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,847,918 samples, 0.94%)</title><rect x="20.1150%" y="661" width="0.9430%" height="15" fill="rgb(249,222,13)" fg:x="60748419" fg:w="2847918"/><text x="20.3650%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,847,918 samples, 0.94%)</title><rect x="20.1150%" y="645" width="0.9430%" height="15" fill="rgb(244,185,38)" fg:x="60748419" fg:w="2847918"/><text x="20.3650%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,847,918 samples, 0.94%)</title><rect x="20.1150%" y="629" width="0.9430%" height="15" fill="rgb(236,202,9)" fg:x="60748419" fg:w="2847918"/><text x="20.3650%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,847,918 samples, 0.94%)</title><rect x="20.1150%" y="613" width="0.9430%" height="15" fill="rgb(250,229,37)" fg:x="60748419" fg:w="2847918"/><text x="20.3650%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,847,918 samples, 0.94%)</title><rect x="20.1150%" y="597" width="0.9430%" height="15" fill="rgb(206,174,23)" fg:x="60748419" fg:w="2847918"/><text x="20.3650%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,847,918 samples, 0.94%)</title><rect x="20.1150%" y="581" width="0.9430%" height="15" fill="rgb(211,33,43)" fg:x="60748419" fg:w="2847918"/><text x="20.3650%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,847,918 samples, 0.94%)</title><rect x="20.1150%" y="565" width="0.9430%" height="15" fill="rgb(245,58,50)" fg:x="60748419" fg:w="2847918"/><text x="20.3650%" y="575.50"></text></g><g><title>alloc::alloc::alloc (2,847,918 samples, 0.94%)</title><rect x="20.1150%" y="549" width="0.9430%" height="15" fill="rgb(244,68,36)" fg:x="60748419" fg:w="2847918"/><text x="20.3650%" y="559.50"></text></g><g><title>malloc (2,847,918 samples, 0.94%)</title><rect x="20.1150%" y="533" width="0.9430%" height="15" fill="rgb(232,229,15)" fg:x="60748419" fg:w="2847918"/><text x="20.3650%" y="543.50"></text></g><g><title>[libc.so.6] (2,847,918 samples, 0.94%)</title><rect x="20.1150%" y="517" width="0.9430%" height="15" fill="rgb(254,30,23)" fg:x="60748419" fg:w="2847918"/><text x="20.3650%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,057,648 samples, 1.01%)</title><rect x="21.0580%" y="565" width="1.0124%" height="15" fill="rgb(235,160,14)" fg:x="63596337" fg:w="3057648"/><text x="21.3080%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,057,648 samples, 1.01%)</title><rect x="21.0580%" y="549" width="1.0124%" height="15" fill="rgb(212,155,44)" fg:x="63596337" fg:w="3057648"/><text x="21.3080%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,057,648 samples, 1.01%)</title><rect x="21.0580%" y="533" width="1.0124%" height="15" fill="rgb(226,2,50)" fg:x="63596337" fg:w="3057648"/><text x="21.3080%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (3,057,648 samples, 1.01%)</title><rect x="21.0580%" y="517" width="1.0124%" height="15" fill="rgb(234,177,6)" fg:x="63596337" fg:w="3057648"/><text x="21.3080%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,057,648 samples, 1.01%)</title><rect x="21.0580%" y="501" width="1.0124%" height="15" fill="rgb(217,24,9)" fg:x="63596337" fg:w="3057648"/><text x="21.3080%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,057,648 samples, 1.01%)</title><rect x="21.0580%" y="485" width="1.0124%" height="15" fill="rgb(220,13,46)" fg:x="63596337" fg:w="3057648"/><text x="21.3080%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,057,648 samples, 1.01%)</title><rect x="21.0580%" y="469" width="1.0124%" height="15" fill="rgb(239,221,27)" fg:x="63596337" fg:w="3057648"/><text x="21.3080%" y="479.50"></text></g><g><title>[libc.so.6] (3,057,648 samples, 1.01%)</title><rect x="21.0580%" y="453" width="1.0124%" height="15" fill="rgb(222,198,25)" fg:x="63596337" fg:w="3057648"/><text x="21.3080%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,115,793 samples, 1.03%)</title><rect x="22.0704%" y="485" width="1.0317%" height="15" fill="rgb(211,99,13)" fg:x="66653985" fg:w="3115793"/><text x="22.3204%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,115,793 samples, 1.03%)</title><rect x="22.0704%" y="469" width="1.0317%" height="15" fill="rgb(232,111,31)" fg:x="66653985" fg:w="3115793"/><text x="22.3204%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,115,793 samples, 1.03%)</title><rect x="22.0704%" y="453" width="1.0317%" height="15" fill="rgb(245,82,37)" fg:x="66653985" fg:w="3115793"/><text x="22.3204%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (3,115,793 samples, 1.03%)</title><rect x="22.0704%" y="437" width="1.0317%" height="15" fill="rgb(227,149,46)" fg:x="66653985" fg:w="3115793"/><text x="22.3204%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,115,793 samples, 1.03%)</title><rect x="22.0704%" y="421" width="1.0317%" height="15" fill="rgb(218,36,50)" fg:x="66653985" fg:w="3115793"/><text x="22.3204%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,115,793 samples, 1.03%)</title><rect x="22.0704%" y="405" width="1.0317%" height="15" fill="rgb(226,80,48)" fg:x="66653985" fg:w="3115793"/><text x="22.3204%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,115,793 samples, 1.03%)</title><rect x="22.0704%" y="389" width="1.0317%" height="15" fill="rgb(238,224,15)" fg:x="66653985" fg:w="3115793"/><text x="22.3204%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,115,793 samples, 1.03%)</title><rect x="22.0704%" y="373" width="1.0317%" height="15" fill="rgb(241,136,10)" fg:x="66653985" fg:w="3115793"/><text x="22.3204%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,115,793 samples, 1.03%)</title><rect x="22.0704%" y="357" width="1.0317%" height="15" fill="rgb(208,32,45)" fg:x="66653985" fg:w="3115793"/><text x="22.3204%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,115,793 samples, 1.03%)</title><rect x="22.0704%" y="341" width="1.0317%" height="15" fill="rgb(207,135,9)" fg:x="66653985" fg:w="3115793"/><text x="22.3204%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,115,793 samples, 1.03%)</title><rect x="22.0704%" y="325" width="1.0317%" height="15" fill="rgb(206,86,44)" fg:x="66653985" fg:w="3115793"/><text x="22.3204%" y="335.50"></text></g><g><title>alloc::alloc::alloc (3,115,793 samples, 1.03%)</title><rect x="22.0704%" y="309" width="1.0317%" height="15" fill="rgb(245,177,15)" fg:x="66653985" fg:w="3115793"/><text x="22.3204%" y="319.50"></text></g><g><title>[libc.so.6] (3,115,793 samples, 1.03%)</title><rect x="22.0704%" y="293" width="1.0317%" height="15" fill="rgb(206,64,50)" fg:x="66653985" fg:w="3115793"/><text x="22.3204%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="405" width="1.0355%" height="15" fill="rgb(234,36,40)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="389" width="1.0355%" height="15" fill="rgb(213,64,8)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="373" width="1.0355%" height="15" fill="rgb(210,75,36)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="357" width="1.0355%" height="15" fill="rgb(229,88,21)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="367.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="341" width="1.0355%" height="15" fill="rgb(252,204,47)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="325" width="1.0355%" height="15" fill="rgb(208,77,27)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="309" width="1.0355%" height="15" fill="rgb(221,76,26)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="293" width="1.0355%" height="15" fill="rgb(225,139,18)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="277" width="1.0355%" height="15" fill="rgb(230,137,11)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="287.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="261" width="1.0355%" height="15" fill="rgb(212,28,1)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="245" width="1.0355%" height="15" fill="rgb(248,164,17)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="229" width="1.0355%" height="15" fill="rgb(222,171,42)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="213" width="1.0355%" height="15" fill="rgb(243,84,45)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="197" width="1.0355%" height="15" fill="rgb(252,49,23)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="181" width="1.0355%" height="15" fill="rgb(215,19,7)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="165" width="1.0355%" height="15" fill="rgb(238,81,41)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="149" width="1.0355%" height="15" fill="rgb(210,199,37)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="133" width="1.0355%" height="15" fill="rgb(244,192,49)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="117" width="1.0355%" height="15" fill="rgb(226,211,11)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="101" width="1.0355%" height="15" fill="rgb(236,162,54)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="85" width="1.0355%" height="15" fill="rgb(220,229,9)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="95.50"></text></g><g><title>alloc::alloc::alloc (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="69" width="1.0355%" height="15" fill="rgb(250,87,22)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="79.50"></text></g><g><title>malloc (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="53" width="1.0355%" height="15" fill="rgb(239,43,17)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="63.50"></text></g><g><title>[libc.so.6] (3,127,324 samples, 1.04%)</title><rect x="23.1021%" y="37" width="1.0355%" height="15" fill="rgb(231,177,25)" fg:x="69769778" fg:w="3127324"/><text x="23.3521%" y="47.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,082,546 samples, 2.01%)</title><rect x="23.1021%" y="485" width="2.0140%" height="15" fill="rgb(219,179,1)" fg:x="69769778" fg:w="6082546"/><text x="23.3521%" y="495.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,082,546 samples, 2.01%)</title><rect x="23.1021%" y="469" width="2.0140%" height="15" fill="rgb(238,219,53)" fg:x="69769778" fg:w="6082546"/><text x="23.3521%" y="479.50">a..</text></g><g><title>alloc::slice::hack::to_vec (6,082,546 samples, 2.01%)</title><rect x="23.1021%" y="453" width="2.0140%" height="15" fill="rgb(232,167,36)" fg:x="69769778" fg:w="6082546"/><text x="23.3521%" y="463.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,082,546 samples, 2.01%)</title><rect x="23.1021%" y="437" width="2.0140%" height="15" fill="rgb(244,19,51)" fg:x="69769778" fg:w="6082546"/><text x="23.3521%" y="447.50">&lt;..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (6,082,546 samples, 2.01%)</title><rect x="23.1021%" y="421" width="2.0140%" height="15" fill="rgb(224,6,22)" fg:x="69769778" fg:w="6082546"/><text x="23.3521%" y="431.50">&lt;..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,955,222 samples, 0.98%)</title><rect x="24.1376%" y="405" width="0.9785%" height="15" fill="rgb(224,145,5)" fg:x="72897102" fg:w="2955222"/><text x="24.3876%" y="415.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,955,222 samples, 0.98%)</title><rect x="24.1376%" y="389" width="0.9785%" height="15" fill="rgb(234,130,49)" fg:x="72897102" fg:w="2955222"/><text x="24.3876%" y="399.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,955,222 samples, 0.98%)</title><rect x="24.1376%" y="373" width="0.9785%" height="15" fill="rgb(254,6,2)" fg:x="72897102" fg:w="2955222"/><text x="24.3876%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,955,222 samples, 0.98%)</title><rect x="24.1376%" y="357" width="0.9785%" height="15" fill="rgb(208,96,46)" fg:x="72897102" fg:w="2955222"/><text x="24.3876%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,955,222 samples, 0.98%)</title><rect x="24.1376%" y="341" width="0.9785%" height="15" fill="rgb(239,3,39)" fg:x="72897102" fg:w="2955222"/><text x="24.3876%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,955,222 samples, 0.98%)</title><rect x="24.1376%" y="325" width="0.9785%" height="15" fill="rgb(233,210,1)" fg:x="72897102" fg:w="2955222"/><text x="24.3876%" y="335.50"></text></g><g><title>core::clone::Clone::clone (2,955,222 samples, 0.98%)</title><rect x="24.1376%" y="309" width="0.9785%" height="15" fill="rgb(244,137,37)" fg:x="72897102" fg:w="2955222"/><text x="24.3876%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,955,222 samples, 0.98%)</title><rect x="24.1376%" y="293" width="0.9785%" height="15" fill="rgb(240,136,2)" fg:x="72897102" fg:w="2955222"/><text x="24.3876%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,955,222 samples, 0.98%)</title><rect x="24.1376%" y="277" width="0.9785%" height="15" fill="rgb(239,18,37)" fg:x="72897102" fg:w="2955222"/><text x="24.3876%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,955,222 samples, 0.98%)</title><rect x="24.1376%" y="261" width="0.9785%" height="15" fill="rgb(218,185,22)" fg:x="72897102" fg:w="2955222"/><text x="24.3876%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (2,955,222 samples, 0.98%)</title><rect x="24.1376%" y="245" width="0.9785%" height="15" fill="rgb(225,218,4)" fg:x="72897102" fg:w="2955222"/><text x="24.3876%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,955,222 samples, 0.98%)</title><rect x="24.1376%" y="229" width="0.9785%" height="15" fill="rgb(230,182,32)" fg:x="72897102" fg:w="2955222"/><text x="24.3876%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,955,222 samples, 0.98%)</title><rect x="24.1376%" y="213" width="0.9785%" height="15" fill="rgb(242,56,43)" fg:x="72897102" fg:w="2955222"/><text x="24.3876%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,955,222 samples, 0.98%)</title><rect x="24.1376%" y="197" width="0.9785%" height="15" fill="rgb(233,99,24)" fg:x="72897102" fg:w="2955222"/><text x="24.3876%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,955,222 samples, 0.98%)</title><rect x="24.1376%" y="181" width="0.9785%" height="15" fill="rgb(234,209,42)" fg:x="72897102" fg:w="2955222"/><text x="24.3876%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,955,222 samples, 0.98%)</title><rect x="24.1376%" y="165" width="0.9785%" height="15" fill="rgb(227,7,12)" fg:x="72897102" fg:w="2955222"/><text x="24.3876%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,955,222 samples, 0.98%)</title><rect x="24.1376%" y="149" width="0.9785%" height="15" fill="rgb(245,203,43)" fg:x="72897102" fg:w="2955222"/><text x="24.3876%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,955,222 samples, 0.98%)</title><rect x="24.1376%" y="133" width="0.9785%" height="15" fill="rgb(238,205,33)" fg:x="72897102" fg:w="2955222"/><text x="24.3876%" y="143.50"></text></g><g><title>alloc::alloc::alloc (2,955,222 samples, 0.98%)</title><rect x="24.1376%" y="117" width="0.9785%" height="15" fill="rgb(231,56,7)" fg:x="72897102" fg:w="2955222"/><text x="24.3876%" y="127.50"></text></g><g><title>malloc (2,955,222 samples, 0.98%)</title><rect x="24.1376%" y="101" width="0.9785%" height="15" fill="rgb(244,186,29)" fg:x="72897102" fg:w="2955222"/><text x="24.3876%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11,948,197 samples, 3.96%)</title><rect x="22.0704%" y="565" width="3.9563%" height="15" fill="rgb(234,111,31)" fg:x="66653985" fg:w="11948197"/><text x="22.3204%" y="575.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11,948,197 samples, 3.96%)</title><rect x="22.0704%" y="549" width="3.9563%" height="15" fill="rgb(241,149,10)" fg:x="66653985" fg:w="11948197"/><text x="22.3204%" y="559.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (11,948,197 samples, 3.96%)</title><rect x="22.0704%" y="533" width="3.9563%" height="15" fill="rgb(249,206,44)" fg:x="66653985" fg:w="11948197"/><text x="22.3204%" y="543.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11,948,197 samples, 3.96%)</title><rect x="22.0704%" y="517" width="3.9563%" height="15" fill="rgb(251,153,30)" fg:x="66653985" fg:w="11948197"/><text x="22.3204%" y="527.50">&lt;T a..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (11,948,197 samples, 3.96%)</title><rect x="22.0704%" y="501" width="3.9563%" height="15" fill="rgb(239,152,38)" fg:x="66653985" fg:w="11948197"/><text x="22.3204%" y="511.50">&lt;css..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,749,858 samples, 0.91%)</title><rect x="25.1162%" y="485" width="0.9105%" height="15" fill="rgb(249,139,47)" fg:x="75852324" fg:w="2749858"/><text x="25.3662%" y="495.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,749,858 samples, 0.91%)</title><rect x="25.1162%" y="469" width="0.9105%" height="15" fill="rgb(244,64,35)" fg:x="75852324" fg:w="2749858"/><text x="25.3662%" y="479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,749,858 samples, 0.91%)</title><rect x="25.1162%" y="453" width="0.9105%" height="15" fill="rgb(216,46,15)" fg:x="75852324" fg:w="2749858"/><text x="25.3662%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,749,858 samples, 0.91%)</title><rect x="25.1162%" y="437" width="0.9105%" height="15" fill="rgb(250,74,19)" fg:x="75852324" fg:w="2749858"/><text x="25.3662%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,749,858 samples, 0.91%)</title><rect x="25.1162%" y="421" width="0.9105%" height="15" fill="rgb(249,42,33)" fg:x="75852324" fg:w="2749858"/><text x="25.3662%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,749,858 samples, 0.91%)</title><rect x="25.1162%" y="405" width="0.9105%" height="15" fill="rgb(242,149,17)" fg:x="75852324" fg:w="2749858"/><text x="25.3662%" y="415.50"></text></g><g><title>core::clone::Clone::clone (2,749,858 samples, 0.91%)</title><rect x="25.1162%" y="389" width="0.9105%" height="15" fill="rgb(244,29,21)" fg:x="75852324" fg:w="2749858"/><text x="25.3662%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,749,858 samples, 0.91%)</title><rect x="25.1162%" y="373" width="0.9105%" height="15" fill="rgb(220,130,37)" fg:x="75852324" fg:w="2749858"/><text x="25.3662%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,749,858 samples, 0.91%)</title><rect x="25.1162%" y="357" width="0.9105%" height="15" fill="rgb(211,67,2)" fg:x="75852324" fg:w="2749858"/><text x="25.3662%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,749,858 samples, 0.91%)</title><rect x="25.1162%" y="341" width="0.9105%" height="15" fill="rgb(235,68,52)" fg:x="75852324" fg:w="2749858"/><text x="25.3662%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2,749,858 samples, 0.91%)</title><rect x="25.1162%" y="325" width="0.9105%" height="15" fill="rgb(246,142,3)" fg:x="75852324" fg:w="2749858"/><text x="25.3662%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,749,858 samples, 0.91%)</title><rect x="25.1162%" y="309" width="0.9105%" height="15" fill="rgb(241,25,7)" fg:x="75852324" fg:w="2749858"/><text x="25.3662%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,749,858 samples, 0.91%)</title><rect x="25.1162%" y="293" width="0.9105%" height="15" fill="rgb(242,119,39)" fg:x="75852324" fg:w="2749858"/><text x="25.3662%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,749,858 samples, 0.91%)</title><rect x="25.1162%" y="277" width="0.9105%" height="15" fill="rgb(241,98,45)" fg:x="75852324" fg:w="2749858"/><text x="25.3662%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,749,858 samples, 0.91%)</title><rect x="25.1162%" y="261" width="0.9105%" height="15" fill="rgb(254,28,30)" fg:x="75852324" fg:w="2749858"/><text x="25.3662%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,749,858 samples, 0.91%)</title><rect x="25.1162%" y="245" width="0.9105%" height="15" fill="rgb(241,142,54)" fg:x="75852324" fg:w="2749858"/><text x="25.3662%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,749,858 samples, 0.91%)</title><rect x="25.1162%" y="229" width="0.9105%" height="15" fill="rgb(222,85,15)" fg:x="75852324" fg:w="2749858"/><text x="25.3662%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,749,858 samples, 0.91%)</title><rect x="25.1162%" y="213" width="0.9105%" height="15" fill="rgb(210,85,47)" fg:x="75852324" fg:w="2749858"/><text x="25.3662%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2,749,858 samples, 0.91%)</title><rect x="25.1162%" y="197" width="0.9105%" height="15" fill="rgb(224,206,25)" fg:x="75852324" fg:w="2749858"/><text x="25.3662%" y="207.50"></text></g><g><title>malloc (2,749,858 samples, 0.91%)</title><rect x="25.1162%" y="181" width="0.9105%" height="15" fill="rgb(243,201,19)" fg:x="75852324" fg:w="2749858"/><text x="25.3662%" y="191.50"></text></g><g><title>[libc.so.6] (2,749,858 samples, 0.91%)</title><rect x="25.1162%" y="165" width="0.9105%" height="15" fill="rgb(236,59,4)" fg:x="75852324" fg:w="2749858"/><text x="25.3662%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,953,065 samples, 5.94%)</title><rect x="21.0580%" y="645" width="5.9446%" height="15" fill="rgb(254,179,45)" fg:x="63596337" fg:w="17953065"/><text x="21.3080%" y="655.50">&lt;alloc::..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,953,065 samples, 5.94%)</title><rect x="21.0580%" y="629" width="5.9446%" height="15" fill="rgb(226,14,10)" fg:x="63596337" fg:w="17953065"/><text x="21.3080%" y="639.50">alloc::s..</text></g><g><title>alloc::slice::hack::to_vec (17,953,065 samples, 5.94%)</title><rect x="21.0580%" y="613" width="5.9446%" height="15" fill="rgb(244,27,41)" fg:x="63596337" fg:w="17953065"/><text x="21.3080%" y="623.50">alloc::s..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17,953,065 samples, 5.94%)</title><rect x="21.0580%" y="597" width="5.9446%" height="15" fill="rgb(235,35,32)" fg:x="63596337" fg:w="17953065"/><text x="21.3080%" y="607.50">&lt;T as al..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (17,953,065 samples, 5.94%)</title><rect x="21.0580%" y="581" width="5.9446%" height="15" fill="rgb(218,68,31)" fg:x="63596337" fg:w="17953065"/><text x="21.3080%" y="591.50">&lt;css_bit..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,947,220 samples, 0.98%)</title><rect x="26.0267%" y="565" width="0.9759%" height="15" fill="rgb(207,120,37)" fg:x="78602182" fg:w="2947220"/><text x="26.2767%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,947,220 samples, 0.98%)</title><rect x="26.0267%" y="549" width="0.9759%" height="15" fill="rgb(227,98,0)" fg:x="78602182" fg:w="2947220"/><text x="26.2767%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,947,220 samples, 0.98%)</title><rect x="26.0267%" y="533" width="0.9759%" height="15" fill="rgb(207,7,3)" fg:x="78602182" fg:w="2947220"/><text x="26.2767%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (2,947,220 samples, 0.98%)</title><rect x="26.0267%" y="517" width="0.9759%" height="15" fill="rgb(206,98,19)" fg:x="78602182" fg:w="2947220"/><text x="26.2767%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,947,220 samples, 0.98%)</title><rect x="26.0267%" y="501" width="0.9759%" height="15" fill="rgb(217,5,26)" fg:x="78602182" fg:w="2947220"/><text x="26.2767%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,947,220 samples, 0.98%)</title><rect x="26.0267%" y="485" width="0.9759%" height="15" fill="rgb(235,190,38)" fg:x="78602182" fg:w="2947220"/><text x="26.2767%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,947,220 samples, 0.98%)</title><rect x="26.0267%" y="469" width="0.9759%" height="15" fill="rgb(247,86,24)" fg:x="78602182" fg:w="2947220"/><text x="26.2767%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,947,220 samples, 0.98%)</title><rect x="26.0267%" y="453" width="0.9759%" height="15" fill="rgb(205,101,16)" fg:x="78602182" fg:w="2947220"/><text x="26.2767%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,947,220 samples, 0.98%)</title><rect x="26.0267%" y="437" width="0.9759%" height="15" fill="rgb(246,168,33)" fg:x="78602182" fg:w="2947220"/><text x="26.2767%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,947,220 samples, 0.98%)</title><rect x="26.0267%" y="421" width="0.9759%" height="15" fill="rgb(231,114,1)" fg:x="78602182" fg:w="2947220"/><text x="26.2767%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,947,220 samples, 0.98%)</title><rect x="26.0267%" y="405" width="0.9759%" height="15" fill="rgb(207,184,53)" fg:x="78602182" fg:w="2947220"/><text x="26.2767%" y="415.50"></text></g><g><title>alloc::alloc::alloc (2,947,220 samples, 0.98%)</title><rect x="26.0267%" y="389" width="0.9759%" height="15" fill="rgb(224,95,51)" fg:x="78602182" fg:w="2947220"/><text x="26.2767%" y="399.50"></text></g><g><title>malloc (2,947,220 samples, 0.98%)</title><rect x="26.0267%" y="373" width="0.9759%" height="15" fill="rgb(212,188,45)" fg:x="78602182" fg:w="2947220"/><text x="26.2767%" y="383.50"></text></g><g><title>[libc.so.6] (2,947,220 samples, 0.98%)</title><rect x="26.0267%" y="357" width="0.9759%" height="15" fill="rgb(223,154,38)" fg:x="78602182" fg:w="2947220"/><text x="26.2767%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21,067,348 samples, 6.98%)</title><rect x="21.0580%" y="725" width="6.9758%" height="15" fill="rgb(251,22,52)" fg:x="63596337" fg:w="21067348"/><text x="21.3080%" y="735.50">&lt;alloc::v..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21,067,348 samples, 6.98%)</title><rect x="21.0580%" y="709" width="6.9758%" height="15" fill="rgb(229,209,22)" fg:x="63596337" fg:w="21067348"/><text x="21.3080%" y="719.50">alloc::sl..</text></g><g><title>alloc::slice::hack::to_vec (21,067,348 samples, 6.98%)</title><rect x="21.0580%" y="693" width="6.9758%" height="15" fill="rgb(234,138,34)" fg:x="63596337" fg:w="21067348"/><text x="21.3080%" y="703.50">alloc::sl..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21,067,348 samples, 6.98%)</title><rect x="21.0580%" y="677" width="6.9758%" height="15" fill="rgb(212,95,11)" fg:x="63596337" fg:w="21067348"/><text x="21.3080%" y="687.50">&lt;T as all..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (21,067,348 samples, 6.98%)</title><rect x="21.0580%" y="661" width="6.9758%" height="15" fill="rgb(240,179,47)" fg:x="63596337" fg:w="21067348"/><text x="21.3080%" y="671.50">&lt;css_bitv..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,114,283 samples, 1.03%)</title><rect x="27.0026%" y="645" width="1.0312%" height="15" fill="rgb(240,163,11)" fg:x="81549402" fg:w="3114283"/><text x="27.2526%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,114,283 samples, 1.03%)</title><rect x="27.0026%" y="629" width="1.0312%" height="15" fill="rgb(236,37,12)" fg:x="81549402" fg:w="3114283"/><text x="27.2526%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,114,283 samples, 1.03%)</title><rect x="27.0026%" y="613" width="1.0312%" height="15" fill="rgb(232,164,16)" fg:x="81549402" fg:w="3114283"/><text x="27.2526%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (3,114,283 samples, 1.03%)</title><rect x="27.0026%" y="597" width="1.0312%" height="15" fill="rgb(244,205,15)" fg:x="81549402" fg:w="3114283"/><text x="27.2526%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,114,283 samples, 1.03%)</title><rect x="27.0026%" y="581" width="1.0312%" height="15" fill="rgb(223,117,47)" fg:x="81549402" fg:w="3114283"/><text x="27.2526%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,114,283 samples, 1.03%)</title><rect x="27.0026%" y="565" width="1.0312%" height="15" fill="rgb(244,107,35)" fg:x="81549402" fg:w="3114283"/><text x="27.2526%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,114,283 samples, 1.03%)</title><rect x="27.0026%" y="549" width="1.0312%" height="15" fill="rgb(205,140,8)" fg:x="81549402" fg:w="3114283"/><text x="27.2526%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,114,283 samples, 1.03%)</title><rect x="27.0026%" y="533" width="1.0312%" height="15" fill="rgb(228,84,46)" fg:x="81549402" fg:w="3114283"/><text x="27.2526%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,114,283 samples, 1.03%)</title><rect x="27.0026%" y="517" width="1.0312%" height="15" fill="rgb(254,188,9)" fg:x="81549402" fg:w="3114283"/><text x="27.2526%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,114,283 samples, 1.03%)</title><rect x="27.0026%" y="501" width="1.0312%" height="15" fill="rgb(206,112,54)" fg:x="81549402" fg:w="3114283"/><text x="27.2526%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,114,283 samples, 1.03%)</title><rect x="27.0026%" y="485" width="1.0312%" height="15" fill="rgb(216,84,49)" fg:x="81549402" fg:w="3114283"/><text x="27.2526%" y="495.50"></text></g><g><title>alloc::alloc::alloc (3,114,283 samples, 1.03%)</title><rect x="27.0026%" y="469" width="1.0312%" height="15" fill="rgb(214,194,35)" fg:x="81549402" fg:w="3114283"/><text x="27.2526%" y="479.50"></text></g><g><title>malloc (3,114,283 samples, 1.03%)</title><rect x="27.0026%" y="453" width="1.0312%" height="15" fill="rgb(249,28,3)" fg:x="81549402" fg:w="3114283"/><text x="27.2526%" y="463.50"></text></g><g><title>[libc.so.6] (3,114,283 samples, 1.03%)</title><rect x="27.0026%" y="437" width="1.0312%" height="15" fill="rgb(222,56,52)" fg:x="81549402" fg:w="3114283"/><text x="27.2526%" y="447.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (26,644,259 samples, 8.82%)</title><rect x="20.1150%" y="741" width="8.8224%" height="15" fill="rgb(245,217,50)" fg:x="60748419" fg:w="26644259"/><text x="20.3650%" y="751.50">&lt;css_bitvect..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,728,993 samples, 0.90%)</title><rect x="28.0338%" y="725" width="0.9036%" height="15" fill="rgb(213,201,24)" fg:x="84663685" fg:w="2728993"/><text x="28.2838%" y="735.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,728,993 samples, 0.90%)</title><rect x="28.0338%" y="709" width="0.9036%" height="15" fill="rgb(248,116,28)" fg:x="84663685" fg:w="2728993"/><text x="28.2838%" y="719.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,728,993 samples, 0.90%)</title><rect x="28.0338%" y="693" width="0.9036%" height="15" fill="rgb(219,72,43)" fg:x="84663685" fg:w="2728993"/><text x="28.2838%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,728,993 samples, 0.90%)</title><rect x="28.0338%" y="677" width="0.9036%" height="15" fill="rgb(209,138,14)" fg:x="84663685" fg:w="2728993"/><text x="28.2838%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,728,993 samples, 0.90%)</title><rect x="28.0338%" y="661" width="0.9036%" height="15" fill="rgb(222,18,33)" fg:x="84663685" fg:w="2728993"/><text x="28.2838%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,728,993 samples, 0.90%)</title><rect x="28.0338%" y="645" width="0.9036%" height="15" fill="rgb(213,199,7)" fg:x="84663685" fg:w="2728993"/><text x="28.2838%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (2,728,993 samples, 0.90%)</title><rect x="28.0338%" y="629" width="0.9036%" height="15" fill="rgb(250,110,10)" fg:x="84663685" fg:w="2728993"/><text x="28.2838%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2,728,993 samples, 0.90%)</title><rect x="28.0338%" y="613" width="0.9036%" height="15" fill="rgb(248,123,6)" fg:x="84663685" fg:w="2728993"/><text x="28.2838%" y="623.50"></text></g><g><title>core::ptr::write (2,728,993 samples, 0.90%)</title><rect x="28.0338%" y="597" width="0.9036%" height="15" fill="rgb(206,91,31)" fg:x="84663685" fg:w="2728993"/><text x="28.2838%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (29,711,186 samples, 9.84%)</title><rect x="20.1150%" y="805" width="9.8379%" height="15" fill="rgb(211,154,13)" fg:x="60748419" fg:w="29711186"/><text x="20.3650%" y="815.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29,711,186 samples, 9.84%)</title><rect x="20.1150%" y="789" width="9.8379%" height="15" fill="rgb(225,148,7)" fg:x="60748419" fg:w="29711186"/><text x="20.3650%" y="799.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (29,711,186 samples, 9.84%)</title><rect x="20.1150%" y="773" width="9.8379%" height="15" fill="rgb(220,160,43)" fg:x="60748419" fg:w="29711186"/><text x="20.3650%" y="783.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (29,711,186 samples, 9.84%)</title><rect x="20.1150%" y="757" width="9.8379%" height="15" fill="rgb(213,52,39)" fg:x="60748419" fg:w="29711186"/><text x="20.3650%" y="767.50">&lt;T as alloc::s..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3,066,927 samples, 1.02%)</title><rect x="28.9374%" y="741" width="1.0155%" height="15" fill="rgb(243,137,7)" fg:x="87392678" fg:w="3066927"/><text x="29.1874%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (32,922,849 samples, 10.90%)</title><rect x="20.1150%" y="885" width="10.9014%" height="15" fill="rgb(230,79,13)" fg:x="60748419" fg:w="32922849"/><text x="20.3650%" y="895.50">&lt;alloc::vec::Vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32,922,849 samples, 10.90%)</title><rect x="20.1150%" y="869" width="10.9014%" height="15" fill="rgb(247,105,23)" fg:x="60748419" fg:w="32922849"/><text x="20.3650%" y="879.50">alloc::slice::&lt;i..</text></g><g><title>alloc::slice::hack::to_vec (32,922,849 samples, 10.90%)</title><rect x="20.1150%" y="853" width="10.9014%" height="15" fill="rgb(223,179,41)" fg:x="60748419" fg:w="32922849"/><text x="20.3650%" y="863.50">alloc::slice::ha..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32,922,849 samples, 10.90%)</title><rect x="20.1150%" y="837" width="10.9014%" height="15" fill="rgb(218,9,34)" fg:x="60748419" fg:w="32922849"/><text x="20.3650%" y="847.50">&lt;T as alloc::sli..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (32,922,849 samples, 10.90%)</title><rect x="20.1150%" y="821" width="10.9014%" height="15" fill="rgb(222,106,8)" fg:x="60748419" fg:w="32922849"/><text x="20.3650%" y="831.50">&lt;css_bitvector_c..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,211,663 samples, 1.06%)</title><rect x="29.9529%" y="805" width="1.0634%" height="15" fill="rgb(211,220,0)" fg:x="90459605" fg:w="3211663"/><text x="30.2029%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,211,663 samples, 1.06%)</title><rect x="29.9529%" y="789" width="1.0634%" height="15" fill="rgb(229,52,16)" fg:x="90459605" fg:w="3211663"/><text x="30.2029%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,211,663 samples, 1.06%)</title><rect x="29.9529%" y="773" width="1.0634%" height="15" fill="rgb(212,155,18)" fg:x="90459605" fg:w="3211663"/><text x="30.2029%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (3,211,663 samples, 1.06%)</title><rect x="29.9529%" y="757" width="1.0634%" height="15" fill="rgb(242,21,14)" fg:x="90459605" fg:w="3211663"/><text x="30.2029%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,211,663 samples, 1.06%)</title><rect x="29.9529%" y="741" width="1.0634%" height="15" fill="rgb(222,19,48)" fg:x="90459605" fg:w="3211663"/><text x="30.2029%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,211,663 samples, 1.06%)</title><rect x="29.9529%" y="725" width="1.0634%" height="15" fill="rgb(232,45,27)" fg:x="90459605" fg:w="3211663"/><text x="30.2029%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,211,663 samples, 1.06%)</title><rect x="29.9529%" y="709" width="1.0634%" height="15" fill="rgb(249,103,42)" fg:x="90459605" fg:w="3211663"/><text x="30.2029%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,211,663 samples, 1.06%)</title><rect x="29.9529%" y="693" width="1.0634%" height="15" fill="rgb(246,81,33)" fg:x="90459605" fg:w="3211663"/><text x="30.2029%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,211,663 samples, 1.06%)</title><rect x="29.9529%" y="677" width="1.0634%" height="15" fill="rgb(252,33,42)" fg:x="90459605" fg:w="3211663"/><text x="30.2029%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,211,663 samples, 1.06%)</title><rect x="29.9529%" y="661" width="1.0634%" height="15" fill="rgb(209,212,41)" fg:x="90459605" fg:w="3211663"/><text x="30.2029%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,211,663 samples, 1.06%)</title><rect x="29.9529%" y="645" width="1.0634%" height="15" fill="rgb(207,154,6)" fg:x="90459605" fg:w="3211663"/><text x="30.2029%" y="655.50"></text></g><g><title>alloc::alloc::alloc (3,211,663 samples, 1.06%)</title><rect x="29.9529%" y="629" width="1.0634%" height="15" fill="rgb(223,64,47)" fg:x="90459605" fg:w="3211663"/><text x="30.2029%" y="639.50"></text></g><g><title>malloc (3,211,663 samples, 1.06%)</title><rect x="29.9529%" y="613" width="1.0634%" height="15" fill="rgb(211,161,38)" fg:x="90459605" fg:w="3211663"/><text x="30.2029%" y="623.50"></text></g><g><title>[libc.so.6] (3,211,663 samples, 1.06%)</title><rect x="29.9529%" y="597" width="1.0634%" height="15" fill="rgb(219,138,40)" fg:x="90459605" fg:w="3211663"/><text x="30.2029%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (36,063,283 samples, 11.94%)</title><rect x="20.1150%" y="965" width="11.9412%" height="15" fill="rgb(241,228,46)" fg:x="60748419" fg:w="36063283"/><text x="20.3650%" y="975.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (36,063,283 samples, 11.94%)</title><rect x="20.1150%" y="949" width="11.9412%" height="15" fill="rgb(223,209,38)" fg:x="60748419" fg:w="36063283"/><text x="20.3650%" y="959.50">alloc::slice::&lt;imp..</text></g><g><title>alloc::slice::hack::to_vec (36,063,283 samples, 11.94%)</title><rect x="20.1150%" y="933" width="11.9412%" height="15" fill="rgb(236,164,45)" fg:x="60748419" fg:w="36063283"/><text x="20.3650%" y="943.50">alloc::slice::hack..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (36,063,283 samples, 11.94%)</title><rect x="20.1150%" y="917" width="11.9412%" height="15" fill="rgb(231,15,5)" fg:x="60748419" fg:w="36063283"/><text x="20.3650%" y="927.50">&lt;T as alloc::slice..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (36,063,283 samples, 11.94%)</title><rect x="20.1150%" y="901" width="11.9412%" height="15" fill="rgb(252,35,15)" fg:x="60748419" fg:w="36063283"/><text x="20.3650%" y="911.50">&lt;css_bitvector_com..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,140,434 samples, 1.04%)</title><rect x="31.0164%" y="885" width="1.0399%" height="15" fill="rgb(248,181,18)" fg:x="93671268" fg:w="3140434"/><text x="31.2664%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,140,434 samples, 1.04%)</title><rect x="31.0164%" y="869" width="1.0399%" height="15" fill="rgb(233,39,42)" fg:x="93671268" fg:w="3140434"/><text x="31.2664%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,140,434 samples, 1.04%)</title><rect x="31.0164%" y="853" width="1.0399%" height="15" fill="rgb(238,110,33)" fg:x="93671268" fg:w="3140434"/><text x="31.2664%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,140,434 samples, 1.04%)</title><rect x="31.0164%" y="837" width="1.0399%" height="15" fill="rgb(233,195,10)" fg:x="93671268" fg:w="3140434"/><text x="31.2664%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (3,140,434 samples, 1.04%)</title><rect x="31.0164%" y="821" width="1.0399%" height="15" fill="rgb(254,105,3)" fg:x="93671268" fg:w="3140434"/><text x="31.2664%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,140,434 samples, 1.04%)</title><rect x="31.0164%" y="805" width="1.0399%" height="15" fill="rgb(221,225,9)" fg:x="93671268" fg:w="3140434"/><text x="31.2664%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,140,434 samples, 1.04%)</title><rect x="31.0164%" y="789" width="1.0399%" height="15" fill="rgb(224,227,45)" fg:x="93671268" fg:w="3140434"/><text x="31.2664%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,140,434 samples, 1.04%)</title><rect x="31.0164%" y="773" width="1.0399%" height="15" fill="rgb(229,198,43)" fg:x="93671268" fg:w="3140434"/><text x="31.2664%" y="783.50"></text></g><g><title>[libc.so.6] (3,140,434 samples, 1.04%)</title><rect x="31.0164%" y="757" width="1.0399%" height="15" fill="rgb(206,209,35)" fg:x="93671268" fg:w="3140434"/><text x="31.2664%" y="767.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (39,021,591 samples, 12.92%)</title><rect x="20.1150%" y="981" width="12.9208%" height="15" fill="rgb(245,195,53)" fg:x="60748419" fg:w="39021591"/><text x="20.3650%" y="991.50">&lt;css_bitvector_comp..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,958,308 samples, 0.98%)</title><rect x="32.0562%" y="965" width="0.9796%" height="15" fill="rgb(240,92,26)" fg:x="96811702" fg:w="2958308"/><text x="32.3062%" y="975.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,958,308 samples, 0.98%)</title><rect x="32.0562%" y="949" width="0.9796%" height="15" fill="rgb(207,40,23)" fg:x="96811702" fg:w="2958308"/><text x="32.3062%" y="959.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,958,308 samples, 0.98%)</title><rect x="32.0562%" y="933" width="0.9796%" height="15" fill="rgb(223,111,35)" fg:x="96811702" fg:w="2958308"/><text x="32.3062%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,958,308 samples, 0.98%)</title><rect x="32.0562%" y="917" width="0.9796%" height="15" fill="rgb(229,147,28)" fg:x="96811702" fg:w="2958308"/><text x="32.3062%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2,958,308 samples, 0.98%)</title><rect x="32.0562%" y="901" width="0.9796%" height="15" fill="rgb(211,29,28)" fg:x="96811702" fg:w="2958308"/><text x="32.3062%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2,958,308 samples, 0.98%)</title><rect x="32.0562%" y="885" width="0.9796%" height="15" fill="rgb(228,72,33)" fg:x="96811702" fg:w="2958308"/><text x="32.3062%" y="895.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2,958,308 samples, 0.98%)</title><rect x="32.0562%" y="869" width="0.9796%" height="15" fill="rgb(205,214,31)" fg:x="96811702" fg:w="2958308"/><text x="32.3062%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,958,308 samples, 0.98%)</title><rect x="32.0562%" y="853" width="0.9796%" height="15" fill="rgb(224,111,15)" fg:x="96811702" fg:w="2958308"/><text x="32.3062%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,958,308 samples, 0.98%)</title><rect x="32.0562%" y="837" width="0.9796%" height="15" fill="rgb(253,21,26)" fg:x="96811702" fg:w="2958308"/><text x="32.3062%" y="847.50"></text></g><g><title>alloc::alloc::alloc (2,958,308 samples, 0.98%)</title><rect x="32.0562%" y="821" width="0.9796%" height="15" fill="rgb(245,139,43)" fg:x="96811702" fg:w="2958308"/><text x="32.3062%" y="831.50"></text></g><g><title>malloc (2,958,308 samples, 0.98%)</title><rect x="32.0562%" y="805" width="0.9796%" height="15" fill="rgb(252,170,7)" fg:x="96811702" fg:w="2958308"/><text x="32.3062%" y="815.50"></text></g><g><title>[libc.so.6] (2,958,308 samples, 0.98%)</title><rect x="32.0562%" y="789" width="0.9796%" height="15" fill="rgb(231,118,14)" fg:x="96811702" fg:w="2958308"/><text x="32.3062%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (41,900,535 samples, 13.87%)</title><rect x="20.1150%" y="1045" width="13.8741%" height="15" fill="rgb(238,83,0)" fg:x="60748419" fg:w="41900535"/><text x="20.3650%" y="1055.50">&lt;alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (41,900,535 samples, 13.87%)</title><rect x="20.1150%" y="1029" width="13.8741%" height="15" fill="rgb(221,39,39)" fg:x="60748419" fg:w="41900535"/><text x="20.3650%" y="1039.50">alloc::slice::&lt;impl [..</text></g><g><title>alloc::slice::hack::to_vec (41,900,535 samples, 13.87%)</title><rect x="20.1150%" y="1013" width="13.8741%" height="15" fill="rgb(222,119,46)" fg:x="60748419" fg:w="41900535"/><text x="20.3650%" y="1023.50">alloc::slice::hack::t..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (41,900,535 samples, 13.87%)</title><rect x="20.1150%" y="997" width="13.8741%" height="15" fill="rgb(222,165,49)" fg:x="60748419" fg:w="41900535"/><text x="20.3650%" y="1007.50">&lt;T as alloc::slice::h..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,878,944 samples, 0.95%)</title><rect x="33.0358%" y="981" width="0.9533%" height="15" fill="rgb(219,113,52)" fg:x="99770010" fg:w="2878944"/><text x="33.2858%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,878,944 samples, 0.95%)</title><rect x="33.0358%" y="965" width="0.9533%" height="15" fill="rgb(214,7,15)" fg:x="99770010" fg:w="2878944"/><text x="33.2858%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,878,944 samples, 0.95%)</title><rect x="33.0358%" y="949" width="0.9533%" height="15" fill="rgb(235,32,4)" fg:x="99770010" fg:w="2878944"/><text x="33.2858%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,878,944 samples, 0.95%)</title><rect x="33.0358%" y="933" width="0.9533%" height="15" fill="rgb(238,90,54)" fg:x="99770010" fg:w="2878944"/><text x="33.2858%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,878,944 samples, 0.95%)</title><rect x="33.0358%" y="917" width="0.9533%" height="15" fill="rgb(213,208,19)" fg:x="99770010" fg:w="2878944"/><text x="33.2858%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,878,944 samples, 0.95%)</title><rect x="33.0358%" y="901" width="0.9533%" height="15" fill="rgb(233,156,4)" fg:x="99770010" fg:w="2878944"/><text x="33.2858%" y="911.50"></text></g><g><title>alloc::alloc::alloc (2,878,944 samples, 0.95%)</title><rect x="33.0358%" y="885" width="0.9533%" height="15" fill="rgb(207,194,5)" fg:x="99770010" fg:w="2878944"/><text x="33.2858%" y="895.50"></text></g><g><title>malloc (2,878,944 samples, 0.95%)</title><rect x="33.0358%" y="869" width="0.9533%" height="15" fill="rgb(206,111,30)" fg:x="99770010" fg:w="2878944"/><text x="33.2858%" y="879.50"></text></g><g><title>[libc.so.6] (2,878,944 samples, 0.95%)</title><rect x="33.0358%" y="853" width="0.9533%" height="15" fill="rgb(243,70,54)" fg:x="99770010" fg:w="2878944"/><text x="33.2858%" y="863.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,143,308 samples, 1.04%)</title><rect x="33.9890%" y="1045" width="1.0408%" height="15" fill="rgb(242,28,8)" fg:x="102648954" fg:w="3143308"/><text x="34.2390%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,143,308 samples, 1.04%)</title><rect x="33.9890%" y="1029" width="1.0408%" height="15" fill="rgb(219,106,18)" fg:x="102648954" fg:w="3143308"/><text x="34.2390%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (48,023,443 samples, 15.90%)</title><rect x="20.1150%" y="1125" width="15.9015%" height="15" fill="rgb(244,222,10)" fg:x="60748419" fg:w="48023443"/><text x="20.3650%" y="1135.50">&lt;alloc::vec::Vec&lt;T,A&gt; as..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (48,023,443 samples, 15.90%)</title><rect x="20.1150%" y="1109" width="15.9015%" height="15" fill="rgb(236,179,52)" fg:x="60748419" fg:w="48023443"/><text x="20.3650%" y="1119.50">alloc::slice::&lt;impl [T]&gt;..</text></g><g><title>alloc::slice::hack::to_vec (48,023,443 samples, 15.90%)</title><rect x="20.1150%" y="1093" width="15.9015%" height="15" fill="rgb(213,23,39)" fg:x="60748419" fg:w="48023443"/><text x="20.3650%" y="1103.50">alloc::slice::hack::to_v..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (48,023,443 samples, 15.90%)</title><rect x="20.1150%" y="1077" width="15.9015%" height="15" fill="rgb(238,48,10)" fg:x="60748419" fg:w="48023443"/><text x="20.3650%" y="1087.50">&lt;T as alloc::slice::hack..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (48,023,443 samples, 15.90%)</title><rect x="20.1150%" y="1061" width="15.9015%" height="15" fill="rgb(251,196,23)" fg:x="60748419" fg:w="48023443"/><text x="20.3650%" y="1071.50">&lt;css_bitvector_compiler:..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,979,600 samples, 0.99%)</title><rect x="35.0299%" y="1045" width="0.9866%" height="15" fill="rgb(250,152,24)" fg:x="105792262" fg:w="2979600"/><text x="35.2799%" y="1055.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,979,600 samples, 0.99%)</title><rect x="35.0299%" y="1029" width="0.9866%" height="15" fill="rgb(209,150,17)" fg:x="105792262" fg:w="2979600"/><text x="35.2799%" y="1039.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,979,600 samples, 0.99%)</title><rect x="35.0299%" y="1013" width="0.9866%" height="15" fill="rgb(234,202,34)" fg:x="105792262" fg:w="2979600"/><text x="35.2799%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,979,600 samples, 0.99%)</title><rect x="35.0299%" y="997" width="0.9866%" height="15" fill="rgb(253,148,53)" fg:x="105792262" fg:w="2979600"/><text x="35.2799%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,979,600 samples, 0.99%)</title><rect x="35.0299%" y="981" width="0.9866%" height="15" fill="rgb(218,129,16)" fg:x="105792262" fg:w="2979600"/><text x="35.2799%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,979,600 samples, 0.99%)</title><rect x="35.0299%" y="965" width="0.9866%" height="15" fill="rgb(216,85,19)" fg:x="105792262" fg:w="2979600"/><text x="35.2799%" y="975.50"></text></g><g><title>core::clone::Clone::clone (2,979,600 samples, 0.99%)</title><rect x="35.0299%" y="949" width="0.9866%" height="15" fill="rgb(235,228,7)" fg:x="105792262" fg:w="2979600"/><text x="35.2799%" y="959.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,979,600 samples, 0.99%)</title><rect x="35.0299%" y="933" width="0.9866%" height="15" fill="rgb(245,175,0)" fg:x="105792262" fg:w="2979600"/><text x="35.2799%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,979,600 samples, 0.99%)</title><rect x="35.0299%" y="917" width="0.9866%" height="15" fill="rgb(208,168,36)" fg:x="105792262" fg:w="2979600"/><text x="35.2799%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,979,600 samples, 0.99%)</title><rect x="35.0299%" y="901" width="0.9866%" height="15" fill="rgb(246,171,24)" fg:x="105792262" fg:w="2979600"/><text x="35.2799%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (2,979,600 samples, 0.99%)</title><rect x="35.0299%" y="885" width="0.9866%" height="15" fill="rgb(215,142,24)" fg:x="105792262" fg:w="2979600"/><text x="35.2799%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,979,600 samples, 0.99%)</title><rect x="35.0299%" y="869" width="0.9866%" height="15" fill="rgb(250,187,7)" fg:x="105792262" fg:w="2979600"/><text x="35.2799%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,979,600 samples, 0.99%)</title><rect x="35.0299%" y="853" width="0.9866%" height="15" fill="rgb(228,66,33)" fg:x="105792262" fg:w="2979600"/><text x="35.2799%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,979,600 samples, 0.99%)</title><rect x="35.0299%" y="837" width="0.9866%" height="15" fill="rgb(234,215,21)" fg:x="105792262" fg:w="2979600"/><text x="35.2799%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,979,600 samples, 0.99%)</title><rect x="35.0299%" y="821" width="0.9866%" height="15" fill="rgb(222,191,20)" fg:x="105792262" fg:w="2979600"/><text x="35.2799%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,979,600 samples, 0.99%)</title><rect x="35.0299%" y="805" width="0.9866%" height="15" fill="rgb(245,79,54)" fg:x="105792262" fg:w="2979600"/><text x="35.2799%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,979,600 samples, 0.99%)</title><rect x="35.0299%" y="789" width="0.9866%" height="15" fill="rgb(240,10,37)" fg:x="105792262" fg:w="2979600"/><text x="35.2799%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,979,600 samples, 0.99%)</title><rect x="35.0299%" y="773" width="0.9866%" height="15" fill="rgb(214,192,32)" fg:x="105792262" fg:w="2979600"/><text x="35.2799%" y="783.50"></text></g><g><title>alloc::alloc::alloc (2,979,600 samples, 0.99%)</title><rect x="35.0299%" y="757" width="0.9866%" height="15" fill="rgb(209,36,54)" fg:x="105792262" fg:w="2979600"/><text x="35.2799%" y="767.50"></text></g><g><title>malloc (2,979,600 samples, 0.99%)</title><rect x="35.0299%" y="741" width="0.9866%" height="15" fill="rgb(220,10,11)" fg:x="105792262" fg:w="2979600"/><text x="35.2799%" y="751.50"></text></g><g><title>[libc.so.6] (2,979,600 samples, 0.99%)</title><rect x="35.0299%" y="725" width="0.9866%" height="15" fill="rgb(221,106,17)" fg:x="105792262" fg:w="2979600"/><text x="35.2799%" y="735.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,494,822 samples, 0.83%)</title><rect x="36.0165%" y="1125" width="0.8261%" height="15" fill="rgb(251,142,44)" fg:x="108771862" fg:w="2494822"/><text x="36.2665%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,494,822 samples, 0.83%)</title><rect x="36.0165%" y="1109" width="0.8261%" height="15" fill="rgb(238,13,15)" fg:x="108771862" fg:w="2494822"/><text x="36.2665%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,494,822 samples, 0.83%)</title><rect x="36.0165%" y="1093" width="0.8261%" height="15" fill="rgb(208,107,27)" fg:x="108771862" fg:w="2494822"/><text x="36.2665%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,494,822 samples, 0.83%)</title><rect x="36.0165%" y="1077" width="0.8261%" height="15" fill="rgb(205,136,37)" fg:x="108771862" fg:w="2494822"/><text x="36.2665%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (2,494,822 samples, 0.83%)</title><rect x="36.0165%" y="1061" width="0.8261%" height="15" fill="rgb(250,205,27)" fg:x="108771862" fg:w="2494822"/><text x="36.2665%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,494,822 samples, 0.83%)</title><rect x="36.0165%" y="1045" width="0.8261%" height="15" fill="rgb(210,80,43)" fg:x="108771862" fg:w="2494822"/><text x="36.2665%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,494,822 samples, 0.83%)</title><rect x="36.0165%" y="1029" width="0.8261%" height="15" fill="rgb(247,160,36)" fg:x="108771862" fg:w="2494822"/><text x="36.2665%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,494,822 samples, 0.83%)</title><rect x="36.0165%" y="1013" width="0.8261%" height="15" fill="rgb(234,13,49)" fg:x="108771862" fg:w="2494822"/><text x="36.2665%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,494,822 samples, 0.83%)</title><rect x="36.0165%" y="997" width="0.8261%" height="15" fill="rgb(234,122,0)" fg:x="108771862" fg:w="2494822"/><text x="36.2665%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,494,822 samples, 0.83%)</title><rect x="36.0165%" y="981" width="0.8261%" height="15" fill="rgb(207,146,38)" fg:x="108771862" fg:w="2494822"/><text x="36.2665%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,494,822 samples, 0.83%)</title><rect x="36.0165%" y="965" width="0.8261%" height="15" fill="rgb(207,177,25)" fg:x="108771862" fg:w="2494822"/><text x="36.2665%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,494,822 samples, 0.83%)</title><rect x="36.0165%" y="949" width="0.8261%" height="15" fill="rgb(211,178,42)" fg:x="108771862" fg:w="2494822"/><text x="36.2665%" y="959.50"></text></g><g><title>alloc::alloc::alloc (2,494,822 samples, 0.83%)</title><rect x="36.0165%" y="933" width="0.8261%" height="15" fill="rgb(230,69,54)" fg:x="108771862" fg:w="2494822"/><text x="36.2665%" y="943.50"></text></g><g><title>malloc (2,494,822 samples, 0.83%)</title><rect x="36.0165%" y="917" width="0.8261%" height="15" fill="rgb(214,135,41)" fg:x="108771862" fg:w="2494822"/><text x="36.2665%" y="927.50"></text></g><g><title>[libc.so.6] (2,494,822 samples, 0.83%)</title><rect x="36.0165%" y="901" width="0.8261%" height="15" fill="rgb(237,67,25)" fg:x="108771862" fg:w="2494822"/><text x="36.2665%" y="911.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (5,718,866 samples, 1.89%)</title><rect x="36.8425%" y="1125" width="1.8936%" height="15" fill="rgb(222,189,50)" fg:x="111266684" fg:w="5718866"/><text x="37.0925%" y="1135.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,718,866 samples, 1.89%)</title><rect x="36.8425%" y="1109" width="1.8936%" height="15" fill="rgb(245,148,34)" fg:x="111266684" fg:w="5718866"/><text x="37.0925%" y="1119.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,718,866 samples, 1.89%)</title><rect x="36.8425%" y="1093" width="1.8936%" height="15" fill="rgb(222,29,6)" fg:x="111266684" fg:w="5718866"/><text x="37.0925%" y="1103.50">a..</text></g><g><title>alloc::slice::hack::to_vec (5,718,866 samples, 1.89%)</title><rect x="36.8425%" y="1077" width="1.8936%" height="15" fill="rgb(221,189,43)" fg:x="111266684" fg:w="5718866"/><text x="37.0925%" y="1087.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,718,866 samples, 1.89%)</title><rect x="36.8425%" y="1061" width="1.8936%" height="15" fill="rgb(207,36,27)" fg:x="111266684" fg:w="5718866"/><text x="37.0925%" y="1071.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,718,866 samples, 1.89%)</title><rect x="36.8425%" y="1045" width="1.8936%" height="15" fill="rgb(217,90,24)" fg:x="111266684" fg:w="5718866"/><text x="37.0925%" y="1055.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,718,866 samples, 1.89%)</title><rect x="36.8425%" y="1029" width="1.8936%" height="15" fill="rgb(224,66,35)" fg:x="111266684" fg:w="5718866"/><text x="37.0925%" y="1039.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,718,866 samples, 1.89%)</title><rect x="36.8425%" y="1013" width="1.8936%" height="15" fill="rgb(221,13,50)" fg:x="111266684" fg:w="5718866"/><text x="37.0925%" y="1023.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,718,866 samples, 1.89%)</title><rect x="36.8425%" y="997" width="1.8936%" height="15" fill="rgb(236,68,49)" fg:x="111266684" fg:w="5718866"/><text x="37.0925%" y="1007.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,718,866 samples, 1.89%)</title><rect x="36.8425%" y="981" width="1.8936%" height="15" fill="rgb(229,146,28)" fg:x="111266684" fg:w="5718866"/><text x="37.0925%" y="991.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (5,718,866 samples, 1.89%)</title><rect x="36.8425%" y="965" width="1.8936%" height="15" fill="rgb(225,31,38)" fg:x="111266684" fg:w="5718866"/><text x="37.0925%" y="975.50">a..</text></g><g><title>alloc::alloc::alloc (5,718,866 samples, 1.89%)</title><rect x="36.8425%" y="949" width="1.8936%" height="15" fill="rgb(250,208,3)" fg:x="111266684" fg:w="5718866"/><text x="37.0925%" y="959.50">a..</text></g><g><title>malloc (5,718,866 samples, 1.89%)</title><rect x="36.8425%" y="933" width="1.8936%" height="15" fill="rgb(246,54,23)" fg:x="111266684" fg:w="5718866"/><text x="37.0925%" y="943.50">m..</text></g><g><title>[libc.so.6] (2,939,551 samples, 0.97%)</title><rect x="37.7628%" y="917" width="0.9733%" height="15" fill="rgb(243,76,11)" fg:x="114045999" fg:w="2939551"/><text x="38.0128%" y="927.50"></text></g><g><title>[libc.so.6] (2,939,551 samples, 0.97%)</title><rect x="37.7628%" y="901" width="0.9733%" height="15" fill="rgb(245,21,50)" fg:x="114045999" fg:w="2939551"/><text x="38.0128%" y="911.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (59,174,856 samples, 19.59%)</title><rect x="20.1150%" y="1141" width="19.5939%" height="15" fill="rgb(228,9,43)" fg:x="60748419" fg:w="59174856"/><text x="20.3650%" y="1151.50">&lt;css_bitvector_compiler::HtmlNo..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2,937,725 samples, 0.97%)</title><rect x="38.7362%" y="1125" width="0.9727%" height="15" fill="rgb(208,100,47)" fg:x="116985550" fg:w="2937725"/><text x="38.9862%" y="1135.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2,937,725 samples, 0.97%)</title><rect x="38.7362%" y="1109" width="0.9727%" height="15" fill="rgb(232,26,8)" fg:x="116985550" fg:w="2937725"/><text x="38.9862%" y="1119.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2,937,725 samples, 0.97%)</title><rect x="38.7362%" y="1093" width="0.9727%" height="15" fill="rgb(216,166,38)" fg:x="116985550" fg:w="2937725"/><text x="38.9862%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,590,535 samples, 0.86%)</title><rect x="39.7089%" y="1077" width="0.8578%" height="15" fill="rgb(251,202,51)" fg:x="119923275" fg:w="2590535"/><text x="39.9589%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,590,535 samples, 0.86%)</title><rect x="39.7089%" y="1061" width="0.8578%" height="15" fill="rgb(254,216,34)" fg:x="119923275" fg:w="2590535"/><text x="39.9589%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (2,590,535 samples, 0.86%)</title><rect x="39.7089%" y="1045" width="0.8578%" height="15" fill="rgb(251,32,27)" fg:x="119923275" fg:w="2590535"/><text x="39.9589%" y="1055.50"></text></g><g><title>__rdl_alloc (2,590,535 samples, 0.86%)</title><rect x="39.7089%" y="1029" width="0.8578%" height="15" fill="rgb(208,127,28)" fg:x="119923275" fg:w="2590535"/><text x="39.9589%" y="1039.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,590,535 samples, 0.86%)</title><rect x="39.7089%" y="1013" width="0.8578%" height="15" fill="rgb(224,137,22)" fg:x="119923275" fg:w="2590535"/><text x="39.9589%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,692,885 samples, 1.89%)</title><rect x="39.7089%" y="1141" width="1.8850%" height="15" fill="rgb(254,70,32)" fg:x="119923275" fg:w="5692885"/><text x="39.9589%" y="1151.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,692,885 samples, 1.89%)</title><rect x="39.7089%" y="1125" width="1.8850%" height="15" fill="rgb(229,75,37)" fg:x="119923275" fg:w="5692885"/><text x="39.9589%" y="1135.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,692,885 samples, 1.89%)</title><rect x="39.7089%" y="1109" width="1.8850%" height="15" fill="rgb(252,64,23)" fg:x="119923275" fg:w="5692885"/><text x="39.9589%" y="1119.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,692,885 samples, 1.89%)</title><rect x="39.7089%" y="1093" width="1.8850%" height="15" fill="rgb(232,162,48)" fg:x="119923275" fg:w="5692885"/><text x="39.9589%" y="1103.50">a..</text></g><g><title>alloc::raw_vec::layout_array (3,102,350 samples, 1.03%)</title><rect x="40.5667%" y="1077" width="1.0272%" height="15" fill="rgb(246,160,12)" fg:x="122513810" fg:w="3102350"/><text x="40.8167%" y="1087.50"></text></g><g><title>core::alloc::layout::Layout::repeat (3,102,350 samples, 1.03%)</title><rect x="40.5667%" y="1061" width="1.0272%" height="15" fill="rgb(247,166,0)" fg:x="122513810" fg:w="3102350"/><text x="40.8167%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (68,047,296 samples, 22.53%)</title><rect x="20.1150%" y="1205" width="22.5318%" height="15" fill="rgb(249,219,21)" fg:x="60748419" fg:w="68047296"/><text x="20.3650%" y="1215.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (68,047,296 samples, 22.53%)</title><rect x="20.1150%" y="1189" width="22.5318%" height="15" fill="rgb(205,209,3)" fg:x="60748419" fg:w="68047296"/><text x="20.3650%" y="1199.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (68,047,296 samples, 22.53%)</title><rect x="20.1150%" y="1173" width="22.5318%" height="15" fill="rgb(243,44,1)" fg:x="60748419" fg:w="68047296"/><text x="20.3650%" y="1183.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (68,047,296 samples, 22.53%)</title><rect x="20.1150%" y="1157" width="22.5318%" height="15" fill="rgb(206,159,16)" fg:x="60748419" fg:w="68047296"/><text x="20.3650%" y="1167.50">&lt;T as alloc::slice::hack::ConvertVec..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3,179,555 samples, 1.05%)</title><rect x="41.5939%" y="1141" width="1.0528%" height="15" fill="rgb(244,77,30)" fg:x="125616160" fg:w="3179555"/><text x="41.8439%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,080,765 samples, 1.02%)</title><rect x="42.6467%" y="1205" width="1.0201%" height="15" fill="rgb(218,69,12)" fg:x="128795715" fg:w="3080765"/><text x="42.8967%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (80,569,886 samples, 26.68%)</title><rect x="18.0451%" y="1285" width="26.6782%" height="15" fill="rgb(212,87,7)" fg:x="54497413" fg:w="80569886"/><text x="18.2951%" y="1295.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (80,569,886 samples, 26.68%)</title><rect x="18.0451%" y="1269" width="26.6782%" height="15" fill="rgb(245,114,25)" fg:x="54497413" fg:w="80569886"/><text x="18.2951%" y="1279.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (80,569,886 samples, 26.68%)</title><rect x="18.0451%" y="1253" width="26.6782%" height="15" fill="rgb(210,61,42)" fg:x="54497413" fg:w="80569886"/><text x="18.2951%" y="1263.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (80,569,886 samples, 26.68%)</title><rect x="18.0451%" y="1237" width="26.6782%" height="15" fill="rgb(211,52,33)" fg:x="54497413" fg:w="80569886"/><text x="18.2951%" y="1247.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_v..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (80,569,886 samples, 26.68%)</title><rect x="18.0451%" y="1221" width="26.6782%" height="15" fill="rgb(234,58,33)" fg:x="54497413" fg:w="80569886"/><text x="18.2951%" y="1231.50">&lt;css_bitvector_compiler::HtmlNode as core::..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,190,819 samples, 1.06%)</title><rect x="43.6668%" y="1205" width="1.0565%" height="15" fill="rgb(220,115,36)" fg:x="131876480" fg:w="3190819"/><text x="43.9168%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,190,819 samples, 1.06%)</title><rect x="43.6668%" y="1189" width="1.0565%" height="15" fill="rgb(243,153,54)" fg:x="131876480" fg:w="3190819"/><text x="43.9168%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,190,819 samples, 1.06%)</title><rect x="43.6668%" y="1173" width="1.0565%" height="15" fill="rgb(251,47,18)" fg:x="131876480" fg:w="3190819"/><text x="43.9168%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (3,190,819 samples, 1.06%)</title><rect x="43.6668%" y="1157" width="1.0565%" height="15" fill="rgb(242,102,42)" fg:x="131876480" fg:w="3190819"/><text x="43.9168%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,190,819 samples, 1.06%)</title><rect x="43.6668%" y="1141" width="1.0565%" height="15" fill="rgb(234,31,38)" fg:x="131876480" fg:w="3190819"/><text x="43.9168%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,190,819 samples, 1.06%)</title><rect x="43.6668%" y="1125" width="1.0565%" height="15" fill="rgb(221,117,51)" fg:x="131876480" fg:w="3190819"/><text x="43.9168%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,190,819 samples, 1.06%)</title><rect x="43.6668%" y="1109" width="1.0565%" height="15" fill="rgb(212,20,18)" fg:x="131876480" fg:w="3190819"/><text x="43.9168%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,190,819 samples, 1.06%)</title><rect x="43.6668%" y="1093" width="1.0565%" height="15" fill="rgb(245,133,36)" fg:x="131876480" fg:w="3190819"/><text x="43.9168%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,190,819 samples, 1.06%)</title><rect x="43.6668%" y="1077" width="1.0565%" height="15" fill="rgb(212,6,19)" fg:x="131876480" fg:w="3190819"/><text x="43.9168%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,190,819 samples, 1.06%)</title><rect x="43.6668%" y="1061" width="1.0565%" height="15" fill="rgb(218,1,36)" fg:x="131876480" fg:w="3190819"/><text x="43.9168%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,190,819 samples, 1.06%)</title><rect x="43.6668%" y="1045" width="1.0565%" height="15" fill="rgb(246,84,54)" fg:x="131876480" fg:w="3190819"/><text x="43.9168%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (3,190,819 samples, 1.06%)</title><rect x="43.6668%" y="1029" width="1.0565%" height="15" fill="rgb(242,110,6)" fg:x="131876480" fg:w="3190819"/><text x="43.9168%" y="1039.50"></text></g><g><title>malloc (3,190,819 samples, 1.06%)</title><rect x="43.6668%" y="1013" width="1.0565%" height="15" fill="rgb(214,47,5)" fg:x="131876480" fg:w="3190819"/><text x="43.9168%" y="1023.50"></text></g><g><title>[libc.so.6] (3,190,819 samples, 1.06%)</title><rect x="43.6668%" y="997" width="1.0565%" height="15" fill="rgb(218,159,25)" fg:x="131876480" fg:w="3190819"/><text x="43.9168%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (83,655,314 samples, 27.70%)</title><rect x="18.0451%" y="1365" width="27.6999%" height="15" fill="rgb(215,211,28)" fg:x="54497413" fg:w="83655314"/><text x="18.2951%" y="1375.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (83,655,314 samples, 27.70%)</title><rect x="18.0451%" y="1349" width="27.6999%" height="15" fill="rgb(238,59,32)" fg:x="54497413" fg:w="83655314"/><text x="18.2951%" y="1359.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (83,655,314 samples, 27.70%)</title><rect x="18.0451%" y="1333" width="27.6999%" height="15" fill="rgb(226,82,3)" fg:x="54497413" fg:w="83655314"/><text x="18.2951%" y="1343.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (83,655,314 samples, 27.70%)</title><rect x="18.0451%" y="1317" width="27.6999%" height="15" fill="rgb(240,164,32)" fg:x="54497413" fg:w="83655314"/><text x="18.2951%" y="1327.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (83,655,314 samples, 27.70%)</title><rect x="18.0451%" y="1301" width="27.6999%" height="15" fill="rgb(232,46,7)" fg:x="54497413" fg:w="83655314"/><text x="18.2951%" y="1311.50">&lt;css_bitvector_compiler::HtmlNode as core::c..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,085,428 samples, 1.02%)</title><rect x="44.7234%" y="1285" width="1.0216%" height="15" fill="rgb(229,129,53)" fg:x="135067299" fg:w="3085428"/><text x="44.9734%" y="1295.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,085,428 samples, 1.02%)</title><rect x="44.7234%" y="1269" width="1.0216%" height="15" fill="rgb(234,188,29)" fg:x="135067299" fg:w="3085428"/><text x="44.9734%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,085,428 samples, 1.02%)</title><rect x="44.7234%" y="1253" width="1.0216%" height="15" fill="rgb(246,141,4)" fg:x="135067299" fg:w="3085428"/><text x="44.9734%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,085,428 samples, 1.02%)</title><rect x="44.7234%" y="1237" width="1.0216%" height="15" fill="rgb(229,23,39)" fg:x="135067299" fg:w="3085428"/><text x="44.9734%" y="1247.50"></text></g><g><title>alloc::slice::hack::to_vec (3,085,428 samples, 1.02%)</title><rect x="44.7234%" y="1221" width="1.0216%" height="15" fill="rgb(206,12,3)" fg:x="135067299" fg:w="3085428"/><text x="44.9734%" y="1231.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,085,428 samples, 1.02%)</title><rect x="44.7234%" y="1205" width="1.0216%" height="15" fill="rgb(252,226,20)" fg:x="135067299" fg:w="3085428"/><text x="44.9734%" y="1215.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,085,428 samples, 1.02%)</title><rect x="44.7234%" y="1189" width="1.0216%" height="15" fill="rgb(216,123,35)" fg:x="135067299" fg:w="3085428"/><text x="44.9734%" y="1199.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,085,428 samples, 1.02%)</title><rect x="44.7234%" y="1173" width="1.0216%" height="15" fill="rgb(212,68,40)" fg:x="135067299" fg:w="3085428"/><text x="44.9734%" y="1183.50"></text></g><g><title>[libc.so.6] (3,085,428 samples, 1.02%)</title><rect x="44.7234%" y="1157" width="1.0216%" height="15" fill="rgb(254,125,32)" fg:x="135067299" fg:w="3085428"/><text x="44.9734%" y="1167.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,103,765 samples, 1.03%)</title><rect x="45.7450%" y="1365" width="1.0277%" height="15" fill="rgb(253,97,22)" fg:x="138152727" fg:w="3103765"/><text x="45.9950%" y="1375.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,103,765 samples, 1.03%)</title><rect x="45.7450%" y="1349" width="1.0277%" height="15" fill="rgb(241,101,14)" fg:x="138152727" fg:w="3103765"/><text x="45.9950%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,103,765 samples, 1.03%)</title><rect x="45.7450%" y="1333" width="1.0277%" height="15" fill="rgb(238,103,29)" fg:x="138152727" fg:w="3103765"/><text x="45.9950%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,103,765 samples, 1.03%)</title><rect x="45.7450%" y="1317" width="1.0277%" height="15" fill="rgb(233,195,47)" fg:x="138152727" fg:w="3103765"/><text x="45.9950%" y="1327.50"></text></g><g><title>alloc::slice::hack::to_vec (3,103,765 samples, 1.03%)</title><rect x="45.7450%" y="1301" width="1.0277%" height="15" fill="rgb(246,218,30)" fg:x="138152727" fg:w="3103765"/><text x="45.9950%" y="1311.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,103,765 samples, 1.03%)</title><rect x="45.7450%" y="1285" width="1.0277%" height="15" fill="rgb(219,145,47)" fg:x="138152727" fg:w="3103765"/><text x="45.9950%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,103,765 samples, 1.03%)</title><rect x="45.7450%" y="1269" width="1.0277%" height="15" fill="rgb(243,12,26)" fg:x="138152727" fg:w="3103765"/><text x="45.9950%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,103,765 samples, 1.03%)</title><rect x="45.7450%" y="1253" width="1.0277%" height="15" fill="rgb(214,87,16)" fg:x="138152727" fg:w="3103765"/><text x="45.9950%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,103,765 samples, 1.03%)</title><rect x="45.7450%" y="1237" width="1.0277%" height="15" fill="rgb(208,99,42)" fg:x="138152727" fg:w="3103765"/><text x="45.9950%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,103,765 samples, 1.03%)</title><rect x="45.7450%" y="1221" width="1.0277%" height="15" fill="rgb(253,99,2)" fg:x="138152727" fg:w="3103765"/><text x="45.9950%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,103,765 samples, 1.03%)</title><rect x="45.7450%" y="1205" width="1.0277%" height="15" fill="rgb(220,168,23)" fg:x="138152727" fg:w="3103765"/><text x="45.9950%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,103,765 samples, 1.03%)</title><rect x="45.7450%" y="1189" width="1.0277%" height="15" fill="rgb(242,38,24)" fg:x="138152727" fg:w="3103765"/><text x="45.9950%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (3,103,765 samples, 1.03%)</title><rect x="45.7450%" y="1173" width="1.0277%" height="15" fill="rgb(225,182,9)" fg:x="138152727" fg:w="3103765"/><text x="45.9950%" y="1183.50"></text></g><g><title>malloc (3,103,765 samples, 1.03%)</title><rect x="45.7450%" y="1157" width="1.0277%" height="15" fill="rgb(243,178,37)" fg:x="138152727" fg:w="3103765"/><text x="45.9950%" y="1167.50"></text></g><g><title>[libc.so.6] (3,103,765 samples, 1.03%)</title><rect x="45.7450%" y="1141" width="1.0277%" height="15" fill="rgb(232,139,19)" fg:x="138152727" fg:w="3103765"/><text x="45.9950%" y="1151.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (89,776,767 samples, 29.73%)</title><rect x="18.0451%" y="1381" width="29.7268%" height="15" fill="rgb(225,201,24)" fg:x="54497413" fg:w="89776767"/><text x="18.2951%" y="1391.50">&lt;css_bitvector_compiler::HtmlNode as core::clone..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,017,688 samples, 1.00%)</title><rect x="46.7727%" y="1365" width="0.9992%" height="15" fill="rgb(221,47,46)" fg:x="141256492" fg:w="3017688"/><text x="47.0227%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,017,688 samples, 1.00%)</title><rect x="46.7727%" y="1349" width="0.9992%" height="15" fill="rgb(249,23,13)" fg:x="141256492" fg:w="3017688"/><text x="47.0227%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,017,688 samples, 1.00%)</title><rect x="46.7727%" y="1333" width="0.9992%" height="15" fill="rgb(219,9,5)" fg:x="141256492" fg:w="3017688"/><text x="47.0227%" y="1343.50"></text></g><g><title>alloc::slice::hack::to_vec (3,017,688 samples, 1.00%)</title><rect x="46.7727%" y="1317" width="0.9992%" height="15" fill="rgb(254,171,16)" fg:x="141256492" fg:w="3017688"/><text x="47.0227%" y="1327.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,017,688 samples, 1.00%)</title><rect x="46.7727%" y="1301" width="0.9992%" height="15" fill="rgb(230,171,20)" fg:x="141256492" fg:w="3017688"/><text x="47.0227%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,017,688 samples, 1.00%)</title><rect x="46.7727%" y="1285" width="0.9992%" height="15" fill="rgb(210,71,41)" fg:x="141256492" fg:w="3017688"/><text x="47.0227%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,017,688 samples, 1.00%)</title><rect x="46.7727%" y="1269" width="0.9992%" height="15" fill="rgb(206,173,20)" fg:x="141256492" fg:w="3017688"/><text x="47.0227%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,017,688 samples, 1.00%)</title><rect x="46.7727%" y="1253" width="0.9992%" height="15" fill="rgb(233,88,34)" fg:x="141256492" fg:w="3017688"/><text x="47.0227%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,017,688 samples, 1.00%)</title><rect x="46.7727%" y="1237" width="0.9992%" height="15" fill="rgb(223,209,46)" fg:x="141256492" fg:w="3017688"/><text x="47.0227%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,017,688 samples, 1.00%)</title><rect x="46.7727%" y="1221" width="0.9992%" height="15" fill="rgb(250,43,18)" fg:x="141256492" fg:w="3017688"/><text x="47.0227%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,017,688 samples, 1.00%)</title><rect x="46.7727%" y="1205" width="0.9992%" height="15" fill="rgb(208,13,10)" fg:x="141256492" fg:w="3017688"/><text x="47.0227%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (3,017,688 samples, 1.00%)</title><rect x="46.7727%" y="1189" width="0.9992%" height="15" fill="rgb(212,200,36)" fg:x="141256492" fg:w="3017688"/><text x="47.0227%" y="1199.50"></text></g><g><title>[libc.so.6] (3,017,688 samples, 1.00%)</title><rect x="46.7727%" y="1173" width="0.9992%" height="15" fill="rgb(225,90,30)" fg:x="141256492" fg:w="3017688"/><text x="47.0227%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (92,574,211 samples, 30.65%)</title><rect x="18.0451%" y="1445" width="30.6531%" height="15" fill="rgb(236,182,39)" fg:x="54497413" fg:w="92574211"/><text x="18.2951%" y="1455.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (92,574,211 samples, 30.65%)</title><rect x="18.0451%" y="1429" width="30.6531%" height="15" fill="rgb(212,144,35)" fg:x="54497413" fg:w="92574211"/><text x="18.2951%" y="1439.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (92,574,211 samples, 30.65%)</title><rect x="18.0451%" y="1413" width="30.6531%" height="15" fill="rgb(228,63,44)" fg:x="54497413" fg:w="92574211"/><text x="18.2951%" y="1423.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (92,574,211 samples, 30.65%)</title><rect x="18.0451%" y="1397" width="30.6531%" height="15" fill="rgb(228,109,6)" fg:x="54497413" fg:w="92574211"/><text x="18.2951%" y="1407.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,797,444 samples, 0.93%)</title><rect x="47.7720%" y="1381" width="0.9263%" height="15" fill="rgb(238,117,24)" fg:x="144274180" fg:w="2797444"/><text x="48.0220%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,797,444 samples, 0.93%)</title><rect x="47.7720%" y="1365" width="0.9263%" height="15" fill="rgb(242,26,26)" fg:x="144274180" fg:w="2797444"/><text x="48.0220%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,797,444 samples, 0.93%)</title><rect x="47.7720%" y="1349" width="0.9263%" height="15" fill="rgb(221,92,48)" fg:x="144274180" fg:w="2797444"/><text x="48.0220%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,797,444 samples, 0.93%)</title><rect x="47.7720%" y="1333" width="0.9263%" height="15" fill="rgb(209,209,32)" fg:x="144274180" fg:w="2797444"/><text x="48.0220%" y="1343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,797,444 samples, 0.93%)</title><rect x="47.7720%" y="1317" width="0.9263%" height="15" fill="rgb(221,70,22)" fg:x="144274180" fg:w="2797444"/><text x="48.0220%" y="1327.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,797,444 samples, 0.93%)</title><rect x="47.7720%" y="1301" width="0.9263%" height="15" fill="rgb(248,145,5)" fg:x="144274180" fg:w="2797444"/><text x="48.0220%" y="1311.50"></text></g><g><title>alloc::alloc::alloc (2,797,444 samples, 0.93%)</title><rect x="47.7720%" y="1285" width="0.9263%" height="15" fill="rgb(226,116,26)" fg:x="144274180" fg:w="2797444"/><text x="48.0220%" y="1295.50"></text></g><g><title>malloc (2,797,444 samples, 0.93%)</title><rect x="47.7720%" y="1269" width="0.9263%" height="15" fill="rgb(244,5,17)" fg:x="144274180" fg:w="2797444"/><text x="48.0220%" y="1279.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (95,444,761 samples, 31.60%)</title><rect x="18.0451%" y="1461" width="31.6036%" height="15" fill="rgb(252,159,33)" fg:x="54497413" fg:w="95444761"/><text x="18.2951%" y="1471.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::C..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,870,550 samples, 0.95%)</title><rect x="48.6982%" y="1445" width="0.9505%" height="15" fill="rgb(206,71,0)" fg:x="147071624" fg:w="2870550"/><text x="48.9482%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,870,550 samples, 0.95%)</title><rect x="48.6982%" y="1429" width="0.9505%" height="15" fill="rgb(233,118,54)" fg:x="147071624" fg:w="2870550"/><text x="48.9482%" y="1439.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,870,550 samples, 0.95%)</title><rect x="48.6982%" y="1413" width="0.9505%" height="15" fill="rgb(234,83,48)" fg:x="147071624" fg:w="2870550"/><text x="48.9482%" y="1423.50"></text></g><g><title>alloc::slice::hack::to_vec (2,870,550 samples, 0.95%)</title><rect x="48.6982%" y="1397" width="0.9505%" height="15" fill="rgb(228,3,54)" fg:x="147071624" fg:w="2870550"/><text x="48.9482%" y="1407.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,870,550 samples, 0.95%)</title><rect x="48.6982%" y="1381" width="0.9505%" height="15" fill="rgb(226,155,13)" fg:x="147071624" fg:w="2870550"/><text x="48.9482%" y="1391.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,870,550 samples, 0.95%)</title><rect x="48.6982%" y="1365" width="0.9505%" height="15" fill="rgb(241,28,37)" fg:x="147071624" fg:w="2870550"/><text x="48.9482%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,870,550 samples, 0.95%)</title><rect x="48.6982%" y="1349" width="0.9505%" height="15" fill="rgb(233,93,10)" fg:x="147071624" fg:w="2870550"/><text x="48.9482%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,870,550 samples, 0.95%)</title><rect x="48.6982%" y="1333" width="0.9505%" height="15" fill="rgb(225,113,19)" fg:x="147071624" fg:w="2870550"/><text x="48.9482%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,870,550 samples, 0.95%)</title><rect x="48.6982%" y="1317" width="0.9505%" height="15" fill="rgb(241,2,18)" fg:x="147071624" fg:w="2870550"/><text x="48.9482%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,870,550 samples, 0.95%)</title><rect x="48.6982%" y="1301" width="0.9505%" height="15" fill="rgb(228,207,21)" fg:x="147071624" fg:w="2870550"/><text x="48.9482%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,870,550 samples, 0.95%)</title><rect x="48.6982%" y="1285" width="0.9505%" height="15" fill="rgb(213,211,35)" fg:x="147071624" fg:w="2870550"/><text x="48.9482%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (2,870,550 samples, 0.95%)</title><rect x="48.6982%" y="1269" width="0.9505%" height="15" fill="rgb(209,83,10)" fg:x="147071624" fg:w="2870550"/><text x="48.9482%" y="1279.50"></text></g><g><title>malloc (2,870,550 samples, 0.95%)</title><rect x="48.6982%" y="1253" width="0.9505%" height="15" fill="rgb(209,164,1)" fg:x="147071624" fg:w="2870550"/><text x="48.9482%" y="1263.50"></text></g><g><title>[libc.so.6] (2,870,550 samples, 0.95%)</title><rect x="48.6982%" y="1237" width="0.9505%" height="15" fill="rgb(213,184,43)" fg:x="147071624" fg:w="2870550"/><text x="48.9482%" y="1247.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (98,644,048 samples, 32.66%)</title><rect x="18.0451%" y="1701" width="32.6629%" height="15" fill="rgb(231,61,34)" fg:x="54497413" fg:w="98644048"/><text x="18.2951%" y="1711.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (98,644,048 samples, 32.66%)</title><rect x="18.0451%" y="1685" width="32.6629%" height="15" fill="rgb(235,75,3)" fg:x="54497413" fg:w="98644048"/><text x="18.2951%" y="1695.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (98,644,048 samples, 32.66%)</title><rect x="18.0451%" y="1669" width="32.6629%" height="15" fill="rgb(220,106,47)" fg:x="54497413" fg:w="98644048"/><text x="18.2951%" y="1679.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (98,644,048 samples, 32.66%)</title><rect x="18.0451%" y="1653" width="32.6629%" height="15" fill="rgb(210,196,33)" fg:x="54497413" fg:w="98644048"/><text x="18.2951%" y="1663.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (98,644,048 samples, 32.66%)</title><rect x="18.0451%" y="1637" width="32.6629%" height="15" fill="rgb(229,154,42)" fg:x="54497413" fg:w="98644048"/><text x="18.2951%" y="1647.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (98,644,048 samples, 32.66%)</title><rect x="18.0451%" y="1621" width="32.6629%" height="15" fill="rgb(228,114,26)" fg:x="54497413" fg:w="98644048"/><text x="18.2951%" y="1631.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (98,644,048 samples, 32.66%)</title><rect x="18.0451%" y="1605" width="32.6629%" height="15" fill="rgb(208,144,1)" fg:x="54497413" fg:w="98644048"/><text x="18.2951%" y="1615.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (98,644,048 samples, 32.66%)</title><rect x="18.0451%" y="1589" width="32.6629%" height="15" fill="rgb(239,112,37)" fg:x="54497413" fg:w="98644048"/><text x="18.2951%" y="1599.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (98,644,048 samples, 32.66%)</title><rect x="18.0451%" y="1573" width="32.6629%" height="15" fill="rgb(210,96,50)" fg:x="54497413" fg:w="98644048"/><text x="18.2951%" y="1583.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (98,644,048 samples, 32.66%)</title><rect x="18.0451%" y="1557" width="32.6629%" height="15" fill="rgb(222,178,2)" fg:x="54497413" fg:w="98644048"/><text x="18.2951%" y="1567.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (98,644,048 samples, 32.66%)</title><rect x="18.0451%" y="1541" width="32.6629%" height="15" fill="rgb(226,74,18)" fg:x="54497413" fg:w="98644048"/><text x="18.2951%" y="1551.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (98,644,048 samples, 32.66%)</title><rect x="18.0451%" y="1525" width="32.6629%" height="15" fill="rgb(225,67,54)" fg:x="54497413" fg:w="98644048"/><text x="18.2951%" y="1535.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (98,644,048 samples, 32.66%)</title><rect x="18.0451%" y="1509" width="32.6629%" height="15" fill="rgb(251,92,32)" fg:x="54497413" fg:w="98644048"/><text x="18.2951%" y="1519.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (98,644,048 samples, 32.66%)</title><rect x="18.0451%" y="1493" width="32.6629%" height="15" fill="rgb(228,149,22)" fg:x="54497413" fg:w="98644048"/><text x="18.2951%" y="1503.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (98,644,048 samples, 32.66%)</title><rect x="18.0451%" y="1477" width="32.6629%" height="15" fill="rgb(243,54,13)" fg:x="54497413" fg:w="98644048"/><text x="18.2951%" y="1487.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,199,287 samples, 1.06%)</title><rect x="49.6487%" y="1461" width="1.0593%" height="15" fill="rgb(243,180,28)" fg:x="149942174" fg:w="3199287"/><text x="49.8987%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,199,287 samples, 1.06%)</title><rect x="49.6487%" y="1445" width="1.0593%" height="15" fill="rgb(208,167,24)" fg:x="149942174" fg:w="3199287"/><text x="49.8987%" y="1455.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,199,287 samples, 1.06%)</title><rect x="49.6487%" y="1429" width="1.0593%" height="15" fill="rgb(245,73,45)" fg:x="149942174" fg:w="3199287"/><text x="49.8987%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,199,287 samples, 1.06%)</title><rect x="49.6487%" y="1413" width="1.0593%" height="15" fill="rgb(237,203,48)" fg:x="149942174" fg:w="3199287"/><text x="49.8987%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,199,287 samples, 1.06%)</title><rect x="49.6487%" y="1397" width="1.0593%" height="15" fill="rgb(211,197,16)" fg:x="149942174" fg:w="3199287"/><text x="49.8987%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,199,287 samples, 1.06%)</title><rect x="49.6487%" y="1381" width="1.0593%" height="15" fill="rgb(243,99,51)" fg:x="149942174" fg:w="3199287"/><text x="49.8987%" y="1391.50"></text></g><g><title>alloc::alloc::alloc (3,199,287 samples, 1.06%)</title><rect x="49.6487%" y="1365" width="1.0593%" height="15" fill="rgb(215,123,29)" fg:x="149942174" fg:w="3199287"/><text x="49.8987%" y="1375.50"></text></g><g><title>malloc (3,199,287 samples, 1.06%)</title><rect x="49.6487%" y="1349" width="1.0593%" height="15" fill="rgb(239,186,37)" fg:x="149942174" fg:w="3199287"/><text x="49.8987%" y="1359.50"></text></g><g><title>[libc.so.6] (3,199,287 samples, 1.06%)</title><rect x="49.6487%" y="1333" width="1.0593%" height="15" fill="rgb(252,136,39)" fg:x="149942174" fg:w="3199287"/><text x="49.8987%" y="1343.50"></text></g><g><title>[libc.so.6] (3,199,287 samples, 1.06%)</title><rect x="49.6487%" y="1317" width="1.0593%" height="15" fill="rgb(223,213,32)" fg:x="149942174" fg:w="3199287"/><text x="49.8987%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (3,003,880 samples, 0.99%)</title><rect x="50.7081%" y="1685" width="0.9946%" height="15" fill="rgb(233,115,5)" fg:x="153141461" fg:w="3003880"/><text x="50.9581%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3,003,880 samples, 0.99%)</title><rect x="50.7081%" y="1669" width="0.9946%" height="15" fill="rgb(207,226,44)" fg:x="153141461" fg:w="3003880"/><text x="50.9581%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (3,003,880 samples, 0.99%)</title><rect x="50.7081%" y="1653" width="0.9946%" height="15" fill="rgb(208,126,0)" fg:x="153141461" fg:w="3003880"/><text x="50.9581%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,003,880 samples, 0.99%)</title><rect x="50.7081%" y="1637" width="0.9946%" height="15" fill="rgb(244,66,21)" fg:x="153141461" fg:w="3003880"/><text x="50.9581%" y="1647.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,003,880 samples, 0.99%)</title><rect x="50.7081%" y="1621" width="0.9946%" height="15" fill="rgb(222,97,12)" fg:x="153141461" fg:w="3003880"/><text x="50.9581%" y="1631.50"></text></g><g><title>malloc (3,003,880 samples, 0.99%)</title><rect x="50.7081%" y="1605" width="0.9946%" height="15" fill="rgb(219,213,19)" fg:x="153141461" fg:w="3003880"/><text x="50.9581%" y="1615.50"></text></g><g><title>[libc.so.6] (3,003,880 samples, 0.99%)</title><rect x="50.7081%" y="1589" width="0.9946%" height="15" fill="rgb(252,169,30)" fg:x="153141461" fg:w="3003880"/><text x="50.9581%" y="1599.50"></text></g><g><title>[libc.so.6] (3,003,880 samples, 0.99%)</title><rect x="50.7081%" y="1573" width="0.9946%" height="15" fill="rgb(206,32,51)" fg:x="153141461" fg:w="3003880"/><text x="50.9581%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,010,304 samples, 1.00%)</title><rect x="51.7027%" y="1669" width="0.9968%" height="15" fill="rgb(250,172,42)" fg:x="156145341" fg:w="3010304"/><text x="51.9527%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3,010,304 samples, 1.00%)</title><rect x="51.7027%" y="1653" width="0.9968%" height="15" fill="rgb(209,34,43)" fg:x="156145341" fg:w="3010304"/><text x="51.9527%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (3,010,304 samples, 1.00%)</title><rect x="51.7027%" y="1637" width="0.9968%" height="15" fill="rgb(223,11,35)" fg:x="156145341" fg:w="3010304"/><text x="51.9527%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,010,304 samples, 1.00%)</title><rect x="51.7027%" y="1621" width="0.9968%" height="15" fill="rgb(251,219,26)" fg:x="156145341" fg:w="3010304"/><text x="51.9527%" y="1631.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,010,304 samples, 1.00%)</title><rect x="51.7027%" y="1605" width="0.9968%" height="15" fill="rgb(231,119,3)" fg:x="156145341" fg:w="3010304"/><text x="51.9527%" y="1615.50"></text></g><g><title>malloc (3,010,304 samples, 1.00%)</title><rect x="51.7027%" y="1589" width="0.9968%" height="15" fill="rgb(216,97,11)" fg:x="156145341" fg:w="3010304"/><text x="51.9527%" y="1599.50"></text></g><g><title>[libc.so.6] (3,010,304 samples, 1.00%)</title><rect x="51.7027%" y="1573" width="0.9968%" height="15" fill="rgb(223,59,9)" fg:x="156145341" fg:w="3010304"/><text x="51.9527%" y="1583.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (2,599,878 samples, 0.86%)</title><rect x="52.6995%" y="1637" width="0.8609%" height="15" fill="rgb(233,93,31)" fg:x="159155645" fg:w="2599878"/><text x="52.9495%" y="1647.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (2,599,878 samples, 0.86%)</title><rect x="52.6995%" y="1621" width="0.8609%" height="15" fill="rgb(239,81,33)" fg:x="159155645" fg:w="2599878"/><text x="52.9495%" y="1631.50"></text></g><g><title>core::fmt::num::imp::&lt;impl u64&gt;::_fmt (2,599,878 samples, 0.86%)</title><rect x="52.6995%" y="1605" width="0.8609%" height="15" fill="rgb(213,120,34)" fg:x="159155645" fg:w="2599878"/><text x="52.9495%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,530,618 samples, 0.84%)</title><rect x="53.5604%" y="1637" width="0.8379%" height="15" fill="rgb(243,49,53)" fg:x="161755523" fg:w="2530618"/><text x="53.8104%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,530,618 samples, 0.84%)</title><rect x="53.5604%" y="1621" width="0.8379%" height="15" fill="rgb(247,216,33)" fg:x="161755523" fg:w="2530618"/><text x="53.8104%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,530,618 samples, 0.84%)</title><rect x="53.5604%" y="1605" width="0.8379%" height="15" fill="rgb(226,26,14)" fg:x="161755523" fg:w="2530618"/><text x="53.8104%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,530,618 samples, 0.84%)</title><rect x="53.5604%" y="1589" width="0.8379%" height="15" fill="rgb(215,49,53)" fg:x="161755523" fg:w="2530618"/><text x="53.8104%" y="1599.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,530,618 samples, 0.84%)</title><rect x="53.5604%" y="1573" width="0.8379%" height="15" fill="rgb(245,162,40)" fg:x="161755523" fg:w="2530618"/><text x="53.8104%" y="1583.50"></text></g><g><title>malloc (2,530,618 samples, 0.84%)</title><rect x="53.5604%" y="1557" width="0.8379%" height="15" fill="rgb(229,68,17)" fg:x="161755523" fg:w="2530618"/><text x="53.8104%" y="1567.50"></text></g><g><title>[libc.so.6] (2,530,618 samples, 0.84%)</title><rect x="53.5604%" y="1541" width="0.8379%" height="15" fill="rgb(213,182,10)" fg:x="161755523" fg:w="2530618"/><text x="53.8104%" y="1551.50"></text></g><g><title>benchmark::json_to_html_node (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1621" width="0.9240%" height="15" fill="rgb(245,125,30)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1631.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1605" width="0.9240%" height="15" fill="rgb(232,202,2)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1615.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1589" width="0.9240%" height="15" fill="rgb(237,140,51)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1599.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1573" width="0.9240%" height="15" fill="rgb(236,157,25)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1583.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1557" width="0.9240%" height="15" fill="rgb(219,209,0)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1567.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1541" width="0.9240%" height="15" fill="rgb(240,116,54)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1551.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1525" width="0.9240%" height="15" fill="rgb(216,10,36)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1535.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1509" width="0.9240%" height="15" fill="rgb(222,72,44)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1519.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1493" width="0.9240%" height="15" fill="rgb(232,159,9)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1503.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1477" width="0.9240%" height="15" fill="rgb(210,39,32)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1487.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1461" width="0.9240%" height="15" fill="rgb(216,194,45)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1471.50"></text></g><g><title>benchmark::json_to_html_node::_{{closure}} (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1445" width="0.9240%" height="15" fill="rgb(218,18,35)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1455.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1429" width="0.9240%" height="15" fill="rgb(207,83,51)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1439.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1413" width="0.9240%" height="15" fill="rgb(225,63,43)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1423.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1397" width="0.9240%" height="15" fill="rgb(207,57,36)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1407.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1381" width="0.9240%" height="15" fill="rgb(216,99,33)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1391.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1365" width="0.9240%" height="15" fill="rgb(225,42,16)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1375.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1349" width="0.9240%" height="15" fill="rgb(220,201,45)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1333" width="0.9240%" height="15" fill="rgb(225,33,4)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1343.50"></text></g><g><title>alloc::slice::hack::to_vec (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1317" width="0.9240%" height="15" fill="rgb(224,33,50)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1327.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1301" width="0.9240%" height="15" fill="rgb(246,198,51)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1285" width="0.9240%" height="15" fill="rgb(205,22,4)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1269" width="0.9240%" height="15" fill="rgb(206,3,8)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1253" width="0.9240%" height="15" fill="rgb(251,23,15)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1237" width="0.9240%" height="15" fill="rgb(252,88,28)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1221" width="0.9240%" height="15" fill="rgb(212,127,14)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1205" width="0.9240%" height="15" fill="rgb(247,145,37)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1189" width="0.9240%" height="15" fill="rgb(209,117,53)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1199.50"></text></g><g><title>malloc (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1173" width="0.9240%" height="15" fill="rgb(212,90,42)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1183.50"></text></g><g><title>[libc.so.6] (2,790,676 samples, 0.92%)</title><rect x="54.3983%" y="1157" width="0.9240%" height="15" fill="rgb(218,164,37)" fg:x="164286141" fg:w="2790676"/><text x="54.6483%" y="1167.50"></text></g><g><title>benchmark::json_to_html_node (10,456,677 samples, 3.46%)</title><rect x="52.6995%" y="1669" width="3.4624%" height="15" fill="rgb(246,65,34)" fg:x="159155645" fg:w="10456677"/><text x="52.9495%" y="1679.50">ben..</text></g><g><title>benchmark::json_to_html_node (10,456,677 samples, 3.46%)</title><rect x="52.6995%" y="1653" width="3.4624%" height="15" fill="rgb(231,100,33)" fg:x="159155645" fg:w="10456677"/><text x="52.9495%" y="1663.50">ben..</text></g><g><title>benchmark::json_to_html_node (5,326,181 samples, 1.76%)</title><rect x="54.3983%" y="1637" width="1.7636%" height="15" fill="rgb(228,126,14)" fg:x="164286141" fg:w="5326181"/><text x="54.6483%" y="1647.50"></text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (2,535,505 samples, 0.84%)</title><rect x="55.3224%" y="1621" width="0.8396%" height="15" fill="rgb(215,173,21)" fg:x="167076817" fg:w="2535505"/><text x="55.5724%" y="1631.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (2,535,505 samples, 0.84%)</title><rect x="55.3224%" y="1605" width="0.8396%" height="15" fill="rgb(210,6,40)" fg:x="167076817" fg:w="2535505"/><text x="55.5724%" y="1615.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (2,535,505 samples, 0.84%)</title><rect x="55.3224%" y="1589" width="0.8396%" height="15" fill="rgb(212,48,18)" fg:x="167076817" fg:w="2535505"/><text x="55.5724%" y="1599.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (2,535,505 samples, 0.84%)</title><rect x="55.3224%" y="1573" width="0.8396%" height="15" fill="rgb(230,214,11)" fg:x="167076817" fg:w="2535505"/><text x="55.5724%" y="1583.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (2,535,505 samples, 0.84%)</title><rect x="55.3224%" y="1557" width="0.8396%" height="15" fill="rgb(254,105,39)" fg:x="167076817" fg:w="2535505"/><text x="55.5724%" y="1567.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2,535,505 samples, 0.84%)</title><rect x="55.3224%" y="1541" width="0.8396%" height="15" fill="rgb(245,158,5)" fg:x="167076817" fg:w="2535505"/><text x="55.5724%" y="1551.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2,535,505 samples, 0.84%)</title><rect x="55.3224%" y="1525" width="0.8396%" height="15" fill="rgb(249,208,11)" fg:x="167076817" fg:w="2535505"/><text x="55.5724%" y="1535.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2,535,505 samples, 0.84%)</title><rect x="55.3224%" y="1509" width="0.8396%" height="15" fill="rgb(210,39,28)" fg:x="167076817" fg:w="2535505"/><text x="55.5724%" y="1519.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (2,535,505 samples, 0.84%)</title><rect x="55.3224%" y="1493" width="0.8396%" height="15" fill="rgb(211,56,53)" fg:x="167076817" fg:w="2535505"/><text x="55.5724%" y="1503.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (2,535,505 samples, 0.84%)</title><rect x="55.3224%" y="1477" width="0.8396%" height="15" fill="rgb(226,201,30)" fg:x="167076817" fg:w="2535505"/><text x="55.5724%" y="1487.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (2,535,505 samples, 0.84%)</title><rect x="55.3224%" y="1461" width="0.8396%" height="15" fill="rgb(239,101,34)" fg:x="167076817" fg:w="2535505"/><text x="55.5724%" y="1471.50"></text></g><g><title>[libc.so.6] (2,535,505 samples, 0.84%)</title><rect x="55.3224%" y="1445" width="0.8396%" height="15" fill="rgb(226,209,5)" fg:x="167076817" fg:w="2535505"/><text x="55.5724%" y="1455.50"></text></g><g><title>benchmark::apply_frame_modifications (19,848,438 samples, 6.57%)</title><rect x="50.7081%" y="1701" width="6.5722%" height="15" fill="rgb(250,105,47)" fg:x="153141461" fg:w="19848438"/><text x="50.9581%" y="1711.50">benchmark..</text></g><g><title>benchmark::json_to_html_node (16,844,558 samples, 5.58%)</title><rect x="51.7027%" y="1685" width="5.5776%" height="15" fill="rgb(230,72,3)" fg:x="156145341" fg:w="16844558"/><text x="51.9527%" y="1695.50">benchma..</text></g><g><title>serde_json::value::Value::get (3,377,577 samples, 1.12%)</title><rect x="56.1619%" y="1669" width="1.1184%" height="15" fill="rgb(232,218,39)" fg:x="169612322" fg:w="3377577"/><text x="56.4119%" y="1679.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (3,377,577 samples, 1.12%)</title><rect x="56.1619%" y="1653" width="1.1184%" height="15" fill="rgb(248,166,6)" fg:x="169612322" fg:w="3377577"/><text x="56.4119%" y="1663.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (3,377,577 samples, 1.12%)</title><rect x="56.1619%" y="1637" width="1.1184%" height="15" fill="rgb(247,89,20)" fg:x="169612322" fg:w="3377577"/><text x="56.4119%" y="1647.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (3,377,577 samples, 1.12%)</title><rect x="56.1619%" y="1621" width="1.1184%" height="15" fill="rgb(248,130,54)" fg:x="169612322" fg:w="3377577"/><text x="56.4119%" y="1631.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (3,377,577 samples, 1.12%)</title><rect x="56.1619%" y="1605" width="1.1184%" height="15" fill="rgb(234,196,4)" fg:x="169612322" fg:w="3377577"/><text x="56.4119%" y="1615.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (3,377,577 samples, 1.12%)</title><rect x="56.1619%" y="1589" width="1.1184%" height="15" fill="rgb(250,143,31)" fg:x="169612322" fg:w="3377577"/><text x="56.4119%" y="1599.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (3,377,577 samples, 1.12%)</title><rect x="56.1619%" y="1573" width="1.1184%" height="15" fill="rgb(211,110,34)" fg:x="169612322" fg:w="3377577"/><text x="56.4119%" y="1583.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (3,377,577 samples, 1.12%)</title><rect x="56.1619%" y="1557" width="1.1184%" height="15" fill="rgb(215,124,48)" fg:x="169612322" fg:w="3377577"/><text x="56.4119%" y="1567.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (3,377,577 samples, 1.12%)</title><rect x="56.1619%" y="1541" width="1.1184%" height="15" fill="rgb(216,46,13)" fg:x="169612322" fg:w="3377577"/><text x="56.4119%" y="1551.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (3,377,577 samples, 1.12%)</title><rect x="56.1619%" y="1525" width="1.1184%" height="15" fill="rgb(205,184,25)" fg:x="169612322" fg:w="3377577"/><text x="56.4119%" y="1535.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (3,377,577 samples, 1.12%)</title><rect x="56.1619%" y="1509" width="1.1184%" height="15" fill="rgb(228,1,10)" fg:x="169612322" fg:w="3377577"/><text x="56.4119%" y="1519.50"></text></g><g><title>[libc.so.6] (3,377,577 samples, 1.12%)</title><rect x="56.1619%" y="1493" width="1.1184%" height="15" fill="rgb(213,116,27)" fg:x="169612322" fg:w="3377577"/><text x="56.4119%" y="1503.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,110,717 samples, 1.03%)</title><rect x="57.2803%" y="1669" width="1.0300%" height="15" fill="rgb(241,95,50)" fg:x="172989899" fg:w="3110717"/><text x="57.5303%" y="1679.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (3,110,717 samples, 1.03%)</title><rect x="57.2803%" y="1653" width="1.0300%" height="15" fill="rgb(238,48,32)" fg:x="172989899" fg:w="3110717"/><text x="57.5303%" y="1663.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (3,110,717 samples, 1.03%)</title><rect x="57.2803%" y="1637" width="1.0300%" height="15" fill="rgb(235,113,49)" fg:x="172989899" fg:w="3110717"/><text x="57.5303%" y="1647.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (3,110,717 samples, 1.03%)</title><rect x="57.2803%" y="1621" width="1.0300%" height="15" fill="rgb(205,127,43)" fg:x="172989899" fg:w="3110717"/><text x="57.5303%" y="1631.50"></text></g><g><title>benchmark::clear_dirty_flags (6,178,610 samples, 2.05%)</title><rect x="57.2803%" y="1701" width="2.0459%" height="15" fill="rgb(250,162,2)" fg:x="172989899" fg:w="6178610"/><text x="57.5303%" y="1711.50">b..</text></g><g><title>benchmark::clear_dirty_flags (6,178,610 samples, 2.05%)</title><rect x="57.2803%" y="1685" width="2.0459%" height="15" fill="rgb(220,13,41)" fg:x="172989899" fg:w="6178610"/><text x="57.5303%" y="1695.50">b..</text></g><g><title>benchmark::clear_dirty_flags (3,067,893 samples, 1.02%)</title><rect x="58.3103%" y="1669" width="1.0158%" height="15" fill="rgb(249,221,25)" fg:x="176100616" fg:w="3067893"/><text x="58.5603%" y="1679.50"></text></g><g><title>benchmark::clear_dirty_flags (3,067,893 samples, 1.02%)</title><rect x="58.3103%" y="1653" width="1.0158%" height="15" fill="rgb(215,208,19)" fg:x="176100616" fg:w="3067893"/><text x="58.5603%" y="1663.50"></text></g><g><title>benchmark::clear_dirty_flags (3,067,893 samples, 1.02%)</title><rect x="58.3103%" y="1637" width="1.0158%" height="15" fill="rgb(236,175,2)" fg:x="176100616" fg:w="3067893"/><text x="58.5603%" y="1647.50"></text></g><g><title>benchmark::invoke_bitvector_layout (2,947,324 samples, 0.98%)</title><rect x="59.3261%" y="1701" width="0.9759%" height="15" fill="rgb(241,52,2)" fg:x="179168509" fg:w="2947324"/><text x="59.5761%" y="1711.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_bitvector_incremental_with_stats (2,947,324 samples, 0.98%)</title><rect x="59.3261%" y="1685" width="0.9759%" height="15" fill="rgb(248,140,14)" fg:x="179168509" fg:w="2947324"/><text x="59.5761%" y="1695.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_recursive_bitvector_incremental (2,947,324 samples, 0.98%)</title><rect x="59.3261%" y="1669" width="0.9759%" height="15" fill="rgb(253,22,42)" fg:x="179168509" fg:w="2947324"/><text x="59.5761%" y="1679.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_recursive_bitvector_incremental (2,947,324 samples, 0.98%)</title><rect x="59.3261%" y="1653" width="0.9759%" height="15" fill="rgb(234,61,47)" fg:x="179168509" fg:w="2947324"/><text x="59.5761%" y="1663.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_node_generated_bitvector_incremental (2,947,324 samples, 0.98%)</title><rect x="59.3261%" y="1637" width="0.9759%" height="15" fill="rgb(208,226,15)" fg:x="179168509" fg:w="2947324"/><text x="59.5761%" y="1647.50"></text></g><g><title>css_bitvector_compiler::BitVector::with_capacity (2,947,324 samples, 0.98%)</title><rect x="59.3261%" y="1621" width="0.9759%" height="15" fill="rgb(217,221,4)" fg:x="179168509" fg:w="2947324"/><text x="59.5761%" y="1631.50"></text></g><g><title>alloc::vec::from_elem (2,947,324 samples, 0.98%)</title><rect x="59.3261%" y="1605" width="0.9759%" height="15" fill="rgb(212,174,34)" fg:x="179168509" fg:w="2947324"/><text x="59.5761%" y="1615.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2,947,324 samples, 0.98%)</title><rect x="59.3261%" y="1589" width="0.9759%" height="15" fill="rgb(253,83,4)" fg:x="179168509" fg:w="2947324"/><text x="59.5761%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (2,947,324 samples, 0.98%)</title><rect x="59.3261%" y="1573" width="0.9759%" height="15" fill="rgb(250,195,49)" fg:x="179168509" fg:w="2947324"/><text x="59.5761%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (2,947,324 samples, 0.98%)</title><rect x="59.3261%" y="1557" width="0.9759%" height="15" fill="rgb(241,192,25)" fg:x="179168509" fg:w="2947324"/><text x="59.5761%" y="1567.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,947,324 samples, 0.98%)</title><rect x="59.3261%" y="1541" width="0.9759%" height="15" fill="rgb(208,124,10)" fg:x="179168509" fg:w="2947324"/><text x="59.5761%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (2,947,324 samples, 0.98%)</title><rect x="59.3261%" y="1525" width="0.9759%" height="15" fill="rgb(222,33,0)" fg:x="179168509" fg:w="2947324"/><text x="59.5761%" y="1535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,947,324 samples, 0.98%)</title><rect x="59.3261%" y="1509" width="0.9759%" height="15" fill="rgb(234,209,28)" fg:x="179168509" fg:w="2947324"/><text x="59.5761%" y="1519.50"></text></g><g><title>alloc::alloc::alloc_zeroed (2,947,324 samples, 0.98%)</title><rect x="59.3261%" y="1493" width="0.9759%" height="15" fill="rgb(224,11,23)" fg:x="179168509" fg:w="2947324"/><text x="59.5761%" y="1503.50"></text></g><g><title>__libc_calloc (2,947,324 samples, 0.98%)</title><rect x="59.3261%" y="1477" width="0.9759%" height="15" fill="rgb(232,99,1)" fg:x="179168509" fg:w="2947324"/><text x="59.5761%" y="1487.50"></text></g><g><title>[libc.so.6] (2,947,324 samples, 0.98%)</title><rect x="59.3261%" y="1461" width="0.9759%" height="15" fill="rgb(237,95,45)" fg:x="179168509" fg:w="2947324"/><text x="59.5761%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,951,716 samples, 0.98%)</title><rect x="60.3021%" y="1301" width="0.9774%" height="15" fill="rgb(208,109,11)" fg:x="182115833" fg:w="2951716"/><text x="60.5521%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,951,716 samples, 0.98%)</title><rect x="60.3021%" y="1285" width="0.9774%" height="15" fill="rgb(216,190,48)" fg:x="182115833" fg:w="2951716"/><text x="60.5521%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,951,716 samples, 0.98%)</title><rect x="60.3021%" y="1269" width="0.9774%" height="15" fill="rgb(251,171,36)" fg:x="182115833" fg:w="2951716"/><text x="60.5521%" y="1279.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,951,716 samples, 0.98%)</title><rect x="60.3021%" y="1253" width="0.9774%" height="15" fill="rgb(230,62,22)" fg:x="182115833" fg:w="2951716"/><text x="60.5521%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,951,716 samples, 0.98%)</title><rect x="60.3021%" y="1237" width="0.9774%" height="15" fill="rgb(225,114,35)" fg:x="182115833" fg:w="2951716"/><text x="60.5521%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,951,716 samples, 0.98%)</title><rect x="60.3021%" y="1221" width="0.9774%" height="15" fill="rgb(215,118,42)" fg:x="182115833" fg:w="2951716"/><text x="60.5521%" y="1231.50"></text></g><g><title>alloc::alloc::dealloc (2,951,716 samples, 0.98%)</title><rect x="60.3021%" y="1205" width="0.9774%" height="15" fill="rgb(243,119,21)" fg:x="182115833" fg:w="2951716"/><text x="60.5521%" y="1215.50"></text></g><g><title>__rust_dealloc (2,951,716 samples, 0.98%)</title><rect x="60.3021%" y="1189" width="0.9774%" height="15" fill="rgb(252,177,53)" fg:x="182115833" fg:w="2951716"/><text x="60.5521%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6,160,293 samples, 2.04%)</title><rect x="61.2794%" y="1237" width="2.0398%" height="15" fill="rgb(237,209,29)" fg:x="185067549" fg:w="6160293"/><text x="61.5294%" y="1247.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6,160,293 samples, 2.04%)</title><rect x="61.2794%" y="1221" width="2.0398%" height="15" fill="rgb(212,65,23)" fg:x="185067549" fg:w="6160293"/><text x="61.5294%" y="1231.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6,160,293 samples, 2.04%)</title><rect x="61.2794%" y="1205" width="2.0398%" height="15" fill="rgb(230,222,46)" fg:x="185067549" fg:w="6160293"/><text x="61.5294%" y="1215.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,160,293 samples, 2.04%)</title><rect x="61.2794%" y="1189" width="2.0398%" height="15" fill="rgb(215,135,32)" fg:x="185067549" fg:w="6160293"/><text x="61.5294%" y="1199.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,160,293 samples, 2.04%)</title><rect x="61.2794%" y="1173" width="2.0398%" height="15" fill="rgb(246,101,22)" fg:x="185067549" fg:w="6160293"/><text x="61.5294%" y="1183.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,160,293 samples, 2.04%)</title><rect x="61.2794%" y="1157" width="2.0398%" height="15" fill="rgb(206,107,13)" fg:x="185067549" fg:w="6160293"/><text x="61.5294%" y="1167.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (6,160,293 samples, 2.04%)</title><rect x="61.2794%" y="1141" width="2.0398%" height="15" fill="rgb(250,100,44)" fg:x="185067549" fg:w="6160293"/><text x="61.5294%" y="1151.50">a..</text></g><g><title>cfree (6,160,293 samples, 2.04%)</title><rect x="61.2794%" y="1125" width="2.0398%" height="15" fill="rgb(231,147,38)" fg:x="185067549" fg:w="6160293"/><text x="61.5294%" y="1135.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="645" width="0.9554%" height="15" fill="rgb(229,8,40)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="629" width="0.9554%" height="15" fill="rgb(221,135,30)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="613" width="0.9554%" height="15" fill="rgb(249,193,18)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="597" width="0.9554%" height="15" fill="rgb(209,133,39)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="581" width="0.9554%" height="15" fill="rgb(232,100,14)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="565" width="0.9554%" height="15" fill="rgb(224,185,1)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="549" width="0.9554%" height="15" fill="rgb(223,139,8)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="533" width="0.9554%" height="15" fill="rgb(232,213,38)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="517" width="0.9554%" height="15" fill="rgb(207,94,22)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="501" width="0.9554%" height="15" fill="rgb(219,183,54)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="485" width="0.9554%" height="15" fill="rgb(216,185,54)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="469" width="0.9554%" height="15" fill="rgb(254,217,39)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="453" width="0.9554%" height="15" fill="rgb(240,178,23)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="437" width="0.9554%" height="15" fill="rgb(218,11,47)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="421" width="0.9554%" height="15" fill="rgb(218,51,51)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="405" width="0.9554%" height="15" fill="rgb(238,126,27)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="389" width="0.9554%" height="15" fill="rgb(249,202,22)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="373" width="0.9554%" height="15" fill="rgb(254,195,49)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="357" width="0.9554%" height="15" fill="rgb(208,123,14)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="341" width="0.9554%" height="15" fill="rgb(224,200,8)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="351.50"></text></g><g><title>cfree (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="325" width="0.9554%" height="15" fill="rgb(217,61,36)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="335.50"></text></g><g><title>[libc.so.6] (2,885,403 samples, 0.96%)</title><rect x="63.3192%" y="309" width="0.9554%" height="15" fill="rgb(206,35,45)" fg:x="191227842" fg:w="2885403"/><text x="63.5692%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,833,215 samples, 1.93%)</title><rect x="63.3192%" y="853" width="1.9315%" height="15" fill="rgb(217,65,33)" fg:x="191227842" fg:w="5833215"/><text x="63.5692%" y="863.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,833,215 samples, 1.93%)</title><rect x="63.3192%" y="837" width="1.9315%" height="15" fill="rgb(222,158,48)" fg:x="191227842" fg:w="5833215"/><text x="63.5692%" y="847.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,833,215 samples, 1.93%)</title><rect x="63.3192%" y="821" width="1.9315%" height="15" fill="rgb(254,2,54)" fg:x="191227842" fg:w="5833215"/><text x="63.5692%" y="831.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,833,215 samples, 1.93%)</title><rect x="63.3192%" y="805" width="1.9315%" height="15" fill="rgb(250,143,38)" fg:x="191227842" fg:w="5833215"/><text x="63.5692%" y="815.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,833,215 samples, 1.93%)</title><rect x="63.3192%" y="789" width="1.9315%" height="15" fill="rgb(248,25,0)" fg:x="191227842" fg:w="5833215"/><text x="63.5692%" y="799.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,833,215 samples, 1.93%)</title><rect x="63.3192%" y="773" width="1.9315%" height="15" fill="rgb(206,152,27)" fg:x="191227842" fg:w="5833215"/><text x="63.5692%" y="783.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,833,215 samples, 1.93%)</title><rect x="63.3192%" y="757" width="1.9315%" height="15" fill="rgb(240,77,30)" fg:x="191227842" fg:w="5833215"/><text x="63.5692%" y="767.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,833,215 samples, 1.93%)</title><rect x="63.3192%" y="741" width="1.9315%" height="15" fill="rgb(231,5,3)" fg:x="191227842" fg:w="5833215"/><text x="63.5692%" y="751.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,833,215 samples, 1.93%)</title><rect x="63.3192%" y="725" width="1.9315%" height="15" fill="rgb(207,226,32)" fg:x="191227842" fg:w="5833215"/><text x="63.5692%" y="735.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,833,215 samples, 1.93%)</title><rect x="63.3192%" y="709" width="1.9315%" height="15" fill="rgb(222,207,47)" fg:x="191227842" fg:w="5833215"/><text x="63.5692%" y="719.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (5,833,215 samples, 1.93%)</title><rect x="63.3192%" y="693" width="1.9315%" height="15" fill="rgb(229,115,45)" fg:x="191227842" fg:w="5833215"/><text x="63.5692%" y="703.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (5,833,215 samples, 1.93%)</title><rect x="63.3192%" y="677" width="1.9315%" height="15" fill="rgb(224,191,6)" fg:x="191227842" fg:w="5833215"/><text x="63.5692%" y="687.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (5,833,215 samples, 1.93%)</title><rect x="63.3192%" y="661" width="1.9315%" height="15" fill="rgb(230,227,24)" fg:x="191227842" fg:w="5833215"/><text x="63.5692%" y="671.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,947,812 samples, 0.98%)</title><rect x="64.2746%" y="645" width="0.9761%" height="15" fill="rgb(228,80,19)" fg:x="194113245" fg:w="2947812"/><text x="64.5246%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,947,812 samples, 0.98%)</title><rect x="64.2746%" y="629" width="0.9761%" height="15" fill="rgb(247,229,0)" fg:x="194113245" fg:w="2947812"/><text x="64.5246%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,947,812 samples, 0.98%)</title><rect x="64.2746%" y="613" width="0.9761%" height="15" fill="rgb(237,194,15)" fg:x="194113245" fg:w="2947812"/><text x="64.5246%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,947,812 samples, 0.98%)</title><rect x="64.2746%" y="597" width="0.9761%" height="15" fill="rgb(219,203,20)" fg:x="194113245" fg:w="2947812"/><text x="64.5246%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (2,947,812 samples, 0.98%)</title><rect x="64.2746%" y="581" width="0.9761%" height="15" fill="rgb(234,128,8)" fg:x="194113245" fg:w="2947812"/><text x="64.5246%" y="591.50"></text></g><g><title>cfree (2,947,812 samples, 0.98%)</title><rect x="64.2746%" y="565" width="0.9761%" height="15" fill="rgb(248,202,8)" fg:x="194113245" fg:w="2947812"/><text x="64.5246%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (8,897,075 samples, 2.95%)</title><rect x="63.3192%" y="981" width="2.9460%" height="15" fill="rgb(206,104,37)" fg:x="191227842" fg:w="8897075"/><text x="63.5692%" y="991.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,897,075 samples, 2.95%)</title><rect x="63.3192%" y="965" width="2.9460%" height="15" fill="rgb(223,8,27)" fg:x="191227842" fg:w="8897075"/><text x="63.5692%" y="975.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (8,897,075 samples, 2.95%)</title><rect x="63.3192%" y="949" width="2.9460%" height="15" fill="rgb(216,217,28)" fg:x="191227842" fg:w="8897075"/><text x="63.5692%" y="959.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (8,897,075 samples, 2.95%)</title><rect x="63.3192%" y="933" width="2.9460%" height="15" fill="rgb(249,199,1)" fg:x="191227842" fg:w="8897075"/><text x="63.5692%" y="943.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (8,897,075 samples, 2.95%)</title><rect x="63.3192%" y="917" width="2.9460%" height="15" fill="rgb(240,85,17)" fg:x="191227842" fg:w="8897075"/><text x="63.5692%" y="927.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,897,075 samples, 2.95%)</title><rect x="63.3192%" y="901" width="2.9460%" height="15" fill="rgb(206,108,45)" fg:x="191227842" fg:w="8897075"/><text x="63.5692%" y="911.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (8,897,075 samples, 2.95%)</title><rect x="63.3192%" y="885" width="2.9460%" height="15" fill="rgb(245,210,41)" fg:x="191227842" fg:w="8897075"/><text x="63.5692%" y="895.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (8,897,075 samples, 2.95%)</title><rect x="63.3192%" y="869" width="2.9460%" height="15" fill="rgb(206,13,37)" fg:x="191227842" fg:w="8897075"/><text x="63.5692%" y="879.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,063,860 samples, 1.01%)</title><rect x="65.2507%" y="853" width="1.0145%" height="15" fill="rgb(250,61,18)" fg:x="197061057" fg:w="3063860"/><text x="65.5007%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,063,860 samples, 1.01%)</title><rect x="65.2507%" y="837" width="1.0145%" height="15" fill="rgb(235,172,48)" fg:x="197061057" fg:w="3063860"/><text x="65.5007%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,063,860 samples, 1.01%)</title><rect x="65.2507%" y="821" width="1.0145%" height="15" fill="rgb(249,201,17)" fg:x="197061057" fg:w="3063860"/><text x="65.5007%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,063,860 samples, 1.01%)</title><rect x="65.2507%" y="805" width="1.0145%" height="15" fill="rgb(219,208,6)" fg:x="197061057" fg:w="3063860"/><text x="65.5007%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,063,860 samples, 1.01%)</title><rect x="65.2507%" y="789" width="1.0145%" height="15" fill="rgb(248,31,23)" fg:x="197061057" fg:w="3063860"/><text x="65.5007%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,063,860 samples, 1.01%)</title><rect x="65.2507%" y="773" width="1.0145%" height="15" fill="rgb(245,15,42)" fg:x="197061057" fg:w="3063860"/><text x="65.5007%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3,063,860 samples, 1.01%)</title><rect x="65.2507%" y="757" width="1.0145%" height="15" fill="rgb(222,217,39)" fg:x="197061057" fg:w="3063860"/><text x="65.5007%" y="767.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3,063,860 samples, 1.01%)</title><rect x="65.2507%" y="741" width="1.0145%" height="15" fill="rgb(210,219,27)" fg:x="197061057" fg:w="3063860"/><text x="65.5007%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3,063,860 samples, 1.01%)</title><rect x="65.2507%" y="725" width="1.0145%" height="15" fill="rgb(252,166,36)" fg:x="197061057" fg:w="3063860"/><text x="65.5007%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (3,063,860 samples, 1.01%)</title><rect x="65.2507%" y="709" width="1.0145%" height="15" fill="rgb(245,132,34)" fg:x="197061057" fg:w="3063860"/><text x="65.5007%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,063,860 samples, 1.01%)</title><rect x="65.2507%" y="693" width="1.0145%" height="15" fill="rgb(236,54,3)" fg:x="197061057" fg:w="3063860"/><text x="65.5007%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,063,860 samples, 1.01%)</title><rect x="65.2507%" y="677" width="1.0145%" height="15" fill="rgb(241,173,43)" fg:x="197061057" fg:w="3063860"/><text x="65.5007%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,063,860 samples, 1.01%)</title><rect x="65.2507%" y="661" width="1.0145%" height="15" fill="rgb(215,190,9)" fg:x="197061057" fg:w="3063860"/><text x="65.5007%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,063,860 samples, 1.01%)</title><rect x="65.2507%" y="645" width="1.0145%" height="15" fill="rgb(242,101,16)" fg:x="197061057" fg:w="3063860"/><text x="65.5007%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,063,860 samples, 1.01%)</title><rect x="65.2507%" y="629" width="1.0145%" height="15" fill="rgb(223,190,21)" fg:x="197061057" fg:w="3063860"/><text x="65.5007%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,063,860 samples, 1.01%)</title><rect x="65.2507%" y="613" width="1.0145%" height="15" fill="rgb(215,228,25)" fg:x="197061057" fg:w="3063860"/><text x="65.5007%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (3,063,860 samples, 1.01%)</title><rect x="65.2507%" y="597" width="1.0145%" height="15" fill="rgb(225,36,22)" fg:x="197061057" fg:w="3063860"/><text x="65.5007%" y="607.50"></text></g><g><title>cfree (3,063,860 samples, 1.01%)</title><rect x="65.2507%" y="581" width="1.0145%" height="15" fill="rgb(251,106,46)" fg:x="197061057" fg:w="3063860"/><text x="65.5007%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (11,851,386 samples, 3.92%)</title><rect x="63.3192%" y="1045" width="3.9242%" height="15" fill="rgb(208,90,1)" fg:x="191227842" fg:w="11851386"/><text x="63.5692%" y="1055.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11,851,386 samples, 3.92%)</title><rect x="63.3192%" y="1029" width="3.9242%" height="15" fill="rgb(243,10,4)" fg:x="191227842" fg:w="11851386"/><text x="63.5692%" y="1039.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (11,851,386 samples, 3.92%)</title><rect x="63.3192%" y="1013" width="3.9242%" height="15" fill="rgb(212,137,27)" fg:x="191227842" fg:w="11851386"/><text x="63.5692%" y="1023.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (11,851,386 samples, 3.92%)</title><rect x="63.3192%" y="997" width="3.9242%" height="15" fill="rgb(231,220,49)" fg:x="191227842" fg:w="11851386"/><text x="63.5692%" y="1007.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (2,954,311 samples, 0.98%)</title><rect x="66.2652%" y="981" width="0.9782%" height="15" fill="rgb(237,96,20)" fg:x="200124917" fg:w="2954311"/><text x="66.5152%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,954,311 samples, 0.98%)</title><rect x="66.2652%" y="965" width="0.9782%" height="15" fill="rgb(239,229,30)" fg:x="200124917" fg:w="2954311"/><text x="66.5152%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,954,311 samples, 0.98%)</title><rect x="66.2652%" y="949" width="0.9782%" height="15" fill="rgb(219,65,33)" fg:x="200124917" fg:w="2954311"/><text x="66.5152%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,954,311 samples, 0.98%)</title><rect x="66.2652%" y="933" width="0.9782%" height="15" fill="rgb(243,134,7)" fg:x="200124917" fg:w="2954311"/><text x="66.5152%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,954,311 samples, 0.98%)</title><rect x="66.2652%" y="917" width="0.9782%" height="15" fill="rgb(216,177,54)" fg:x="200124917" fg:w="2954311"/><text x="66.5152%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,954,311 samples, 0.98%)</title><rect x="66.2652%" y="901" width="0.9782%" height="15" fill="rgb(211,160,20)" fg:x="200124917" fg:w="2954311"/><text x="66.5152%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,954,311 samples, 0.98%)</title><rect x="66.2652%" y="885" width="0.9782%" height="15" fill="rgb(239,85,39)" fg:x="200124917" fg:w="2954311"/><text x="66.5152%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (2,954,311 samples, 0.98%)</title><rect x="66.2652%" y="869" width="0.9782%" height="15" fill="rgb(232,125,22)" fg:x="200124917" fg:w="2954311"/><text x="66.5152%" y="879.50"></text></g><g><title>__rust_dealloc (2,954,311 samples, 0.98%)</title><rect x="66.2652%" y="853" width="0.9782%" height="15" fill="rgb(244,57,34)" fg:x="200124917" fg:w="2954311"/><text x="66.5152%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (3,088,710 samples, 1.02%)</title><rect x="67.2434%" y="1045" width="1.0227%" height="15" fill="rgb(214,203,32)" fg:x="203079228" fg:w="3088710"/><text x="67.4934%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,088,710 samples, 1.02%)</title><rect x="67.2434%" y="1029" width="1.0227%" height="15" fill="rgb(207,58,43)" fg:x="203079228" fg:w="3088710"/><text x="67.4934%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,088,710 samples, 1.02%)</title><rect x="67.2434%" y="1013" width="1.0227%" height="15" fill="rgb(215,193,15)" fg:x="203079228" fg:w="3088710"/><text x="67.4934%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,088,710 samples, 1.02%)</title><rect x="67.2434%" y="997" width="1.0227%" height="15" fill="rgb(232,15,44)" fg:x="203079228" fg:w="3088710"/><text x="67.4934%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,088,710 samples, 1.02%)</title><rect x="67.2434%" y="981" width="1.0227%" height="15" fill="rgb(212,3,48)" fg:x="203079228" fg:w="3088710"/><text x="67.4934%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,088,710 samples, 1.02%)</title><rect x="67.2434%" y="965" width="1.0227%" height="15" fill="rgb(218,128,7)" fg:x="203079228" fg:w="3088710"/><text x="67.4934%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,088,710 samples, 1.02%)</title><rect x="67.2434%" y="949" width="1.0227%" height="15" fill="rgb(226,216,39)" fg:x="203079228" fg:w="3088710"/><text x="67.4934%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (3,088,710 samples, 1.02%)</title><rect x="67.2434%" y="933" width="1.0227%" height="15" fill="rgb(243,47,51)" fg:x="203079228" fg:w="3088710"/><text x="67.4934%" y="943.50"></text></g><g><title>cfree (3,088,710 samples, 1.02%)</title><rect x="67.2434%" y="917" width="1.0227%" height="15" fill="rgb(241,183,40)" fg:x="203079228" fg:w="3088710"/><text x="67.4934%" y="927.50"></text></g><g><title>[libc.so.6] (3,088,710 samples, 1.02%)</title><rect x="67.2434%" y="901" width="1.0227%" height="15" fill="rgb(231,217,32)" fg:x="203079228" fg:w="3088710"/><text x="67.4934%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,762,090 samples, 0.91%)</title><rect x="68.2662%" y="949" width="0.9146%" height="15" fill="rgb(229,61,38)" fg:x="206167938" fg:w="2762090"/><text x="68.5162%" y="959.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2,762,090 samples, 0.91%)</title><rect x="68.2662%" y="933" width="0.9146%" height="15" fill="rgb(225,210,5)" fg:x="206167938" fg:w="2762090"/><text x="68.5162%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2,762,090 samples, 0.91%)</title><rect x="68.2662%" y="917" width="0.9146%" height="15" fill="rgb(231,79,45)" fg:x="206167938" fg:w="2762090"/><text x="68.5162%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (2,762,090 samples, 0.91%)</title><rect x="68.2662%" y="901" width="0.9146%" height="15" fill="rgb(224,100,7)" fg:x="206167938" fg:w="2762090"/><text x="68.5162%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,762,090 samples, 0.91%)</title><rect x="68.2662%" y="885" width="0.9146%" height="15" fill="rgb(241,198,18)" fg:x="206167938" fg:w="2762090"/><text x="68.5162%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,762,090 samples, 0.91%)</title><rect x="68.2662%" y="869" width="0.9146%" height="15" fill="rgb(252,97,53)" fg:x="206167938" fg:w="2762090"/><text x="68.5162%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,762,090 samples, 0.91%)</title><rect x="68.2662%" y="853" width="0.9146%" height="15" fill="rgb(220,88,7)" fg:x="206167938" fg:w="2762090"/><text x="68.5162%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,762,090 samples, 0.91%)</title><rect x="68.2662%" y="837" width="0.9146%" height="15" fill="rgb(213,176,14)" fg:x="206167938" fg:w="2762090"/><text x="68.5162%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,762,090 samples, 0.91%)</title><rect x="68.2662%" y="821" width="0.9146%" height="15" fill="rgb(246,73,7)" fg:x="206167938" fg:w="2762090"/><text x="68.5162%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (2,762,090 samples, 0.91%)</title><rect x="68.2662%" y="805" width="0.9146%" height="15" fill="rgb(245,64,36)" fg:x="206167938" fg:w="2762090"/><text x="68.5162%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (20,586,301 samples, 6.82%)</title><rect x="63.3192%" y="1109" width="6.8165%" height="15" fill="rgb(245,80,10)" fg:x="191227842" fg:w="20586301"/><text x="63.5692%" y="1119.50">core::ptr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,586,301 samples, 6.82%)</title><rect x="63.3192%" y="1093" width="6.8165%" height="15" fill="rgb(232,107,50)" fg:x="191227842" fg:w="20586301"/><text x="63.5692%" y="1103.50">&lt;alloc::v..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (20,586,301 samples, 6.82%)</title><rect x="63.3192%" y="1077" width="6.8165%" height="15" fill="rgb(253,3,0)" fg:x="191227842" fg:w="20586301"/><text x="63.5692%" y="1087.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (20,586,301 samples, 6.82%)</title><rect x="63.3192%" y="1061" width="6.8165%" height="15" fill="rgb(212,99,53)" fg:x="191227842" fg:w="20586301"/><text x="63.5692%" y="1071.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (5,646,205 samples, 1.87%)</title><rect x="68.2662%" y="1045" width="1.8696%" height="15" fill="rgb(249,111,54)" fg:x="206167938" fg:w="5646205"/><text x="68.5162%" y="1055.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (5,646,205 samples, 1.87%)</title><rect x="68.2662%" y="1029" width="1.8696%" height="15" fill="rgb(249,55,30)" fg:x="206167938" fg:w="5646205"/><text x="68.5162%" y="1039.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (5,646,205 samples, 1.87%)</title><rect x="68.2662%" y="1013" width="1.8696%" height="15" fill="rgb(237,47,42)" fg:x="206167938" fg:w="5646205"/><text x="68.5162%" y="1023.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (5,646,205 samples, 1.87%)</title><rect x="68.2662%" y="997" width="1.8696%" height="15" fill="rgb(211,20,18)" fg:x="206167938" fg:w="5646205"/><text x="68.5162%" y="1007.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,646,205 samples, 1.87%)</title><rect x="68.2662%" y="981" width="1.8696%" height="15" fill="rgb(231,203,46)" fg:x="206167938" fg:w="5646205"/><text x="68.5162%" y="991.50">&lt;..</text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (5,646,205 samples, 1.87%)</title><rect x="68.2662%" y="965" width="1.8696%" height="15" fill="rgb(237,142,3)" fg:x="206167938" fg:w="5646205"/><text x="68.5162%" y="975.50">h..</text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (2,884,115 samples, 0.95%)</title><rect x="69.1808%" y="949" width="0.9550%" height="15" fill="rgb(241,107,1)" fg:x="208930028" fg:w="2884115"/><text x="69.4308%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner::allocation_info (2,884,115 samples, 0.95%)</title><rect x="69.1808%" y="933" width="0.9550%" height="15" fill="rgb(229,83,13)" fg:x="208930028" fg:w="2884115"/><text x="69.4308%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23,327,046 samples, 7.72%)</title><rect x="63.3192%" y="1221" width="7.7240%" height="15" fill="rgb(241,91,40)" fg:x="191227842" fg:w="23327046"/><text x="63.5692%" y="1231.50">&lt;alloc::vec..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (23,327,046 samples, 7.72%)</title><rect x="63.3192%" y="1205" width="7.7240%" height="15" fill="rgb(225,3,45)" fg:x="191227842" fg:w="23327046"/><text x="63.5692%" y="1215.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (23,327,046 samples, 7.72%)</title><rect x="63.3192%" y="1189" width="7.7240%" height="15" fill="rgb(244,223,14)" fg:x="191227842" fg:w="23327046"/><text x="63.5692%" y="1199.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (23,327,046 samples, 7.72%)</title><rect x="63.3192%" y="1173" width="7.7240%" height="15" fill="rgb(224,124,37)" fg:x="191227842" fg:w="23327046"/><text x="63.5692%" y="1183.50">core::ptr::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23,327,046 samples, 7.72%)</title><rect x="63.3192%" y="1157" width="7.7240%" height="15" fill="rgb(251,171,30)" fg:x="191227842" fg:w="23327046"/><text x="63.5692%" y="1167.50">&lt;alloc::vec..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (23,327,046 samples, 7.72%)</title><rect x="63.3192%" y="1141" width="7.7240%" height="15" fill="rgb(236,46,54)" fg:x="191227842" fg:w="23327046"/><text x="63.5692%" y="1151.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (23,327,046 samples, 7.72%)</title><rect x="63.3192%" y="1125" width="7.7240%" height="15" fill="rgb(245,213,5)" fg:x="191227842" fg:w="23327046"/><text x="63.5692%" y="1135.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,740,745 samples, 0.91%)</title><rect x="70.1357%" y="1109" width="0.9075%" height="15" fill="rgb(230,144,27)" fg:x="211814143" fg:w="2740745"/><text x="70.3857%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,740,745 samples, 0.91%)</title><rect x="70.1357%" y="1093" width="0.9075%" height="15" fill="rgb(220,86,6)" fg:x="211814143" fg:w="2740745"/><text x="70.3857%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,740,745 samples, 0.91%)</title><rect x="70.1357%" y="1077" width="0.9075%" height="15" fill="rgb(240,20,13)" fg:x="211814143" fg:w="2740745"/><text x="70.3857%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,740,745 samples, 0.91%)</title><rect x="70.1357%" y="1061" width="0.9075%" height="15" fill="rgb(217,89,34)" fg:x="211814143" fg:w="2740745"/><text x="70.3857%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,740,745 samples, 0.91%)</title><rect x="70.1357%" y="1045" width="0.9075%" height="15" fill="rgb(229,13,5)" fg:x="211814143" fg:w="2740745"/><text x="70.3857%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,740,745 samples, 0.91%)</title><rect x="70.1357%" y="1029" width="0.9075%" height="15" fill="rgb(244,67,35)" fg:x="211814143" fg:w="2740745"/><text x="70.3857%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (2,740,745 samples, 0.91%)</title><rect x="70.1357%" y="1013" width="0.9075%" height="15" fill="rgb(221,40,2)" fg:x="211814143" fg:w="2740745"/><text x="70.3857%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,740,745 samples, 0.91%)</title><rect x="70.1357%" y="997" width="0.9075%" height="15" fill="rgb(237,157,21)" fg:x="211814143" fg:w="2740745"/><text x="70.3857%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (2,740,745 samples, 0.91%)</title><rect x="70.1357%" y="981" width="0.9075%" height="15" fill="rgb(222,94,11)" fg:x="211814143" fg:w="2740745"/><text x="70.3857%" y="991.50"></text></g><g><title>cfree (2,740,745 samples, 0.91%)</title><rect x="70.1357%" y="965" width="0.9075%" height="15" fill="rgb(249,113,6)" fg:x="211814143" fg:w="2740745"/><text x="70.3857%" y="975.50"></text></g><g><title>[libc.so.6] (2,740,745 samples, 0.91%)</title><rect x="70.1357%" y="949" width="0.9075%" height="15" fill="rgb(238,137,36)" fg:x="211814143" fg:w="2740745"/><text x="70.3857%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (26,151,650 samples, 8.66%)</title><rect x="63.3192%" y="1237" width="8.6593%" height="15" fill="rgb(210,102,26)" fg:x="191227842" fg:w="26151650"/><text x="63.5692%" y="1247.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,824,604 samples, 0.94%)</title><rect x="71.0433%" y="1221" width="0.9353%" height="15" fill="rgb(218,30,30)" fg:x="214554888" fg:w="2824604"/><text x="71.2933%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,824,604 samples, 0.94%)</title><rect x="71.0433%" y="1205" width="0.9353%" height="15" fill="rgb(214,67,26)" fg:x="214554888" fg:w="2824604"/><text x="71.2933%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,824,604 samples, 0.94%)</title><rect x="71.0433%" y="1189" width="0.9353%" height="15" fill="rgb(251,9,53)" fg:x="214554888" fg:w="2824604"/><text x="71.2933%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (2,824,604 samples, 0.94%)</title><rect x="71.0433%" y="1173" width="0.9353%" height="15" fill="rgb(228,204,25)" fg:x="214554888" fg:w="2824604"/><text x="71.2933%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35,334,891 samples, 11.70%)</title><rect x="61.2794%" y="1285" width="11.7001%" height="15" fill="rgb(207,153,8)" fg:x="185067549" fg:w="35334891"/><text x="61.5294%" y="1295.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (35,334,891 samples, 11.70%)</title><rect x="61.2794%" y="1269" width="11.7001%" height="15" fill="rgb(242,9,16)" fg:x="185067549" fg:w="35334891"/><text x="61.5294%" y="1279.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (35,334,891 samples, 11.70%)</title><rect x="61.2794%" y="1253" width="11.7001%" height="15" fill="rgb(217,211,10)" fg:x="185067549" fg:w="35334891"/><text x="61.5294%" y="1263.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (3,022,948 samples, 1.00%)</title><rect x="71.9785%" y="1237" width="1.0010%" height="15" fill="rgb(219,228,52)" fg:x="217379492" fg:w="3022948"/><text x="72.2285%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41,036,116 samples, 13.59%)</title><rect x="60.3021%" y="1349" width="13.5878%" height="15" fill="rgb(231,92,29)" fg:x="182115833" fg:w="41036116"/><text x="60.5521%" y="1359.50">&lt;alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (41,036,116 samples, 13.59%)</title><rect x="60.3021%" y="1333" width="13.5878%" height="15" fill="rgb(232,8,23)" fg:x="182115833" fg:w="41036116"/><text x="60.5521%" y="1343.50">core::ptr::drop_in_pl..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (41,036,116 samples, 13.59%)</title><rect x="60.3021%" y="1317" width="13.5878%" height="15" fill="rgb(216,211,34)" fg:x="182115833" fg:w="41036116"/><text x="60.5521%" y="1327.50">core::ptr::drop_in_pl..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (38,084,400 samples, 12.61%)</title><rect x="61.2794%" y="1301" width="12.6105%" height="15" fill="rgb(236,151,0)" fg:x="185067549" fg:w="38084400"/><text x="61.5294%" y="1311.50">core::ptr::drop_in_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,749,509 samples, 0.91%)</title><rect x="72.9795%" y="1285" width="0.9104%" height="15" fill="rgb(209,168,3)" fg:x="220402440" fg:w="2749509"/><text x="73.2295%" y="1295.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,749,509 samples, 0.91%)</title><rect x="72.9795%" y="1269" width="0.9104%" height="15" fill="rgb(208,129,28)" fg:x="220402440" fg:w="2749509"/><text x="73.2295%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,749,509 samples, 0.91%)</title><rect x="72.9795%" y="1253" width="0.9104%" height="15" fill="rgb(229,78,22)" fg:x="220402440" fg:w="2749509"/><text x="73.2295%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,749,509 samples, 0.91%)</title><rect x="72.9795%" y="1237" width="0.9104%" height="15" fill="rgb(228,187,13)" fg:x="220402440" fg:w="2749509"/><text x="73.2295%" y="1247.50"></text></g><g><title>alloc::alloc::dealloc (2,749,509 samples, 0.91%)</title><rect x="72.9795%" y="1221" width="0.9104%" height="15" fill="rgb(240,119,24)" fg:x="220402440" fg:w="2749509"/><text x="73.2295%" y="1231.50"></text></g><g><title>cfree (2,749,509 samples, 0.91%)</title><rect x="72.9795%" y="1205" width="0.9104%" height="15" fill="rgb(209,194,42)" fg:x="220402440" fg:w="2749509"/><text x="73.2295%" y="1215.50"></text></g><g><title>[libc.so.6] (2,749,509 samples, 0.91%)</title><rect x="72.9795%" y="1189" width="0.9104%" height="15" fill="rgb(247,200,46)" fg:x="220402440" fg:w="2749509"/><text x="73.2295%" y="1199.50"></text></g><g><title>[libc.so.6] (2,749,509 samples, 0.91%)</title><rect x="72.9795%" y="1173" width="0.9104%" height="15" fill="rgb(218,76,16)" fg:x="220402440" fg:w="2749509"/><text x="73.2295%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (61,568,739 samples, 20.39%)</title><rect x="60.3021%" y="1413" width="20.3866%" height="15" fill="rgb(225,21,48)" fg:x="182115833" fg:w="61568739"/><text x="60.5521%" y="1423.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::o..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (61,568,739 samples, 20.39%)</title><rect x="60.3021%" y="1397" width="20.3866%" height="15" fill="rgb(239,223,50)" fg:x="182115833" fg:w="61568739"/><text x="60.5521%" y="1407.50">core::ptr::drop_in_place&lt;[css_bi..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (61,568,739 samples, 20.39%)</title><rect x="60.3021%" y="1381" width="20.3866%" height="15" fill="rgb(244,45,21)" fg:x="182115833" fg:w="61568739"/><text x="60.5521%" y="1391.50">core::ptr::drop_in_place&lt;css_bit..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (61,568,739 samples, 20.39%)</title><rect x="60.3021%" y="1365" width="20.3866%" height="15" fill="rgb(232,33,43)" fg:x="182115833" fg:w="61568739"/><text x="60.5521%" y="1375.50">core::ptr::drop_in_place&lt;alloc::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (20,532,623 samples, 6.80%)</title><rect x="73.8899%" y="1349" width="6.7987%" height="15" fill="rgb(209,8,3)" fg:x="223151949" fg:w="20532623"/><text x="74.1399%" y="1359.50">core::ptr..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,532,623 samples, 6.80%)</title><rect x="73.8899%" y="1333" width="6.7987%" height="15" fill="rgb(214,25,53)" fg:x="223151949" fg:w="20532623"/><text x="74.1399%" y="1343.50">&lt;alloc::r..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (20,532,623 samples, 6.80%)</title><rect x="73.8899%" y="1317" width="6.7987%" height="15" fill="rgb(254,186,54)" fg:x="223151949" fg:w="20532623"/><text x="74.1399%" y="1327.50">alloc::ra..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20,532,623 samples, 6.80%)</title><rect x="73.8899%" y="1301" width="6.7987%" height="15" fill="rgb(208,174,49)" fg:x="223151949" fg:w="20532623"/><text x="74.1399%" y="1311.50">&lt;alloc::a..</text></g><g><title>alloc::alloc::dealloc (20,532,623 samples, 6.80%)</title><rect x="73.8899%" y="1285" width="6.7987%" height="15" fill="rgb(233,191,51)" fg:x="223151949" fg:w="20532623"/><text x="74.1399%" y="1295.50">alloc::al..</text></g><g><title>cfree (20,532,623 samples, 6.80%)</title><rect x="73.8899%" y="1269" width="6.7987%" height="15" fill="rgb(222,134,10)" fg:x="223151949" fg:w="20532623"/><text x="74.1399%" y="1279.50">cfree</text></g><g><title>[libc.so.6] (20,532,623 samples, 6.80%)</title><rect x="73.8899%" y="1253" width="6.7987%" height="15" fill="rgb(230,226,20)" fg:x="223151949" fg:w="20532623"/><text x="74.1399%" y="1263.50">[libc.so...</text></g><g><title>[libc.so.6] (20,532,623 samples, 6.80%)</title><rect x="73.8899%" y="1237" width="6.7987%" height="15" fill="rgb(251,111,25)" fg:x="223151949" fg:w="20532623"/><text x="74.1399%" y="1247.50">[libc.so...</text></g><g><title>[libc.so.6] (8,875,479 samples, 2.94%)</title><rect x="77.7498%" y="1221" width="2.9388%" height="15" fill="rgb(224,40,46)" fg:x="234809093" fg:w="8875479"/><text x="77.9998%" y="1231.50">[l..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (64,747,508 samples, 21.44%)</title><rect x="60.3021%" y="1701" width="21.4391%" height="15" fill="rgb(236,108,47)" fg:x="182115833" fg:w="64747508"/><text x="60.5521%" y="1711.50">core::ptr::drop_in_place&lt;css_bitve..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (64,747,508 samples, 21.44%)</title><rect x="60.3021%" y="1685" width="21.4391%" height="15" fill="rgb(234,93,0)" fg:x="182115833" fg:w="64747508"/><text x="60.5521%" y="1695.50">core::ptr::drop_in_place&lt;alloc::ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (64,747,508 samples, 21.44%)</title><rect x="60.3021%" y="1669" width="21.4391%" height="15" fill="rgb(224,213,32)" fg:x="182115833" fg:w="64747508"/><text x="60.5521%" y="1679.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (64,747,508 samples, 21.44%)</title><rect x="60.3021%" y="1653" width="21.4391%" height="15" fill="rgb(251,11,48)" fg:x="182115833" fg:w="64747508"/><text x="60.5521%" y="1663.50">core::ptr::drop_in_place&lt;[css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (64,747,508 samples, 21.44%)</title><rect x="60.3021%" y="1637" width="21.4391%" height="15" fill="rgb(236,173,5)" fg:x="182115833" fg:w="64747508"/><text x="60.5521%" y="1647.50">core::ptr::drop_in_place&lt;css_bitve..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (64,747,508 samples, 21.44%)</title><rect x="60.3021%" y="1621" width="21.4391%" height="15" fill="rgb(230,95,12)" fg:x="182115833" fg:w="64747508"/><text x="60.5521%" y="1631.50">core::ptr::drop_in_place&lt;alloc::ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (64,747,508 samples, 21.44%)</title><rect x="60.3021%" y="1605" width="21.4391%" height="15" fill="rgb(232,209,1)" fg:x="182115833" fg:w="64747508"/><text x="60.5521%" y="1615.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (64,747,508 samples, 21.44%)</title><rect x="60.3021%" y="1589" width="21.4391%" height="15" fill="rgb(232,6,1)" fg:x="182115833" fg:w="64747508"/><text x="60.5521%" y="1599.50">core::ptr::drop_in_place&lt;[css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (64,747,508 samples, 21.44%)</title><rect x="60.3021%" y="1573" width="21.4391%" height="15" fill="rgb(210,224,50)" fg:x="182115833" fg:w="64747508"/><text x="60.5521%" y="1583.50">core::ptr::drop_in_place&lt;css_bitve..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (64,747,508 samples, 21.44%)</title><rect x="60.3021%" y="1557" width="21.4391%" height="15" fill="rgb(228,127,35)" fg:x="182115833" fg:w="64747508"/><text x="60.5521%" y="1567.50">core::ptr::drop_in_place&lt;alloc::ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (64,747,508 samples, 21.44%)</title><rect x="60.3021%" y="1541" width="21.4391%" height="15" fill="rgb(245,102,45)" fg:x="182115833" fg:w="64747508"/><text x="60.5521%" y="1551.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (64,747,508 samples, 21.44%)</title><rect x="60.3021%" y="1525" width="21.4391%" height="15" fill="rgb(214,1,49)" fg:x="182115833" fg:w="64747508"/><text x="60.5521%" y="1535.50">core::ptr::drop_in_place&lt;[css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (64,747,508 samples, 21.44%)</title><rect x="60.3021%" y="1509" width="21.4391%" height="15" fill="rgb(226,163,40)" fg:x="182115833" fg:w="64747508"/><text x="60.5521%" y="1519.50">core::ptr::drop_in_place&lt;css_bitve..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (64,747,508 samples, 21.44%)</title><rect x="60.3021%" y="1493" width="21.4391%" height="15" fill="rgb(239,212,28)" fg:x="182115833" fg:w="64747508"/><text x="60.5521%" y="1503.50">core::ptr::drop_in_place&lt;alloc::ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (64,747,508 samples, 21.44%)</title><rect x="60.3021%" y="1477" width="21.4391%" height="15" fill="rgb(220,20,13)" fg:x="182115833" fg:w="64747508"/><text x="60.5521%" y="1487.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (64,747,508 samples, 21.44%)</title><rect x="60.3021%" y="1461" width="21.4391%" height="15" fill="rgb(210,164,35)" fg:x="182115833" fg:w="64747508"/><text x="60.5521%" y="1471.50">core::ptr::drop_in_place&lt;[css_bitv..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (64,747,508 samples, 21.44%)</title><rect x="60.3021%" y="1445" width="21.4391%" height="15" fill="rgb(248,109,41)" fg:x="182115833" fg:w="64747508"/><text x="60.5521%" y="1455.50">core::ptr::drop_in_place&lt;css_bitve..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (64,747,508 samples, 21.44%)</title><rect x="60.3021%" y="1429" width="21.4391%" height="15" fill="rgb(238,23,50)" fg:x="182115833" fg:w="64747508"/><text x="60.5521%" y="1439.50">core::ptr::drop_in_place&lt;alloc::ve..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,178,769 samples, 1.05%)</title><rect x="80.6887%" y="1413" width="1.0526%" height="15" fill="rgb(211,48,49)" fg:x="243684572" fg:w="3178769"/><text x="80.9387%" y="1423.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,178,769 samples, 1.05%)</title><rect x="80.6887%" y="1397" width="1.0526%" height="15" fill="rgb(223,36,21)" fg:x="243684572" fg:w="3178769"/><text x="80.9387%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,178,769 samples, 1.05%)</title><rect x="80.6887%" y="1381" width="1.0526%" height="15" fill="rgb(207,123,46)" fg:x="243684572" fg:w="3178769"/><text x="80.9387%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,178,769 samples, 1.05%)</title><rect x="80.6887%" y="1365" width="1.0526%" height="15" fill="rgb(240,218,32)" fg:x="243684572" fg:w="3178769"/><text x="80.9387%" y="1375.50"></text></g><g><title>alloc::alloc::dealloc (3,178,769 samples, 1.05%)</title><rect x="80.6887%" y="1349" width="1.0526%" height="15" fill="rgb(252,5,43)" fg:x="243684572" fg:w="3178769"/><text x="80.9387%" y="1359.50"></text></g><g><title>cfree (3,178,769 samples, 1.05%)</title><rect x="80.6887%" y="1333" width="1.0526%" height="15" fill="rgb(252,84,19)" fg:x="243684572" fg:w="3178769"/><text x="80.9387%" y="1343.50"></text></g><g><title>[libc.so.6] (3,178,769 samples, 1.05%)</title><rect x="80.6887%" y="1317" width="1.0526%" height="15" fill="rgb(243,152,39)" fg:x="243684572" fg:w="3178769"/><text x="80.9387%" y="1327.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,154,368 samples, 1.04%)</title><rect x="81.7412%" y="1637" width="1.0445%" height="15" fill="rgb(234,160,15)" fg:x="246863341" fg:w="3154368"/><text x="81.9912%" y="1647.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,217,348 samples, 1.07%)</title><rect x="82.7857%" y="1605" width="1.0653%" height="15" fill="rgb(237,34,20)" fg:x="250017709" fg:w="3217348"/><text x="83.0357%" y="1615.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,199,904 samples, 1.06%)</title><rect x="83.8510%" y="1589" width="1.0595%" height="15" fill="rgb(229,97,13)" fg:x="253235057" fg:w="3199904"/><text x="84.1010%" y="1599.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (3,199,904 samples, 1.06%)</title><rect x="83.8510%" y="1573" width="1.0595%" height="15" fill="rgb(234,71,50)" fg:x="253235057" fg:w="3199904"/><text x="84.1010%" y="1583.50"></text></g><g><title>benchmark::benchmark_accumulated_modifications (205,130,470 samples, 67.92%)</title><rect x="18.0451%" y="1717" width="67.9227%" height="15" fill="rgb(253,155,4)" fg:x="54497413" fg:w="205130470"/><text x="18.2951%" y="1727.50">benchmark::benchmark_accumulated_modifications</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (12,764,542 samples, 4.23%)</title><rect x="81.7412%" y="1701" width="4.2266%" height="15" fill="rgb(222,185,37)" fg:x="246863341" fg:w="12764542"/><text x="81.9912%" y="1711.50">css_b..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (12,764,542 samples, 4.23%)</title><rect x="81.7412%" y="1685" width="4.2266%" height="15" fill="rgb(251,177,13)" fg:x="246863341" fg:w="12764542"/><text x="81.9912%" y="1695.50">css_b..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (12,764,542 samples, 4.23%)</title><rect x="81.7412%" y="1669" width="4.2266%" height="15" fill="rgb(250,179,40)" fg:x="246863341" fg:w="12764542"/><text x="81.9912%" y="1679.50">css_b..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (12,764,542 samples, 4.23%)</title><rect x="81.7412%" y="1653" width="4.2266%" height="15" fill="rgb(242,44,2)" fg:x="246863341" fg:w="12764542"/><text x="81.9912%" y="1663.50">css_b..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (9,610,174 samples, 3.18%)</title><rect x="82.7857%" y="1637" width="3.1821%" height="15" fill="rgb(216,177,13)" fg:x="250017709" fg:w="9610174"/><text x="83.0357%" y="1647.50">css..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (9,610,174 samples, 3.18%)</title><rect x="82.7857%" y="1621" width="3.1821%" height="15" fill="rgb(216,106,43)" fg:x="250017709" fg:w="9610174"/><text x="83.0357%" y="1631.50">css..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (6,392,826 samples, 2.12%)</title><rect x="83.8510%" y="1605" width="2.1168%" height="15" fill="rgb(216,183,2)" fg:x="253235057" fg:w="6392826"/><text x="84.1010%" y="1615.50">c..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (3,192,922 samples, 1.06%)</title><rect x="84.9106%" y="1589" width="1.0572%" height="15" fill="rgb(249,75,3)" fg:x="256434961" fg:w="3192922"/><text x="85.1606%" y="1599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,192,922 samples, 1.06%)</title><rect x="84.9106%" y="1573" width="1.0572%" height="15" fill="rgb(219,67,39)" fg:x="256434961" fg:w="3192922"/><text x="85.1606%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (3,192,922 samples, 1.06%)</title><rect x="84.9106%" y="1557" width="1.0572%" height="15" fill="rgb(253,228,2)" fg:x="256434961" fg:w="3192922"/><text x="85.1606%" y="1567.50"></text></g><g><title>cfree (4,827,791 samples, 1.60%)</title><rect x="85.9678%" y="1525" width="1.5986%" height="15" fill="rgb(235,138,27)" fg:x="259627883" fg:w="4827791"/><text x="86.2178%" y="1535.50"></text></g><g><title>[libc.so.6] (2,304,757 samples, 0.76%)</title><rect x="86.8032%" y="1509" width="0.7631%" height="15" fill="rgb(236,97,51)" fg:x="262150917" fg:w="2304757"/><text x="87.0532%" y="1519.50"></text></g><g><title>[libc.so.6] (2,304,757 samples, 0.76%)</title><rect x="86.8032%" y="1493" width="0.7631%" height="15" fill="rgb(240,80,30)" fg:x="262150917" fg:w="2304757"/><text x="87.0532%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7,246,889 samples, 2.40%)</title><rect x="85.9678%" y="1701" width="2.3996%" height="15" fill="rgb(230,178,19)" fg:x="259627883" fg:w="7246889"/><text x="86.2178%" y="1711.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,246,889 samples, 2.40%)</title><rect x="85.9678%" y="1685" width="2.3996%" height="15" fill="rgb(210,190,27)" fg:x="259627883" fg:w="7246889"/><text x="86.2178%" y="1695.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,246,889 samples, 2.40%)</title><rect x="85.9678%" y="1669" width="2.3996%" height="15" fill="rgb(222,107,31)" fg:x="259627883" fg:w="7246889"/><text x="86.2178%" y="1679.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,246,889 samples, 2.40%)</title><rect x="85.9678%" y="1653" width="2.3996%" height="15" fill="rgb(216,127,34)" fg:x="259627883" fg:w="7246889"/><text x="86.2178%" y="1663.50">&lt;a..</text></g><g><title>core::mem::drop (7,246,889 samples, 2.40%)</title><rect x="85.9678%" y="1637" width="2.3996%" height="15" fill="rgb(234,116,52)" fg:x="259627883" fg:w="7246889"/><text x="86.2178%" y="1647.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7,246,889 samples, 2.40%)</title><rect x="85.9678%" y="1621" width="2.3996%" height="15" fill="rgb(222,124,15)" fg:x="259627883" fg:w="7246889"/><text x="86.2178%" y="1631.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7,246,889 samples, 2.40%)</title><rect x="85.9678%" y="1605" width="2.3996%" height="15" fill="rgb(231,179,28)" fg:x="259627883" fg:w="7246889"/><text x="86.2178%" y="1615.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7,246,889 samples, 2.40%)</title><rect x="85.9678%" y="1589" width="2.3996%" height="15" fill="rgb(226,93,45)" fg:x="259627883" fg:w="7246889"/><text x="86.2178%" y="1599.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (7,246,889 samples, 2.40%)</title><rect x="85.9678%" y="1573" width="2.3996%" height="15" fill="rgb(215,8,51)" fg:x="259627883" fg:w="7246889"/><text x="86.2178%" y="1583.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7,246,889 samples, 2.40%)</title><rect x="85.9678%" y="1557" width="2.3996%" height="15" fill="rgb(223,106,5)" fg:x="259627883" fg:w="7246889"/><text x="86.2178%" y="1567.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,246,889 samples, 2.40%)</title><rect x="85.9678%" y="1541" width="2.3996%" height="15" fill="rgb(250,191,5)" fg:x="259627883" fg:w="7246889"/><text x="86.2178%" y="1551.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1525" width="0.8010%" height="15" fill="rgb(242,132,44)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1509" width="0.8010%" height="15" fill="rgb(251,152,29)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1493" width="0.8010%" height="15" fill="rgb(218,179,5)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1503.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1477" width="0.8010%" height="15" fill="rgb(227,67,19)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1487.50"></text></g><g><title>core::mem::drop (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1461" width="0.8010%" height="15" fill="rgb(233,119,31)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1445" width="0.8010%" height="15" fill="rgb(241,120,22)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1455.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1429" width="0.8010%" height="15" fill="rgb(224,102,30)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1439.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1413" width="0.8010%" height="15" fill="rgb(210,164,37)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1397" width="0.8010%" height="15" fill="rgb(226,191,16)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1407.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1381" width="0.8010%" height="15" fill="rgb(214,40,45)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1391.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1365" width="0.8010%" height="15" fill="rgb(244,29,26)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1349" width="0.8010%" height="15" fill="rgb(216,16,5)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1333" width="0.8010%" height="15" fill="rgb(249,76,35)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1317" width="0.8010%" height="15" fill="rgb(207,11,44)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1301" width="0.8010%" height="15" fill="rgb(228,190,49)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1285" width="0.8010%" height="15" fill="rgb(214,173,12)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1269" width="0.8010%" height="15" fill="rgb(218,26,35)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1253" width="0.8010%" height="15" fill="rgb(220,200,19)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1263.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1237" width="0.8010%" height="15" fill="rgb(239,95,49)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1247.50"></text></g><g><title>core::mem::drop (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1221" width="0.8010%" height="15" fill="rgb(235,85,53)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1205" width="0.8010%" height="15" fill="rgb(233,133,31)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1215.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1189" width="0.8010%" height="15" fill="rgb(218,25,20)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1173" width="0.8010%" height="15" fill="rgb(252,210,38)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1183.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1157" width="0.8010%" height="15" fill="rgb(242,134,21)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1167.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1141" width="0.8010%" height="15" fill="rgb(213,28,48)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1151.50"></text></g><g><title>alloc::collections::btree::mem::replace (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1125" width="0.8010%" height="15" fill="rgb(250,196,2)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1135.50"></text></g><g><title>core::ptr::write (2,419,098 samples, 0.80%)</title><rect x="87.5664%" y="1109" width="0.8010%" height="15" fill="rgb(227,5,17)" fg:x="264455674" fg:w="2419098"/><text x="87.8164%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (454,088 samples, 0.15%)</title><rect x="88.3674%" y="1173" width="0.1504%" height="15" fill="rgb(221,226,24)" fg:x="266874772" fg:w="454088"/><text x="88.6174%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (454,088 samples, 0.15%)</title><rect x="88.3674%" y="1157" width="0.1504%" height="15" fill="rgb(211,5,48)" fg:x="266874772" fg:w="454088"/><text x="88.6174%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (454,088 samples, 0.15%)</title><rect x="88.3674%" y="1141" width="0.1504%" height="15" fill="rgb(219,150,6)" fg:x="266874772" fg:w="454088"/><text x="88.6174%" y="1151.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (454,088 samples, 0.15%)</title><rect x="88.3674%" y="1125" width="0.1504%" height="15" fill="rgb(251,46,16)" fg:x="266874772" fg:w="454088"/><text x="88.6174%" y="1135.50"></text></g><g><title>[libc.so.6] (454,088 samples, 0.15%)</title><rect x="88.3674%" y="1109" width="0.1504%" height="15" fill="rgb(220,204,40)" fg:x="266874772" fg:w="454088"/><text x="88.6174%" y="1119.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,192,443 samples, 0.39%)</title><rect x="88.3674%" y="1205" width="0.3948%" height="15" fill="rgb(211,85,2)" fg:x="266874772" fg:w="1192443"/><text x="88.6174%" y="1215.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,192,443 samples, 0.39%)</title><rect x="88.3674%" y="1189" width="0.3948%" height="15" fill="rgb(229,17,7)" fg:x="266874772" fg:w="1192443"/><text x="88.6174%" y="1199.50"></text></g><g><title>serde_json::read::parse_escape (738,355 samples, 0.24%)</title><rect x="88.5177%" y="1173" width="0.2445%" height="15" fill="rgb(239,72,28)" fg:x="267328860" fg:w="738355"/><text x="88.7677%" y="1183.50"></text></g><g><title>serde_json::read::next_or_eof (738,355 samples, 0.24%)</title><rect x="88.5177%" y="1157" width="0.2445%" height="15" fill="rgb(230,47,54)" fg:x="267328860" fg:w="738355"/><text x="88.7677%" y="1167.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::next (738,355 samples, 0.24%)</title><rect x="88.5177%" y="1141" width="0.2445%" height="15" fill="rgb(214,50,8)" fg:x="267328860" fg:w="738355"/><text x="88.7677%" y="1151.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,602,712 samples, 0.53%)</title><rect x="88.7622%" y="1061" width="0.5307%" height="15" fill="rgb(216,198,43)" fg:x="268067215" fg:w="1602712"/><text x="89.0122%" y="1071.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,602,712 samples, 0.53%)</title><rect x="88.7622%" y="1045" width="0.5307%" height="15" fill="rgb(234,20,35)" fg:x="268067215" fg:w="1602712"/><text x="89.0122%" y="1055.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,602,712 samples, 0.53%)</title><rect x="88.7622%" y="1029" width="0.5307%" height="15" fill="rgb(254,45,19)" fg:x="268067215" fg:w="1602712"/><text x="89.0122%" y="1039.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,602,712 samples, 0.53%)</title><rect x="88.7622%" y="1013" width="0.5307%" height="15" fill="rgb(219,14,44)" fg:x="268067215" fg:w="1602712"/><text x="89.0122%" y="1023.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,602,712 samples, 0.53%)</title><rect x="88.7622%" y="997" width="0.5307%" height="15" fill="rgb(217,220,26)" fg:x="268067215" fg:w="1602712"/><text x="89.0122%" y="1007.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (1,602,712 samples, 0.53%)</title><rect x="88.7622%" y="981" width="0.5307%" height="15" fill="rgb(213,158,28)" fg:x="268067215" fg:w="1602712"/><text x="89.0122%" y="991.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,602,712 samples, 0.53%)</title><rect x="88.7622%" y="965" width="0.5307%" height="15" fill="rgb(252,51,52)" fg:x="268067215" fg:w="1602712"/><text x="89.0122%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,602,712 samples, 0.53%)</title><rect x="88.7622%" y="949" width="0.5307%" height="15" fill="rgb(246,89,16)" fg:x="268067215" fg:w="1602712"/><text x="89.0122%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,602,712 samples, 0.53%)</title><rect x="88.7622%" y="933" width="0.5307%" height="15" fill="rgb(216,158,49)" fg:x="268067215" fg:w="1602712"/><text x="89.0122%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,602,712 samples, 0.53%)</title><rect x="88.7622%" y="917" width="0.5307%" height="15" fill="rgb(236,107,19)" fg:x="268067215" fg:w="1602712"/><text x="89.0122%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (1,602,712 samples, 0.53%)</title><rect x="88.7622%" y="901" width="0.5307%" height="15" fill="rgb(228,185,30)" fg:x="268067215" fg:w="1602712"/><text x="89.0122%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,602,712 samples, 0.53%)</title><rect x="88.7622%" y="885" width="0.5307%" height="15" fill="rgb(246,134,8)" fg:x="268067215" fg:w="1602712"/><text x="89.0122%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,602,712 samples, 0.53%)</title><rect x="88.7622%" y="869" width="0.5307%" height="15" fill="rgb(214,143,50)" fg:x="268067215" fg:w="1602712"/><text x="89.0122%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,602,712 samples, 0.53%)</title><rect x="88.7622%" y="853" width="0.5307%" height="15" fill="rgb(228,75,8)" fg:x="268067215" fg:w="1602712"/><text x="89.0122%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,602,712 samples, 0.53%)</title><rect x="88.7622%" y="837" width="0.5307%" height="15" fill="rgb(207,175,4)" fg:x="268067215" fg:w="1602712"/><text x="89.0122%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,602,712 samples, 0.53%)</title><rect x="88.7622%" y="821" width="0.5307%" height="15" fill="rgb(205,108,24)" fg:x="268067215" fg:w="1602712"/><text x="89.0122%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,602,712 samples, 0.53%)</title><rect x="88.7622%" y="805" width="0.5307%" height="15" fill="rgb(244,120,49)" fg:x="268067215" fg:w="1602712"/><text x="89.0122%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,602,712 samples, 0.53%)</title><rect x="88.7622%" y="789" width="0.5307%" height="15" fill="rgb(223,47,38)" fg:x="268067215" fg:w="1602712"/><text x="89.0122%" y="799.50"></text></g><g><title>alloc::alloc::alloc (1,602,712 samples, 0.53%)</title><rect x="88.7622%" y="773" width="0.5307%" height="15" fill="rgb(229,179,11)" fg:x="268067215" fg:w="1602712"/><text x="89.0122%" y="783.50"></text></g><g><title>malloc (1,602,712 samples, 0.53%)</title><rect x="88.7622%" y="757" width="0.5307%" height="15" fill="rgb(231,122,1)" fg:x="268067215" fg:w="1602712"/><text x="89.0122%" y="767.50"></text></g><g><title>[libc.so.6] (1,602,712 samples, 0.53%)</title><rect x="88.7622%" y="741" width="0.5307%" height="15" fill="rgb(245,119,9)" fg:x="268067215" fg:w="1602712"/><text x="89.0122%" y="751.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,654,920 samples, 0.88%)</title><rect x="89.2929%" y="789" width="0.8791%" height="15" fill="rgb(241,163,25)" fg:x="269669927" fg:w="2654920"/><text x="89.5429%" y="799.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,654,920 samples, 0.88%)</title><rect x="89.2929%" y="773" width="0.8791%" height="15" fill="rgb(217,214,3)" fg:x="269669927" fg:w="2654920"/><text x="89.5429%" y="783.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,654,920 samples, 0.88%)</title><rect x="89.2929%" y="757" width="0.8791%" height="15" fill="rgb(240,86,28)" fg:x="269669927" fg:w="2654920"/><text x="89.5429%" y="767.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,654,920 samples, 0.88%)</title><rect x="89.2929%" y="741" width="0.8791%" height="15" fill="rgb(215,47,9)" fg:x="269669927" fg:w="2654920"/><text x="89.5429%" y="751.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,654,920 samples, 0.88%)</title><rect x="89.2929%" y="725" width="0.8791%" height="15" fill="rgb(252,25,45)" fg:x="269669927" fg:w="2654920"/><text x="89.5429%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,654,920 samples, 0.88%)</title><rect x="89.2929%" y="709" width="0.8791%" height="15" fill="rgb(251,164,9)" fg:x="269669927" fg:w="2654920"/><text x="89.5429%" y="719.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,654,920 samples, 0.88%)</title><rect x="89.2929%" y="693" width="0.8791%" height="15" fill="rgb(233,194,0)" fg:x="269669927" fg:w="2654920"/><text x="89.5429%" y="703.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2,654,920 samples, 0.88%)</title><rect x="89.2929%" y="677" width="0.8791%" height="15" fill="rgb(249,111,24)" fg:x="269669927" fg:w="2654920"/><text x="89.5429%" y="687.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (2,654,920 samples, 0.88%)</title><rect x="89.2929%" y="661" width="0.8791%" height="15" fill="rgb(250,223,3)" fg:x="269669927" fg:w="2654920"/><text x="89.5429%" y="671.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (2,654,920 samples, 0.88%)</title><rect x="89.2929%" y="645" width="0.8791%" height="15" fill="rgb(236,178,37)" fg:x="269669927" fg:w="2654920"/><text x="89.5429%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="581" width="0.8649%" height="15" fill="rgb(241,158,50)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="591.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="565" width="0.8649%" height="15" fill="rgb(213,121,41)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="575.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="549" width="0.8649%" height="15" fill="rgb(240,92,3)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="559.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="533" width="0.8649%" height="15" fill="rgb(205,123,3)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="517" width="0.8649%" height="15" fill="rgb(205,97,47)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="501" width="0.8649%" height="15" fill="rgb(247,152,14)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="485" width="0.8649%" height="15" fill="rgb(248,195,53)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="495.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="469" width="0.8649%" height="15" fill="rgb(226,201,16)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="479.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="453" width="0.8649%" height="15" fill="rgb(205,98,0)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="437" width="0.8649%" height="15" fill="rgb(214,191,48)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="447.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="421" width="0.8649%" height="15" fill="rgb(237,112,39)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="431.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="405" width="0.8649%" height="15" fill="rgb(247,203,27)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="389" width="0.8649%" height="15" fill="rgb(235,124,28)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="373" width="0.8649%" height="15" fill="rgb(208,207,46)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="383.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="357" width="0.8649%" height="15" fill="rgb(234,176,4)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="367.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="341" width="0.8649%" height="15" fill="rgb(230,133,28)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="325" width="0.8649%" height="15" fill="rgb(211,137,40)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="309" width="0.8649%" height="15" fill="rgb(254,35,13)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="293" width="0.8649%" height="15" fill="rgb(225,49,51)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="277" width="0.8649%" height="15" fill="rgb(251,10,15)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="261" width="0.8649%" height="15" fill="rgb(228,207,15)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="245" width="0.8649%" height="15" fill="rgb(241,99,19)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="229" width="0.8649%" height="15" fill="rgb(207,104,49)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="213" width="0.8649%" height="15" fill="rgb(234,99,18)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="197" width="0.8649%" height="15" fill="rgb(213,191,49)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="181" width="0.8649%" height="15" fill="rgb(210,226,19)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="165" width="0.8649%" height="15" fill="rgb(229,97,18)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="175.50"></text></g><g><title>alloc::alloc::alloc (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="149" width="0.8649%" height="15" fill="rgb(211,167,15)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="159.50"></text></g><g><title>malloc (2,612,132 samples, 0.86%)</title><rect x="90.1720%" y="133" width="0.8649%" height="15" fill="rgb(210,169,34)" fg:x="272324847" fg:w="2612132"/><text x="90.4220%" y="143.50"></text></g><g><title>serde::de::MapAccess::next_entry (7,159,359 samples, 2.37%)</title><rect x="89.2929%" y="885" width="2.3706%" height="15" fill="rgb(241,121,31)" fg:x="269669927" fg:w="7159359"/><text x="89.5429%" y="895.50">se..</text></g><g><title>serde::de::MapAccess::next_entry_seed (7,159,359 samples, 2.37%)</title><rect x="89.2929%" y="869" width="2.3706%" height="15" fill="rgb(232,40,11)" fg:x="269669927" fg:w="7159359"/><text x="89.5429%" y="879.50">se..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (7,159,359 samples, 2.37%)</title><rect x="89.2929%" y="853" width="2.3706%" height="15" fill="rgb(205,86,26)" fg:x="269669927" fg:w="7159359"/><text x="89.5429%" y="863.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,159,359 samples, 2.37%)</title><rect x="89.2929%" y="837" width="2.3706%" height="15" fill="rgb(231,126,28)" fg:x="269669927" fg:w="7159359"/><text x="89.5429%" y="847.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,159,359 samples, 2.37%)</title><rect x="89.2929%" y="821" width="2.3706%" height="15" fill="rgb(219,221,18)" fg:x="269669927" fg:w="7159359"/><text x="89.5429%" y="831.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,159,359 samples, 2.37%)</title><rect x="89.2929%" y="805" width="2.3706%" height="15" fill="rgb(211,40,0)" fg:x="269669927" fg:w="7159359"/><text x="89.5429%" y="815.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,504,439 samples, 1.49%)</title><rect x="90.1720%" y="789" width="1.4915%" height="15" fill="rgb(239,85,43)" fg:x="272324847" fg:w="4504439"/><text x="90.4220%" y="799.50"></text></g><g><title>serde::de::SeqAccess::next_element (4,504,439 samples, 1.49%)</title><rect x="90.1720%" y="773" width="1.4915%" height="15" fill="rgb(231,55,21)" fg:x="272324847" fg:w="4504439"/><text x="90.4220%" y="783.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,504,439 samples, 1.49%)</title><rect x="90.1720%" y="757" width="1.4915%" height="15" fill="rgb(225,184,43)" fg:x="272324847" fg:w="4504439"/><text x="90.4220%" y="767.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,504,439 samples, 1.49%)</title><rect x="90.1720%" y="741" width="1.4915%" height="15" fill="rgb(251,158,41)" fg:x="272324847" fg:w="4504439"/><text x="90.4220%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,504,439 samples, 1.49%)</title><rect x="90.1720%" y="725" width="1.4915%" height="15" fill="rgb(234,159,37)" fg:x="272324847" fg:w="4504439"/><text x="90.4220%" y="735.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,504,439 samples, 1.49%)</title><rect x="90.1720%" y="709" width="1.4915%" height="15" fill="rgb(216,204,22)" fg:x="272324847" fg:w="4504439"/><text x="90.4220%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,504,439 samples, 1.49%)</title><rect x="90.1720%" y="693" width="1.4915%" height="15" fill="rgb(214,17,3)" fg:x="272324847" fg:w="4504439"/><text x="90.4220%" y="703.50"></text></g><g><title>serde::de::MapAccess::next_entry (4,504,439 samples, 1.49%)</title><rect x="90.1720%" y="677" width="1.4915%" height="15" fill="rgb(212,111,17)" fg:x="272324847" fg:w="4504439"/><text x="90.4220%" y="687.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (4,504,439 samples, 1.49%)</title><rect x="90.1720%" y="661" width="1.4915%" height="15" fill="rgb(221,157,24)" fg:x="272324847" fg:w="4504439"/><text x="90.4220%" y="671.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,504,439 samples, 1.49%)</title><rect x="90.1720%" y="645" width="1.4915%" height="15" fill="rgb(252,16,13)" fg:x="272324847" fg:w="4504439"/><text x="90.4220%" y="655.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,504,439 samples, 1.49%)</title><rect x="90.1720%" y="629" width="1.4915%" height="15" fill="rgb(221,62,2)" fg:x="272324847" fg:w="4504439"/><text x="90.4220%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,504,439 samples, 1.49%)</title><rect x="90.1720%" y="613" width="1.4915%" height="15" fill="rgb(247,87,22)" fg:x="272324847" fg:w="4504439"/><text x="90.4220%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,504,439 samples, 1.49%)</title><rect x="90.1720%" y="597" width="1.4915%" height="15" fill="rgb(215,73,9)" fg:x="272324847" fg:w="4504439"/><text x="90.4220%" y="607.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (1,892,307 samples, 0.63%)</title><rect x="91.0369%" y="581" width="0.6266%" height="15" fill="rgb(207,175,33)" fg:x="274936979" fg:w="1892307"/><text x="91.2869%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (1,892,307 samples, 0.63%)</title><rect x="91.0369%" y="565" width="0.6266%" height="15" fill="rgb(243,129,54)" fg:x="274936979" fg:w="1892307"/><text x="91.2869%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,892,307 samples, 0.63%)</title><rect x="91.0369%" y="549" width="0.6266%" height="15" fill="rgb(227,119,45)" fg:x="274936979" fg:w="1892307"/><text x="91.2869%" y="559.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,892,307 samples, 0.63%)</title><rect x="91.0369%" y="533" width="0.6266%" height="15" fill="rgb(205,109,36)" fg:x="274936979" fg:w="1892307"/><text x="91.2869%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,892,307 samples, 0.63%)</title><rect x="91.0369%" y="517" width="0.6266%" height="15" fill="rgb(205,6,39)" fg:x="274936979" fg:w="1892307"/><text x="91.2869%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,892,307 samples, 0.63%)</title><rect x="91.0369%" y="501" width="0.6266%" height="15" fill="rgb(221,32,16)" fg:x="274936979" fg:w="1892307"/><text x="91.2869%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,892,307 samples, 0.63%)</title><rect x="91.0369%" y="485" width="0.6266%" height="15" fill="rgb(228,144,50)" fg:x="274936979" fg:w="1892307"/><text x="91.2869%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1,892,307 samples, 0.63%)</title><rect x="91.0369%" y="469" width="0.6266%" height="15" fill="rgb(229,201,53)" fg:x="274936979" fg:w="1892307"/><text x="91.2869%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,892,307 samples, 0.63%)</title><rect x="91.0369%" y="453" width="0.6266%" height="15" fill="rgb(249,153,27)" fg:x="274936979" fg:w="1892307"/><text x="91.2869%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,892,307 samples, 0.63%)</title><rect x="91.0369%" y="437" width="0.6266%" height="15" fill="rgb(227,106,25)" fg:x="274936979" fg:w="1892307"/><text x="91.2869%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,892,307 samples, 0.63%)</title><rect x="91.0369%" y="421" width="0.6266%" height="15" fill="rgb(230,65,29)" fg:x="274936979" fg:w="1892307"/><text x="91.2869%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,892,307 samples, 0.63%)</title><rect x="91.0369%" y="405" width="0.6266%" height="15" fill="rgb(221,57,46)" fg:x="274936979" fg:w="1892307"/><text x="91.2869%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,892,307 samples, 0.63%)</title><rect x="91.0369%" y="389" width="0.6266%" height="15" fill="rgb(229,161,17)" fg:x="274936979" fg:w="1892307"/><text x="91.2869%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,892,307 samples, 0.63%)</title><rect x="91.0369%" y="373" width="0.6266%" height="15" fill="rgb(222,213,11)" fg:x="274936979" fg:w="1892307"/><text x="91.2869%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,892,307 samples, 0.63%)</title><rect x="91.0369%" y="357" width="0.6266%" height="15" fill="rgb(235,35,13)" fg:x="274936979" fg:w="1892307"/><text x="91.2869%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1,892,307 samples, 0.63%)</title><rect x="91.0369%" y="341" width="0.6266%" height="15" fill="rgb(233,158,34)" fg:x="274936979" fg:w="1892307"/><text x="91.2869%" y="351.50"></text></g><g><title>malloc (1,892,307 samples, 0.63%)</title><rect x="91.0369%" y="325" width="0.6266%" height="15" fill="rgb(215,151,48)" fg:x="274936979" fg:w="1892307"/><text x="91.2869%" y="335.50"></text></g><g><title>[libc.so.6] (1,892,307 samples, 0.63%)</title><rect x="91.0369%" y="309" width="0.6266%" height="15" fill="rgb(229,84,14)" fg:x="274936979" fg:w="1892307"/><text x="91.2869%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (9,962,365 samples, 3.30%)</title><rect x="88.7622%" y="1205" width="3.2987%" height="15" fill="rgb(229,68,14)" fg:x="268067215" fg:w="9962365"/><text x="89.0122%" y="1215.50">&lt;se..</text></g><g><title>serde::de::SeqAccess::next_element (9,962,365 samples, 3.30%)</title><rect x="88.7622%" y="1189" width="3.2987%" height="15" fill="rgb(243,106,26)" fg:x="268067215" fg:w="9962365"/><text x="89.0122%" y="1199.50">ser..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (9,962,365 samples, 3.30%)</title><rect x="88.7622%" y="1173" width="3.2987%" height="15" fill="rgb(206,45,38)" fg:x="268067215" fg:w="9962365"/><text x="89.0122%" y="1183.50">&lt;se..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,962,365 samples, 3.30%)</title><rect x="88.7622%" y="1157" width="3.2987%" height="15" fill="rgb(226,6,15)" fg:x="268067215" fg:w="9962365"/><text x="89.0122%" y="1167.50">&lt;co..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,962,365 samples, 3.30%)</title><rect x="88.7622%" y="1141" width="3.2987%" height="15" fill="rgb(232,22,54)" fg:x="268067215" fg:w="9962365"/><text x="89.0122%" y="1151.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,962,365 samples, 3.30%)</title><rect x="88.7622%" y="1125" width="3.2987%" height="15" fill="rgb(229,222,32)" fg:x="268067215" fg:w="9962365"/><text x="89.0122%" y="1135.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9,962,365 samples, 3.30%)</title><rect x="88.7622%" y="1109" width="3.2987%" height="15" fill="rgb(228,62,29)" fg:x="268067215" fg:w="9962365"/><text x="89.0122%" y="1119.50">&lt;se..</text></g><g><title>serde::de::MapAccess::next_entry (9,962,365 samples, 3.30%)</title><rect x="88.7622%" y="1093" width="3.2987%" height="15" fill="rgb(251,103,34)" fg:x="268067215" fg:w="9962365"/><text x="89.0122%" y="1103.50">ser..</text></g><g><title>serde::de::MapAccess::next_entry_seed (9,962,365 samples, 3.30%)</title><rect x="88.7622%" y="1077" width="3.2987%" height="15" fill="rgb(233,12,30)" fg:x="268067215" fg:w="9962365"/><text x="89.0122%" y="1087.50">ser..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (8,359,653 samples, 2.77%)</title><rect x="89.2929%" y="1061" width="2.7680%" height="15" fill="rgb(238,52,0)" fg:x="269669927" fg:w="8359653"/><text x="89.5429%" y="1071.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8,359,653 samples, 2.77%)</title><rect x="89.2929%" y="1045" width="2.7680%" height="15" fill="rgb(223,98,5)" fg:x="269669927" fg:w="8359653"/><text x="89.5429%" y="1055.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8,359,653 samples, 2.77%)</title><rect x="89.2929%" y="1029" width="2.7680%" height="15" fill="rgb(228,75,37)" fg:x="269669927" fg:w="8359653"/><text x="89.5429%" y="1039.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8,359,653 samples, 2.77%)</title><rect x="89.2929%" y="1013" width="2.7680%" height="15" fill="rgb(205,115,49)" fg:x="269669927" fg:w="8359653"/><text x="89.5429%" y="1023.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (8,359,653 samples, 2.77%)</title><rect x="89.2929%" y="997" width="2.7680%" height="15" fill="rgb(250,154,43)" fg:x="269669927" fg:w="8359653"/><text x="89.5429%" y="1007.50">&lt;s..</text></g><g><title>serde::de::SeqAccess::next_element (8,359,653 samples, 2.77%)</title><rect x="89.2929%" y="981" width="2.7680%" height="15" fill="rgb(226,43,29)" fg:x="269669927" fg:w="8359653"/><text x="89.5429%" y="991.50">se..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (8,359,653 samples, 2.77%)</title><rect x="89.2929%" y="965" width="2.7680%" height="15" fill="rgb(249,228,39)" fg:x="269669927" fg:w="8359653"/><text x="89.5429%" y="975.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8,359,653 samples, 2.77%)</title><rect x="89.2929%" y="949" width="2.7680%" height="15" fill="rgb(216,79,43)" fg:x="269669927" fg:w="8359653"/><text x="89.5429%" y="959.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8,359,653 samples, 2.77%)</title><rect x="89.2929%" y="933" width="2.7680%" height="15" fill="rgb(228,95,12)" fg:x="269669927" fg:w="8359653"/><text x="89.5429%" y="943.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8,359,653 samples, 2.77%)</title><rect x="89.2929%" y="917" width="2.7680%" height="15" fill="rgb(249,221,15)" fg:x="269669927" fg:w="8359653"/><text x="89.5429%" y="927.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8,359,653 samples, 2.77%)</title><rect x="89.2929%" y="901" width="2.7680%" height="15" fill="rgb(233,34,13)" fg:x="269669927" fg:w="8359653"/><text x="89.5429%" y="911.50">&lt;s..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,200,294 samples, 0.40%)</title><rect x="91.6635%" y="885" width="0.3974%" height="15" fill="rgb(214,103,39)" fg:x="276829286" fg:w="1200294"/><text x="91.9135%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,200,294 samples, 0.40%)</title><rect x="91.6635%" y="869" width="0.3974%" height="15" fill="rgb(251,126,39)" fg:x="276829286" fg:w="1200294"/><text x="91.9135%" y="879.50"></text></g><g><title>serde::de::MapAccess::next_entry (12,085,190 samples, 4.00%)</title><rect x="88.3674%" y="1509" width="4.0016%" height="15" fill="rgb(214,216,36)" fg:x="266874772" fg:w="12085190"/><text x="88.6174%" y="1519.50">serd..</text></g><g><title>serde::de::MapAccess::next_entry_seed (12,085,190 samples, 4.00%)</title><rect x="88.3674%" y="1493" width="4.0016%" height="15" fill="rgb(220,221,8)" fg:x="266874772" fg:w="12085190"/><text x="88.6174%" y="1503.50">serd..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12,085,190 samples, 4.00%)</title><rect x="88.3674%" y="1477" width="4.0016%" height="15" fill="rgb(240,216,3)" fg:x="266874772" fg:w="12085190"/><text x="88.6174%" y="1487.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,085,190 samples, 4.00%)</title><rect x="88.3674%" y="1461" width="4.0016%" height="15" fill="rgb(232,218,17)" fg:x="266874772" fg:w="12085190"/><text x="88.6174%" y="1471.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,085,190 samples, 4.00%)</title><rect x="88.3674%" y="1445" width="4.0016%" height="15" fill="rgb(229,163,45)" fg:x="266874772" fg:w="12085190"/><text x="88.6174%" y="1455.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,085,190 samples, 4.00%)</title><rect x="88.3674%" y="1429" width="4.0016%" height="15" fill="rgb(231,110,42)" fg:x="266874772" fg:w="12085190"/><text x="88.6174%" y="1439.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (12,085,190 samples, 4.00%)</title><rect x="88.3674%" y="1413" width="4.0016%" height="15" fill="rgb(208,170,48)" fg:x="266874772" fg:w="12085190"/><text x="88.6174%" y="1423.50">&lt;ser..</text></g><g><title>serde::de::SeqAccess::next_element (12,085,190 samples, 4.00%)</title><rect x="88.3674%" y="1397" width="4.0016%" height="15" fill="rgb(239,116,25)" fg:x="266874772" fg:w="12085190"/><text x="88.6174%" y="1407.50">serd..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (12,085,190 samples, 4.00%)</title><rect x="88.3674%" y="1381" width="4.0016%" height="15" fill="rgb(219,200,50)" fg:x="266874772" fg:w="12085190"/><text x="88.6174%" y="1391.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,085,190 samples, 4.00%)</title><rect x="88.3674%" y="1365" width="4.0016%" height="15" fill="rgb(245,200,0)" fg:x="266874772" fg:w="12085190"/><text x="88.6174%" y="1375.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,085,190 samples, 4.00%)</title><rect x="88.3674%" y="1349" width="4.0016%" height="15" fill="rgb(245,119,33)" fg:x="266874772" fg:w="12085190"/><text x="88.6174%" y="1359.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,085,190 samples, 4.00%)</title><rect x="88.3674%" y="1333" width="4.0016%" height="15" fill="rgb(231,125,12)" fg:x="266874772" fg:w="12085190"/><text x="88.6174%" y="1343.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,085,190 samples, 4.00%)</title><rect x="88.3674%" y="1317" width="4.0016%" height="15" fill="rgb(216,96,41)" fg:x="266874772" fg:w="12085190"/><text x="88.6174%" y="1327.50">&lt;ser..</text></g><g><title>serde::de::MapAccess::next_entry (12,085,190 samples, 4.00%)</title><rect x="88.3674%" y="1301" width="4.0016%" height="15" fill="rgb(248,43,45)" fg:x="266874772" fg:w="12085190"/><text x="88.6174%" y="1311.50">serd..</text></g><g><title>serde::de::MapAccess::next_entry_seed (12,085,190 samples, 4.00%)</title><rect x="88.3674%" y="1285" width="4.0016%" height="15" fill="rgb(217,222,7)" fg:x="266874772" fg:w="12085190"/><text x="88.6174%" y="1295.50">serd..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12,085,190 samples, 4.00%)</title><rect x="88.3674%" y="1269" width="4.0016%" height="15" fill="rgb(233,28,6)" fg:x="266874772" fg:w="12085190"/><text x="88.6174%" y="1279.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,085,190 samples, 4.00%)</title><rect x="88.3674%" y="1253" width="4.0016%" height="15" fill="rgb(231,218,15)" fg:x="266874772" fg:w="12085190"/><text x="88.6174%" y="1263.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,085,190 samples, 4.00%)</title><rect x="88.3674%" y="1237" width="4.0016%" height="15" fill="rgb(226,171,48)" fg:x="266874772" fg:w="12085190"/><text x="88.6174%" y="1247.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,085,190 samples, 4.00%)</title><rect x="88.3674%" y="1221" width="4.0016%" height="15" fill="rgb(235,201,9)" fg:x="266874772" fg:w="12085190"/><text x="88.6174%" y="1231.50">&lt;&amp;mu..</text></g><g><title>serde::de::Visitor::visit_borrowed_str (930,382 samples, 0.31%)</title><rect x="92.0610%" y="1205" width="0.3081%" height="15" fill="rgb(217,80,15)" fg:x="278029580" fg:w="930382"/><text x="92.3110%" y="1215.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (930,382 samples, 0.31%)</title><rect x="92.0610%" y="1189" width="0.3081%" height="15" fill="rgb(219,152,8)" fg:x="278029580" fg:w="930382"/><text x="92.3110%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (930,382 samples, 0.31%)</title><rect x="92.0610%" y="1173" width="0.3081%" height="15" fill="rgb(243,107,38)" fg:x="278029580" fg:w="930382"/><text x="92.3110%" y="1183.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (930,382 samples, 0.31%)</title><rect x="92.0610%" y="1157" width="0.3081%" height="15" fill="rgb(231,17,5)" fg:x="278029580" fg:w="930382"/><text x="92.3110%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (930,382 samples, 0.31%)</title><rect x="92.0610%" y="1141" width="0.3081%" height="15" fill="rgb(209,25,54)" fg:x="278029580" fg:w="930382"/><text x="92.3110%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (930,382 samples, 0.31%)</title><rect x="92.0610%" y="1125" width="0.3081%" height="15" fill="rgb(219,0,2)" fg:x="278029580" fg:w="930382"/><text x="92.3110%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (930,382 samples, 0.31%)</title><rect x="92.0610%" y="1109" width="0.3081%" height="15" fill="rgb(246,9,5)" fg:x="278029580" fg:w="930382"/><text x="92.3110%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (930,382 samples, 0.31%)</title><rect x="92.0610%" y="1093" width="0.3081%" height="15" fill="rgb(226,159,4)" fg:x="278029580" fg:w="930382"/><text x="92.3110%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (930,382 samples, 0.31%)</title><rect x="92.0610%" y="1077" width="0.3081%" height="15" fill="rgb(219,175,34)" fg:x="278029580" fg:w="930382"/><text x="92.3110%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (930,382 samples, 0.31%)</title><rect x="92.0610%" y="1061" width="0.3081%" height="15" fill="rgb(236,10,46)" fg:x="278029580" fg:w="930382"/><text x="92.3110%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (930,382 samples, 0.31%)</title><rect x="92.0610%" y="1045" width="0.3081%" height="15" fill="rgb(240,211,16)" fg:x="278029580" fg:w="930382"/><text x="92.3110%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (930,382 samples, 0.31%)</title><rect x="92.0610%" y="1029" width="0.3081%" height="15" fill="rgb(205,3,43)" fg:x="278029580" fg:w="930382"/><text x="92.3110%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (930,382 samples, 0.31%)</title><rect x="92.0610%" y="1013" width="0.3081%" height="15" fill="rgb(245,7,22)" fg:x="278029580" fg:w="930382"/><text x="92.3110%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (930,382 samples, 0.31%)</title><rect x="92.0610%" y="997" width="0.3081%" height="15" fill="rgb(239,132,32)" fg:x="278029580" fg:w="930382"/><text x="92.3110%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (930,382 samples, 0.31%)</title><rect x="92.0610%" y="981" width="0.3081%" height="15" fill="rgb(228,202,34)" fg:x="278029580" fg:w="930382"/><text x="92.3110%" y="991.50"></text></g><g><title>alloc::alloc::alloc (930,382 samples, 0.31%)</title><rect x="92.0610%" y="965" width="0.3081%" height="15" fill="rgb(254,200,22)" fg:x="278029580" fg:w="930382"/><text x="92.3110%" y="975.50"></text></g><g><title>malloc (930,382 samples, 0.31%)</title><rect x="92.0610%" y="949" width="0.3081%" height="15" fill="rgb(219,10,39)" fg:x="278029580" fg:w="930382"/><text x="92.3110%" y="959.50"></text></g><g><title>benchmark::parse_web_layout_trace (21,542,113 samples, 7.13%)</title><rect x="85.9678%" y="1717" width="7.1330%" height="15" fill="rgb(226,210,39)" fg:x="259627883" fg:w="21542113"/><text x="86.2178%" y="1727.50">benchmark:..</text></g><g><title>serde_json::de::from_str (14,295,224 samples, 4.73%)</title><rect x="88.3674%" y="1701" width="4.7334%" height="15" fill="rgb(208,219,16)" fg:x="266874772" fg:w="14295224"/><text x="88.6174%" y="1711.50">serde_..</text></g><g><title>serde_json::de::from_trait (14,295,224 samples, 4.73%)</title><rect x="88.3674%" y="1685" width="4.7334%" height="15" fill="rgb(216,158,51)" fg:x="266874772" fg:w="14295224"/><text x="88.6174%" y="1695.50">serde_..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14,295,224 samples, 4.73%)</title><rect x="88.3674%" y="1669" width="4.7334%" height="15" fill="rgb(233,14,44)" fg:x="266874772" fg:w="14295224"/><text x="88.6174%" y="1679.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14,295,224 samples, 4.73%)</title><rect x="88.3674%" y="1653" width="4.7334%" height="15" fill="rgb(237,97,39)" fg:x="266874772" fg:w="14295224"/><text x="88.6174%" y="1663.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14,295,224 samples, 4.73%)</title><rect x="88.3674%" y="1637" width="4.7334%" height="15" fill="rgb(218,198,43)" fg:x="266874772" fg:w="14295224"/><text x="88.6174%" y="1647.50">&lt;serde..</text></g><g><title>serde::de::MapAccess::next_entry (14,295,224 samples, 4.73%)</title><rect x="88.3674%" y="1621" width="4.7334%" height="15" fill="rgb(231,104,20)" fg:x="266874772" fg:w="14295224"/><text x="88.6174%" y="1631.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (14,295,224 samples, 4.73%)</title><rect x="88.3674%" y="1605" width="4.7334%" height="15" fill="rgb(254,36,13)" fg:x="266874772" fg:w="14295224"/><text x="88.6174%" y="1615.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (14,295,224 samples, 4.73%)</title><rect x="88.3674%" y="1589" width="4.7334%" height="15" fill="rgb(248,14,50)" fg:x="266874772" fg:w="14295224"/><text x="88.6174%" y="1599.50">&lt;serde..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14,295,224 samples, 4.73%)</title><rect x="88.3674%" y="1573" width="4.7334%" height="15" fill="rgb(217,107,29)" fg:x="266874772" fg:w="14295224"/><text x="88.6174%" y="1583.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14,295,224 samples, 4.73%)</title><rect x="88.3674%" y="1557" width="4.7334%" height="15" fill="rgb(251,169,33)" fg:x="266874772" fg:w="14295224"/><text x="88.6174%" y="1567.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14,295,224 samples, 4.73%)</title><rect x="88.3674%" y="1541" width="4.7334%" height="15" fill="rgb(217,108,32)" fg:x="266874772" fg:w="14295224"/><text x="88.6174%" y="1551.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14,295,224 samples, 4.73%)</title><rect x="88.3674%" y="1525" width="4.7334%" height="15" fill="rgb(219,66,42)" fg:x="266874772" fg:w="14295224"/><text x="88.6174%" y="1535.50">&lt;serde..</text></g><g><title>serde::de::MapAccess::next_value (2,210,034 samples, 0.73%)</title><rect x="92.3690%" y="1509" width="0.7318%" height="15" fill="rgb(206,180,7)" fg:x="278959962" fg:w="2210034"/><text x="92.6190%" y="1519.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,210,034 samples, 0.73%)</title><rect x="92.3690%" y="1493" width="0.7318%" height="15" fill="rgb(208,226,31)" fg:x="278959962" fg:w="2210034"/><text x="92.6190%" y="1503.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,210,034 samples, 0.73%)</title><rect x="92.3690%" y="1477" width="0.7318%" height="15" fill="rgb(218,26,49)" fg:x="278959962" fg:w="2210034"/><text x="92.6190%" y="1487.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,210,034 samples, 0.73%)</title><rect x="92.3690%" y="1461" width="0.7318%" height="15" fill="rgb(233,197,48)" fg:x="278959962" fg:w="2210034"/><text x="92.6190%" y="1471.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,210,034 samples, 0.73%)</title><rect x="92.3690%" y="1445" width="0.7318%" height="15" fill="rgb(252,181,51)" fg:x="278959962" fg:w="2210034"/><text x="92.6190%" y="1455.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2,210,034 samples, 0.73%)</title><rect x="92.3690%" y="1429" width="0.7318%" height="15" fill="rgb(253,90,19)" fg:x="278959962" fg:w="2210034"/><text x="92.6190%" y="1439.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (2,210,034 samples, 0.73%)</title><rect x="92.3690%" y="1413" width="0.7318%" height="15" fill="rgb(215,171,30)" fg:x="278959962" fg:w="2210034"/><text x="92.6190%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1701" width="0.8864%" height="15" fill="rgb(214,222,9)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place&lt;[benchmark::LayoutFrame]&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1685" width="0.8864%" height="15" fill="rgb(223,3,22)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;benchmark::LayoutFrame&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1669" width="0.8864%" height="15" fill="rgb(225,196,46)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1653" width="0.8864%" height="15" fill="rgb(209,110,37)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1637" width="0.8864%" height="15" fill="rgb(249,89,12)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1621" width="0.8864%" height="15" fill="rgb(226,27,33)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1631.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1605" width="0.8864%" height="15" fill="rgb(213,82,22)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1615.50"></text></g><g><title>core::mem::drop (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1589" width="0.8864%" height="15" fill="rgb(248,140,0)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1573" width="0.8864%" height="15" fill="rgb(228,106,3)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1583.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1557" width="0.8864%" height="15" fill="rgb(209,23,37)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1567.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1541" width="0.8864%" height="15" fill="rgb(241,93,50)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1525" width="0.8864%" height="15" fill="rgb(253,46,43)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1535.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1509" width="0.8864%" height="15" fill="rgb(226,206,43)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1519.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1493" width="0.8864%" height="15" fill="rgb(217,54,7)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1477" width="0.8864%" height="15" fill="rgb(223,5,52)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1461" width="0.8864%" height="15" fill="rgb(206,52,46)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1445" width="0.8864%" height="15" fill="rgb(253,136,11)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1455.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1429" width="0.8864%" height="15" fill="rgb(208,106,33)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1439.50"></text></g><g><title>core::mem::drop (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1413" width="0.8864%" height="15" fill="rgb(206,54,4)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1397" width="0.8864%" height="15" fill="rgb(213,3,15)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1407.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1381" width="0.8864%" height="15" fill="rgb(252,211,39)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1391.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1365" width="0.8864%" height="15" fill="rgb(223,6,36)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1349" width="0.8864%" height="15" fill="rgb(252,169,45)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1359.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1333" width="0.8864%" height="15" fill="rgb(212,48,26)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1343.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1317" width="0.8864%" height="15" fill="rgb(251,102,48)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1301" width="0.8864%" height="15" fill="rgb(243,208,16)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1285" width="0.8864%" height="15" fill="rgb(219,96,24)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1269" width="0.8864%" height="15" fill="rgb(219,33,29)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1253" width="0.8864%" height="15" fill="rgb(223,176,5)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1237" width="0.8864%" height="15" fill="rgb(228,140,14)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1221" width="0.8864%" height="15" fill="rgb(217,179,31)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1205" width="0.8864%" height="15" fill="rgb(230,9,30)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1215.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1189" width="0.8864%" height="15" fill="rgb(230,136,20)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1199.50"></text></g><g><title>core::mem::drop (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1173" width="0.8864%" height="15" fill="rgb(215,210,22)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1157" width="0.8864%" height="15" fill="rgb(218,43,5)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1141" width="0.8864%" height="15" fill="rgb(216,11,5)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1125" width="0.8864%" height="15" fill="rgb(209,82,29)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1135.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1109" width="0.8864%" height="15" fill="rgb(244,115,12)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1093" width="0.8864%" height="15" fill="rgb(222,82,18)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1077" width="0.8864%" height="15" fill="rgb(249,227,8)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1061" width="0.8864%" height="15" fill="rgb(253,141,45)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1045" width="0.8864%" height="15" fill="rgb(234,184,4)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1029" width="0.8864%" height="15" fill="rgb(218,194,23)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="1013" width="0.8864%" height="15" fill="rgb(235,66,41)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="997" width="0.8864%" height="15" fill="rgb(245,217,1)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="1007.50"></text></g><g><title>cfree (2,676,939 samples, 0.89%)</title><rect x="93.1008%" y="981" width="0.8864%" height="15" fill="rgb(229,91,1)" fg:x="281169996" fg:w="2676939"/><text x="93.3508%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;benchmark::LayoutFrame&gt;&gt; (7,999,320 samples, 2.65%)</title><rect x="93.1008%" y="1717" width="2.6487%" height="15" fill="rgb(207,101,30)" fg:x="281169996" fg:w="7999320"/><text x="93.3508%" y="1727.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;benchmark::LayoutFrame&gt;&gt; (5,322,381 samples, 1.76%)</title><rect x="93.9872%" y="1701" width="1.7623%" height="15" fill="rgb(223,82,49)" fg:x="283846935" fg:w="5322381"/><text x="94.2372%" y="1711.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,322,381 samples, 1.76%)</title><rect x="93.9872%" y="1685" width="1.7623%" height="15" fill="rgb(218,167,17)" fg:x="283846935" fg:w="5322381"/><text x="94.2372%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,322,381 samples, 1.76%)</title><rect x="93.9872%" y="1669" width="1.7623%" height="15" fill="rgb(208,103,14)" fg:x="283846935" fg:w="5322381"/><text x="94.2372%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,322,381 samples, 1.76%)</title><rect x="93.9872%" y="1653" width="1.7623%" height="15" fill="rgb(238,20,8)" fg:x="283846935" fg:w="5322381"/><text x="94.2372%" y="1663.50"></text></g><g><title>alloc::alloc::dealloc (5,322,381 samples, 1.76%)</title><rect x="93.9872%" y="1637" width="1.7623%" height="15" fill="rgb(218,80,54)" fg:x="283846935" fg:w="5322381"/><text x="94.2372%" y="1647.50"></text></g><g><title>cfree (5,322,381 samples, 1.76%)</title><rect x="93.9872%" y="1621" width="1.7623%" height="15" fill="rgb(240,144,17)" fg:x="283846935" fg:w="5322381"/><text x="94.2372%" y="1631.50"></text></g><g><title>[libc.so.6] (5,322,381 samples, 1.76%)</title><rect x="93.9872%" y="1605" width="1.7623%" height="15" fill="rgb(245,27,50)" fg:x="283846935" fg:w="5322381"/><text x="94.2372%" y="1615.50"></text></g><g><title>[libc.so.6] (5,322,381 samples, 1.76%)</title><rect x="93.9872%" y="1589" width="1.7623%" height="15" fill="rgb(251,51,7)" fg:x="283846935" fg:w="5322381"/><text x="94.2372%" y="1599.50"></text></g><g><title>[libc.so.6] (2,680,873 samples, 0.89%)</title><rect x="94.8618%" y="1573" width="0.8877%" height="15" fill="rgb(245,217,29)" fg:x="286488443" fg:w="2680873"/><text x="95.1118%" y="1583.50"></text></g><g><title>std::panic::catch_unwind (269,066,335 samples, 89.09%)</title><rect x="7.5499%" y="1861" width="89.0930%" height="15" fill="rgb(221,176,29)" fg:x="22801157" fg:w="269066335"/><text x="7.7999%" y="1871.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (269,066,335 samples, 89.09%)</title><rect x="7.5499%" y="1845" width="89.0930%" height="15" fill="rgb(212,180,24)" fg:x="22801157" fg:w="269066335"/><text x="7.7999%" y="1855.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (269,066,335 samples, 89.09%)</title><rect x="7.5499%" y="1829" width="89.0930%" height="15" fill="rgb(254,24,2)" fg:x="22801157" fg:w="269066335"/><text x="7.7999%" y="1839.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (269,066,335 samples, 89.09%)</title><rect x="7.5499%" y="1813" width="89.0930%" height="15" fill="rgb(230,100,2)" fg:x="22801157" fg:w="269066335"/><text x="7.7999%" y="1823.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (269,066,335 samples, 89.09%)</title><rect x="7.5499%" y="1797" width="89.0930%" height="15" fill="rgb(219,142,25)" fg:x="22801157" fg:w="269066335"/><text x="7.7999%" y="1807.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (269,066,335 samples, 89.09%)</title><rect x="7.5499%" y="1781" width="89.0930%" height="15" fill="rgb(240,73,43)" fg:x="22801157" fg:w="269066335"/><text x="7.7999%" y="1791.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (269,066,335 samples, 89.09%)</title><rect x="7.5499%" y="1765" width="89.0930%" height="15" fill="rgb(214,114,15)" fg:x="22801157" fg:w="269066335"/><text x="7.7999%" y="1775.50">core::ops::function::FnOnce::call_once</text></g><g><title>benchmark::main (269,066,335 samples, 89.09%)</title><rect x="7.5499%" y="1749" width="89.0930%" height="15" fill="rgb(207,130,4)" fg:x="22801157" fg:w="269066335"/><text x="7.7999%" y="1759.50">benchmark::main</text></g><g><title>benchmark::run_web_browser_layout_trace_benchmark (269,066,335 samples, 89.09%)</title><rect x="7.5499%" y="1733" width="89.0930%" height="15" fill="rgb(221,25,40)" fg:x="22801157" fg:w="269066335"/><text x="7.7999%" y="1743.50">benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1717" width="0.8934%" height="15" fill="rgb(241,184,7)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1701" width="0.8934%" height="15" fill="rgb(235,159,4)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1685" width="0.8934%" height="15" fill="rgb(214,87,48)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1669" width="0.8934%" height="15" fill="rgb(246,198,24)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1653" width="0.8934%" height="15" fill="rgb(209,66,40)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1637" width="0.8934%" height="15" fill="rgb(233,147,39)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1621" width="0.8934%" height="15" fill="rgb(231,145,52)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1605" width="0.8934%" height="15" fill="rgb(206,20,26)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1589" width="0.8934%" height="15" fill="rgb(238,220,4)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1573" width="0.8934%" height="15" fill="rgb(252,195,42)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1583.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1557" width="0.8934%" height="15" fill="rgb(209,10,6)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1541" width="0.8934%" height="15" fill="rgb(229,3,52)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1525" width="0.8934%" height="15" fill="rgb(253,49,37)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1509" width="0.8934%" height="15" fill="rgb(240,103,49)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1493" width="0.8934%" height="15" fill="rgb(250,182,30)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1477" width="0.8934%" height="15" fill="rgb(248,8,30)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1461" width="0.8934%" height="15" fill="rgb(237,120,30)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1445" width="0.8934%" height="15" fill="rgb(221,146,34)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1429" width="0.8934%" height="15" fill="rgb(242,55,13)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1413" width="0.8934%" height="15" fill="rgb(242,112,31)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1397" width="0.8934%" height="15" fill="rgb(249,192,27)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1381" width="0.8934%" height="15" fill="rgb(208,204,44)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1365" width="0.8934%" height="15" fill="rgb(208,93,54)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1349" width="0.8934%" height="15" fill="rgb(242,1,31)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1333" width="0.8934%" height="15" fill="rgb(241,83,25)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1317" width="0.8934%" height="15" fill="rgb(205,169,50)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1301" width="0.8934%" height="15" fill="rgb(239,186,37)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1285" width="0.8934%" height="15" fill="rgb(205,221,10)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1269" width="0.8934%" height="15" fill="rgb(218,196,15)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1253" width="0.8934%" height="15" fill="rgb(218,196,35)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1237" width="0.8934%" height="15" fill="rgb(233,63,24)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1221" width="0.8934%" height="15" fill="rgb(225,8,4)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1205" width="0.8934%" height="15" fill="rgb(234,105,35)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1189" width="0.8934%" height="15" fill="rgb(236,21,32)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1173" width="0.8934%" height="15" fill="rgb(228,109,6)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1157" width="0.8934%" height="15" fill="rgb(229,215,31)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1141" width="0.8934%" height="15" fill="rgb(221,52,54)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1125" width="0.8934%" height="15" fill="rgb(252,129,43)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1109" width="0.8934%" height="15" fill="rgb(248,183,27)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1093" width="0.8934%" height="15" fill="rgb(250,0,22)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1077" width="0.8934%" height="15" fill="rgb(213,166,10)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1061" width="0.8934%" height="15" fill="rgb(207,163,36)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1045" width="0.8934%" height="15" fill="rgb(208,122,22)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1029" width="0.8934%" height="15" fill="rgb(207,104,49)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="1013" width="0.8934%" height="15" fill="rgb(248,211,50)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="997" width="0.8934%" height="15" fill="rgb(217,13,45)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="981" width="0.8934%" height="15" fill="rgb(211,216,49)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="965" width="0.8934%" height="15" fill="rgb(221,58,53)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="949" width="0.8934%" height="15" fill="rgb(220,112,41)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="933" width="0.8934%" height="15" fill="rgb(236,38,28)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="917" width="0.8934%" height="15" fill="rgb(227,195,22)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="901" width="0.8934%" height="15" fill="rgb(214,55,33)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="885" width="0.8934%" height="15" fill="rgb(248,80,13)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="869" width="0.8934%" height="15" fill="rgb(238,52,6)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="853" width="0.8934%" height="15" fill="rgb(224,198,47)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="837" width="0.8934%" height="15" fill="rgb(233,171,20)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="821" width="0.8934%" height="15" fill="rgb(241,30,25)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="805" width="0.8934%" height="15" fill="rgb(207,171,38)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="789" width="0.8934%" height="15" fill="rgb(234,70,1)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="773" width="0.8934%" height="15" fill="rgb(232,178,18)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="757" width="0.8934%" height="15" fill="rgb(241,78,40)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="741" width="0.8934%" height="15" fill="rgb(222,35,25)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="725" width="0.8934%" height="15" fill="rgb(207,92,16)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="709" width="0.8934%" height="15" fill="rgb(216,59,51)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="693" width="0.8934%" height="15" fill="rgb(213,80,28)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="677" width="0.8934%" height="15" fill="rgb(220,93,7)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="661" width="0.8934%" height="15" fill="rgb(225,24,44)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="645" width="0.8934%" height="15" fill="rgb(243,74,40)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="629" width="0.8934%" height="15" fill="rgb(228,39,7)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="613" width="0.8934%" height="15" fill="rgb(227,79,8)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="597" width="0.8934%" height="15" fill="rgb(236,58,11)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="581" width="0.8934%" height="15" fill="rgb(249,63,35)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="565" width="0.8934%" height="15" fill="rgb(252,114,16)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="549" width="0.8934%" height="15" fill="rgb(254,151,24)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="533" width="0.8934%" height="15" fill="rgb(253,54,39)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="517" width="0.8934%" height="15" fill="rgb(243,25,45)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="501" width="0.8934%" height="15" fill="rgb(234,134,9)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="485" width="0.8934%" height="15" fill="rgb(227,166,31)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="469" width="0.8934%" height="15" fill="rgb(245,143,41)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="453" width="0.8934%" height="15" fill="rgb(238,181,32)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="437" width="0.8934%" height="15" fill="rgb(224,113,18)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="421" width="0.8934%" height="15" fill="rgb(240,229,28)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="405" width="0.8934%" height="15" fill="rgb(250,185,3)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="415.50"></text></g><g><title>cfree (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="389" width="0.8934%" height="15" fill="rgb(212,59,25)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="399.50"></text></g><g><title>[libc.so.6] (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="373" width="0.8934%" height="15" fill="rgb(221,87,20)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="383.50"></text></g><g><title>[libc.so.6] (2,698,176 samples, 0.89%)</title><rect x="95.7495%" y="357" width="0.8934%" height="15" fill="rgb(213,74,28)" fg:x="289169316" fg:w="2698176"/><text x="95.9995%" y="367.50"></text></g><g><title>_start (269,567,839 samples, 89.26%)</title><rect x="7.5499%" y="2005" width="89.2591%" height="15" fill="rgb(224,132,34)" fg:x="22801157" fg:w="269567839"/><text x="7.7999%" y="2015.50">_start</text></g><g><title>__libc_start_main (269,567,839 samples, 89.26%)</title><rect x="7.5499%" y="1989" width="89.2591%" height="15" fill="rgb(222,101,24)" fg:x="22801157" fg:w="269567839"/><text x="7.7999%" y="1999.50">__libc_start_main</text></g><g><title>[libc.so.6] (269,567,839 samples, 89.26%)</title><rect x="7.5499%" y="1973" width="89.2591%" height="15" fill="rgb(254,142,4)" fg:x="22801157" fg:w="269567839"/><text x="7.7999%" y="1983.50">[libc.so.6]</text></g><g><title>main (269,567,839 samples, 89.26%)</title><rect x="7.5499%" y="1957" width="89.2591%" height="15" fill="rgb(230,229,49)" fg:x="22801157" fg:w="269567839"/><text x="7.7999%" y="1967.50">main</text></g><g><title>std::rt::lang_start_internal (269,567,839 samples, 89.26%)</title><rect x="7.5499%" y="1941" width="89.2591%" height="15" fill="rgb(238,70,47)" fg:x="22801157" fg:w="269567839"/><text x="7.7999%" y="1951.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (269,567,839 samples, 89.26%)</title><rect x="7.5499%" y="1925" width="89.2591%" height="15" fill="rgb(231,160,17)" fg:x="22801157" fg:w="269567839"/><text x="7.7999%" y="1935.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (269,567,839 samples, 89.26%)</title><rect x="7.5499%" y="1909" width="89.2591%" height="15" fill="rgb(218,68,53)" fg:x="22801157" fg:w="269567839"/><text x="7.7999%" y="1919.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (269,567,839 samples, 89.26%)</title><rect x="7.5499%" y="1893" width="89.2591%" height="15" fill="rgb(236,111,10)" fg:x="22801157" fg:w="269567839"/><text x="7.7999%" y="1903.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (269,567,839 samples, 89.26%)</title><rect x="7.5499%" y="1877" width="89.2591%" height="15" fill="rgb(224,34,41)" fg:x="22801157" fg:w="269567839"/><text x="7.7999%" y="1887.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::rt::init (501,504 samples, 0.17%)</title><rect x="96.6430%" y="1861" width="0.1661%" height="15" fill="rgb(241,118,19)" fg:x="291867492" fg:w="501504"/><text x="96.8930%" y="1871.50"></text></g><g><title>std::sys::pal::unix::init (501,504 samples, 0.17%)</title><rect x="96.6430%" y="1845" width="0.1661%" height="15" fill="rgb(238,129,25)" fg:x="291867492" fg:w="501504"/><text x="96.8930%" y="1855.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::init (501,504 samples, 0.17%)</title><rect x="96.6430%" y="1829" width="0.1661%" height="15" fill="rgb(238,22,31)" fg:x="291867492" fg:w="501504"/><text x="96.8930%" y="1839.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard (501,504 samples, 0.17%)</title><rect x="96.6430%" y="1813" width="0.1661%" height="15" fill="rgb(222,174,48)" fg:x="291867492" fg:w="501504"/><text x="96.8930%" y="1823.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::install_main_guard_linux (501,504 samples, 0.17%)</title><rect x="96.6430%" y="1797" width="0.1661%" height="15" fill="rgb(206,152,40)" fg:x="291867492" fg:w="501504"/><text x="96.8930%" y="1807.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::stack_start_aligned (501,504 samples, 0.17%)</title><rect x="96.6430%" y="1781" width="0.1661%" height="15" fill="rgb(218,99,54)" fg:x="291867492" fg:w="501504"/><text x="96.8930%" y="1791.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::get_stack_start (501,504 samples, 0.17%)</title><rect x="96.6430%" y="1765" width="0.1661%" height="15" fill="rgb(220,174,26)" fg:x="291867492" fg:w="501504"/><text x="96.8930%" y="1775.50"></text></g><g><title>pthread_getattr_np (501,504 samples, 0.17%)</title><rect x="96.6430%" y="1749" width="0.1661%" height="15" fill="rgb(245,116,9)" fg:x="291867492" fg:w="501504"/><text x="96.8930%" y="1759.50"></text></g><g><title>pthread_attr_setaffinity_np (501,504 samples, 0.17%)</title><rect x="96.6430%" y="1733" width="0.1661%" height="15" fill="rgb(209,72,35)" fg:x="291867492" fg:w="501504"/><text x="96.8930%" y="1743.50"></text></g><g><title>malloc (501,504 samples, 0.17%)</title><rect x="96.6430%" y="1717" width="0.1661%" height="15" fill="rgb(226,126,21)" fg:x="291867492" fg:w="501504"/><text x="96.8930%" y="1727.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.17%)</title><rect x="96.6430%" y="1701" width="0.1661%" height="15" fill="rgb(227,192,1)" fg:x="291867492" fg:w="501504"/><text x="96.8930%" y="1711.50"></text></g><g><title>cfree (3,147,139 samples, 1.04%)</title><rect x="96.8090%" y="2005" width="1.0421%" height="15" fill="rgb(237,180,29)" fg:x="292368996" fg:w="3147139"/><text x="97.0590%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,087,305 samples, 1.02%)</title><rect x="97.8511%" y="2005" width="1.0223%" height="15" fill="rgb(230,197,35)" fg:x="295516135" fg:w="3087305"/><text x="98.1011%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,087,305 samples, 1.02%)</title><rect x="97.8511%" y="1989" width="1.0223%" height="15" fill="rgb(246,193,31)" fg:x="295516135" fg:w="3087305"/><text x="98.1011%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,087,305 samples, 1.02%)</title><rect x="97.8511%" y="1973" width="1.0223%" height="15" fill="rgb(241,36,4)" fg:x="295516135" fg:w="3087305"/><text x="98.1011%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,087,305 samples, 1.02%)</title><rect x="97.8511%" y="1957" width="1.0223%" height="15" fill="rgb(241,130,17)" fg:x="295516135" fg:w="3087305"/><text x="98.1011%" y="1967.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,087,305 samples, 1.02%)</title><rect x="97.8511%" y="1941" width="1.0223%" height="15" fill="rgb(206,137,32)" fg:x="295516135" fg:w="3087305"/><text x="98.1011%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,087,305 samples, 1.02%)</title><rect x="97.8511%" y="1925" width="1.0223%" height="15" fill="rgb(237,228,51)" fg:x="295516135" fg:w="3087305"/><text x="98.1011%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,087,305 samples, 1.02%)</title><rect x="97.8511%" y="1909" width="1.0223%" height="15" fill="rgb(243,6,42)" fg:x="295516135" fg:w="3087305"/><text x="98.1011%" y="1919.50"></text></g><g><title>alloc::alloc::dealloc (3,087,305 samples, 1.02%)</title><rect x="97.8511%" y="1893" width="1.0223%" height="15" fill="rgb(251,74,28)" fg:x="295516135" fg:w="3087305"/><text x="98.1011%" y="1903.50"></text></g><g><title>malloc (1,340,769 samples, 0.44%)</title><rect x="98.8734%" y="2005" width="0.4440%" height="15" fill="rgb(218,20,49)" fg:x="298603440" fg:w="1340769"/><text x="99.1234%" y="2015.50"></text></g><g><title>all (302,005,980 samples, 100%)</title><rect x="0.0000%" y="2037" width="100.0000%" height="15" fill="rgb(238,28,14)" fg:x="0" fg:w="302005980"/><text x="0.2500%" y="2047.50"></text></g><g><title>benchmark (302,005,980 samples, 100.00%)</title><rect x="0.0000%" y="2021" width="100.0000%" height="15" fill="rgb(229,40,46)" fg:x="0" fg:w="302005980"/><text x="0.2500%" y="2031.50">benchmark</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,061,771 samples, 0.68%)</title><rect x="99.3173%" y="2005" width="0.6827%" height="15" fill="rgb(244,195,20)" fg:x="299944209" fg:w="2061771"/><text x="99.5673%" y="2015.50"></text></g></svg></svg>