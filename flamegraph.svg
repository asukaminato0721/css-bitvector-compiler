<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="3510" onload="init(evt)" viewBox="0 0 1200 3510" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="3510" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="3493.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="3493.00"> </text><svg id="frames" x="10" width="1180" total_samples="1319727422"><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,706,340 samples, 0.21%)</title><rect x="0.0000%" y="3429" width="0.2051%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2706340"/><text x="0.2500%" y="3439.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,170,766 samples, 0.24%)</title><rect x="0.2051%" y="3429" width="0.2403%" height="15" fill="rgb(217,0,24)" fg:x="2706340" fg:w="3170766"/><text x="0.4551%" y="3439.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (3,170,766 samples, 0.24%)</title><rect x="0.2051%" y="3413" width="0.2403%" height="15" fill="rgb(221,193,54)" fg:x="2706340" fg:w="3170766"/><text x="0.4551%" y="3423.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,876,578 samples, 0.14%)</title><rect x="0.4453%" y="3429" width="0.1422%" height="15" fill="rgb(248,212,6)" fg:x="5877106" fg:w="1876578"/><text x="0.6953%" y="3439.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,539,664 samples, 0.27%)</title><rect x="1.8357%" y="3413" width="0.2682%" height="15" fill="rgb(208,68,35)" fg:x="24226533" fg:w="3539664"/><text x="2.0857%" y="3423.50"></text></g><g><title>[libc.so.6] (23,615,006 samples, 1.79%)</title><rect x="0.5875%" y="3429" width="1.7894%" height="15" fill="rgb(232,128,0)" fg:x="7753684" fg:w="23615006"/><text x="0.8375%" y="3439.50">[..</text></g><g><title>[libc.so.6] (3,602,493 samples, 0.27%)</title><rect x="2.1039%" y="3413" width="0.2730%" height="15" fill="rgb(207,160,47)" fg:x="27766197" fg:w="3602493"/><text x="2.3539%" y="3423.50"></text></g><g><title>[main] (3,070,171 samples, 0.23%)</title><rect x="2.3769%" y="3429" width="0.2326%" height="15" fill="rgb(228,23,34)" fg:x="31368690" fg:w="3070171"/><text x="2.6269%" y="3439.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,070,171 samples, 0.23%)</title><rect x="2.3769%" y="3413" width="0.2326%" height="15" fill="rgb(218,30,26)" fg:x="31368690" fg:w="3070171"/><text x="2.6269%" y="3423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,906,951 samples, 0.22%)</title><rect x="2.8866%" y="3413" width="0.2203%" height="15" fill="rgb(220,122,19)" fg:x="38095438" fg:w="2906951"/><text x="3.1366%" y="3423.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,906,951 samples, 0.22%)</title><rect x="2.8866%" y="3397" width="0.2203%" height="15" fill="rgb(250,228,42)" fg:x="38095438" fg:w="2906951"/><text x="3.1366%" y="3407.50"></text></g><g><title>alloc::slice::hack::to_vec (2,906,951 samples, 0.22%)</title><rect x="2.8866%" y="3381" width="0.2203%" height="15" fill="rgb(240,193,28)" fg:x="38095438" fg:w="2906951"/><text x="3.1366%" y="3391.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,906,951 samples, 0.22%)</title><rect x="2.8866%" y="3365" width="0.2203%" height="15" fill="rgb(216,20,37)" fg:x="38095438" fg:w="2906951"/><text x="3.1366%" y="3375.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (2,906,951 samples, 0.22%)</title><rect x="2.8866%" y="3349" width="0.2203%" height="15" fill="rgb(206,188,39)" fg:x="38095438" fg:w="2906951"/><text x="3.1366%" y="3359.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,906,951 samples, 0.22%)</title><rect x="2.8866%" y="3333" width="0.2203%" height="15" fill="rgb(217,207,13)" fg:x="38095438" fg:w="2906951"/><text x="3.1366%" y="3343.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,386,366 samples, 0.26%)</title><rect x="3.1069%" y="3413" width="0.2566%" height="15" fill="rgb(231,73,38)" fg:x="41002389" fg:w="3386366"/><text x="3.3569%" y="3423.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,386,366 samples, 0.26%)</title><rect x="3.1069%" y="3397" width="0.2566%" height="15" fill="rgb(225,20,46)" fg:x="41002389" fg:w="3386366"/><text x="3.3569%" y="3407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,386,366 samples, 0.26%)</title><rect x="3.1069%" y="3381" width="0.2566%" height="15" fill="rgb(210,31,41)" fg:x="41002389" fg:w="3386366"/><text x="3.3569%" y="3391.50"></text></g><g><title>core::clone::Clone::clone (3,386,366 samples, 0.26%)</title><rect x="3.1069%" y="3365" width="0.2566%" height="15" fill="rgb(221,200,47)" fg:x="41002389" fg:w="3386366"/><text x="3.3569%" y="3375.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,386,429 samples, 0.26%)</title><rect x="3.3635%" y="3413" width="0.2566%" height="15" fill="rgb(226,26,5)" fg:x="44388755" fg:w="3386429"/><text x="3.6135%" y="3423.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (3,386,429 samples, 0.26%)</title><rect x="3.3635%" y="3397" width="0.2566%" height="15" fill="rgb(249,33,26)" fg:x="44388755" fg:w="3386429"/><text x="3.6135%" y="3407.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (3,386,429 samples, 0.26%)</title><rect x="3.3635%" y="3381" width="0.2566%" height="15" fill="rgb(235,183,28)" fg:x="44388755" fg:w="3386429"/><text x="3.6135%" y="3391.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3,386,429 samples, 0.26%)</title><rect x="3.3635%" y="3365" width="0.2566%" height="15" fill="rgb(221,5,38)" fg:x="44388755" fg:w="3386429"/><text x="3.6135%" y="3375.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3,386,429 samples, 0.26%)</title><rect x="3.3635%" y="3349" width="0.2566%" height="15" fill="rgb(247,18,42)" fg:x="44388755" fg:w="3386429"/><text x="3.6135%" y="3359.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (3,386,429 samples, 0.26%)</title><rect x="3.3635%" y="3333" width="0.2566%" height="15" fill="rgb(241,131,45)" fg:x="44388755" fg:w="3386429"/><text x="3.6135%" y="3343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,386,429 samples, 0.26%)</title><rect x="3.3635%" y="3317" width="0.2566%" height="15" fill="rgb(249,31,29)" fg:x="44388755" fg:w="3386429"/><text x="3.6135%" y="3327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,386,429 samples, 0.26%)</title><rect x="3.3635%" y="3301" width="0.2566%" height="15" fill="rgb(225,111,53)" fg:x="44388755" fg:w="3386429"/><text x="3.6135%" y="3311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,386,429 samples, 0.26%)</title><rect x="3.3635%" y="3285" width="0.2566%" height="15" fill="rgb(238,160,17)" fg:x="44388755" fg:w="3386429"/><text x="3.6135%" y="3295.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,386,429 samples, 0.26%)</title><rect x="3.3635%" y="3269" width="0.2566%" height="15" fill="rgb(214,148,48)" fg:x="44388755" fg:w="3386429"/><text x="3.6135%" y="3279.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,386,429 samples, 0.26%)</title><rect x="3.3635%" y="3253" width="0.2566%" height="15" fill="rgb(232,36,49)" fg:x="44388755" fg:w="3386429"/><text x="3.6135%" y="3263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,386,429 samples, 0.26%)</title><rect x="3.3635%" y="3237" width="0.2566%" height="15" fill="rgb(209,103,24)" fg:x="44388755" fg:w="3386429"/><text x="3.6135%" y="3247.50"></text></g><g><title>alloc::alloc::dealloc (3,386,429 samples, 0.26%)</title><rect x="3.3635%" y="3221" width="0.2566%" height="15" fill="rgb(229,88,8)" fg:x="44388755" fg:w="3386429"/><text x="3.6135%" y="3231.50"></text></g><g><title>[unknown] (1,831,403 samples, 0.14%)</title><rect x="3.6201%" y="3413" width="0.1388%" height="15" fill="rgb(213,181,19)" fg:x="47775184" fg:w="1831403"/><text x="3.8701%" y="3423.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,831,403 samples, 0.14%)</title><rect x="3.6201%" y="3397" width="0.1388%" height="15" fill="rgb(254,191,54)" fg:x="47775184" fg:w="1831403"/><text x="3.8701%" y="3407.50"></text></g><g><title>__rdl_dealloc (6,750,055 samples, 0.51%)</title><rect x="3.7589%" y="3413" width="0.5115%" height="15" fill="rgb(241,83,37)" fg:x="49606587" fg:w="6750055"/><text x="4.0089%" y="3423.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (6,750,055 samples, 0.51%)</title><rect x="3.7589%" y="3397" width="0.5115%" height="15" fill="rgb(233,36,39)" fg:x="49606587" fg:w="6750055"/><text x="4.0089%" y="3407.50"></text></g><g><title>[unknown] (25,189,199 samples, 1.91%)</title><rect x="2.6095%" y="3429" width="1.9087%" height="15" fill="rgb(226,3,54)" fg:x="34438861" fg:w="25189199"/><text x="2.8595%" y="3439.50">[..</text></g><g><title>cfree (3,271,418 samples, 0.25%)</title><rect x="4.2703%" y="3413" width="0.2479%" height="15" fill="rgb(245,192,40)" fg:x="56356642" fg:w="3271418"/><text x="4.5203%" y="3423.50"></text></g><g><title>__rdl_dealloc (9,505,588 samples, 0.72%)</title><rect x="4.5182%" y="3429" width="0.7203%" height="15" fill="rgb(238,167,29)" fg:x="59628060" fg:w="9505588"/><text x="4.7682%" y="3439.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (9,505,588 samples, 0.72%)</title><rect x="4.5182%" y="3413" width="0.7203%" height="15" fill="rgb(232,182,51)" fg:x="59628060" fg:w="9505588"/><text x="4.7682%" y="3423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;main::benchmark::WebLayoutFrameResult&gt;&gt; (6,619,625 samples, 0.50%)</title><rect x="5.2385%" y="3157" width="0.5016%" height="15" fill="rgb(231,60,39)" fg:x="69133648" fg:w="6619625"/><text x="5.4885%" y="3167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,619,625 samples, 0.50%)</title><rect x="5.2385%" y="3141" width="0.5016%" height="15" fill="rgb(208,69,12)" fg:x="69133648" fg:w="6619625"/><text x="5.4885%" y="3151.50"></text></g><g><title>core::ptr::drop_in_place&lt;[main::benchmark::WebLayoutFrameResult]&gt; (6,619,625 samples, 0.50%)</title><rect x="5.2385%" y="3125" width="0.5016%" height="15" fill="rgb(235,93,37)" fg:x="69133648" fg:w="6619625"/><text x="5.4885%" y="3135.50"></text></g><g><title>core::ptr::drop_in_place&lt;main::benchmark::WebLayoutFrameResult&gt; (6,619,625 samples, 0.50%)</title><rect x="5.2385%" y="3109" width="0.5016%" height="15" fill="rgb(213,116,39)" fg:x="69133648" fg:w="6619625"/><text x="5.4885%" y="3119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6,619,625 samples, 0.50%)</title><rect x="5.2385%" y="3093" width="0.5016%" height="15" fill="rgb(222,207,29)" fg:x="69133648" fg:w="6619625"/><text x="5.4885%" y="3103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6,619,625 samples, 0.50%)</title><rect x="5.2385%" y="3077" width="0.5016%" height="15" fill="rgb(206,96,30)" fg:x="69133648" fg:w="6619625"/><text x="5.4885%" y="3087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6,619,625 samples, 0.50%)</title><rect x="5.2385%" y="3061" width="0.5016%" height="15" fill="rgb(218,138,4)" fg:x="69133648" fg:w="6619625"/><text x="5.4885%" y="3071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,619,625 samples, 0.50%)</title><rect x="5.2385%" y="3045" width="0.5016%" height="15" fill="rgb(250,191,14)" fg:x="69133648" fg:w="6619625"/><text x="5.4885%" y="3055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,619,625 samples, 0.50%)</title><rect x="5.2385%" y="3029" width="0.5016%" height="15" fill="rgb(239,60,40)" fg:x="69133648" fg:w="6619625"/><text x="5.4885%" y="3039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,619,625 samples, 0.50%)</title><rect x="5.2385%" y="3013" width="0.5016%" height="15" fill="rgb(206,27,48)" fg:x="69133648" fg:w="6619625"/><text x="5.4885%" y="3023.50"></text></g><g><title>alloc::alloc::dealloc (6,619,625 samples, 0.50%)</title><rect x="5.2385%" y="2997" width="0.5016%" height="15" fill="rgb(225,35,8)" fg:x="69133648" fg:w="6619625"/><text x="5.4885%" y="3007.50"></text></g><g><title>cfree (6,619,625 samples, 0.50%)</title><rect x="5.2385%" y="2981" width="0.5016%" height="15" fill="rgb(250,213,24)" fg:x="69133648" fg:w="6619625"/><text x="5.4885%" y="2991.50"></text></g><g><title>[libc.so.6] (6,619,625 samples, 0.50%)</title><rect x="5.2385%" y="2965" width="0.5016%" height="15" fill="rgb(247,123,22)" fg:x="69133648" fg:w="6619625"/><text x="5.4885%" y="2975.50"></text></g><g><title>[libc.so.6] (6,619,625 samples, 0.50%)</title><rect x="5.2385%" y="2949" width="0.5016%" height="15" fill="rgb(231,138,38)" fg:x="69133648" fg:w="6619625"/><text x="5.4885%" y="2959.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,814,801 samples, 0.21%)</title><rect x="5.7401%" y="3061" width="0.2133%" height="15" fill="rgb(231,145,46)" fg:x="75753273" fg:w="2814801"/><text x="5.9901%" y="3071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,814,801 samples, 0.21%)</title><rect x="5.7401%" y="3045" width="0.2133%" height="15" fill="rgb(251,118,11)" fg:x="75753273" fg:w="2814801"/><text x="5.9901%" y="3055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,814,801 samples, 0.21%)</title><rect x="5.7401%" y="3029" width="0.2133%" height="15" fill="rgb(217,147,25)" fg:x="75753273" fg:w="2814801"/><text x="5.9901%" y="3039.50"></text></g><g><title>alloc::slice::hack::to_vec (2,814,801 samples, 0.21%)</title><rect x="5.7401%" y="3013" width="0.2133%" height="15" fill="rgb(247,81,37)" fg:x="75753273" fg:w="2814801"/><text x="5.9901%" y="3023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,814,801 samples, 0.21%)</title><rect x="5.7401%" y="2997" width="0.2133%" height="15" fill="rgb(209,12,38)" fg:x="75753273" fg:w="2814801"/><text x="5.9901%" y="3007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,814,801 samples, 0.21%)</title><rect x="5.7401%" y="2981" width="0.2133%" height="15" fill="rgb(227,1,9)" fg:x="75753273" fg:w="2814801"/><text x="5.9901%" y="2991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,814,801 samples, 0.21%)</title><rect x="5.7401%" y="2965" width="0.2133%" height="15" fill="rgb(248,47,43)" fg:x="75753273" fg:w="2814801"/><text x="5.9901%" y="2975.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,814,801 samples, 0.21%)</title><rect x="5.7401%" y="2949" width="0.2133%" height="15" fill="rgb(221,10,30)" fg:x="75753273" fg:w="2814801"/><text x="5.9901%" y="2959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,814,801 samples, 0.21%)</title><rect x="5.7401%" y="2933" width="0.2133%" height="15" fill="rgb(210,229,1)" fg:x="75753273" fg:w="2814801"/><text x="5.9901%" y="2943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,814,801 samples, 0.21%)</title><rect x="5.7401%" y="2917" width="0.2133%" height="15" fill="rgb(222,148,37)" fg:x="75753273" fg:w="2814801"/><text x="5.9901%" y="2927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,814,801 samples, 0.21%)</title><rect x="5.7401%" y="2901" width="0.2133%" height="15" fill="rgb(234,67,33)" fg:x="75753273" fg:w="2814801"/><text x="5.9901%" y="2911.50"></text></g><g><title>alloc::alloc::alloc (2,814,801 samples, 0.21%)</title><rect x="5.7401%" y="2885" width="0.2133%" height="15" fill="rgb(247,98,35)" fg:x="75753273" fg:w="2814801"/><text x="5.9901%" y="2895.50"></text></g><g><title>malloc (2,814,801 samples, 0.21%)</title><rect x="5.7401%" y="2869" width="0.2133%" height="15" fill="rgb(247,138,52)" fg:x="75753273" fg:w="2814801"/><text x="5.9901%" y="2879.50"></text></g><g><title>[unknown] (2,814,801 samples, 0.21%)</title><rect x="5.7401%" y="2853" width="0.2133%" height="15" fill="rgb(213,79,30)" fg:x="75753273" fg:w="2814801"/><text x="5.9901%" y="2863.50"></text></g><g><title>[libc.so.6] (2,814,801 samples, 0.21%)</title><rect x="5.7401%" y="2837" width="0.2133%" height="15" fill="rgb(246,177,23)" fg:x="75753273" fg:w="2814801"/><text x="5.9901%" y="2847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,809,620 samples, 0.21%)</title><rect x="5.9534%" y="3045" width="0.2129%" height="15" fill="rgb(230,62,27)" fg:x="78568074" fg:w="2809620"/><text x="6.2034%" y="3055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,809,620 samples, 0.21%)</title><rect x="5.9534%" y="3029" width="0.2129%" height="15" fill="rgb(216,154,8)" fg:x="78568074" fg:w="2809620"/><text x="6.2034%" y="3039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,809,620 samples, 0.21%)</title><rect x="5.9534%" y="3013" width="0.2129%" height="15" fill="rgb(244,35,45)" fg:x="78568074" fg:w="2809620"/><text x="6.2034%" y="3023.50"></text></g><g><title>alloc::slice::hack::to_vec (2,809,620 samples, 0.21%)</title><rect x="5.9534%" y="2997" width="0.2129%" height="15" fill="rgb(251,115,12)" fg:x="78568074" fg:w="2809620"/><text x="6.2034%" y="3007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,809,620 samples, 0.21%)</title><rect x="5.9534%" y="2981" width="0.2129%" height="15" fill="rgb(240,54,50)" fg:x="78568074" fg:w="2809620"/><text x="6.2034%" y="2991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,809,620 samples, 0.21%)</title><rect x="5.9534%" y="2965" width="0.2129%" height="15" fill="rgb(233,84,52)" fg:x="78568074" fg:w="2809620"/><text x="6.2034%" y="2975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,809,620 samples, 0.21%)</title><rect x="5.9534%" y="2949" width="0.2129%" height="15" fill="rgb(207,117,47)" fg:x="78568074" fg:w="2809620"/><text x="6.2034%" y="2959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,809,620 samples, 0.21%)</title><rect x="5.9534%" y="2933" width="0.2129%" height="15" fill="rgb(249,43,39)" fg:x="78568074" fg:w="2809620"/><text x="6.2034%" y="2943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,809,620 samples, 0.21%)</title><rect x="5.9534%" y="2917" width="0.2129%" height="15" fill="rgb(209,38,44)" fg:x="78568074" fg:w="2809620"/><text x="6.2034%" y="2927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,809,620 samples, 0.21%)</title><rect x="5.9534%" y="2901" width="0.2129%" height="15" fill="rgb(236,212,23)" fg:x="78568074" fg:w="2809620"/><text x="6.2034%" y="2911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,809,620 samples, 0.21%)</title><rect x="5.9534%" y="2885" width="0.2129%" height="15" fill="rgb(242,79,21)" fg:x="78568074" fg:w="2809620"/><text x="6.2034%" y="2895.50"></text></g><g><title>alloc::alloc::alloc (2,809,620 samples, 0.21%)</title><rect x="5.9534%" y="2869" width="0.2129%" height="15" fill="rgb(211,96,35)" fg:x="78568074" fg:w="2809620"/><text x="6.2034%" y="2879.50"></text></g><g><title>malloc (2,809,620 samples, 0.21%)</title><rect x="5.9534%" y="2853" width="0.2129%" height="15" fill="rgb(253,215,40)" fg:x="78568074" fg:w="2809620"/><text x="6.2034%" y="2863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,249,660 samples, 0.47%)</title><rect x="6.1663%" y="2981" width="0.4736%" height="15" fill="rgb(211,81,21)" fg:x="81377694" fg:w="6249660"/><text x="6.4163%" y="2991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,249,660 samples, 0.47%)</title><rect x="6.1663%" y="2965" width="0.4736%" height="15" fill="rgb(208,190,38)" fg:x="81377694" fg:w="6249660"/><text x="6.4163%" y="2975.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,249,660 samples, 0.47%)</title><rect x="6.1663%" y="2949" width="0.4736%" height="15" fill="rgb(235,213,38)" fg:x="81377694" fg:w="6249660"/><text x="6.4163%" y="2959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,249,660 samples, 0.47%)</title><rect x="6.1663%" y="2933" width="0.4736%" height="15" fill="rgb(237,122,38)" fg:x="81377694" fg:w="6249660"/><text x="6.4163%" y="2943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,249,660 samples, 0.47%)</title><rect x="6.1663%" y="2917" width="0.4736%" height="15" fill="rgb(244,218,35)" fg:x="81377694" fg:w="6249660"/><text x="6.4163%" y="2927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,249,660 samples, 0.47%)</title><rect x="6.1663%" y="2901" width="0.4736%" height="15" fill="rgb(240,68,47)" fg:x="81377694" fg:w="6249660"/><text x="6.4163%" y="2911.50"></text></g><g><title>alloc::alloc::alloc (6,249,660 samples, 0.47%)</title><rect x="6.1663%" y="2885" width="0.4736%" height="15" fill="rgb(210,16,53)" fg:x="81377694" fg:w="6249660"/><text x="6.4163%" y="2895.50"></text></g><g><title>malloc (6,249,660 samples, 0.47%)</title><rect x="6.1663%" y="2869" width="0.4736%" height="15" fill="rgb(235,124,12)" fg:x="81377694" fg:w="6249660"/><text x="6.4163%" y="2879.50"></text></g><g><title>[libc.so.6] (6,249,660 samples, 0.47%)</title><rect x="6.1663%" y="2853" width="0.4736%" height="15" fill="rgb(224,169,11)" fg:x="81377694" fg:w="6249660"/><text x="6.4163%" y="2863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,064,741 samples, 0.76%)</title><rect x="6.1663%" y="3045" width="0.7626%" height="15" fill="rgb(250,166,2)" fg:x="81377694" fg:w="10064741"/><text x="6.4163%" y="3055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,064,741 samples, 0.76%)</title><rect x="6.1663%" y="3029" width="0.7626%" height="15" fill="rgb(242,216,29)" fg:x="81377694" fg:w="10064741"/><text x="6.4163%" y="3039.50"></text></g><g><title>alloc::slice::hack::to_vec (10,064,741 samples, 0.76%)</title><rect x="6.1663%" y="3013" width="0.7626%" height="15" fill="rgb(230,116,27)" fg:x="81377694" fg:w="10064741"/><text x="6.4163%" y="3023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,064,741 samples, 0.76%)</title><rect x="6.1663%" y="2997" width="0.7626%" height="15" fill="rgb(228,99,48)" fg:x="81377694" fg:w="10064741"/><text x="6.4163%" y="3007.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3,815,081 samples, 0.29%)</title><rect x="6.6398%" y="2981" width="0.2891%" height="15" fill="rgb(253,11,6)" fg:x="87627354" fg:w="3815081"/><text x="6.8898%" y="2991.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,096,271 samples, 0.16%)</title><rect x="6.9289%" y="1413" width="0.1588%" height="15" fill="rgb(247,143,39)" fg:x="91442435" fg:w="2096271"/><text x="7.1789%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,096,271 samples, 0.16%)</title><rect x="6.9289%" y="1397" width="0.1588%" height="15" fill="rgb(236,97,10)" fg:x="91442435" fg:w="2096271"/><text x="7.1789%" y="1407.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,096,271 samples, 0.16%)</title><rect x="6.9289%" y="1381" width="0.1588%" height="15" fill="rgb(233,208,19)" fg:x="91442435" fg:w="2096271"/><text x="7.1789%" y="1391.50"></text></g><g><title>alloc::slice::hack::to_vec (2,096,271 samples, 0.16%)</title><rect x="6.9289%" y="1365" width="0.1588%" height="15" fill="rgb(216,164,2)" fg:x="91442435" fg:w="2096271"/><text x="7.1789%" y="1375.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,096,271 samples, 0.16%)</title><rect x="6.9289%" y="1349" width="0.1588%" height="15" fill="rgb(220,129,5)" fg:x="91442435" fg:w="2096271"/><text x="7.1789%" y="1359.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,096,271 samples, 0.16%)</title><rect x="6.9289%" y="1333" width="0.1588%" height="15" fill="rgb(242,17,10)" fg:x="91442435" fg:w="2096271"/><text x="7.1789%" y="1343.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,096,271 samples, 0.16%)</title><rect x="6.9289%" y="1317" width="0.1588%" height="15" fill="rgb(242,107,0)" fg:x="91442435" fg:w="2096271"/><text x="7.1789%" y="1327.50"></text></g><g><title>[libc.so.6] (2,096,271 samples, 0.16%)</title><rect x="6.9289%" y="1301" width="0.1588%" height="15" fill="rgb(251,28,31)" fg:x="91442435" fg:w="2096271"/><text x="7.1789%" y="1311.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,873,285 samples, 0.14%)</title><rect x="7.0877%" y="1397" width="0.1419%" height="15" fill="rgb(233,223,10)" fg:x="93538706" fg:w="1873285"/><text x="7.3377%" y="1407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,873,285 samples, 0.14%)</title><rect x="7.0877%" y="1381" width="0.1419%" height="15" fill="rgb(215,21,27)" fg:x="93538706" fg:w="1873285"/><text x="7.3377%" y="1391.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,873,285 samples, 0.14%)</title><rect x="7.0877%" y="1365" width="0.1419%" height="15" fill="rgb(232,23,21)" fg:x="93538706" fg:w="1873285"/><text x="7.3377%" y="1375.50"></text></g><g><title>alloc::slice::hack::to_vec (1,873,285 samples, 0.14%)</title><rect x="7.0877%" y="1349" width="0.1419%" height="15" fill="rgb(244,5,23)" fg:x="93538706" fg:w="1873285"/><text x="7.3377%" y="1359.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,873,285 samples, 0.14%)</title><rect x="7.0877%" y="1333" width="0.1419%" height="15" fill="rgb(226,81,46)" fg:x="93538706" fg:w="1873285"/><text x="7.3377%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,873,285 samples, 0.14%)</title><rect x="7.0877%" y="1317" width="0.1419%" height="15" fill="rgb(247,70,30)" fg:x="93538706" fg:w="1873285"/><text x="7.3377%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,873,285 samples, 0.14%)</title><rect x="7.0877%" y="1301" width="0.1419%" height="15" fill="rgb(212,68,19)" fg:x="93538706" fg:w="1873285"/><text x="7.3377%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,873,285 samples, 0.14%)</title><rect x="7.0877%" y="1285" width="0.1419%" height="15" fill="rgb(240,187,13)" fg:x="93538706" fg:w="1873285"/><text x="7.3377%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,873,285 samples, 0.14%)</title><rect x="7.0877%" y="1269" width="0.1419%" height="15" fill="rgb(223,113,26)" fg:x="93538706" fg:w="1873285"/><text x="7.3377%" y="1279.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,873,285 samples, 0.14%)</title><rect x="7.0877%" y="1253" width="0.1419%" height="15" fill="rgb(206,192,2)" fg:x="93538706" fg:w="1873285"/><text x="7.3377%" y="1263.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,873,285 samples, 0.14%)</title><rect x="7.0877%" y="1237" width="0.1419%" height="15" fill="rgb(241,108,4)" fg:x="93538706" fg:w="1873285"/><text x="7.3377%" y="1247.50"></text></g><g><title>alloc::alloc::alloc (1,873,285 samples, 0.14%)</title><rect x="7.0877%" y="1221" width="0.1419%" height="15" fill="rgb(247,173,49)" fg:x="93538706" fg:w="1873285"/><text x="7.3377%" y="1231.50"></text></g><g><title>malloc (1,873,285 samples, 0.14%)</title><rect x="7.0877%" y="1205" width="0.1419%" height="15" fill="rgb(224,114,35)" fg:x="93538706" fg:w="1873285"/><text x="7.3377%" y="1215.50"></text></g><g><title>[libc.so.6] (1,873,285 samples, 0.14%)</title><rect x="7.0877%" y="1189" width="0.1419%" height="15" fill="rgb(245,159,27)" fg:x="93538706" fg:w="1873285"/><text x="7.3377%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,925,365 samples, 0.45%)</title><rect x="6.9289%" y="1685" width="0.4490%" height="15" fill="rgb(245,172,44)" fg:x="91442435" fg:w="5925365"/><text x="7.1789%" y="1695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,925,365 samples, 0.45%)</title><rect x="6.9289%" y="1669" width="0.4490%" height="15" fill="rgb(236,23,11)" fg:x="91442435" fg:w="5925365"/><text x="7.1789%" y="1679.50"></text></g><g><title>alloc::slice::hack::to_vec (5,925,365 samples, 0.45%)</title><rect x="6.9289%" y="1653" width="0.4490%" height="15" fill="rgb(205,117,38)" fg:x="91442435" fg:w="5925365"/><text x="7.1789%" y="1663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,925,365 samples, 0.45%)</title><rect x="6.9289%" y="1637" width="0.4490%" height="15" fill="rgb(237,72,25)" fg:x="91442435" fg:w="5925365"/><text x="7.1789%" y="1647.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,925,365 samples, 0.45%)</title><rect x="6.9289%" y="1621" width="0.4490%" height="15" fill="rgb(244,70,9)" fg:x="91442435" fg:w="5925365"/><text x="7.1789%" y="1631.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,925,365 samples, 0.45%)</title><rect x="6.9289%" y="1605" width="0.4490%" height="15" fill="rgb(217,125,39)" fg:x="91442435" fg:w="5925365"/><text x="7.1789%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,925,365 samples, 0.45%)</title><rect x="6.9289%" y="1589" width="0.4490%" height="15" fill="rgb(235,36,10)" fg:x="91442435" fg:w="5925365"/><text x="7.1789%" y="1599.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,925,365 samples, 0.45%)</title><rect x="6.9289%" y="1573" width="0.4490%" height="15" fill="rgb(251,123,47)" fg:x="91442435" fg:w="5925365"/><text x="7.1789%" y="1583.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,925,365 samples, 0.45%)</title><rect x="6.9289%" y="1557" width="0.4490%" height="15" fill="rgb(221,13,13)" fg:x="91442435" fg:w="5925365"/><text x="7.1789%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,925,365 samples, 0.45%)</title><rect x="6.9289%" y="1541" width="0.4490%" height="15" fill="rgb(238,131,9)" fg:x="91442435" fg:w="5925365"/><text x="7.1789%" y="1551.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,925,365 samples, 0.45%)</title><rect x="6.9289%" y="1525" width="0.4490%" height="15" fill="rgb(211,50,8)" fg:x="91442435" fg:w="5925365"/><text x="7.1789%" y="1535.50"></text></g><g><title>alloc::slice::hack::to_vec (5,925,365 samples, 0.45%)</title><rect x="6.9289%" y="1509" width="0.4490%" height="15" fill="rgb(245,182,24)" fg:x="91442435" fg:w="5925365"/><text x="7.1789%" y="1519.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,925,365 samples, 0.45%)</title><rect x="6.9289%" y="1493" width="0.4490%" height="15" fill="rgb(242,14,37)" fg:x="91442435" fg:w="5925365"/><text x="7.1789%" y="1503.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (5,925,365 samples, 0.45%)</title><rect x="6.9289%" y="1477" width="0.4490%" height="15" fill="rgb(246,228,12)" fg:x="91442435" fg:w="5925365"/><text x="7.1789%" y="1487.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (5,925,365 samples, 0.45%)</title><rect x="6.9289%" y="1461" width="0.4490%" height="15" fill="rgb(213,55,15)" fg:x="91442435" fg:w="5925365"/><text x="7.1789%" y="1471.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (5,925,365 samples, 0.45%)</title><rect x="6.9289%" y="1445" width="0.4490%" height="15" fill="rgb(209,9,3)" fg:x="91442435" fg:w="5925365"/><text x="7.1789%" y="1455.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5,925,365 samples, 0.45%)</title><rect x="6.9289%" y="1429" width="0.4490%" height="15" fill="rgb(230,59,30)" fg:x="91442435" fg:w="5925365"/><text x="7.1789%" y="1439.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (3,829,094 samples, 0.29%)</title><rect x="7.0877%" y="1413" width="0.2901%" height="15" fill="rgb(209,121,21)" fg:x="93538706" fg:w="3829094"/><text x="7.3377%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,955,809 samples, 0.15%)</title><rect x="7.2297%" y="1397" width="0.1482%" height="15" fill="rgb(220,109,13)" fg:x="95411991" fg:w="1955809"/><text x="7.4797%" y="1407.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,955,809 samples, 0.15%)</title><rect x="7.2297%" y="1381" width="0.1482%" height="15" fill="rgb(232,18,1)" fg:x="95411991" fg:w="1955809"/><text x="7.4797%" y="1391.50"></text></g><g><title>alloc::slice::hack::to_vec (1,955,809 samples, 0.15%)</title><rect x="7.2297%" y="1365" width="0.1482%" height="15" fill="rgb(215,41,42)" fg:x="95411991" fg:w="1955809"/><text x="7.4797%" y="1375.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,955,809 samples, 0.15%)</title><rect x="7.2297%" y="1349" width="0.1482%" height="15" fill="rgb(224,123,36)" fg:x="95411991" fg:w="1955809"/><text x="7.4797%" y="1359.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,955,809 samples, 0.15%)</title><rect x="7.2297%" y="1333" width="0.1482%" height="15" fill="rgb(240,125,3)" fg:x="95411991" fg:w="1955809"/><text x="7.4797%" y="1343.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,955,809 samples, 0.15%)</title><rect x="7.2297%" y="1317" width="0.1482%" height="15" fill="rgb(205,98,50)" fg:x="95411991" fg:w="1955809"/><text x="7.4797%" y="1327.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,955,809 samples, 0.15%)</title><rect x="7.2297%" y="1301" width="0.1482%" height="15" fill="rgb(205,185,37)" fg:x="95411991" fg:w="1955809"/><text x="7.4797%" y="1311.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,955,809 samples, 0.15%)</title><rect x="7.2297%" y="1285" width="0.1482%" height="15" fill="rgb(238,207,15)" fg:x="95411991" fg:w="1955809"/><text x="7.4797%" y="1295.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (1,955,809 samples, 0.15%)</title><rect x="7.2297%" y="1269" width="0.1482%" height="15" fill="rgb(213,199,42)" fg:x="95411991" fg:w="1955809"/><text x="7.4797%" y="1279.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (1,955,809 samples, 0.15%)</title><rect x="7.2297%" y="1253" width="0.1482%" height="15" fill="rgb(235,201,11)" fg:x="95411991" fg:w="1955809"/><text x="7.4797%" y="1263.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (1,955,809 samples, 0.15%)</title><rect x="7.2297%" y="1237" width="0.1482%" height="15" fill="rgb(207,46,11)" fg:x="95411991" fg:w="1955809"/><text x="7.4797%" y="1247.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1,955,809 samples, 0.15%)</title><rect x="7.2297%" y="1221" width="0.1482%" height="15" fill="rgb(241,35,35)" fg:x="95411991" fg:w="1955809"/><text x="7.4797%" y="1231.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (1,955,809 samples, 0.15%)</title><rect x="7.2297%" y="1205" width="0.1482%" height="15" fill="rgb(243,32,47)" fg:x="95411991" fg:w="1955809"/><text x="7.4797%" y="1215.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (20,814,496 samples, 1.58%)</title><rect x="5.9534%" y="3061" width="1.5772%" height="15" fill="rgb(247,202,23)" fg:x="78568074" fg:w="20814496"/><text x="6.2034%" y="3071.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="3045" width="0.6016%" height="15" fill="rgb(219,102,11)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="3055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="3029" width="0.6016%" height="15" fill="rgb(243,110,44)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="3039.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="3013" width="0.6016%" height="15" fill="rgb(222,74,54)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="3023.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2997" width="0.6016%" height="15" fill="rgb(216,99,12)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="3007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2981" width="0.6016%" height="15" fill="rgb(226,22,26)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2965" width="0.6016%" height="15" fill="rgb(217,163,10)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2975.50"></text></g><g><title>alloc::slice::hack::to_vec (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2949" width="0.6016%" height="15" fill="rgb(213,25,53)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2933" width="0.6016%" height="15" fill="rgb(252,105,26)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2943.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2917" width="0.6016%" height="15" fill="rgb(220,39,43)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2927.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2901" width="0.6016%" height="15" fill="rgb(229,68,48)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2911.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2885" width="0.6016%" height="15" fill="rgb(252,8,32)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2869" width="0.6016%" height="15" fill="rgb(223,20,43)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2879.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2853" width="0.6016%" height="15" fill="rgb(229,81,49)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2837" width="0.6016%" height="15" fill="rgb(236,28,36)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2821" width="0.6016%" height="15" fill="rgb(249,185,26)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2831.50"></text></g><g><title>alloc::slice::hack::to_vec (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2805" width="0.6016%" height="15" fill="rgb(249,174,33)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2789" width="0.6016%" height="15" fill="rgb(233,201,37)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2799.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2773" width="0.6016%" height="15" fill="rgb(221,78,26)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2783.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2757" width="0.6016%" height="15" fill="rgb(250,127,30)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2741" width="0.6016%" height="15" fill="rgb(230,49,44)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2725" width="0.6016%" height="15" fill="rgb(229,67,23)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2735.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2709" width="0.6016%" height="15" fill="rgb(249,83,47)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2693" width="0.6016%" height="15" fill="rgb(215,43,3)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2677" width="0.6016%" height="15" fill="rgb(238,154,13)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2687.50"></text></g><g><title>alloc::slice::hack::to_vec (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2661" width="0.6016%" height="15" fill="rgb(219,56,2)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2645" width="0.6016%" height="15" fill="rgb(233,0,4)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2655.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2629" width="0.6016%" height="15" fill="rgb(235,30,7)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2639.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2613" width="0.6016%" height="15" fill="rgb(250,79,13)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2597" width="0.6016%" height="15" fill="rgb(211,146,34)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2581" width="0.6016%" height="15" fill="rgb(228,22,38)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2591.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2565" width="0.6016%" height="15" fill="rgb(235,168,5)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2549" width="0.6016%" height="15" fill="rgb(221,155,16)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2533" width="0.6016%" height="15" fill="rgb(215,215,53)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2543.50"></text></g><g><title>alloc::slice::hack::to_vec (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2517" width="0.6016%" height="15" fill="rgb(223,4,10)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2501" width="0.6016%" height="15" fill="rgb(234,103,6)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2511.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2485" width="0.6016%" height="15" fill="rgb(227,97,0)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2495.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2469" width="0.6016%" height="15" fill="rgb(234,150,53)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2453" width="0.6016%" height="15" fill="rgb(228,201,54)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2437" width="0.6016%" height="15" fill="rgb(222,22,37)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2447.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2421" width="0.6016%" height="15" fill="rgb(237,53,32)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2405" width="0.6016%" height="15" fill="rgb(233,25,53)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2389" width="0.6016%" height="15" fill="rgb(210,40,34)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2399.50"></text></g><g><title>alloc::slice::hack::to_vec (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2373" width="0.6016%" height="15" fill="rgb(241,220,44)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2357" width="0.6016%" height="15" fill="rgb(235,28,35)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2367.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2341" width="0.6016%" height="15" fill="rgb(210,56,17)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2351.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2325" width="0.6016%" height="15" fill="rgb(224,130,29)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2309" width="0.6016%" height="15" fill="rgb(235,212,8)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2293" width="0.6016%" height="15" fill="rgb(223,33,50)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2303.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2277" width="0.6016%" height="15" fill="rgb(219,149,13)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2261" width="0.6016%" height="15" fill="rgb(250,156,29)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2245" width="0.6016%" height="15" fill="rgb(216,193,19)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2255.50"></text></g><g><title>alloc::slice::hack::to_vec (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2229" width="0.6016%" height="15" fill="rgb(216,135,14)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2213" width="0.6016%" height="15" fill="rgb(241,47,5)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2223.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2197" width="0.6016%" height="15" fill="rgb(233,42,35)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2207.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2181" width="0.6016%" height="15" fill="rgb(231,13,6)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2165" width="0.6016%" height="15" fill="rgb(207,181,40)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2149" width="0.6016%" height="15" fill="rgb(254,173,49)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2159.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2133" width="0.6016%" height="15" fill="rgb(221,1,38)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2117" width="0.6016%" height="15" fill="rgb(206,124,46)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2127.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2101" width="0.6016%" height="15" fill="rgb(249,21,11)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2111.50"></text></g><g><title>alloc::slice::hack::to_vec (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2085" width="0.6016%" height="15" fill="rgb(222,201,40)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2095.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2069" width="0.6016%" height="15" fill="rgb(235,61,29)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2079.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2053" width="0.6016%" height="15" fill="rgb(219,207,3)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2063.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2037" width="0.6016%" height="15" fill="rgb(222,56,46)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2047.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2021" width="0.6016%" height="15" fill="rgb(239,76,54)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2031.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="2005" width="0.6016%" height="15" fill="rgb(231,124,27)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="2015.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="1989" width="0.6016%" height="15" fill="rgb(249,195,6)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="1973" width="0.6016%" height="15" fill="rgb(237,174,47)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="1983.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="1957" width="0.6016%" height="15" fill="rgb(206,201,31)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="1967.50"></text></g><g><title>alloc::slice::hack::to_vec (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="1941" width="0.6016%" height="15" fill="rgb(231,57,52)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="1951.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="1925" width="0.6016%" height="15" fill="rgb(248,177,22)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="1935.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="1909" width="0.6016%" height="15" fill="rgb(215,211,37)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="1919.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="1893" width="0.6016%" height="15" fill="rgb(241,128,51)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="1903.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="1877" width="0.6016%" height="15" fill="rgb(227,165,31)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="1887.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="1861" width="0.6016%" height="15" fill="rgb(228,167,24)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="1871.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="1845" width="0.6016%" height="15" fill="rgb(228,143,12)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="1855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="1829" width="0.6016%" height="15" fill="rgb(249,149,8)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="1839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="1813" width="0.6016%" height="15" fill="rgb(243,35,44)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="1823.50"></text></g><g><title>alloc::slice::hack::to_vec (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="1797" width="0.6016%" height="15" fill="rgb(246,89,9)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="1807.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="1781" width="0.6016%" height="15" fill="rgb(233,213,13)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="1791.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="1765" width="0.6016%" height="15" fill="rgb(233,141,41)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="1775.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="1749" width="0.6016%" height="15" fill="rgb(239,167,4)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="1759.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="1733" width="0.6016%" height="15" fill="rgb(209,217,16)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="1743.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="1717" width="0.6016%" height="15" fill="rgb(219,88,35)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="1727.50"></text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,940,135 samples, 0.60%)</title><rect x="6.9289%" y="1701" width="0.6016%" height="15" fill="rgb(220,193,23)" fg:x="91442435" fg:w="7940135"/><text x="7.1789%" y="1711.50"></text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (2,014,770 samples, 0.15%)</title><rect x="7.3779%" y="1685" width="0.1527%" height="15" fill="rgb(230,90,52)" fg:x="97367800" fg:w="2014770"/><text x="7.6279%" y="1695.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (2,014,770 samples, 0.15%)</title><rect x="7.3779%" y="1669" width="0.1527%" height="15" fill="rgb(252,106,19)" fg:x="97367800" fg:w="2014770"/><text x="7.6279%" y="1679.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2,014,770 samples, 0.15%)</title><rect x="7.3779%" y="1653" width="0.1527%" height="15" fill="rgb(206,74,20)" fg:x="97367800" fg:w="2014770"/><text x="7.6279%" y="1663.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (2,014,770 samples, 0.15%)</title><rect x="7.3779%" y="1637" width="0.1527%" height="15" fill="rgb(230,138,44)" fg:x="97367800" fg:w="2014770"/><text x="7.6279%" y="1647.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (2,014,770 samples, 0.15%)</title><rect x="7.3779%" y="1621" width="0.1527%" height="15" fill="rgb(235,182,43)" fg:x="97367800" fg:w="2014770"/><text x="7.6279%" y="1631.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (2,014,770 samples, 0.15%)</title><rect x="7.3779%" y="1605" width="0.1527%" height="15" fill="rgb(242,16,51)" fg:x="97367800" fg:w="2014770"/><text x="7.6279%" y="1615.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (2,014,770 samples, 0.15%)</title><rect x="7.3779%" y="1589" width="0.1527%" height="15" fill="rgb(248,9,4)" fg:x="97367800" fg:w="2014770"/><text x="7.6279%" y="1599.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (2,014,770 samples, 0.15%)</title><rect x="7.3779%" y="1573" width="0.1527%" height="15" fill="rgb(210,31,22)" fg:x="97367800" fg:w="2014770"/><text x="7.6279%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,014,770 samples, 0.15%)</title><rect x="7.3779%" y="1557" width="0.1527%" height="15" fill="rgb(239,54,39)" fg:x="97367800" fg:w="2014770"/><text x="7.6279%" y="1567.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,014,770 samples, 0.15%)</title><rect x="7.3779%" y="1541" width="0.1527%" height="15" fill="rgb(230,99,41)" fg:x="97367800" fg:w="2014770"/><text x="7.6279%" y="1551.50"></text></g><g><title>alloc::alloc::alloc (2,014,770 samples, 0.15%)</title><rect x="7.3779%" y="1525" width="0.1527%" height="15" fill="rgb(253,106,12)" fg:x="97367800" fg:w="2014770"/><text x="7.6279%" y="1535.50"></text></g><g><title>malloc (2,014,770 samples, 0.15%)</title><rect x="7.3779%" y="1509" width="0.1527%" height="15" fill="rgb(213,46,41)" fg:x="97367800" fg:w="2014770"/><text x="7.6279%" y="1519.50"></text></g><g><title>[libc.so.6] (2,014,770 samples, 0.15%)</title><rect x="7.3779%" y="1493" width="0.1527%" height="15" fill="rgb(215,133,35)" fg:x="97367800" fg:w="2014770"/><text x="7.6279%" y="1503.50"></text></g><g><title>&lt;main::benchmark::LayoutFrame as core::clone::Clone&gt;::clone (27,121,726 samples, 2.06%)</title><rect x="5.7401%" y="3141" width="2.0551%" height="15" fill="rgb(213,28,5)" fg:x="75753273" fg:w="27121726"/><text x="5.9901%" y="3151.50">&lt;..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (27,121,726 samples, 2.06%)</title><rect x="5.7401%" y="3125" width="2.0551%" height="15" fill="rgb(215,77,49)" fg:x="75753273" fg:w="27121726"/><text x="5.9901%" y="3135.50">&lt;..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (27,121,726 samples, 2.06%)</title><rect x="5.7401%" y="3109" width="2.0551%" height="15" fill="rgb(248,100,22)" fg:x="75753273" fg:w="27121726"/><text x="5.9901%" y="3119.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (27,121,726 samples, 2.06%)</title><rect x="5.7401%" y="3093" width="2.0551%" height="15" fill="rgb(208,67,9)" fg:x="75753273" fg:w="27121726"/><text x="5.9901%" y="3103.50">&lt;..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (27,121,726 samples, 2.06%)</title><rect x="5.7401%" y="3077" width="2.0551%" height="15" fill="rgb(219,133,21)" fg:x="75753273" fg:w="27121726"/><text x="5.9901%" y="3087.50">&lt;..</text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (3,492,429 samples, 0.26%)</title><rect x="7.5305%" y="3061" width="0.2646%" height="15" fill="rgb(246,46,29)" fg:x="99382570" fg:w="3492429"/><text x="7.7805%" y="3071.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push_with_handle (3,492,429 samples, 0.26%)</title><rect x="7.5305%" y="3045" width="0.2646%" height="15" fill="rgb(246,185,52)" fg:x="99382570" fg:w="3492429"/><text x="7.7805%" y="3055.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3,492,429 samples, 0.26%)</title><rect x="7.5305%" y="3029" width="0.2646%" height="15" fill="rgb(252,136,11)" fg:x="99382570" fg:w="3492429"/><text x="7.7805%" y="3039.50"></text></g><g><title>cfree (5,404,233 samples, 0.41%)</title><rect x="7.7952%" y="2917" width="0.4095%" height="15" fill="rgb(219,138,53)" fg:x="102874999" fg:w="5404233"/><text x="8.0452%" y="2927.50"></text></g><g><title>[libc.so.6] (5,404,233 samples, 0.41%)</title><rect x="7.7952%" y="2901" width="0.4095%" height="15" fill="rgb(211,51,23)" fg:x="102874999" fg:w="5404233"/><text x="8.0452%" y="2911.50"></text></g><g><title>[libc.so.6] (5,404,233 samples, 0.41%)</title><rect x="7.7952%" y="2885" width="0.4095%" height="15" fill="rgb(247,221,28)" fg:x="102874999" fg:w="5404233"/><text x="8.0452%" y="2895.50"></text></g><g><title>[libc.so.6] (2,670,222 samples, 0.20%)</title><rect x="8.0023%" y="2869" width="0.2023%" height="15" fill="rgb(251,222,45)" fg:x="105609010" fg:w="2670222"/><text x="8.2523%" y="2879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (8,023,716 samples, 0.61%)</title><rect x="7.7952%" y="3141" width="0.6080%" height="15" fill="rgb(217,162,53)" fg:x="102874999" fg:w="8023716"/><text x="8.0452%" y="3151.50"></text></g><g><title>core::ptr::drop_in_place&lt;[main::benchmark::LayoutFrame]&gt; (8,023,716 samples, 0.61%)</title><rect x="7.7952%" y="3125" width="0.6080%" height="15" fill="rgb(229,93,14)" fg:x="102874999" fg:w="8023716"/><text x="8.0452%" y="3135.50"></text></g><g><title>core::ptr::drop_in_place&lt;main::benchmark::LayoutFrame&gt; (8,023,716 samples, 0.61%)</title><rect x="7.7952%" y="3109" width="0.6080%" height="15" fill="rgb(209,67,49)" fg:x="102874999" fg:w="8023716"/><text x="8.0452%" y="3119.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8,023,716 samples, 0.61%)</title><rect x="7.7952%" y="3093" width="0.6080%" height="15" fill="rgb(213,87,29)" fg:x="102874999" fg:w="8023716"/><text x="8.0452%" y="3103.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8,023,716 samples, 0.61%)</title><rect x="7.7952%" y="3077" width="0.6080%" height="15" fill="rgb(205,151,52)" fg:x="102874999" fg:w="8023716"/><text x="8.0452%" y="3087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8,023,716 samples, 0.61%)</title><rect x="7.7952%" y="3061" width="0.6080%" height="15" fill="rgb(253,215,39)" fg:x="102874999" fg:w="8023716"/><text x="8.0452%" y="3071.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8,023,716 samples, 0.61%)</title><rect x="7.7952%" y="3045" width="0.6080%" height="15" fill="rgb(221,220,41)" fg:x="102874999" fg:w="8023716"/><text x="8.0452%" y="3055.50"></text></g><g><title>core::mem::drop (8,023,716 samples, 0.61%)</title><rect x="7.7952%" y="3029" width="0.6080%" height="15" fill="rgb(218,133,21)" fg:x="102874999" fg:w="8023716"/><text x="8.0452%" y="3039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8,023,716 samples, 0.61%)</title><rect x="7.7952%" y="3013" width="0.6080%" height="15" fill="rgb(221,193,43)" fg:x="102874999" fg:w="8023716"/><text x="8.0452%" y="3023.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8,023,716 samples, 0.61%)</title><rect x="7.7952%" y="2997" width="0.6080%" height="15" fill="rgb(240,128,52)" fg:x="102874999" fg:w="8023716"/><text x="8.0452%" y="3007.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (8,023,716 samples, 0.61%)</title><rect x="7.7952%" y="2981" width="0.6080%" height="15" fill="rgb(253,114,12)" fg:x="102874999" fg:w="8023716"/><text x="8.0452%" y="2991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (8,023,716 samples, 0.61%)</title><rect x="7.7952%" y="2965" width="0.6080%" height="15" fill="rgb(215,223,47)" fg:x="102874999" fg:w="8023716"/><text x="8.0452%" y="2975.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8,023,716 samples, 0.61%)</title><rect x="7.7952%" y="2949" width="0.6080%" height="15" fill="rgb(248,225,23)" fg:x="102874999" fg:w="8023716"/><text x="8.0452%" y="2959.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (8,023,716 samples, 0.61%)</title><rect x="7.7952%" y="2933" width="0.6080%" height="15" fill="rgb(250,108,0)" fg:x="102874999" fg:w="8023716"/><text x="8.0452%" y="2943.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2917" width="0.1985%" height="15" fill="rgb(228,208,7)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2927.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2901" width="0.1985%" height="15" fill="rgb(244,45,10)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2885" width="0.1985%" height="15" fill="rgb(207,125,25)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2895.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2869" width="0.1985%" height="15" fill="rgb(210,195,18)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2879.50"></text></g><g><title>core::mem::drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2853" width="0.1985%" height="15" fill="rgb(249,80,12)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2837" width="0.1985%" height="15" fill="rgb(221,65,9)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2847.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2821" width="0.1985%" height="15" fill="rgb(235,49,36)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2831.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2805" width="0.1985%" height="15" fill="rgb(225,32,20)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2789" width="0.1985%" height="15" fill="rgb(215,141,46)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2799.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2773" width="0.1985%" height="15" fill="rgb(250,160,47)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2783.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2757" width="0.1985%" height="15" fill="rgb(216,222,40)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2767.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2741" width="0.1985%" height="15" fill="rgb(234,217,39)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2725" width="0.1985%" height="15" fill="rgb(207,178,40)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2709" width="0.1985%" height="15" fill="rgb(221,136,13)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2693" width="0.1985%" height="15" fill="rgb(249,199,10)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2677" width="0.1985%" height="15" fill="rgb(249,222,13)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2661" width="0.1985%" height="15" fill="rgb(244,185,38)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2645" width="0.1985%" height="15" fill="rgb(236,202,9)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2629" width="0.1985%" height="15" fill="rgb(250,229,37)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2639.50"></text></g><g><title>core::mem::drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2613" width="0.1985%" height="15" fill="rgb(206,174,23)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2597" width="0.1985%" height="15" fill="rgb(211,33,43)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2581" width="0.1985%" height="15" fill="rgb(245,58,50)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2565" width="0.1985%" height="15" fill="rgb(244,68,36)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2549" width="0.1985%" height="15" fill="rgb(232,229,15)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2559.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2533" width="0.1985%" height="15" fill="rgb(254,30,23)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2543.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2517" width="0.1985%" height="15" fill="rgb(235,160,14)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2501" width="0.1985%" height="15" fill="rgb(212,155,44)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2485" width="0.1985%" height="15" fill="rgb(226,2,50)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2469" width="0.1985%" height="15" fill="rgb(234,177,6)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2453" width="0.1985%" height="15" fill="rgb(217,24,9)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2437" width="0.1985%" height="15" fill="rgb(220,13,46)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2421" width="0.1985%" height="15" fill="rgb(239,221,27)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2405" width="0.1985%" height="15" fill="rgb(222,198,25)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2389" width="0.1985%" height="15" fill="rgb(211,99,13)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2399.50"></text></g><g><title>core::mem::drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2373" width="0.1985%" height="15" fill="rgb(232,111,31)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2357" width="0.1985%" height="15" fill="rgb(245,82,37)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2341" width="0.1985%" height="15" fill="rgb(227,149,46)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2325" width="0.1985%" height="15" fill="rgb(218,36,50)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2309" width="0.1985%" height="15" fill="rgb(226,80,48)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2319.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2293" width="0.1985%" height="15" fill="rgb(238,224,15)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2303.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2277" width="0.1985%" height="15" fill="rgb(241,136,10)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2261" width="0.1985%" height="15" fill="rgb(208,32,45)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2245" width="0.1985%" height="15" fill="rgb(207,135,9)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2229" width="0.1985%" height="15" fill="rgb(206,86,44)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2213" width="0.1985%" height="15" fill="rgb(245,177,15)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2197" width="0.1985%" height="15" fill="rgb(206,64,50)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2181" width="0.1985%" height="15" fill="rgb(234,36,40)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2165" width="0.1985%" height="15" fill="rgb(213,64,8)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2149" width="0.1985%" height="15" fill="rgb(210,75,36)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2159.50"></text></g><g><title>core::mem::drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2133" width="0.1985%" height="15" fill="rgb(229,88,21)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2117" width="0.1985%" height="15" fill="rgb(252,204,47)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2127.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2101" width="0.1985%" height="15" fill="rgb(208,77,27)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2111.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2085" width="0.1985%" height="15" fill="rgb(221,76,26)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2069" width="0.1985%" height="15" fill="rgb(225,139,18)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2079.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2053" width="0.1985%" height="15" fill="rgb(230,137,11)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2063.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2037" width="0.1985%" height="15" fill="rgb(212,28,1)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2047.50"></text></g><g><title>__rdl_dealloc (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2021" width="0.1985%" height="15" fill="rgb(248,164,17)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2031.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2,619,483 samples, 0.20%)</title><rect x="8.2047%" y="2005" width="0.1985%" height="15" fill="rgb(222,171,42)" fg:x="108279232" fg:w="2619483"/><text x="8.4547%" y="2015.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12,026,173 samples, 0.91%)</title><rect x="8.4032%" y="3141" width="0.9113%" height="15" fill="rgb(243,84,45)" fg:x="110898715" fg:w="12026173"/><text x="8.6532%" y="3151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (12,026,173 samples, 0.91%)</title><rect x="8.4032%" y="3125" width="0.9113%" height="15" fill="rgb(252,49,23)" fg:x="110898715" fg:w="12026173"/><text x="8.6532%" y="3135.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (12,026,173 samples, 0.91%)</title><rect x="8.4032%" y="3109" width="0.9113%" height="15" fill="rgb(215,19,7)" fg:x="110898715" fg:w="12026173"/><text x="8.6532%" y="3119.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (12,026,173 samples, 0.91%)</title><rect x="8.4032%" y="3093" width="0.9113%" height="15" fill="rgb(238,81,41)" fg:x="110898715" fg:w="12026173"/><text x="8.6532%" y="3103.50"></text></g><g><title>alloc::raw_vec::finish_grow (12,026,173 samples, 0.91%)</title><rect x="8.4032%" y="3077" width="0.9113%" height="15" fill="rgb(210,199,37)" fg:x="110898715" fg:w="12026173"/><text x="8.6532%" y="3087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12,026,173 samples, 0.91%)</title><rect x="8.4032%" y="3061" width="0.9113%" height="15" fill="rgb(244,192,49)" fg:x="110898715" fg:w="12026173"/><text x="8.6532%" y="3071.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12,026,173 samples, 0.91%)</title><rect x="8.4032%" y="3045" width="0.9113%" height="15" fill="rgb(226,211,11)" fg:x="110898715" fg:w="12026173"/><text x="8.6532%" y="3055.50"></text></g><g><title>alloc::alloc::realloc (12,026,173 samples, 0.91%)</title><rect x="8.4032%" y="3029" width="0.9113%" height="15" fill="rgb(236,162,54)" fg:x="110898715" fg:w="12026173"/><text x="8.6532%" y="3039.50"></text></g><g><title>realloc (12,026,173 samples, 0.91%)</title><rect x="8.4032%" y="3013" width="0.9113%" height="15" fill="rgb(220,229,9)" fg:x="110898715" fg:w="12026173"/><text x="8.6532%" y="3023.50"></text></g><g><title>[libc.so.6] (12,026,173 samples, 0.91%)</title><rect x="8.4032%" y="2997" width="0.9113%" height="15" fill="rgb(250,87,22)" fg:x="110898715" fg:w="12026173"/><text x="8.6532%" y="3007.50"></text></g><g><title>[libc.so.6] (12,026,173 samples, 0.91%)</title><rect x="8.4032%" y="2981" width="0.9113%" height="15" fill="rgb(239,43,17)" fg:x="110898715" fg:w="12026173"/><text x="8.6532%" y="2991.50"></text></g><g><title>[libc.so.6] (12,026,173 samples, 0.91%)</title><rect x="8.4032%" y="2965" width="0.9113%" height="15" fill="rgb(231,177,25)" fg:x="110898715" fg:w="12026173"/><text x="8.6532%" y="2975.50"></text></g><g><title>[libc.so.6] (6,388,190 samples, 0.48%)</title><rect x="8.8304%" y="2949" width="0.4841%" height="15" fill="rgb(219,179,1)" fg:x="116536698" fg:w="6388190"/><text x="9.0804%" y="2959.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,108,247 samples, 0.46%)</title><rect x="9.3144%" y="2773" width="0.4628%" height="15" fill="rgb(238,219,53)" fg:x="122924888" fg:w="6108247"/><text x="9.5644%" y="2783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6,108,247 samples, 0.46%)</title><rect x="9.3144%" y="2757" width="0.4628%" height="15" fill="rgb(232,167,36)" fg:x="122924888" fg:w="6108247"/><text x="9.5644%" y="2767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6,108,247 samples, 0.46%)</title><rect x="9.3144%" y="2741" width="0.4628%" height="15" fill="rgb(244,19,51)" fg:x="122924888" fg:w="6108247"/><text x="9.5644%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6,108,247 samples, 0.46%)</title><rect x="9.3144%" y="2725" width="0.4628%" height="15" fill="rgb(224,6,22)" fg:x="122924888" fg:w="6108247"/><text x="9.5644%" y="2735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,108,247 samples, 0.46%)</title><rect x="9.3144%" y="2709" width="0.4628%" height="15" fill="rgb(224,145,5)" fg:x="122924888" fg:w="6108247"/><text x="9.5644%" y="2719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,011,028 samples, 0.23%)</title><rect x="9.5491%" y="2693" width="0.2282%" height="15" fill="rgb(234,130,49)" fg:x="126022107" fg:w="3011028"/><text x="9.7991%" y="2703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,011,028 samples, 0.23%)</title><rect x="9.5491%" y="2677" width="0.2282%" height="15" fill="rgb(254,6,2)" fg:x="126022107" fg:w="3011028"/><text x="9.7991%" y="2687.50"></text></g><g><title>alloc::alloc::dealloc (3,011,028 samples, 0.23%)</title><rect x="9.5491%" y="2661" width="0.2282%" height="15" fill="rgb(208,96,46)" fg:x="126022107" fg:w="3011028"/><text x="9.7991%" y="2671.50"></text></g><g><title>cfree (3,011,028 samples, 0.23%)</title><rect x="9.5491%" y="2645" width="0.2282%" height="15" fill="rgb(239,3,39)" fg:x="126022107" fg:w="3011028"/><text x="9.7991%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;main::benchmark::LayoutFrame&gt;&gt; (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="3141" width="0.6928%" height="15" fill="rgb(233,210,1)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="3151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="3125" width="0.6928%" height="15" fill="rgb(244,137,37)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="3135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[main::benchmark::LayoutFrame]&gt; (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="3109" width="0.6928%" height="15" fill="rgb(240,136,2)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="3119.50"></text></g><g><title>core::ptr::drop_in_place&lt;main::benchmark::LayoutFrame&gt; (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="3093" width="0.6928%" height="15" fill="rgb(239,18,37)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="3103.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="3077" width="0.6928%" height="15" fill="rgb(218,185,22)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="3087.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="3061" width="0.6928%" height="15" fill="rgb(225,218,4)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="3071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="3045" width="0.6928%" height="15" fill="rgb(230,182,32)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="3055.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="3029" width="0.6928%" height="15" fill="rgb(242,56,43)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="3039.50"></text></g><g><title>core::mem::drop (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="3013" width="0.6928%" height="15" fill="rgb(233,99,24)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="3023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="2997" width="0.6928%" height="15" fill="rgb(234,209,42)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="3007.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="2981" width="0.6928%" height="15" fill="rgb(227,7,12)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="2991.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="2965" width="0.6928%" height="15" fill="rgb(245,203,43)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="2975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="2949" width="0.6928%" height="15" fill="rgb(238,205,33)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="2959.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="2933" width="0.6928%" height="15" fill="rgb(231,56,7)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="2943.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="2917" width="0.6928%" height="15" fill="rgb(244,186,29)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="2927.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="2901" width="0.6928%" height="15" fill="rgb(234,111,31)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="2911.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="2885" width="0.6928%" height="15" fill="rgb(241,149,10)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="2895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="2869" width="0.6928%" height="15" fill="rgb(249,206,44)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="2879.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="2853" width="0.6928%" height="15" fill="rgb(251,153,30)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="2863.50"></text></g><g><title>core::mem::drop (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="2837" width="0.6928%" height="15" fill="rgb(239,152,38)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="2847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="2821" width="0.6928%" height="15" fill="rgb(249,139,47)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="2831.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="2805" width="0.6928%" height="15" fill="rgb(244,64,35)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="2815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (9,143,691 samples, 0.69%)</title><rect x="9.3144%" y="2789" width="0.6928%" height="15" fill="rgb(216,46,15)" fg:x="122924888" fg:w="9143691"/><text x="9.5644%" y="2799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2773" width="0.2300%" height="15" fill="rgb(250,74,19)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2783.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2757" width="0.2300%" height="15" fill="rgb(249,42,33)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2767.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2741" width="0.2300%" height="15" fill="rgb(242,149,17)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2725" width="0.2300%" height="15" fill="rgb(244,29,21)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2709" width="0.2300%" height="15" fill="rgb(220,130,37)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2693" width="0.2300%" height="15" fill="rgb(211,67,2)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2677" width="0.2300%" height="15" fill="rgb(235,68,52)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2661" width="0.2300%" height="15" fill="rgb(246,142,3)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2645" width="0.2300%" height="15" fill="rgb(241,25,7)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2629" width="0.2300%" height="15" fill="rgb(242,119,39)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2613" width="0.2300%" height="15" fill="rgb(241,98,45)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2623.50"></text></g><g><title>core::mem::drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2597" width="0.2300%" height="15" fill="rgb(254,28,30)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2581" width="0.2300%" height="15" fill="rgb(241,142,54)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2565" width="0.2300%" height="15" fill="rgb(222,85,15)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2549" width="0.2300%" height="15" fill="rgb(210,85,47)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2533" width="0.2300%" height="15" fill="rgb(224,206,25)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2543.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2517" width="0.2300%" height="15" fill="rgb(243,201,19)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2527.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2501" width="0.2300%" height="15" fill="rgb(236,59,4)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2485" width="0.2300%" height="15" fill="rgb(254,179,45)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2469" width="0.2300%" height="15" fill="rgb(226,14,10)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2453" width="0.2300%" height="15" fill="rgb(244,27,41)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2437" width="0.2300%" height="15" fill="rgb(235,35,32)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2421" width="0.2300%" height="15" fill="rgb(218,68,31)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2405" width="0.2300%" height="15" fill="rgb(207,120,37)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2389" width="0.2300%" height="15" fill="rgb(227,98,0)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2373" width="0.2300%" height="15" fill="rgb(207,7,3)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2383.50"></text></g><g><title>core::mem::drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2357" width="0.2300%" height="15" fill="rgb(206,98,19)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2341" width="0.2300%" height="15" fill="rgb(217,5,26)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2325" width="0.2300%" height="15" fill="rgb(235,190,38)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2309" width="0.2300%" height="15" fill="rgb(247,86,24)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2293" width="0.2300%" height="15" fill="rgb(205,101,16)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2303.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2277" width="0.2300%" height="15" fill="rgb(246,168,33)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2287.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2261" width="0.2300%" height="15" fill="rgb(231,114,1)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2245" width="0.2300%" height="15" fill="rgb(207,184,53)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2229" width="0.2300%" height="15" fill="rgb(224,95,51)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2213" width="0.2300%" height="15" fill="rgb(212,188,45)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2197" width="0.2300%" height="15" fill="rgb(223,154,38)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2181" width="0.2300%" height="15" fill="rgb(251,22,52)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2165" width="0.2300%" height="15" fill="rgb(229,209,22)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2149" width="0.2300%" height="15" fill="rgb(234,138,34)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2133" width="0.2300%" height="15" fill="rgb(212,95,11)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2143.50"></text></g><g><title>core::mem::drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2117" width="0.2300%" height="15" fill="rgb(240,179,47)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2101" width="0.2300%" height="15" fill="rgb(240,163,11)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2111.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2085" width="0.2300%" height="15" fill="rgb(236,37,12)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2095.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2069" width="0.2300%" height="15" fill="rgb(232,164,16)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2053" width="0.2300%" height="15" fill="rgb(244,205,15)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2063.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2037" width="0.2300%" height="15" fill="rgb(223,117,47)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2047.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2021" width="0.2300%" height="15" fill="rgb(244,107,35)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="2005" width="0.2300%" height="15" fill="rgb(205,140,8)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="1989" width="0.2300%" height="15" fill="rgb(228,84,46)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="1973" width="0.2300%" height="15" fill="rgb(254,188,9)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="1957" width="0.2300%" height="15" fill="rgb(206,112,54)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="1941" width="0.2300%" height="15" fill="rgb(216,84,49)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="1925" width="0.2300%" height="15" fill="rgb(214,194,35)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="1909" width="0.2300%" height="15" fill="rgb(249,28,3)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="1919.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="1893" width="0.2300%" height="15" fill="rgb(222,56,52)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="1903.50"></text></g><g><title>core::mem::drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="1877" width="0.2300%" height="15" fill="rgb(245,217,50)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="1861" width="0.2300%" height="15" fill="rgb(213,201,24)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="1871.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="1845" width="0.2300%" height="15" fill="rgb(248,116,28)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="1855.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="1829" width="0.2300%" height="15" fill="rgb(219,72,43)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="1813" width="0.2300%" height="15" fill="rgb(209,138,14)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="1823.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="1797" width="0.2300%" height="15" fill="rgb(222,18,33)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="1807.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="1781" width="0.2300%" height="15" fill="rgb(213,199,7)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="1791.50"></text></g><g><title>cfree (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="1765" width="0.2300%" height="15" fill="rgb(250,110,10)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="1775.50"></text></g><g><title>[libc.so.6] (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="1749" width="0.2300%" height="15" fill="rgb(248,123,6)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="1759.50"></text></g><g><title>[libc.so.6] (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="1733" width="0.2300%" height="15" fill="rgb(206,91,31)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="1743.50"></text></g><g><title>[libc.so.6] (3,035,444 samples, 0.23%)</title><rect x="9.7773%" y="1717" width="0.2300%" height="15" fill="rgb(211,154,13)" fg:x="129033135" fg:w="3035444"/><text x="10.0273%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="3141" width="0.2343%" height="15" fill="rgb(225,148,7)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="3151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="3125" width="0.2343%" height="15" fill="rgb(220,160,43)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="3135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="3109" width="0.2343%" height="15" fill="rgb(213,52,39)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="3119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="3093" width="0.2343%" height="15" fill="rgb(243,137,7)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="3103.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="3077" width="0.2343%" height="15" fill="rgb(230,79,13)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="3087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="3061" width="0.2343%" height="15" fill="rgb(247,105,23)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="3071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="3045" width="0.2343%" height="15" fill="rgb(223,179,41)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="3055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="3029" width="0.2343%" height="15" fill="rgb(218,9,34)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="3039.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="3013" width="0.2343%" height="15" fill="rgb(222,106,8)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="3023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="2997" width="0.2343%" height="15" fill="rgb(211,220,0)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="3007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="2981" width="0.2343%" height="15" fill="rgb(229,52,16)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="2991.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="2965" width="0.2343%" height="15" fill="rgb(212,155,18)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="2975.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="2949" width="0.2343%" height="15" fill="rgb(242,21,14)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="2959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="2933" width="0.2343%" height="15" fill="rgb(222,19,48)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="2943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="2917" width="0.2343%" height="15" fill="rgb(232,45,27)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="2927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="2901" width="0.2343%" height="15" fill="rgb(249,103,42)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="2911.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="2885" width="0.2343%" height="15" fill="rgb(246,81,33)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="2895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="2869" width="0.2343%" height="15" fill="rgb(252,33,42)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="2879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="2853" width="0.2343%" height="15" fill="rgb(209,212,41)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="2863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="2837" width="0.2343%" height="15" fill="rgb(207,154,6)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="2847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="2821" width="0.2343%" height="15" fill="rgb(223,64,47)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="2831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="2805" width="0.2343%" height="15" fill="rgb(211,161,38)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="2815.50"></text></g><g><title>alloc::alloc::dealloc (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="2789" width="0.2343%" height="15" fill="rgb(219,138,40)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="2799.50"></text></g><g><title>cfree (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="2773" width="0.2343%" height="15" fill="rgb(241,228,46)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="2783.50"></text></g><g><title>[libc.so.6] (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="2757" width="0.2343%" height="15" fill="rgb(223,209,38)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="2767.50"></text></g><g><title>[libc.so.6] (3,091,868 samples, 0.23%)</title><rect x="10.0073%" y="2741" width="0.2343%" height="15" fill="rgb(236,164,45)" fg:x="132068579" fg:w="3091868"/><text x="10.2573%" y="2751.50"></text></g><g><title>main::benchmark::count_nodes (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="3125" width="0.2151%" height="15" fill="rgb(231,15,5)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="3135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="3109" width="0.2151%" height="15" fill="rgb(252,35,15)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="3119.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="3093" width="0.2151%" height="15" fill="rgb(248,181,18)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="3103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="3077" width="0.2151%" height="15" fill="rgb(233,39,42)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="3087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="3061" width="0.2151%" height="15" fill="rgb(238,110,33)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="3071.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="3045" width="0.2151%" height="15" fill="rgb(233,195,10)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="3055.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="3029" width="0.2151%" height="15" fill="rgb(254,105,3)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="3039.50"></text></g><g><title>main::benchmark::count_nodes (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="3013" width="0.2151%" height="15" fill="rgb(221,225,9)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="3023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2997" width="0.2151%" height="15" fill="rgb(224,227,45)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="3007.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2981" width="0.2151%" height="15" fill="rgb(229,198,43)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2965" width="0.2151%" height="15" fill="rgb(206,209,35)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2949" width="0.2151%" height="15" fill="rgb(245,195,53)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2959.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2933" width="0.2151%" height="15" fill="rgb(240,92,26)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2943.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2917" width="0.2151%" height="15" fill="rgb(207,40,23)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2927.50"></text></g><g><title>main::benchmark::count_nodes (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2901" width="0.2151%" height="15" fill="rgb(223,111,35)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2885" width="0.2151%" height="15" fill="rgb(229,147,28)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2895.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2869" width="0.2151%" height="15" fill="rgb(211,29,28)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2853" width="0.2151%" height="15" fill="rgb(228,72,33)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2837" width="0.2151%" height="15" fill="rgb(205,214,31)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2847.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2821" width="0.2151%" height="15" fill="rgb(224,111,15)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2831.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2805" width="0.2151%" height="15" fill="rgb(253,21,26)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2815.50"></text></g><g><title>main::benchmark::count_nodes (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2789" width="0.2151%" height="15" fill="rgb(245,139,43)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2773" width="0.2151%" height="15" fill="rgb(252,170,7)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2783.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2757" width="0.2151%" height="15" fill="rgb(231,118,14)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2741" width="0.2151%" height="15" fill="rgb(238,83,0)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2725" width="0.2151%" height="15" fill="rgb(221,39,39)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2735.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2709" width="0.2151%" height="15" fill="rgb(222,119,46)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2719.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2693" width="0.2151%" height="15" fill="rgb(222,165,49)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2703.50"></text></g><g><title>main::benchmark::count_nodes (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2677" width="0.2151%" height="15" fill="rgb(219,113,52)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2661" width="0.2151%" height="15" fill="rgb(214,7,15)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2671.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2645" width="0.2151%" height="15" fill="rgb(235,32,4)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2629" width="0.2151%" height="15" fill="rgb(238,90,54)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2613" width="0.2151%" height="15" fill="rgb(213,208,19)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2623.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2597" width="0.2151%" height="15" fill="rgb(233,156,4)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2581" width="0.2151%" height="15" fill="rgb(207,194,5)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2591.50"></text></g><g><title>main::benchmark::count_nodes (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2565" width="0.2151%" height="15" fill="rgb(206,111,30)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2549" width="0.2151%" height="15" fill="rgb(243,70,54)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2559.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2533" width="0.2151%" height="15" fill="rgb(242,28,8)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2517" width="0.2151%" height="15" fill="rgb(219,106,18)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2501" width="0.2151%" height="15" fill="rgb(244,222,10)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2511.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2485" width="0.2151%" height="15" fill="rgb(236,179,52)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2495.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2469" width="0.2151%" height="15" fill="rgb(213,23,39)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2479.50"></text></g><g><title>main::benchmark::count_nodes (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2453" width="0.2151%" height="15" fill="rgb(238,48,10)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2437" width="0.2151%" height="15" fill="rgb(251,196,23)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2447.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2421" width="0.2151%" height="15" fill="rgb(250,152,24)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2405" width="0.2151%" height="15" fill="rgb(209,150,17)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2389" width="0.2151%" height="15" fill="rgb(234,202,34)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2399.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2373" width="0.2151%" height="15" fill="rgb(253,148,53)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2383.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2357" width="0.2151%" height="15" fill="rgb(218,129,16)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2367.50"></text></g><g><title>main::benchmark::count_nodes (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2341" width="0.2151%" height="15" fill="rgb(216,85,19)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2325" width="0.2151%" height="15" fill="rgb(235,228,7)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2335.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2309" width="0.2151%" height="15" fill="rgb(245,175,0)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2293" width="0.2151%" height="15" fill="rgb(208,168,36)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2277" width="0.2151%" height="15" fill="rgb(246,171,24)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2287.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2261" width="0.2151%" height="15" fill="rgb(215,142,24)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2271.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2245" width="0.2151%" height="15" fill="rgb(250,187,7)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2255.50"></text></g><g><title>main::benchmark::count_nodes (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2229" width="0.2151%" height="15" fill="rgb(228,66,33)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2213" width="0.2151%" height="15" fill="rgb(234,215,21)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2,838,599 samples, 0.22%)</title><rect x="10.2415%" y="2197" width="0.2151%" height="15" fill="rgb(222,191,20)" fg:x="135160447" fg:w="2838599"/><text x="10.4915%" y="2207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,956,922 samples, 0.15%)</title><rect x="10.4566%" y="3093" width="0.1483%" height="15" fill="rgb(245,79,54)" fg:x="137999046" fg:w="1956922"/><text x="10.7066%" y="3103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,956,922 samples, 0.15%)</title><rect x="10.4566%" y="3077" width="0.1483%" height="15" fill="rgb(240,10,37)" fg:x="137999046" fg:w="1956922"/><text x="10.7066%" y="3087.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,956,922 samples, 0.15%)</title><rect x="10.4566%" y="3061" width="0.1483%" height="15" fill="rgb(214,192,32)" fg:x="137999046" fg:w="1956922"/><text x="10.7066%" y="3071.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,956,922 samples, 0.15%)</title><rect x="10.4566%" y="3045" width="0.1483%" height="15" fill="rgb(209,36,54)" fg:x="137999046" fg:w="1956922"/><text x="10.7066%" y="3055.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,956,922 samples, 0.15%)</title><rect x="10.4566%" y="3029" width="0.1483%" height="15" fill="rgb(220,10,11)" fg:x="137999046" fg:w="1956922"/><text x="10.7066%" y="3039.50"></text></g><g><title>malloc (1,956,922 samples, 0.15%)</title><rect x="10.4566%" y="3013" width="0.1483%" height="15" fill="rgb(221,106,17)" fg:x="137999046" fg:w="1956922"/><text x="10.7066%" y="3023.50"></text></g><g><title>[libc.so.6] (1,956,922 samples, 0.15%)</title><rect x="10.4566%" y="2997" width="0.1483%" height="15" fill="rgb(251,142,44)" fg:x="137999046" fg:w="1956922"/><text x="10.7066%" y="3007.50"></text></g><g><title>[libc.so.6] (1,956,922 samples, 0.15%)</title><rect x="10.4566%" y="2981" width="0.1483%" height="15" fill="rgb(238,13,15)" fg:x="137999046" fg:w="1956922"/><text x="10.7066%" y="2991.50"></text></g><g><title>main::benchmark::apply_frame_modifications (6,866,185 samples, 0.52%)</title><rect x="10.2415%" y="3141" width="0.5203%" height="15" fill="rgb(208,107,27)" fg:x="135160447" fg:w="6866185"/><text x="10.4915%" y="3151.50"></text></g><g><title>main::benchmark::json_to_html_node (4,027,586 samples, 0.31%)</title><rect x="10.4566%" y="3125" width="0.3052%" height="15" fill="rgb(205,136,37)" fg:x="137999046" fg:w="4027586"/><text x="10.7066%" y="3135.50"></text></g><g><title>main::benchmark::json_to_html_node (4,027,586 samples, 0.31%)</title><rect x="10.4566%" y="3109" width="0.3052%" height="15" fill="rgb(250,205,27)" fg:x="137999046" fg:w="4027586"/><text x="10.7066%" y="3119.50"></text></g><g><title>main::benchmark::json_to_html_node (2,070,664 samples, 0.16%)</title><rect x="10.6049%" y="3093" width="0.1569%" height="15" fill="rgb(210,80,43)" fg:x="139955968" fg:w="2070664"/><text x="10.8549%" y="3103.50"></text></g><g><title>main::benchmark::json_to_html_node (2,070,664 samples, 0.16%)</title><rect x="10.6049%" y="3077" width="0.1569%" height="15" fill="rgb(247,160,36)" fg:x="139955968" fg:w="2070664"/><text x="10.8549%" y="3087.50"></text></g><g><title>main::benchmark::json_to_html_node (2,070,664 samples, 0.16%)</title><rect x="10.6049%" y="3061" width="0.1569%" height="15" fill="rgb(234,13,49)" fg:x="139955968" fg:w="2070664"/><text x="10.8549%" y="3071.50"></text></g><g><title>main::benchmark::json_to_html_node (2,070,664 samples, 0.16%)</title><rect x="10.6049%" y="3045" width="0.1569%" height="15" fill="rgb(234,122,0)" fg:x="139955968" fg:w="2070664"/><text x="10.8549%" y="3055.50"></text></g><g><title>main::benchmark::json_to_html_node (2,070,664 samples, 0.16%)</title><rect x="10.6049%" y="3029" width="0.1569%" height="15" fill="rgb(207,146,38)" fg:x="139955968" fg:w="2070664"/><text x="10.8549%" y="3039.50"></text></g><g><title>main::benchmark::json_to_html_node (2,070,664 samples, 0.16%)</title><rect x="10.6049%" y="3013" width="0.1569%" height="15" fill="rgb(207,177,25)" fg:x="139955968" fg:w="2070664"/><text x="10.8549%" y="3023.50"></text></g><g><title>main::benchmark::json_to_html_node (2,070,664 samples, 0.16%)</title><rect x="10.6049%" y="2997" width="0.1569%" height="15" fill="rgb(211,178,42)" fg:x="139955968" fg:w="2070664"/><text x="10.8549%" y="3007.50"></text></g><g><title>main::benchmark::json_to_html_node (2,070,664 samples, 0.16%)</title><rect x="10.6049%" y="2981" width="0.1569%" height="15" fill="rgb(230,69,54)" fg:x="139955968" fg:w="2070664"/><text x="10.8549%" y="2991.50"></text></g><g><title>main::benchmark::json_to_html_node (2,070,664 samples, 0.16%)</title><rect x="10.6049%" y="2965" width="0.1569%" height="15" fill="rgb(214,135,41)" fg:x="139955968" fg:w="2070664"/><text x="10.8549%" y="2975.50"></text></g><g><title>main::benchmark::json_to_html_node (2,070,664 samples, 0.16%)</title><rect x="10.6049%" y="2949" width="0.1569%" height="15" fill="rgb(237,67,25)" fg:x="139955968" fg:w="2070664"/><text x="10.8549%" y="2959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,070,664 samples, 0.16%)</title><rect x="10.6049%" y="2933" width="0.1569%" height="15" fill="rgb(222,189,50)" fg:x="139955968" fg:w="2070664"/><text x="10.8549%" y="2943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,070,664 samples, 0.16%)</title><rect x="10.6049%" y="2917" width="0.1569%" height="15" fill="rgb(245,148,34)" fg:x="139955968" fg:w="2070664"/><text x="10.8549%" y="2927.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,070,664 samples, 0.16%)</title><rect x="10.6049%" y="2901" width="0.1569%" height="15" fill="rgb(222,29,6)" fg:x="139955968" fg:w="2070664"/><text x="10.8549%" y="2911.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,070,664 samples, 0.16%)</title><rect x="10.6049%" y="2885" width="0.1569%" height="15" fill="rgb(221,189,43)" fg:x="139955968" fg:w="2070664"/><text x="10.8549%" y="2895.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2,070,664 samples, 0.16%)</title><rect x="10.6049%" y="2869" width="0.1569%" height="15" fill="rgb(207,36,27)" fg:x="139955968" fg:w="2070664"/><text x="10.8549%" y="2879.50"></text></g><g><title>__rdl_alloc (3,330,325 samples, 0.25%)</title><rect x="11.0212%" y="2357" width="0.2523%" height="15" fill="rgb(217,90,24)" fg:x="145450124" fg:w="3330325"/><text x="11.2712%" y="2367.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,330,325 samples, 0.25%)</title><rect x="11.0212%" y="2341" width="0.2523%" height="15" fill="rgb(224,66,35)" fg:x="145450124" fg:w="3330325"/><text x="11.2712%" y="2351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (10,067,279 samples, 0.76%)</title><rect x="11.0212%" y="2549" width="0.7628%" height="15" fill="rgb(221,13,50)" fg:x="145450124" fg:w="10067279"/><text x="11.2712%" y="2559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,067,279 samples, 0.76%)</title><rect x="11.0212%" y="2533" width="0.7628%" height="15" fill="rgb(236,68,49)" fg:x="145450124" fg:w="10067279"/><text x="11.2712%" y="2543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,067,279 samples, 0.76%)</title><rect x="11.0212%" y="2517" width="0.7628%" height="15" fill="rgb(229,146,28)" fg:x="145450124" fg:w="10067279"/><text x="11.2712%" y="2527.50"></text></g><g><title>alloc::slice::hack::to_vec (10,067,279 samples, 0.76%)</title><rect x="11.0212%" y="2501" width="0.7628%" height="15" fill="rgb(225,31,38)" fg:x="145450124" fg:w="10067279"/><text x="11.2712%" y="2511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,067,279 samples, 0.76%)</title><rect x="11.0212%" y="2485" width="0.7628%" height="15" fill="rgb(250,208,3)" fg:x="145450124" fg:w="10067279"/><text x="11.2712%" y="2495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10,067,279 samples, 0.76%)</title><rect x="11.0212%" y="2469" width="0.7628%" height="15" fill="rgb(246,54,23)" fg:x="145450124" fg:w="10067279"/><text x="11.2712%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10,067,279 samples, 0.76%)</title><rect x="11.0212%" y="2453" width="0.7628%" height="15" fill="rgb(243,76,11)" fg:x="145450124" fg:w="10067279"/><text x="11.2712%" y="2463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (10,067,279 samples, 0.76%)</title><rect x="11.0212%" y="2437" width="0.7628%" height="15" fill="rgb(245,21,50)" fg:x="145450124" fg:w="10067279"/><text x="11.2712%" y="2447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (10,067,279 samples, 0.76%)</title><rect x="11.0212%" y="2421" width="0.7628%" height="15" fill="rgb(228,9,43)" fg:x="145450124" fg:w="10067279"/><text x="11.2712%" y="2431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10,067,279 samples, 0.76%)</title><rect x="11.0212%" y="2405" width="0.7628%" height="15" fill="rgb(208,100,47)" fg:x="145450124" fg:w="10067279"/><text x="11.2712%" y="2415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10,067,279 samples, 0.76%)</title><rect x="11.0212%" y="2389" width="0.7628%" height="15" fill="rgb(232,26,8)" fg:x="145450124" fg:w="10067279"/><text x="11.2712%" y="2399.50"></text></g><g><title>alloc::alloc::alloc (10,067,279 samples, 0.76%)</title><rect x="11.0212%" y="2373" width="0.7628%" height="15" fill="rgb(216,166,38)" fg:x="145450124" fg:w="10067279"/><text x="11.2712%" y="2383.50"></text></g><g><title>malloc (6,736,954 samples, 0.51%)</title><rect x="11.2736%" y="2357" width="0.5105%" height="15" fill="rgb(251,202,51)" fg:x="148780449" fg:w="6736954"/><text x="11.5236%" y="2367.50"></text></g><g><title>[libc.so.6] (6,736,954 samples, 0.51%)</title><rect x="11.2736%" y="2341" width="0.5105%" height="15" fill="rgb(254,216,34)" fg:x="148780449" fg:w="6736954"/><text x="11.5236%" y="2351.50"></text></g><g><title>__rdl_alloc (3,556,407 samples, 0.27%)</title><rect x="12.2234%" y="2277" width="0.2695%" height="15" fill="rgb(251,32,27)" fg:x="161315477" fg:w="3556407"/><text x="12.4734%" y="2287.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,556,407 samples, 0.27%)</title><rect x="12.2234%" y="2261" width="0.2695%" height="15" fill="rgb(208,127,28)" fg:x="161315477" fg:w="3556407"/><text x="12.4734%" y="2271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (22,418,945 samples, 1.70%)</title><rect x="11.7841%" y="2469" width="1.6988%" height="15" fill="rgb(224,137,22)" fg:x="155517403" fg:w="22418945"/><text x="12.0341%" y="2479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,599,144 samples, 1.49%)</title><rect x="11.9977%" y="2453" width="1.4851%" height="15" fill="rgb(254,70,32)" fg:x="158337204" fg:w="19599144"/><text x="12.2477%" y="2463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,599,144 samples, 1.49%)</title><rect x="11.9977%" y="2437" width="1.4851%" height="15" fill="rgb(229,75,37)" fg:x="158337204" fg:w="19599144"/><text x="12.2477%" y="2447.50"></text></g><g><title>alloc::slice::hack::to_vec (19,599,144 samples, 1.49%)</title><rect x="11.9977%" y="2421" width="1.4851%" height="15" fill="rgb(252,64,23)" fg:x="158337204" fg:w="19599144"/><text x="12.2477%" y="2431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,599,144 samples, 1.49%)</title><rect x="11.9977%" y="2405" width="1.4851%" height="15" fill="rgb(232,162,48)" fg:x="158337204" fg:w="19599144"/><text x="12.2477%" y="2415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (19,599,144 samples, 1.49%)</title><rect x="11.9977%" y="2389" width="1.4851%" height="15" fill="rgb(246,160,12)" fg:x="158337204" fg:w="19599144"/><text x="12.2477%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (19,599,144 samples, 1.49%)</title><rect x="11.9977%" y="2373" width="1.4851%" height="15" fill="rgb(247,166,0)" fg:x="158337204" fg:w="19599144"/><text x="12.2477%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (19,599,144 samples, 1.49%)</title><rect x="11.9977%" y="2357" width="1.4851%" height="15" fill="rgb(249,219,21)" fg:x="158337204" fg:w="19599144"/><text x="12.2477%" y="2367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (19,599,144 samples, 1.49%)</title><rect x="11.9977%" y="2341" width="1.4851%" height="15" fill="rgb(205,209,3)" fg:x="158337204" fg:w="19599144"/><text x="12.2477%" y="2351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16,620,871 samples, 1.26%)</title><rect x="12.2234%" y="2325" width="1.2594%" height="15" fill="rgb(243,44,1)" fg:x="161315477" fg:w="16620871"/><text x="12.4734%" y="2335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16,620,871 samples, 1.26%)</title><rect x="12.2234%" y="2309" width="1.2594%" height="15" fill="rgb(206,159,16)" fg:x="161315477" fg:w="16620871"/><text x="12.4734%" y="2319.50"></text></g><g><title>alloc::alloc::alloc (16,620,871 samples, 1.26%)</title><rect x="12.2234%" y="2293" width="1.2594%" height="15" fill="rgb(244,77,30)" fg:x="161315477" fg:w="16620871"/><text x="12.4734%" y="2303.50"></text></g><g><title>malloc (13,064,464 samples, 0.99%)</title><rect x="12.4929%" y="2277" width="0.9899%" height="15" fill="rgb(218,69,12)" fg:x="164871884" fg:w="13064464"/><text x="12.7429%" y="2287.50"></text></g><g><title>[libc.so.6] (9,499,288 samples, 0.72%)</title><rect x="12.7630%" y="2261" width="0.7198%" height="15" fill="rgb(212,87,7)" fg:x="168437060" fg:w="9499288"/><text x="13.0130%" y="2271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (8,953,063 samples, 0.68%)</title><rect x="13.4828%" y="2389" width="0.6784%" height="15" fill="rgb(245,114,25)" fg:x="177936348" fg:w="8953063"/><text x="13.7328%" y="2399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,592,589 samples, 0.20%)</title><rect x="13.9648%" y="2373" width="0.1964%" height="15" fill="rgb(210,61,42)" fg:x="184296822" fg:w="2592589"/><text x="14.2148%" y="2383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,592,589 samples, 0.20%)</title><rect x="13.9648%" y="2357" width="0.1964%" height="15" fill="rgb(211,52,33)" fg:x="184296822" fg:w="2592589"/><text x="14.2148%" y="2367.50"></text></g><g><title>alloc::slice::hack::to_vec (2,592,589 samples, 0.20%)</title><rect x="13.9648%" y="2341" width="0.1964%" height="15" fill="rgb(234,58,33)" fg:x="184296822" fg:w="2592589"/><text x="14.2148%" y="2351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,592,589 samples, 0.20%)</title><rect x="13.9648%" y="2325" width="0.1964%" height="15" fill="rgb(220,115,36)" fg:x="184296822" fg:w="2592589"/><text x="14.2148%" y="2335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,592,589 samples, 0.20%)</title><rect x="13.9648%" y="2309" width="0.1964%" height="15" fill="rgb(243,153,54)" fg:x="184296822" fg:w="2592589"/><text x="14.2148%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,592,589 samples, 0.20%)</title><rect x="13.9648%" y="2293" width="0.1964%" height="15" fill="rgb(251,47,18)" fg:x="184296822" fg:w="2592589"/><text x="14.2148%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,592,589 samples, 0.20%)</title><rect x="13.9648%" y="2277" width="0.1964%" height="15" fill="rgb(242,102,42)" fg:x="184296822" fg:w="2592589"/><text x="14.2148%" y="2287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,592,589 samples, 0.20%)</title><rect x="13.9648%" y="2261" width="0.1964%" height="15" fill="rgb(234,31,38)" fg:x="184296822" fg:w="2592589"/><text x="14.2148%" y="2271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,592,589 samples, 0.20%)</title><rect x="13.9648%" y="2245" width="0.1964%" height="15" fill="rgb(221,117,51)" fg:x="184296822" fg:w="2592589"/><text x="14.2148%" y="2255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,592,589 samples, 0.20%)</title><rect x="13.9648%" y="2229" width="0.1964%" height="15" fill="rgb(212,20,18)" fg:x="184296822" fg:w="2592589"/><text x="14.2148%" y="2239.50"></text></g><g><title>alloc::alloc::alloc (2,592,589 samples, 0.20%)</title><rect x="13.9648%" y="2213" width="0.1964%" height="15" fill="rgb(245,133,36)" fg:x="184296822" fg:w="2592589"/><text x="14.2148%" y="2223.50"></text></g><g><title>__rdl_alloc (2,592,589 samples, 0.20%)</title><rect x="13.9648%" y="2197" width="0.1964%" height="15" fill="rgb(212,6,19)" fg:x="184296822" fg:w="2592589"/><text x="14.2148%" y="2207.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,592,589 samples, 0.20%)</title><rect x="13.9648%" y="2181" width="0.1964%" height="15" fill="rgb(218,1,36)" fg:x="184296822" fg:w="2592589"/><text x="14.2148%" y="2191.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,254,459 samples, 0.25%)</title><rect x="14.1612%" y="2325" width="0.2466%" height="15" fill="rgb(246,84,54)" fg:x="186889411" fg:w="3254459"/><text x="14.4112%" y="2335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,254,459 samples, 0.25%)</title><rect x="14.1612%" y="2309" width="0.2466%" height="15" fill="rgb(242,110,6)" fg:x="186889411" fg:w="3254459"/><text x="14.4112%" y="2319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,254,459 samples, 0.25%)</title><rect x="14.1612%" y="2293" width="0.2466%" height="15" fill="rgb(214,47,5)" fg:x="186889411" fg:w="3254459"/><text x="14.4112%" y="2303.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3,254,459 samples, 0.25%)</title><rect x="14.1612%" y="2277" width="0.2466%" height="15" fill="rgb(218,159,25)" fg:x="186889411" fg:w="3254459"/><text x="14.4112%" y="2287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,260,107 samples, 0.25%)</title><rect x="14.4078%" y="2309" width="0.2470%" height="15" fill="rgb(215,211,28)" fg:x="190143870" fg:w="3260107"/><text x="14.6578%" y="2319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9,166,385 samples, 0.69%)</title><rect x="14.6548%" y="2229" width="0.6946%" height="15" fill="rgb(238,59,32)" fg:x="193403977" fg:w="9166385"/><text x="14.9048%" y="2239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,166,385 samples, 0.69%)</title><rect x="14.6548%" y="2213" width="0.6946%" height="15" fill="rgb(226,82,3)" fg:x="193403977" fg:w="9166385"/><text x="14.9048%" y="2223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,166,385 samples, 0.69%)</title><rect x="14.6548%" y="2197" width="0.6946%" height="15" fill="rgb(240,164,32)" fg:x="193403977" fg:w="9166385"/><text x="14.9048%" y="2207.50"></text></g><g><title>alloc::slice::hack::to_vec (9,166,385 samples, 0.69%)</title><rect x="14.6548%" y="2181" width="0.6946%" height="15" fill="rgb(232,46,7)" fg:x="193403977" fg:w="9166385"/><text x="14.9048%" y="2191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,166,385 samples, 0.69%)</title><rect x="14.6548%" y="2165" width="0.6946%" height="15" fill="rgb(229,129,53)" fg:x="193403977" fg:w="9166385"/><text x="14.9048%" y="2175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9,166,385 samples, 0.69%)</title><rect x="14.6548%" y="2149" width="0.6946%" height="15" fill="rgb(234,188,29)" fg:x="193403977" fg:w="9166385"/><text x="14.9048%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9,166,385 samples, 0.69%)</title><rect x="14.6548%" y="2133" width="0.6946%" height="15" fill="rgb(246,141,4)" fg:x="193403977" fg:w="9166385"/><text x="14.9048%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (9,166,385 samples, 0.69%)</title><rect x="14.6548%" y="2117" width="0.6946%" height="15" fill="rgb(229,23,39)" fg:x="193403977" fg:w="9166385"/><text x="14.9048%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (9,166,385 samples, 0.69%)</title><rect x="14.6548%" y="2101" width="0.6946%" height="15" fill="rgb(206,12,3)" fg:x="193403977" fg:w="9166385"/><text x="14.9048%" y="2111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9,166,385 samples, 0.69%)</title><rect x="14.6548%" y="2085" width="0.6946%" height="15" fill="rgb(252,226,20)" fg:x="193403977" fg:w="9166385"/><text x="14.9048%" y="2095.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9,166,385 samples, 0.69%)</title><rect x="14.6548%" y="2069" width="0.6946%" height="15" fill="rgb(216,123,35)" fg:x="193403977" fg:w="9166385"/><text x="14.9048%" y="2079.50"></text></g><g><title>alloc::alloc::alloc (9,166,385 samples, 0.69%)</title><rect x="14.6548%" y="2053" width="0.6946%" height="15" fill="rgb(212,68,40)" fg:x="193403977" fg:w="9166385"/><text x="14.9048%" y="2063.50"></text></g><g><title>malloc (9,166,385 samples, 0.69%)</title><rect x="14.6548%" y="2037" width="0.6946%" height="15" fill="rgb(254,125,32)" fg:x="193403977" fg:w="9166385"/><text x="14.9048%" y="2047.50"></text></g><g><title>[libc.so.6] (5,748,558 samples, 0.44%)</title><rect x="14.9138%" y="2021" width="0.4356%" height="15" fill="rgb(253,97,22)" fg:x="196821804" fg:w="5748558"/><text x="15.1638%" y="2031.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (13,498,392 samples, 1.02%)</title><rect x="15.3494%" y="2149" width="1.0228%" height="15" fill="rgb(241,101,14)" fg:x="202570362" fg:w="13498392"/><text x="15.5994%" y="2159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,212,585 samples, 0.55%)</title><rect x="15.8257%" y="2133" width="0.5465%" height="15" fill="rgb(238,103,29)" fg:x="208856169" fg:w="7212585"/><text x="16.0757%" y="2143.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,212,585 samples, 0.55%)</title><rect x="15.8257%" y="2117" width="0.5465%" height="15" fill="rgb(233,195,47)" fg:x="208856169" fg:w="7212585"/><text x="16.0757%" y="2127.50"></text></g><g><title>alloc::slice::hack::to_vec (7,212,585 samples, 0.55%)</title><rect x="15.8257%" y="2101" width="0.5465%" height="15" fill="rgb(246,218,30)" fg:x="208856169" fg:w="7212585"/><text x="16.0757%" y="2111.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,212,585 samples, 0.55%)</title><rect x="15.8257%" y="2085" width="0.5465%" height="15" fill="rgb(219,145,47)" fg:x="208856169" fg:w="7212585"/><text x="16.0757%" y="2095.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7,212,585 samples, 0.55%)</title><rect x="15.8257%" y="2069" width="0.5465%" height="15" fill="rgb(243,12,26)" fg:x="208856169" fg:w="7212585"/><text x="16.0757%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7,212,585 samples, 0.55%)</title><rect x="15.8257%" y="2053" width="0.5465%" height="15" fill="rgb(214,87,16)" fg:x="208856169" fg:w="7212585"/><text x="16.0757%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (7,212,585 samples, 0.55%)</title><rect x="15.8257%" y="2037" width="0.5465%" height="15" fill="rgb(208,99,42)" fg:x="208856169" fg:w="7212585"/><text x="16.0757%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7,212,585 samples, 0.55%)</title><rect x="15.8257%" y="2021" width="0.5465%" height="15" fill="rgb(253,99,2)" fg:x="208856169" fg:w="7212585"/><text x="16.0757%" y="2031.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7,212,585 samples, 0.55%)</title><rect x="15.8257%" y="2005" width="0.5465%" height="15" fill="rgb(220,168,23)" fg:x="208856169" fg:w="7212585"/><text x="16.0757%" y="2015.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7,212,585 samples, 0.55%)</title><rect x="15.8257%" y="1989" width="0.5465%" height="15" fill="rgb(242,38,24)" fg:x="208856169" fg:w="7212585"/><text x="16.0757%" y="1999.50"></text></g><g><title>alloc::alloc::alloc (7,212,585 samples, 0.55%)</title><rect x="15.8257%" y="1973" width="0.5465%" height="15" fill="rgb(225,182,9)" fg:x="208856169" fg:w="7212585"/><text x="16.0757%" y="1983.50"></text></g><g><title>malloc (7,212,585 samples, 0.55%)</title><rect x="15.8257%" y="1957" width="0.5465%" height="15" fill="rgb(243,178,37)" fg:x="208856169" fg:w="7212585"/><text x="16.0757%" y="1967.50"></text></g><g><title>[libc.so.6] (7,212,585 samples, 0.55%)</title><rect x="15.8257%" y="1941" width="0.5465%" height="15" fill="rgb(232,139,19)" fg:x="208856169" fg:w="7212585"/><text x="16.0757%" y="1951.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,557,689 samples, 0.35%)</title><rect x="16.3722%" y="2085" width="0.3454%" height="15" fill="rgb(225,201,24)" fg:x="216068754" fg:w="4557689"/><text x="16.6222%" y="2095.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,121,835 samples, 0.09%)</title><rect x="16.6326%" y="2069" width="0.0850%" height="15" fill="rgb(221,47,46)" fg:x="219504608" fg:w="1121835"/><text x="16.8826%" y="2079.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,121,835 samples, 0.09%)</title><rect x="16.6326%" y="2053" width="0.0850%" height="15" fill="rgb(249,23,13)" fg:x="219504608" fg:w="1121835"/><text x="16.8826%" y="2063.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,326,659 samples, 0.25%)</title><rect x="16.7176%" y="2069" width="0.2521%" height="15" fill="rgb(219,9,5)" fg:x="220626443" fg:w="3326659"/><text x="16.9676%" y="2079.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9,704,378 samples, 0.74%)</title><rect x="17.2002%" y="1989" width="0.7353%" height="15" fill="rgb(254,171,16)" fg:x="226995288" fg:w="9704378"/><text x="17.4502%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,704,378 samples, 0.74%)</title><rect x="17.2002%" y="1973" width="0.7353%" height="15" fill="rgb(230,171,20)" fg:x="226995288" fg:w="9704378"/><text x="17.4502%" y="1983.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,704,378 samples, 0.74%)</title><rect x="17.2002%" y="1957" width="0.7353%" height="15" fill="rgb(210,71,41)" fg:x="226995288" fg:w="9704378"/><text x="17.4502%" y="1967.50"></text></g><g><title>alloc::slice::hack::to_vec (9,704,378 samples, 0.74%)</title><rect x="17.2002%" y="1941" width="0.7353%" height="15" fill="rgb(206,173,20)" fg:x="226995288" fg:w="9704378"/><text x="17.4502%" y="1951.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,704,378 samples, 0.74%)</title><rect x="17.2002%" y="1925" width="0.7353%" height="15" fill="rgb(233,88,34)" fg:x="226995288" fg:w="9704378"/><text x="17.4502%" y="1935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9,704,378 samples, 0.74%)</title><rect x="17.2002%" y="1909" width="0.7353%" height="15" fill="rgb(223,209,46)" fg:x="226995288" fg:w="9704378"/><text x="17.4502%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9,704,378 samples, 0.74%)</title><rect x="17.2002%" y="1893" width="0.7353%" height="15" fill="rgb(250,43,18)" fg:x="226995288" fg:w="9704378"/><text x="17.4502%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (9,704,378 samples, 0.74%)</title><rect x="17.2002%" y="1877" width="0.7353%" height="15" fill="rgb(208,13,10)" fg:x="226995288" fg:w="9704378"/><text x="17.4502%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (9,704,378 samples, 0.74%)</title><rect x="17.2002%" y="1861" width="0.7353%" height="15" fill="rgb(212,200,36)" fg:x="226995288" fg:w="9704378"/><text x="17.4502%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9,704,378 samples, 0.74%)</title><rect x="17.2002%" y="1845" width="0.7353%" height="15" fill="rgb(225,90,30)" fg:x="226995288" fg:w="9704378"/><text x="17.4502%" y="1855.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9,704,378 samples, 0.74%)</title><rect x="17.2002%" y="1829" width="0.7353%" height="15" fill="rgb(236,182,39)" fg:x="226995288" fg:w="9704378"/><text x="17.4502%" y="1839.50"></text></g><g><title>alloc::alloc::alloc (9,704,378 samples, 0.74%)</title><rect x="17.2002%" y="1813" width="0.7353%" height="15" fill="rgb(212,144,35)" fg:x="226995288" fg:w="9704378"/><text x="17.4502%" y="1823.50"></text></g><g><title>malloc (9,704,378 samples, 0.74%)</title><rect x="17.2002%" y="1797" width="0.7353%" height="15" fill="rgb(228,63,44)" fg:x="226995288" fg:w="9704378"/><text x="17.4502%" y="1807.50"></text></g><g><title>[libc.so.6] (9,704,378 samples, 0.74%)</title><rect x="17.2002%" y="1781" width="0.7353%" height="15" fill="rgb(228,109,6)" fg:x="226995288" fg:w="9704378"/><text x="17.4502%" y="1791.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,510,997 samples, 0.27%)</title><rect x="18.1979%" y="1909" width="0.2660%" height="15" fill="rgb(238,117,24)" fg:x="240162838" fg:w="3510997"/><text x="18.4479%" y="1919.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,692,954 samples, 0.20%)</title><rect x="18.4640%" y="1829" width="0.2041%" height="15" fill="rgb(242,26,26)" fg:x="243673835" fg:w="2692954"/><text x="18.7140%" y="1839.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (3,253,392 samples, 0.25%)</title><rect x="18.6680%" y="1653" width="0.2465%" height="15" fill="rgb(221,92,48)" fg:x="246366789" fg:w="3253392"/><text x="18.9180%" y="1663.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,253,392 samples, 0.25%)</title><rect x="18.6680%" y="1637" width="0.2465%" height="15" fill="rgb(209,209,32)" fg:x="246366789" fg:w="3253392"/><text x="18.9180%" y="1647.50"></text></g><g><title>[libc.so.6] (3,253,392 samples, 0.25%)</title><rect x="18.6680%" y="1621" width="0.2465%" height="15" fill="rgb(221,70,22)" fg:x="246366789" fg:w="3253392"/><text x="18.9180%" y="1631.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (6,434,535 samples, 0.49%)</title><rect x="18.6680%" y="1765" width="0.4876%" height="15" fill="rgb(248,145,5)" fg:x="246366789" fg:w="6434535"/><text x="18.9180%" y="1775.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (6,434,535 samples, 0.49%)</title><rect x="18.6680%" y="1749" width="0.4876%" height="15" fill="rgb(226,116,26)" fg:x="246366789" fg:w="6434535"/><text x="18.9180%" y="1759.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (6,434,535 samples, 0.49%)</title><rect x="18.6680%" y="1733" width="0.4876%" height="15" fill="rgb(244,5,17)" fg:x="246366789" fg:w="6434535"/><text x="18.9180%" y="1743.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (6,434,535 samples, 0.49%)</title><rect x="18.6680%" y="1717" width="0.4876%" height="15" fill="rgb(252,159,33)" fg:x="246366789" fg:w="6434535"/><text x="18.9180%" y="1727.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,434,535 samples, 0.49%)</title><rect x="18.6680%" y="1701" width="0.4876%" height="15" fill="rgb(206,71,0)" fg:x="246366789" fg:w="6434535"/><text x="18.9180%" y="1711.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (6,434,535 samples, 0.49%)</title><rect x="18.6680%" y="1685" width="0.4876%" height="15" fill="rgb(233,118,54)" fg:x="246366789" fg:w="6434535"/><text x="18.9180%" y="1695.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (6,434,535 samples, 0.49%)</title><rect x="18.6680%" y="1669" width="0.4876%" height="15" fill="rgb(234,83,48)" fg:x="246366789" fg:w="6434535"/><text x="18.9180%" y="1679.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (3,181,143 samples, 0.24%)</title><rect x="18.9145%" y="1653" width="0.2410%" height="15" fill="rgb(228,3,54)" fg:x="249620181" fg:w="3181143"/><text x="19.1645%" y="1663.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (3,181,143 samples, 0.24%)</title><rect x="18.9145%" y="1637" width="0.2410%" height="15" fill="rgb(226,155,13)" fg:x="249620181" fg:w="3181143"/><text x="19.1645%" y="1647.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (3,181,143 samples, 0.24%)</title><rect x="18.9145%" y="1621" width="0.2410%" height="15" fill="rgb(241,28,37)" fg:x="249620181" fg:w="3181143"/><text x="19.1645%" y="1631.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,722,417 samples, 0.74%)</title><rect x="18.6680%" y="1829" width="0.7367%" height="15" fill="rgb(233,93,10)" fg:x="246366789" fg:w="9722417"/><text x="18.9180%" y="1839.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,722,417 samples, 0.74%)</title><rect x="18.6680%" y="1813" width="0.7367%" height="15" fill="rgb(225,113,19)" fg:x="246366789" fg:w="9722417"/><text x="18.9180%" y="1823.50"></text></g><g><title>alloc::slice::hack::to_vec (9,722,417 samples, 0.74%)</title><rect x="18.6680%" y="1797" width="0.7367%" height="15" fill="rgb(241,2,18)" fg:x="246366789" fg:w="9722417"/><text x="18.9180%" y="1807.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,722,417 samples, 0.74%)</title><rect x="18.6680%" y="1781" width="0.7367%" height="15" fill="rgb(228,207,21)" fg:x="246366789" fg:w="9722417"/><text x="18.9180%" y="1791.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,287,882 samples, 0.25%)</title><rect x="19.1556%" y="1765" width="0.2491%" height="15" fill="rgb(213,211,35)" fg:x="252801324" fg:w="3287882"/><text x="19.4056%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,287,882 samples, 0.25%)</title><rect x="19.1556%" y="1749" width="0.2491%" height="15" fill="rgb(209,83,10)" fg:x="252801324" fg:w="3287882"/><text x="19.4056%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,287,882 samples, 0.25%)</title><rect x="19.1556%" y="1733" width="0.2491%" height="15" fill="rgb(209,164,1)" fg:x="252801324" fg:w="3287882"/><text x="19.4056%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,287,882 samples, 0.25%)</title><rect x="19.1556%" y="1717" width="0.2491%" height="15" fill="rgb(213,184,43)" fg:x="252801324" fg:w="3287882"/><text x="19.4056%" y="1727.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,287,882 samples, 0.25%)</title><rect x="19.1556%" y="1701" width="0.2491%" height="15" fill="rgb(231,61,34)" fg:x="252801324" fg:w="3287882"/><text x="19.4056%" y="1711.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,287,882 samples, 0.25%)</title><rect x="19.1556%" y="1685" width="0.2491%" height="15" fill="rgb(235,75,3)" fg:x="252801324" fg:w="3287882"/><text x="19.4056%" y="1695.50"></text></g><g><title>alloc::alloc::alloc (3,287,882 samples, 0.25%)</title><rect x="19.1556%" y="1669" width="0.2491%" height="15" fill="rgb(220,106,47)" fg:x="252801324" fg:w="3287882"/><text x="19.4056%" y="1679.50"></text></g><g><title>malloc (3,287,882 samples, 0.25%)</title><rect x="19.1556%" y="1653" width="0.2491%" height="15" fill="rgb(210,196,33)" fg:x="252801324" fg:w="3287882"/><text x="19.4056%" y="1663.50"></text></g><g><title>[libc.so.6] (3,287,882 samples, 0.25%)</title><rect x="19.1556%" y="1637" width="0.2491%" height="15" fill="rgb(229,154,42)" fg:x="252801324" fg:w="3287882"/><text x="19.4056%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,321,836 samples, 1.46%)</title><rect x="18.4640%" y="1909" width="1.4641%" height="15" fill="rgb(228,114,26)" fg:x="243673835" fg:w="19321836"/><text x="18.7140%" y="1919.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,321,836 samples, 1.46%)</title><rect x="18.4640%" y="1893" width="1.4641%" height="15" fill="rgb(208,144,1)" fg:x="243673835" fg:w="19321836"/><text x="18.7140%" y="1903.50"></text></g><g><title>alloc::slice::hack::to_vec (19,321,836 samples, 1.46%)</title><rect x="18.4640%" y="1877" width="1.4641%" height="15" fill="rgb(239,112,37)" fg:x="243673835" fg:w="19321836"/><text x="18.7140%" y="1887.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,321,836 samples, 1.46%)</title><rect x="18.4640%" y="1861" width="1.4641%" height="15" fill="rgb(210,96,50)" fg:x="243673835" fg:w="19321836"/><text x="18.7140%" y="1871.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (19,321,836 samples, 1.46%)</title><rect x="18.4640%" y="1845" width="1.4641%" height="15" fill="rgb(222,178,2)" fg:x="243673835" fg:w="19321836"/><text x="18.7140%" y="1855.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (6,906,465 samples, 0.52%)</title><rect x="19.4047%" y="1829" width="0.5233%" height="15" fill="rgb(226,74,18)" fg:x="256089206" fg:w="6906465"/><text x="19.6547%" y="1839.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (6,906,465 samples, 0.52%)</title><rect x="19.4047%" y="1813" width="0.5233%" height="15" fill="rgb(225,67,54)" fg:x="256089206" fg:w="6906465"/><text x="19.6547%" y="1823.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (3,322,724 samples, 0.25%)</title><rect x="19.6763%" y="1797" width="0.2518%" height="15" fill="rgb(251,92,32)" fg:x="259672947" fg:w="3322724"/><text x="19.9263%" y="1807.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,322,724 samples, 0.25%)</title><rect x="19.6763%" y="1781" width="0.2518%" height="15" fill="rgb(228,149,22)" fg:x="259672947" fg:w="3322724"/><text x="19.9263%" y="1791.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (3,322,724 samples, 0.25%)</title><rect x="19.6763%" y="1765" width="0.2518%" height="15" fill="rgb(243,54,13)" fg:x="259672947" fg:w="3322724"/><text x="19.9263%" y="1775.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (3,322,724 samples, 0.25%)</title><rect x="19.6763%" y="1749" width="0.2518%" height="15" fill="rgb(243,180,28)" fg:x="259672947" fg:w="3322724"/><text x="19.9263%" y="1759.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (3,322,724 samples, 0.25%)</title><rect x="19.6763%" y="1733" width="0.2518%" height="15" fill="rgb(208,167,24)" fg:x="259672947" fg:w="3322724"/><text x="19.9263%" y="1743.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,322,724 samples, 0.25%)</title><rect x="19.6763%" y="1717" width="0.2518%" height="15" fill="rgb(245,73,45)" fg:x="259672947" fg:w="3322724"/><text x="19.9263%" y="1727.50"></text></g><g><title>[libc.so.6] (3,322,724 samples, 0.25%)</title><rect x="19.6763%" y="1701" width="0.2518%" height="15" fill="rgb(237,203,48)" fg:x="259672947" fg:w="3322724"/><text x="19.9263%" y="1711.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,129,313 samples, 0.24%)</title><rect x="19.9280%" y="1909" width="0.2371%" height="15" fill="rgb(211,197,16)" fg:x="262995671" fg:w="3129313"/><text x="20.1780%" y="1919.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,129,313 samples, 0.24%)</title><rect x="19.9280%" y="1893" width="0.2371%" height="15" fill="rgb(243,99,51)" fg:x="262995671" fg:w="3129313"/><text x="20.1780%" y="1903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,129,313 samples, 0.24%)</title><rect x="19.9280%" y="1877" width="0.2371%" height="15" fill="rgb(215,123,29)" fg:x="262995671" fg:w="3129313"/><text x="20.1780%" y="1887.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,129,313 samples, 0.24%)</title><rect x="19.9280%" y="1861" width="0.2371%" height="15" fill="rgb(239,186,37)" fg:x="262995671" fg:w="3129313"/><text x="20.1780%" y="1871.50"></text></g><g><title>alloc::slice::hack::to_vec (3,129,313 samples, 0.24%)</title><rect x="19.9280%" y="1845" width="0.2371%" height="15" fill="rgb(252,136,39)" fg:x="262995671" fg:w="3129313"/><text x="20.1780%" y="1855.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,129,313 samples, 0.24%)</title><rect x="19.9280%" y="1829" width="0.2371%" height="15" fill="rgb(223,213,32)" fg:x="262995671" fg:w="3129313"/><text x="20.1780%" y="1839.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,129,313 samples, 0.24%)</title><rect x="19.9280%" y="1813" width="0.2371%" height="15" fill="rgb(233,115,5)" fg:x="262995671" fg:w="3129313"/><text x="20.1780%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,129,313 samples, 0.24%)</title><rect x="19.9280%" y="1797" width="0.2371%" height="15" fill="rgb(207,226,44)" fg:x="262995671" fg:w="3129313"/><text x="20.1780%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,129,313 samples, 0.24%)</title><rect x="19.9280%" y="1781" width="0.2371%" height="15" fill="rgb(208,126,0)" fg:x="262995671" fg:w="3129313"/><text x="20.1780%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,129,313 samples, 0.24%)</title><rect x="19.9280%" y="1765" width="0.2371%" height="15" fill="rgb(244,66,21)" fg:x="262995671" fg:w="3129313"/><text x="20.1780%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,129,313 samples, 0.24%)</title><rect x="19.9280%" y="1749" width="0.2371%" height="15" fill="rgb(222,97,12)" fg:x="262995671" fg:w="3129313"/><text x="20.1780%" y="1759.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,129,313 samples, 0.24%)</title><rect x="19.9280%" y="1733" width="0.2371%" height="15" fill="rgb(219,213,19)" fg:x="262995671" fg:w="3129313"/><text x="20.1780%" y="1743.50"></text></g><g><title>alloc::alloc::alloc (3,129,313 samples, 0.24%)</title><rect x="19.9280%" y="1717" width="0.2371%" height="15" fill="rgb(252,169,30)" fg:x="262995671" fg:w="3129313"/><text x="20.1780%" y="1727.50"></text></g><g><title>malloc (3,129,313 samples, 0.24%)</title><rect x="19.9280%" y="1701" width="0.2371%" height="15" fill="rgb(206,32,51)" fg:x="262995671" fg:w="3129313"/><text x="20.1780%" y="1711.50"></text></g><g><title>[libc.so.6] (3,129,313 samples, 0.24%)</title><rect x="19.9280%" y="1685" width="0.2371%" height="15" fill="rgb(250,172,42)" fg:x="262995671" fg:w="3129313"/><text x="20.1780%" y="1695.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (6,556,855 samples, 0.50%)</title><rect x="20.1651%" y="1909" width="0.4968%" height="15" fill="rgb(209,34,43)" fg:x="266124984" fg:w="6556855"/><text x="20.4151%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,556,855 samples, 0.50%)</title><rect x="20.1651%" y="1893" width="0.4968%" height="15" fill="rgb(223,11,35)" fg:x="266124984" fg:w="6556855"/><text x="20.4151%" y="1903.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,556,855 samples, 0.50%)</title><rect x="20.1651%" y="1877" width="0.4968%" height="15" fill="rgb(251,219,26)" fg:x="266124984" fg:w="6556855"/><text x="20.4151%" y="1887.50"></text></g><g><title>alloc::slice::hack::to_vec (6,556,855 samples, 0.50%)</title><rect x="20.1651%" y="1861" width="0.4968%" height="15" fill="rgb(231,119,3)" fg:x="266124984" fg:w="6556855"/><text x="20.4151%" y="1871.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,556,855 samples, 0.50%)</title><rect x="20.1651%" y="1845" width="0.4968%" height="15" fill="rgb(216,97,11)" fg:x="266124984" fg:w="6556855"/><text x="20.4151%" y="1855.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,556,855 samples, 0.50%)</title><rect x="20.1651%" y="1829" width="0.4968%" height="15" fill="rgb(223,59,9)" fg:x="266124984" fg:w="6556855"/><text x="20.4151%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,556,855 samples, 0.50%)</title><rect x="20.1651%" y="1813" width="0.4968%" height="15" fill="rgb(233,93,31)" fg:x="266124984" fg:w="6556855"/><text x="20.4151%" y="1823.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,556,855 samples, 0.50%)</title><rect x="20.1651%" y="1797" width="0.4968%" height="15" fill="rgb(239,81,33)" fg:x="266124984" fg:w="6556855"/><text x="20.4151%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,556,855 samples, 0.50%)</title><rect x="20.1651%" y="1781" width="0.4968%" height="15" fill="rgb(213,120,34)" fg:x="266124984" fg:w="6556855"/><text x="20.4151%" y="1791.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,556,855 samples, 0.50%)</title><rect x="20.1651%" y="1765" width="0.4968%" height="15" fill="rgb(243,49,53)" fg:x="266124984" fg:w="6556855"/><text x="20.4151%" y="1775.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,556,855 samples, 0.50%)</title><rect x="20.1651%" y="1749" width="0.4968%" height="15" fill="rgb(247,216,33)" fg:x="266124984" fg:w="6556855"/><text x="20.4151%" y="1759.50"></text></g><g><title>alloc::alloc::alloc (6,556,855 samples, 0.50%)</title><rect x="20.1651%" y="1733" width="0.4968%" height="15" fill="rgb(226,26,14)" fg:x="266124984" fg:w="6556855"/><text x="20.4151%" y="1743.50"></text></g><g><title>malloc (6,556,855 samples, 0.50%)</title><rect x="20.1651%" y="1717" width="0.4968%" height="15" fill="rgb(215,49,53)" fg:x="266124984" fg:w="6556855"/><text x="20.4151%" y="1727.50"></text></g><g><title>[libc.so.6] (3,053,112 samples, 0.23%)</title><rect x="20.4306%" y="1701" width="0.2313%" height="15" fill="rgb(245,162,40)" fg:x="269628727" fg:w="3053112"/><text x="20.6806%" y="1711.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,962,374 samples, 0.22%)</title><rect x="20.6620%" y="1813" width="0.2245%" height="15" fill="rgb(229,68,17)" fg:x="272681839" fg:w="2962374"/><text x="20.9120%" y="1823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13,763,307 samples, 1.04%)</title><rect x="20.8865%" y="1717" width="1.0429%" height="15" fill="rgb(213,182,10)" fg:x="275644213" fg:w="13763307"/><text x="21.1365%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13,763,307 samples, 1.04%)</title><rect x="20.8865%" y="1701" width="1.0429%" height="15" fill="rgb(245,125,30)" fg:x="275644213" fg:w="13763307"/><text x="21.1365%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (13,763,307 samples, 1.04%)</title><rect x="20.8865%" y="1685" width="1.0429%" height="15" fill="rgb(232,202,2)" fg:x="275644213" fg:w="13763307"/><text x="21.1365%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (13,763,307 samples, 1.04%)</title><rect x="20.8865%" y="1669" width="1.0429%" height="15" fill="rgb(237,140,51)" fg:x="275644213" fg:w="13763307"/><text x="21.1365%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13,763,307 samples, 1.04%)</title><rect x="20.8865%" y="1653" width="1.0429%" height="15" fill="rgb(236,157,25)" fg:x="275644213" fg:w="13763307"/><text x="21.1365%" y="1663.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13,763,307 samples, 1.04%)</title><rect x="20.8865%" y="1637" width="1.0429%" height="15" fill="rgb(219,209,0)" fg:x="275644213" fg:w="13763307"/><text x="21.1365%" y="1647.50"></text></g><g><title>alloc::alloc::alloc (13,763,307 samples, 1.04%)</title><rect x="20.8865%" y="1621" width="1.0429%" height="15" fill="rgb(240,116,54)" fg:x="275644213" fg:w="13763307"/><text x="21.1365%" y="1631.50"></text></g><g><title>malloc (10,003,144 samples, 0.76%)</title><rect x="21.1714%" y="1605" width="0.7580%" height="15" fill="rgb(216,10,36)" fg:x="279404376" fg:w="10003144"/><text x="21.4214%" y="1615.50"></text></g><g><title>[libc.so.6] (10,003,144 samples, 0.76%)</title><rect x="21.1714%" y="1589" width="0.7580%" height="15" fill="rgb(222,72,44)" fg:x="279404376" fg:w="10003144"/><text x="21.4214%" y="1599.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (52,561,931 samples, 3.98%)</title><rect x="18.1979%" y="1925" width="3.9828%" height="15" fill="rgb(232,159,9)" fg:x="240162838" fg:w="52561931"/><text x="18.4479%" y="1935.50">&lt;css..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (20,042,930 samples, 1.52%)</title><rect x="20.6620%" y="1909" width="1.5187%" height="15" fill="rgb(210,39,32)" fg:x="272681839" fg:w="20042930"/><text x="20.9120%" y="1919.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (20,042,930 samples, 1.52%)</title><rect x="20.6620%" y="1893" width="1.5187%" height="15" fill="rgb(216,194,45)" fg:x="272681839" fg:w="20042930"/><text x="20.9120%" y="1903.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (20,042,930 samples, 1.52%)</title><rect x="20.6620%" y="1877" width="1.5187%" height="15" fill="rgb(218,18,35)" fg:x="272681839" fg:w="20042930"/><text x="20.9120%" y="1887.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (20,042,930 samples, 1.52%)</title><rect x="20.6620%" y="1861" width="1.5187%" height="15" fill="rgb(207,83,51)" fg:x="272681839" fg:w="20042930"/><text x="20.9120%" y="1871.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (20,042,930 samples, 1.52%)</title><rect x="20.6620%" y="1845" width="1.5187%" height="15" fill="rgb(225,63,43)" fg:x="272681839" fg:w="20042930"/><text x="20.9120%" y="1855.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (20,042,930 samples, 1.52%)</title><rect x="20.6620%" y="1829" width="1.5187%" height="15" fill="rgb(207,57,36)" fg:x="272681839" fg:w="20042930"/><text x="20.9120%" y="1839.50"></text></g><g><title>core::clone::Clone::clone (17,080,556 samples, 1.29%)</title><rect x="20.8865%" y="1813" width="1.2942%" height="15" fill="rgb(216,99,33)" fg:x="275644213" fg:w="17080556"/><text x="21.1365%" y="1823.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (17,080,556 samples, 1.29%)</title><rect x="20.8865%" y="1797" width="1.2942%" height="15" fill="rgb(225,42,16)" fg:x="275644213" fg:w="17080556"/><text x="21.1365%" y="1807.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,080,556 samples, 1.29%)</title><rect x="20.8865%" y="1781" width="1.2942%" height="15" fill="rgb(220,201,45)" fg:x="275644213" fg:w="17080556"/><text x="21.1365%" y="1791.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,080,556 samples, 1.29%)</title><rect x="20.8865%" y="1765" width="1.2942%" height="15" fill="rgb(225,33,4)" fg:x="275644213" fg:w="17080556"/><text x="21.1365%" y="1775.50"></text></g><g><title>alloc::slice::hack::to_vec (17,080,556 samples, 1.29%)</title><rect x="20.8865%" y="1749" width="1.2942%" height="15" fill="rgb(224,33,50)" fg:x="275644213" fg:w="17080556"/><text x="21.1365%" y="1759.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17,080,556 samples, 1.29%)</title><rect x="20.8865%" y="1733" width="1.2942%" height="15" fill="rgb(246,198,51)" fg:x="275644213" fg:w="17080556"/><text x="21.1365%" y="1743.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,317,249 samples, 0.25%)</title><rect x="21.9293%" y="1717" width="0.2514%" height="15" fill="rgb(205,22,4)" fg:x="289407520" fg:w="3317249"/><text x="22.1793%" y="1727.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,317,249 samples, 0.25%)</title><rect x="21.9293%" y="1701" width="0.2514%" height="15" fill="rgb(206,3,8)" fg:x="289407520" fg:w="3317249"/><text x="22.1793%" y="1711.50"></text></g><g><title>[libc.so.6] (3,317,249 samples, 0.25%)</title><rect x="21.9293%" y="1685" width="0.2514%" height="15" fill="rgb(251,23,15)" fg:x="289407520" fg:w="3317249"/><text x="22.1793%" y="1695.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (62,637,991 samples, 4.75%)</title><rect x="17.9355%" y="1989" width="4.7463%" height="15" fill="rgb(252,88,28)" fg:x="236699666" fg:w="62637991"/><text x="18.1855%" y="1999.50">&lt;alloc..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (62,637,991 samples, 4.75%)</title><rect x="17.9355%" y="1973" width="4.7463%" height="15" fill="rgb(212,127,14)" fg:x="236699666" fg:w="62637991"/><text x="18.1855%" y="1983.50">alloc:..</text></g><g><title>alloc::slice::hack::to_vec (62,637,991 samples, 4.75%)</title><rect x="17.9355%" y="1957" width="4.7463%" height="15" fill="rgb(247,145,37)" fg:x="236699666" fg:w="62637991"/><text x="18.1855%" y="1967.50">alloc:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (62,637,991 samples, 4.75%)</title><rect x="17.9355%" y="1941" width="4.7463%" height="15" fill="rgb(209,117,53)" fg:x="236699666" fg:w="62637991"/><text x="18.1855%" y="1951.50">&lt;T as ..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,612,888 samples, 0.50%)</title><rect x="22.1807%" y="1925" width="0.5011%" height="15" fill="rgb(212,90,42)" fg:x="292724769" fg:w="6612888"/><text x="22.4307%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,612,888 samples, 0.50%)</title><rect x="22.1807%" y="1909" width="0.5011%" height="15" fill="rgb(218,164,37)" fg:x="292724769" fg:w="6612888"/><text x="22.4307%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,612,888 samples, 0.50%)</title><rect x="22.1807%" y="1893" width="0.5011%" height="15" fill="rgb(246,65,34)" fg:x="292724769" fg:w="6612888"/><text x="22.4307%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,612,888 samples, 0.50%)</title><rect x="22.1807%" y="1877" width="0.5011%" height="15" fill="rgb(231,100,33)" fg:x="292724769" fg:w="6612888"/><text x="22.4307%" y="1887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,612,888 samples, 0.50%)</title><rect x="22.1807%" y="1861" width="0.5011%" height="15" fill="rgb(228,126,14)" fg:x="292724769" fg:w="6612888"/><text x="22.4307%" y="1871.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,612,888 samples, 0.50%)</title><rect x="22.1807%" y="1845" width="0.5011%" height="15" fill="rgb(215,173,21)" fg:x="292724769" fg:w="6612888"/><text x="22.4307%" y="1855.50"></text></g><g><title>alloc::alloc::alloc (6,612,888 samples, 0.50%)</title><rect x="22.1807%" y="1829" width="0.5011%" height="15" fill="rgb(210,6,40)" fg:x="292724769" fg:w="6612888"/><text x="22.4307%" y="1839.50"></text></g><g><title>malloc (6,612,888 samples, 0.50%)</title><rect x="22.1807%" y="1813" width="0.5011%" height="15" fill="rgb(212,48,18)" fg:x="292724769" fg:w="6612888"/><text x="22.4307%" y="1823.50"></text></g><g><title>[libc.so.6] (6,612,888 samples, 0.50%)</title><rect x="22.1807%" y="1797" width="0.5011%" height="15" fill="rgb(230,214,11)" fg:x="292724769" fg:w="6612888"/><text x="22.4307%" y="1807.50"></text></g><g><title>__rdl_alloc (3,033,996 samples, 0.23%)</title><rect x="23.4562%" y="1781" width="0.2299%" height="15" fill="rgb(254,105,39)" fg:x="309557958" fg:w="3033996"/><text x="23.7062%" y="1791.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,033,996 samples, 0.23%)</title><rect x="23.4562%" y="1765" width="0.2299%" height="15" fill="rgb(245,158,5)" fg:x="309557958" fg:w="3033996"/><text x="23.7062%" y="1775.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (19,198,683 samples, 1.45%)</title><rect x="22.6818%" y="1989" width="1.4547%" height="15" fill="rgb(249,208,11)" fg:x="299337657" fg:w="19198683"/><text x="22.9318%" y="1999.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (8,978,382 samples, 0.68%)</title><rect x="23.4562%" y="1973" width="0.6803%" height="15" fill="rgb(210,39,28)" fg:x="309557958" fg:w="8978382"/><text x="23.7062%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,978,382 samples, 0.68%)</title><rect x="23.4562%" y="1957" width="0.6803%" height="15" fill="rgb(211,56,53)" fg:x="309557958" fg:w="8978382"/><text x="23.7062%" y="1967.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8,978,382 samples, 0.68%)</title><rect x="23.4562%" y="1941" width="0.6803%" height="15" fill="rgb(226,201,30)" fg:x="309557958" fg:w="8978382"/><text x="23.7062%" y="1951.50"></text></g><g><title>alloc::slice::hack::to_vec (8,978,382 samples, 0.68%)</title><rect x="23.4562%" y="1925" width="0.6803%" height="15" fill="rgb(239,101,34)" fg:x="309557958" fg:w="8978382"/><text x="23.7062%" y="1935.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8,978,382 samples, 0.68%)</title><rect x="23.4562%" y="1909" width="0.6803%" height="15" fill="rgb(226,209,5)" fg:x="309557958" fg:w="8978382"/><text x="23.7062%" y="1919.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8,978,382 samples, 0.68%)</title><rect x="23.4562%" y="1893" width="0.6803%" height="15" fill="rgb(250,105,47)" fg:x="309557958" fg:w="8978382"/><text x="23.7062%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8,978,382 samples, 0.68%)</title><rect x="23.4562%" y="1877" width="0.6803%" height="15" fill="rgb(230,72,3)" fg:x="309557958" fg:w="8978382"/><text x="23.7062%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (8,978,382 samples, 0.68%)</title><rect x="23.4562%" y="1861" width="0.6803%" height="15" fill="rgb(232,218,39)" fg:x="309557958" fg:w="8978382"/><text x="23.7062%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (8,978,382 samples, 0.68%)</title><rect x="23.4562%" y="1845" width="0.6803%" height="15" fill="rgb(248,166,6)" fg:x="309557958" fg:w="8978382"/><text x="23.7062%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8,978,382 samples, 0.68%)</title><rect x="23.4562%" y="1829" width="0.6803%" height="15" fill="rgb(247,89,20)" fg:x="309557958" fg:w="8978382"/><text x="23.7062%" y="1839.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8,978,382 samples, 0.68%)</title><rect x="23.4562%" y="1813" width="0.6803%" height="15" fill="rgb(248,130,54)" fg:x="309557958" fg:w="8978382"/><text x="23.7062%" y="1823.50"></text></g><g><title>alloc::alloc::alloc (8,978,382 samples, 0.68%)</title><rect x="23.4562%" y="1797" width="0.6803%" height="15" fill="rgb(234,196,4)" fg:x="309557958" fg:w="8978382"/><text x="23.7062%" y="1807.50"></text></g><g><title>malloc (5,944,386 samples, 0.45%)</title><rect x="23.6861%" y="1781" width="0.4504%" height="15" fill="rgb(250,143,31)" fg:x="312591954" fg:w="5944386"/><text x="23.9361%" y="1791.50"></text></g><g><title>[libc.so.6] (5,944,386 samples, 0.45%)</title><rect x="23.6861%" y="1765" width="0.4504%" height="15" fill="rgb(211,110,34)" fg:x="312591954" fg:w="5944386"/><text x="23.9361%" y="1775.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,512,538 samples, 0.27%)</title><rect x="24.1365%" y="1909" width="0.2662%" height="15" fill="rgb(215,124,48)" fg:x="318536340" fg:w="3512538"/><text x="24.3865%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,512,538 samples, 0.27%)</title><rect x="24.1365%" y="1893" width="0.2662%" height="15" fill="rgb(216,46,13)" fg:x="318536340" fg:w="3512538"/><text x="24.3865%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,512,538 samples, 0.27%)</title><rect x="24.1365%" y="1877" width="0.2662%" height="15" fill="rgb(205,184,25)" fg:x="318536340" fg:w="3512538"/><text x="24.3865%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,512,538 samples, 0.27%)</title><rect x="24.1365%" y="1861" width="0.2662%" height="15" fill="rgb(228,1,10)" fg:x="318536340" fg:w="3512538"/><text x="24.3865%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,512,538 samples, 0.27%)</title><rect x="24.1365%" y="1845" width="0.2662%" height="15" fill="rgb(213,116,27)" fg:x="318536340" fg:w="3512538"/><text x="24.3865%" y="1855.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,512,538 samples, 0.27%)</title><rect x="24.1365%" y="1829" width="0.2662%" height="15" fill="rgb(241,95,50)" fg:x="318536340" fg:w="3512538"/><text x="24.3865%" y="1839.50"></text></g><g><title>alloc::alloc::alloc (3,512,538 samples, 0.27%)</title><rect x="24.1365%" y="1813" width="0.2662%" height="15" fill="rgb(238,48,32)" fg:x="318536340" fg:w="3512538"/><text x="24.3865%" y="1823.50"></text></g><g><title>malloc (3,512,538 samples, 0.27%)</title><rect x="24.1365%" y="1797" width="0.2662%" height="15" fill="rgb(235,113,49)" fg:x="318536340" fg:w="3512538"/><text x="24.3865%" y="1807.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (6,202,471 samples, 0.47%)</title><rect x="24.1365%" y="1989" width="0.4700%" height="15" fill="rgb(205,127,43)" fg:x="318536340" fg:w="6202471"/><text x="24.3865%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,202,471 samples, 0.47%)</title><rect x="24.1365%" y="1973" width="0.4700%" height="15" fill="rgb(250,162,2)" fg:x="318536340" fg:w="6202471"/><text x="24.3865%" y="1983.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,202,471 samples, 0.47%)</title><rect x="24.1365%" y="1957" width="0.4700%" height="15" fill="rgb(220,13,41)" fg:x="318536340" fg:w="6202471"/><text x="24.3865%" y="1967.50"></text></g><g><title>alloc::slice::hack::to_vec (6,202,471 samples, 0.47%)</title><rect x="24.1365%" y="1941" width="0.4700%" height="15" fill="rgb(249,221,25)" fg:x="318536340" fg:w="6202471"/><text x="24.3865%" y="1951.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,202,471 samples, 0.47%)</title><rect x="24.1365%" y="1925" width="0.4700%" height="15" fill="rgb(215,208,19)" fg:x="318536340" fg:w="6202471"/><text x="24.3865%" y="1935.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,689,933 samples, 0.20%)</title><rect x="24.4027%" y="1909" width="0.2038%" height="15" fill="rgb(236,175,2)" fg:x="322048878" fg:w="2689933"/><text x="24.6527%" y="1919.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,689,933 samples, 0.20%)</title><rect x="24.4027%" y="1893" width="0.2038%" height="15" fill="rgb(241,52,2)" fg:x="322048878" fg:w="2689933"/><text x="24.6527%" y="1903.50"></text></g><g><title>[libc.so.6] (2,689,933 samples, 0.20%)</title><rect x="24.4027%" y="1877" width="0.2038%" height="15" fill="rgb(248,140,14)" fg:x="322048878" fg:w="2689933"/><text x="24.6527%" y="1887.50"></text></g><g><title>__rdl_alloc (3,612,258 samples, 0.27%)</title><rect x="25.3271%" y="1685" width="0.2737%" height="15" fill="rgb(253,22,42)" fg:x="334248538" fg:w="3612258"/><text x="25.5771%" y="1695.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,612,258 samples, 0.27%)</title><rect x="25.3271%" y="1669" width="0.2737%" height="15" fill="rgb(234,61,47)" fg:x="334248538" fg:w="3612258"/><text x="25.5771%" y="1679.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (16,246,646 samples, 1.23%)</title><rect x="25.0642%" y="1877" width="1.2311%" height="15" fill="rgb(208,226,15)" fg:x="330779450" fg:w="16246646"/><text x="25.3142%" y="1887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12,777,558 samples, 0.97%)</title><rect x="25.3271%" y="1861" width="0.9682%" height="15" fill="rgb(217,221,4)" fg:x="334248538" fg:w="12777558"/><text x="25.5771%" y="1871.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12,777,558 samples, 0.97%)</title><rect x="25.3271%" y="1845" width="0.9682%" height="15" fill="rgb(212,174,34)" fg:x="334248538" fg:w="12777558"/><text x="25.5771%" y="1855.50"></text></g><g><title>alloc::slice::hack::to_vec (12,777,558 samples, 0.97%)</title><rect x="25.3271%" y="1829" width="0.9682%" height="15" fill="rgb(253,83,4)" fg:x="334248538" fg:w="12777558"/><text x="25.5771%" y="1839.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12,777,558 samples, 0.97%)</title><rect x="25.3271%" y="1813" width="0.9682%" height="15" fill="rgb(250,195,49)" fg:x="334248538" fg:w="12777558"/><text x="25.5771%" y="1823.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12,777,558 samples, 0.97%)</title><rect x="25.3271%" y="1797" width="0.9682%" height="15" fill="rgb(241,192,25)" fg:x="334248538" fg:w="12777558"/><text x="25.5771%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12,777,558 samples, 0.97%)</title><rect x="25.3271%" y="1781" width="0.9682%" height="15" fill="rgb(208,124,10)" fg:x="334248538" fg:w="12777558"/><text x="25.5771%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (12,777,558 samples, 0.97%)</title><rect x="25.3271%" y="1765" width="0.9682%" height="15" fill="rgb(222,33,0)" fg:x="334248538" fg:w="12777558"/><text x="25.5771%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (12,777,558 samples, 0.97%)</title><rect x="25.3271%" y="1749" width="0.9682%" height="15" fill="rgb(234,209,28)" fg:x="334248538" fg:w="12777558"/><text x="25.5771%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12,777,558 samples, 0.97%)</title><rect x="25.3271%" y="1733" width="0.9682%" height="15" fill="rgb(224,11,23)" fg:x="334248538" fg:w="12777558"/><text x="25.5771%" y="1743.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12,777,558 samples, 0.97%)</title><rect x="25.3271%" y="1717" width="0.9682%" height="15" fill="rgb(232,99,1)" fg:x="334248538" fg:w="12777558"/><text x="25.5771%" y="1727.50"></text></g><g><title>alloc::alloc::alloc (12,777,558 samples, 0.97%)</title><rect x="25.3271%" y="1701" width="0.9682%" height="15" fill="rgb(237,95,45)" fg:x="334248538" fg:w="12777558"/><text x="25.5771%" y="1711.50"></text></g><g><title>malloc (9,165,300 samples, 0.69%)</title><rect x="25.6008%" y="1685" width="0.6945%" height="15" fill="rgb(208,109,11)" fg:x="337860796" fg:w="9165300"/><text x="25.8508%" y="1695.50"></text></g><g><title>[libc.so.6] (9,165,300 samples, 0.69%)</title><rect x="25.6008%" y="1669" width="0.6945%" height="15" fill="rgb(216,190,48)" fg:x="337860796" fg:w="9165300"/><text x="25.8508%" y="1679.50"></text></g><g><title>core::clone::Clone::clone (17,701,594 samples, 1.34%)</title><rect x="25.0642%" y="1893" width="1.3413%" height="15" fill="rgb(251,171,36)" fg:x="330779450" fg:w="17701594"/><text x="25.3142%" y="1903.50"></text></g><g><title>malloc (1,454,948 samples, 0.11%)</title><rect x="26.2953%" y="1877" width="0.1102%" height="15" fill="rgb(230,62,22)" fg:x="347026096" fg:w="1454948"/><text x="26.5453%" y="1887.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (3,725,684 samples, 0.28%)</title><rect x="26.4055%" y="1893" width="0.2823%" height="15" fill="rgb(225,114,35)" fg:x="348481044" fg:w="3725684"/><text x="26.6555%" y="1903.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,725,684 samples, 0.28%)</title><rect x="26.4055%" y="1877" width="0.2823%" height="15" fill="rgb(215,118,42)" fg:x="348481044" fg:w="3725684"/><text x="26.6555%" y="1887.50"></text></g><g><title>[libc.so.6] (3,725,684 samples, 0.28%)</title><rect x="26.4055%" y="1861" width="0.2823%" height="15" fill="rgb(243,119,21)" fg:x="348481044" fg:w="3725684"/><text x="26.6555%" y="1871.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (134,866,107 samples, 10.22%)</title><rect x="16.9696%" y="2005" width="10.2192%" height="15" fill="rgb(252,177,53)" fg:x="223953102" fg:w="134866107"/><text x="17.2196%" y="2015.50">&lt;css_bitvector_..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (34,080,398 samples, 2.58%)</title><rect x="24.6065%" y="1989" width="2.5824%" height="15" fill="rgb(237,209,29)" fg:x="324738811" fg:w="34080398"/><text x="24.8565%" y="1999.50">&lt;s..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (34,080,398 samples, 2.58%)</title><rect x="24.6065%" y="1973" width="2.5824%" height="15" fill="rgb(212,65,23)" fg:x="324738811" fg:w="34080398"/><text x="24.8565%" y="1983.50">&lt;h..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (31,169,517 samples, 2.36%)</title><rect x="24.8271%" y="1957" width="2.3618%" height="15" fill="rgb(230,222,46)" fg:x="327649692" fg:w="31169517"/><text x="25.0771%" y="1967.50">&lt;h..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (28,039,759 samples, 2.12%)</title><rect x="25.0642%" y="1941" width="2.1247%" height="15" fill="rgb(215,135,32)" fg:x="330779450" fg:w="28039759"/><text x="25.3142%" y="1951.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (28,039,759 samples, 2.12%)</title><rect x="25.0642%" y="1925" width="2.1247%" height="15" fill="rgb(246,101,22)" fg:x="330779450" fg:w="28039759"/><text x="25.3142%" y="1935.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (28,039,759 samples, 2.12%)</title><rect x="25.0642%" y="1909" width="2.1247%" height="15" fill="rgb(206,107,13)" fg:x="330779450" fg:w="28039759"/><text x="25.3142%" y="1919.50">h..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (6,612,481 samples, 0.50%)</title><rect x="26.6878%" y="1893" width="0.5010%" height="15" fill="rgb(250,100,44)" fg:x="352206728" fg:w="6612481"/><text x="26.9378%" y="1903.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (6,612,481 samples, 0.50%)</title><rect x="26.6878%" y="1877" width="0.5010%" height="15" fill="rgb(231,147,38)" fg:x="352206728" fg:w="6612481"/><text x="26.9378%" y="1887.50"></text></g><g><title>core::ptr::write (6,612,481 samples, 0.50%)</title><rect x="26.6878%" y="1861" width="0.5010%" height="15" fill="rgb(229,8,40)" fg:x="352206728" fg:w="6612481"/><text x="26.9378%" y="1871.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,632,002 samples, 0.28%)</title><rect x="27.1889%" y="2005" width="0.2752%" height="15" fill="rgb(221,135,30)" fg:x="358819209" fg:w="3632002"/><text x="27.4389%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,632,002 samples, 0.28%)</title><rect x="27.1889%" y="1989" width="0.2752%" height="15" fill="rgb(249,193,18)" fg:x="358819209" fg:w="3632002"/><text x="27.4389%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,632,002 samples, 0.28%)</title><rect x="27.1889%" y="1973" width="0.2752%" height="15" fill="rgb(209,133,39)" fg:x="358819209" fg:w="3632002"/><text x="27.4389%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,632,002 samples, 0.28%)</title><rect x="27.1889%" y="1957" width="0.2752%" height="15" fill="rgb(232,100,14)" fg:x="358819209" fg:w="3632002"/><text x="27.4389%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,632,002 samples, 0.28%)</title><rect x="27.1889%" y="1941" width="0.2752%" height="15" fill="rgb(224,185,1)" fg:x="358819209" fg:w="3632002"/><text x="27.4389%" y="1951.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,632,002 samples, 0.28%)</title><rect x="27.1889%" y="1925" width="0.2752%" height="15" fill="rgb(223,139,8)" fg:x="358819209" fg:w="3632002"/><text x="27.4389%" y="1935.50"></text></g><g><title>alloc::alloc::alloc (3,632,002 samples, 0.28%)</title><rect x="27.1889%" y="1909" width="0.2752%" height="15" fill="rgb(232,213,38)" fg:x="358819209" fg:w="3632002"/><text x="27.4389%" y="1919.50"></text></g><g><title>__rdl_alloc (3,632,002 samples, 0.28%)</title><rect x="27.1889%" y="1893" width="0.2752%" height="15" fill="rgb(207,94,22)" fg:x="358819209" fg:w="3632002"/><text x="27.4389%" y="1903.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,632,002 samples, 0.28%)</title><rect x="27.1889%" y="1877" width="0.2752%" height="15" fill="rgb(219,183,54)" fg:x="358819209" fg:w="3632002"/><text x="27.4389%" y="1887.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (142,089,760 samples, 10.77%)</title><rect x="16.9696%" y="2069" width="10.7666%" height="15" fill="rgb(216,185,54)" fg:x="223953102" fg:w="142089760"/><text x="17.2196%" y="2079.50">&lt;alloc::vec::Vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (142,089,760 samples, 10.77%)</title><rect x="16.9696%" y="2053" width="10.7666%" height="15" fill="rgb(254,217,39)" fg:x="223953102" fg:w="142089760"/><text x="17.2196%" y="2063.50">alloc::slice::&lt;i..</text></g><g><title>alloc::slice::hack::to_vec (142,089,760 samples, 10.77%)</title><rect x="16.9696%" y="2037" width="10.7666%" height="15" fill="rgb(240,178,23)" fg:x="223953102" fg:w="142089760"/><text x="17.2196%" y="2047.50">alloc::slice::ha..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (142,089,760 samples, 10.77%)</title><rect x="16.9696%" y="2021" width="10.7666%" height="15" fill="rgb(218,11,47)" fg:x="223953102" fg:w="142089760"/><text x="17.2196%" y="2031.50">&lt;T as alloc::sli..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3,591,651 samples, 0.27%)</title><rect x="27.4641%" y="2005" width="0.2722%" height="15" fill="rgb(218,51,51)" fg:x="362451211" fg:w="3591651"/><text x="27.7141%" y="2015.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (13,363,352 samples, 1.01%)</title><rect x="27.7362%" y="2069" width="1.0126%" height="15" fill="rgb(238,126,27)" fg:x="366042862" fg:w="13363352"/><text x="27.9862%" y="2079.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (13,363,352 samples, 1.01%)</title><rect x="27.7362%" y="2053" width="1.0126%" height="15" fill="rgb(249,202,22)" fg:x="366042862" fg:w="13363352"/><text x="27.9862%" y="2063.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,872,924 samples, 0.75%)</title><rect x="28.0007%" y="2037" width="0.7481%" height="15" fill="rgb(254,195,49)" fg:x="369533290" fg:w="9872924"/><text x="28.2507%" y="2047.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,872,924 samples, 0.75%)</title><rect x="28.0007%" y="2021" width="0.7481%" height="15" fill="rgb(208,123,14)" fg:x="369533290" fg:w="9872924"/><text x="28.2507%" y="2031.50"></text></g><g><title>alloc::slice::hack::to_vec (9,872,924 samples, 0.75%)</title><rect x="28.0007%" y="2005" width="0.7481%" height="15" fill="rgb(224,200,8)" fg:x="369533290" fg:w="9872924"/><text x="28.2507%" y="2015.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,872,924 samples, 0.75%)</title><rect x="28.0007%" y="1989" width="0.7481%" height="15" fill="rgb(217,61,36)" fg:x="369533290" fg:w="9872924"/><text x="28.2507%" y="1999.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9,872,924 samples, 0.75%)</title><rect x="28.0007%" y="1973" width="0.7481%" height="15" fill="rgb(206,35,45)" fg:x="369533290" fg:w="9872924"/><text x="28.2507%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9,872,924 samples, 0.75%)</title><rect x="28.0007%" y="1957" width="0.7481%" height="15" fill="rgb(217,65,33)" fg:x="369533290" fg:w="9872924"/><text x="28.2507%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (9,872,924 samples, 0.75%)</title><rect x="28.0007%" y="1941" width="0.7481%" height="15" fill="rgb(222,158,48)" fg:x="369533290" fg:w="9872924"/><text x="28.2507%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (9,872,924 samples, 0.75%)</title><rect x="28.0007%" y="1925" width="0.7481%" height="15" fill="rgb(254,2,54)" fg:x="369533290" fg:w="9872924"/><text x="28.2507%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9,872,924 samples, 0.75%)</title><rect x="28.0007%" y="1909" width="0.7481%" height="15" fill="rgb(250,143,38)" fg:x="369533290" fg:w="9872924"/><text x="28.2507%" y="1919.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9,872,924 samples, 0.75%)</title><rect x="28.0007%" y="1893" width="0.7481%" height="15" fill="rgb(248,25,0)" fg:x="369533290" fg:w="9872924"/><text x="28.2507%" y="1903.50"></text></g><g><title>alloc::alloc::alloc (9,872,924 samples, 0.75%)</title><rect x="28.0007%" y="1877" width="0.7481%" height="15" fill="rgb(206,152,27)" fg:x="369533290" fg:w="9872924"/><text x="28.2507%" y="1887.50"></text></g><g><title>malloc (9,872,924 samples, 0.75%)</title><rect x="28.0007%" y="1861" width="0.7481%" height="15" fill="rgb(240,77,30)" fg:x="369533290" fg:w="9872924"/><text x="28.2507%" y="1871.50"></text></g><g><title>[libc.so.6] (6,762,993 samples, 0.51%)</title><rect x="28.2364%" y="1845" width="0.5125%" height="15" fill="rgb(231,5,3)" fg:x="372643221" fg:w="6762993"/><text x="28.4864%" y="1855.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,438,897 samples, 0.26%)</title><rect x="28.7488%" y="2069" width="0.2606%" height="15" fill="rgb(207,226,32)" fg:x="379406214" fg:w="3438897"/><text x="28.9988%" y="2079.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,438,897 samples, 0.26%)</title><rect x="28.7488%" y="2053" width="0.2606%" height="15" fill="rgb(222,207,47)" fg:x="379406214" fg:w="3438897"/><text x="28.9988%" y="2063.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,438,897 samples, 0.26%)</title><rect x="28.7488%" y="2037" width="0.2606%" height="15" fill="rgb(229,115,45)" fg:x="379406214" fg:w="3438897"/><text x="28.9988%" y="2047.50"></text></g><g><title>alloc::slice::hack::to_vec (3,438,897 samples, 0.26%)</title><rect x="28.7488%" y="2021" width="0.2606%" height="15" fill="rgb(224,191,6)" fg:x="379406214" fg:w="3438897"/><text x="28.9988%" y="2031.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,438,897 samples, 0.26%)</title><rect x="28.7488%" y="2005" width="0.2606%" height="15" fill="rgb(230,227,24)" fg:x="379406214" fg:w="3438897"/><text x="28.9988%" y="2015.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,438,897 samples, 0.26%)</title><rect x="28.7488%" y="1989" width="0.2606%" height="15" fill="rgb(228,80,19)" fg:x="379406214" fg:w="3438897"/><text x="28.9988%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,438,897 samples, 0.26%)</title><rect x="28.7488%" y="1973" width="0.2606%" height="15" fill="rgb(247,229,0)" fg:x="379406214" fg:w="3438897"/><text x="28.9988%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,438,897 samples, 0.26%)</title><rect x="28.7488%" y="1957" width="0.2606%" height="15" fill="rgb(237,194,15)" fg:x="379406214" fg:w="3438897"/><text x="28.9988%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,438,897 samples, 0.26%)</title><rect x="28.7488%" y="1941" width="0.2606%" height="15" fill="rgb(219,203,20)" fg:x="379406214" fg:w="3438897"/><text x="28.9988%" y="1951.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,438,897 samples, 0.26%)</title><rect x="28.7488%" y="1925" width="0.2606%" height="15" fill="rgb(234,128,8)" fg:x="379406214" fg:w="3438897"/><text x="28.9988%" y="1935.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,438,897 samples, 0.26%)</title><rect x="28.7488%" y="1909" width="0.2606%" height="15" fill="rgb(248,202,8)" fg:x="379406214" fg:w="3438897"/><text x="28.9988%" y="1919.50"></text></g><g><title>alloc::alloc::alloc (3,438,897 samples, 0.26%)</title><rect x="28.7488%" y="1893" width="0.2606%" height="15" fill="rgb(206,104,37)" fg:x="379406214" fg:w="3438897"/><text x="28.9988%" y="1903.50"></text></g><g><title>malloc (3,438,897 samples, 0.26%)</title><rect x="28.7488%" y="1877" width="0.2606%" height="15" fill="rgb(223,8,27)" fg:x="379406214" fg:w="3438897"/><text x="28.9988%" y="1887.50"></text></g><g><title>[libc.so.6] (3,438,897 samples, 0.26%)</title><rect x="28.7488%" y="1861" width="0.2606%" height="15" fill="rgb(216,217,28)" fg:x="379406214" fg:w="3438897"/><text x="28.9988%" y="1871.50"></text></g><g><title>[libc.so.6] (3,000,798 samples, 0.23%)</title><rect x="29.2187%" y="1765" width="0.2274%" height="15" fill="rgb(249,199,1)" fg:x="385607072" fg:w="3000798"/><text x="29.4687%" y="1775.50"></text></g><g><title>core::clone::Clone::clone (24,698,961 samples, 1.87%)</title><rect x="29.0094%" y="1973" width="1.8715%" height="15" fill="rgb(240,85,17)" fg:x="382845111" fg:w="24698961"/><text x="29.2594%" y="1983.50">c..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (24,698,961 samples, 1.87%)</title><rect x="29.0094%" y="1957" width="1.8715%" height="15" fill="rgb(206,108,45)" fg:x="382845111" fg:w="24698961"/><text x="29.2594%" y="1967.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21,937,000 samples, 1.66%)</title><rect x="29.2187%" y="1941" width="1.6622%" height="15" fill="rgb(245,210,41)" fg:x="385607072" fg:w="21937000"/><text x="29.4687%" y="1951.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21,937,000 samples, 1.66%)</title><rect x="29.2187%" y="1925" width="1.6622%" height="15" fill="rgb(206,13,37)" fg:x="385607072" fg:w="21937000"/><text x="29.4687%" y="1935.50"></text></g><g><title>alloc::slice::hack::to_vec (21,937,000 samples, 1.66%)</title><rect x="29.2187%" y="1909" width="1.6622%" height="15" fill="rgb(250,61,18)" fg:x="385607072" fg:w="21937000"/><text x="29.4687%" y="1919.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21,937,000 samples, 1.66%)</title><rect x="29.2187%" y="1893" width="1.6622%" height="15" fill="rgb(235,172,48)" fg:x="385607072" fg:w="21937000"/><text x="29.4687%" y="1903.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21,937,000 samples, 1.66%)</title><rect x="29.2187%" y="1877" width="1.6622%" height="15" fill="rgb(249,201,17)" fg:x="385607072" fg:w="21937000"/><text x="29.4687%" y="1887.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21,937,000 samples, 1.66%)</title><rect x="29.2187%" y="1861" width="1.6622%" height="15" fill="rgb(219,208,6)" fg:x="385607072" fg:w="21937000"/><text x="29.4687%" y="1871.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (21,937,000 samples, 1.66%)</title><rect x="29.2187%" y="1845" width="1.6622%" height="15" fill="rgb(248,31,23)" fg:x="385607072" fg:w="21937000"/><text x="29.4687%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (21,937,000 samples, 1.66%)</title><rect x="29.2187%" y="1829" width="1.6622%" height="15" fill="rgb(245,15,42)" fg:x="385607072" fg:w="21937000"/><text x="29.4687%" y="1839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21,937,000 samples, 1.66%)</title><rect x="29.2187%" y="1813" width="1.6622%" height="15" fill="rgb(222,217,39)" fg:x="385607072" fg:w="21937000"/><text x="29.4687%" y="1823.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21,937,000 samples, 1.66%)</title><rect x="29.2187%" y="1797" width="1.6622%" height="15" fill="rgb(210,219,27)" fg:x="385607072" fg:w="21937000"/><text x="29.4687%" y="1807.50"></text></g><g><title>alloc::alloc::alloc (21,937,000 samples, 1.66%)</title><rect x="29.2187%" y="1781" width="1.6622%" height="15" fill="rgb(252,166,36)" fg:x="385607072" fg:w="21937000"/><text x="29.4687%" y="1791.50"></text></g><g><title>malloc (18,936,202 samples, 1.43%)</title><rect x="29.4461%" y="1765" width="1.4349%" height="15" fill="rgb(245,132,34)" fg:x="388607870" fg:w="18936202"/><text x="29.6961%" y="1775.50"></text></g><g><title>[libc.so.6] (16,410,085 samples, 1.24%)</title><rect x="29.6375%" y="1749" width="1.2434%" height="15" fill="rgb(236,54,3)" fg:x="391133987" fg:w="16410085"/><text x="29.8875%" y="1759.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (27,824,473 samples, 2.11%)</title><rect x="29.0094%" y="2005" width="2.1083%" height="15" fill="rgb(241,173,43)" fg:x="382845111" fg:w="27824473"/><text x="29.2594%" y="2015.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (27,824,473 samples, 2.11%)</title><rect x="29.0094%" y="1989" width="2.1083%" height="15" fill="rgb(215,190,9)" fg:x="382845111" fg:w="27824473"/><text x="29.2594%" y="1999.50">h..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (3,125,512 samples, 0.24%)</title><rect x="30.8809%" y="1973" width="0.2368%" height="15" fill="rgb(242,101,16)" fg:x="407544072" fg:w="3125512"/><text x="31.1309%" y="1983.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,125,512 samples, 0.24%)</title><rect x="30.8809%" y="1957" width="0.2368%" height="15" fill="rgb(223,190,21)" fg:x="407544072" fg:w="3125512"/><text x="31.1309%" y="1967.50"></text></g><g><title>[libc.so.6] (3,125,512 samples, 0.24%)</title><rect x="30.8809%" y="1941" width="0.2368%" height="15" fill="rgb(215,228,25)" fg:x="407544072" fg:w="3125512"/><text x="31.1309%" y="1951.50"></text></g><g><title>__rdl_alloc (3,587,935 samples, 0.27%)</title><rect x="31.1178%" y="1909" width="0.2719%" height="15" fill="rgb(225,36,22)" fg:x="410669584" fg:w="3587935"/><text x="31.3678%" y="1919.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,587,935 samples, 0.27%)</title><rect x="31.1178%" y="1893" width="0.2719%" height="15" fill="rgb(251,106,46)" fg:x="410669584" fg:w="3587935"/><text x="31.3678%" y="1903.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (207,137,881 samples, 15.70%)</title><rect x="16.7176%" y="2085" width="15.6955%" height="15" fill="rgb(208,90,1)" fg:x="220626443" fg:w="207137881"/><text x="16.9676%" y="2095.50">&lt;css_bitvector_compiler:..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (44,919,213 samples, 3.40%)</title><rect x="29.0094%" y="2069" width="3.4037%" height="15" fill="rgb(243,10,4)" fg:x="382845111" fg:w="44919213"/><text x="29.2594%" y="2079.50">&lt;st..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (44,919,213 samples, 3.40%)</title><rect x="29.0094%" y="2053" width="3.4037%" height="15" fill="rgb(212,137,27)" fg:x="382845111" fg:w="44919213"/><text x="29.2594%" y="2063.50">&lt;ha..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (44,919,213 samples, 3.40%)</title><rect x="29.0094%" y="2037" width="3.4037%" height="15" fill="rgb(231,220,49)" fg:x="382845111" fg:w="44919213"/><text x="29.2594%" y="2047.50">&lt;ha..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (44,919,213 samples, 3.40%)</title><rect x="29.0094%" y="2021" width="3.4037%" height="15" fill="rgb(237,96,20)" fg:x="382845111" fg:w="44919213"/><text x="29.2594%" y="2031.50">&lt;ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (17,094,740 samples, 1.30%)</title><rect x="31.1178%" y="2005" width="1.2953%" height="15" fill="rgb(239,229,30)" fg:x="410669584" fg:w="17094740"/><text x="31.3678%" y="2015.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (17,094,740 samples, 1.30%)</title><rect x="31.1178%" y="1989" width="1.2953%" height="15" fill="rgb(219,65,33)" fg:x="410669584" fg:w="17094740"/><text x="31.3678%" y="1999.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (17,094,740 samples, 1.30%)</title><rect x="31.1178%" y="1973" width="1.2953%" height="15" fill="rgb(243,134,7)" fg:x="410669584" fg:w="17094740"/><text x="31.3678%" y="1983.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17,094,740 samples, 1.30%)</title><rect x="31.1178%" y="1957" width="1.2953%" height="15" fill="rgb(216,177,54)" fg:x="410669584" fg:w="17094740"/><text x="31.3678%" y="1967.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17,094,740 samples, 1.30%)</title><rect x="31.1178%" y="1941" width="1.2953%" height="15" fill="rgb(211,160,20)" fg:x="410669584" fg:w="17094740"/><text x="31.3678%" y="1951.50"></text></g><g><title>alloc::alloc::alloc (17,094,740 samples, 1.30%)</title><rect x="31.1178%" y="1925" width="1.2953%" height="15" fill="rgb(239,85,39)" fg:x="410669584" fg:w="17094740"/><text x="31.3678%" y="1935.50"></text></g><g><title>malloc (13,506,805 samples, 1.02%)</title><rect x="31.3896%" y="1909" width="1.0235%" height="15" fill="rgb(232,125,22)" fg:x="414257519" fg:w="13506805"/><text x="31.6396%" y="1919.50"></text></g><g><title>[libc.so.6] (9,889,966 samples, 0.75%)</title><rect x="31.6637%" y="1893" width="0.7494%" height="15" fill="rgb(244,57,34)" fg:x="417874358" fg:w="9889966"/><text x="31.9137%" y="1903.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,389,170 samples, 0.26%)</title><rect x="32.4131%" y="2085" width="0.2568%" height="15" fill="rgb(214,203,32)" fg:x="427764324" fg:w="3389170"/><text x="32.6631%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,389,170 samples, 0.26%)</title><rect x="32.4131%" y="2069" width="0.2568%" height="15" fill="rgb(207,58,43)" fg:x="427764324" fg:w="3389170"/><text x="32.6631%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,389,170 samples, 0.26%)</title><rect x="32.4131%" y="2053" width="0.2568%" height="15" fill="rgb(215,193,15)" fg:x="427764324" fg:w="3389170"/><text x="32.6631%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,389,170 samples, 0.26%)</title><rect x="32.4131%" y="2037" width="0.2568%" height="15" fill="rgb(232,15,44)" fg:x="427764324" fg:w="3389170"/><text x="32.6631%" y="2047.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,389,170 samples, 0.26%)</title><rect x="32.4131%" y="2021" width="0.2568%" height="15" fill="rgb(212,3,48)" fg:x="427764324" fg:w="3389170"/><text x="32.6631%" y="2031.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,389,170 samples, 0.26%)</title><rect x="32.4131%" y="2005" width="0.2568%" height="15" fill="rgb(218,128,7)" fg:x="427764324" fg:w="3389170"/><text x="32.6631%" y="2015.50"></text></g><g><title>alloc::alloc::alloc (3,389,170 samples, 0.26%)</title><rect x="32.4131%" y="1989" width="0.2568%" height="15" fill="rgb(226,216,39)" fg:x="427764324" fg:w="3389170"/><text x="32.6631%" y="1999.50"></text></g><g><title>malloc (3,389,170 samples, 0.26%)</title><rect x="32.4131%" y="1973" width="0.2568%" height="15" fill="rgb(243,47,51)" fg:x="427764324" fg:w="3389170"/><text x="32.6631%" y="1983.50"></text></g><g><title>[libc.so.6] (3,389,170 samples, 0.26%)</title><rect x="32.4131%" y="1957" width="0.2568%" height="15" fill="rgb(241,183,40)" fg:x="427764324" fg:w="3389170"/><text x="32.6631%" y="1967.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (218,299,676 samples, 16.54%)</title><rect x="16.3722%" y="2149" width="16.5413%" height="15" fill="rgb(231,217,32)" fg:x="216068754" fg:w="218299676"/><text x="16.6222%" y="2159.50">&lt;alloc::vec::Vec&lt;T,A&gt; as c..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (218,299,676 samples, 16.54%)</title><rect x="16.3722%" y="2133" width="16.5413%" height="15" fill="rgb(229,61,38)" fg:x="216068754" fg:w="218299676"/><text x="16.6222%" y="2143.50">alloc::slice::&lt;impl [T]&gt;::..</text></g><g><title>alloc::slice::hack::to_vec (218,299,676 samples, 16.54%)</title><rect x="16.3722%" y="2117" width="16.5413%" height="15" fill="rgb(225,210,5)" fg:x="216068754" fg:w="218299676"/><text x="16.6222%" y="2127.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (218,299,676 samples, 16.54%)</title><rect x="16.3722%" y="2101" width="16.5413%" height="15" fill="rgb(231,79,45)" fg:x="216068754" fg:w="218299676"/><text x="16.6222%" y="2111.50">&lt;T as alloc::slice::hack::..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3,214,936 samples, 0.24%)</title><rect x="32.6699%" y="2085" width="0.2436%" height="15" fill="rgb(224,100,7)" fg:x="431153494" fg:w="3214936"/><text x="32.9199%" y="2095.50"></text></g><g><title>[libc.so.6] (2,037,304 samples, 0.15%)</title><rect x="33.3709%" y="1941" width="0.1544%" height="15" fill="rgb(241,198,18)" fg:x="440404355" fg:w="2037304"/><text x="33.6209%" y="1951.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (16,975,388 samples, 1.29%)</title><rect x="32.9135%" y="2149" width="1.2863%" height="15" fill="rgb(252,97,53)" fg:x="434368430" fg:w="16975388"/><text x="33.1635%" y="2159.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (10,939,463 samples, 0.83%)</title><rect x="33.3709%" y="2133" width="0.8289%" height="15" fill="rgb(220,88,7)" fg:x="440404355" fg:w="10939463"/><text x="33.6209%" y="2143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,939,463 samples, 0.83%)</title><rect x="33.3709%" y="2117" width="0.8289%" height="15" fill="rgb(213,176,14)" fg:x="440404355" fg:w="10939463"/><text x="33.6209%" y="2127.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,939,463 samples, 0.83%)</title><rect x="33.3709%" y="2101" width="0.8289%" height="15" fill="rgb(246,73,7)" fg:x="440404355" fg:w="10939463"/><text x="33.6209%" y="2111.50"></text></g><g><title>alloc::slice::hack::to_vec (10,939,463 samples, 0.83%)</title><rect x="33.3709%" y="2085" width="0.8289%" height="15" fill="rgb(245,64,36)" fg:x="440404355" fg:w="10939463"/><text x="33.6209%" y="2095.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,939,463 samples, 0.83%)</title><rect x="33.3709%" y="2069" width="0.8289%" height="15" fill="rgb(245,80,10)" fg:x="440404355" fg:w="10939463"/><text x="33.6209%" y="2079.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10,939,463 samples, 0.83%)</title><rect x="33.3709%" y="2053" width="0.8289%" height="15" fill="rgb(232,107,50)" fg:x="440404355" fg:w="10939463"/><text x="33.6209%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10,939,463 samples, 0.83%)</title><rect x="33.3709%" y="2037" width="0.8289%" height="15" fill="rgb(253,3,0)" fg:x="440404355" fg:w="10939463"/><text x="33.6209%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (10,939,463 samples, 0.83%)</title><rect x="33.3709%" y="2021" width="0.8289%" height="15" fill="rgb(212,99,53)" fg:x="440404355" fg:w="10939463"/><text x="33.6209%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (10,939,463 samples, 0.83%)</title><rect x="33.3709%" y="2005" width="0.8289%" height="15" fill="rgb(249,111,54)" fg:x="440404355" fg:w="10939463"/><text x="33.6209%" y="2015.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10,939,463 samples, 0.83%)</title><rect x="33.3709%" y="1989" width="0.8289%" height="15" fill="rgb(249,55,30)" fg:x="440404355" fg:w="10939463"/><text x="33.6209%" y="1999.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10,939,463 samples, 0.83%)</title><rect x="33.3709%" y="1973" width="0.8289%" height="15" fill="rgb(237,47,42)" fg:x="440404355" fg:w="10939463"/><text x="33.6209%" y="1983.50"></text></g><g><title>alloc::alloc::alloc (10,939,463 samples, 0.83%)</title><rect x="33.3709%" y="1957" width="0.8289%" height="15" fill="rgb(211,20,18)" fg:x="440404355" fg:w="10939463"/><text x="33.6209%" y="1967.50"></text></g><g><title>malloc (8,902,159 samples, 0.67%)</title><rect x="33.5252%" y="1941" width="0.6745%" height="15" fill="rgb(231,203,46)" fg:x="442441659" fg:w="8902159"/><text x="33.7752%" y="1951.50"></text></g><g><title>[libc.so.6] (6,551,894 samples, 0.50%)</title><rect x="33.7033%" y="1925" width="0.4965%" height="15" fill="rgb(237,142,3)" fg:x="444791924" fg:w="6551894"/><text x="33.9533%" y="1935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10,011,568 samples, 0.76%)</title><rect x="34.4734%" y="1957" width="0.7586%" height="15" fill="rgb(241,107,1)" fg:x="454954433" fg:w="10011568"/><text x="34.7234%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10,011,568 samples, 0.76%)</title><rect x="34.4734%" y="1941" width="0.7586%" height="15" fill="rgb(229,83,13)" fg:x="454954433" fg:w="10011568"/><text x="34.7234%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (10,011,568 samples, 0.76%)</title><rect x="34.4734%" y="1925" width="0.7586%" height="15" fill="rgb(241,91,40)" fg:x="454954433" fg:w="10011568"/><text x="34.7234%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (10,011,568 samples, 0.76%)</title><rect x="34.4734%" y="1909" width="0.7586%" height="15" fill="rgb(225,3,45)" fg:x="454954433" fg:w="10011568"/><text x="34.7234%" y="1919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10,011,568 samples, 0.76%)</title><rect x="34.4734%" y="1893" width="0.7586%" height="15" fill="rgb(244,223,14)" fg:x="454954433" fg:w="10011568"/><text x="34.7234%" y="1903.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10,011,568 samples, 0.76%)</title><rect x="34.4734%" y="1877" width="0.7586%" height="15" fill="rgb(224,124,37)" fg:x="454954433" fg:w="10011568"/><text x="34.7234%" y="1887.50"></text></g><g><title>alloc::alloc::alloc (10,011,568 samples, 0.76%)</title><rect x="34.4734%" y="1861" width="0.7586%" height="15" fill="rgb(251,171,30)" fg:x="454954433" fg:w="10011568"/><text x="34.7234%" y="1871.50"></text></g><g><title>malloc (10,011,568 samples, 0.76%)</title><rect x="34.4734%" y="1845" width="0.7586%" height="15" fill="rgb(236,46,54)" fg:x="454954433" fg:w="10011568"/><text x="34.7234%" y="1855.50"></text></g><g><title>[libc.so.6] (10,011,568 samples, 0.76%)</title><rect x="34.4734%" y="1829" width="0.7586%" height="15" fill="rgb(245,213,5)" fg:x="454954433" fg:w="10011568"/><text x="34.7234%" y="1839.50"></text></g><g><title>core::clone::Clone::clone (13,083,408 samples, 0.99%)</title><rect x="34.4734%" y="2053" width="0.9914%" height="15" fill="rgb(230,144,27)" fg:x="454954433" fg:w="13083408"/><text x="34.7234%" y="2063.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (13,083,408 samples, 0.99%)</title><rect x="34.4734%" y="2037" width="0.9914%" height="15" fill="rgb(220,86,6)" fg:x="454954433" fg:w="13083408"/><text x="34.7234%" y="2047.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,083,408 samples, 0.99%)</title><rect x="34.4734%" y="2021" width="0.9914%" height="15" fill="rgb(240,20,13)" fg:x="454954433" fg:w="13083408"/><text x="34.7234%" y="2031.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,083,408 samples, 0.99%)</title><rect x="34.4734%" y="2005" width="0.9914%" height="15" fill="rgb(217,89,34)" fg:x="454954433" fg:w="13083408"/><text x="34.7234%" y="2015.50"></text></g><g><title>alloc::slice::hack::to_vec (13,083,408 samples, 0.99%)</title><rect x="34.4734%" y="1989" width="0.9914%" height="15" fill="rgb(229,13,5)" fg:x="454954433" fg:w="13083408"/><text x="34.7234%" y="1999.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,083,408 samples, 0.99%)</title><rect x="34.4734%" y="1973" width="0.9914%" height="15" fill="rgb(244,67,35)" fg:x="454954433" fg:w="13083408"/><text x="34.7234%" y="1983.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,071,840 samples, 0.23%)</title><rect x="35.2320%" y="1957" width="0.2328%" height="15" fill="rgb(221,40,2)" fg:x="464966001" fg:w="3071840"/><text x="35.4820%" y="1967.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,071,840 samples, 0.23%)</title><rect x="35.2320%" y="1941" width="0.2328%" height="15" fill="rgb(237,157,21)" fg:x="464966001" fg:w="3071840"/><text x="35.4820%" y="1951.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (23,299,734 samples, 1.77%)</title><rect x="34.4734%" y="2085" width="1.7655%" height="15" fill="rgb(222,94,11)" fg:x="454954433" fg:w="23299734"/><text x="34.7234%" y="2095.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (23,299,734 samples, 1.77%)</title><rect x="34.4734%" y="2069" width="1.7655%" height="15" fill="rgb(249,113,6)" fg:x="454954433" fg:w="23299734"/><text x="34.7234%" y="2079.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (10,216,326 samples, 0.77%)</title><rect x="35.4647%" y="2053" width="0.7741%" height="15" fill="rgb(238,137,36)" fg:x="468037841" fg:w="10216326"/><text x="35.7147%" y="2063.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10,216,326 samples, 0.77%)</title><rect x="35.4647%" y="2037" width="0.7741%" height="15" fill="rgb(210,102,26)" fg:x="468037841" fg:w="10216326"/><text x="35.7147%" y="2047.50"></text></g><g><title>[libc.so.6] (10,216,326 samples, 0.77%)</title><rect x="35.4647%" y="2021" width="0.7741%" height="15" fill="rgb(218,30,30)" fg:x="468037841" fg:w="10216326"/><text x="35.7147%" y="2031.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (279,270,014 samples, 21.16%)</title><rect x="15.3494%" y="2165" width="21.1612%" height="15" fill="rgb(214,67,26)" fg:x="202570362" fg:w="279270014"/><text x="15.5994%" y="2175.50">&lt;css_bitvector_compiler::HtmlNode..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (30,496,558 samples, 2.31%)</title><rect x="34.1998%" y="2149" width="2.3108%" height="15" fill="rgb(251,9,53)" fg:x="451343818" fg:w="30496558"/><text x="34.4498%" y="2159.50">&lt;..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (30,496,558 samples, 2.31%)</title><rect x="34.1998%" y="2133" width="2.3108%" height="15" fill="rgb(228,204,25)" fg:x="451343818" fg:w="30496558"/><text x="34.4498%" y="2143.50">&lt;..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (30,496,558 samples, 2.31%)</title><rect x="34.1998%" y="2117" width="2.3108%" height="15" fill="rgb(207,153,8)" fg:x="451343818" fg:w="30496558"/><text x="34.4498%" y="2127.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (30,496,558 samples, 2.31%)</title><rect x="34.1998%" y="2101" width="2.3108%" height="15" fill="rgb(242,9,16)" fg:x="451343818" fg:w="30496558"/><text x="34.4498%" y="2111.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (3,586,209 samples, 0.27%)</title><rect x="36.2389%" y="2085" width="0.2717%" height="15" fill="rgb(217,211,10)" fg:x="478254167" fg:w="3586209"/><text x="36.4889%" y="2095.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (3,586,209 samples, 0.27%)</title><rect x="36.2389%" y="2069" width="0.2717%" height="15" fill="rgb(219,228,52)" fg:x="478254167" fg:w="3586209"/><text x="36.4889%" y="2079.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3,586,209 samples, 0.27%)</title><rect x="36.2389%" y="2053" width="0.2717%" height="15" fill="rgb(231,92,29)" fg:x="478254167" fg:w="3586209"/><text x="36.4889%" y="2063.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,586,209 samples, 0.27%)</title><rect x="36.2389%" y="2037" width="0.2717%" height="15" fill="rgb(232,8,23)" fg:x="478254167" fg:w="3586209"/><text x="36.4889%" y="2047.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,586,209 samples, 0.27%)</title><rect x="36.2389%" y="2021" width="0.2717%" height="15" fill="rgb(216,211,34)" fg:x="478254167" fg:w="3586209"/><text x="36.4889%" y="2031.50"></text></g><g><title>alloc::alloc::alloc (3,586,209 samples, 0.27%)</title><rect x="36.2389%" y="2005" width="0.2717%" height="15" fill="rgb(236,151,0)" fg:x="478254167" fg:w="3586209"/><text x="36.4889%" y="2015.50"></text></g><g><title>malloc (3,586,209 samples, 0.27%)</title><rect x="36.2389%" y="1989" width="0.2717%" height="15" fill="rgb(209,168,3)" fg:x="478254167" fg:w="3586209"/><text x="36.4889%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (285,495,604 samples, 21.63%)</title><rect x="15.3494%" y="2229" width="21.6329%" height="15" fill="rgb(208,129,28)" fg:x="202570362" fg:w="285495604"/><text x="15.5994%" y="2239.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (285,495,604 samples, 21.63%)</title><rect x="15.3494%" y="2213" width="21.6329%" height="15" fill="rgb(229,78,22)" fg:x="202570362" fg:w="285495604"/><text x="15.5994%" y="2223.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (285,495,604 samples, 21.63%)</title><rect x="15.3494%" y="2197" width="21.6329%" height="15" fill="rgb(228,187,13)" fg:x="202570362" fg:w="285495604"/><text x="15.5994%" y="2207.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (285,495,604 samples, 21.63%)</title><rect x="15.3494%" y="2181" width="21.6329%" height="15" fill="rgb(240,119,24)" fg:x="202570362" fg:w="285495604"/><text x="15.5994%" y="2191.50">&lt;T as alloc::slice::hack::ConvertV..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,225,590 samples, 0.47%)</title><rect x="36.5106%" y="2165" width="0.4717%" height="15" fill="rgb(209,194,42)" fg:x="481840376" fg:w="6225590"/><text x="36.7606%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,225,590 samples, 0.47%)</title><rect x="36.5106%" y="2149" width="0.4717%" height="15" fill="rgb(247,200,46)" fg:x="481840376" fg:w="6225590"/><text x="36.7606%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,225,590 samples, 0.47%)</title><rect x="36.5106%" y="2133" width="0.4717%" height="15" fill="rgb(218,76,16)" fg:x="481840376" fg:w="6225590"/><text x="36.7606%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,225,590 samples, 0.47%)</title><rect x="36.5106%" y="2117" width="0.4717%" height="15" fill="rgb(225,21,48)" fg:x="481840376" fg:w="6225590"/><text x="36.7606%" y="2127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,225,590 samples, 0.47%)</title><rect x="36.5106%" y="2101" width="0.4717%" height="15" fill="rgb(239,223,50)" fg:x="481840376" fg:w="6225590"/><text x="36.7606%" y="2111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,225,590 samples, 0.47%)</title><rect x="36.5106%" y="2085" width="0.4717%" height="15" fill="rgb(244,45,21)" fg:x="481840376" fg:w="6225590"/><text x="36.7606%" y="2095.50"></text></g><g><title>alloc::alloc::alloc (6,225,590 samples, 0.47%)</title><rect x="36.5106%" y="2069" width="0.4717%" height="15" fill="rgb(232,33,43)" fg:x="481840376" fg:w="6225590"/><text x="36.7606%" y="2079.50"></text></g><g><title>malloc (6,225,590 samples, 0.47%)</title><rect x="36.5106%" y="2053" width="0.4717%" height="15" fill="rgb(209,8,3)" fg:x="481840376" fg:w="6225590"/><text x="36.7606%" y="2063.50"></text></g><g><title>[libc.so.6] (3,662,448 samples, 0.28%)</title><rect x="36.7048%" y="2037" width="0.2775%" height="15" fill="rgb(214,25,53)" fg:x="484403518" fg:w="3662448"/><text x="36.9548%" y="2047.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (10,482,707 samples, 0.79%)</title><rect x="36.9823%" y="2229" width="0.7943%" height="15" fill="rgb(254,186,54)" fg:x="488065966" fg:w="10482707"/><text x="37.2323%" y="2239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,716,784 samples, 0.28%)</title><rect x="37.4950%" y="2213" width="0.2816%" height="15" fill="rgb(208,174,49)" fg:x="494831889" fg:w="3716784"/><text x="37.7450%" y="2223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,716,784 samples, 0.28%)</title><rect x="37.4950%" y="2197" width="0.2816%" height="15" fill="rgb(233,191,51)" fg:x="494831889" fg:w="3716784"/><text x="37.7450%" y="2207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,716,784 samples, 0.28%)</title><rect x="37.4950%" y="2181" width="0.2816%" height="15" fill="rgb(222,134,10)" fg:x="494831889" fg:w="3716784"/><text x="37.7450%" y="2191.50"></text></g><g><title>alloc::slice::hack::to_vec (3,716,784 samples, 0.28%)</title><rect x="37.4950%" y="2165" width="0.2816%" height="15" fill="rgb(230,226,20)" fg:x="494831889" fg:w="3716784"/><text x="37.7450%" y="2175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,716,784 samples, 0.28%)</title><rect x="37.4950%" y="2149" width="0.2816%" height="15" fill="rgb(251,111,25)" fg:x="494831889" fg:w="3716784"/><text x="37.7450%" y="2159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,716,784 samples, 0.28%)</title><rect x="37.4950%" y="2133" width="0.2816%" height="15" fill="rgb(224,40,46)" fg:x="494831889" fg:w="3716784"/><text x="37.7450%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,716,784 samples, 0.28%)</title><rect x="37.4950%" y="2117" width="0.2816%" height="15" fill="rgb(236,108,47)" fg:x="494831889" fg:w="3716784"/><text x="37.7450%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,716,784 samples, 0.28%)</title><rect x="37.4950%" y="2101" width="0.2816%" height="15" fill="rgb(234,93,0)" fg:x="494831889" fg:w="3716784"/><text x="37.7450%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,716,784 samples, 0.28%)</title><rect x="37.4950%" y="2085" width="0.2816%" height="15" fill="rgb(224,213,32)" fg:x="494831889" fg:w="3716784"/><text x="37.7450%" y="2095.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,716,784 samples, 0.28%)</title><rect x="37.4950%" y="2069" width="0.2816%" height="15" fill="rgb(251,11,48)" fg:x="494831889" fg:w="3716784"/><text x="37.7450%" y="2079.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,716,784 samples, 0.28%)</title><rect x="37.4950%" y="2053" width="0.2816%" height="15" fill="rgb(236,173,5)" fg:x="494831889" fg:w="3716784"/><text x="37.7450%" y="2063.50"></text></g><g><title>alloc::alloc::alloc (3,716,784 samples, 0.28%)</title><rect x="37.4950%" y="2037" width="0.2816%" height="15" fill="rgb(230,95,12)" fg:x="494831889" fg:w="3716784"/><text x="37.7450%" y="2047.50"></text></g><g><title>malloc (3,716,784 samples, 0.28%)</title><rect x="37.4950%" y="2021" width="0.2816%" height="15" fill="rgb(232,209,1)" fg:x="494831889" fg:w="3716784"/><text x="37.7450%" y="2031.50"></text></g><g><title>[libc.so.6] (3,716,784 samples, 0.28%)</title><rect x="37.4950%" y="2005" width="0.2816%" height="15" fill="rgb(232,6,1)" fg:x="494831889" fg:w="3716784"/><text x="37.7450%" y="2015.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (9,450,189 samples, 0.72%)</title><rect x="37.7766%" y="2229" width="0.7161%" height="15" fill="rgb(210,224,50)" fg:x="498548673" fg:w="9450189"/><text x="38.0266%" y="2239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,450,189 samples, 0.72%)</title><rect x="37.7766%" y="2213" width="0.7161%" height="15" fill="rgb(228,127,35)" fg:x="498548673" fg:w="9450189"/><text x="38.0266%" y="2223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,450,189 samples, 0.72%)</title><rect x="37.7766%" y="2197" width="0.7161%" height="15" fill="rgb(245,102,45)" fg:x="498548673" fg:w="9450189"/><text x="38.0266%" y="2207.50"></text></g><g><title>alloc::slice::hack::to_vec (9,450,189 samples, 0.72%)</title><rect x="37.7766%" y="2181" width="0.7161%" height="15" fill="rgb(214,1,49)" fg:x="498548673" fg:w="9450189"/><text x="38.0266%" y="2191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,450,189 samples, 0.72%)</title><rect x="37.7766%" y="2165" width="0.7161%" height="15" fill="rgb(226,163,40)" fg:x="498548673" fg:w="9450189"/><text x="38.0266%" y="2175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9,450,189 samples, 0.72%)</title><rect x="37.7766%" y="2149" width="0.7161%" height="15" fill="rgb(239,212,28)" fg:x="498548673" fg:w="9450189"/><text x="38.0266%" y="2159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9,450,189 samples, 0.72%)</title><rect x="37.7766%" y="2133" width="0.7161%" height="15" fill="rgb(220,20,13)" fg:x="498548673" fg:w="9450189"/><text x="38.0266%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (9,450,189 samples, 0.72%)</title><rect x="37.7766%" y="2117" width="0.7161%" height="15" fill="rgb(210,164,35)" fg:x="498548673" fg:w="9450189"/><text x="38.0266%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (9,450,189 samples, 0.72%)</title><rect x="37.7766%" y="2101" width="0.7161%" height="15" fill="rgb(248,109,41)" fg:x="498548673" fg:w="9450189"/><text x="38.0266%" y="2111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9,450,189 samples, 0.72%)</title><rect x="37.7766%" y="2085" width="0.7161%" height="15" fill="rgb(238,23,50)" fg:x="498548673" fg:w="9450189"/><text x="38.0266%" y="2095.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9,450,189 samples, 0.72%)</title><rect x="37.7766%" y="2069" width="0.7161%" height="15" fill="rgb(211,48,49)" fg:x="498548673" fg:w="9450189"/><text x="38.0266%" y="2079.50"></text></g><g><title>alloc::alloc::alloc (9,450,189 samples, 0.72%)</title><rect x="37.7766%" y="2053" width="0.7161%" height="15" fill="rgb(223,36,21)" fg:x="498548673" fg:w="9450189"/><text x="38.0266%" y="2063.50"></text></g><g><title>malloc (9,450,189 samples, 0.72%)</title><rect x="37.7766%" y="2037" width="0.7161%" height="15" fill="rgb(207,123,46)" fg:x="498548673" fg:w="9450189"/><text x="38.0266%" y="2047.50"></text></g><g><title>[libc.so.6] (9,450,189 samples, 0.72%)</title><rect x="37.7766%" y="2021" width="0.7161%" height="15" fill="rgb(240,218,32)" fg:x="498548673" fg:w="9450189"/><text x="38.0266%" y="2031.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,531,163 samples, 0.27%)</title><rect x="38.6936%" y="2133" width="0.2676%" height="15" fill="rgb(252,5,43)" fg:x="510650592" fg:w="3531163"/><text x="38.9436%" y="2143.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (3,531,163 samples, 0.27%)</title><rect x="38.6936%" y="2117" width="0.2676%" height="15" fill="rgb(252,84,19)" fg:x="510650592" fg:w="3531163"/><text x="38.9436%" y="2127.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3,531,163 samples, 0.27%)</title><rect x="38.6936%" y="2101" width="0.2676%" height="15" fill="rgb(243,152,39)" fg:x="510650592" fg:w="3531163"/><text x="38.9436%" y="2111.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (3,531,163 samples, 0.27%)</title><rect x="38.6936%" y="2085" width="0.2676%" height="15" fill="rgb(234,160,15)" fg:x="510650592" fg:w="3531163"/><text x="38.9436%" y="2095.50"></text></g><g><title>__rust_alloc (2,917,228 samples, 0.22%)</title><rect x="38.9612%" y="1925" width="0.2210%" height="15" fill="rgb(237,34,20)" fg:x="514181755" fg:w="2917228"/><text x="39.2112%" y="1935.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,928,192 samples, 0.45%)</title><rect x="38.9612%" y="2037" width="0.4492%" height="15" fill="rgb(229,97,13)" fg:x="514181755" fg:w="5928192"/><text x="39.2112%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,928,192 samples, 0.45%)</title><rect x="38.9612%" y="2021" width="0.4492%" height="15" fill="rgb(234,71,50)" fg:x="514181755" fg:w="5928192"/><text x="39.2112%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,928,192 samples, 0.45%)</title><rect x="38.9612%" y="2005" width="0.4492%" height="15" fill="rgb(253,155,4)" fg:x="514181755" fg:w="5928192"/><text x="39.2112%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,928,192 samples, 0.45%)</title><rect x="38.9612%" y="1989" width="0.4492%" height="15" fill="rgb(222,185,37)" fg:x="514181755" fg:w="5928192"/><text x="39.2112%" y="1999.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,928,192 samples, 0.45%)</title><rect x="38.9612%" y="1973" width="0.4492%" height="15" fill="rgb(251,177,13)" fg:x="514181755" fg:w="5928192"/><text x="39.2112%" y="1983.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,928,192 samples, 0.45%)</title><rect x="38.9612%" y="1957" width="0.4492%" height="15" fill="rgb(250,179,40)" fg:x="514181755" fg:w="5928192"/><text x="39.2112%" y="1967.50"></text></g><g><title>alloc::alloc::alloc (5,928,192 samples, 0.45%)</title><rect x="38.9612%" y="1941" width="0.4492%" height="15" fill="rgb(242,44,2)" fg:x="514181755" fg:w="5928192"/><text x="39.2112%" y="1951.50"></text></g><g><title>malloc (3,010,964 samples, 0.23%)</title><rect x="39.1823%" y="1925" width="0.2282%" height="15" fill="rgb(216,177,13)" fg:x="517098983" fg:w="3010964"/><text x="39.4323%" y="1935.50"></text></g><g><title>[libc.so.6] (3,010,964 samples, 0.23%)</title><rect x="39.1823%" y="1909" width="0.2282%" height="15" fill="rgb(216,106,43)" fg:x="517098983" fg:w="3010964"/><text x="39.4323%" y="1919.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (15,238,319 samples, 1.15%)</title><rect x="38.4927%" y="2165" width="1.1547%" height="15" fill="rgb(216,183,2)" fg:x="507998862" fg:w="15238319"/><text x="38.7427%" y="2175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (15,238,319 samples, 1.15%)</title><rect x="38.4927%" y="2149" width="1.1547%" height="15" fill="rgb(249,75,3)" fg:x="507998862" fg:w="15238319"/><text x="38.7427%" y="2159.50"></text></g><g><title>core::clone::Clone::clone (9,055,426 samples, 0.69%)</title><rect x="38.9612%" y="2133" width="0.6862%" height="15" fill="rgb(219,67,39)" fg:x="514181755" fg:w="9055426"/><text x="39.2112%" y="2143.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9,055,426 samples, 0.69%)</title><rect x="38.9612%" y="2117" width="0.6862%" height="15" fill="rgb(253,228,2)" fg:x="514181755" fg:w="9055426"/><text x="39.2112%" y="2127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9,055,426 samples, 0.69%)</title><rect x="38.9612%" y="2101" width="0.6862%" height="15" fill="rgb(235,138,27)" fg:x="514181755" fg:w="9055426"/><text x="39.2112%" y="2111.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9,055,426 samples, 0.69%)</title><rect x="38.9612%" y="2085" width="0.6862%" height="15" fill="rgb(236,97,51)" fg:x="514181755" fg:w="9055426"/><text x="39.2112%" y="2095.50"></text></g><g><title>alloc::slice::hack::to_vec (9,055,426 samples, 0.69%)</title><rect x="38.9612%" y="2069" width="0.6862%" height="15" fill="rgb(240,80,30)" fg:x="514181755" fg:w="9055426"/><text x="39.2112%" y="2079.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9,055,426 samples, 0.69%)</title><rect x="38.9612%" y="2053" width="0.6862%" height="15" fill="rgb(230,178,19)" fg:x="514181755" fg:w="9055426"/><text x="39.2112%" y="2063.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,127,234 samples, 0.24%)</title><rect x="39.4104%" y="2037" width="0.2370%" height="15" fill="rgb(210,190,27)" fg:x="520109947" fg:w="3127234"/><text x="39.6604%" y="2047.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,127,234 samples, 0.24%)</title><rect x="39.4104%" y="2021" width="0.2370%" height="15" fill="rgb(222,107,31)" fg:x="520109947" fg:w="3127234"/><text x="39.6604%" y="2031.50"></text></g><g><title>[libc.so.6] (3,127,234 samples, 0.24%)</title><rect x="39.4104%" y="2005" width="0.2370%" height="15" fill="rgb(216,127,34)" fg:x="520109947" fg:w="3127234"/><text x="39.6604%" y="2015.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (17,714,210 samples, 1.34%)</title><rect x="38.4927%" y="2229" width="1.3423%" height="15" fill="rgb(234,116,52)" fg:x="507998862" fg:w="17714210"/><text x="38.7427%" y="2239.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (17,714,210 samples, 1.34%)</title><rect x="38.4927%" y="2213" width="1.3423%" height="15" fill="rgb(222,124,15)" fg:x="507998862" fg:w="17714210"/><text x="38.7427%" y="2223.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (17,714,210 samples, 1.34%)</title><rect x="38.4927%" y="2197" width="1.3423%" height="15" fill="rgb(231,179,28)" fg:x="507998862" fg:w="17714210"/><text x="38.7427%" y="2207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,714,210 samples, 1.34%)</title><rect x="38.4927%" y="2181" width="1.3423%" height="15" fill="rgb(226,93,45)" fg:x="507998862" fg:w="17714210"/><text x="38.7427%" y="2191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2,475,891 samples, 0.19%)</title><rect x="39.6474%" y="2165" width="0.1876%" height="15" fill="rgb(215,8,51)" fg:x="523237181" fg:w="2475891"/><text x="39.8974%" y="2175.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2,475,891 samples, 0.19%)</title><rect x="39.6474%" y="2149" width="0.1876%" height="15" fill="rgb(223,106,5)" fg:x="523237181" fg:w="2475891"/><text x="39.8974%" y="2159.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2,475,891 samples, 0.19%)</title><rect x="39.6474%" y="2133" width="0.1876%" height="15" fill="rgb(250,191,5)" fg:x="523237181" fg:w="2475891"/><text x="39.8974%" y="2143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,475,891 samples, 0.19%)</title><rect x="39.6474%" y="2117" width="0.1876%" height="15" fill="rgb(242,132,44)" fg:x="523237181" fg:w="2475891"/><text x="39.8974%" y="2127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,475,891 samples, 0.19%)</title><rect x="39.6474%" y="2101" width="0.1876%" height="15" fill="rgb(251,152,29)" fg:x="523237181" fg:w="2475891"/><text x="39.8974%" y="2111.50"></text></g><g><title>alloc::alloc::alloc (2,475,891 samples, 0.19%)</title><rect x="39.6474%" y="2085" width="0.1876%" height="15" fill="rgb(218,179,5)" fg:x="523237181" fg:w="2475891"/><text x="39.8974%" y="2095.50"></text></g><g><title>malloc (2,475,891 samples, 0.19%)</title><rect x="39.6474%" y="2069" width="0.1876%" height="15" fill="rgb(227,67,19)" fg:x="523237181" fg:w="2475891"/><text x="39.8974%" y="2079.50"></text></g><g><title>[libc.so.6] (2,475,891 samples, 0.19%)</title><rect x="39.6474%" y="2053" width="0.1876%" height="15" fill="rgb(233,119,31)" fg:x="523237181" fg:w="2475891"/><text x="39.8974%" y="2063.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (335,088,998 samples, 25.39%)</title><rect x="14.6548%" y="2245" width="25.3908%" height="15" fill="rgb(241,120,22)" fg:x="193403977" fg:w="335088998"/><text x="14.9048%" y="2255.50">&lt;css_bitvector_compiler::HtmlNode as core..</text></g><g><title>malloc (2,779,903 samples, 0.21%)</title><rect x="39.8350%" y="2229" width="0.2106%" height="15" fill="rgb(224,102,30)" fg:x="525713072" fg:w="2779903"/><text x="40.0850%" y="2239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (338,233,889 samples, 25.63%)</title><rect x="14.6548%" y="2309" width="25.6291%" height="15" fill="rgb(210,164,37)" fg:x="193403977" fg:w="338233889"/><text x="14.9048%" y="2319.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (338,233,889 samples, 25.63%)</title><rect x="14.6548%" y="2293" width="25.6291%" height="15" fill="rgb(226,191,16)" fg:x="193403977" fg:w="338233889"/><text x="14.9048%" y="2303.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (338,233,889 samples, 25.63%)</title><rect x="14.6548%" y="2277" width="25.6291%" height="15" fill="rgb(214,40,45)" fg:x="193403977" fg:w="338233889"/><text x="14.9048%" y="2287.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (338,233,889 samples, 25.63%)</title><rect x="14.6548%" y="2261" width="25.6291%" height="15" fill="rgb(244,29,26)" fg:x="193403977" fg:w="338233889"/><text x="14.9048%" y="2271.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3,144,891 samples, 0.24%)</title><rect x="40.0456%" y="2245" width="0.2383%" height="15" fill="rgb(216,16,5)" fg:x="528492975" fg:w="3144891"/><text x="40.2956%" y="2255.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (15,128,467 samples, 1.15%)</title><rect x="40.2839%" y="2309" width="1.1463%" height="15" fill="rgb(249,76,35)" fg:x="531637866" fg:w="15128467"/><text x="40.5339%" y="2319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (12,235,321 samples, 0.93%)</title><rect x="40.5031%" y="2293" width="0.9271%" height="15" fill="rgb(207,11,44)" fg:x="534531012" fg:w="12235321"/><text x="40.7531%" y="2303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12,235,321 samples, 0.93%)</title><rect x="40.5031%" y="2277" width="0.9271%" height="15" fill="rgb(228,190,49)" fg:x="534531012" fg:w="12235321"/><text x="40.7531%" y="2287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12,235,321 samples, 0.93%)</title><rect x="40.5031%" y="2261" width="0.9271%" height="15" fill="rgb(214,173,12)" fg:x="534531012" fg:w="12235321"/><text x="40.7531%" y="2271.50"></text></g><g><title>alloc::slice::hack::to_vec (12,235,321 samples, 0.93%)</title><rect x="40.5031%" y="2245" width="0.9271%" height="15" fill="rgb(218,26,35)" fg:x="534531012" fg:w="12235321"/><text x="40.7531%" y="2255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12,235,321 samples, 0.93%)</title><rect x="40.5031%" y="2229" width="0.9271%" height="15" fill="rgb(220,200,19)" fg:x="534531012" fg:w="12235321"/><text x="40.7531%" y="2239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12,235,321 samples, 0.93%)</title><rect x="40.5031%" y="2213" width="0.9271%" height="15" fill="rgb(239,95,49)" fg:x="534531012" fg:w="12235321"/><text x="40.7531%" y="2223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12,235,321 samples, 0.93%)</title><rect x="40.5031%" y="2197" width="0.9271%" height="15" fill="rgb(235,85,53)" fg:x="534531012" fg:w="12235321"/><text x="40.7531%" y="2207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (12,235,321 samples, 0.93%)</title><rect x="40.5031%" y="2181" width="0.9271%" height="15" fill="rgb(233,133,31)" fg:x="534531012" fg:w="12235321"/><text x="40.7531%" y="2191.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (12,235,321 samples, 0.93%)</title><rect x="40.5031%" y="2165" width="0.9271%" height="15" fill="rgb(218,25,20)" fg:x="534531012" fg:w="12235321"/><text x="40.7531%" y="2175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12,235,321 samples, 0.93%)</title><rect x="40.5031%" y="2149" width="0.9271%" height="15" fill="rgb(252,210,38)" fg:x="534531012" fg:w="12235321"/><text x="40.7531%" y="2159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12,235,321 samples, 0.93%)</title><rect x="40.5031%" y="2133" width="0.9271%" height="15" fill="rgb(242,134,21)" fg:x="534531012" fg:w="12235321"/><text x="40.7531%" y="2143.50"></text></g><g><title>alloc::alloc::alloc (12,235,321 samples, 0.93%)</title><rect x="40.5031%" y="2117" width="0.9271%" height="15" fill="rgb(213,28,48)" fg:x="534531012" fg:w="12235321"/><text x="40.7531%" y="2127.50"></text></g><g><title>malloc (12,235,321 samples, 0.93%)</title><rect x="40.5031%" y="2101" width="0.9271%" height="15" fill="rgb(250,196,2)" fg:x="534531012" fg:w="12235321"/><text x="40.7531%" y="2111.50"></text></g><g><title>[libc.so.6] (8,796,062 samples, 0.67%)</title><rect x="40.7637%" y="2085" width="0.6665%" height="15" fill="rgb(227,5,17)" fg:x="537970271" fg:w="8796062"/><text x="41.0137%" y="2095.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (6,730,561 samples, 0.51%)</title><rect x="41.4302%" y="2309" width="0.5100%" height="15" fill="rgb(221,226,24)" fg:x="546766333" fg:w="6730561"/><text x="41.6802%" y="2319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,730,561 samples, 0.51%)</title><rect x="41.4302%" y="2293" width="0.5100%" height="15" fill="rgb(211,5,48)" fg:x="546766333" fg:w="6730561"/><text x="41.6802%" y="2303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,609,173 samples, 0.27%)</title><rect x="41.6668%" y="2277" width="0.2735%" height="15" fill="rgb(219,150,6)" fg:x="549887721" fg:w="3609173"/><text x="41.9168%" y="2287.50"></text></g><g><title>alloc::slice::hack::to_vec (3,609,173 samples, 0.27%)</title><rect x="41.6668%" y="2261" width="0.2735%" height="15" fill="rgb(251,46,16)" fg:x="549887721" fg:w="3609173"/><text x="41.9168%" y="2271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,609,173 samples, 0.27%)</title><rect x="41.6668%" y="2245" width="0.2735%" height="15" fill="rgb(220,204,40)" fg:x="549887721" fg:w="3609173"/><text x="41.9168%" y="2255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,609,173 samples, 0.27%)</title><rect x="41.6668%" y="2229" width="0.2735%" height="15" fill="rgb(211,85,2)" fg:x="549887721" fg:w="3609173"/><text x="41.9168%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,609,173 samples, 0.27%)</title><rect x="41.6668%" y="2213" width="0.2735%" height="15" fill="rgb(229,17,7)" fg:x="549887721" fg:w="3609173"/><text x="41.9168%" y="2223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,609,173 samples, 0.27%)</title><rect x="41.6668%" y="2197" width="0.2735%" height="15" fill="rgb(239,72,28)" fg:x="549887721" fg:w="3609173"/><text x="41.9168%" y="2207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,609,173 samples, 0.27%)</title><rect x="41.6668%" y="2181" width="0.2735%" height="15" fill="rgb(230,47,54)" fg:x="549887721" fg:w="3609173"/><text x="41.9168%" y="2191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,609,173 samples, 0.27%)</title><rect x="41.6668%" y="2165" width="0.2735%" height="15" fill="rgb(214,50,8)" fg:x="549887721" fg:w="3609173"/><text x="41.9168%" y="2175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,609,173 samples, 0.27%)</title><rect x="41.6668%" y="2149" width="0.2735%" height="15" fill="rgb(216,198,43)" fg:x="549887721" fg:w="3609173"/><text x="41.9168%" y="2159.50"></text></g><g><title>alloc::alloc::alloc (3,609,173 samples, 0.27%)</title><rect x="41.6668%" y="2133" width="0.2735%" height="15" fill="rgb(234,20,35)" fg:x="549887721" fg:w="3609173"/><text x="41.9168%" y="2143.50"></text></g><g><title>malloc (3,609,173 samples, 0.27%)</title><rect x="41.6668%" y="2117" width="0.2735%" height="15" fill="rgb(254,45,19)" fg:x="549887721" fg:w="3609173"/><text x="41.9168%" y="2127.50"></text></g><g><title>[libc.so.6] (3,609,173 samples, 0.27%)</title><rect x="41.6668%" y="2101" width="0.2735%" height="15" fill="rgb(219,14,44)" fg:x="549887721" fg:w="3609173"/><text x="41.9168%" y="2111.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,493,157 samples, 0.19%)</title><rect x="42.8206%" y="2213" width="0.1889%" height="15" fill="rgb(217,220,26)" fg:x="565115198" fg:w="2493157"/><text x="43.0706%" y="2223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10,054,087 samples, 0.76%)</title><rect x="43.0095%" y="2117" width="0.7618%" height="15" fill="rgb(213,158,28)" fg:x="567608355" fg:w="10054087"/><text x="43.2595%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10,054,087 samples, 0.76%)</title><rect x="43.0095%" y="2101" width="0.7618%" height="15" fill="rgb(252,51,52)" fg:x="567608355" fg:w="10054087"/><text x="43.2595%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (10,054,087 samples, 0.76%)</title><rect x="43.0095%" y="2085" width="0.7618%" height="15" fill="rgb(246,89,16)" fg:x="567608355" fg:w="10054087"/><text x="43.2595%" y="2095.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (10,054,087 samples, 0.76%)</title><rect x="43.0095%" y="2069" width="0.7618%" height="15" fill="rgb(216,158,49)" fg:x="567608355" fg:w="10054087"/><text x="43.2595%" y="2079.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10,054,087 samples, 0.76%)</title><rect x="43.0095%" y="2053" width="0.7618%" height="15" fill="rgb(236,107,19)" fg:x="567608355" fg:w="10054087"/><text x="43.2595%" y="2063.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10,054,087 samples, 0.76%)</title><rect x="43.0095%" y="2037" width="0.7618%" height="15" fill="rgb(228,185,30)" fg:x="567608355" fg:w="10054087"/><text x="43.2595%" y="2047.50"></text></g><g><title>alloc::alloc::alloc (10,054,087 samples, 0.76%)</title><rect x="43.0095%" y="2021" width="0.7618%" height="15" fill="rgb(246,134,8)" fg:x="567608355" fg:w="10054087"/><text x="43.2595%" y="2031.50"></text></g><g><title>malloc (10,054,087 samples, 0.76%)</title><rect x="43.0095%" y="2005" width="0.7618%" height="15" fill="rgb(214,143,50)" fg:x="567608355" fg:w="10054087"/><text x="43.2595%" y="2015.50"></text></g><g><title>[libc.so.6] (3,533,116 samples, 0.27%)</title><rect x="43.5036%" y="1989" width="0.2677%" height="15" fill="rgb(228,75,8)" fg:x="574129326" fg:w="3533116"/><text x="43.7536%" y="1999.50"></text></g><g><title>core::clone::Clone::clone (12,697,059 samples, 0.96%)</title><rect x="43.0095%" y="2213" width="0.9621%" height="15" fill="rgb(207,175,4)" fg:x="567608355" fg:w="12697059"/><text x="43.2595%" y="2223.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (12,697,059 samples, 0.96%)</title><rect x="43.0095%" y="2197" width="0.9621%" height="15" fill="rgb(205,108,24)" fg:x="567608355" fg:w="12697059"/><text x="43.2595%" y="2207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12,697,059 samples, 0.96%)</title><rect x="43.0095%" y="2181" width="0.9621%" height="15" fill="rgb(244,120,49)" fg:x="567608355" fg:w="12697059"/><text x="43.2595%" y="2191.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12,697,059 samples, 0.96%)</title><rect x="43.0095%" y="2165" width="0.9621%" height="15" fill="rgb(223,47,38)" fg:x="567608355" fg:w="12697059"/><text x="43.2595%" y="2175.50"></text></g><g><title>alloc::slice::hack::to_vec (12,697,059 samples, 0.96%)</title><rect x="43.0095%" y="2149" width="0.9621%" height="15" fill="rgb(229,179,11)" fg:x="567608355" fg:w="12697059"/><text x="43.2595%" y="2159.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12,697,059 samples, 0.96%)</title><rect x="43.0095%" y="2133" width="0.9621%" height="15" fill="rgb(231,122,1)" fg:x="567608355" fg:w="12697059"/><text x="43.2595%" y="2143.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,642,972 samples, 0.20%)</title><rect x="43.7713%" y="2117" width="0.2003%" height="15" fill="rgb(245,119,9)" fg:x="577662442" fg:w="2642972"/><text x="44.0213%" y="2127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,642,972 samples, 0.20%)</title><rect x="43.7713%" y="2101" width="0.2003%" height="15" fill="rgb(241,163,25)" fg:x="577662442" fg:w="2642972"/><text x="44.0213%" y="2111.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (3,435,925 samples, 0.26%)</title><rect x="43.9716%" y="2213" width="0.2604%" height="15" fill="rgb(217,214,3)" fg:x="580305414" fg:w="3435925"/><text x="44.2216%" y="2223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3,435,925 samples, 0.26%)</title><rect x="43.9716%" y="2197" width="0.2604%" height="15" fill="rgb(240,86,28)" fg:x="580305414" fg:w="3435925"/><text x="44.2216%" y="2207.50"></text></g><g><title>core::ptr::write (3,435,925 samples, 0.26%)</title><rect x="43.9716%" y="2181" width="0.2604%" height="15" fill="rgb(215,47,9)" fg:x="580305414" fg:w="3435925"/><text x="44.2216%" y="2191.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (24,749,976 samples, 1.88%)</title><rect x="42.6176%" y="2245" width="1.8754%" height="15" fill="rgb(252,25,45)" fg:x="562436757" fg:w="24749976"/><text x="42.8676%" y="2255.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (24,749,976 samples, 1.88%)</title><rect x="42.6176%" y="2229" width="1.8754%" height="15" fill="rgb(251,164,9)" fg:x="562436757" fg:w="24749976"/><text x="42.8676%" y="2239.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (3,445,394 samples, 0.26%)</title><rect x="44.2320%" y="2213" width="0.2611%" height="15" fill="rgb(233,194,0)" fg:x="583741339" fg:w="3445394"/><text x="44.4820%" y="2223.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (3,445,394 samples, 0.26%)</title><rect x="44.2320%" y="2197" width="0.2611%" height="15" fill="rgb(249,111,24)" fg:x="583741339" fg:w="3445394"/><text x="44.4820%" y="2207.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (3,445,394 samples, 0.26%)</title><rect x="44.2320%" y="2181" width="0.2611%" height="15" fill="rgb(250,223,3)" fg:x="583741339" fg:w="3445394"/><text x="44.4820%" y="2191.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load_aligned (3,445,394 samples, 0.26%)</title><rect x="44.2320%" y="2165" width="0.2611%" height="15" fill="rgb(236,178,37)" fg:x="583741339" fg:w="3445394"/><text x="44.4820%" y="2175.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (3,445,394 samples, 0.26%)</title><rect x="44.2320%" y="2149" width="0.2611%" height="15" fill="rgb(241,158,50)" fg:x="583741339" fg:w="3445394"/><text x="44.4820%" y="2159.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (6,451,976 samples, 0.49%)</title><rect x="44.4930%" y="2213" width="0.4889%" height="15" fill="rgb(213,121,41)" fg:x="587186733" fg:w="6451976"/><text x="44.7430%" y="2223.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (6,451,976 samples, 0.49%)</title><rect x="44.4930%" y="2197" width="0.4889%" height="15" fill="rgb(240,92,3)" fg:x="587186733" fg:w="6451976"/><text x="44.7430%" y="2207.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (419,079,439 samples, 31.75%)</title><rect x="14.4078%" y="2325" width="31.7550%" height="15" fill="rgb(205,123,3)" fg:x="190143870" fg:w="419079439"/><text x="14.6578%" y="2335.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::C..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (55,726,415 samples, 4.22%)</title><rect x="41.9402%" y="2309" width="4.2226%" height="15" fill="rgb(205,97,47)" fg:x="553496894" fg:w="55726415"/><text x="42.1902%" y="2319.50">&lt;std:..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (55,726,415 samples, 4.22%)</title><rect x="41.9402%" y="2293" width="4.2226%" height="15" fill="rgb(247,152,14)" fg:x="553496894" fg:w="55726415"/><text x="42.1902%" y="2303.50">&lt;hash..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (52,326,235 samples, 3.96%)</title><rect x="42.1979%" y="2277" width="3.9649%" height="15" fill="rgb(248,195,53)" fg:x="556897074" fg:w="52326235"/><text x="42.4479%" y="2287.50">&lt;has..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (46,786,552 samples, 3.55%)</title><rect x="42.6176%" y="2261" width="3.5452%" height="15" fill="rgb(226,201,16)" fg:x="562436757" fg:w="46786552"/><text x="42.8676%" y="2271.50">&lt;has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (22,036,576 samples, 1.67%)</title><rect x="44.4930%" y="2245" width="1.6698%" height="15" fill="rgb(205,98,0)" fg:x="587186733" fg:w="22036576"/><text x="44.7430%" y="2255.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (22,036,576 samples, 1.67%)</title><rect x="44.4930%" y="2229" width="1.6698%" height="15" fill="rgb(214,191,48)" fg:x="587186733" fg:w="22036576"/><text x="44.7430%" y="2239.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (15,584,600 samples, 1.18%)</title><rect x="44.9819%" y="2213" width="1.1809%" height="15" fill="rgb(237,112,39)" fg:x="593638709" fg:w="15584600"/><text x="45.2319%" y="2223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15,584,600 samples, 1.18%)</title><rect x="44.9819%" y="2197" width="1.1809%" height="15" fill="rgb(247,203,27)" fg:x="593638709" fg:w="15584600"/><text x="45.2319%" y="2207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15,584,600 samples, 1.18%)</title><rect x="44.9819%" y="2181" width="1.1809%" height="15" fill="rgb(235,124,28)" fg:x="593638709" fg:w="15584600"/><text x="45.2319%" y="2191.50"></text></g><g><title>alloc::alloc::alloc (15,584,600 samples, 1.18%)</title><rect x="44.9819%" y="2165" width="1.1809%" height="15" fill="rgb(208,207,46)" fg:x="593638709" fg:w="15584600"/><text x="45.2319%" y="2175.50"></text></g><g><title>malloc (15,584,600 samples, 1.18%)</title><rect x="44.9819%" y="2149" width="1.1809%" height="15" fill="rgb(234,176,4)" fg:x="593638709" fg:w="15584600"/><text x="45.2319%" y="2159.50"></text></g><g><title>[libc.so.6] (12,545,785 samples, 0.95%)</title><rect x="45.2122%" y="2133" width="0.9506%" height="15" fill="rgb(230,133,28)" fg:x="596677524" fg:w="12545785"/><text x="45.4622%" y="2143.50"></text></g><g><title>[libc.so.6] (2,869,490 samples, 0.22%)</title><rect x="45.9454%" y="2117" width="0.2174%" height="15" fill="rgb(211,137,40)" fg:x="606353819" fg:w="2869490"/><text x="46.1954%" y="2127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (2,948,433 samples, 0.22%)</title><rect x="46.1628%" y="2325" width="0.2234%" height="15" fill="rgb(254,35,13)" fg:x="609223309" fg:w="2948433"/><text x="46.4128%" y="2335.50"></text></g><g><title>__rdl_alloc (3,351,226 samples, 0.25%)</title><rect x="46.3862%" y="2213" width="0.2539%" height="15" fill="rgb(225,49,51)" fg:x="612171742" fg:w="3351226"/><text x="46.6362%" y="2223.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,351,226 samples, 0.25%)</title><rect x="46.3862%" y="2197" width="0.2539%" height="15" fill="rgb(251,10,15)" fg:x="612171742" fg:w="3351226"/><text x="46.6362%" y="2207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (431,739,303 samples, 32.71%)</title><rect x="14.1612%" y="2389" width="32.7143%" height="15" fill="rgb(228,207,15)" fg:x="186889411" fg:w="431739303"/><text x="14.4112%" y="2399.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (431,739,303 samples, 32.71%)</title><rect x="14.1612%" y="2373" width="32.7143%" height="15" fill="rgb(241,99,19)" fg:x="186889411" fg:w="431739303"/><text x="14.4112%" y="2383.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (431,739,303 samples, 32.71%)</title><rect x="14.1612%" y="2357" width="32.7143%" height="15" fill="rgb(207,104,49)" fg:x="186889411" fg:w="431739303"/><text x="14.4112%" y="2367.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (431,739,303 samples, 32.71%)</title><rect x="14.1612%" y="2341" width="32.7143%" height="15" fill="rgb(234,99,18)" fg:x="186889411" fg:w="431739303"/><text x="14.4112%" y="2351.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,456,972 samples, 0.49%)</title><rect x="46.3862%" y="2325" width="0.4893%" height="15" fill="rgb(213,191,49)" fg:x="612171742" fg:w="6456972"/><text x="46.6362%" y="2335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,456,972 samples, 0.49%)</title><rect x="46.3862%" y="2309" width="0.4893%" height="15" fill="rgb(210,226,19)" fg:x="612171742" fg:w="6456972"/><text x="46.6362%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,456,972 samples, 0.49%)</title><rect x="46.3862%" y="2293" width="0.4893%" height="15" fill="rgb(229,97,18)" fg:x="612171742" fg:w="6456972"/><text x="46.6362%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,456,972 samples, 0.49%)</title><rect x="46.3862%" y="2277" width="0.4893%" height="15" fill="rgb(211,167,15)" fg:x="612171742" fg:w="6456972"/><text x="46.6362%" y="2287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,456,972 samples, 0.49%)</title><rect x="46.3862%" y="2261" width="0.4893%" height="15" fill="rgb(210,169,34)" fg:x="612171742" fg:w="6456972"/><text x="46.6362%" y="2271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,456,972 samples, 0.49%)</title><rect x="46.3862%" y="2245" width="0.4893%" height="15" fill="rgb(241,121,31)" fg:x="612171742" fg:w="6456972"/><text x="46.6362%" y="2255.50"></text></g><g><title>alloc::alloc::alloc (6,456,972 samples, 0.49%)</title><rect x="46.3862%" y="2229" width="0.4893%" height="15" fill="rgb(232,40,11)" fg:x="612171742" fg:w="6456972"/><text x="46.6362%" y="2239.50"></text></g><g><title>malloc (3,105,746 samples, 0.24%)</title><rect x="46.6402%" y="2213" width="0.2353%" height="15" fill="rgb(205,86,26)" fg:x="615522968" fg:w="3105746"/><text x="46.8902%" y="2223.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,694,834 samples, 0.20%)</title><rect x="46.8755%" y="2389" width="0.2042%" height="15" fill="rgb(231,126,28)" fg:x="618628714" fg:w="2694834"/><text x="47.1255%" y="2399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,694,834 samples, 0.20%)</title><rect x="46.8755%" y="2373" width="0.2042%" height="15" fill="rgb(219,221,18)" fg:x="618628714" fg:w="2694834"/><text x="47.1255%" y="2383.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (6,069,153 samples, 0.46%)</title><rect x="47.0797%" y="2389" width="0.4599%" height="15" fill="rgb(211,40,0)" fg:x="621323548" fg:w="6069153"/><text x="47.3297%" y="2399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,069,153 samples, 0.46%)</title><rect x="47.0797%" y="2373" width="0.4599%" height="15" fill="rgb(239,85,43)" fg:x="621323548" fg:w="6069153"/><text x="47.3297%" y="2383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,069,153 samples, 0.46%)</title><rect x="47.0797%" y="2357" width="0.4599%" height="15" fill="rgb(231,55,21)" fg:x="621323548" fg:w="6069153"/><text x="47.3297%" y="2367.50"></text></g><g><title>alloc::slice::hack::to_vec (6,069,153 samples, 0.46%)</title><rect x="47.0797%" y="2341" width="0.4599%" height="15" fill="rgb(225,184,43)" fg:x="621323548" fg:w="6069153"/><text x="47.3297%" y="2351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,069,153 samples, 0.46%)</title><rect x="47.0797%" y="2325" width="0.4599%" height="15" fill="rgb(251,158,41)" fg:x="621323548" fg:w="6069153"/><text x="47.3297%" y="2335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,069,153 samples, 0.46%)</title><rect x="47.0797%" y="2309" width="0.4599%" height="15" fill="rgb(234,159,37)" fg:x="621323548" fg:w="6069153"/><text x="47.3297%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,069,153 samples, 0.46%)</title><rect x="47.0797%" y="2293" width="0.4599%" height="15" fill="rgb(216,204,22)" fg:x="621323548" fg:w="6069153"/><text x="47.3297%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,069,153 samples, 0.46%)</title><rect x="47.0797%" y="2277" width="0.4599%" height="15" fill="rgb(214,17,3)" fg:x="621323548" fg:w="6069153"/><text x="47.3297%" y="2287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,069,153 samples, 0.46%)</title><rect x="47.0797%" y="2261" width="0.4599%" height="15" fill="rgb(212,111,17)" fg:x="621323548" fg:w="6069153"/><text x="47.3297%" y="2271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,069,153 samples, 0.46%)</title><rect x="47.0797%" y="2245" width="0.4599%" height="15" fill="rgb(221,157,24)" fg:x="621323548" fg:w="6069153"/><text x="47.3297%" y="2255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,069,153 samples, 0.46%)</title><rect x="47.0797%" y="2229" width="0.4599%" height="15" fill="rgb(252,16,13)" fg:x="621323548" fg:w="6069153"/><text x="47.3297%" y="2239.50"></text></g><g><title>alloc::alloc::alloc (6,069,153 samples, 0.46%)</title><rect x="47.0797%" y="2213" width="0.4599%" height="15" fill="rgb(221,62,2)" fg:x="621323548" fg:w="6069153"/><text x="47.3297%" y="2223.50"></text></g><g><title>malloc (6,069,153 samples, 0.46%)</title><rect x="47.0797%" y="2197" width="0.4599%" height="15" fill="rgb(247,87,22)" fg:x="621323548" fg:w="6069153"/><text x="47.3297%" y="2207.50"></text></g><g><title>[libc.so.6] (3,390,297 samples, 0.26%)</title><rect x="47.2827%" y="2181" width="0.2569%" height="15" fill="rgb(215,73,9)" fg:x="624002404" fg:w="3390297"/><text x="47.5327%" y="2191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,846,708 samples, 0.22%)</title><rect x="48.0258%" y="2197" width="0.2157%" height="15" fill="rgb(207,175,33)" fg:x="633809483" fg:w="2846708"/><text x="48.2758%" y="2207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,846,708 samples, 0.22%)</title><rect x="48.0258%" y="2181" width="0.2157%" height="15" fill="rgb(243,129,54)" fg:x="633809483" fg:w="2846708"/><text x="48.2758%" y="2191.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,846,708 samples, 0.22%)</title><rect x="48.0258%" y="2165" width="0.2157%" height="15" fill="rgb(227,119,45)" fg:x="633809483" fg:w="2846708"/><text x="48.2758%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,846,708 samples, 0.22%)</title><rect x="48.0258%" y="2149" width="0.2157%" height="15" fill="rgb(205,109,36)" fg:x="633809483" fg:w="2846708"/><text x="48.2758%" y="2159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,846,708 samples, 0.22%)</title><rect x="48.0258%" y="2133" width="0.2157%" height="15" fill="rgb(205,6,39)" fg:x="633809483" fg:w="2846708"/><text x="48.2758%" y="2143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,846,708 samples, 0.22%)</title><rect x="48.0258%" y="2117" width="0.2157%" height="15" fill="rgb(221,32,16)" fg:x="633809483" fg:w="2846708"/><text x="48.2758%" y="2127.50"></text></g><g><title>alloc::alloc::alloc (2,846,708 samples, 0.22%)</title><rect x="48.0258%" y="2101" width="0.2157%" height="15" fill="rgb(228,144,50)" fg:x="633809483" fg:w="2846708"/><text x="48.2758%" y="2111.50"></text></g><g><title>malloc (2,846,708 samples, 0.22%)</title><rect x="48.0258%" y="2085" width="0.2157%" height="15" fill="rgb(229,201,53)" fg:x="633809483" fg:w="2846708"/><text x="48.2758%" y="2095.50"></text></g><g><title>[libc.so.6] (2,846,708 samples, 0.22%)</title><rect x="48.0258%" y="2069" width="0.2157%" height="15" fill="rgb(249,153,27)" fg:x="633809483" fg:w="2846708"/><text x="48.2758%" y="2079.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (9,096,916 samples, 0.69%)</title><rect x="47.8016%" y="2325" width="0.6893%" height="15" fill="rgb(227,106,25)" fg:x="630851068" fg:w="9096916"/><text x="48.0516%" y="2335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (9,096,916 samples, 0.69%)</title><rect x="47.8016%" y="2309" width="0.6893%" height="15" fill="rgb(230,65,29)" fg:x="630851068" fg:w="9096916"/><text x="48.0516%" y="2319.50"></text></g><g><title>core::clone::Clone::clone (9,096,916 samples, 0.69%)</title><rect x="47.8016%" y="2293" width="0.6893%" height="15" fill="rgb(221,57,46)" fg:x="630851068" fg:w="9096916"/><text x="48.0516%" y="2303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9,096,916 samples, 0.69%)</title><rect x="47.8016%" y="2277" width="0.6893%" height="15" fill="rgb(229,161,17)" fg:x="630851068" fg:w="9096916"/><text x="48.0516%" y="2287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,138,501 samples, 0.47%)</title><rect x="48.0258%" y="2261" width="0.4651%" height="15" fill="rgb(222,213,11)" fg:x="633809483" fg:w="6138501"/><text x="48.2758%" y="2271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,138,501 samples, 0.47%)</title><rect x="48.0258%" y="2245" width="0.4651%" height="15" fill="rgb(235,35,13)" fg:x="633809483" fg:w="6138501"/><text x="48.2758%" y="2255.50"></text></g><g><title>alloc::slice::hack::to_vec (6,138,501 samples, 0.47%)</title><rect x="48.0258%" y="2229" width="0.4651%" height="15" fill="rgb(233,158,34)" fg:x="633809483" fg:w="6138501"/><text x="48.2758%" y="2239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,138,501 samples, 0.47%)</title><rect x="48.0258%" y="2213" width="0.4651%" height="15" fill="rgb(215,151,48)" fg:x="633809483" fg:w="6138501"/><text x="48.2758%" y="2223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,291,793 samples, 0.25%)</title><rect x="48.2415%" y="2197" width="0.2494%" height="15" fill="rgb(229,84,14)" fg:x="636656191" fg:w="3291793"/><text x="48.4915%" y="2207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,291,793 samples, 0.25%)</title><rect x="48.2415%" y="2181" width="0.2494%" height="15" fill="rgb(229,68,14)" fg:x="636656191" fg:w="3291793"/><text x="48.4915%" y="2191.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (464,751,229 samples, 35.22%)</title><rect x="13.4828%" y="2405" width="35.2157%" height="15" fill="rgb(243,106,26)" fg:x="177936348" fg:w="464751229"/><text x="13.7328%" y="2415.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;:..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (15,294,876 samples, 1.16%)</title><rect x="47.5396%" y="2389" width="1.1589%" height="15" fill="rgb(206,45,38)" fg:x="627392701" fg:w="15294876"/><text x="47.7896%" y="2399.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (15,294,876 samples, 1.16%)</title><rect x="47.5396%" y="2373" width="1.1589%" height="15" fill="rgb(226,6,15)" fg:x="627392701" fg:w="15294876"/><text x="47.7896%" y="2383.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (11,836,509 samples, 0.90%)</title><rect x="47.8016%" y="2357" width="0.8969%" height="15" fill="rgb(232,22,54)" fg:x="630851068" fg:w="11836509"/><text x="48.0516%" y="2367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (11,836,509 samples, 0.90%)</title><rect x="47.8016%" y="2341" width="0.8969%" height="15" fill="rgb(229,222,32)" fg:x="630851068" fg:w="11836509"/><text x="48.0516%" y="2351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2,739,593 samples, 0.21%)</title><rect x="48.4909%" y="2325" width="0.2076%" height="15" fill="rgb(228,62,29)" fg:x="639947984" fg:w="2739593"/><text x="48.7409%" y="2335.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2,739,593 samples, 0.21%)</title><rect x="48.4909%" y="2309" width="0.2076%" height="15" fill="rgb(251,103,34)" fg:x="639947984" fg:w="2739593"/><text x="48.7409%" y="2319.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2,739,593 samples, 0.21%)</title><rect x="48.4909%" y="2293" width="0.2076%" height="15" fill="rgb(233,12,30)" fg:x="639947984" fg:w="2739593"/><text x="48.7409%" y="2303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,739,593 samples, 0.21%)</title><rect x="48.4909%" y="2277" width="0.2076%" height="15" fill="rgb(238,52,0)" fg:x="639947984" fg:w="2739593"/><text x="48.7409%" y="2287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,739,593 samples, 0.21%)</title><rect x="48.4909%" y="2261" width="0.2076%" height="15" fill="rgb(223,98,5)" fg:x="639947984" fg:w="2739593"/><text x="48.7409%" y="2271.50"></text></g><g><title>alloc::alloc::alloc (2,739,593 samples, 0.21%)</title><rect x="48.4909%" y="2245" width="0.2076%" height="15" fill="rgb(228,75,37)" fg:x="639947984" fg:w="2739593"/><text x="48.7409%" y="2255.50"></text></g><g><title>malloc (2,739,593 samples, 0.21%)</title><rect x="48.4909%" y="2229" width="0.2076%" height="15" fill="rgb(205,115,49)" fg:x="639947984" fg:w="2739593"/><text x="48.7409%" y="2239.50"></text></g><g><title>[libc.so.6] (2,739,593 samples, 0.21%)</title><rect x="48.4909%" y="2213" width="0.2076%" height="15" fill="rgb(250,154,43)" fg:x="639947984" fg:w="2739593"/><text x="48.7409%" y="2223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,489,604 samples, 0.26%)</title><rect x="48.6985%" y="2405" width="0.2644%" height="15" fill="rgb(226,43,29)" fg:x="642687577" fg:w="3489604"/><text x="48.9485%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,489,604 samples, 0.26%)</title><rect x="48.6985%" y="2389" width="0.2644%" height="15" fill="rgb(249,228,39)" fg:x="642687577" fg:w="3489604"/><text x="48.9485%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,489,604 samples, 0.26%)</title><rect x="48.6985%" y="2373" width="0.2644%" height="15" fill="rgb(216,79,43)" fg:x="642687577" fg:w="3489604"/><text x="48.9485%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,489,604 samples, 0.26%)</title><rect x="48.6985%" y="2357" width="0.2644%" height="15" fill="rgb(228,95,12)" fg:x="642687577" fg:w="3489604"/><text x="48.9485%" y="2367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,489,604 samples, 0.26%)</title><rect x="48.6985%" y="2341" width="0.2644%" height="15" fill="rgb(249,221,15)" fg:x="642687577" fg:w="3489604"/><text x="48.9485%" y="2351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,489,604 samples, 0.26%)</title><rect x="48.6985%" y="2325" width="0.2644%" height="15" fill="rgb(233,34,13)" fg:x="642687577" fg:w="3489604"/><text x="48.9485%" y="2335.50"></text></g><g><title>alloc::alloc::alloc (3,489,604 samples, 0.26%)</title><rect x="48.6985%" y="2309" width="0.2644%" height="15" fill="rgb(214,103,39)" fg:x="642687577" fg:w="3489604"/><text x="48.9485%" y="2319.50"></text></g><g><title>malloc (3,489,604 samples, 0.26%)</title><rect x="48.6985%" y="2293" width="0.2644%" height="15" fill="rgb(251,126,39)" fg:x="642687577" fg:w="3489604"/><text x="48.9485%" y="2303.50"></text></g><g><title>[libc.so.6] (3,489,604 samples, 0.26%)</title><rect x="48.6985%" y="2277" width="0.2644%" height="15" fill="rgb(214,216,36)" fg:x="642687577" fg:w="3489604"/><text x="48.9485%" y="2287.50"></text></g><g><title>[libc.so.6] (3,489,604 samples, 0.26%)</title><rect x="48.6985%" y="2261" width="0.2644%" height="15" fill="rgb(220,221,8)" fg:x="642687577" fg:w="3489604"/><text x="48.9485%" y="2271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (471,066,714 samples, 35.69%)</title><rect x="13.4828%" y="2469" width="35.6942%" height="15" fill="rgb(240,216,3)" fg:x="177936348" fg:w="471066714"/><text x="13.7328%" y="2479.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (471,066,714 samples, 35.69%)</title><rect x="13.4828%" y="2453" width="35.6942%" height="15" fill="rgb(232,218,17)" fg:x="177936348" fg:w="471066714"/><text x="13.7328%" y="2463.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (471,066,714 samples, 35.69%)</title><rect x="13.4828%" y="2437" width="35.6942%" height="15" fill="rgb(229,163,45)" fg:x="177936348" fg:w="471066714"/><text x="13.7328%" y="2447.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (471,066,714 samples, 35.69%)</title><rect x="13.4828%" y="2421" width="35.6942%" height="15" fill="rgb(231,110,42)" fg:x="177936348" fg:w="471066714"/><text x="13.7328%" y="2431.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2,825,881 samples, 0.21%)</title><rect x="48.9629%" y="2405" width="0.2141%" height="15" fill="rgb(208,170,48)" fg:x="646177181" fg:w="2825881"/><text x="49.2129%" y="2415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5,752,986 samples, 0.44%)</title><rect x="49.4010%" y="2373" width="0.4359%" height="15" fill="rgb(239,116,25)" fg:x="651958792" fg:w="5752986"/><text x="49.6510%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5,752,986 samples, 0.44%)</title><rect x="49.4010%" y="2357" width="0.4359%" height="15" fill="rgb(219,200,50)" fg:x="651958792" fg:w="5752986"/><text x="49.6510%" y="2367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5,752,986 samples, 0.44%)</title><rect x="49.4010%" y="2341" width="0.4359%" height="15" fill="rgb(245,200,0)" fg:x="651958792" fg:w="5752986"/><text x="49.6510%" y="2351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5,752,986 samples, 0.44%)</title><rect x="49.4010%" y="2325" width="0.4359%" height="15" fill="rgb(245,119,33)" fg:x="651958792" fg:w="5752986"/><text x="49.6510%" y="2335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,752,986 samples, 0.44%)</title><rect x="49.4010%" y="2309" width="0.4359%" height="15" fill="rgb(231,125,12)" fg:x="651958792" fg:w="5752986"/><text x="49.6510%" y="2319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,752,986 samples, 0.44%)</title><rect x="49.4010%" y="2293" width="0.4359%" height="15" fill="rgb(216,96,41)" fg:x="651958792" fg:w="5752986"/><text x="49.6510%" y="2303.50"></text></g><g><title>alloc::alloc::alloc (5,752,986 samples, 0.44%)</title><rect x="49.4010%" y="2277" width="0.4359%" height="15" fill="rgb(248,43,45)" fg:x="651958792" fg:w="5752986"/><text x="49.6510%" y="2287.50"></text></g><g><title>malloc (2,950,476 samples, 0.22%)</title><rect x="49.6134%" y="2261" width="0.2236%" height="15" fill="rgb(217,222,7)" fg:x="654761302" fg:w="2950476"/><text x="49.8634%" y="2271.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (14,615,731 samples, 1.11%)</title><rect x="49.1771%" y="2469" width="1.1075%" height="15" fill="rgb(233,28,6)" fg:x="649003062" fg:w="14615731"/><text x="49.4271%" y="2479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (11,660,001 samples, 0.88%)</title><rect x="49.4010%" y="2453" width="0.8835%" height="15" fill="rgb(231,218,15)" fg:x="651958792" fg:w="11660001"/><text x="49.6510%" y="2463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11,660,001 samples, 0.88%)</title><rect x="49.4010%" y="2437" width="0.8835%" height="15" fill="rgb(226,171,48)" fg:x="651958792" fg:w="11660001"/><text x="49.6510%" y="2447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11,660,001 samples, 0.88%)</title><rect x="49.4010%" y="2421" width="0.8835%" height="15" fill="rgb(235,201,9)" fg:x="651958792" fg:w="11660001"/><text x="49.6510%" y="2431.50"></text></g><g><title>alloc::slice::hack::to_vec (11,660,001 samples, 0.88%)</title><rect x="49.4010%" y="2405" width="0.8835%" height="15" fill="rgb(217,80,15)" fg:x="651958792" fg:w="11660001"/><text x="49.6510%" y="2415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11,660,001 samples, 0.88%)</title><rect x="49.4010%" y="2389" width="0.8835%" height="15" fill="rgb(219,152,8)" fg:x="651958792" fg:w="11660001"/><text x="49.6510%" y="2399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5,907,015 samples, 0.45%)</title><rect x="49.8369%" y="2373" width="0.4476%" height="15" fill="rgb(243,107,38)" fg:x="657711778" fg:w="5907015"/><text x="50.0869%" y="2383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5,907,015 samples, 0.45%)</title><rect x="49.8369%" y="2357" width="0.4476%" height="15" fill="rgb(231,17,5)" fg:x="657711778" fg:w="5907015"/><text x="50.0869%" y="2367.50"></text></g><g><title>[libc.so.6] (2,836,824 samples, 0.21%)</title><rect x="50.0696%" y="2341" width="0.2150%" height="15" fill="rgb(209,25,54)" fg:x="660781969" fg:w="2836824"/><text x="50.3196%" y="2351.50"></text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,589,121 samples, 0.27%)</title><rect x="50.2845%" y="2469" width="0.2720%" height="15" fill="rgb(219,0,2)" fg:x="663618793" fg:w="3589121"/><text x="50.5345%" y="2479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,589,121 samples, 0.27%)</title><rect x="50.2845%" y="2453" width="0.2720%" height="15" fill="rgb(246,9,5)" fg:x="663618793" fg:w="3589121"/><text x="50.5345%" y="2463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,589,121 samples, 0.27%)</title><rect x="50.2845%" y="2437" width="0.2720%" height="15" fill="rgb(226,159,4)" fg:x="663618793" fg:w="3589121"/><text x="50.5345%" y="2447.50"></text></g><g><title>alloc::slice::hack::to_vec (3,589,121 samples, 0.27%)</title><rect x="50.2845%" y="2421" width="0.2720%" height="15" fill="rgb(219,175,34)" fg:x="663618793" fg:w="3589121"/><text x="50.5345%" y="2431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,589,121 samples, 0.27%)</title><rect x="50.2845%" y="2405" width="0.2720%" height="15" fill="rgb(236,10,46)" fg:x="663618793" fg:w="3589121"/><text x="50.5345%" y="2415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,589,121 samples, 0.27%)</title><rect x="50.2845%" y="2389" width="0.2720%" height="15" fill="rgb(240,211,16)" fg:x="663618793" fg:w="3589121"/><text x="50.5345%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,589,121 samples, 0.27%)</title><rect x="50.2845%" y="2373" width="0.2720%" height="15" fill="rgb(205,3,43)" fg:x="663618793" fg:w="3589121"/><text x="50.5345%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,589,121 samples, 0.27%)</title><rect x="50.2845%" y="2357" width="0.2720%" height="15" fill="rgb(245,7,22)" fg:x="663618793" fg:w="3589121"/><text x="50.5345%" y="2367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,589,121 samples, 0.27%)</title><rect x="50.2845%" y="2341" width="0.2720%" height="15" fill="rgb(239,132,32)" fg:x="663618793" fg:w="3589121"/><text x="50.5345%" y="2351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,589,121 samples, 0.27%)</title><rect x="50.2845%" y="2325" width="0.2720%" height="15" fill="rgb(228,202,34)" fg:x="663618793" fg:w="3589121"/><text x="50.5345%" y="2335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,589,121 samples, 0.27%)</title><rect x="50.2845%" y="2309" width="0.2720%" height="15" fill="rgb(254,200,22)" fg:x="663618793" fg:w="3589121"/><text x="50.5345%" y="2319.50"></text></g><g><title>alloc::alloc::alloc (3,589,121 samples, 0.27%)</title><rect x="50.2845%" y="2293" width="0.2720%" height="15" fill="rgb(219,10,39)" fg:x="663618793" fg:w="3589121"/><text x="50.5345%" y="2303.50"></text></g><g><title>malloc (3,589,121 samples, 0.27%)</title><rect x="50.2845%" y="2277" width="0.2720%" height="15" fill="rgb(226,210,39)" fg:x="663618793" fg:w="3589121"/><text x="50.5345%" y="2287.50"></text></g><g><title>[libc.so.6] (3,589,121 samples, 0.27%)</title><rect x="50.2845%" y="2261" width="0.2720%" height="15" fill="rgb(208,219,16)" fg:x="663618793" fg:w="3589121"/><text x="50.5345%" y="2271.50"></text></g><g><title>core::clone::Clone::clone (12,058,253 samples, 0.91%)</title><rect x="50.5565%" y="2373" width="0.9137%" height="15" fill="rgb(216,158,51)" fg:x="667207914" fg:w="12058253"/><text x="50.8065%" y="2383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (12,058,253 samples, 0.91%)</title><rect x="50.5565%" y="2357" width="0.9137%" height="15" fill="rgb(233,14,44)" fg:x="667207914" fg:w="12058253"/><text x="50.8065%" y="2367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12,058,253 samples, 0.91%)</title><rect x="50.5565%" y="2341" width="0.9137%" height="15" fill="rgb(237,97,39)" fg:x="667207914" fg:w="12058253"/><text x="50.8065%" y="2351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12,058,253 samples, 0.91%)</title><rect x="50.5565%" y="2325" width="0.9137%" height="15" fill="rgb(218,198,43)" fg:x="667207914" fg:w="12058253"/><text x="50.8065%" y="2335.50"></text></g><g><title>alloc::slice::hack::to_vec (12,058,253 samples, 0.91%)</title><rect x="50.5565%" y="2309" width="0.9137%" height="15" fill="rgb(231,104,20)" fg:x="667207914" fg:w="12058253"/><text x="50.8065%" y="2319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12,058,253 samples, 0.91%)</title><rect x="50.5565%" y="2293" width="0.9137%" height="15" fill="rgb(254,36,13)" fg:x="667207914" fg:w="12058253"/><text x="50.8065%" y="2303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12,058,253 samples, 0.91%)</title><rect x="50.5565%" y="2277" width="0.9137%" height="15" fill="rgb(248,14,50)" fg:x="667207914" fg:w="12058253"/><text x="50.8065%" y="2287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12,058,253 samples, 0.91%)</title><rect x="50.5565%" y="2261" width="0.9137%" height="15" fill="rgb(217,107,29)" fg:x="667207914" fg:w="12058253"/><text x="50.8065%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (12,058,253 samples, 0.91%)</title><rect x="50.5565%" y="2245" width="0.9137%" height="15" fill="rgb(251,169,33)" fg:x="667207914" fg:w="12058253"/><text x="50.8065%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (12,058,253 samples, 0.91%)</title><rect x="50.5565%" y="2229" width="0.9137%" height="15" fill="rgb(217,108,32)" fg:x="667207914" fg:w="12058253"/><text x="50.8065%" y="2239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12,058,253 samples, 0.91%)</title><rect x="50.5565%" y="2213" width="0.9137%" height="15" fill="rgb(219,66,42)" fg:x="667207914" fg:w="12058253"/><text x="50.8065%" y="2223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12,058,253 samples, 0.91%)</title><rect x="50.5565%" y="2197" width="0.9137%" height="15" fill="rgb(206,180,7)" fg:x="667207914" fg:w="12058253"/><text x="50.8065%" y="2207.50"></text></g><g><title>alloc::alloc::alloc (12,058,253 samples, 0.91%)</title><rect x="50.5565%" y="2181" width="0.9137%" height="15" fill="rgb(208,226,31)" fg:x="667207914" fg:w="12058253"/><text x="50.8065%" y="2191.50"></text></g><g><title>malloc (12,058,253 samples, 0.91%)</title><rect x="50.5565%" y="2165" width="0.9137%" height="15" fill="rgb(218,26,49)" fg:x="667207914" fg:w="12058253"/><text x="50.8065%" y="2175.50"></text></g><g><title>[libc.so.6] (9,326,230 samples, 0.71%)</title><rect x="50.7635%" y="2149" width="0.7067%" height="15" fill="rgb(233,197,48)" fg:x="669939937" fg:w="9326230"/><text x="51.0135%" y="2159.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (15,513,783 samples, 1.18%)</title><rect x="50.5565%" y="2405" width="1.1755%" height="15" fill="rgb(252,181,51)" fg:x="667207914" fg:w="15513783"/><text x="50.8065%" y="2415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (15,513,783 samples, 1.18%)</title><rect x="50.5565%" y="2389" width="1.1755%" height="15" fill="rgb(253,90,19)" fg:x="667207914" fg:w="15513783"/><text x="50.8065%" y="2399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (3,455,530 samples, 0.26%)</title><rect x="51.4702%" y="2373" width="0.2618%" height="15" fill="rgb(215,171,30)" fg:x="679266167" fg:w="3455530"/><text x="51.7202%" y="2383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (3,455,530 samples, 0.26%)</title><rect x="51.4702%" y="2357" width="0.2618%" height="15" fill="rgb(214,222,9)" fg:x="679266167" fg:w="3455530"/><text x="51.7202%" y="2367.50"></text></g><g><title>hashbrown::raw::offset_from (3,455,530 samples, 0.26%)</title><rect x="51.4702%" y="2341" width="0.2618%" height="15" fill="rgb(223,3,22)" fg:x="679266167" fg:w="3455530"/><text x="51.7202%" y="2351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (3,455,530 samples, 0.26%)</title><rect x="51.4702%" y="2325" width="0.2618%" height="15" fill="rgb(225,196,46)" fg:x="679266167" fg:w="3455530"/><text x="51.7202%" y="2335.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (3,333,604 samples, 0.25%)</title><rect x="51.7320%" y="2373" width="0.2526%" height="15" fill="rgb(209,110,37)" fg:x="682721697" fg:w="3333604"/><text x="51.9820%" y="2383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (3,333,604 samples, 0.25%)</title><rect x="51.7320%" y="2357" width="0.2526%" height="15" fill="rgb(249,89,12)" fg:x="682721697" fg:w="3333604"/><text x="51.9820%" y="2367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (533,702,248 samples, 40.44%)</title><rect x="11.7841%" y="2549" width="40.4403%" height="15" fill="rgb(226,27,33)" fg:x="155517403" fg:w="533702248"/><text x="12.0341%" y="2559.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (533,702,248 samples, 40.44%)</title><rect x="11.7841%" y="2533" width="40.4403%" height="15" fill="rgb(213,82,22)" fg:x="155517403" fg:w="533702248"/><text x="12.0341%" y="2543.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (533,702,248 samples, 40.44%)</title><rect x="11.7841%" y="2517" width="40.4403%" height="15" fill="rgb(248,140,0)" fg:x="155517403" fg:w="533702248"/><text x="12.0341%" y="2527.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (533,702,248 samples, 40.44%)</title><rect x="11.7841%" y="2501" width="40.4403%" height="15" fill="rgb(228,106,3)" fg:x="155517403" fg:w="533702248"/><text x="12.0341%" y="2511.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (533,702,248 samples, 40.44%)</title><rect x="11.7841%" y="2485" width="40.4403%" height="15" fill="rgb(209,23,37)" fg:x="155517403" fg:w="533702248"/><text x="12.0341%" y="2495.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (22,011,737 samples, 1.67%)</title><rect x="50.5565%" y="2469" width="1.6679%" height="15" fill="rgb(241,93,50)" fg:x="667207914" fg:w="22011737"/><text x="50.8065%" y="2479.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (22,011,737 samples, 1.67%)</title><rect x="50.5565%" y="2453" width="1.6679%" height="15" fill="rgb(253,46,43)" fg:x="667207914" fg:w="22011737"/><text x="50.8065%" y="2463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (22,011,737 samples, 1.67%)</title><rect x="50.5565%" y="2437" width="1.6679%" height="15" fill="rgb(226,206,43)" fg:x="667207914" fg:w="22011737"/><text x="50.8065%" y="2447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (22,011,737 samples, 1.67%)</title><rect x="50.5565%" y="2421" width="1.6679%" height="15" fill="rgb(217,54,7)" fg:x="667207914" fg:w="22011737"/><text x="50.8065%" y="2431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (6,497,954 samples, 0.49%)</title><rect x="51.7320%" y="2405" width="0.4924%" height="15" fill="rgb(223,5,52)" fg:x="682721697" fg:w="6497954"/><text x="51.9820%" y="2415.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (6,497,954 samples, 0.49%)</title><rect x="51.7320%" y="2389" width="0.4924%" height="15" fill="rgb(206,52,46)" fg:x="682721697" fg:w="6497954"/><text x="51.9820%" y="2399.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3,164,350 samples, 0.24%)</title><rect x="51.9846%" y="2373" width="0.2398%" height="15" fill="rgb(253,136,11)" fg:x="686055301" fg:w="3164350"/><text x="52.2346%" y="2383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,164,350 samples, 0.24%)</title><rect x="51.9846%" y="2357" width="0.2398%" height="15" fill="rgb(208,106,33)" fg:x="686055301" fg:w="3164350"/><text x="52.2346%" y="2367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,164,350 samples, 0.24%)</title><rect x="51.9846%" y="2341" width="0.2398%" height="15" fill="rgb(206,54,4)" fg:x="686055301" fg:w="3164350"/><text x="52.2346%" y="2351.50"></text></g><g><title>alloc::alloc::alloc (3,164,350 samples, 0.24%)</title><rect x="51.9846%" y="2325" width="0.2398%" height="15" fill="rgb(213,3,15)" fg:x="686055301" fg:w="3164350"/><text x="52.2346%" y="2335.50"></text></g><g><title>malloc (3,164,350 samples, 0.24%)</title><rect x="51.9846%" y="2309" width="0.2398%" height="15" fill="rgb(252,211,39)" fg:x="686055301" fg:w="3164350"/><text x="52.2346%" y="2319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,736,268 samples, 0.51%)</title><rect x="52.2244%" y="2357" width="0.5104%" height="15" fill="rgb(223,6,36)" fg:x="689219651" fg:w="6736268"/><text x="52.4744%" y="2367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,736,268 samples, 0.51%)</title><rect x="52.2244%" y="2341" width="0.5104%" height="15" fill="rgb(252,169,45)" fg:x="689219651" fg:w="6736268"/><text x="52.4744%" y="2351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,736,268 samples, 0.51%)</title><rect x="52.2244%" y="2325" width="0.5104%" height="15" fill="rgb(212,48,26)" fg:x="689219651" fg:w="6736268"/><text x="52.4744%" y="2335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,736,268 samples, 0.51%)</title><rect x="52.2244%" y="2309" width="0.5104%" height="15" fill="rgb(251,102,48)" fg:x="689219651" fg:w="6736268"/><text x="52.4744%" y="2319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,736,268 samples, 0.51%)</title><rect x="52.2244%" y="2293" width="0.5104%" height="15" fill="rgb(243,208,16)" fg:x="689219651" fg:w="6736268"/><text x="52.4744%" y="2303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,736,268 samples, 0.51%)</title><rect x="52.2244%" y="2277" width="0.5104%" height="15" fill="rgb(219,96,24)" fg:x="689219651" fg:w="6736268"/><text x="52.4744%" y="2287.50"></text></g><g><title>alloc::alloc::alloc (6,736,268 samples, 0.51%)</title><rect x="52.2244%" y="2261" width="0.5104%" height="15" fill="rgb(219,33,29)" fg:x="689219651" fg:w="6736268"/><text x="52.4744%" y="2271.50"></text></g><g><title>malloc (6,736,268 samples, 0.51%)</title><rect x="52.2244%" y="2245" width="0.5104%" height="15" fill="rgb(223,176,5)" fg:x="689219651" fg:w="6736268"/><text x="52.4744%" y="2255.50"></text></g><g><title>[libc.so.6] (6,736,268 samples, 0.51%)</title><rect x="52.2244%" y="2229" width="0.5104%" height="15" fill="rgb(228,140,14)" fg:x="689219651" fg:w="6736268"/><text x="52.4744%" y="2239.50"></text></g><g><title>core::clone::Clone::clone (10,060,891 samples, 0.76%)</title><rect x="52.2244%" y="2453" width="0.7623%" height="15" fill="rgb(217,179,31)" fg:x="689219651" fg:w="10060891"/><text x="52.4744%" y="2463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (10,060,891 samples, 0.76%)</title><rect x="52.2244%" y="2437" width="0.7623%" height="15" fill="rgb(230,9,30)" fg:x="689219651" fg:w="10060891"/><text x="52.4744%" y="2447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,060,891 samples, 0.76%)</title><rect x="52.2244%" y="2421" width="0.7623%" height="15" fill="rgb(230,136,20)" fg:x="689219651" fg:w="10060891"/><text x="52.4744%" y="2431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,060,891 samples, 0.76%)</title><rect x="52.2244%" y="2405" width="0.7623%" height="15" fill="rgb(215,210,22)" fg:x="689219651" fg:w="10060891"/><text x="52.4744%" y="2415.50"></text></g><g><title>alloc::slice::hack::to_vec (10,060,891 samples, 0.76%)</title><rect x="52.2244%" y="2389" width="0.7623%" height="15" fill="rgb(218,43,5)" fg:x="689219651" fg:w="10060891"/><text x="52.4744%" y="2399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,060,891 samples, 0.76%)</title><rect x="52.2244%" y="2373" width="0.7623%" height="15" fill="rgb(216,11,5)" fg:x="689219651" fg:w="10060891"/><text x="52.4744%" y="2383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3,324,623 samples, 0.25%)</title><rect x="52.7348%" y="2357" width="0.2519%" height="15" fill="rgb(209,82,29)" fg:x="695955919" fg:w="3324623"/><text x="52.9848%" y="2367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,324,623 samples, 0.25%)</title><rect x="52.7348%" y="2341" width="0.2519%" height="15" fill="rgb(244,115,12)" fg:x="695955919" fg:w="3324623"/><text x="52.9848%" y="2351.50"></text></g><g><title>[libc.so.6] (3,324,623 samples, 0.25%)</title><rect x="52.7348%" y="2325" width="0.2519%" height="15" fill="rgb(222,82,18)" fg:x="695955919" fg:w="3324623"/><text x="52.9848%" y="2335.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (556,907,340 samples, 42.20%)</title><rect x="11.0212%" y="2565" width="42.1987%" height="15" fill="rgb(249,227,8)" fg:x="145450124" fg:w="556907340"/><text x="11.2712%" y="2575.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (13,137,813 samples, 1.00%)</title><rect x="52.2244%" y="2549" width="0.9955%" height="15" fill="rgb(253,141,45)" fg:x="689219651" fg:w="13137813"/><text x="52.4744%" y="2559.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (13,137,813 samples, 1.00%)</title><rect x="52.2244%" y="2533" width="0.9955%" height="15" fill="rgb(234,184,4)" fg:x="689219651" fg:w="13137813"/><text x="52.4744%" y="2543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (13,137,813 samples, 1.00%)</title><rect x="52.2244%" y="2517" width="0.9955%" height="15" fill="rgb(218,194,23)" fg:x="689219651" fg:w="13137813"/><text x="52.4744%" y="2527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,137,813 samples, 1.00%)</title><rect x="52.2244%" y="2501" width="0.9955%" height="15" fill="rgb(235,66,41)" fg:x="689219651" fg:w="13137813"/><text x="52.4744%" y="2511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (13,137,813 samples, 1.00%)</title><rect x="52.2244%" y="2485" width="0.9955%" height="15" fill="rgb(245,217,1)" fg:x="689219651" fg:w="13137813"/><text x="52.4744%" y="2495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (13,137,813 samples, 1.00%)</title><rect x="52.2244%" y="2469" width="0.9955%" height="15" fill="rgb(229,91,1)" fg:x="689219651" fg:w="13137813"/><text x="52.4744%" y="2479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (3,076,922 samples, 0.23%)</title><rect x="52.9867%" y="2453" width="0.2331%" height="15" fill="rgb(207,101,30)" fg:x="699280542" fg:w="3076922"/><text x="53.2367%" y="2463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,076,922 samples, 0.23%)</title><rect x="52.9867%" y="2437" width="0.2331%" height="15" fill="rgb(223,82,49)" fg:x="699280542" fg:w="3076922"/><text x="53.2367%" y="2447.50"></text></g><g><title>[libc.so.6] (3,076,922 samples, 0.23%)</title><rect x="52.9867%" y="2421" width="0.2331%" height="15" fill="rgb(218,167,17)" fg:x="699280542" fg:w="3076922"/><text x="53.2367%" y="2431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (560,414,560 samples, 42.46%)</title><rect x="11.0212%" y="2629" width="42.4644%" height="15" fill="rgb(208,103,14)" fg:x="145450124" fg:w="560414560"/><text x="11.2712%" y="2639.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (560,414,560 samples, 42.46%)</title><rect x="11.0212%" y="2613" width="42.4644%" height="15" fill="rgb(238,20,8)" fg:x="145450124" fg:w="560414560"/><text x="11.2712%" y="2623.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (560,414,560 samples, 42.46%)</title><rect x="11.0212%" y="2597" width="42.4644%" height="15" fill="rgb(218,80,54)" fg:x="145450124" fg:w="560414560"/><text x="11.2712%" y="2607.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (560,414,560 samples, 42.46%)</title><rect x="11.0212%" y="2581" width="42.4644%" height="15" fill="rgb(240,144,17)" fg:x="145450124" fg:w="560414560"/><text x="11.2712%" y="2591.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,507,220 samples, 0.27%)</title><rect x="53.2199%" y="2565" width="0.2658%" height="15" fill="rgb(245,27,50)" fg:x="702357464" fg:w="3507220"/><text x="53.4699%" y="2575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,507,220 samples, 0.27%)</title><rect x="53.2199%" y="2549" width="0.2658%" height="15" fill="rgb(251,51,7)" fg:x="702357464" fg:w="3507220"/><text x="53.4699%" y="2559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,507,220 samples, 0.27%)</title><rect x="53.2199%" y="2533" width="0.2658%" height="15" fill="rgb(245,217,29)" fg:x="702357464" fg:w="3507220"/><text x="53.4699%" y="2543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,507,220 samples, 0.27%)</title><rect x="53.2199%" y="2517" width="0.2658%" height="15" fill="rgb(221,176,29)" fg:x="702357464" fg:w="3507220"/><text x="53.4699%" y="2527.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,118,756 samples, 0.24%)</title><rect x="53.4856%" y="2629" width="0.2363%" height="15" fill="rgb(212,180,24)" fg:x="705864684" fg:w="3118756"/><text x="53.7356%" y="2639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,118,756 samples, 0.24%)</title><rect x="53.4856%" y="2613" width="0.2363%" height="15" fill="rgb(254,24,2)" fg:x="705864684" fg:w="3118756"/><text x="53.7356%" y="2623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,118,756 samples, 0.24%)</title><rect x="53.4856%" y="2597" width="0.2363%" height="15" fill="rgb(230,100,2)" fg:x="705864684" fg:w="3118756"/><text x="53.7356%" y="2607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,118,756 samples, 0.24%)</title><rect x="53.4856%" y="2581" width="0.2363%" height="15" fill="rgb(219,142,25)" fg:x="705864684" fg:w="3118756"/><text x="53.7356%" y="2591.50"></text></g><g><title>alloc::slice::hack::to_vec (3,118,756 samples, 0.24%)</title><rect x="53.4856%" y="2565" width="0.2363%" height="15" fill="rgb(240,73,43)" fg:x="705864684" fg:w="3118756"/><text x="53.7356%" y="2575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,118,756 samples, 0.24%)</title><rect x="53.4856%" y="2549" width="0.2363%" height="15" fill="rgb(214,114,15)" fg:x="705864684" fg:w="3118756"/><text x="53.7356%" y="2559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,118,756 samples, 0.24%)</title><rect x="53.4856%" y="2533" width="0.2363%" height="15" fill="rgb(207,130,4)" fg:x="705864684" fg:w="3118756"/><text x="53.7356%" y="2543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,118,756 samples, 0.24%)</title><rect x="53.4856%" y="2517" width="0.2363%" height="15" fill="rgb(221,25,40)" fg:x="705864684" fg:w="3118756"/><text x="53.7356%" y="2527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,118,756 samples, 0.24%)</title><rect x="53.4856%" y="2501" width="0.2363%" height="15" fill="rgb(241,184,7)" fg:x="705864684" fg:w="3118756"/><text x="53.7356%" y="2511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,118,756 samples, 0.24%)</title><rect x="53.4856%" y="2485" width="0.2363%" height="15" fill="rgb(235,159,4)" fg:x="705864684" fg:w="3118756"/><text x="53.7356%" y="2495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,118,756 samples, 0.24%)</title><rect x="53.4856%" y="2469" width="0.2363%" height="15" fill="rgb(214,87,48)" fg:x="705864684" fg:w="3118756"/><text x="53.7356%" y="2479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,118,756 samples, 0.24%)</title><rect x="53.4856%" y="2453" width="0.2363%" height="15" fill="rgb(246,198,24)" fg:x="705864684" fg:w="3118756"/><text x="53.7356%" y="2463.50"></text></g><g><title>alloc::alloc::alloc (3,118,756 samples, 0.24%)</title><rect x="53.4856%" y="2437" width="0.2363%" height="15" fill="rgb(209,66,40)" fg:x="705864684" fg:w="3118756"/><text x="53.7356%" y="2447.50"></text></g><g><title>malloc (3,118,756 samples, 0.24%)</title><rect x="53.4856%" y="2421" width="0.2363%" height="15" fill="rgb(233,147,39)" fg:x="705864684" fg:w="3118756"/><text x="53.7356%" y="2431.50"></text></g><g><title>[libc.so.6] (3,118,756 samples, 0.24%)</title><rect x="53.4856%" y="2405" width="0.2363%" height="15" fill="rgb(231,145,52)" fg:x="705864684" fg:w="3118756"/><text x="53.7356%" y="2415.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (566,730,877 samples, 42.94%)</title><rect x="11.0212%" y="2645" width="42.9430%" height="15" fill="rgb(206,20,26)" fg:x="145450124" fg:w="566730877"/><text x="11.2712%" y="2655.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (3,197,561 samples, 0.24%)</title><rect x="53.7220%" y="2629" width="0.2423%" height="15" fill="rgb(238,220,4)" fg:x="708983440" fg:w="3197561"/><text x="53.9720%" y="2639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,197,561 samples, 0.24%)</title><rect x="53.7220%" y="2613" width="0.2423%" height="15" fill="rgb(252,195,42)" fg:x="708983440" fg:w="3197561"/><text x="53.9720%" y="2623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,197,561 samples, 0.24%)</title><rect x="53.7220%" y="2597" width="0.2423%" height="15" fill="rgb(209,10,6)" fg:x="708983440" fg:w="3197561"/><text x="53.9720%" y="2607.50"></text></g><g><title>alloc::slice::hack::to_vec (3,197,561 samples, 0.24%)</title><rect x="53.7220%" y="2581" width="0.2423%" height="15" fill="rgb(229,3,52)" fg:x="708983440" fg:w="3197561"/><text x="53.9720%" y="2591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,197,561 samples, 0.24%)</title><rect x="53.7220%" y="2565" width="0.2423%" height="15" fill="rgb(253,49,37)" fg:x="708983440" fg:w="3197561"/><text x="53.9720%" y="2575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,197,561 samples, 0.24%)</title><rect x="53.7220%" y="2549" width="0.2423%" height="15" fill="rgb(240,103,49)" fg:x="708983440" fg:w="3197561"/><text x="53.9720%" y="2559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,197,561 samples, 0.24%)</title><rect x="53.7220%" y="2533" width="0.2423%" height="15" fill="rgb(250,182,30)" fg:x="708983440" fg:w="3197561"/><text x="53.9720%" y="2543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,197,561 samples, 0.24%)</title><rect x="53.7220%" y="2517" width="0.2423%" height="15" fill="rgb(248,8,30)" fg:x="708983440" fg:w="3197561"/><text x="53.9720%" y="2527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,197,561 samples, 0.24%)</title><rect x="53.7220%" y="2501" width="0.2423%" height="15" fill="rgb(237,120,30)" fg:x="708983440" fg:w="3197561"/><text x="53.9720%" y="2511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,197,561 samples, 0.24%)</title><rect x="53.7220%" y="2485" width="0.2423%" height="15" fill="rgb(221,146,34)" fg:x="708983440" fg:w="3197561"/><text x="53.9720%" y="2495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,197,561 samples, 0.24%)</title><rect x="53.7220%" y="2469" width="0.2423%" height="15" fill="rgb(242,55,13)" fg:x="708983440" fg:w="3197561"/><text x="53.9720%" y="2479.50"></text></g><g><title>alloc::alloc::alloc (3,197,561 samples, 0.24%)</title><rect x="53.7220%" y="2453" width="0.2423%" height="15" fill="rgb(242,112,31)" fg:x="708983440" fg:w="3197561"/><text x="53.9720%" y="2463.50"></text></g><g><title>__rust_alloc (3,197,561 samples, 0.24%)</title><rect x="53.7220%" y="2437" width="0.2423%" height="15" fill="rgb(249,192,27)" fg:x="708983440" fg:w="3197561"/><text x="53.9720%" y="2447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (573,769,496 samples, 43.48%)</title><rect x="10.7618%" y="2709" width="43.4764%" height="15" fill="rgb(208,204,44)" fg:x="142026632" fg:w="573769496"/><text x="11.0118%" y="2719.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (573,769,496 samples, 43.48%)</title><rect x="10.7618%" y="2693" width="43.4764%" height="15" fill="rgb(208,93,54)" fg:x="142026632" fg:w="573769496"/><text x="11.0118%" y="2703.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (573,769,496 samples, 43.48%)</title><rect x="10.7618%" y="2677" width="43.4764%" height="15" fill="rgb(242,1,31)" fg:x="142026632" fg:w="573769496"/><text x="11.0118%" y="2687.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (573,769,496 samples, 43.48%)</title><rect x="10.7618%" y="2661" width="43.4764%" height="15" fill="rgb(241,83,25)" fg:x="142026632" fg:w="573769496"/><text x="11.0118%" y="2671.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3,615,127 samples, 0.27%)</title><rect x="53.9642%" y="2645" width="0.2739%" height="15" fill="rgb(205,169,50)" fg:x="712181001" fg:w="3615127"/><text x="54.2142%" y="2655.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (586,997,798 samples, 44.48%)</title><rect x="10.7618%" y="2725" width="44.4787%" height="15" fill="rgb(239,186,37)" fg:x="142026632" fg:w="586997798"/><text x="11.0118%" y="2735.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (13,228,302 samples, 1.00%)</title><rect x="54.2382%" y="2709" width="1.0024%" height="15" fill="rgb(205,221,10)" fg:x="715796128" fg:w="13228302"/><text x="54.4882%" y="2719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (13,228,302 samples, 1.00%)</title><rect x="54.2382%" y="2693" width="1.0024%" height="15" fill="rgb(218,196,15)" fg:x="715796128" fg:w="13228302"/><text x="54.4882%" y="2703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13,228,302 samples, 1.00%)</title><rect x="54.2382%" y="2677" width="1.0024%" height="15" fill="rgb(218,196,35)" fg:x="715796128" fg:w="13228302"/><text x="54.4882%" y="2687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13,228,302 samples, 1.00%)</title><rect x="54.2382%" y="2661" width="1.0024%" height="15" fill="rgb(233,63,24)" fg:x="715796128" fg:w="13228302"/><text x="54.4882%" y="2671.50"></text></g><g><title>alloc::slice::hack::to_vec (13,228,302 samples, 1.00%)</title><rect x="54.2382%" y="2645" width="1.0024%" height="15" fill="rgb(225,8,4)" fg:x="715796128" fg:w="13228302"/><text x="54.4882%" y="2655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13,228,302 samples, 1.00%)</title><rect x="54.2382%" y="2629" width="1.0024%" height="15" fill="rgb(234,105,35)" fg:x="715796128" fg:w="13228302"/><text x="54.4882%" y="2639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13,228,302 samples, 1.00%)</title><rect x="54.2382%" y="2613" width="1.0024%" height="15" fill="rgb(236,21,32)" fg:x="715796128" fg:w="13228302"/><text x="54.4882%" y="2623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13,228,302 samples, 1.00%)</title><rect x="54.2382%" y="2597" width="1.0024%" height="15" fill="rgb(228,109,6)" fg:x="715796128" fg:w="13228302"/><text x="54.4882%" y="2607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (13,228,302 samples, 1.00%)</title><rect x="54.2382%" y="2581" width="1.0024%" height="15" fill="rgb(229,215,31)" fg:x="715796128" fg:w="13228302"/><text x="54.4882%" y="2591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (13,228,302 samples, 1.00%)</title><rect x="54.2382%" y="2565" width="1.0024%" height="15" fill="rgb(221,52,54)" fg:x="715796128" fg:w="13228302"/><text x="54.4882%" y="2575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13,228,302 samples, 1.00%)</title><rect x="54.2382%" y="2549" width="1.0024%" height="15" fill="rgb(252,129,43)" fg:x="715796128" fg:w="13228302"/><text x="54.4882%" y="2559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13,228,302 samples, 1.00%)</title><rect x="54.2382%" y="2533" width="1.0024%" height="15" fill="rgb(248,183,27)" fg:x="715796128" fg:w="13228302"/><text x="54.4882%" y="2543.50"></text></g><g><title>alloc::alloc::alloc (13,228,302 samples, 1.00%)</title><rect x="54.2382%" y="2517" width="1.0024%" height="15" fill="rgb(250,0,22)" fg:x="715796128" fg:w="13228302"/><text x="54.4882%" y="2527.50"></text></g><g><title>malloc (13,228,302 samples, 1.00%)</title><rect x="54.2382%" y="2501" width="1.0024%" height="15" fill="rgb(213,166,10)" fg:x="715796128" fg:w="13228302"/><text x="54.4882%" y="2511.50"></text></g><g><title>[libc.so.6] (9,771,022 samples, 0.74%)</title><rect x="54.5001%" y="2485" width="0.7404%" height="15" fill="rgb(207,163,36)" fg:x="719253408" fg:w="9771022"/><text x="54.7501%" y="2495.50"></text></g><g><title>[libc.so.6] (3,652,163 samples, 0.28%)</title><rect x="54.9638%" y="2469" width="0.2767%" height="15" fill="rgb(208,122,22)" fg:x="725372267" fg:w="3652163"/><text x="55.2138%" y="2479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (589,864,328 samples, 44.70%)</title><rect x="10.7618%" y="2789" width="44.6959%" height="15" fill="rgb(207,104,49)" fg:x="142026632" fg:w="589864328"/><text x="11.0118%" y="2799.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (589,864,328 samples, 44.70%)</title><rect x="10.7618%" y="2773" width="44.6959%" height="15" fill="rgb(248,211,50)" fg:x="142026632" fg:w="589864328"/><text x="11.0118%" y="2783.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (589,864,328 samples, 44.70%)</title><rect x="10.7618%" y="2757" width="44.6959%" height="15" fill="rgb(217,13,45)" fg:x="142026632" fg:w="589864328"/><text x="11.0118%" y="2767.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (589,864,328 samples, 44.70%)</title><rect x="10.7618%" y="2741" width="44.6959%" height="15" fill="rgb(211,216,49)" fg:x="142026632" fg:w="589864328"/><text x="11.0118%" y="2751.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2,866,530 samples, 0.22%)</title><rect x="55.2405%" y="2725" width="0.2172%" height="15" fill="rgb(221,58,53)" fg:x="729024430" fg:w="2866530"/><text x="55.4905%" y="2735.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,920,326 samples, 0.22%)</title><rect x="55.4577%" y="2789" width="0.2213%" height="15" fill="rgb(220,112,41)" fg:x="731890960" fg:w="2920326"/><text x="55.7077%" y="2799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,920,326 samples, 0.22%)</title><rect x="55.4577%" y="2773" width="0.2213%" height="15" fill="rgb(236,38,28)" fg:x="731890960" fg:w="2920326"/><text x="55.7077%" y="2783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,920,326 samples, 0.22%)</title><rect x="55.4577%" y="2757" width="0.2213%" height="15" fill="rgb(227,195,22)" fg:x="731890960" fg:w="2920326"/><text x="55.7077%" y="2767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,920,326 samples, 0.22%)</title><rect x="55.4577%" y="2741" width="0.2213%" height="15" fill="rgb(214,55,33)" fg:x="731890960" fg:w="2920326"/><text x="55.7077%" y="2751.50"></text></g><g><title>alloc::slice::hack::to_vec (2,920,326 samples, 0.22%)</title><rect x="55.4577%" y="2725" width="0.2213%" height="15" fill="rgb(248,80,13)" fg:x="731890960" fg:w="2920326"/><text x="55.7077%" y="2735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,920,326 samples, 0.22%)</title><rect x="55.4577%" y="2709" width="0.2213%" height="15" fill="rgb(238,52,6)" fg:x="731890960" fg:w="2920326"/><text x="55.7077%" y="2719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,920,326 samples, 0.22%)</title><rect x="55.4577%" y="2693" width="0.2213%" height="15" fill="rgb(224,198,47)" fg:x="731890960" fg:w="2920326"/><text x="55.7077%" y="2703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,920,326 samples, 0.22%)</title><rect x="55.4577%" y="2677" width="0.2213%" height="15" fill="rgb(233,171,20)" fg:x="731890960" fg:w="2920326"/><text x="55.7077%" y="2687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,920,326 samples, 0.22%)</title><rect x="55.4577%" y="2661" width="0.2213%" height="15" fill="rgb(241,30,25)" fg:x="731890960" fg:w="2920326"/><text x="55.7077%" y="2671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,920,326 samples, 0.22%)</title><rect x="55.4577%" y="2645" width="0.2213%" height="15" fill="rgb(207,171,38)" fg:x="731890960" fg:w="2920326"/><text x="55.7077%" y="2655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,920,326 samples, 0.22%)</title><rect x="55.4577%" y="2629" width="0.2213%" height="15" fill="rgb(234,70,1)" fg:x="731890960" fg:w="2920326"/><text x="55.7077%" y="2639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,920,326 samples, 0.22%)</title><rect x="55.4577%" y="2613" width="0.2213%" height="15" fill="rgb(232,178,18)" fg:x="731890960" fg:w="2920326"/><text x="55.7077%" y="2623.50"></text></g><g><title>alloc::alloc::alloc (2,920,326 samples, 0.22%)</title><rect x="55.4577%" y="2597" width="0.2213%" height="15" fill="rgb(241,78,40)" fg:x="731890960" fg:w="2920326"/><text x="55.7077%" y="2607.50"></text></g><g><title>__rdl_alloc (2,920,326 samples, 0.22%)</title><rect x="55.4577%" y="2581" width="0.2213%" height="15" fill="rgb(222,35,25)" fg:x="731890960" fg:w="2920326"/><text x="55.7077%" y="2591.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,920,326 samples, 0.22%)</title><rect x="55.4577%" y="2565" width="0.2213%" height="15" fill="rgb(207,92,16)" fg:x="731890960" fg:w="2920326"/><text x="55.7077%" y="2575.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (599,528,275 samples, 45.43%)</title><rect x="10.7618%" y="2805" width="45.4282%" height="15" fill="rgb(216,59,51)" fg:x="142026632" fg:w="599528275"/><text x="11.0118%" y="2815.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (6,743,621 samples, 0.51%)</title><rect x="55.6790%" y="2789" width="0.5110%" height="15" fill="rgb(213,80,28)" fg:x="734811286" fg:w="6743621"/><text x="55.9290%" y="2799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,743,621 samples, 0.51%)</title><rect x="55.6790%" y="2773" width="0.5110%" height="15" fill="rgb(220,93,7)" fg:x="734811286" fg:w="6743621"/><text x="55.9290%" y="2783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3,228,245 samples, 0.24%)</title><rect x="55.9454%" y="2757" width="0.2446%" height="15" fill="rgb(225,24,44)" fg:x="738326662" fg:w="3228245"/><text x="56.1954%" y="2767.50"></text></g><g><title>alloc::slice::hack::to_vec (3,228,245 samples, 0.24%)</title><rect x="55.9454%" y="2741" width="0.2446%" height="15" fill="rgb(243,74,40)" fg:x="738326662" fg:w="3228245"/><text x="56.1954%" y="2751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3,228,245 samples, 0.24%)</title><rect x="55.9454%" y="2725" width="0.2446%" height="15" fill="rgb(228,39,7)" fg:x="738326662" fg:w="3228245"/><text x="56.1954%" y="2735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,228,245 samples, 0.24%)</title><rect x="55.9454%" y="2709" width="0.2446%" height="15" fill="rgb(227,79,8)" fg:x="738326662" fg:w="3228245"/><text x="56.1954%" y="2719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,228,245 samples, 0.24%)</title><rect x="55.9454%" y="2693" width="0.2446%" height="15" fill="rgb(236,58,11)" fg:x="738326662" fg:w="3228245"/><text x="56.1954%" y="2703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,228,245 samples, 0.24%)</title><rect x="55.9454%" y="2677" width="0.2446%" height="15" fill="rgb(249,63,35)" fg:x="738326662" fg:w="3228245"/><text x="56.1954%" y="2687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,228,245 samples, 0.24%)</title><rect x="55.9454%" y="2661" width="0.2446%" height="15" fill="rgb(252,114,16)" fg:x="738326662" fg:w="3228245"/><text x="56.1954%" y="2671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,228,245 samples, 0.24%)</title><rect x="55.9454%" y="2645" width="0.2446%" height="15" fill="rgb(254,151,24)" fg:x="738326662" fg:w="3228245"/><text x="56.1954%" y="2655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,228,245 samples, 0.24%)</title><rect x="55.9454%" y="2629" width="0.2446%" height="15" fill="rgb(253,54,39)" fg:x="738326662" fg:w="3228245"/><text x="56.1954%" y="2639.50"></text></g><g><title>alloc::alloc::alloc (3,228,245 samples, 0.24%)</title><rect x="55.9454%" y="2613" width="0.2446%" height="15" fill="rgb(243,25,45)" fg:x="738326662" fg:w="3228245"/><text x="56.1954%" y="2623.50"></text></g><g><title>malloc (3,228,245 samples, 0.24%)</title><rect x="55.9454%" y="2597" width="0.2446%" height="15" fill="rgb(234,134,9)" fg:x="738326662" fg:w="3228245"/><text x="56.1954%" y="2607.50"></text></g><g><title>[libc.so.6] (3,228,245 samples, 0.24%)</title><rect x="55.9454%" y="2581" width="0.2446%" height="15" fill="rgb(227,166,31)" fg:x="738326662" fg:w="3228245"/><text x="56.1954%" y="2591.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (816,569,877 samples, 61.87%)</title><rect x="10.7618%" y="3125" width="61.8741%" height="15" fill="rgb(245,143,41)" fg:x="142026632" fg:w="816569877"/><text x="11.0118%" y="3135.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (816,569,877 samples, 61.87%)</title><rect x="10.7618%" y="3109" width="61.8741%" height="15" fill="rgb(238,181,32)" fg:x="142026632" fg:w="816569877"/><text x="11.0118%" y="3119.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (816,569,877 samples, 61.87%)</title><rect x="10.7618%" y="3093" width="61.8741%" height="15" fill="rgb(224,113,18)" fg:x="142026632" fg:w="816569877"/><text x="11.0118%" y="3103.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (816,569,877 samples, 61.87%)</title><rect x="10.7618%" y="3077" width="61.8741%" height="15" fill="rgb(240,229,28)" fg:x="142026632" fg:w="816569877"/><text x="11.0118%" y="3087.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (816,569,877 samples, 61.87%)</title><rect x="10.7618%" y="3061" width="61.8741%" height="15" fill="rgb(250,185,3)" fg:x="142026632" fg:w="816569877"/><text x="11.0118%" y="3071.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (816,569,877 samples, 61.87%)</title><rect x="10.7618%" y="3045" width="61.8741%" height="15" fill="rgb(212,59,25)" fg:x="142026632" fg:w="816569877"/><text x="11.0118%" y="3055.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (816,569,877 samples, 61.87%)</title><rect x="10.7618%" y="3029" width="61.8741%" height="15" fill="rgb(221,87,20)" fg:x="142026632" fg:w="816569877"/><text x="11.0118%" y="3039.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (816,569,877 samples, 61.87%)</title><rect x="10.7618%" y="3013" width="61.8741%" height="15" fill="rgb(213,74,28)" fg:x="142026632" fg:w="816569877"/><text x="11.0118%" y="3023.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (816,569,877 samples, 61.87%)</title><rect x="10.7618%" y="2997" width="61.8741%" height="15" fill="rgb(224,132,34)" fg:x="142026632" fg:w="816569877"/><text x="11.0118%" y="3007.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (816,569,877 samples, 61.87%)</title><rect x="10.7618%" y="2981" width="61.8741%" height="15" fill="rgb(222,101,24)" fg:x="142026632" fg:w="816569877"/><text x="11.0118%" y="2991.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (816,569,877 samples, 61.87%)</title><rect x="10.7618%" y="2965" width="61.8741%" height="15" fill="rgb(254,142,4)" fg:x="142026632" fg:w="816569877"/><text x="11.0118%" y="2975.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (816,569,877 samples, 61.87%)</title><rect x="10.7618%" y="2949" width="61.8741%" height="15" fill="rgb(230,229,49)" fg:x="142026632" fg:w="816569877"/><text x="11.0118%" y="2959.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (816,569,877 samples, 61.87%)</title><rect x="10.7618%" y="2933" width="61.8741%" height="15" fill="rgb(238,70,47)" fg:x="142026632" fg:w="816569877"/><text x="11.0118%" y="2943.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (816,569,877 samples, 61.87%)</title><rect x="10.7618%" y="2917" width="61.8741%" height="15" fill="rgb(231,160,17)" fg:x="142026632" fg:w="816569877"/><text x="11.0118%" y="2927.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (816,569,877 samples, 61.87%)</title><rect x="10.7618%" y="2901" width="61.8741%" height="15" fill="rgb(218,68,53)" fg:x="142026632" fg:w="816569877"/><text x="11.0118%" y="2911.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (816,569,877 samples, 61.87%)</title><rect x="10.7618%" y="2885" width="61.8741%" height="15" fill="rgb(236,111,10)" fg:x="142026632" fg:w="816569877"/><text x="11.0118%" y="2895.50">&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (816,569,877 samples, 61.87%)</title><rect x="10.7618%" y="2869" width="61.8741%" height="15" fill="rgb(224,34,41)" fg:x="142026632" fg:w="816569877"/><text x="11.0118%" y="2879.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (816,569,877 samples, 61.87%)</title><rect x="10.7618%" y="2853" width="61.8741%" height="15" fill="rgb(241,118,19)" fg:x="142026632" fg:w="816569877"/><text x="11.0118%" y="2863.50">alloc::slice::&lt;impl [T]&gt;::to_vec_in</text></g><g><title>alloc::slice::hack::to_vec (816,569,877 samples, 61.87%)</title><rect x="10.7618%" y="2837" width="61.8741%" height="15" fill="rgb(238,129,25)" fg:x="142026632" fg:w="816569877"/><text x="11.0118%" y="2847.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (816,569,877 samples, 61.87%)</title><rect x="10.7618%" y="2821" width="61.8741%" height="15" fill="rgb(238,22,31)" fg:x="142026632" fg:w="816569877"/><text x="11.0118%" y="2831.50">&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (217,041,602 samples, 16.45%)</title><rect x="56.1900%" y="2805" width="16.4459%" height="15" fill="rgb(222,174,48)" fg:x="741554907" fg:w="217041602"/><text x="56.4400%" y="2815.50">alloc::vec::Vec&lt;T,A&gt;::wit..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (217,041,602 samples, 16.45%)</title><rect x="56.1900%" y="2789" width="16.4459%" height="15" fill="rgb(206,152,40)" fg:x="741554907" fg:w="217041602"/><text x="56.4400%" y="2799.50">alloc::raw_vec::RawVec&lt;T,..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (217,041,602 samples, 16.45%)</title><rect x="56.1900%" y="2773" width="16.4459%" height="15" fill="rgb(218,99,54)" fg:x="741554907" fg:w="217041602"/><text x="56.4400%" y="2783.50">alloc::raw_vec::RawVecInn..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (217,041,602 samples, 16.45%)</title><rect x="56.1900%" y="2757" width="16.4459%" height="15" fill="rgb(220,174,26)" fg:x="741554907" fg:w="217041602"/><text x="56.4400%" y="2767.50">alloc::raw_vec::RawVecInn..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (217,041,602 samples, 16.45%)</title><rect x="56.1900%" y="2741" width="16.4459%" height="15" fill="rgb(245,116,9)" fg:x="741554907" fg:w="217041602"/><text x="56.4400%" y="2751.50">&lt;alloc::alloc::Global as ..</text></g><g><title>alloc::alloc::Global::alloc_impl (217,041,602 samples, 16.45%)</title><rect x="56.1900%" y="2725" width="16.4459%" height="15" fill="rgb(209,72,35)" fg:x="741554907" fg:w="217041602"/><text x="56.4400%" y="2735.50">alloc::alloc::Global::all..</text></g><g><title>alloc::alloc::alloc (217,041,602 samples, 16.45%)</title><rect x="56.1900%" y="2709" width="16.4459%" height="15" fill="rgb(226,126,21)" fg:x="741554907" fg:w="217041602"/><text x="56.4400%" y="2719.50">alloc::alloc::alloc</text></g><g><title>malloc (217,041,602 samples, 16.45%)</title><rect x="56.1900%" y="2693" width="16.4459%" height="15" fill="rgb(227,192,1)" fg:x="741554907" fg:w="217041602"/><text x="56.4400%" y="2703.50">malloc</text></g><g><title>[libc.so.6] (217,041,602 samples, 16.45%)</title><rect x="56.1900%" y="2677" width="16.4459%" height="15" fill="rgb(237,180,29)" fg:x="741554907" fg:w="217041602"/><text x="56.4400%" y="2687.50">[libc.so.6]</text></g><g><title>[libc.so.6] (194,319,305 samples, 14.72%)</title><rect x="57.9117%" y="2661" width="14.7242%" height="15" fill="rgb(230,197,35)" fg:x="764277204" fg:w="194319305"/><text x="58.1617%" y="2671.50">[libc.so.6]</text></g><g><title>[libc.so.6] (31,136,239 samples, 2.36%)</title><rect x="70.2767%" y="2645" width="2.3593%" height="15" fill="rgb(246,193,31)" fg:x="927460270" fg:w="31136239"/><text x="70.5267%" y="2655.50">[..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,422,818 samples, 0.26%)</title><rect x="72.6359%" y="3045" width="0.2594%" height="15" fill="rgb(241,36,4)" fg:x="958596509" fg:w="3422818"/><text x="72.8859%" y="3055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,422,818 samples, 0.26%)</title><rect x="72.6359%" y="3029" width="0.2594%" height="15" fill="rgb(241,130,17)" fg:x="958596509" fg:w="3422818"/><text x="72.8859%" y="3039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,422,818 samples, 0.26%)</title><rect x="72.6359%" y="3013" width="0.2594%" height="15" fill="rgb(206,137,32)" fg:x="958596509" fg:w="3422818"/><text x="72.8859%" y="3023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,422,818 samples, 0.26%)</title><rect x="72.6359%" y="2997" width="0.2594%" height="15" fill="rgb(237,228,51)" fg:x="958596509" fg:w="3422818"/><text x="72.8859%" y="3007.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,422,818 samples, 0.26%)</title><rect x="72.6359%" y="2981" width="0.2594%" height="15" fill="rgb(243,6,42)" fg:x="958596509" fg:w="3422818"/><text x="72.8859%" y="2991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,422,818 samples, 0.26%)</title><rect x="72.6359%" y="2965" width="0.2594%" height="15" fill="rgb(251,74,28)" fg:x="958596509" fg:w="3422818"/><text x="72.8859%" y="2975.50"></text></g><g><title>alloc::alloc::dealloc (3,422,818 samples, 0.26%)</title><rect x="72.6359%" y="2949" width="0.2594%" height="15" fill="rgb(218,20,49)" fg:x="958596509" fg:w="3422818"/><text x="72.8859%" y="2959.50"></text></g><g><title>cfree (3,422,818 samples, 0.26%)</title><rect x="72.6359%" y="2933" width="0.2594%" height="15" fill="rgb(238,28,14)" fg:x="958596509" fg:w="3422818"/><text x="72.8859%" y="2943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5,560,099 samples, 0.42%)</title><rect x="72.8953%" y="2661" width="0.4213%" height="15" fill="rgb(229,40,46)" fg:x="962019327" fg:w="5560099"/><text x="73.1453%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5,560,099 samples, 0.42%)</title><rect x="72.8953%" y="2645" width="0.4213%" height="15" fill="rgb(244,195,20)" fg:x="962019327" fg:w="5560099"/><text x="73.1453%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5,560,099 samples, 0.42%)</title><rect x="72.8953%" y="2629" width="0.4213%" height="15" fill="rgb(253,56,35)" fg:x="962019327" fg:w="5560099"/><text x="73.1453%" y="2639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,560,099 samples, 0.42%)</title><rect x="72.8953%" y="2613" width="0.4213%" height="15" fill="rgb(210,149,44)" fg:x="962019327" fg:w="5560099"/><text x="73.1453%" y="2623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,560,099 samples, 0.42%)</title><rect x="72.8953%" y="2597" width="0.4213%" height="15" fill="rgb(240,135,12)" fg:x="962019327" fg:w="5560099"/><text x="73.1453%" y="2607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,560,099 samples, 0.42%)</title><rect x="72.8953%" y="2581" width="0.4213%" height="15" fill="rgb(251,24,50)" fg:x="962019327" fg:w="5560099"/><text x="73.1453%" y="2591.50"></text></g><g><title>alloc::alloc::dealloc (5,560,099 samples, 0.42%)</title><rect x="72.8953%" y="2565" width="0.4213%" height="15" fill="rgb(243,200,47)" fg:x="962019327" fg:w="5560099"/><text x="73.1453%" y="2575.50"></text></g><g><title>cfree (5,560,099 samples, 0.42%)</title><rect x="72.8953%" y="2549" width="0.4213%" height="15" fill="rgb(224,166,26)" fg:x="962019327" fg:w="5560099"/><text x="73.1453%" y="2559.50"></text></g><g><title>[libc.so.6] (5,560,099 samples, 0.42%)</title><rect x="72.8953%" y="2533" width="0.4213%" height="15" fill="rgb(233,0,47)" fg:x="962019327" fg:w="5560099"/><text x="73.1453%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,538,019 samples, 0.27%)</title><rect x="73.3166%" y="2469" width="0.2681%" height="15" fill="rgb(253,80,5)" fg:x="967579426" fg:w="3538019"/><text x="73.5666%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,538,019 samples, 0.27%)</title><rect x="73.3166%" y="2453" width="0.2681%" height="15" fill="rgb(214,133,25)" fg:x="967579426" fg:w="3538019"/><text x="73.5666%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,538,019 samples, 0.27%)</title><rect x="73.3166%" y="2437" width="0.2681%" height="15" fill="rgb(209,27,14)" fg:x="967579426" fg:w="3538019"/><text x="73.5666%" y="2447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,538,019 samples, 0.27%)</title><rect x="73.3166%" y="2421" width="0.2681%" height="15" fill="rgb(219,102,51)" fg:x="967579426" fg:w="3538019"/><text x="73.5666%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6,045,193 samples, 0.46%)</title><rect x="73.5847%" y="2341" width="0.4581%" height="15" fill="rgb(237,18,16)" fg:x="971117445" fg:w="6045193"/><text x="73.8347%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6,045,193 samples, 0.46%)</title><rect x="73.5847%" y="2325" width="0.4581%" height="15" fill="rgb(241,85,17)" fg:x="971117445" fg:w="6045193"/><text x="73.8347%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6,045,193 samples, 0.46%)</title><rect x="73.5847%" y="2309" width="0.4581%" height="15" fill="rgb(236,90,42)" fg:x="971117445" fg:w="6045193"/><text x="73.8347%" y="2319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,045,193 samples, 0.46%)</title><rect x="73.5847%" y="2293" width="0.4581%" height="15" fill="rgb(249,57,21)" fg:x="971117445" fg:w="6045193"/><text x="73.8347%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,045,193 samples, 0.46%)</title><rect x="73.5847%" y="2277" width="0.4581%" height="15" fill="rgb(243,12,36)" fg:x="971117445" fg:w="6045193"/><text x="73.8347%" y="2287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,045,193 samples, 0.46%)</title><rect x="73.5847%" y="2261" width="0.4581%" height="15" fill="rgb(253,128,47)" fg:x="971117445" fg:w="6045193"/><text x="73.8347%" y="2271.50"></text></g><g><title>alloc::alloc::dealloc (6,045,193 samples, 0.46%)</title><rect x="73.5847%" y="2245" width="0.4581%" height="15" fill="rgb(207,33,20)" fg:x="971117445" fg:w="6045193"/><text x="73.8347%" y="2255.50"></text></g><g><title>cfree (6,045,193 samples, 0.46%)</title><rect x="73.5847%" y="2229" width="0.4581%" height="15" fill="rgb(233,215,35)" fg:x="971117445" fg:w="6045193"/><text x="73.8347%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,418,396 samples, 0.26%)</title><rect x="74.0428%" y="2213" width="0.2590%" height="15" fill="rgb(249,188,52)" fg:x="977162638" fg:w="3418396"/><text x="74.2928%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,418,396 samples, 0.26%)</title><rect x="74.0428%" y="2197" width="0.2590%" height="15" fill="rgb(225,12,32)" fg:x="977162638" fg:w="3418396"/><text x="74.2928%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,418,396 samples, 0.26%)</title><rect x="74.0428%" y="2181" width="0.2590%" height="15" fill="rgb(247,98,14)" fg:x="977162638" fg:w="3418396"/><text x="74.2928%" y="2191.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,418,396 samples, 0.26%)</title><rect x="74.0428%" y="2165" width="0.2590%" height="15" fill="rgb(247,219,48)" fg:x="977162638" fg:w="3418396"/><text x="74.2928%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,418,396 samples, 0.26%)</title><rect x="74.0428%" y="2149" width="0.2590%" height="15" fill="rgb(253,60,48)" fg:x="977162638" fg:w="3418396"/><text x="74.2928%" y="2159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,418,396 samples, 0.26%)</title><rect x="74.0428%" y="2133" width="0.2590%" height="15" fill="rgb(245,15,52)" fg:x="977162638" fg:w="3418396"/><text x="74.2928%" y="2143.50"></text></g><g><title>alloc::alloc::dealloc (3,418,396 samples, 0.26%)</title><rect x="74.0428%" y="2117" width="0.2590%" height="15" fill="rgb(220,133,28)" fg:x="977162638" fg:w="3418396"/><text x="74.2928%" y="2127.50"></text></g><g><title>cfree (3,418,396 samples, 0.26%)</title><rect x="74.0428%" y="2101" width="0.2590%" height="15" fill="rgb(217,180,4)" fg:x="977162638" fg:w="3418396"/><text x="74.2928%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,199,770 samples, 0.24%)</title><rect x="74.3018%" y="2085" width="0.2425%" height="15" fill="rgb(251,24,1)" fg:x="980581034" fg:w="3199770"/><text x="74.5518%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,199,770 samples, 0.24%)</title><rect x="74.3018%" y="2069" width="0.2425%" height="15" fill="rgb(212,185,49)" fg:x="980581034" fg:w="3199770"/><text x="74.5518%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,199,770 samples, 0.24%)</title><rect x="74.3018%" y="2053" width="0.2425%" height="15" fill="rgb(215,175,22)" fg:x="980581034" fg:w="3199770"/><text x="74.5518%" y="2063.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,199,770 samples, 0.24%)</title><rect x="74.3018%" y="2037" width="0.2425%" height="15" fill="rgb(250,205,14)" fg:x="980581034" fg:w="3199770"/><text x="74.5518%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,199,770 samples, 0.24%)</title><rect x="74.3018%" y="2021" width="0.2425%" height="15" fill="rgb(225,211,22)" fg:x="980581034" fg:w="3199770"/><text x="74.5518%" y="2031.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,199,770 samples, 0.24%)</title><rect x="74.3018%" y="2005" width="0.2425%" height="15" fill="rgb(251,179,42)" fg:x="980581034" fg:w="3199770"/><text x="74.5518%" y="2015.50"></text></g><g><title>alloc::alloc::dealloc (3,199,770 samples, 0.24%)</title><rect x="74.3018%" y="1989" width="0.2425%" height="15" fill="rgb(208,216,51)" fg:x="980581034" fg:w="3199770"/><text x="74.5518%" y="1999.50"></text></g><g><title>cfree (3,199,770 samples, 0.24%)</title><rect x="74.3018%" y="1973" width="0.2425%" height="15" fill="rgb(235,36,11)" fg:x="980581034" fg:w="3199770"/><text x="74.5518%" y="1983.50"></text></g><g><title>[libc.so.6] (3,199,770 samples, 0.24%)</title><rect x="74.3018%" y="1957" width="0.2425%" height="15" fill="rgb(213,189,28)" fg:x="980581034" fg:w="3199770"/><text x="74.5518%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,473,461 samples, 0.26%)</title><rect x="74.5442%" y="2085" width="0.2632%" height="15" fill="rgb(227,203,42)" fg:x="983780804" fg:w="3473461"/><text x="74.7942%" y="2095.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,473,461 samples, 0.26%)</title><rect x="74.5442%" y="2069" width="0.2632%" height="15" fill="rgb(244,72,36)" fg:x="983780804" fg:w="3473461"/><text x="74.7942%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,473,461 samples, 0.26%)</title><rect x="74.5442%" y="2053" width="0.2632%" height="15" fill="rgb(213,53,17)" fg:x="983780804" fg:w="3473461"/><text x="74.7942%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (3,473,461 samples, 0.26%)</title><rect x="74.5442%" y="2037" width="0.2632%" height="15" fill="rgb(207,167,3)" fg:x="983780804" fg:w="3473461"/><text x="74.7942%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (3,473,461 samples, 0.26%)</title><rect x="74.5442%" y="2021" width="0.2632%" height="15" fill="rgb(216,98,30)" fg:x="983780804" fg:w="3473461"/><text x="74.7942%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,473,461 samples, 0.26%)</title><rect x="74.5442%" y="2005" width="0.2632%" height="15" fill="rgb(236,123,15)" fg:x="983780804" fg:w="3473461"/><text x="74.7942%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,473,461 samples, 0.26%)</title><rect x="74.5442%" y="1989" width="0.2632%" height="15" fill="rgb(248,81,50)" fg:x="983780804" fg:w="3473461"/><text x="74.7942%" y="1999.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,473,461 samples, 0.26%)</title><rect x="74.5442%" y="1973" width="0.2632%" height="15" fill="rgb(214,120,4)" fg:x="983780804" fg:w="3473461"/><text x="74.7942%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,473,461 samples, 0.26%)</title><rect x="74.5442%" y="1957" width="0.2632%" height="15" fill="rgb(208,179,34)" fg:x="983780804" fg:w="3473461"/><text x="74.7942%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,473,461 samples, 0.26%)</title><rect x="74.5442%" y="1941" width="0.2632%" height="15" fill="rgb(227,140,7)" fg:x="983780804" fg:w="3473461"/><text x="74.7942%" y="1951.50"></text></g><g><title>alloc::alloc::dealloc (3,473,461 samples, 0.26%)</title><rect x="74.5442%" y="1925" width="0.2632%" height="15" fill="rgb(214,22,6)" fg:x="983780804" fg:w="3473461"/><text x="74.7942%" y="1935.50"></text></g><g><title>cfree (3,473,461 samples, 0.26%)</title><rect x="74.5442%" y="1909" width="0.2632%" height="15" fill="rgb(207,137,27)" fg:x="983780804" fg:w="3473461"/><text x="74.7942%" y="1919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,910,472 samples, 0.75%)</title><rect x="74.3018%" y="2133" width="0.7509%" height="15" fill="rgb(210,8,46)" fg:x="980581034" fg:w="9910472"/><text x="74.5518%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (9,910,472 samples, 0.75%)</title><rect x="74.3018%" y="2117" width="0.7509%" height="15" fill="rgb(240,16,54)" fg:x="980581034" fg:w="9910472"/><text x="74.5518%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,910,472 samples, 0.75%)</title><rect x="74.3018%" y="2101" width="0.7509%" height="15" fill="rgb(211,209,29)" fg:x="980581034" fg:w="9910472"/><text x="74.5518%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (3,237,241 samples, 0.25%)</title><rect x="74.8074%" y="2085" width="0.2453%" height="15" fill="rgb(226,228,24)" fg:x="987254265" fg:w="3237241"/><text x="75.0574%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (3,237,241 samples, 0.25%)</title><rect x="74.8074%" y="2069" width="0.2453%" height="15" fill="rgb(222,84,9)" fg:x="987254265" fg:w="3237241"/><text x="75.0574%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (3,237,241 samples, 0.25%)</title><rect x="74.8074%" y="2053" width="0.2453%" height="15" fill="rgb(234,203,30)" fg:x="987254265" fg:w="3237241"/><text x="75.0574%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (3,237,241 samples, 0.25%)</title><rect x="74.8074%" y="2037" width="0.2453%" height="15" fill="rgb(238,109,14)" fg:x="987254265" fg:w="3237241"/><text x="75.0574%" y="2047.50"></text></g><g><title>__rust_dealloc (3,237,241 samples, 0.25%)</title><rect x="74.8074%" y="2021" width="0.2453%" height="15" fill="rgb(233,206,34)" fg:x="987254265" fg:w="3237241"/><text x="75.0574%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (13,406,693 samples, 1.02%)</title><rect x="74.3018%" y="2149" width="1.0159%" height="15" fill="rgb(220,167,47)" fg:x="980581034" fg:w="13406693"/><text x="74.5518%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,496,221 samples, 0.26%)</title><rect x="75.0527%" y="2133" width="0.2649%" height="15" fill="rgb(238,105,10)" fg:x="990491506" fg:w="3496221"/><text x="75.3027%" y="2143.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,496,221 samples, 0.26%)</title><rect x="75.0527%" y="2117" width="0.2649%" height="15" fill="rgb(213,227,17)" fg:x="990491506" fg:w="3496221"/><text x="75.3027%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,496,221 samples, 0.26%)</title><rect x="75.0527%" y="2101" width="0.2649%" height="15" fill="rgb(217,132,38)" fg:x="990491506" fg:w="3496221"/><text x="75.3027%" y="2111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,496,221 samples, 0.26%)</title><rect x="75.0527%" y="2085" width="0.2649%" height="15" fill="rgb(242,146,4)" fg:x="990491506" fg:w="3496221"/><text x="75.3027%" y="2095.50"></text></g><g><title>alloc::alloc::dealloc (3,496,221 samples, 0.26%)</title><rect x="75.0527%" y="2069" width="0.2649%" height="15" fill="rgb(212,61,9)" fg:x="990491506" fg:w="3496221"/><text x="75.3027%" y="2079.50"></text></g><g><title>cfree (3,496,221 samples, 0.26%)</title><rect x="75.0527%" y="2053" width="0.2649%" height="15" fill="rgb(247,126,22)" fg:x="990491506" fg:w="3496221"/><text x="75.3027%" y="2063.50"></text></g><g><title>[libc.so.6] (3,496,221 samples, 0.26%)</title><rect x="75.0527%" y="2037" width="0.2649%" height="15" fill="rgb(220,196,2)" fg:x="990491506" fg:w="3496221"/><text x="75.3027%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (16,806,156 samples, 1.27%)</title><rect x="74.3018%" y="2213" width="1.2735%" height="15" fill="rgb(208,46,4)" fg:x="980581034" fg:w="16806156"/><text x="74.5518%" y="2223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,806,156 samples, 1.27%)</title><rect x="74.3018%" y="2197" width="1.2735%" height="15" fill="rgb(252,104,46)" fg:x="980581034" fg:w="16806156"/><text x="74.5518%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (16,806,156 samples, 1.27%)</title><rect x="74.3018%" y="2181" width="1.2735%" height="15" fill="rgb(237,152,48)" fg:x="980581034" fg:w="16806156"/><text x="74.5518%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (16,806,156 samples, 1.27%)</title><rect x="74.3018%" y="2165" width="1.2735%" height="15" fill="rgb(221,59,37)" fg:x="980581034" fg:w="16806156"/><text x="74.5518%" y="2175.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (3,399,463 samples, 0.26%)</title><rect x="75.3177%" y="2149" width="0.2576%" height="15" fill="rgb(209,202,51)" fg:x="993987727" fg:w="3399463"/><text x="75.5677%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,399,463 samples, 0.26%)</title><rect x="75.3177%" y="2133" width="0.2576%" height="15" fill="rgb(228,81,30)" fg:x="993987727" fg:w="3399463"/><text x="75.5677%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,399,463 samples, 0.26%)</title><rect x="75.3177%" y="2117" width="0.2576%" height="15" fill="rgb(227,42,39)" fg:x="993987727" fg:w="3399463"/><text x="75.5677%" y="2127.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,399,463 samples, 0.26%)</title><rect x="75.3177%" y="2101" width="0.2576%" height="15" fill="rgb(221,26,2)" fg:x="993987727" fg:w="3399463"/><text x="75.5677%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,399,463 samples, 0.26%)</title><rect x="75.3177%" y="2085" width="0.2576%" height="15" fill="rgb(254,61,31)" fg:x="993987727" fg:w="3399463"/><text x="75.5677%" y="2095.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,399,463 samples, 0.26%)</title><rect x="75.3177%" y="2069" width="0.2576%" height="15" fill="rgb(222,173,38)" fg:x="993987727" fg:w="3399463"/><text x="75.5677%" y="2079.50"></text></g><g><title>alloc::alloc::dealloc (3,399,463 samples, 0.26%)</title><rect x="75.3177%" y="2053" width="0.2576%" height="15" fill="rgb(218,50,12)" fg:x="993987727" fg:w="3399463"/><text x="75.5677%" y="2063.50"></text></g><g><title>cfree (3,399,463 samples, 0.26%)</title><rect x="75.3177%" y="2037" width="0.2576%" height="15" fill="rgb(223,88,40)" fg:x="993987727" fg:w="3399463"/><text x="75.5677%" y="2047.50"></text></g><g><title>__rdl_dealloc (3,380,582 samples, 0.26%)</title><rect x="76.0449%" y="1941" width="0.2562%" height="15" fill="rgb(237,54,19)" fg:x="1003585758" fg:w="3380582"/><text x="76.2949%" y="1951.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3,380,582 samples, 0.26%)</title><rect x="76.0449%" y="1925" width="0.2562%" height="15" fill="rgb(251,129,25)" fg:x="1003585758" fg:w="3380582"/><text x="76.2949%" y="1935.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,990,016 samples, 0.98%)</title><rect x="75.5752%" y="2149" width="0.9843%" height="15" fill="rgb(238,97,19)" fg:x="997387190" fg:w="12990016"/><text x="75.8252%" y="2159.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (12,990,016 samples, 0.98%)</title><rect x="75.5752%" y="2133" width="0.9843%" height="15" fill="rgb(240,169,18)" fg:x="997387190" fg:w="12990016"/><text x="75.8252%" y="2143.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (12,990,016 samples, 0.98%)</title><rect x="75.5752%" y="2117" width="0.9843%" height="15" fill="rgb(230,187,49)" fg:x="997387190" fg:w="12990016"/><text x="75.8252%" y="2127.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (12,990,016 samples, 0.98%)</title><rect x="75.5752%" y="2101" width="0.9843%" height="15" fill="rgb(209,44,26)" fg:x="997387190" fg:w="12990016"/><text x="75.8252%" y="2111.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (12,990,016 samples, 0.98%)</title><rect x="75.5752%" y="2085" width="0.9843%" height="15" fill="rgb(244,0,6)" fg:x="997387190" fg:w="12990016"/><text x="75.8252%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (12,990,016 samples, 0.98%)</title><rect x="75.5752%" y="2069" width="0.9843%" height="15" fill="rgb(248,18,21)" fg:x="997387190" fg:w="12990016"/><text x="75.8252%" y="2079.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (12,990,016 samples, 0.98%)</title><rect x="75.5752%" y="2053" width="0.9843%" height="15" fill="rgb(245,180,19)" fg:x="997387190" fg:w="12990016"/><text x="75.8252%" y="2063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12,990,016 samples, 0.98%)</title><rect x="75.5752%" y="2037" width="0.9843%" height="15" fill="rgb(252,118,36)" fg:x="997387190" fg:w="12990016"/><text x="75.8252%" y="2047.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12,990,016 samples, 0.98%)</title><rect x="75.5752%" y="2021" width="0.9843%" height="15" fill="rgb(210,224,19)" fg:x="997387190" fg:w="12990016"/><text x="75.8252%" y="2031.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,990,016 samples, 0.98%)</title><rect x="75.5752%" y="2005" width="0.9843%" height="15" fill="rgb(218,30,24)" fg:x="997387190" fg:w="12990016"/><text x="75.8252%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (9,498,750 samples, 0.72%)</title><rect x="75.8398%" y="1989" width="0.7198%" height="15" fill="rgb(219,75,50)" fg:x="1000878456" fg:w="9498750"/><text x="76.0898%" y="1999.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9,498,750 samples, 0.72%)</title><rect x="75.8398%" y="1973" width="0.7198%" height="15" fill="rgb(234,72,50)" fg:x="1000878456" fg:w="9498750"/><text x="76.0898%" y="1983.50"></text></g><g><title>alloc::alloc::dealloc (9,498,750 samples, 0.72%)</title><rect x="75.8398%" y="1957" width="0.7198%" height="15" fill="rgb(219,100,48)" fg:x="1000878456" fg:w="9498750"/><text x="76.0898%" y="1967.50"></text></g><g><title>cfree (3,410,866 samples, 0.26%)</title><rect x="76.3011%" y="1941" width="0.2585%" height="15" fill="rgb(253,5,41)" fg:x="1006966340" fg:w="3410866"/><text x="76.5511%" y="1951.50"></text></g><g><title>[libc.so.6] (3,410,866 samples, 0.26%)</title><rect x="76.3011%" y="1925" width="0.2585%" height="15" fill="rgb(247,181,11)" fg:x="1006966340" fg:w="3410866"/><text x="76.5511%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (39,164,297 samples, 2.97%)</title><rect x="74.0428%" y="2277" width="2.9676%" height="15" fill="rgb(222,223,25)" fg:x="977162638" fg:w="39164297"/><text x="74.2928%" y="2287.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39,164,297 samples, 2.97%)</title><rect x="74.0428%" y="2261" width="2.9676%" height="15" fill="rgb(214,198,28)" fg:x="977162638" fg:w="39164297"/><text x="74.2928%" y="2271.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (39,164,297 samples, 2.97%)</title><rect x="74.0428%" y="2245" width="2.9676%" height="15" fill="rgb(230,46,43)" fg:x="977162638" fg:w="39164297"/><text x="74.2928%" y="2255.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (39,164,297 samples, 2.97%)</title><rect x="74.0428%" y="2229" width="2.9676%" height="15" fill="rgb(233,65,53)" fg:x="977162638" fg:w="39164297"/><text x="74.2928%" y="2239.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (18,939,745 samples, 1.44%)</title><rect x="75.5752%" y="2213" width="1.4351%" height="15" fill="rgb(221,121,27)" fg:x="997387190" fg:w="18939745"/><text x="75.8252%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (18,939,745 samples, 1.44%)</title><rect x="75.5752%" y="2197" width="1.4351%" height="15" fill="rgb(247,70,47)" fg:x="997387190" fg:w="18939745"/><text x="75.8252%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (18,939,745 samples, 1.44%)</title><rect x="75.5752%" y="2181" width="1.4351%" height="15" fill="rgb(228,85,35)" fg:x="997387190" fg:w="18939745"/><text x="75.8252%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (18,939,745 samples, 1.44%)</title><rect x="75.5752%" y="2165" width="1.4351%" height="15" fill="rgb(209,50,18)" fg:x="997387190" fg:w="18939745"/><text x="75.8252%" y="2175.50"></text></g><g><title>cfree (5,949,729 samples, 0.45%)</title><rect x="76.5595%" y="2149" width="0.4508%" height="15" fill="rgb(250,19,35)" fg:x="1010377206" fg:w="5949729"/><text x="76.8095%" y="2159.50"></text></g><g><title>[libc.so.6] (2,706,996 samples, 0.21%)</title><rect x="76.8052%" y="2133" width="0.2051%" height="15" fill="rgb(253,107,29)" fg:x="1013619939" fg:w="2706996"/><text x="77.0552%" y="2143.50"></text></g><g><title>[libc.so.6] (2,706,996 samples, 0.21%)</title><rect x="76.8052%" y="2117" width="0.2051%" height="15" fill="rgb(252,179,29)" fg:x="1013619939" fg:w="2706996"/><text x="77.0552%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (3,454,365 samples, 0.26%)</title><rect x="77.0104%" y="2277" width="0.2617%" height="15" fill="rgb(238,194,6)" fg:x="1016326935" fg:w="3454365"/><text x="77.2604%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,454,365 samples, 0.26%)</title><rect x="77.0104%" y="2261" width="0.2617%" height="15" fill="rgb(238,164,29)" fg:x="1016326935" fg:w="3454365"/><text x="77.2604%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,454,365 samples, 0.26%)</title><rect x="77.0104%" y="2245" width="0.2617%" height="15" fill="rgb(224,25,9)" fg:x="1016326935" fg:w="3454365"/><text x="77.2604%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,454,365 samples, 0.26%)</title><rect x="77.0104%" y="2229" width="0.2617%" height="15" fill="rgb(244,153,23)" fg:x="1016326935" fg:w="3454365"/><text x="77.2604%" y="2239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,454,365 samples, 0.26%)</title><rect x="77.0104%" y="2213" width="0.2617%" height="15" fill="rgb(212,203,14)" fg:x="1016326935" fg:w="3454365"/><text x="77.2604%" y="2223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,454,365 samples, 0.26%)</title><rect x="77.0104%" y="2197" width="0.2617%" height="15" fill="rgb(220,164,20)" fg:x="1016326935" fg:w="3454365"/><text x="77.2604%" y="2207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,454,365 samples, 0.26%)</title><rect x="77.0104%" y="2181" width="0.2617%" height="15" fill="rgb(222,203,48)" fg:x="1016326935" fg:w="3454365"/><text x="77.2604%" y="2191.50"></text></g><g><title>alloc::alloc::dealloc (3,454,365 samples, 0.26%)</title><rect x="77.0104%" y="2165" width="0.2617%" height="15" fill="rgb(215,159,22)" fg:x="1016326935" fg:w="3454365"/><text x="77.2604%" y="2175.50"></text></g><g><title>cfree (3,454,365 samples, 0.26%)</title><rect x="77.0104%" y="2149" width="0.2617%" height="15" fill="rgb(216,183,47)" fg:x="1016326935" fg:w="3454365"/><text x="77.2604%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (7,192,013 samples, 0.54%)</title><rect x="77.2721%" y="2277" width="0.5450%" height="15" fill="rgb(229,195,25)" fg:x="1019781300" fg:w="7192013"/><text x="77.5221%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7,192,013 samples, 0.54%)</title><rect x="77.2721%" y="2261" width="0.5450%" height="15" fill="rgb(224,132,51)" fg:x="1019781300" fg:w="7192013"/><text x="77.5221%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7,192,013 samples, 0.54%)</title><rect x="77.2721%" y="2245" width="0.5450%" height="15" fill="rgb(240,63,7)" fg:x="1019781300" fg:w="7192013"/><text x="77.5221%" y="2255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,192,013 samples, 0.54%)</title><rect x="77.2721%" y="2229" width="0.5450%" height="15" fill="rgb(249,182,41)" fg:x="1019781300" fg:w="7192013"/><text x="77.5221%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (7,192,013 samples, 0.54%)</title><rect x="77.2721%" y="2213" width="0.5450%" height="15" fill="rgb(243,47,26)" fg:x="1019781300" fg:w="7192013"/><text x="77.5221%" y="2223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7,192,013 samples, 0.54%)</title><rect x="77.2721%" y="2197" width="0.5450%" height="15" fill="rgb(233,48,2)" fg:x="1019781300" fg:w="7192013"/><text x="77.5221%" y="2207.50"></text></g><g><title>alloc::alloc::dealloc (7,192,013 samples, 0.54%)</title><rect x="77.2721%" y="2181" width="0.5450%" height="15" fill="rgb(244,165,34)" fg:x="1019781300" fg:w="7192013"/><text x="77.5221%" y="2191.50"></text></g><g><title>cfree (7,192,013 samples, 0.54%)</title><rect x="77.2721%" y="2165" width="0.5450%" height="15" fill="rgb(207,89,7)" fg:x="1019781300" fg:w="7192013"/><text x="77.5221%" y="2175.50"></text></g><g><title>[libc.so.6] (7,192,013 samples, 0.54%)</title><rect x="77.2721%" y="2149" width="0.5450%" height="15" fill="rgb(244,117,36)" fg:x="1019781300" fg:w="7192013"/><text x="77.5221%" y="2159.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (2,005,198 samples, 0.15%)</title><rect x="77.8171%" y="2181" width="0.1519%" height="15" fill="rgb(226,144,34)" fg:x="1026973313" fg:w="2005198"/><text x="78.0671%" y="2191.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2,005,198 samples, 0.15%)</title><rect x="77.8171%" y="2165" width="0.1519%" height="15" fill="rgb(213,23,19)" fg:x="1026973313" fg:w="2005198"/><text x="78.0671%" y="2175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2,005,198 samples, 0.15%)</title><rect x="77.8171%" y="2149" width="0.1519%" height="15" fill="rgb(217,75,12)" fg:x="1026973313" fg:w="2005198"/><text x="78.0671%" y="2159.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (2,005,198 samples, 0.15%)</title><rect x="77.8171%" y="2133" width="0.1519%" height="15" fill="rgb(224,159,17)" fg:x="1026973313" fg:w="2005198"/><text x="78.0671%" y="2143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,005,198 samples, 0.15%)</title><rect x="77.8171%" y="2117" width="0.1519%" height="15" fill="rgb(217,118,1)" fg:x="1026973313" fg:w="2005198"/><text x="78.0671%" y="2127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,005,198 samples, 0.15%)</title><rect x="77.8171%" y="2101" width="0.1519%" height="15" fill="rgb(232,180,48)" fg:x="1026973313" fg:w="2005198"/><text x="78.0671%" y="2111.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,005,198 samples, 0.15%)</title><rect x="77.8171%" y="2085" width="0.1519%" height="15" fill="rgb(230,27,33)" fg:x="1026973313" fg:w="2005198"/><text x="78.0671%" y="2095.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,005,198 samples, 0.15%)</title><rect x="77.8171%" y="2069" width="0.1519%" height="15" fill="rgb(205,31,21)" fg:x="1026973313" fg:w="2005198"/><text x="78.0671%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,005,198 samples, 0.15%)</title><rect x="77.8171%" y="2053" width="0.1519%" height="15" fill="rgb(253,59,4)" fg:x="1026973313" fg:w="2005198"/><text x="78.0671%" y="2063.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,005,198 samples, 0.15%)</title><rect x="77.8171%" y="2037" width="0.1519%" height="15" fill="rgb(224,201,9)" fg:x="1026973313" fg:w="2005198"/><text x="78.0671%" y="2047.50"></text></g><g><title>alloc::alloc::dealloc (2,005,198 samples, 0.15%)</title><rect x="77.8171%" y="2021" width="0.1519%" height="15" fill="rgb(229,206,30)" fg:x="1026973313" fg:w="2005198"/><text x="78.0671%" y="2031.50"></text></g><g><title>cfree (2,005,198 samples, 0.15%)</title><rect x="77.8171%" y="2005" width="0.1519%" height="15" fill="rgb(212,67,47)" fg:x="1026973313" fg:w="2005198"/><text x="78.0671%" y="2015.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54,808,743 samples, 4.15%)</title><rect x="74.0428%" y="2325" width="4.1530%" height="15" fill="rgb(211,96,50)" fg:x="977162638" fg:w="54808743"/><text x="74.2928%" y="2335.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (54,808,743 samples, 4.15%)</title><rect x="74.0428%" y="2309" width="4.1530%" height="15" fill="rgb(252,114,18)" fg:x="977162638" fg:w="54808743"/><text x="74.2928%" y="2319.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (54,808,743 samples, 4.15%)</title><rect x="74.0428%" y="2293" width="4.1530%" height="15" fill="rgb(223,58,37)" fg:x="977162638" fg:w="54808743"/><text x="74.2928%" y="2303.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (4,998,068 samples, 0.38%)</title><rect x="77.8171%" y="2277" width="0.3787%" height="15" fill="rgb(237,70,4)" fg:x="1026973313" fg:w="4998068"/><text x="78.0671%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (4,998,068 samples, 0.38%)</title><rect x="77.8171%" y="2261" width="0.3787%" height="15" fill="rgb(244,85,46)" fg:x="1026973313" fg:w="4998068"/><text x="78.0671%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (4,998,068 samples, 0.38%)</title><rect x="77.8171%" y="2245" width="0.3787%" height="15" fill="rgb(223,39,52)" fg:x="1026973313" fg:w="4998068"/><text x="78.0671%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (4,998,068 samples, 0.38%)</title><rect x="77.8171%" y="2229" width="0.3787%" height="15" fill="rgb(218,200,14)" fg:x="1026973313" fg:w="4998068"/><text x="78.0671%" y="2239.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,998,068 samples, 0.38%)</title><rect x="77.8171%" y="2213" width="0.3787%" height="15" fill="rgb(208,171,16)" fg:x="1026973313" fg:w="4998068"/><text x="78.0671%" y="2223.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (4,998,068 samples, 0.38%)</title><rect x="77.8171%" y="2197" width="0.3787%" height="15" fill="rgb(234,200,18)" fg:x="1026973313" fg:w="4998068"/><text x="78.0671%" y="2207.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (2,992,870 samples, 0.23%)</title><rect x="77.9690%" y="2181" width="0.2268%" height="15" fill="rgb(228,45,11)" fg:x="1028978511" fg:w="2992870"/><text x="78.2190%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (57,739,728 samples, 4.38%)</title><rect x="74.0428%" y="2341" width="4.3751%" height="15" fill="rgb(237,182,11)" fg:x="977162638" fg:w="57739728"/><text x="74.2928%" y="2351.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,930,985 samples, 0.22%)</title><rect x="78.1958%" y="2325" width="0.2221%" height="15" fill="rgb(241,175,49)" fg:x="1031971381" fg:w="2930985"/><text x="78.4458%" y="2335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,930,985 samples, 0.22%)</title><rect x="78.1958%" y="2309" width="0.2221%" height="15" fill="rgb(247,38,35)" fg:x="1031971381" fg:w="2930985"/><text x="78.4458%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,930,985 samples, 0.22%)</title><rect x="78.1958%" y="2293" width="0.2221%" height="15" fill="rgb(228,39,49)" fg:x="1031971381" fg:w="2930985"/><text x="78.4458%" y="2303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,930,985 samples, 0.22%)</title><rect x="78.1958%" y="2277" width="0.2221%" height="15" fill="rgb(226,101,26)" fg:x="1031971381" fg:w="2930985"/><text x="78.4458%" y="2287.50"></text></g><g><title>alloc::alloc::dealloc (2,930,985 samples, 0.22%)</title><rect x="78.1958%" y="2261" width="0.2221%" height="15" fill="rgb(206,141,19)" fg:x="1031971381" fg:w="2930985"/><text x="78.4458%" y="2271.50"></text></g><g><title>__rust_dealloc (2,930,985 samples, 0.22%)</title><rect x="78.1958%" y="2245" width="0.2221%" height="15" fill="rgb(211,200,13)" fg:x="1031971381" fg:w="2930985"/><text x="78.4458%" y="2255.50"></text></g><g><title>__rust_dealloc (3,080,820 samples, 0.23%)</title><rect x="78.4179%" y="2229" width="0.2334%" height="15" fill="rgb(241,121,6)" fg:x="1034902366" fg:w="3080820"/><text x="78.6679%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (6,018,324 samples, 0.46%)</title><rect x="78.4179%" y="2341" width="0.4560%" height="15" fill="rgb(234,221,29)" fg:x="1034902366" fg:w="6018324"/><text x="78.6679%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6,018,324 samples, 0.46%)</title><rect x="78.4179%" y="2325" width="0.4560%" height="15" fill="rgb(229,136,5)" fg:x="1034902366" fg:w="6018324"/><text x="78.6679%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6,018,324 samples, 0.46%)</title><rect x="78.4179%" y="2309" width="0.4560%" height="15" fill="rgb(238,36,11)" fg:x="1034902366" fg:w="6018324"/><text x="78.6679%" y="2319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,018,324 samples, 0.46%)</title><rect x="78.4179%" y="2293" width="0.4560%" height="15" fill="rgb(251,55,41)" fg:x="1034902366" fg:w="6018324"/><text x="78.6679%" y="2303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,018,324 samples, 0.46%)</title><rect x="78.4179%" y="2277" width="0.4560%" height="15" fill="rgb(242,34,40)" fg:x="1034902366" fg:w="6018324"/><text x="78.6679%" y="2287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,018,324 samples, 0.46%)</title><rect x="78.4179%" y="2261" width="0.4560%" height="15" fill="rgb(215,42,17)" fg:x="1034902366" fg:w="6018324"/><text x="78.6679%" y="2271.50"></text></g><g><title>alloc::alloc::dealloc (6,018,324 samples, 0.46%)</title><rect x="78.4179%" y="2245" width="0.4560%" height="15" fill="rgb(207,44,46)" fg:x="1034902366" fg:w="6018324"/><text x="78.6679%" y="2255.50"></text></g><g><title>cfree (2,937,504 samples, 0.22%)</title><rect x="78.6513%" y="2229" width="0.2226%" height="15" fill="rgb(211,206,28)" fg:x="1037983186" fg:w="2937504"/><text x="78.9013%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (72,541,048 samples, 5.50%)</title><rect x="73.5847%" y="2405" width="5.4967%" height="15" fill="rgb(237,167,16)" fg:x="971117445" fg:w="72541048"/><text x="73.8347%" y="2415.50">core::p..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (72,541,048 samples, 5.50%)</title><rect x="73.5847%" y="2389" width="5.4967%" height="15" fill="rgb(233,66,6)" fg:x="971117445" fg:w="72541048"/><text x="73.8347%" y="2399.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (72,541,048 samples, 5.50%)</title><rect x="73.5847%" y="2373" width="5.4967%" height="15" fill="rgb(246,123,29)" fg:x="971117445" fg:w="72541048"/><text x="73.8347%" y="2383.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (72,541,048 samples, 5.50%)</title><rect x="73.5847%" y="2357" width="5.4967%" height="15" fill="rgb(209,62,40)" fg:x="971117445" fg:w="72541048"/><text x="73.8347%" y="2367.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (2,737,803 samples, 0.21%)</title><rect x="78.8739%" y="2341" width="0.2075%" height="15" fill="rgb(218,4,25)" fg:x="1040920690" fg:w="2737803"/><text x="79.1239%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (2,737,803 samples, 0.21%)</title><rect x="78.8739%" y="2325" width="0.2075%" height="15" fill="rgb(253,91,49)" fg:x="1040920690" fg:w="2737803"/><text x="79.1239%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (2,737,803 samples, 0.21%)</title><rect x="78.8739%" y="2309" width="0.2075%" height="15" fill="rgb(228,155,29)" fg:x="1040920690" fg:w="2737803"/><text x="79.1239%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (2,737,803 samples, 0.21%)</title><rect x="78.8739%" y="2293" width="0.2075%" height="15" fill="rgb(243,57,37)" fg:x="1040920690" fg:w="2737803"/><text x="79.1239%" y="2303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,737,803 samples, 0.21%)</title><rect x="78.8739%" y="2277" width="0.2075%" height="15" fill="rgb(244,167,17)" fg:x="1040920690" fg:w="2737803"/><text x="79.1239%" y="2287.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,737,803 samples, 0.21%)</title><rect x="78.8739%" y="2261" width="0.2075%" height="15" fill="rgb(207,181,38)" fg:x="1040920690" fg:w="2737803"/><text x="79.1239%" y="2271.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_empty_singleton (2,737,803 samples, 0.21%)</title><rect x="78.8739%" y="2245" width="0.2075%" height="15" fill="rgb(211,8,23)" fg:x="1040920690" fg:w="2737803"/><text x="79.1239%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (3,526,982 samples, 0.27%)</title><rect x="79.0814%" y="2405" width="0.2673%" height="15" fill="rgb(235,11,44)" fg:x="1043658493" fg:w="3526982"/><text x="79.3314%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,526,982 samples, 0.27%)</title><rect x="79.0814%" y="2389" width="0.2673%" height="15" fill="rgb(248,18,52)" fg:x="1043658493" fg:w="3526982"/><text x="79.3314%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,526,982 samples, 0.27%)</title><rect x="79.0814%" y="2373" width="0.2673%" height="15" fill="rgb(208,4,7)" fg:x="1043658493" fg:w="3526982"/><text x="79.3314%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,526,982 samples, 0.27%)</title><rect x="79.0814%" y="2357" width="0.2673%" height="15" fill="rgb(240,17,39)" fg:x="1043658493" fg:w="3526982"/><text x="79.3314%" y="2367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,526,982 samples, 0.27%)</title><rect x="79.0814%" y="2341" width="0.2673%" height="15" fill="rgb(207,170,3)" fg:x="1043658493" fg:w="3526982"/><text x="79.3314%" y="2351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,526,982 samples, 0.27%)</title><rect x="79.0814%" y="2325" width="0.2673%" height="15" fill="rgb(236,100,52)" fg:x="1043658493" fg:w="3526982"/><text x="79.3314%" y="2335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,526,982 samples, 0.27%)</title><rect x="79.0814%" y="2309" width="0.2673%" height="15" fill="rgb(246,78,51)" fg:x="1043658493" fg:w="3526982"/><text x="79.3314%" y="2319.50"></text></g><g><title>alloc::alloc::dealloc (3,526,982 samples, 0.27%)</title><rect x="79.0814%" y="2293" width="0.2673%" height="15" fill="rgb(211,17,15)" fg:x="1043658493" fg:w="3526982"/><text x="79.3314%" y="2303.50"></text></g><g><title>cfree (3,526,982 samples, 0.27%)</title><rect x="79.0814%" y="2277" width="0.2673%" height="15" fill="rgb(209,59,46)" fg:x="1043658493" fg:w="3526982"/><text x="79.3314%" y="2287.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (6,165,842 samples, 0.47%)</title><rect x="79.3486%" y="2293" width="0.4672%" height="15" fill="rgb(210,92,25)" fg:x="1047185475" fg:w="6165842"/><text x="79.5986%" y="2303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (6,165,842 samples, 0.47%)</title><rect x="79.3486%" y="2277" width="0.4672%" height="15" fill="rgb(238,174,52)" fg:x="1047185475" fg:w="6165842"/><text x="79.5986%" y="2287.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (6,165,842 samples, 0.47%)</title><rect x="79.3486%" y="2261" width="0.4672%" height="15" fill="rgb(230,73,7)" fg:x="1047185475" fg:w="6165842"/><text x="79.5986%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6,165,842 samples, 0.47%)</title><rect x="79.3486%" y="2245" width="0.4672%" height="15" fill="rgb(243,124,40)" fg:x="1047185475" fg:w="6165842"/><text x="79.5986%" y="2255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6,165,842 samples, 0.47%)</title><rect x="79.3486%" y="2229" width="0.4672%" height="15" fill="rgb(244,170,11)" fg:x="1047185475" fg:w="6165842"/><text x="79.5986%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6,165,842 samples, 0.47%)</title><rect x="79.3486%" y="2213" width="0.4672%" height="15" fill="rgb(207,114,54)" fg:x="1047185475" fg:w="6165842"/><text x="79.5986%" y="2223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,165,842 samples, 0.47%)</title><rect x="79.3486%" y="2197" width="0.4672%" height="15" fill="rgb(205,42,20)" fg:x="1047185475" fg:w="6165842"/><text x="79.5986%" y="2207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,165,842 samples, 0.47%)</title><rect x="79.3486%" y="2181" width="0.4672%" height="15" fill="rgb(230,30,28)" fg:x="1047185475" fg:w="6165842"/><text x="79.5986%" y="2191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,165,842 samples, 0.47%)</title><rect x="79.3486%" y="2165" width="0.4672%" height="15" fill="rgb(205,73,54)" fg:x="1047185475" fg:w="6165842"/><text x="79.5986%" y="2175.50"></text></g><g><title>alloc::alloc::dealloc (6,165,842 samples, 0.47%)</title><rect x="79.3486%" y="2149" width="0.4672%" height="15" fill="rgb(254,227,23)" fg:x="1047185475" fg:w="6165842"/><text x="79.5986%" y="2159.50"></text></g><g><title>cfree (3,003,000 samples, 0.23%)</title><rect x="79.5883%" y="2133" width="0.2275%" height="15" fill="rgb(228,202,34)" fg:x="1050348317" fg:w="3003000"/><text x="79.8383%" y="2143.50"></text></g><g><title>[libc.so.6] (3,003,000 samples, 0.23%)</title><rect x="79.5883%" y="2117" width="0.2275%" height="15" fill="rgb(222,225,37)" fg:x="1050348317" fg:w="3003000"/><text x="79.8383%" y="2127.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (6,667,346 samples, 0.51%)</title><rect x="79.3486%" y="2309" width="0.5052%" height="15" fill="rgb(221,14,54)" fg:x="1047185475" fg:w="6667346"/><text x="79.5986%" y="2319.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (501,504 samples, 0.04%)</title><rect x="79.8158%" y="2293" width="0.0380%" height="15" fill="rgb(254,102,2)" fg:x="1053351317" fg:w="501504"/><text x="80.0658%" y="2303.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (501,504 samples, 0.04%)</title><rect x="79.8158%" y="2277" width="0.0380%" height="15" fill="rgb(232,104,17)" fg:x="1053351317" fg:w="501504"/><text x="80.0658%" y="2287.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load_aligned (501,504 samples, 0.04%)</title><rect x="79.8158%" y="2261" width="0.0380%" height="15" fill="rgb(250,220,14)" fg:x="1053351317" fg:w="501504"/><text x="80.0658%" y="2271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (501,504 samples, 0.04%)</title><rect x="79.8158%" y="2245" width="0.0380%" height="15" fill="rgb(241,158,9)" fg:x="1053351317" fg:w="501504"/><text x="80.0658%" y="2255.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,825,115 samples, 0.74%)</title><rect x="79.3486%" y="2341" width="0.7445%" height="15" fill="rgb(246,9,43)" fg:x="1047185475" fg:w="9825115"/><text x="79.5986%" y="2351.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (9,825,115 samples, 0.74%)</title><rect x="79.3486%" y="2325" width="0.7445%" height="15" fill="rgb(206,73,33)" fg:x="1047185475" fg:w="9825115"/><text x="79.5986%" y="2335.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (3,157,769 samples, 0.24%)</title><rect x="79.8538%" y="2309" width="0.2393%" height="15" fill="rgb(222,79,8)" fg:x="1053852821" fg:w="3157769"/><text x="80.1038%" y="2319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,157,769 samples, 0.24%)</title><rect x="79.8538%" y="2293" width="0.2393%" height="15" fill="rgb(234,8,54)" fg:x="1053852821" fg:w="3157769"/><text x="80.1038%" y="2303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (89,451,405 samples, 6.78%)</title><rect x="73.5847%" y="2453" width="6.7780%" height="15" fill="rgb(209,134,38)" fg:x="971117445" fg:w="89451405"/><text x="73.8347%" y="2463.50">&lt;alloc::v..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (89,451,405 samples, 6.78%)</title><rect x="73.5847%" y="2437" width="6.7780%" height="15" fill="rgb(230,127,29)" fg:x="971117445" fg:w="89451405"/><text x="73.8347%" y="2447.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (89,451,405 samples, 6.78%)</title><rect x="73.5847%" y="2421" width="6.7780%" height="15" fill="rgb(242,44,41)" fg:x="971117445" fg:w="89451405"/><text x="73.8347%" y="2431.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (13,383,375 samples, 1.01%)</title><rect x="79.3486%" y="2405" width="1.0141%" height="15" fill="rgb(222,56,43)" fg:x="1047185475" fg:w="13383375"/><text x="79.5986%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (13,383,375 samples, 1.01%)</title><rect x="79.3486%" y="2389" width="1.0141%" height="15" fill="rgb(238,39,47)" fg:x="1047185475" fg:w="13383375"/><text x="79.5986%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (13,383,375 samples, 1.01%)</title><rect x="79.3486%" y="2373" width="1.0141%" height="15" fill="rgb(226,79,43)" fg:x="1047185475" fg:w="13383375"/><text x="79.5986%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (13,383,375 samples, 1.01%)</title><rect x="79.3486%" y="2357" width="1.0141%" height="15" fill="rgb(242,105,53)" fg:x="1047185475" fg:w="13383375"/><text x="79.5986%" y="2367.50"></text></g><g><title>cfree (3,558,260 samples, 0.27%)</title><rect x="80.0931%" y="2341" width="0.2696%" height="15" fill="rgb(251,132,46)" fg:x="1057010590" fg:w="3558260"/><text x="80.3431%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (92,526,650 samples, 7.01%)</title><rect x="73.5847%" y="2469" width="7.0110%" height="15" fill="rgb(231,77,14)" fg:x="971117445" fg:w="92526650"/><text x="73.8347%" y="2479.50">core::ptr..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,075,245 samples, 0.23%)</title><rect x="80.3627%" y="2453" width="0.2330%" height="15" fill="rgb(240,135,9)" fg:x="1060568850" fg:w="3075245"/><text x="80.6127%" y="2463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,075,245 samples, 0.23%)</title><rect x="80.3627%" y="2437" width="0.2330%" height="15" fill="rgb(248,109,14)" fg:x="1060568850" fg:w="3075245"/><text x="80.6127%" y="2447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,075,245 samples, 0.23%)</title><rect x="80.3627%" y="2421" width="0.2330%" height="15" fill="rgb(227,146,52)" fg:x="1060568850" fg:w="3075245"/><text x="80.6127%" y="2431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,075,245 samples, 0.23%)</title><rect x="80.3627%" y="2405" width="0.2330%" height="15" fill="rgb(232,54,3)" fg:x="1060568850" fg:w="3075245"/><text x="80.6127%" y="2415.50"></text></g><g><title>alloc::alloc::dealloc (3,075,245 samples, 0.23%)</title><rect x="80.3627%" y="2389" width="0.2330%" height="15" fill="rgb(229,201,43)" fg:x="1060568850" fg:w="3075245"/><text x="80.6127%" y="2399.50"></text></g><g><title>cfree (3,075,245 samples, 0.23%)</title><rect x="80.3627%" y="2373" width="0.2330%" height="15" fill="rgb(252,161,33)" fg:x="1060568850" fg:w="3075245"/><text x="80.6127%" y="2383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (8,570,718 samples, 0.65%)</title><rect x="80.5957%" y="2469" width="0.6494%" height="15" fill="rgb(226,146,40)" fg:x="1063644095" fg:w="8570718"/><text x="80.8457%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (8,570,718 samples, 0.65%)</title><rect x="80.5957%" y="2453" width="0.6494%" height="15" fill="rgb(219,47,25)" fg:x="1063644095" fg:w="8570718"/><text x="80.8457%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8,570,718 samples, 0.65%)</title><rect x="80.5957%" y="2437" width="0.6494%" height="15" fill="rgb(250,135,13)" fg:x="1063644095" fg:w="8570718"/><text x="80.8457%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8,570,718 samples, 0.65%)</title><rect x="80.5957%" y="2421" width="0.6494%" height="15" fill="rgb(219,229,18)" fg:x="1063644095" fg:w="8570718"/><text x="80.8457%" y="2431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,570,718 samples, 0.65%)</title><rect x="80.5957%" y="2405" width="0.6494%" height="15" fill="rgb(217,152,27)" fg:x="1063644095" fg:w="8570718"/><text x="80.8457%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (8,570,718 samples, 0.65%)</title><rect x="80.5957%" y="2389" width="0.6494%" height="15" fill="rgb(225,71,47)" fg:x="1063644095" fg:w="8570718"/><text x="80.8457%" y="2399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8,570,718 samples, 0.65%)</title><rect x="80.5957%" y="2373" width="0.6494%" height="15" fill="rgb(220,139,14)" fg:x="1063644095" fg:w="8570718"/><text x="80.8457%" y="2383.50"></text></g><g><title>alloc::alloc::dealloc (8,570,718 samples, 0.65%)</title><rect x="80.5957%" y="2357" width="0.6494%" height="15" fill="rgb(247,54,32)" fg:x="1063644095" fg:w="8570718"/><text x="80.8457%" y="2367.50"></text></g><g><title>cfree (8,570,718 samples, 0.65%)</title><rect x="80.5957%" y="2341" width="0.6494%" height="15" fill="rgb(252,131,39)" fg:x="1063644095" fg:w="8570718"/><text x="80.8457%" y="2351.50"></text></g><g><title>[libc.so.6] (5,412,680 samples, 0.41%)</title><rect x="80.8350%" y="2325" width="0.4101%" height="15" fill="rgb(210,108,39)" fg:x="1066802133" fg:w="5412680"/><text x="81.0850%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,749,026 samples, 0.21%)</title><rect x="81.2452%" y="2469" width="0.2083%" height="15" fill="rgb(205,23,29)" fg:x="1072214813" fg:w="2749026"/><text x="81.4952%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,749,026 samples, 0.21%)</title><rect x="81.2452%" y="2453" width="0.2083%" height="15" fill="rgb(246,139,46)" fg:x="1072214813" fg:w="2749026"/><text x="81.4952%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,749,026 samples, 0.21%)</title><rect x="81.2452%" y="2437" width="0.2083%" height="15" fill="rgb(250,81,26)" fg:x="1072214813" fg:w="2749026"/><text x="81.4952%" y="2447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,749,026 samples, 0.21%)</title><rect x="81.2452%" y="2421" width="0.2083%" height="15" fill="rgb(214,104,7)" fg:x="1072214813" fg:w="2749026"/><text x="81.4952%" y="2431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,749,026 samples, 0.21%)</title><rect x="81.2452%" y="2405" width="0.2083%" height="15" fill="rgb(233,189,8)" fg:x="1072214813" fg:w="2749026"/><text x="81.4952%" y="2415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,749,026 samples, 0.21%)</title><rect x="81.2452%" y="2389" width="0.2083%" height="15" fill="rgb(228,141,17)" fg:x="1072214813" fg:w="2749026"/><text x="81.4952%" y="2399.50"></text></g><g><title>alloc::alloc::dealloc (2,749,026 samples, 0.21%)</title><rect x="81.2452%" y="2373" width="0.2083%" height="15" fill="rgb(247,157,1)" fg:x="1072214813" fg:w="2749026"/><text x="81.4952%" y="2383.50"></text></g><g><title>cfree (2,749,026 samples, 0.21%)</title><rect x="81.2452%" y="2357" width="0.2083%" height="15" fill="rgb(249,225,5)" fg:x="1072214813" fg:w="2749026"/><text x="81.4952%" y="2367.50"></text></g><g><title>[libc.so.6] (2,749,026 samples, 0.21%)</title><rect x="81.2452%" y="2341" width="0.2083%" height="15" fill="rgb(242,55,13)" fg:x="1072214813" fg:w="2749026"/><text x="81.4952%" y="2351.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (14,206,954 samples, 1.08%)</title><rect x="81.4535%" y="2373" width="1.0765%" height="15" fill="rgb(230,49,50)" fg:x="1074963839" fg:w="14206954"/><text x="81.7035%" y="2383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (10,461,345 samples, 0.79%)</title><rect x="81.7373%" y="2357" width="0.7927%" height="15" fill="rgb(241,111,38)" fg:x="1078709448" fg:w="10461345"/><text x="81.9873%" y="2367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (10,461,345 samples, 0.79%)</title><rect x="81.7373%" y="2341" width="0.7927%" height="15" fill="rgb(252,155,4)" fg:x="1078709448" fg:w="10461345"/><text x="81.9873%" y="2351.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (10,461,345 samples, 0.79%)</title><rect x="81.7373%" y="2325" width="0.7927%" height="15" fill="rgb(212,69,32)" fg:x="1078709448" fg:w="10461345"/><text x="81.9873%" y="2335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (10,461,345 samples, 0.79%)</title><rect x="81.7373%" y="2309" width="0.7927%" height="15" fill="rgb(243,107,47)" fg:x="1078709448" fg:w="10461345"/><text x="81.9873%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (10,461,345 samples, 0.79%)</title><rect x="81.7373%" y="2293" width="0.7927%" height="15" fill="rgb(247,130,12)" fg:x="1078709448" fg:w="10461345"/><text x="81.9873%" y="2303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (10,461,345 samples, 0.79%)</title><rect x="81.7373%" y="2277" width="0.7927%" height="15" fill="rgb(233,74,16)" fg:x="1078709448" fg:w="10461345"/><text x="81.9873%" y="2287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,461,345 samples, 0.79%)</title><rect x="81.7373%" y="2261" width="0.7927%" height="15" fill="rgb(208,58,18)" fg:x="1078709448" fg:w="10461345"/><text x="81.9873%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (10,461,345 samples, 0.79%)</title><rect x="81.7373%" y="2245" width="0.7927%" height="15" fill="rgb(242,225,1)" fg:x="1078709448" fg:w="10461345"/><text x="81.9873%" y="2255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10,461,345 samples, 0.79%)</title><rect x="81.7373%" y="2229" width="0.7927%" height="15" fill="rgb(249,39,40)" fg:x="1078709448" fg:w="10461345"/><text x="81.9873%" y="2239.50"></text></g><g><title>alloc::alloc::dealloc (10,461,345 samples, 0.79%)</title><rect x="81.7373%" y="2213" width="0.7927%" height="15" fill="rgb(207,72,44)" fg:x="1078709448" fg:w="10461345"/><text x="81.9873%" y="2223.50"></text></g><g><title>cfree (10,461,345 samples, 0.79%)</title><rect x="81.7373%" y="2197" width="0.7927%" height="15" fill="rgb(215,193,12)" fg:x="1078709448" fg:w="10461345"/><text x="81.9873%" y="2207.50"></text></g><g><title>[libc.so.6] (7,203,405 samples, 0.55%)</title><rect x="81.9842%" y="2181" width="0.5458%" height="15" fill="rgb(248,41,39)" fg:x="1081967388" fg:w="7203405"/><text x="82.2342%" y="2191.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17,320,761 samples, 1.31%)</title><rect x="81.4535%" y="2405" width="1.3124%" height="15" fill="rgb(253,85,4)" fg:x="1074963839" fg:w="17320761"/><text x="81.7035%" y="2415.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (17,320,761 samples, 1.31%)</title><rect x="81.4535%" y="2389" width="1.3124%" height="15" fill="rgb(243,70,31)" fg:x="1074963839" fg:w="17320761"/><text x="81.7035%" y="2399.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (3,113,807 samples, 0.24%)</title><rect x="82.5300%" y="2373" width="0.2359%" height="15" fill="rgb(253,195,26)" fg:x="1089170793" fg:w="3113807"/><text x="82.7800%" y="2383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,113,807 samples, 0.24%)</title><rect x="82.5300%" y="2357" width="0.2359%" height="15" fill="rgb(243,42,11)" fg:x="1089170793" fg:w="3113807"/><text x="82.7800%" y="2367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (131,061,097 samples, 9.93%)</title><rect x="73.3166%" y="2517" width="9.9309%" height="15" fill="rgb(239,66,17)" fg:x="967579426" fg:w="131061097"/><text x="73.5666%" y="2527.50">&lt;alloc::vec::V..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (131,061,097 samples, 9.93%)</title><rect x="73.3166%" y="2501" width="9.9309%" height="15" fill="rgb(217,132,21)" fg:x="967579426" fg:w="131061097"/><text x="73.5666%" y="2511.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (131,061,097 samples, 9.93%)</title><rect x="73.3166%" y="2485" width="9.9309%" height="15" fill="rgb(252,202,21)" fg:x="967579426" fg:w="131061097"/><text x="73.5666%" y="2495.50">core::ptr::dro..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (23,676,684 samples, 1.79%)</title><rect x="81.4535%" y="2469" width="1.7941%" height="15" fill="rgb(233,98,36)" fg:x="1074963839" fg:w="23676684"/><text x="81.7035%" y="2479.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (23,676,684 samples, 1.79%)</title><rect x="81.4535%" y="2453" width="1.7941%" height="15" fill="rgb(216,153,54)" fg:x="1074963839" fg:w="23676684"/><text x="81.7035%" y="2463.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (23,676,684 samples, 1.79%)</title><rect x="81.4535%" y="2437" width="1.7941%" height="15" fill="rgb(250,99,7)" fg:x="1074963839" fg:w="23676684"/><text x="81.7035%" y="2447.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (23,676,684 samples, 1.79%)</title><rect x="81.4535%" y="2421" width="1.7941%" height="15" fill="rgb(207,56,50)" fg:x="1074963839" fg:w="23676684"/><text x="81.7035%" y="2431.50">c..</text></g><g><title>cfree (6,355,923 samples, 0.48%)</title><rect x="82.7659%" y="2405" width="0.4816%" height="15" fill="rgb(244,61,34)" fg:x="1092284600" fg:w="6355923"/><text x="83.0159%" y="2415.50"></text></g><g><title>[libc.so.6] (6,355,923 samples, 0.48%)</title><rect x="82.7659%" y="2389" width="0.4816%" height="15" fill="rgb(241,50,38)" fg:x="1092284600" fg:w="6355923"/><text x="83.0159%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (137,078,208 samples, 10.39%)</title><rect x="73.3166%" y="2533" width="10.3869%" height="15" fill="rgb(212,166,30)" fg:x="967579426" fg:w="137078208"/><text x="73.5666%" y="2543.50">core::ptr::drop..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (6,017,111 samples, 0.46%)</title><rect x="83.2475%" y="2517" width="0.4559%" height="15" fill="rgb(249,127,32)" fg:x="1098640523" fg:w="6017111"/><text x="83.4975%" y="2527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,017,111 samples, 0.46%)</title><rect x="83.2475%" y="2501" width="0.4559%" height="15" fill="rgb(209,103,0)" fg:x="1098640523" fg:w="6017111"/><text x="83.4975%" y="2511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,017,111 samples, 0.46%)</title><rect x="83.2475%" y="2485" width="0.4559%" height="15" fill="rgb(238,209,51)" fg:x="1098640523" fg:w="6017111"/><text x="83.4975%" y="2495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,017,111 samples, 0.46%)</title><rect x="83.2475%" y="2469" width="0.4559%" height="15" fill="rgb(237,56,23)" fg:x="1098640523" fg:w="6017111"/><text x="83.4975%" y="2479.50"></text></g><g><title>alloc::alloc::dealloc (6,017,111 samples, 0.46%)</title><rect x="83.2475%" y="2453" width="0.4559%" height="15" fill="rgb(215,153,46)" fg:x="1098640523" fg:w="6017111"/><text x="83.4975%" y="2463.50"></text></g><g><title>__rdl_dealloc (3,002,923 samples, 0.23%)</title><rect x="83.4759%" y="2437" width="0.2275%" height="15" fill="rgb(224,49,31)" fg:x="1101654711" fg:w="3002923"/><text x="83.7259%" y="2447.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3,002,923 samples, 0.23%)</title><rect x="83.4759%" y="2421" width="0.2275%" height="15" fill="rgb(250,18,42)" fg:x="1101654711" fg:w="3002923"/><text x="83.7259%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (3,094,034 samples, 0.23%)</title><rect x="83.7035%" y="2533" width="0.2344%" height="15" fill="rgb(215,176,39)" fg:x="1104657634" fg:w="3094034"/><text x="83.9535%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,094,034 samples, 0.23%)</title><rect x="83.7035%" y="2517" width="0.2344%" height="15" fill="rgb(223,77,29)" fg:x="1104657634" fg:w="3094034"/><text x="83.9535%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,094,034 samples, 0.23%)</title><rect x="83.7035%" y="2501" width="0.2344%" height="15" fill="rgb(234,94,52)" fg:x="1104657634" fg:w="3094034"/><text x="83.9535%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,094,034 samples, 0.23%)</title><rect x="83.7035%" y="2485" width="0.2344%" height="15" fill="rgb(220,154,50)" fg:x="1104657634" fg:w="3094034"/><text x="83.9535%" y="2495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,094,034 samples, 0.23%)</title><rect x="83.7035%" y="2469" width="0.2344%" height="15" fill="rgb(212,11,10)" fg:x="1104657634" fg:w="3094034"/><text x="83.9535%" y="2479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,094,034 samples, 0.23%)</title><rect x="83.7035%" y="2453" width="0.2344%" height="15" fill="rgb(205,166,19)" fg:x="1104657634" fg:w="3094034"/><text x="83.9535%" y="2463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,094,034 samples, 0.23%)</title><rect x="83.7035%" y="2437" width="0.2344%" height="15" fill="rgb(244,198,16)" fg:x="1104657634" fg:w="3094034"/><text x="83.9535%" y="2447.50"></text></g><g><title>alloc::alloc::dealloc (3,094,034 samples, 0.23%)</title><rect x="83.7035%" y="2421" width="0.2344%" height="15" fill="rgb(219,69,12)" fg:x="1104657634" fg:w="3094034"/><text x="83.9535%" y="2431.50"></text></g><g><title>cfree (3,094,034 samples, 0.23%)</title><rect x="83.7035%" y="2405" width="0.2344%" height="15" fill="rgb(245,30,7)" fg:x="1104657634" fg:w="3094034"/><text x="83.9535%" y="2415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (150,518,551 samples, 11.41%)</title><rect x="73.3166%" y="2597" width="11.4053%" height="15" fill="rgb(218,221,48)" fg:x="967579426" fg:w="150518551"/><text x="73.5666%" y="2607.50">core::ptr::drop_i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (150,518,551 samples, 11.41%)</title><rect x="73.3166%" y="2581" width="11.4053%" height="15" fill="rgb(216,66,15)" fg:x="967579426" fg:w="150518551"/><text x="73.5666%" y="2591.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (150,518,551 samples, 11.41%)</title><rect x="73.3166%" y="2565" width="11.4053%" height="15" fill="rgb(226,122,50)" fg:x="967579426" fg:w="150518551"/><text x="73.5666%" y="2575.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (150,518,551 samples, 11.41%)</title><rect x="73.3166%" y="2549" width="11.4053%" height="15" fill="rgb(239,156,16)" fg:x="967579426" fg:w="150518551"/><text x="73.5666%" y="2559.50">core::ptr::drop_i..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (10,346,309 samples, 0.78%)</title><rect x="83.9379%" y="2533" width="0.7840%" height="15" fill="rgb(224,27,38)" fg:x="1107751668" fg:w="10346309"/><text x="84.1879%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (10,346,309 samples, 0.78%)</title><rect x="83.9379%" y="2517" width="0.7840%" height="15" fill="rgb(224,39,27)" fg:x="1107751668" fg:w="10346309"/><text x="84.1879%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (10,346,309 samples, 0.78%)</title><rect x="83.9379%" y="2501" width="0.7840%" height="15" fill="rgb(215,92,29)" fg:x="1107751668" fg:w="10346309"/><text x="84.1879%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (10,346,309 samples, 0.78%)</title><rect x="83.9379%" y="2485" width="0.7840%" height="15" fill="rgb(207,159,16)" fg:x="1107751668" fg:w="10346309"/><text x="84.1879%" y="2495.50"></text></g><g><title>cfree (10,346,309 samples, 0.78%)</title><rect x="83.9379%" y="2469" width="0.7840%" height="15" fill="rgb(238,163,47)" fg:x="1107751668" fg:w="10346309"/><text x="84.1879%" y="2479.50"></text></g><g><title>[libc.so.6] (3,621,502 samples, 0.27%)</title><rect x="84.4475%" y="2453" width="0.2744%" height="15" fill="rgb(219,91,49)" fg:x="1114476475" fg:w="3621502"/><text x="84.6975%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (7,333,292 samples, 0.56%)</title><rect x="84.7219%" y="2597" width="0.5557%" height="15" fill="rgb(227,167,31)" fg:x="1118097977" fg:w="7333292"/><text x="84.9719%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (7,333,292 samples, 0.56%)</title><rect x="84.7219%" y="2581" width="0.5557%" height="15" fill="rgb(234,80,54)" fg:x="1118097977" fg:w="7333292"/><text x="84.9719%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7,333,292 samples, 0.56%)</title><rect x="84.7219%" y="2565" width="0.5557%" height="15" fill="rgb(212,114,2)" fg:x="1118097977" fg:w="7333292"/><text x="84.9719%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7,333,292 samples, 0.56%)</title><rect x="84.7219%" y="2549" width="0.5557%" height="15" fill="rgb(234,50,24)" fg:x="1118097977" fg:w="7333292"/><text x="84.9719%" y="2559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,333,292 samples, 0.56%)</title><rect x="84.7219%" y="2533" width="0.5557%" height="15" fill="rgb(221,68,8)" fg:x="1118097977" fg:w="7333292"/><text x="84.9719%" y="2543.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (7,333,292 samples, 0.56%)</title><rect x="84.7219%" y="2517" width="0.5557%" height="15" fill="rgb(254,180,31)" fg:x="1118097977" fg:w="7333292"/><text x="84.9719%" y="2527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7,333,292 samples, 0.56%)</title><rect x="84.7219%" y="2501" width="0.5557%" height="15" fill="rgb(247,130,50)" fg:x="1118097977" fg:w="7333292"/><text x="84.9719%" y="2511.50"></text></g><g><title>alloc::alloc::dealloc (7,333,292 samples, 0.56%)</title><rect x="84.7219%" y="2485" width="0.5557%" height="15" fill="rgb(211,109,4)" fg:x="1118097977" fg:w="7333292"/><text x="84.9719%" y="2495.50"></text></g><g><title>cfree (7,333,292 samples, 0.56%)</title><rect x="84.7219%" y="2469" width="0.5557%" height="15" fill="rgb(238,50,21)" fg:x="1118097977" fg:w="7333292"/><text x="84.9719%" y="2479.50"></text></g><g><title>[libc.so.6] (3,746,105 samples, 0.28%)</title><rect x="84.9937%" y="2453" width="0.2839%" height="15" fill="rgb(225,57,45)" fg:x="1121685164" fg:w="3746105"/><text x="85.2437%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (11,751,610 samples, 0.89%)</title><rect x="85.2776%" y="2597" width="0.8905%" height="15" fill="rgb(209,196,50)" fg:x="1125431269" fg:w="11751610"/><text x="85.5276%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (11,751,610 samples, 0.89%)</title><rect x="85.2776%" y="2581" width="0.8905%" height="15" fill="rgb(242,140,13)" fg:x="1125431269" fg:w="11751610"/><text x="85.5276%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (11,751,610 samples, 0.89%)</title><rect x="85.2776%" y="2565" width="0.8905%" height="15" fill="rgb(217,111,7)" fg:x="1125431269" fg:w="11751610"/><text x="85.5276%" y="2575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11,751,610 samples, 0.89%)</title><rect x="85.2776%" y="2549" width="0.8905%" height="15" fill="rgb(253,193,51)" fg:x="1125431269" fg:w="11751610"/><text x="85.5276%" y="2559.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (11,751,610 samples, 0.89%)</title><rect x="85.2776%" y="2533" width="0.8905%" height="15" fill="rgb(252,70,29)" fg:x="1125431269" fg:w="11751610"/><text x="85.5276%" y="2543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11,751,610 samples, 0.89%)</title><rect x="85.2776%" y="2517" width="0.8905%" height="15" fill="rgb(232,127,12)" fg:x="1125431269" fg:w="11751610"/><text x="85.5276%" y="2527.50"></text></g><g><title>alloc::alloc::dealloc (11,751,610 samples, 0.89%)</title><rect x="85.2776%" y="2501" width="0.8905%" height="15" fill="rgb(211,180,21)" fg:x="1125431269" fg:w="11751610"/><text x="85.5276%" y="2511.50"></text></g><g><title>cfree (11,751,610 samples, 0.89%)</title><rect x="85.2776%" y="2485" width="0.8905%" height="15" fill="rgb(229,72,13)" fg:x="1125431269" fg:w="11751610"/><text x="85.5276%" y="2495.50"></text></g><g><title>[libc.so.6] (2,760,755 samples, 0.21%)</title><rect x="85.9588%" y="2469" width="0.2092%" height="15" fill="rgb(240,211,49)" fg:x="1134422124" fg:w="2760755"/><text x="86.2088%" y="2479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,030,776 samples, 0.46%)</title><rect x="86.1680%" y="2533" width="0.4570%" height="15" fill="rgb(219,149,40)" fg:x="1137182879" fg:w="6030776"/><text x="86.4180%" y="2543.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (6,030,776 samples, 0.46%)</title><rect x="86.1680%" y="2517" width="0.4570%" height="15" fill="rgb(210,127,46)" fg:x="1137182879" fg:w="6030776"/><text x="86.4180%" y="2527.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (6,030,776 samples, 0.46%)</title><rect x="86.1680%" y="2501" width="0.4570%" height="15" fill="rgb(220,106,7)" fg:x="1137182879" fg:w="6030776"/><text x="86.4180%" y="2511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (6,030,776 samples, 0.46%)</title><rect x="86.1680%" y="2485" width="0.4570%" height="15" fill="rgb(249,31,22)" fg:x="1137182879" fg:w="6030776"/><text x="86.4180%" y="2495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (6,030,776 samples, 0.46%)</title><rect x="86.1680%" y="2469" width="0.4570%" height="15" fill="rgb(253,1,49)" fg:x="1137182879" fg:w="6030776"/><text x="86.4180%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (6,030,776 samples, 0.46%)</title><rect x="86.1680%" y="2453" width="0.4570%" height="15" fill="rgb(227,144,33)" fg:x="1137182879" fg:w="6030776"/><text x="86.4180%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6,030,776 samples, 0.46%)</title><rect x="86.1680%" y="2437" width="0.4570%" height="15" fill="rgb(249,163,44)" fg:x="1137182879" fg:w="6030776"/><text x="86.4180%" y="2447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6,030,776 samples, 0.46%)</title><rect x="86.1680%" y="2421" width="0.4570%" height="15" fill="rgb(234,15,39)" fg:x="1137182879" fg:w="6030776"/><text x="86.4180%" y="2431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6,030,776 samples, 0.46%)</title><rect x="86.1680%" y="2405" width="0.4570%" height="15" fill="rgb(207,66,16)" fg:x="1137182879" fg:w="6030776"/><text x="86.4180%" y="2415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,030,776 samples, 0.46%)</title><rect x="86.1680%" y="2389" width="0.4570%" height="15" fill="rgb(233,112,24)" fg:x="1137182879" fg:w="6030776"/><text x="86.4180%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (6,030,776 samples, 0.46%)</title><rect x="86.1680%" y="2373" width="0.4570%" height="15" fill="rgb(230,90,22)" fg:x="1137182879" fg:w="6030776"/><text x="86.4180%" y="2383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6,030,776 samples, 0.46%)</title><rect x="86.1680%" y="2357" width="0.4570%" height="15" fill="rgb(229,61,13)" fg:x="1137182879" fg:w="6030776"/><text x="86.4180%" y="2367.50"></text></g><g><title>alloc::alloc::dealloc (6,030,776 samples, 0.46%)</title><rect x="86.1680%" y="2341" width="0.4570%" height="15" fill="rgb(225,57,24)" fg:x="1137182879" fg:w="6030776"/><text x="86.4180%" y="2351.50"></text></g><g><title>cfree (6,030,776 samples, 0.46%)</title><rect x="86.1680%" y="2325" width="0.4570%" height="15" fill="rgb(208,169,48)" fg:x="1137182879" fg:w="6030776"/><text x="86.4180%" y="2335.50"></text></g><g><title>[libc.so.6] (6,030,776 samples, 0.46%)</title><rect x="86.1680%" y="2309" width="0.4570%" height="15" fill="rgb(244,218,51)" fg:x="1137182879" fg:w="6030776"/><text x="86.4180%" y="2319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (178,708,967 samples, 13.54%)</title><rect x="73.3166%" y="2661" width="13.5414%" height="15" fill="rgb(214,148,10)" fg:x="967579426" fg:w="178708967"/><text x="73.5666%" y="2671.50">core::ptr::drop_in_p..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (178,708,967 samples, 13.54%)</title><rect x="73.3166%" y="2645" width="13.5414%" height="15" fill="rgb(225,174,27)" fg:x="967579426" fg:w="178708967"/><text x="73.5666%" y="2655.50">&lt;alloc::vec::Vec&lt;T,A..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (178,708,967 samples, 13.54%)</title><rect x="73.3166%" y="2629" width="13.5414%" height="15" fill="rgb(230,96,26)" fg:x="967579426" fg:w="178708967"/><text x="73.5666%" y="2639.50">core::ptr::drop_in_p..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (178,708,967 samples, 13.54%)</title><rect x="73.3166%" y="2613" width="13.5414%" height="15" fill="rgb(232,10,30)" fg:x="967579426" fg:w="178708967"/><text x="73.5666%" y="2623.50">core::ptr::drop_in_p..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (9,105,514 samples, 0.69%)</title><rect x="86.1680%" y="2597" width="0.6900%" height="15" fill="rgb(222,8,50)" fg:x="1137182879" fg:w="9105514"/><text x="86.4180%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;&gt; (9,105,514 samples, 0.69%)</title><rect x="86.1680%" y="2581" width="0.6900%" height="15" fill="rgb(213,81,27)" fg:x="1137182879" fg:w="9105514"/><text x="86.4180%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::hash::random::RandomState&gt;&gt; (9,105,514 samples, 0.69%)</title><rect x="86.1680%" y="2565" width="0.6900%" height="15" fill="rgb(245,50,10)" fg:x="1137182879" fg:w="9105514"/><text x="86.4180%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (9,105,514 samples, 0.69%)</title><rect x="86.1680%" y="2549" width="0.6900%" height="15" fill="rgb(216,100,18)" fg:x="1137182879" fg:w="9105514"/><text x="86.4180%" y="2559.50"></text></g><g><title>cfree (3,074,738 samples, 0.23%)</title><rect x="86.6250%" y="2533" width="0.2330%" height="15" fill="rgb(236,147,54)" fg:x="1143213655" fg:w="3074738"/><text x="86.8750%" y="2543.50"></text></g><g><title>[libc.so.6] (3,074,738 samples, 0.23%)</title><rect x="86.6250%" y="2517" width="0.2330%" height="15" fill="rgb(205,143,26)" fg:x="1143213655" fg:w="3074738"/><text x="86.8750%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (3,199,175 samples, 0.24%)</title><rect x="86.8580%" y="2661" width="0.2424%" height="15" fill="rgb(236,26,9)" fg:x="1146288393" fg:w="3199175"/><text x="87.1080%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,199,175 samples, 0.24%)</title><rect x="86.8580%" y="2645" width="0.2424%" height="15" fill="rgb(221,165,53)" fg:x="1146288393" fg:w="3199175"/><text x="87.1080%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,199,175 samples, 0.24%)</title><rect x="86.8580%" y="2629" width="0.2424%" height="15" fill="rgb(214,110,17)" fg:x="1146288393" fg:w="3199175"/><text x="87.1080%" y="2639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,199,175 samples, 0.24%)</title><rect x="86.8580%" y="2613" width="0.2424%" height="15" fill="rgb(237,197,12)" fg:x="1146288393" fg:w="3199175"/><text x="87.1080%" y="2623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,199,175 samples, 0.24%)</title><rect x="86.8580%" y="2597" width="0.2424%" height="15" fill="rgb(205,84,17)" fg:x="1146288393" fg:w="3199175"/><text x="87.1080%" y="2607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,199,175 samples, 0.24%)</title><rect x="86.8580%" y="2581" width="0.2424%" height="15" fill="rgb(237,18,45)" fg:x="1146288393" fg:w="3199175"/><text x="87.1080%" y="2591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,199,175 samples, 0.24%)</title><rect x="86.8580%" y="2565" width="0.2424%" height="15" fill="rgb(221,87,14)" fg:x="1146288393" fg:w="3199175"/><text x="87.1080%" y="2575.50"></text></g><g><title>alloc::alloc::dealloc (3,199,175 samples, 0.24%)</title><rect x="86.8580%" y="2549" width="0.2424%" height="15" fill="rgb(238,186,15)" fg:x="1146288393" fg:w="3199175"/><text x="87.1080%" y="2559.50"></text></g><g><title>cfree (3,199,175 samples, 0.24%)</title><rect x="86.8580%" y="2533" width="0.2424%" height="15" fill="rgb(208,115,11)" fg:x="1146288393" fg:w="3199175"/><text x="87.1080%" y="2543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (191,369,076 samples, 14.50%)</title><rect x="72.8953%" y="2725" width="14.5007%" height="15" fill="rgb(254,175,0)" fg:x="962019327" fg:w="191369076"/><text x="73.1453%" y="2735.50">core::ptr::drop_in_pla..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (191,369,076 samples, 14.50%)</title><rect x="72.8953%" y="2709" width="14.5007%" height="15" fill="rgb(227,24,42)" fg:x="962019327" fg:w="191369076"/><text x="73.1453%" y="2719.50">&lt;alloc::vec::Vec&lt;T,A&gt; ..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (191,369,076 samples, 14.50%)</title><rect x="72.8953%" y="2693" width="14.5007%" height="15" fill="rgb(223,211,37)" fg:x="962019327" fg:w="191369076"/><text x="73.1453%" y="2703.50">core::ptr::drop_in_pla..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (191,369,076 samples, 14.50%)</title><rect x="72.8953%" y="2677" width="14.5007%" height="15" fill="rgb(235,49,27)" fg:x="962019327" fg:w="191369076"/><text x="73.1453%" y="2687.50">core::ptr::drop_in_pla..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (3,900,835 samples, 0.30%)</title><rect x="87.1004%" y="2661" width="0.2956%" height="15" fill="rgb(254,97,51)" fg:x="1149487568" fg:w="3900835"/><text x="87.3504%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,900,835 samples, 0.30%)</title><rect x="87.1004%" y="2645" width="0.2956%" height="15" fill="rgb(249,51,40)" fg:x="1149487568" fg:w="3900835"/><text x="87.3504%" y="2655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,900,835 samples, 0.30%)</title><rect x="87.1004%" y="2629" width="0.2956%" height="15" fill="rgb(210,128,45)" fg:x="1149487568" fg:w="3900835"/><text x="87.3504%" y="2639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,900,835 samples, 0.30%)</title><rect x="87.1004%" y="2613" width="0.2956%" height="15" fill="rgb(224,137,50)" fg:x="1149487568" fg:w="3900835"/><text x="87.3504%" y="2623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,900,835 samples, 0.30%)</title><rect x="87.1004%" y="2597" width="0.2956%" height="15" fill="rgb(242,15,9)" fg:x="1149487568" fg:w="3900835"/><text x="87.3504%" y="2607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,900,835 samples, 0.30%)</title><rect x="87.1004%" y="2581" width="0.2956%" height="15" fill="rgb(233,187,41)" fg:x="1149487568" fg:w="3900835"/><text x="87.3504%" y="2591.50"></text></g><g><title>alloc::alloc::dealloc (3,900,835 samples, 0.30%)</title><rect x="87.1004%" y="2565" width="0.2956%" height="15" fill="rgb(227,2,29)" fg:x="1149487568" fg:w="3900835"/><text x="87.3504%" y="2575.50"></text></g><g><title>cfree (3,900,835 samples, 0.30%)</title><rect x="87.1004%" y="2549" width="0.2956%" height="15" fill="rgb(222,70,3)" fg:x="1149487568" fg:w="3900835"/><text x="87.3504%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (194,677,220 samples, 14.75%)</title><rect x="72.8953%" y="2789" width="14.7513%" height="15" fill="rgb(213,11,42)" fg:x="962019327" fg:w="194677220"/><text x="73.1453%" y="2799.50">core::ptr::drop_in_plac..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (194,677,220 samples, 14.75%)</title><rect x="72.8953%" y="2773" width="14.7513%" height="15" fill="rgb(225,150,9)" fg:x="962019327" fg:w="194677220"/><text x="73.1453%" y="2783.50">&lt;alloc::vec::Vec&lt;T,A&gt; a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (194,677,220 samples, 14.75%)</title><rect x="72.8953%" y="2757" width="14.7513%" height="15" fill="rgb(230,162,45)" fg:x="962019327" fg:w="194677220"/><text x="73.1453%" y="2767.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (194,677,220 samples, 14.75%)</title><rect x="72.8953%" y="2741" width="14.7513%" height="15" fill="rgb(222,14,52)" fg:x="962019327" fg:w="194677220"/><text x="73.1453%" y="2751.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (3,308,144 samples, 0.25%)</title><rect x="87.3960%" y="2725" width="0.2507%" height="15" fill="rgb(254,198,14)" fg:x="1153388403" fg:w="3308144"/><text x="87.6460%" y="2735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,308,144 samples, 0.25%)</title><rect x="87.3960%" y="2709" width="0.2507%" height="15" fill="rgb(220,217,30)" fg:x="1153388403" fg:w="3308144"/><text x="87.6460%" y="2719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,308,144 samples, 0.25%)</title><rect x="87.3960%" y="2693" width="0.2507%" height="15" fill="rgb(215,146,41)" fg:x="1153388403" fg:w="3308144"/><text x="87.6460%" y="2703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,308,144 samples, 0.25%)</title><rect x="87.3960%" y="2677" width="0.2507%" height="15" fill="rgb(217,27,36)" fg:x="1153388403" fg:w="3308144"/><text x="87.6460%" y="2687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,308,144 samples, 0.25%)</title><rect x="87.3960%" y="2661" width="0.2507%" height="15" fill="rgb(219,218,39)" fg:x="1153388403" fg:w="3308144"/><text x="87.6460%" y="2671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,308,144 samples, 0.25%)</title><rect x="87.3960%" y="2645" width="0.2507%" height="15" fill="rgb(219,4,42)" fg:x="1153388403" fg:w="3308144"/><text x="87.6460%" y="2655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,308,144 samples, 0.25%)</title><rect x="87.3960%" y="2629" width="0.2507%" height="15" fill="rgb(249,119,36)" fg:x="1153388403" fg:w="3308144"/><text x="87.6460%" y="2639.50"></text></g><g><title>alloc::alloc::dealloc (3,308,144 samples, 0.25%)</title><rect x="87.3960%" y="2613" width="0.2507%" height="15" fill="rgb(209,23,33)" fg:x="1153388403" fg:w="3308144"/><text x="87.6460%" y="2623.50"></text></g><g><title>cfree (3,308,144 samples, 0.25%)</title><rect x="87.3960%" y="2597" width="0.2507%" height="15" fill="rgb(211,10,0)" fg:x="1153388403" fg:w="3308144"/><text x="87.6460%" y="2607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (197,741,134 samples, 14.98%)</title><rect x="72.8953%" y="2853" width="14.9835%" height="15" fill="rgb(208,99,37)" fg:x="962019327" fg:w="197741134"/><text x="73.1453%" y="2863.50">core::ptr::drop_in_plac..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (197,741,134 samples, 14.98%)</title><rect x="72.8953%" y="2837" width="14.9835%" height="15" fill="rgb(213,132,31)" fg:x="962019327" fg:w="197741134"/><text x="73.1453%" y="2847.50">&lt;alloc::vec::Vec&lt;T,A&gt; a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (197,741,134 samples, 14.98%)</title><rect x="72.8953%" y="2821" width="14.9835%" height="15" fill="rgb(243,129,40)" fg:x="962019327" fg:w="197741134"/><text x="73.1453%" y="2831.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (197,741,134 samples, 14.98%)</title><rect x="72.8953%" y="2805" width="14.9835%" height="15" fill="rgb(210,66,33)" fg:x="962019327" fg:w="197741134"/><text x="73.1453%" y="2815.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (3,063,914 samples, 0.23%)</title><rect x="87.6466%" y="2789" width="0.2322%" height="15" fill="rgb(209,189,4)" fg:x="1156696547" fg:w="3063914"/><text x="87.8966%" y="2799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,063,914 samples, 0.23%)</title><rect x="87.6466%" y="2773" width="0.2322%" height="15" fill="rgb(214,107,37)" fg:x="1156696547" fg:w="3063914"/><text x="87.8966%" y="2783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,063,914 samples, 0.23%)</title><rect x="87.6466%" y="2757" width="0.2322%" height="15" fill="rgb(245,88,54)" fg:x="1156696547" fg:w="3063914"/><text x="87.8966%" y="2767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,063,914 samples, 0.23%)</title><rect x="87.6466%" y="2741" width="0.2322%" height="15" fill="rgb(205,146,20)" fg:x="1156696547" fg:w="3063914"/><text x="87.8966%" y="2751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,063,914 samples, 0.23%)</title><rect x="87.6466%" y="2725" width="0.2322%" height="15" fill="rgb(220,161,25)" fg:x="1156696547" fg:w="3063914"/><text x="87.8966%" y="2735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,063,914 samples, 0.23%)</title><rect x="87.6466%" y="2709" width="0.2322%" height="15" fill="rgb(215,152,15)" fg:x="1156696547" fg:w="3063914"/><text x="87.8966%" y="2719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,063,914 samples, 0.23%)</title><rect x="87.6466%" y="2693" width="0.2322%" height="15" fill="rgb(233,192,44)" fg:x="1156696547" fg:w="3063914"/><text x="87.8966%" y="2703.50"></text></g><g><title>alloc::alloc::dealloc (3,063,914 samples, 0.23%)</title><rect x="87.6466%" y="2677" width="0.2322%" height="15" fill="rgb(240,170,46)" fg:x="1156696547" fg:w="3063914"/><text x="87.8966%" y="2687.50"></text></g><g><title>__rust_dealloc (3,063,914 samples, 0.23%)</title><rect x="87.6466%" y="2661" width="0.2322%" height="15" fill="rgb(207,104,33)" fg:x="1156696547" fg:w="3063914"/><text x="87.8966%" y="2671.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (204,308,629 samples, 15.48%)</title><rect x="72.6359%" y="3125" width="15.4811%" height="15" fill="rgb(219,21,39)" fg:x="958596509" fg:w="204308629"/><text x="72.8859%" y="3135.50">core::ptr::drop_in_place..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (204,308,629 samples, 15.48%)</title><rect x="72.6359%" y="3109" width="15.4811%" height="15" fill="rgb(214,133,29)" fg:x="958596509" fg:w="204308629"/><text x="72.8859%" y="3119.50">core::ptr::drop_in_place..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (204,308,629 samples, 15.48%)</title><rect x="72.6359%" y="3093" width="15.4811%" height="15" fill="rgb(226,93,6)" fg:x="958596509" fg:w="204308629"/><text x="72.8859%" y="3103.50">&lt;alloc::vec::Vec&lt;T,A&gt; as..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (204,308,629 samples, 15.48%)</title><rect x="72.6359%" y="3077" width="15.4811%" height="15" fill="rgb(252,222,34)" fg:x="958596509" fg:w="204308629"/><text x="72.8859%" y="3087.50">core::ptr::drop_in_place..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (204,308,629 samples, 15.48%)</title><rect x="72.6359%" y="3061" width="15.4811%" height="15" fill="rgb(252,92,48)" fg:x="958596509" fg:w="204308629"/><text x="72.8859%" y="3071.50">core::ptr::drop_in_place..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (200,885,811 samples, 15.22%)</title><rect x="72.8953%" y="3045" width="15.2218%" height="15" fill="rgb(245,223,24)" fg:x="962019327" fg:w="200885811"/><text x="73.1453%" y="3055.50">core::ptr::drop_in_plac..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (200,885,811 samples, 15.22%)</title><rect x="72.8953%" y="3029" width="15.2218%" height="15" fill="rgb(205,176,3)" fg:x="962019327" fg:w="200885811"/><text x="73.1453%" y="3039.50">&lt;alloc::vec::Vec&lt;T,A&gt; a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (200,885,811 samples, 15.22%)</title><rect x="72.8953%" y="3013" width="15.2218%" height="15" fill="rgb(235,151,15)" fg:x="962019327" fg:w="200885811"/><text x="73.1453%" y="3023.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (200,885,811 samples, 15.22%)</title><rect x="72.8953%" y="2997" width="15.2218%" height="15" fill="rgb(237,209,11)" fg:x="962019327" fg:w="200885811"/><text x="73.1453%" y="3007.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (200,885,811 samples, 15.22%)</title><rect x="72.8953%" y="2981" width="15.2218%" height="15" fill="rgb(243,227,24)" fg:x="962019327" fg:w="200885811"/><text x="73.1453%" y="2991.50">core::ptr::drop_in_plac..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (200,885,811 samples, 15.22%)</title><rect x="72.8953%" y="2965" width="15.2218%" height="15" fill="rgb(239,193,16)" fg:x="962019327" fg:w="200885811"/><text x="73.1453%" y="2975.50">&lt;alloc::vec::Vec&lt;T,A&gt; a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (200,885,811 samples, 15.22%)</title><rect x="72.8953%" y="2949" width="15.2218%" height="15" fill="rgb(231,27,9)" fg:x="962019327" fg:w="200885811"/><text x="73.1453%" y="2959.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (200,885,811 samples, 15.22%)</title><rect x="72.8953%" y="2933" width="15.2218%" height="15" fill="rgb(219,169,10)" fg:x="962019327" fg:w="200885811"/><text x="73.1453%" y="2943.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (200,885,811 samples, 15.22%)</title><rect x="72.8953%" y="2917" width="15.2218%" height="15" fill="rgb(244,229,43)" fg:x="962019327" fg:w="200885811"/><text x="73.1453%" y="2927.50">core::ptr::drop_in_plac..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (200,885,811 samples, 15.22%)</title><rect x="72.8953%" y="2901" width="15.2218%" height="15" fill="rgb(254,38,20)" fg:x="962019327" fg:w="200885811"/><text x="73.1453%" y="2911.50">&lt;alloc::vec::Vec&lt;T,A&gt; a..</text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (200,885,811 samples, 15.22%)</title><rect x="72.8953%" y="2885" width="15.2218%" height="15" fill="rgb(250,47,30)" fg:x="962019327" fg:w="200885811"/><text x="73.1453%" y="2895.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (200,885,811 samples, 15.22%)</title><rect x="72.8953%" y="2869" width="15.2218%" height="15" fill="rgb(224,124,36)" fg:x="962019327" fg:w="200885811"/><text x="73.1453%" y="2879.50">core::ptr::drop_in_plac..</text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (3,144,677 samples, 0.24%)</title><rect x="87.8788%" y="2853" width="0.2383%" height="15" fill="rgb(246,68,51)" fg:x="1159760461" fg:w="3144677"/><text x="88.1288%" y="2863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,144,677 samples, 0.24%)</title><rect x="87.8788%" y="2837" width="0.2383%" height="15" fill="rgb(253,43,49)" fg:x="1159760461" fg:w="3144677"/><text x="88.1288%" y="2847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,144,677 samples, 0.24%)</title><rect x="87.8788%" y="2821" width="0.2383%" height="15" fill="rgb(219,54,36)" fg:x="1159760461" fg:w="3144677"/><text x="88.1288%" y="2831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,144,677 samples, 0.24%)</title><rect x="87.8788%" y="2805" width="0.2383%" height="15" fill="rgb(227,133,34)" fg:x="1159760461" fg:w="3144677"/><text x="88.1288%" y="2815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,144,677 samples, 0.24%)</title><rect x="87.8788%" y="2789" width="0.2383%" height="15" fill="rgb(247,227,15)" fg:x="1159760461" fg:w="3144677"/><text x="88.1288%" y="2799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,144,677 samples, 0.24%)</title><rect x="87.8788%" y="2773" width="0.2383%" height="15" fill="rgb(229,96,14)" fg:x="1159760461" fg:w="3144677"/><text x="88.1288%" y="2783.50"></text></g><g><title>alloc::alloc::dealloc (3,144,677 samples, 0.24%)</title><rect x="87.8788%" y="2757" width="0.2383%" height="15" fill="rgb(220,79,17)" fg:x="1159760461" fg:w="3144677"/><text x="88.1288%" y="2767.50"></text></g><g><title>cfree (3,144,677 samples, 0.24%)</title><rect x="87.8788%" y="2741" width="0.2383%" height="15" fill="rgb(205,131,53)" fg:x="1159760461" fg:w="3144677"/><text x="88.1288%" y="2751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (6,264,043 samples, 0.47%)</title><rect x="88.1171%" y="2933" width="0.4746%" height="15" fill="rgb(209,50,29)" fg:x="1162905138" fg:w="6264043"/><text x="88.3671%" y="2943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (6,264,043 samples, 0.47%)</title><rect x="88.1171%" y="2917" width="0.4746%" height="15" fill="rgb(245,86,46)" fg:x="1162905138" fg:w="6264043"/><text x="88.3671%" y="2927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (6,722,785 samples, 0.51%)</title><rect x="88.5917%" y="2917" width="0.5094%" height="15" fill="rgb(235,66,46)" fg:x="1169169181" fg:w="6722785"/><text x="88.8417%" y="2927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (6,722,785 samples, 0.51%)</title><rect x="88.5917%" y="2901" width="0.5094%" height="15" fill="rgb(232,148,31)" fg:x="1169169181" fg:w="6722785"/><text x="88.8417%" y="2911.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (15,416,431 samples, 1.17%)</title><rect x="88.1171%" y="3125" width="1.1682%" height="15" fill="rgb(217,149,8)" fg:x="1162905138" fg:w="15416431"/><text x="88.3671%" y="3135.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (15,416,431 samples, 1.17%)</title><rect x="88.1171%" y="3109" width="1.1682%" height="15" fill="rgb(209,183,11)" fg:x="1162905138" fg:w="15416431"/><text x="88.3671%" y="3119.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (15,416,431 samples, 1.17%)</title><rect x="88.1171%" y="3093" width="1.1682%" height="15" fill="rgb(208,55,20)" fg:x="1162905138" fg:w="15416431"/><text x="88.3671%" y="3103.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (15,416,431 samples, 1.17%)</title><rect x="88.1171%" y="3077" width="1.1682%" height="15" fill="rgb(218,39,14)" fg:x="1162905138" fg:w="15416431"/><text x="88.3671%" y="3087.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (15,416,431 samples, 1.17%)</title><rect x="88.1171%" y="3061" width="1.1682%" height="15" fill="rgb(216,169,33)" fg:x="1162905138" fg:w="15416431"/><text x="88.3671%" y="3071.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (15,416,431 samples, 1.17%)</title><rect x="88.1171%" y="3045" width="1.1682%" height="15" fill="rgb(233,80,24)" fg:x="1162905138" fg:w="15416431"/><text x="88.3671%" y="3055.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (15,416,431 samples, 1.17%)</title><rect x="88.1171%" y="3029" width="1.1682%" height="15" fill="rgb(213,179,31)" fg:x="1162905138" fg:w="15416431"/><text x="88.3671%" y="3039.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (15,416,431 samples, 1.17%)</title><rect x="88.1171%" y="3013" width="1.1682%" height="15" fill="rgb(209,19,5)" fg:x="1162905138" fg:w="15416431"/><text x="88.3671%" y="3023.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (15,416,431 samples, 1.17%)</title><rect x="88.1171%" y="2997" width="1.1682%" height="15" fill="rgb(219,18,35)" fg:x="1162905138" fg:w="15416431"/><text x="88.3671%" y="3007.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (15,416,431 samples, 1.17%)</title><rect x="88.1171%" y="2981" width="1.1682%" height="15" fill="rgb(209,169,16)" fg:x="1162905138" fg:w="15416431"/><text x="88.3671%" y="2991.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (15,416,431 samples, 1.17%)</title><rect x="88.1171%" y="2965" width="1.1682%" height="15" fill="rgb(245,90,51)" fg:x="1162905138" fg:w="15416431"/><text x="88.3671%" y="2975.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (15,416,431 samples, 1.17%)</title><rect x="88.1171%" y="2949" width="1.1682%" height="15" fill="rgb(220,99,45)" fg:x="1162905138" fg:w="15416431"/><text x="88.3671%" y="2959.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (9,152,388 samples, 0.69%)</title><rect x="88.5917%" y="2933" width="0.6935%" height="15" fill="rgb(249,89,25)" fg:x="1169169181" fg:w="9152388"/><text x="88.8417%" y="2943.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,429,603 samples, 0.18%)</title><rect x="89.1011%" y="2917" width="0.1841%" height="15" fill="rgb(239,193,0)" fg:x="1175891966" fg:w="2429603"/><text x="89.3511%" y="2927.50"></text></g><g><title>main::benchmark::count_nodes (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="3109" width="0.2141%" height="15" fill="rgb(231,126,1)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="3119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="3093" width="0.2141%" height="15" fill="rgb(243,166,3)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="3103.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="3077" width="0.2141%" height="15" fill="rgb(223,22,34)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="3087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="3061" width="0.2141%" height="15" fill="rgb(251,52,51)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="3071.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="3045" width="0.2141%" height="15" fill="rgb(221,165,28)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="3055.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="3029" width="0.2141%" height="15" fill="rgb(218,121,47)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="3039.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="3013" width="0.2141%" height="15" fill="rgb(209,120,9)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="3023.50"></text></g><g><title>main::benchmark::count_nodes (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2997" width="0.2141%" height="15" fill="rgb(236,68,12)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="3007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2981" width="0.2141%" height="15" fill="rgb(225,194,26)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2991.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2965" width="0.2141%" height="15" fill="rgb(231,84,39)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2949" width="0.2141%" height="15" fill="rgb(210,11,45)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2959.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2933" width="0.2141%" height="15" fill="rgb(224,54,52)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2943.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2917" width="0.2141%" height="15" fill="rgb(238,102,14)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2927.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2901" width="0.2141%" height="15" fill="rgb(243,160,52)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2911.50"></text></g><g><title>main::benchmark::count_nodes (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2885" width="0.2141%" height="15" fill="rgb(216,114,19)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2869" width="0.2141%" height="15" fill="rgb(244,166,37)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2879.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2853" width="0.2141%" height="15" fill="rgb(246,29,44)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2837" width="0.2141%" height="15" fill="rgb(215,56,53)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2821" width="0.2141%" height="15" fill="rgb(217,60,2)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2831.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2805" width="0.2141%" height="15" fill="rgb(207,26,24)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2815.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2789" width="0.2141%" height="15" fill="rgb(252,210,15)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2799.50"></text></g><g><title>main::benchmark::count_nodes (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2773" width="0.2141%" height="15" fill="rgb(253,209,26)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2757" width="0.2141%" height="15" fill="rgb(238,170,14)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2767.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2741" width="0.2141%" height="15" fill="rgb(216,178,15)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2725" width="0.2141%" height="15" fill="rgb(250,197,2)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2709" width="0.2141%" height="15" fill="rgb(212,70,42)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2719.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2693" width="0.2141%" height="15" fill="rgb(227,213,9)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2703.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2677" width="0.2141%" height="15" fill="rgb(245,99,25)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2687.50"></text></g><g><title>main::benchmark::count_nodes (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2661" width="0.2141%" height="15" fill="rgb(250,82,29)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2645" width="0.2141%" height="15" fill="rgb(241,226,54)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2655.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2629" width="0.2141%" height="15" fill="rgb(221,99,41)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2613" width="0.2141%" height="15" fill="rgb(213,90,21)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2597" width="0.2141%" height="15" fill="rgb(205,208,24)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2607.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2581" width="0.2141%" height="15" fill="rgb(246,31,12)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2591.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2565" width="0.2141%" height="15" fill="rgb(213,154,6)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2575.50"></text></g><g><title>main::benchmark::count_nodes (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2549" width="0.2141%" height="15" fill="rgb(222,163,29)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2533" width="0.2141%" height="15" fill="rgb(227,201,8)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2,826,098 samples, 0.21%)</title><rect x="89.2852%" y="2517" width="0.2141%" height="15" fill="rgb(233,9,32)" fg:x="1178321569" fg:w="2826098"/><text x="89.5352%" y="2527.50"></text></g><g><title>__rdl_realloc (2,721,505 samples, 0.21%)</title><rect x="89.4994%" y="2821" width="0.2062%" height="15" fill="rgb(217,54,24)" fg:x="1181147667" fg:w="2721505"/><text x="89.7494%" y="2831.50"></text></g><g><title>main::benchmark::extract_path_from_command (6,217,807 samples, 0.47%)</title><rect x="89.4994%" y="3109" width="0.4711%" height="15" fill="rgb(235,192,0)" fg:x="1181147667" fg:w="6217807"/><text x="89.7494%" y="3119.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6,217,807 samples, 0.47%)</title><rect x="89.4994%" y="3093" width="0.4711%" height="15" fill="rgb(235,45,9)" fg:x="1181147667" fg:w="6217807"/><text x="89.7494%" y="3103.50"></text></g><g><title>main::benchmark::extract_path_from_command::_{{closure}} (6,217,807 samples, 0.47%)</title><rect x="89.4994%" y="3077" width="0.4711%" height="15" fill="rgb(246,42,40)" fg:x="1181147667" fg:w="6217807"/><text x="89.7494%" y="3087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6,217,807 samples, 0.47%)</title><rect x="89.4994%" y="3061" width="0.4711%" height="15" fill="rgb(248,111,24)" fg:x="1181147667" fg:w="6217807"/><text x="89.7494%" y="3071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6,217,807 samples, 0.47%)</title><rect x="89.4994%" y="3045" width="0.4711%" height="15" fill="rgb(249,65,22)" fg:x="1181147667" fg:w="6217807"/><text x="89.7494%" y="3055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6,217,807 samples, 0.47%)</title><rect x="89.4994%" y="3029" width="0.4711%" height="15" fill="rgb(238,111,51)" fg:x="1181147667" fg:w="6217807"/><text x="89.7494%" y="3039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6,217,807 samples, 0.47%)</title><rect x="89.4994%" y="3013" width="0.4711%" height="15" fill="rgb(250,118,22)" fg:x="1181147667" fg:w="6217807"/><text x="89.7494%" y="3023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6,217,807 samples, 0.47%)</title><rect x="89.4994%" y="2997" width="0.4711%" height="15" fill="rgb(234,84,26)" fg:x="1181147667" fg:w="6217807"/><text x="89.7494%" y="3007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6,217,807 samples, 0.47%)</title><rect x="89.4994%" y="2981" width="0.4711%" height="15" fill="rgb(243,172,12)" fg:x="1181147667" fg:w="6217807"/><text x="89.7494%" y="2991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6,217,807 samples, 0.47%)</title><rect x="89.4994%" y="2965" width="0.4711%" height="15" fill="rgb(236,150,49)" fg:x="1181147667" fg:w="6217807"/><text x="89.7494%" y="2975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6,217,807 samples, 0.47%)</title><rect x="89.4994%" y="2949" width="0.4711%" height="15" fill="rgb(225,197,26)" fg:x="1181147667" fg:w="6217807"/><text x="89.7494%" y="2959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (6,217,807 samples, 0.47%)</title><rect x="89.4994%" y="2933" width="0.4711%" height="15" fill="rgb(214,17,42)" fg:x="1181147667" fg:w="6217807"/><text x="89.7494%" y="2943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (6,217,807 samples, 0.47%)</title><rect x="89.4994%" y="2917" width="0.4711%" height="15" fill="rgb(224,165,40)" fg:x="1181147667" fg:w="6217807"/><text x="89.7494%" y="2927.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (6,217,807 samples, 0.47%)</title><rect x="89.4994%" y="2901" width="0.4711%" height="15" fill="rgb(246,100,4)" fg:x="1181147667" fg:w="6217807"/><text x="89.7494%" y="2911.50"></text></g><g><title>alloc::raw_vec::finish_grow (6,217,807 samples, 0.47%)</title><rect x="89.4994%" y="2885" width="0.4711%" height="15" fill="rgb(222,103,0)" fg:x="1181147667" fg:w="6217807"/><text x="89.7494%" y="2895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6,217,807 samples, 0.47%)</title><rect x="89.4994%" y="2869" width="0.4711%" height="15" fill="rgb(227,189,26)" fg:x="1181147667" fg:w="6217807"/><text x="89.7494%" y="2879.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6,217,807 samples, 0.47%)</title><rect x="89.4994%" y="2853" width="0.4711%" height="15" fill="rgb(214,202,17)" fg:x="1181147667" fg:w="6217807"/><text x="89.7494%" y="2863.50"></text></g><g><title>alloc::alloc::realloc (6,217,807 samples, 0.47%)</title><rect x="89.4994%" y="2837" width="0.4711%" height="15" fill="rgb(229,111,3)" fg:x="1181147667" fg:w="6217807"/><text x="89.7494%" y="2847.50"></text></g><g><title>realloc (3,496,302 samples, 0.26%)</title><rect x="89.7056%" y="2821" width="0.2649%" height="15" fill="rgb(229,172,15)" fg:x="1183869172" fg:w="3496302"/><text x="89.9556%" y="2831.50"></text></g><g><title>[libc.so.6] (3,496,302 samples, 0.26%)</title><rect x="89.7056%" y="2805" width="0.2649%" height="15" fill="rgb(230,224,35)" fg:x="1183869172" fg:w="3496302"/><text x="89.9556%" y="2815.50"></text></g><g><title>[libc.so.6] (3,496,302 samples, 0.26%)</title><rect x="89.7056%" y="2789" width="0.2649%" height="15" fill="rgb(251,141,6)" fg:x="1183869172" fg:w="3496302"/><text x="89.9556%" y="2799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,854,602 samples, 0.14%)</title><rect x="89.9705%" y="2965" width="0.1405%" height="15" fill="rgb(225,208,6)" fg:x="1187365474" fg:w="1854602"/><text x="90.2205%" y="2975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,854,602 samples, 0.14%)</title><rect x="89.9705%" y="2949" width="0.1405%" height="15" fill="rgb(246,181,16)" fg:x="1187365474" fg:w="1854602"/><text x="90.2205%" y="2959.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,854,602 samples, 0.14%)</title><rect x="89.9705%" y="2933" width="0.1405%" height="15" fill="rgb(227,129,36)" fg:x="1187365474" fg:w="1854602"/><text x="90.2205%" y="2943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,854,602 samples, 0.14%)</title><rect x="89.9705%" y="2917" width="0.1405%" height="15" fill="rgb(248,117,24)" fg:x="1187365474" fg:w="1854602"/><text x="90.2205%" y="2927.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,854,602 samples, 0.14%)</title><rect x="89.9705%" y="2901" width="0.1405%" height="15" fill="rgb(214,185,35)" fg:x="1187365474" fg:w="1854602"/><text x="90.2205%" y="2911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,854,602 samples, 0.14%)</title><rect x="89.9705%" y="2885" width="0.1405%" height="15" fill="rgb(236,150,34)" fg:x="1187365474" fg:w="1854602"/><text x="90.2205%" y="2895.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,854,602 samples, 0.14%)</title><rect x="89.9705%" y="2869" width="0.1405%" height="15" fill="rgb(243,228,27)" fg:x="1187365474" fg:w="1854602"/><text x="90.2205%" y="2879.50"></text></g><g><title>alloc::alloc::realloc (1,854,602 samples, 0.14%)</title><rect x="89.9705%" y="2853" width="0.1405%" height="15" fill="rgb(245,77,44)" fg:x="1187365474" fg:w="1854602"/><text x="90.2205%" y="2863.50"></text></g><g><title>realloc (1,854,602 samples, 0.14%)</title><rect x="89.9705%" y="2837" width="0.1405%" height="15" fill="rgb(235,214,42)" fg:x="1187365474" fg:w="1854602"/><text x="90.2205%" y="2847.50"></text></g><g><title>[libc.so.6] (1,854,602 samples, 0.14%)</title><rect x="89.9705%" y="2821" width="0.1405%" height="15" fill="rgb(221,74,3)" fg:x="1187365474" fg:w="1854602"/><text x="90.2205%" y="2831.50"></text></g><g><title>[libc.so.6] (1,854,602 samples, 0.14%)</title><rect x="89.9705%" y="2805" width="0.1405%" height="15" fill="rgb(206,121,29)" fg:x="1187365474" fg:w="1854602"/><text x="90.2205%" y="2815.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,969,166 samples, 0.15%)</title><rect x="90.1110%" y="2917" width="0.1492%" height="15" fill="rgb(249,131,53)" fg:x="1189220076" fg:w="1969166"/><text x="90.3610%" y="2927.50"></text></g><g><title>&lt;str as alloc::string::SpecToString&gt;::spec_to_string (1,969,166 samples, 0.15%)</title><rect x="90.1110%" y="2901" width="0.1492%" height="15" fill="rgb(236,170,29)" fg:x="1189220076" fg:w="1969166"/><text x="90.3610%" y="2911.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,969,166 samples, 0.15%)</title><rect x="90.1110%" y="2885" width="0.1492%" height="15" fill="rgb(247,96,15)" fg:x="1189220076" fg:w="1969166"/><text x="90.3610%" y="2895.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,969,166 samples, 0.15%)</title><rect x="90.1110%" y="2869" width="0.1492%" height="15" fill="rgb(211,210,7)" fg:x="1189220076" fg:w="1969166"/><text x="90.3610%" y="2879.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,969,166 samples, 0.15%)</title><rect x="90.1110%" y="2853" width="0.1492%" height="15" fill="rgb(240,88,50)" fg:x="1189220076" fg:w="1969166"/><text x="90.3610%" y="2863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,969,166 samples, 0.15%)</title><rect x="90.1110%" y="2837" width="0.1492%" height="15" fill="rgb(209,229,26)" fg:x="1189220076" fg:w="1969166"/><text x="90.3610%" y="2847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,969,166 samples, 0.15%)</title><rect x="90.1110%" y="2821" width="0.1492%" height="15" fill="rgb(210,68,23)" fg:x="1189220076" fg:w="1969166"/><text x="90.3610%" y="2831.50"></text></g><g><title>alloc::slice::hack::to_vec (1,969,166 samples, 0.15%)</title><rect x="90.1110%" y="2805" width="0.1492%" height="15" fill="rgb(229,180,13)" fg:x="1189220076" fg:w="1969166"/><text x="90.3610%" y="2815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,969,166 samples, 0.15%)</title><rect x="90.1110%" y="2789" width="0.1492%" height="15" fill="rgb(236,53,44)" fg:x="1189220076" fg:w="1969166"/><text x="90.3610%" y="2799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,969,166 samples, 0.15%)</title><rect x="90.1110%" y="2773" width="0.1492%" height="15" fill="rgb(244,214,29)" fg:x="1189220076" fg:w="1969166"/><text x="90.3610%" y="2783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,969,166 samples, 0.15%)</title><rect x="90.1110%" y="2757" width="0.1492%" height="15" fill="rgb(220,75,29)" fg:x="1189220076" fg:w="1969166"/><text x="90.3610%" y="2767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,969,166 samples, 0.15%)</title><rect x="90.1110%" y="2741" width="0.1492%" height="15" fill="rgb(214,183,37)" fg:x="1189220076" fg:w="1969166"/><text x="90.3610%" y="2751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,969,166 samples, 0.15%)</title><rect x="90.1110%" y="2725" width="0.1492%" height="15" fill="rgb(239,117,29)" fg:x="1189220076" fg:w="1969166"/><text x="90.3610%" y="2735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,969,166 samples, 0.15%)</title><rect x="90.1110%" y="2709" width="0.1492%" height="15" fill="rgb(237,171,35)" fg:x="1189220076" fg:w="1969166"/><text x="90.3610%" y="2719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,969,166 samples, 0.15%)</title><rect x="90.1110%" y="2693" width="0.1492%" height="15" fill="rgb(229,178,53)" fg:x="1189220076" fg:w="1969166"/><text x="90.3610%" y="2703.50"></text></g><g><title>alloc::alloc::alloc (1,969,166 samples, 0.15%)</title><rect x="90.1110%" y="2677" width="0.1492%" height="15" fill="rgb(210,102,19)" fg:x="1189220076" fg:w="1969166"/><text x="90.3610%" y="2687.50"></text></g><g><title>malloc (1,969,166 samples, 0.15%)</title><rect x="90.1110%" y="2661" width="0.1492%" height="15" fill="rgb(235,127,22)" fg:x="1189220076" fg:w="1969166"/><text x="90.3610%" y="2671.50"></text></g><g><title>[libc.so.6] (1,969,166 samples, 0.15%)</title><rect x="90.1110%" y="2645" width="0.1492%" height="15" fill="rgb(244,31,31)" fg:x="1189220076" fg:w="1969166"/><text x="90.3610%" y="2655.50"></text></g><g><title>main::benchmark::json_to_html_node (7,550,648 samples, 0.57%)</title><rect x="89.9705%" y="3109" width="0.5721%" height="15" fill="rgb(231,43,21)" fg:x="1187365474" fg:w="7550648"/><text x="90.2205%" y="3119.50"></text></g><g><title>main::benchmark::json_to_html_node (7,550,648 samples, 0.57%)</title><rect x="89.9705%" y="3093" width="0.5721%" height="15" fill="rgb(217,131,35)" fg:x="1187365474" fg:w="7550648"/><text x="90.2205%" y="3103.50"></text></g><g><title>main::benchmark::json_to_html_node (7,550,648 samples, 0.57%)</title><rect x="89.9705%" y="3077" width="0.5721%" height="15" fill="rgb(221,149,4)" fg:x="1187365474" fg:w="7550648"/><text x="90.2205%" y="3087.50"></text></g><g><title>main::benchmark::json_to_html_node (7,550,648 samples, 0.57%)</title><rect x="89.9705%" y="3061" width="0.5721%" height="15" fill="rgb(232,170,28)" fg:x="1187365474" fg:w="7550648"/><text x="90.2205%" y="3071.50"></text></g><g><title>main::benchmark::json_to_html_node (7,550,648 samples, 0.57%)</title><rect x="89.9705%" y="3045" width="0.5721%" height="15" fill="rgb(238,56,10)" fg:x="1187365474" fg:w="7550648"/><text x="90.2205%" y="3055.50"></text></g><g><title>main::benchmark::json_to_html_node (7,550,648 samples, 0.57%)</title><rect x="89.9705%" y="3029" width="0.5721%" height="15" fill="rgb(235,196,14)" fg:x="1187365474" fg:w="7550648"/><text x="90.2205%" y="3039.50"></text></g><g><title>main::benchmark::json_to_html_node (7,550,648 samples, 0.57%)</title><rect x="89.9705%" y="3013" width="0.5721%" height="15" fill="rgb(216,45,48)" fg:x="1187365474" fg:w="7550648"/><text x="90.2205%" y="3023.50"></text></g><g><title>main::benchmark::json_to_html_node (7,550,648 samples, 0.57%)</title><rect x="89.9705%" y="2997" width="0.5721%" height="15" fill="rgb(238,213,17)" fg:x="1187365474" fg:w="7550648"/><text x="90.2205%" y="3007.50"></text></g><g><title>main::benchmark::json_to_html_node (7,550,648 samples, 0.57%)</title><rect x="89.9705%" y="2981" width="0.5721%" height="15" fill="rgb(212,13,2)" fg:x="1187365474" fg:w="7550648"/><text x="90.2205%" y="2991.50"></text></g><g><title>main::benchmark::json_to_html_node (5,696,046 samples, 0.43%)</title><rect x="90.1110%" y="2965" width="0.4316%" height="15" fill="rgb(240,114,20)" fg:x="1189220076" fg:w="5696046"/><text x="90.3610%" y="2975.50"></text></g><g><title>main::benchmark::json_to_html_node (5,696,046 samples, 0.43%)</title><rect x="90.1110%" y="2949" width="0.4316%" height="15" fill="rgb(228,41,40)" fg:x="1189220076" fg:w="5696046"/><text x="90.3610%" y="2959.50"></text></g><g><title>main::benchmark::json_to_html_node (5,696,046 samples, 0.43%)</title><rect x="90.1110%" y="2933" width="0.4316%" height="15" fill="rgb(244,132,35)" fg:x="1189220076" fg:w="5696046"/><text x="90.3610%" y="2943.50"></text></g><g><title>main::benchmark::json_to_html_node (3,726,880 samples, 0.28%)</title><rect x="90.2602%" y="2917" width="0.2824%" height="15" fill="rgb(253,189,4)" fg:x="1191189242" fg:w="3726880"/><text x="90.5102%" y="2927.50"></text></g><g><title>serde_json::value::index::&lt;impl core::ops::index::Index&lt;I&gt; for serde_json::value::Value&gt;::index (3,726,880 samples, 0.28%)</title><rect x="90.2602%" y="2901" width="0.2824%" height="15" fill="rgb(224,37,19)" fg:x="1191189242" fg:w="3726880"/><text x="90.5102%" y="2911.50"></text></g><g><title>&lt;&amp;T as serde_json::value::index::Index&gt;::index_into (3,726,880 samples, 0.28%)</title><rect x="90.2602%" y="2885" width="0.2824%" height="15" fill="rgb(235,223,18)" fg:x="1191189242" fg:w="3726880"/><text x="90.5102%" y="2895.50"></text></g><g><title>&lt;str as serde_json::value::index::Index&gt;::index_into (3,726,880 samples, 0.28%)</title><rect x="90.2602%" y="2869" width="0.2824%" height="15" fill="rgb(235,163,25)" fg:x="1191189242" fg:w="3726880"/><text x="90.5102%" y="2879.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (3,726,880 samples, 0.28%)</title><rect x="90.2602%" y="2853" width="0.2824%" height="15" fill="rgb(217,145,28)" fg:x="1191189242" fg:w="3726880"/><text x="90.5102%" y="2863.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (3,726,880 samples, 0.28%)</title><rect x="90.2602%" y="2837" width="0.2824%" height="15" fill="rgb(223,223,32)" fg:x="1191189242" fg:w="3726880"/><text x="90.5102%" y="2847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (3,726,880 samples, 0.28%)</title><rect x="90.2602%" y="2821" width="0.2824%" height="15" fill="rgb(227,189,39)" fg:x="1191189242" fg:w="3726880"/><text x="90.5102%" y="2831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (3,726,880 samples, 0.28%)</title><rect x="90.2602%" y="2805" width="0.2824%" height="15" fill="rgb(248,10,22)" fg:x="1191189242" fg:w="3726880"/><text x="90.5102%" y="2815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (3,726,880 samples, 0.28%)</title><rect x="90.2602%" y="2789" width="0.2824%" height="15" fill="rgb(248,46,39)" fg:x="1191189242" fg:w="3726880"/><text x="90.5102%" y="2799.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (3,726,880 samples, 0.28%)</title><rect x="90.2602%" y="2773" width="0.2824%" height="15" fill="rgb(248,113,48)" fg:x="1191189242" fg:w="3726880"/><text x="90.5102%" y="2783.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::Ord for [T]&gt;::cmp (3,726,880 samples, 0.28%)</title><rect x="90.2602%" y="2757" width="0.2824%" height="15" fill="rgb(245,16,25)" fg:x="1191189242" fg:w="3726880"/><text x="90.5102%" y="2767.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (3,726,880 samples, 0.28%)</title><rect x="90.2602%" y="2741" width="0.2824%" height="15" fill="rgb(249,152,16)" fg:x="1191189242" fg:w="3726880"/><text x="90.5102%" y="2751.50"></text></g><g><title>[libc.so.6] (3,726,880 samples, 0.28%)</title><rect x="90.2602%" y="2725" width="0.2824%" height="15" fill="rgb(250,16,1)" fg:x="1191189242" fg:w="3726880"/><text x="90.5102%" y="2735.50"></text></g><g><title>main::benchmark::apply_frame_modifications (18,392,093 samples, 1.39%)</title><rect x="89.2852%" y="3125" width="1.3936%" height="15" fill="rgb(249,138,3)" fg:x="1178321569" fg:w="18392093"/><text x="89.5352%" y="3135.50"></text></g><g><title>std::io::stdio::_print (1,797,540 samples, 0.14%)</title><rect x="90.5426%" y="3109" width="0.1362%" height="15" fill="rgb(227,71,41)" fg:x="1194916122" fg:w="1797540"/><text x="90.7926%" y="3119.50"></text></g><g><title>std::io::stdio::print_to (1,797,540 samples, 0.14%)</title><rect x="90.5426%" y="3093" width="0.1362%" height="15" fill="rgb(209,184,23)" fg:x="1194916122" fg:w="1797540"/><text x="90.7926%" y="3103.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1,797,540 samples, 0.14%)</title><rect x="90.5426%" y="3077" width="0.1362%" height="15" fill="rgb(223,215,31)" fg:x="1194916122" fg:w="1797540"/><text x="90.7926%" y="3087.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1,797,540 samples, 0.14%)</title><rect x="90.5426%" y="3061" width="0.1362%" height="15" fill="rgb(210,146,28)" fg:x="1194916122" fg:w="1797540"/><text x="90.7926%" y="3071.50"></text></g><g><title>std::io::Write::write_fmt (1,797,540 samples, 0.14%)</title><rect x="90.5426%" y="3045" width="0.1362%" height="15" fill="rgb(209,183,41)" fg:x="1194916122" fg:w="1797540"/><text x="90.7926%" y="3055.50"></text></g><g><title>core::fmt::write (1,797,540 samples, 0.14%)</title><rect x="90.5426%" y="3029" width="0.1362%" height="15" fill="rgb(209,224,45)" fg:x="1194916122" fg:w="1797540"/><text x="90.7926%" y="3039.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1,797,540 samples, 0.14%)</title><rect x="90.5426%" y="3013" width="0.1362%" height="15" fill="rgb(224,209,51)" fg:x="1194916122" fg:w="1797540"/><text x="90.7926%" y="3023.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1,797,540 samples, 0.14%)</title><rect x="90.5426%" y="2997" width="0.1362%" height="15" fill="rgb(223,17,39)" fg:x="1194916122" fg:w="1797540"/><text x="90.7926%" y="3007.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1,797,540 samples, 0.14%)</title><rect x="90.5426%" y="2981" width="0.1362%" height="15" fill="rgb(234,204,37)" fg:x="1194916122" fg:w="1797540"/><text x="90.7926%" y="2991.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1,797,540 samples, 0.14%)</title><rect x="90.5426%" y="2965" width="0.1362%" height="15" fill="rgb(236,120,5)" fg:x="1194916122" fg:w="1797540"/><text x="90.7926%" y="2975.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1,797,540 samples, 0.14%)</title><rect x="90.5426%" y="2949" width="0.1362%" height="15" fill="rgb(248,97,27)" fg:x="1194916122" fg:w="1797540"/><text x="90.7926%" y="2959.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (1,797,540 samples, 0.14%)</title><rect x="90.5426%" y="2933" width="0.1362%" height="15" fill="rgb(240,66,17)" fg:x="1194916122" fg:w="1797540"/><text x="90.7926%" y="2943.50"></text></g><g><title>&lt;std::sys::pal::unix::stdio::Stdout as std::io::Write&gt;::write (1,797,540 samples, 0.14%)</title><rect x="90.5426%" y="2917" width="0.1362%" height="15" fill="rgb(210,79,3)" fg:x="1194916122" fg:w="1797540"/><text x="90.7926%" y="2927.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (1,797,540 samples, 0.14%)</title><rect x="90.5426%" y="2901" width="0.1362%" height="15" fill="rgb(214,176,27)" fg:x="1194916122" fg:w="1797540"/><text x="90.7926%" y="2911.50"></text></g><g><title>write (1,797,540 samples, 0.14%)</title><rect x="90.5426%" y="2885" width="0.1362%" height="15" fill="rgb(235,185,3)" fg:x="1194916122" fg:w="1797540"/><text x="90.7926%" y="2895.50"></text></g><g><title>[libc.so.6] (1,797,540 samples, 0.14%)</title><rect x="90.5426%" y="2869" width="0.1362%" height="15" fill="rgb(227,24,12)" fg:x="1194916122" fg:w="1797540"/><text x="90.7926%" y="2879.50"></text></g><g><title>[libc.so.6] (1,797,540 samples, 0.14%)</title><rect x="90.5426%" y="2853" width="0.1362%" height="15" fill="rgb(252,169,48)" fg:x="1194916122" fg:w="1797540"/><text x="90.7926%" y="2863.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2,732,656 samples, 0.21%)</title><rect x="90.9265%" y="2917" width="0.2071%" height="15" fill="rgb(212,65,1)" fg:x="1199982507" fg:w="2732656"/><text x="91.1765%" y="2927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2,732,656 samples, 0.21%)</title><rect x="90.9265%" y="2901" width="0.2071%" height="15" fill="rgb(242,39,24)" fg:x="1199982507" fg:w="2732656"/><text x="91.1765%" y="2911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (2,732,656 samples, 0.21%)</title><rect x="90.9265%" y="2885" width="0.2071%" height="15" fill="rgb(249,32,23)" fg:x="1199982507" fg:w="2732656"/><text x="91.1765%" y="2895.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3,465,540 samples, 0.26%)</title><rect x="91.1336%" y="2901" width="0.2626%" height="15" fill="rgb(251,195,23)" fg:x="1202715163" fg:w="3465540"/><text x="91.3836%" y="2911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,465,540 samples, 0.26%)</title><rect x="91.1336%" y="2885" width="0.2626%" height="15" fill="rgb(236,174,8)" fg:x="1202715163" fg:w="3465540"/><text x="91.3836%" y="2895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (3,465,540 samples, 0.26%)</title><rect x="91.1336%" y="2869" width="0.2626%" height="15" fill="rgb(220,197,8)" fg:x="1202715163" fg:w="3465540"/><text x="91.3836%" y="2879.50"></text></g><g><title>main::benchmark::clear_dirty_flags (16,121,351 samples, 1.22%)</title><rect x="90.6789%" y="3125" width="1.2216%" height="15" fill="rgb(240,108,37)" fg:x="1196713662" fg:w="16121351"/><text x="90.9289%" y="3135.50"></text></g><g><title>main::benchmark::clear_dirty_flags (16,121,351 samples, 1.22%)</title><rect x="90.6789%" y="3109" width="1.2216%" height="15" fill="rgb(232,176,24)" fg:x="1196713662" fg:w="16121351"/><text x="90.9289%" y="3119.50"></text></g><g><title>main::benchmark::clear_dirty_flags (16,121,351 samples, 1.22%)</title><rect x="90.6789%" y="3093" width="1.2216%" height="15" fill="rgb(243,35,29)" fg:x="1196713662" fg:w="16121351"/><text x="90.9289%" y="3103.50"></text></g><g><title>main::benchmark::clear_dirty_flags (16,121,351 samples, 1.22%)</title><rect x="90.6789%" y="3077" width="1.2216%" height="15" fill="rgb(210,37,18)" fg:x="1196713662" fg:w="16121351"/><text x="90.9289%" y="3087.50"></text></g><g><title>main::benchmark::clear_dirty_flags (16,121,351 samples, 1.22%)</title><rect x="90.6789%" y="3061" width="1.2216%" height="15" fill="rgb(224,184,40)" fg:x="1196713662" fg:w="16121351"/><text x="90.9289%" y="3071.50"></text></g><g><title>main::benchmark::clear_dirty_flags (16,121,351 samples, 1.22%)</title><rect x="90.6789%" y="3045" width="1.2216%" height="15" fill="rgb(236,39,29)" fg:x="1196713662" fg:w="16121351"/><text x="90.9289%" y="3055.50"></text></g><g><title>main::benchmark::clear_dirty_flags (16,121,351 samples, 1.22%)</title><rect x="90.6789%" y="3029" width="1.2216%" height="15" fill="rgb(232,48,39)" fg:x="1196713662" fg:w="16121351"/><text x="90.9289%" y="3039.50"></text></g><g><title>main::benchmark::clear_dirty_flags (16,121,351 samples, 1.22%)</title><rect x="90.6789%" y="3013" width="1.2216%" height="15" fill="rgb(236,34,42)" fg:x="1196713662" fg:w="16121351"/><text x="90.9289%" y="3023.50"></text></g><g><title>main::benchmark::clear_dirty_flags (16,121,351 samples, 1.22%)</title><rect x="90.6789%" y="2997" width="1.2216%" height="15" fill="rgb(243,106,37)" fg:x="1196713662" fg:w="16121351"/><text x="90.9289%" y="3007.50"></text></g><g><title>main::benchmark::clear_dirty_flags (16,121,351 samples, 1.22%)</title><rect x="90.6789%" y="2981" width="1.2216%" height="15" fill="rgb(218,96,6)" fg:x="1196713662" fg:w="16121351"/><text x="90.9289%" y="2991.50"></text></g><g><title>main::benchmark::clear_dirty_flags (16,121,351 samples, 1.22%)</title><rect x="90.6789%" y="2965" width="1.2216%" height="15" fill="rgb(235,130,12)" fg:x="1196713662" fg:w="16121351"/><text x="90.9289%" y="2975.50"></text></g><g><title>main::benchmark::clear_dirty_flags (16,121,351 samples, 1.22%)</title><rect x="90.6789%" y="2949" width="1.2216%" height="15" fill="rgb(231,95,0)" fg:x="1196713662" fg:w="16121351"/><text x="90.9289%" y="2959.50"></text></g><g><title>main::benchmark::clear_dirty_flags (12,852,506 samples, 0.97%)</title><rect x="90.9265%" y="2933" width="0.9739%" height="15" fill="rgb(228,12,23)" fg:x="1199982507" fg:w="12852506"/><text x="91.1765%" y="2943.50"></text></g><g><title>main::benchmark::clear_dirty_flags (10,119,850 samples, 0.77%)</title><rect x="91.1336%" y="2917" width="0.7668%" height="15" fill="rgb(216,12,1)" fg:x="1202715163" fg:w="10119850"/><text x="91.3836%" y="2927.50"></text></g><g><title>main::benchmark::clear_dirty_flags (6,654,310 samples, 0.50%)</title><rect x="91.3962%" y="2901" width="0.5042%" height="15" fill="rgb(219,59,3)" fg:x="1206180703" fg:w="6654310"/><text x="91.6462%" y="2911.50"></text></g><g><title>main::benchmark::clear_dirty_flags (3,426,121 samples, 0.26%)</title><rect x="91.6408%" y="2885" width="0.2596%" height="15" fill="rgb(215,208,46)" fg:x="1209408892" fg:w="3426121"/><text x="91.8908%" y="2895.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3,426,121 samples, 0.26%)</title><rect x="91.6408%" y="2869" width="0.2596%" height="15" fill="rgb(254,224,29)" fg:x="1209408892" fg:w="3426121"/><text x="91.8908%" y="2879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,426,121 samples, 0.26%)</title><rect x="91.6408%" y="2853" width="0.2596%" height="15" fill="rgb(232,14,29)" fg:x="1209408892" fg:w="3426121"/><text x="91.8908%" y="2863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (3,426,121 samples, 0.26%)</title><rect x="91.6408%" y="2837" width="0.2596%" height="15" fill="rgb(208,45,52)" fg:x="1209408892" fg:w="3426121"/><text x="91.8908%" y="2847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,569,410 samples, 0.27%)</title><rect x="91.9004%" y="2885" width="0.2705%" height="15" fill="rgb(234,191,28)" fg:x="1212835013" fg:w="3569410"/><text x="92.1504%" y="2895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (3,569,410 samples, 0.27%)</title><rect x="91.9004%" y="2869" width="0.2705%" height="15" fill="rgb(244,67,43)" fg:x="1212835013" fg:w="3569410"/><text x="92.1504%" y="2879.50"></text></g><g><title>main::benchmark::count_nodes (10,956,172 samples, 0.83%)</title><rect x="91.9004%" y="3125" width="0.8302%" height="15" fill="rgb(236,189,24)" fg:x="1212835013" fg:w="10956172"/><text x="92.1504%" y="3135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (10,956,172 samples, 0.83%)</title><rect x="91.9004%" y="3109" width="0.8302%" height="15" fill="rgb(239,214,33)" fg:x="1212835013" fg:w="10956172"/><text x="92.1504%" y="3119.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (10,956,172 samples, 0.83%)</title><rect x="91.9004%" y="3093" width="0.8302%" height="15" fill="rgb(226,176,41)" fg:x="1212835013" fg:w="10956172"/><text x="92.1504%" y="3103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,956,172 samples, 0.83%)</title><rect x="91.9004%" y="3077" width="0.8302%" height="15" fill="rgb(248,47,8)" fg:x="1212835013" fg:w="10956172"/><text x="92.1504%" y="3087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,956,172 samples, 0.83%)</title><rect x="91.9004%" y="3061" width="0.8302%" height="15" fill="rgb(218,81,44)" fg:x="1212835013" fg:w="10956172"/><text x="92.1504%" y="3071.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (10,956,172 samples, 0.83%)</title><rect x="91.9004%" y="3045" width="0.8302%" height="15" fill="rgb(213,98,6)" fg:x="1212835013" fg:w="10956172"/><text x="92.1504%" y="3055.50"></text></g><g><title>core::ops::function::FnMut::call_mut (10,956,172 samples, 0.83%)</title><rect x="91.9004%" y="3029" width="0.8302%" height="15" fill="rgb(222,85,22)" fg:x="1212835013" fg:w="10956172"/><text x="92.1504%" y="3039.50"></text></g><g><title>main::benchmark::count_nodes (10,956,172 samples, 0.83%)</title><rect x="91.9004%" y="3013" width="0.8302%" height="15" fill="rgb(239,46,39)" fg:x="1212835013" fg:w="10956172"/><text x="92.1504%" y="3023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (10,956,172 samples, 0.83%)</title><rect x="91.9004%" y="2997" width="0.8302%" height="15" fill="rgb(237,12,29)" fg:x="1212835013" fg:w="10956172"/><text x="92.1504%" y="3007.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (10,956,172 samples, 0.83%)</title><rect x="91.9004%" y="2981" width="0.8302%" height="15" fill="rgb(214,77,8)" fg:x="1212835013" fg:w="10956172"/><text x="92.1504%" y="2991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,956,172 samples, 0.83%)</title><rect x="91.9004%" y="2965" width="0.8302%" height="15" fill="rgb(217,168,37)" fg:x="1212835013" fg:w="10956172"/><text x="92.1504%" y="2975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,956,172 samples, 0.83%)</title><rect x="91.9004%" y="2949" width="0.8302%" height="15" fill="rgb(221,217,23)" fg:x="1212835013" fg:w="10956172"/><text x="92.1504%" y="2959.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (10,956,172 samples, 0.83%)</title><rect x="91.9004%" y="2933" width="0.8302%" height="15" fill="rgb(243,229,36)" fg:x="1212835013" fg:w="10956172"/><text x="92.1504%" y="2943.50"></text></g><g><title>core::ops::function::FnMut::call_mut (10,956,172 samples, 0.83%)</title><rect x="91.9004%" y="2917" width="0.8302%" height="15" fill="rgb(251,163,40)" fg:x="1212835013" fg:w="10956172"/><text x="92.1504%" y="2927.50"></text></g><g><title>main::benchmark::count_nodes (10,956,172 samples, 0.83%)</title><rect x="91.9004%" y="2901" width="0.8302%" height="15" fill="rgb(237,222,12)" fg:x="1212835013" fg:w="10956172"/><text x="92.1504%" y="2911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (7,386,762 samples, 0.56%)</title><rect x="92.1709%" y="2885" width="0.5597%" height="15" fill="rgb(248,132,6)" fg:x="1216404423" fg:w="7386762"/><text x="92.4209%" y="2895.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (7,386,762 samples, 0.56%)</title><rect x="92.1709%" y="2869" width="0.5597%" height="15" fill="rgb(227,167,50)" fg:x="1216404423" fg:w="7386762"/><text x="92.4209%" y="2879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,386,762 samples, 0.56%)</title><rect x="92.1709%" y="2853" width="0.5597%" height="15" fill="rgb(242,84,37)" fg:x="1216404423" fg:w="7386762"/><text x="92.4209%" y="2863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,386,762 samples, 0.56%)</title><rect x="92.1709%" y="2837" width="0.5597%" height="15" fill="rgb(212,4,50)" fg:x="1216404423" fg:w="7386762"/><text x="92.4209%" y="2847.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (7,386,762 samples, 0.56%)</title><rect x="92.1709%" y="2821" width="0.5597%" height="15" fill="rgb(230,228,32)" fg:x="1216404423" fg:w="7386762"/><text x="92.4209%" y="2831.50"></text></g><g><title>core::ops::function::FnMut::call_mut (7,386,762 samples, 0.56%)</title><rect x="92.1709%" y="2805" width="0.5597%" height="15" fill="rgb(248,217,23)" fg:x="1216404423" fg:w="7386762"/><text x="92.4209%" y="2815.50"></text></g><g><title>main::benchmark::count_nodes (7,386,762 samples, 0.56%)</title><rect x="92.1709%" y="2789" width="0.5597%" height="15" fill="rgb(238,197,32)" fg:x="1216404423" fg:w="7386762"/><text x="92.4209%" y="2799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (7,386,762 samples, 0.56%)</title><rect x="92.1709%" y="2773" width="0.5597%" height="15" fill="rgb(236,106,1)" fg:x="1216404423" fg:w="7386762"/><text x="92.4209%" y="2783.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (7,386,762 samples, 0.56%)</title><rect x="92.1709%" y="2757" width="0.5597%" height="15" fill="rgb(219,228,13)" fg:x="1216404423" fg:w="7386762"/><text x="92.4209%" y="2767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,386,762 samples, 0.56%)</title><rect x="92.1709%" y="2741" width="0.5597%" height="15" fill="rgb(238,30,35)" fg:x="1216404423" fg:w="7386762"/><text x="92.4209%" y="2751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,386,762 samples, 0.56%)</title><rect x="92.1709%" y="2725" width="0.5597%" height="15" fill="rgb(236,70,23)" fg:x="1216404423" fg:w="7386762"/><text x="92.4209%" y="2735.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (7,386,762 samples, 0.56%)</title><rect x="92.1709%" y="2709" width="0.5597%" height="15" fill="rgb(249,104,48)" fg:x="1216404423" fg:w="7386762"/><text x="92.4209%" y="2719.50"></text></g><g><title>core::ops::function::FnMut::call_mut (7,386,762 samples, 0.56%)</title><rect x="92.1709%" y="2693" width="0.5597%" height="15" fill="rgb(254,117,50)" fg:x="1216404423" fg:w="7386762"/><text x="92.4209%" y="2703.50"></text></g><g><title>main::benchmark::count_nodes (7,386,762 samples, 0.56%)</title><rect x="92.1709%" y="2677" width="0.5597%" height="15" fill="rgb(223,152,4)" fg:x="1216404423" fg:w="7386762"/><text x="92.4209%" y="2687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (7,386,762 samples, 0.56%)</title><rect x="92.1709%" y="2661" width="0.5597%" height="15" fill="rgb(245,6,2)" fg:x="1216404423" fg:w="7386762"/><text x="92.4209%" y="2671.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (7,386,762 samples, 0.56%)</title><rect x="92.1709%" y="2645" width="0.5597%" height="15" fill="rgb(249,150,24)" fg:x="1216404423" fg:w="7386762"/><text x="92.4209%" y="2655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,386,762 samples, 0.56%)</title><rect x="92.1709%" y="2629" width="0.5597%" height="15" fill="rgb(228,185,42)" fg:x="1216404423" fg:w="7386762"/><text x="92.4209%" y="2639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,386,762 samples, 0.56%)</title><rect x="92.1709%" y="2613" width="0.5597%" height="15" fill="rgb(226,39,33)" fg:x="1216404423" fg:w="7386762"/><text x="92.4209%" y="2623.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2597" width="0.2762%" height="15" fill="rgb(221,166,19)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2607.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2581" width="0.2762%" height="15" fill="rgb(209,109,2)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2591.50"></text></g><g><title>main::benchmark::count_nodes (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2565" width="0.2762%" height="15" fill="rgb(252,216,26)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2549" width="0.2762%" height="15" fill="rgb(227,173,36)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2559.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2533" width="0.2762%" height="15" fill="rgb(209,90,7)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2517" width="0.2762%" height="15" fill="rgb(250,194,11)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2501" width="0.2762%" height="15" fill="rgb(220,72,50)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2511.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2485" width="0.2762%" height="15" fill="rgb(222,106,48)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2495.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2469" width="0.2762%" height="15" fill="rgb(216,220,45)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2479.50"></text></g><g><title>main::benchmark::count_nodes (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2453" width="0.2762%" height="15" fill="rgb(234,112,18)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2437" width="0.2762%" height="15" fill="rgb(206,179,9)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2447.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2421" width="0.2762%" height="15" fill="rgb(215,115,40)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2405" width="0.2762%" height="15" fill="rgb(222,69,34)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2389" width="0.2762%" height="15" fill="rgb(209,161,10)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2399.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2373" width="0.2762%" height="15" fill="rgb(217,6,38)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2383.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2357" width="0.2762%" height="15" fill="rgb(229,229,48)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2367.50"></text></g><g><title>main::benchmark::count_nodes (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2341" width="0.2762%" height="15" fill="rgb(225,21,28)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2325" width="0.2762%" height="15" fill="rgb(206,33,13)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2335.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2309" width="0.2762%" height="15" fill="rgb(242,178,17)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2293" width="0.2762%" height="15" fill="rgb(220,162,5)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2277" width="0.2762%" height="15" fill="rgb(210,33,43)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2287.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2261" width="0.2762%" height="15" fill="rgb(216,116,54)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2271.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2245" width="0.2762%" height="15" fill="rgb(249,92,24)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2255.50"></text></g><g><title>main::benchmark::count_nodes (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2229" width="0.2762%" height="15" fill="rgb(231,189,14)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2213" width="0.2762%" height="15" fill="rgb(230,8,41)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2223.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2197" width="0.2762%" height="15" fill="rgb(249,7,27)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2181" width="0.2762%" height="15" fill="rgb(232,86,5)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2191.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2165" width="0.2762%" height="15" fill="rgb(224,175,18)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2175.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2149" width="0.2762%" height="15" fill="rgb(220,129,12)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2159.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2133" width="0.2762%" height="15" fill="rgb(210,19,36)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2143.50"></text></g><g><title>main::benchmark::count_nodes (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2117" width="0.2762%" height="15" fill="rgb(219,96,14)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2101" width="0.2762%" height="15" fill="rgb(249,106,1)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2111.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2085" width="0.2762%" height="15" fill="rgb(249,155,20)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2095.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2069" width="0.2762%" height="15" fill="rgb(244,168,9)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2079.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2053" width="0.2762%" height="15" fill="rgb(216,23,50)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2063.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2037" width="0.2762%" height="15" fill="rgb(224,219,20)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2047.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2021" width="0.2762%" height="15" fill="rgb(222,156,15)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2031.50"></text></g><g><title>main::benchmark::count_nodes (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="2005" width="0.2762%" height="15" fill="rgb(231,97,17)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="2015.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1989" width="0.2762%" height="15" fill="rgb(218,70,48)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1999.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1973" width="0.2762%" height="15" fill="rgb(212,196,52)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1983.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1957" width="0.2762%" height="15" fill="rgb(243,203,18)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1967.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1941" width="0.2762%" height="15" fill="rgb(252,125,41)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1951.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1925" width="0.2762%" height="15" fill="rgb(223,180,33)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1935.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1909" width="0.2762%" height="15" fill="rgb(254,159,46)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1919.50"></text></g><g><title>main::benchmark::count_nodes (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1893" width="0.2762%" height="15" fill="rgb(254,38,10)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1903.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1877" width="0.2762%" height="15" fill="rgb(208,217,32)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1887.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1861" width="0.2762%" height="15" fill="rgb(221,120,13)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1871.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1845" width="0.2762%" height="15" fill="rgb(246,54,52)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1855.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1829" width="0.2762%" height="15" fill="rgb(242,34,25)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1839.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1813" width="0.2762%" height="15" fill="rgb(247,209,9)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1823.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1797" width="0.2762%" height="15" fill="rgb(228,71,26)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1807.50"></text></g><g><title>main::benchmark::count_nodes (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1781" width="0.2762%" height="15" fill="rgb(222,145,49)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1791.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1765" width="0.2762%" height="15" fill="rgb(218,121,17)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1775.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1749" width="0.2762%" height="15" fill="rgb(244,50,7)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1759.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1733" width="0.2762%" height="15" fill="rgb(246,229,37)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1743.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1717" width="0.2762%" height="15" fill="rgb(225,18,5)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1727.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1701" width="0.2762%" height="15" fill="rgb(213,204,8)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1711.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1685" width="0.2762%" height="15" fill="rgb(238,103,6)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1695.50"></text></g><g><title>main::benchmark::count_nodes (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1669" width="0.2762%" height="15" fill="rgb(222,25,35)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1653" width="0.2762%" height="15" fill="rgb(213,203,35)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1663.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1637" width="0.2762%" height="15" fill="rgb(221,79,53)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1621" width="0.2762%" height="15" fill="rgb(243,200,35)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1631.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1605" width="0.2762%" height="15" fill="rgb(248,60,25)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1615.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1589" width="0.2762%" height="15" fill="rgb(227,53,46)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1599.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1573" width="0.2762%" height="15" fill="rgb(216,120,32)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1583.50"></text></g><g><title>main::benchmark::count_nodes (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1557" width="0.2762%" height="15" fill="rgb(220,134,1)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1567.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1541" width="0.2762%" height="15" fill="rgb(237,168,5)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1551.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (3,645,072 samples, 0.28%)</title><rect x="92.4544%" y="1525" width="0.2762%" height="15" fill="rgb(231,100,33)" fg:x="1220146113" fg:w="3645072"/><text x="92.7044%" y="1535.50"></text></g><g><title>main::benchmark::invoke_bitvector_layout (2,936,175 samples, 0.22%)</title><rect x="92.7306%" y="3125" width="0.2225%" height="15" fill="rgb(236,177,47)" fg:x="1223791185" fg:w="2936175"/><text x="92.9806%" y="3135.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_bitvector_incremental_with_stats (2,936,175 samples, 0.22%)</title><rect x="92.7306%" y="3109" width="0.2225%" height="15" fill="rgb(235,7,49)" fg:x="1223791185" fg:w="2936175"/><text x="92.9806%" y="3119.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_recursive_bitvector_incremental (2,936,175 samples, 0.22%)</title><rect x="92.7306%" y="3093" width="0.2225%" height="15" fill="rgb(232,119,22)" fg:x="1223791185" fg:w="2936175"/><text x="92.9806%" y="3103.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_tree_recursive_bitvector_incremental (2,936,175 samples, 0.22%)</title><rect x="92.7306%" y="3077" width="0.2225%" height="15" fill="rgb(254,73,53)" fg:x="1223791185" fg:w="2936175"/><text x="92.9806%" y="3087.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::process_node_generated_bitvector_incremental (2,936,175 samples, 0.22%)</title><rect x="92.7306%" y="3061" width="0.2225%" height="15" fill="rgb(251,35,20)" fg:x="1223791185" fg:w="2936175"/><text x="92.9806%" y="3071.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::matches_id_id (2,936,175 samples, 0.22%)</title><rect x="92.7306%" y="3045" width="0.2225%" height="15" fill="rgb(241,119,20)" fg:x="1223791185" fg:w="2936175"/><text x="92.9806%" y="3055.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::get_node_id_id (2,936,175 samples, 0.22%)</title><rect x="92.7306%" y="3029" width="0.2225%" height="15" fill="rgb(207,102,14)" fg:x="1223791185" fg:w="2936175"/><text x="92.9806%" y="3039.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2,936,175 samples, 0.22%)</title><rect x="92.7306%" y="3013" width="0.2225%" height="15" fill="rgb(248,201,50)" fg:x="1223791185" fg:w="2936175"/><text x="92.9806%" y="3023.50"></text></g><g><title>css_bitvector_compiler::generated_bitvector_functions::get_node_id_id::_{{closure}} (2,936,175 samples, 0.22%)</title><rect x="92.7306%" y="2997" width="0.2225%" height="15" fill="rgb(222,185,44)" fg:x="1223791185" fg:w="2936175"/><text x="92.9806%" y="3007.50"></text></g><g><title>css_bitvector_compiler::BitVector::with_capacity (3,594,439 samples, 0.27%)</title><rect x="92.9531%" y="3093" width="0.2724%" height="15" fill="rgb(218,107,18)" fg:x="1226727360" fg:w="3594439"/><text x="93.2031%" y="3103.50"></text></g><g><title>alloc::vec::from_elem (3,594,439 samples, 0.27%)</title><rect x="92.9531%" y="3077" width="0.2724%" height="15" fill="rgb(237,177,39)" fg:x="1226727360" fg:w="3594439"/><text x="93.2031%" y="3087.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (3,594,439 samples, 0.27%)</title><rect x="92.9531%" y="3061" width="0.2724%" height="15" fill="rgb(246,69,6)" fg:x="1226727360" fg:w="3594439"/><text x="93.2031%" y="3071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (3,594,439 samples, 0.27%)</title><rect x="92.9531%" y="3045" width="0.2724%" height="15" fill="rgb(234,208,37)" fg:x="1226727360" fg:w="3594439"/><text x="93.2031%" y="3055.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (3,594,439 samples, 0.27%)</title><rect x="92.9531%" y="3029" width="0.2724%" height="15" fill="rgb(225,4,6)" fg:x="1226727360" fg:w="3594439"/><text x="93.2031%" y="3039.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,594,439 samples, 0.27%)</title><rect x="92.9531%" y="3013" width="0.2724%" height="15" fill="rgb(233,45,0)" fg:x="1226727360" fg:w="3594439"/><text x="93.2031%" y="3023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (3,594,439 samples, 0.27%)</title><rect x="92.9531%" y="2997" width="0.2724%" height="15" fill="rgb(226,136,5)" fg:x="1226727360" fg:w="3594439"/><text x="93.2031%" y="3007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,594,439 samples, 0.27%)</title><rect x="92.9531%" y="2981" width="0.2724%" height="15" fill="rgb(211,91,47)" fg:x="1226727360" fg:w="3594439"/><text x="93.2031%" y="2991.50"></text></g><g><title>alloc::alloc::alloc_zeroed (3,594,439 samples, 0.27%)</title><rect x="92.9531%" y="2965" width="0.2724%" height="15" fill="rgb(242,88,51)" fg:x="1226727360" fg:w="3594439"/><text x="93.2031%" y="2975.50"></text></g><g><title>__rdl_alloc_zeroed (3,594,439 samples, 0.27%)</title><rect x="92.9531%" y="2949" width="0.2724%" height="15" fill="rgb(230,91,28)" fg:x="1226727360" fg:w="3594439"/><text x="93.2031%" y="2959.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (3,594,439 samples, 0.27%)</title><rect x="92.9531%" y="2933" width="0.2724%" height="15" fill="rgb(254,186,29)" fg:x="1226727360" fg:w="3594439"/><text x="93.2031%" y="2943.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_node_generated_incremental (3,010,008 samples, 0.23%)</title><rect x="93.2254%" y="3077" width="0.2281%" height="15" fill="rgb(238,6,4)" fg:x="1230321799" fg:w="3010008"/><text x="93.4754%" y="3087.50"></text></g><g><title>main::benchmark::benchmark_accumulated_modifications (1,094,614,618 samples, 82.94%)</title><rect x="10.7618%" y="3141" width="82.9425%" height="15" fill="rgb(221,151,16)" fg:x="142026632" fg:w="1094614618"/><text x="11.0118%" y="3151.50">main::benchmark::benchmark_accumulated_modifications</text></g><g><title>main::benchmark::invoke_trivector_layout (9,913,890 samples, 0.75%)</title><rect x="92.9531%" y="3125" width="0.7512%" height="15" fill="rgb(251,143,52)" fg:x="1226727360" fg:w="9913890"/><text x="93.2031%" y="3135.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_tree_incremental_with_stats (9,913,890 samples, 0.75%)</title><rect x="92.9531%" y="3109" width="0.7512%" height="15" fill="rgb(206,90,15)" fg:x="1226727360" fg:w="9913890"/><text x="93.2031%" y="3119.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_tree_recursive_incremental (6,319,451 samples, 0.48%)</title><rect x="93.2254%" y="3093" width="0.4788%" height="15" fill="rgb(218,35,8)" fg:x="1230321799" fg:w="6319451"/><text x="93.4754%" y="3103.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_tree_recursive_incremental (3,309,443 samples, 0.25%)</title><rect x="93.4535%" y="3077" width="0.2508%" height="15" fill="rgb(239,215,6)" fg:x="1233331807" fg:w="3309443"/><text x="93.7035%" y="3087.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::process_node_generated_incremental (3,309,443 samples, 0.25%)</title><rect x="93.4535%" y="3061" width="0.2508%" height="15" fill="rgb(245,116,39)" fg:x="1233331807" fg:w="3309443"/><text x="93.7035%" y="3071.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::matches_class_id (3,309,443 samples, 0.25%)</title><rect x="93.4535%" y="3045" width="0.2508%" height="15" fill="rgb(242,65,28)" fg:x="1233331807" fg:w="3309443"/><text x="93.7035%" y="3055.50"></text></g><g><title>css_bitvector_compiler::generated_istate_functions::node_has_class_id (3,309,443 samples, 0.25%)</title><rect x="93.4535%" y="3029" width="0.2508%" height="15" fill="rgb(252,132,53)" fg:x="1233331807" fg:w="3309443"/><text x="93.7035%" y="3039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3,309,443 samples, 0.25%)</title><rect x="93.4535%" y="3013" width="0.2508%" height="15" fill="rgb(224,159,50)" fg:x="1233331807" fg:w="3309443"/><text x="93.7035%" y="3023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3,309,443 samples, 0.25%)</title><rect x="93.4535%" y="2997" width="0.2508%" height="15" fill="rgb(224,93,4)" fg:x="1233331807" fg:w="3309443"/><text x="93.7035%" y="3007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3,309,443 samples, 0.25%)</title><rect x="93.4535%" y="2981" width="0.2508%" height="15" fill="rgb(208,81,34)" fg:x="1233331807" fg:w="3309443"/><text x="93.7035%" y="2991.50"></text></g><g><title>hashbrown::map::make_hash (3,309,443 samples, 0.25%)</title><rect x="93.4535%" y="2965" width="0.2508%" height="15" fill="rgb(233,92,54)" fg:x="1233331807" fg:w="3309443"/><text x="93.7035%" y="2975.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,309,443 samples, 0.25%)</title><rect x="93.4535%" y="2949" width="0.2508%" height="15" fill="rgb(237,21,14)" fg:x="1233331807" fg:w="3309443"/><text x="93.7035%" y="2959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3,309,443 samples, 0.25%)</title><rect x="93.4535%" y="2933" width="0.2508%" height="15" fill="rgb(249,128,51)" fg:x="1233331807" fg:w="3309443"/><text x="93.7035%" y="2943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3,309,443 samples, 0.25%)</title><rect x="93.4535%" y="2917" width="0.2508%" height="15" fill="rgb(223,129,24)" fg:x="1233331807" fg:w="3309443"/><text x="93.7035%" y="2927.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (3,309,443 samples, 0.25%)</title><rect x="93.4535%" y="2901" width="0.2508%" height="15" fill="rgb(231,168,25)" fg:x="1233331807" fg:w="3309443"/><text x="93.7035%" y="2911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3,309,443 samples, 0.25%)</title><rect x="93.4535%" y="2885" width="0.2508%" height="15" fill="rgb(224,39,20)" fg:x="1233331807" fg:w="3309443"/><text x="93.7035%" y="2895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3,309,443 samples, 0.25%)</title><rect x="93.4535%" y="2869" width="0.2508%" height="15" fill="rgb(225,152,53)" fg:x="1233331807" fg:w="3309443"/><text x="93.7035%" y="2879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3,309,443 samples, 0.25%)</title><rect x="93.4535%" y="2853" width="0.2508%" height="15" fill="rgb(252,17,24)" fg:x="1233331807" fg:w="3309443"/><text x="93.7035%" y="2863.50"></text></g><g><title>core::hash::sip::u8to64_le (3,309,443 samples, 0.25%)</title><rect x="93.4535%" y="2837" width="0.2508%" height="15" fill="rgb(250,114,30)" fg:x="1233331807" fg:w="3309443"/><text x="93.7035%" y="2847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3,309,443 samples, 0.25%)</title><rect x="93.4535%" y="2821" width="0.2508%" height="15" fill="rgb(229,5,4)" fg:x="1233331807" fg:w="3309443"/><text x="93.7035%" y="2831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,139,845 samples, 0.16%)</title><rect x="93.7043%" y="3125" width="0.1621%" height="15" fill="rgb(225,176,49)" fg:x="1236641250" fg:w="2139845"/><text x="93.9543%" y="3135.50"></text></g><g><title>core::ptr::write (2,139,845 samples, 0.16%)</title><rect x="93.7043%" y="3109" width="0.1621%" height="15" fill="rgb(224,221,49)" fg:x="1236641250" fg:w="2139845"/><text x="93.9543%" y="3119.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,859,074 samples, 0.14%)</title><rect x="93.8664%" y="3045" width="0.1409%" height="15" fill="rgb(253,169,27)" fg:x="1238781095" fg:w="1859074"/><text x="94.1164%" y="3055.50"></text></g><g><title>&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (1,859,074 samples, 0.14%)</title><rect x="93.8664%" y="3029" width="0.1409%" height="15" fill="rgb(211,206,16)" fg:x="1238781095" fg:w="1859074"/><text x="94.1164%" y="3039.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1,859,074 samples, 0.14%)</title><rect x="93.8664%" y="3013" width="0.1409%" height="15" fill="rgb(244,87,35)" fg:x="1238781095" fg:w="1859074"/><text x="94.1164%" y="3023.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,859,074 samples, 0.14%)</title><rect x="93.8664%" y="2997" width="0.1409%" height="15" fill="rgb(246,28,10)" fg:x="1238781095" fg:w="1859074"/><text x="94.1164%" y="3007.50"></text></g><g><title>malloc (1,859,074 samples, 0.14%)</title><rect x="93.8664%" y="2981" width="0.1409%" height="15" fill="rgb(229,12,44)" fg:x="1238781095" fg:w="1859074"/><text x="94.1164%" y="2991.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (6,153,606 samples, 0.47%)</title><rect x="94.0073%" y="2821" width="0.4663%" height="15" fill="rgb(210,145,37)" fg:x="1240640169" fg:w="6153606"/><text x="94.2573%" y="2831.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (6,153,606 samples, 0.47%)</title><rect x="94.0073%" y="2805" width="0.4663%" height="15" fill="rgb(227,112,52)" fg:x="1240640169" fg:w="6153606"/><text x="94.2573%" y="2815.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (6,153,606 samples, 0.47%)</title><rect x="94.0073%" y="2789" width="0.4663%" height="15" fill="rgb(238,155,34)" fg:x="1240640169" fg:w="6153606"/><text x="94.2573%" y="2799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (6,153,606 samples, 0.47%)</title><rect x="94.0073%" y="2773" width="0.4663%" height="15" fill="rgb(239,226,36)" fg:x="1240640169" fg:w="6153606"/><text x="94.2573%" y="2783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6,153,606 samples, 0.47%)</title><rect x="94.0073%" y="2757" width="0.4663%" height="15" fill="rgb(230,16,23)" fg:x="1240640169" fg:w="6153606"/><text x="94.2573%" y="2767.50"></text></g><g><title>alloc::slice::hack::to_vec (6,153,606 samples, 0.47%)</title><rect x="94.0073%" y="2741" width="0.4663%" height="15" fill="rgb(236,171,36)" fg:x="1240640169" fg:w="6153606"/><text x="94.2573%" y="2751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6,153,606 samples, 0.47%)</title><rect x="94.0073%" y="2725" width="0.4663%" height="15" fill="rgb(221,22,14)" fg:x="1240640169" fg:w="6153606"/><text x="94.2573%" y="2735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6,153,606 samples, 0.47%)</title><rect x="94.0073%" y="2709" width="0.4663%" height="15" fill="rgb(242,43,11)" fg:x="1240640169" fg:w="6153606"/><text x="94.2573%" y="2719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6,153,606 samples, 0.47%)</title><rect x="94.0073%" y="2693" width="0.4663%" height="15" fill="rgb(232,69,23)" fg:x="1240640169" fg:w="6153606"/><text x="94.2573%" y="2703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (6,153,606 samples, 0.47%)</title><rect x="94.0073%" y="2677" width="0.4663%" height="15" fill="rgb(216,180,54)" fg:x="1240640169" fg:w="6153606"/><text x="94.2573%" y="2687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (6,153,606 samples, 0.47%)</title><rect x="94.0073%" y="2661" width="0.4663%" height="15" fill="rgb(216,5,24)" fg:x="1240640169" fg:w="6153606"/><text x="94.2573%" y="2671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6,153,606 samples, 0.47%)</title><rect x="94.0073%" y="2645" width="0.4663%" height="15" fill="rgb(225,89,9)" fg:x="1240640169" fg:w="6153606"/><text x="94.2573%" y="2655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6,153,606 samples, 0.47%)</title><rect x="94.0073%" y="2629" width="0.4663%" height="15" fill="rgb(243,75,33)" fg:x="1240640169" fg:w="6153606"/><text x="94.2573%" y="2639.50"></text></g><g><title>alloc::alloc::alloc (6,153,606 samples, 0.47%)</title><rect x="94.0073%" y="2613" width="0.4663%" height="15" fill="rgb(247,141,45)" fg:x="1240640169" fg:w="6153606"/><text x="94.2573%" y="2623.50"></text></g><g><title>malloc (6,153,606 samples, 0.47%)</title><rect x="94.0073%" y="2597" width="0.4663%" height="15" fill="rgb(232,177,36)" fg:x="1240640169" fg:w="6153606"/><text x="94.2573%" y="2607.50"></text></g><g><title>[libc.so.6] (6,153,606 samples, 0.47%)</title><rect x="94.0073%" y="2581" width="0.4663%" height="15" fill="rgb(219,125,36)" fg:x="1240640169" fg:w="6153606"/><text x="94.2573%" y="2591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (1,956,068 samples, 0.15%)</title><rect x="94.4736%" y="2821" width="0.1482%" height="15" fill="rgb(227,94,9)" fg:x="1246793775" fg:w="1956068"/><text x="94.7236%" y="2831.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (10,067,512 samples, 0.76%)</title><rect x="94.0073%" y="2901" width="0.7628%" height="15" fill="rgb(240,34,52)" fg:x="1240640169" fg:w="10067512"/><text x="94.2573%" y="2911.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,067,512 samples, 0.76%)</title><rect x="94.0073%" y="2885" width="0.7628%" height="15" fill="rgb(216,45,12)" fg:x="1240640169" fg:w="10067512"/><text x="94.2573%" y="2895.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (10,067,512 samples, 0.76%)</title><rect x="94.0073%" y="2869" width="0.7628%" height="15" fill="rgb(246,21,19)" fg:x="1240640169" fg:w="10067512"/><text x="94.2573%" y="2879.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (10,067,512 samples, 0.76%)</title><rect x="94.0073%" y="2853" width="0.7628%" height="15" fill="rgb(213,98,42)" fg:x="1240640169" fg:w="10067512"/><text x="94.2573%" y="2863.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,067,512 samples, 0.76%)</title><rect x="94.0073%" y="2837" width="0.7628%" height="15" fill="rgb(250,136,47)" fg:x="1240640169" fg:w="10067512"/><text x="94.2573%" y="2847.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::eat_char (1,957,838 samples, 0.15%)</title><rect x="94.6218%" y="2821" width="0.1484%" height="15" fill="rgb(251,124,27)" fg:x="1248749843" fg:w="1957838"/><text x="94.8718%" y="2831.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::discard (1,957,838 samples, 0.15%)</title><rect x="94.6218%" y="2805" width="0.1484%" height="15" fill="rgb(229,180,14)" fg:x="1248749843" fg:w="1957838"/><text x="94.8718%" y="2815.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::discard (1,957,838 samples, 0.15%)</title><rect x="94.6218%" y="2789" width="0.1484%" height="15" fill="rgb(245,216,25)" fg:x="1248749843" fg:w="1957838"/><text x="94.8718%" y="2799.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (402,155 samples, 0.03%)</title><rect x="94.7702%" y="2005" width="0.0305%" height="15" fill="rgb(251,43,5)" fg:x="1250707681" fg:w="402155"/><text x="95.0202%" y="2015.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (402,155 samples, 0.03%)</title><rect x="94.7702%" y="1989" width="0.0305%" height="15" fill="rgb(250,128,24)" fg:x="1250707681" fg:w="402155"/><text x="95.0202%" y="1999.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (402,155 samples, 0.03%)</title><rect x="94.7702%" y="1973" width="0.0305%" height="15" fill="rgb(217,117,27)" fg:x="1250707681" fg:w="402155"/><text x="95.0202%" y="1983.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (402,155 samples, 0.03%)</title><rect x="94.7702%" y="1957" width="0.0305%" height="15" fill="rgb(245,147,4)" fg:x="1250707681" fg:w="402155"/><text x="95.0202%" y="1967.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,182,556 samples, 0.09%)</title><rect x="94.8006%" y="1381" width="0.0896%" height="15" fill="rgb(242,201,35)" fg:x="1251109836" fg:w="1182556"/><text x="95.0506%" y="1391.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,182,556 samples, 0.09%)</title><rect x="94.8006%" y="1365" width="0.0896%" height="15" fill="rgb(218,181,1)" fg:x="1251109836" fg:w="1182556"/><text x="95.0506%" y="1375.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,182,556 samples, 0.09%)</title><rect x="94.8006%" y="1349" width="0.0896%" height="15" fill="rgb(222,6,29)" fg:x="1251109836" fg:w="1182556"/><text x="95.0506%" y="1359.50"></text></g><g><title>__rdl_alloc (1,790,654 samples, 0.14%)</title><rect x="94.8902%" y="725" width="0.1357%" height="15" fill="rgb(208,186,3)" fg:x="1252292392" fg:w="1790654"/><text x="95.1402%" y="735.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,790,654 samples, 0.14%)</title><rect x="94.8902%" y="709" width="0.1357%" height="15" fill="rgb(216,36,26)" fg:x="1252292392" fg:w="1790654"/><text x="95.1402%" y="719.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2,472,623 samples, 0.19%)</title><rect x="94.8902%" y="1029" width="0.1874%" height="15" fill="rgb(248,201,23)" fg:x="1252292392" fg:w="2472623"/><text x="95.1402%" y="1039.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,472,623 samples, 0.19%)</title><rect x="94.8902%" y="1013" width="0.1874%" height="15" fill="rgb(251,170,31)" fg:x="1252292392" fg:w="2472623"/><text x="95.1402%" y="1023.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (2,472,623 samples, 0.19%)</title><rect x="94.8902%" y="997" width="0.1874%" height="15" fill="rgb(207,110,25)" fg:x="1252292392" fg:w="2472623"/><text x="95.1402%" y="1007.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (2,472,623 samples, 0.19%)</title><rect x="94.8902%" y="981" width="0.1874%" height="15" fill="rgb(250,54,15)" fg:x="1252292392" fg:w="2472623"/><text x="95.1402%" y="991.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,472,623 samples, 0.19%)</title><rect x="94.8902%" y="965" width="0.1874%" height="15" fill="rgb(227,68,33)" fg:x="1252292392" fg:w="2472623"/><text x="95.1402%" y="975.50"></text></g><g><title>&lt;serde::de::impls::StringVisitor as serde::de::Visitor&gt;::visit_str (2,472,623 samples, 0.19%)</title><rect x="94.8902%" y="949" width="0.1874%" height="15" fill="rgb(238,34,41)" fg:x="1252292392" fg:w="2472623"/><text x="95.1402%" y="959.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2,472,623 samples, 0.19%)</title><rect x="94.8902%" y="933" width="0.1874%" height="15" fill="rgb(220,11,15)" fg:x="1252292392" fg:w="2472623"/><text x="95.1402%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2,472,623 samples, 0.19%)</title><rect x="94.8902%" y="917" width="0.1874%" height="15" fill="rgb(246,111,35)" fg:x="1252292392" fg:w="2472623"/><text x="95.1402%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2,472,623 samples, 0.19%)</title><rect x="94.8902%" y="901" width="0.1874%" height="15" fill="rgb(209,88,53)" fg:x="1252292392" fg:w="2472623"/><text x="95.1402%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,472,623 samples, 0.19%)</title><rect x="94.8902%" y="885" width="0.1874%" height="15" fill="rgb(231,185,47)" fg:x="1252292392" fg:w="2472623"/><text x="95.1402%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (2,472,623 samples, 0.19%)</title><rect x="94.8902%" y="869" width="0.1874%" height="15" fill="rgb(233,154,1)" fg:x="1252292392" fg:w="2472623"/><text x="95.1402%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,472,623 samples, 0.19%)</title><rect x="94.8902%" y="853" width="0.1874%" height="15" fill="rgb(225,15,46)" fg:x="1252292392" fg:w="2472623"/><text x="95.1402%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,472,623 samples, 0.19%)</title><rect x="94.8902%" y="837" width="0.1874%" height="15" fill="rgb(211,135,41)" fg:x="1252292392" fg:w="2472623"/><text x="95.1402%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,472,623 samples, 0.19%)</title><rect x="94.8902%" y="821" width="0.1874%" height="15" fill="rgb(208,54,0)" fg:x="1252292392" fg:w="2472623"/><text x="95.1402%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,472,623 samples, 0.19%)</title><rect x="94.8902%" y="805" width="0.1874%" height="15" fill="rgb(244,136,14)" fg:x="1252292392" fg:w="2472623"/><text x="95.1402%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,472,623 samples, 0.19%)</title><rect x="94.8902%" y="789" width="0.1874%" height="15" fill="rgb(241,56,14)" fg:x="1252292392" fg:w="2472623"/><text x="95.1402%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,472,623 samples, 0.19%)</title><rect x="94.8902%" y="773" width="0.1874%" height="15" fill="rgb(205,80,24)" fg:x="1252292392" fg:w="2472623"/><text x="95.1402%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,472,623 samples, 0.19%)</title><rect x="94.8902%" y="757" width="0.1874%" height="15" fill="rgb(220,57,4)" fg:x="1252292392" fg:w="2472623"/><text x="95.1402%" y="767.50"></text></g><g><title>alloc::alloc::alloc (2,472,623 samples, 0.19%)</title><rect x="94.8902%" y="741" width="0.1874%" height="15" fill="rgb(226,193,50)" fg:x="1252292392" fg:w="2472623"/><text x="95.1402%" y="751.50"></text></g><g><title>malloc (681,969 samples, 0.05%)</title><rect x="95.0259%" y="725" width="0.0517%" height="15" fill="rgb(231,168,22)" fg:x="1254083046" fg:w="681969"/><text x="95.2759%" y="735.50"></text></g><g><title>[libc.so.6] (681,969 samples, 0.05%)</title><rect x="95.0259%" y="709" width="0.0517%" height="15" fill="rgb(254,215,14)" fg:x="1254083046" fg:w="681969"/><text x="95.2759%" y="719.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="437" width="0.1054%" height="15" fill="rgb(211,115,16)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="447.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="421" width="0.1054%" height="15" fill="rgb(236,210,16)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="405" width="0.1054%" height="15" fill="rgb(221,94,12)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="415.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="389" width="0.1054%" height="15" fill="rgb(235,218,49)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="373" width="0.1054%" height="15" fill="rgb(217,114,14)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="357" width="0.1054%" height="15" fill="rgb(216,145,22)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="341" width="0.1054%" height="15" fill="rgb(217,112,39)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="351.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="325" width="0.1054%" height="15" fill="rgb(225,85,32)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="335.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="309" width="0.1054%" height="15" fill="rgb(245,209,47)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="319.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="293" width="0.1054%" height="15" fill="rgb(218,220,15)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="277" width="0.1054%" height="15" fill="rgb(222,202,31)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="287.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="261" width="0.1054%" height="15" fill="rgb(243,203,4)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="245" width="0.1054%" height="15" fill="rgb(237,92,17)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="255.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="229" width="0.1054%" height="15" fill="rgb(231,119,7)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="239.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="213" width="0.1054%" height="15" fill="rgb(237,82,41)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="197" width="0.1054%" height="15" fill="rgb(226,81,48)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="207.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="181" width="0.1054%" height="15" fill="rgb(234,70,51)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="165" width="0.1054%" height="15" fill="rgb(251,86,4)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="175.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="149" width="0.1054%" height="15" fill="rgb(244,144,28)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="133" width="0.1054%" height="15" fill="rgb(232,161,39)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="117" width="0.1054%" height="15" fill="rgb(247,34,51)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="101" width="0.1054%" height="15" fill="rgb(225,132,2)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="85" width="0.1054%" height="15" fill="rgb(209,159,44)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="69" width="0.1054%" height="15" fill="rgb(251,214,1)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="79.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="53" width="0.1054%" height="15" fill="rgb(247,84,47)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="63.50"></text></g><g><title>malloc (1,390,823 samples, 0.11%)</title><rect x="95.1903%" y="37" width="0.1054%" height="15" fill="rgb(240,111,43)" fg:x="1256252133" fg:w="1390823"/><text x="95.4403%" y="47.50"></text></g><g><title>serde::de::MapAccess::next_entry (7,972,587 samples, 0.60%)</title><rect x="94.7702%" y="2101" width="0.6041%" height="15" fill="rgb(215,214,35)" fg:x="1250707681" fg:w="7972587"/><text x="95.0202%" y="2111.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (7,972,587 samples, 0.60%)</title><rect x="94.7702%" y="2085" width="0.6041%" height="15" fill="rgb(248,207,23)" fg:x="1250707681" fg:w="7972587"/><text x="95.0202%" y="2095.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (7,972,587 samples, 0.60%)</title><rect x="94.7702%" y="2069" width="0.6041%" height="15" fill="rgb(214,186,4)" fg:x="1250707681" fg:w="7972587"/><text x="95.0202%" y="2079.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,972,587 samples, 0.60%)</title><rect x="94.7702%" y="2053" width="0.6041%" height="15" fill="rgb(220,133,22)" fg:x="1250707681" fg:w="7972587"/><text x="95.0202%" y="2063.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,972,587 samples, 0.60%)</title><rect x="94.7702%" y="2037" width="0.6041%" height="15" fill="rgb(239,134,19)" fg:x="1250707681" fg:w="7972587"/><text x="95.0202%" y="2047.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,972,587 samples, 0.60%)</title><rect x="94.7702%" y="2021" width="0.6041%" height="15" fill="rgb(250,140,9)" fg:x="1250707681" fg:w="7972587"/><text x="95.0202%" y="2031.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="2005" width="0.5736%" height="15" fill="rgb(225,59,14)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="2015.50"></text></g><g><title>serde::de::SeqAccess::next_element (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1989" width="0.5736%" height="15" fill="rgb(214,152,51)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1999.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1973" width="0.5736%" height="15" fill="rgb(251,227,43)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1983.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1957" width="0.5736%" height="15" fill="rgb(241,96,17)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1967.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1941" width="0.5736%" height="15" fill="rgb(234,198,43)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1951.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1925" width="0.5736%" height="15" fill="rgb(220,108,29)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1935.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1909" width="0.5736%" height="15" fill="rgb(226,163,33)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1919.50"></text></g><g><title>serde::de::MapAccess::next_entry (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1893" width="0.5736%" height="15" fill="rgb(205,194,45)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1903.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1877" width="0.5736%" height="15" fill="rgb(206,143,44)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1887.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1861" width="0.5736%" height="15" fill="rgb(236,136,36)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1871.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1845" width="0.5736%" height="15" fill="rgb(249,172,42)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1855.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1829" width="0.5736%" height="15" fill="rgb(216,139,23)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1839.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1813" width="0.5736%" height="15" fill="rgb(207,166,20)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1823.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1797" width="0.5736%" height="15" fill="rgb(210,209,22)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1807.50"></text></g><g><title>serde::de::SeqAccess::next_element (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1781" width="0.5736%" height="15" fill="rgb(232,118,20)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1791.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1765" width="0.5736%" height="15" fill="rgb(238,113,42)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1775.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1749" width="0.5736%" height="15" fill="rgb(231,42,5)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1759.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1733" width="0.5736%" height="15" fill="rgb(243,166,24)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1743.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1717" width="0.5736%" height="15" fill="rgb(237,226,12)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1727.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1701" width="0.5736%" height="15" fill="rgb(229,133,24)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1711.50"></text></g><g><title>serde::de::MapAccess::next_entry (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1685" width="0.5736%" height="15" fill="rgb(238,33,43)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1695.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1669" width="0.5736%" height="15" fill="rgb(227,59,38)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1679.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1653" width="0.5736%" height="15" fill="rgb(230,97,0)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1663.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1637" width="0.5736%" height="15" fill="rgb(250,173,50)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1647.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1621" width="0.5736%" height="15" fill="rgb(240,15,50)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1631.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1605" width="0.5736%" height="15" fill="rgb(221,93,22)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1615.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1589" width="0.5736%" height="15" fill="rgb(245,180,53)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1599.50"></text></g><g><title>serde::de::SeqAccess::next_element (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1573" width="0.5736%" height="15" fill="rgb(231,88,51)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1583.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1557" width="0.5736%" height="15" fill="rgb(240,58,21)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1567.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1541" width="0.5736%" height="15" fill="rgb(237,21,10)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1551.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1525" width="0.5736%" height="15" fill="rgb(218,43,11)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1535.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1509" width="0.5736%" height="15" fill="rgb(218,221,29)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1519.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1493" width="0.5736%" height="15" fill="rgb(214,118,42)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1503.50"></text></g><g><title>serde::de::MapAccess::next_entry (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1477" width="0.5736%" height="15" fill="rgb(251,200,26)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1487.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1461" width="0.5736%" height="15" fill="rgb(237,101,39)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1471.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1445" width="0.5736%" height="15" fill="rgb(251,117,11)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1455.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1429" width="0.5736%" height="15" fill="rgb(216,223,23)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1439.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1413" width="0.5736%" height="15" fill="rgb(251,54,12)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1423.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,570,432 samples, 0.57%)</title><rect x="94.8006%" y="1397" width="0.5736%" height="15" fill="rgb(254,176,54)" fg:x="1251109836" fg:w="7570432"/><text x="95.0506%" y="1407.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1381" width="0.4840%" height="15" fill="rgb(210,32,8)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1391.50"></text></g><g><title>serde::de::SeqAccess::next_element (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1365" width="0.4840%" height="15" fill="rgb(235,52,38)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1375.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1349" width="0.4840%" height="15" fill="rgb(231,4,44)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1359.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1333" width="0.4840%" height="15" fill="rgb(249,2,32)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1343.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1317" width="0.4840%" height="15" fill="rgb(224,65,26)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1327.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1301" width="0.4840%" height="15" fill="rgb(250,73,40)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1311.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1285" width="0.4840%" height="15" fill="rgb(253,177,16)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1295.50"></text></g><g><title>serde::de::MapAccess::next_entry (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1269" width="0.4840%" height="15" fill="rgb(217,32,34)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1279.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1253" width="0.4840%" height="15" fill="rgb(212,7,10)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1263.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1237" width="0.4840%" height="15" fill="rgb(245,89,8)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1247.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1221" width="0.4840%" height="15" fill="rgb(237,16,53)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1231.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1205" width="0.4840%" height="15" fill="rgb(250,204,30)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1215.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1189" width="0.4840%" height="15" fill="rgb(208,77,27)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1199.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1173" width="0.4840%" height="15" fill="rgb(250,204,28)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1183.50"></text></g><g><title>serde::de::SeqAccess::next_element (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1157" width="0.4840%" height="15" fill="rgb(244,63,21)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1167.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1141" width="0.4840%" height="15" fill="rgb(236,85,44)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1151.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1125" width="0.4840%" height="15" fill="rgb(215,98,4)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1135.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1109" width="0.4840%" height="15" fill="rgb(235,38,11)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1119.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1093" width="0.4840%" height="15" fill="rgb(254,186,25)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1103.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1077" width="0.4840%" height="15" fill="rgb(225,55,31)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1087.50"></text></g><g><title>serde::de::MapAccess::next_entry (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1061" width="0.4840%" height="15" fill="rgb(211,15,21)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1071.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (6,387,876 samples, 0.48%)</title><rect x="94.8902%" y="1045" width="0.4840%" height="15" fill="rgb(215,187,41)" fg:x="1252292392" fg:w="6387876"/><text x="95.1402%" y="1055.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (3,915,253 samples, 0.30%)</title><rect x="95.0776%" y="1029" width="0.2967%" height="15" fill="rgb(248,69,32)" fg:x="1254765015" fg:w="3915253"/><text x="95.3276%" y="1039.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,915,253 samples, 0.30%)</title><rect x="95.0776%" y="1013" width="0.2967%" height="15" fill="rgb(252,102,52)" fg:x="1254765015" fg:w="3915253"/><text x="95.3276%" y="1023.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,915,253 samples, 0.30%)</title><rect x="95.0776%" y="997" width="0.2967%" height="15" fill="rgb(253,140,32)" fg:x="1254765015" fg:w="3915253"/><text x="95.3276%" y="1007.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,915,253 samples, 0.30%)</title><rect x="95.0776%" y="981" width="0.2967%" height="15" fill="rgb(216,56,42)" fg:x="1254765015" fg:w="3915253"/><text x="95.3276%" y="991.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (3,915,253 samples, 0.30%)</title><rect x="95.0776%" y="965" width="0.2967%" height="15" fill="rgb(216,184,14)" fg:x="1254765015" fg:w="3915253"/><text x="95.3276%" y="975.50"></text></g><g><title>serde::de::SeqAccess::next_element (3,915,253 samples, 0.30%)</title><rect x="95.0776%" y="949" width="0.2967%" height="15" fill="rgb(237,187,27)" fg:x="1254765015" fg:w="3915253"/><text x="95.3276%" y="959.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (3,915,253 samples, 0.30%)</title><rect x="95.0776%" y="933" width="0.2967%" height="15" fill="rgb(219,65,3)" fg:x="1254765015" fg:w="3915253"/><text x="95.3276%" y="943.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3,915,253 samples, 0.30%)</title><rect x="95.0776%" y="917" width="0.2967%" height="15" fill="rgb(245,83,25)" fg:x="1254765015" fg:w="3915253"/><text x="95.3276%" y="927.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,915,253 samples, 0.30%)</title><rect x="95.0776%" y="901" width="0.2967%" height="15" fill="rgb(214,205,45)" fg:x="1254765015" fg:w="3915253"/><text x="95.3276%" y="911.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3,915,253 samples, 0.30%)</title><rect x="95.0776%" y="885" width="0.2967%" height="15" fill="rgb(241,20,18)" fg:x="1254765015" fg:w="3915253"/><text x="95.3276%" y="895.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,915,253 samples, 0.30%)</title><rect x="95.0776%" y="869" width="0.2967%" height="15" fill="rgb(232,163,23)" fg:x="1254765015" fg:w="3915253"/><text x="95.3276%" y="879.50"></text></g><g><title>serde::de::MapAccess::next_entry (3,915,253 samples, 0.30%)</title><rect x="95.0776%" y="853" width="0.2967%" height="15" fill="rgb(214,5,46)" fg:x="1254765015" fg:w="3915253"/><text x="95.3276%" y="863.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (3,915,253 samples, 0.30%)</title><rect x="95.0776%" y="837" width="0.2967%" height="15" fill="rgb(229,78,17)" fg:x="1254765015" fg:w="3915253"/><text x="95.3276%" y="847.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="821" width="0.1840%" height="15" fill="rgb(248,89,10)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="831.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="805" width="0.1840%" height="15" fill="rgb(248,54,15)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="815.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="789" width="0.1840%" height="15" fill="rgb(223,116,6)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="799.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="773" width="0.1840%" height="15" fill="rgb(205,125,38)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="783.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="757" width="0.1840%" height="15" fill="rgb(251,78,38)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="767.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="741" width="0.1840%" height="15" fill="rgb(253,78,28)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="751.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="725" width="0.1840%" height="15" fill="rgb(209,120,3)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="735.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="709" width="0.1840%" height="15" fill="rgb(238,229,9)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="693" width="0.1840%" height="15" fill="rgb(253,159,18)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="703.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="677" width="0.1840%" height="15" fill="rgb(244,42,34)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="661" width="0.1840%" height="15" fill="rgb(224,8,7)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="671.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="645" width="0.1840%" height="15" fill="rgb(210,201,45)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="655.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="629" width="0.1840%" height="15" fill="rgb(252,185,21)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="613" width="0.1840%" height="15" fill="rgb(223,131,1)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="623.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="597" width="0.1840%" height="15" fill="rgb(245,141,16)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="581" width="0.1840%" height="15" fill="rgb(229,55,45)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="565" width="0.1840%" height="15" fill="rgb(208,92,15)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="549" width="0.1840%" height="15" fill="rgb(234,185,47)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="559.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="533" width="0.1840%" height="15" fill="rgb(253,104,50)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="543.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="517" width="0.1840%" height="15" fill="rgb(205,70,7)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="527.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="501" width="0.1840%" height="15" fill="rgb(240,178,43)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="485" width="0.1840%" height="15" fill="rgb(214,112,2)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="469" width="0.1840%" height="15" fill="rgb(206,46,17)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,428,135 samples, 0.18%)</title><rect x="95.1903%" y="453" width="0.1840%" height="15" fill="rgb(225,220,16)" fg:x="1256252133" fg:w="2428135"/><text x="95.4403%" y="463.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,037,312 samples, 0.08%)</title><rect x="95.2957%" y="437" width="0.0786%" height="15" fill="rgb(238,65,40)" fg:x="1257642956" fg:w="1037312"/><text x="95.5457%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,037,312 samples, 0.08%)</title><rect x="95.2957%" y="421" width="0.0786%" height="15" fill="rgb(230,151,21)" fg:x="1257642956" fg:w="1037312"/><text x="95.5457%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,037,312 samples, 0.08%)</title><rect x="95.2957%" y="405" width="0.0786%" height="15" fill="rgb(218,58,49)" fg:x="1257642956" fg:w="1037312"/><text x="95.5457%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,037,312 samples, 0.08%)</title><rect x="95.2957%" y="389" width="0.0786%" height="15" fill="rgb(219,179,14)" fg:x="1257642956" fg:w="1037312"/><text x="95.5457%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2837" width="0.7310%" height="15" fill="rgb(223,72,1)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2847.50"></text></g><g><title>serde::de::SeqAccess::next_element (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2821" width="0.7310%" height="15" fill="rgb(238,126,10)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2831.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2805" width="0.7310%" height="15" fill="rgb(224,206,38)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2815.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2789" width="0.7310%" height="15" fill="rgb(212,201,54)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2799.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2773" width="0.7310%" height="15" fill="rgb(218,154,48)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2783.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2757" width="0.7310%" height="15" fill="rgb(232,93,24)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2767.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2741" width="0.7310%" height="15" fill="rgb(245,30,21)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2751.50"></text></g><g><title>serde::de::MapAccess::next_entry (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2725" width="0.7310%" height="15" fill="rgb(242,148,29)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2735.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2709" width="0.7310%" height="15" fill="rgb(244,153,54)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2719.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2693" width="0.7310%" height="15" fill="rgb(252,87,22)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2703.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2677" width="0.7310%" height="15" fill="rgb(210,51,29)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2661" width="0.7310%" height="15" fill="rgb(242,136,47)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2671.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2645" width="0.7310%" height="15" fill="rgb(238,68,4)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2629" width="0.7310%" height="15" fill="rgb(242,161,30)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2639.50"></text></g><g><title>serde::de::SeqAccess::next_element (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2613" width="0.7310%" height="15" fill="rgb(218,58,44)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2623.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2597" width="0.7310%" height="15" fill="rgb(252,125,32)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2607.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2581" width="0.7310%" height="15" fill="rgb(219,178,0)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2565" width="0.7310%" height="15" fill="rgb(213,152,7)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2549" width="0.7310%" height="15" fill="rgb(249,109,34)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2533" width="0.7310%" height="15" fill="rgb(232,96,21)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2543.50"></text></g><g><title>serde::de::MapAccess::next_entry (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2517" width="0.7310%" height="15" fill="rgb(228,27,39)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2527.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2501" width="0.7310%" height="15" fill="rgb(211,182,52)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2485" width="0.7310%" height="15" fill="rgb(234,178,38)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2495.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2469" width="0.7310%" height="15" fill="rgb(221,111,3)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2453" width="0.7310%" height="15" fill="rgb(228,175,21)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2437" width="0.7310%" height="15" fill="rgb(228,174,43)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2421" width="0.7310%" height="15" fill="rgb(211,191,0)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2431.50"></text></g><g><title>serde::de::SeqAccess::next_element (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2405" width="0.7310%" height="15" fill="rgb(253,117,3)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2415.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2389" width="0.7310%" height="15" fill="rgb(241,127,19)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2399.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2373" width="0.7310%" height="15" fill="rgb(218,103,12)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2357" width="0.7310%" height="15" fill="rgb(236,214,43)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2367.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2341" width="0.7310%" height="15" fill="rgb(244,144,19)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2325" width="0.7310%" height="15" fill="rgb(246,188,10)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2335.50"></text></g><g><title>serde::de::MapAccess::next_entry (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2309" width="0.7310%" height="15" fill="rgb(212,193,33)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2319.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2293" width="0.7310%" height="15" fill="rgb(241,51,29)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2277" width="0.7310%" height="15" fill="rgb(211,58,19)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2287.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2261" width="0.7310%" height="15" fill="rgb(229,111,26)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2245" width="0.7310%" height="15" fill="rgb(213,115,40)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2255.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2229" width="0.7310%" height="15" fill="rgb(209,56,44)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2213" width="0.7310%" height="15" fill="rgb(230,108,32)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2223.50"></text></g><g><title>serde::de::SeqAccess::next_element (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2197" width="0.7310%" height="15" fill="rgb(216,165,31)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2207.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2181" width="0.7310%" height="15" fill="rgb(218,122,21)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2191.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2165" width="0.7310%" height="15" fill="rgb(223,224,47)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2149" width="0.7310%" height="15" fill="rgb(238,102,44)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2159.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2133" width="0.7310%" height="15" fill="rgb(236,46,40)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9,646,575 samples, 0.73%)</title><rect x="94.7702%" y="2117" width="0.7310%" height="15" fill="rgb(247,202,50)" fg:x="1250707681" fg:w="9646575"/><text x="95.0202%" y="2127.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,673,988 samples, 0.13%)</title><rect x="95.3743%" y="2101" width="0.1268%" height="15" fill="rgb(209,99,20)" fg:x="1258680268" fg:w="1673988"/><text x="95.6243%" y="2111.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,673,988 samples, 0.13%)</title><rect x="95.3743%" y="2085" width="0.1268%" height="15" fill="rgb(252,27,34)" fg:x="1258680268" fg:w="1673988"/><text x="95.6243%" y="2095.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1,673,988 samples, 0.13%)</title><rect x="95.3743%" y="2069" width="0.1268%" height="15" fill="rgb(215,206,23)" fg:x="1258680268" fg:w="1673988"/><text x="95.6243%" y="2079.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1,673,988 samples, 0.13%)</title><rect x="95.3743%" y="2053" width="0.1268%" height="15" fill="rgb(212,135,36)" fg:x="1258680268" fg:w="1673988"/><text x="95.6243%" y="2063.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1,673,988 samples, 0.13%)</title><rect x="95.3743%" y="2037" width="0.1268%" height="15" fill="rgb(240,189,1)" fg:x="1258680268" fg:w="1673988"/><text x="95.6243%" y="2047.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1,673,988 samples, 0.13%)</title><rect x="95.3743%" y="2021" width="0.1268%" height="15" fill="rgb(242,56,20)" fg:x="1258680268" fg:w="1673988"/><text x="95.6243%" y="2031.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (1,673,988 samples, 0.13%)</title><rect x="95.3743%" y="2005" width="0.1268%" height="15" fill="rgb(247,132,33)" fg:x="1258680268" fg:w="1673988"/><text x="95.6243%" y="2015.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (20,195,425 samples, 1.53%)</title><rect x="94.0073%" y="2949" width="1.5303%" height="15" fill="rgb(208,149,11)" fg:x="1240640169" fg:w="20195425"/><text x="94.2573%" y="2959.50"></text></g><g><title>serde::de::MapAccess::next_entry (20,195,425 samples, 1.53%)</title><rect x="94.0073%" y="2933" width="1.5303%" height="15" fill="rgb(211,33,11)" fg:x="1240640169" fg:w="20195425"/><text x="94.2573%" y="2943.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (20,195,425 samples, 1.53%)</title><rect x="94.0073%" y="2917" width="1.5303%" height="15" fill="rgb(221,29,38)" fg:x="1240640169" fg:w="20195425"/><text x="94.2573%" y="2927.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (10,127,913 samples, 0.77%)</title><rect x="94.7702%" y="2901" width="0.7674%" height="15" fill="rgb(206,182,49)" fg:x="1250707681" fg:w="10127913"/><text x="95.0202%" y="2911.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (10,127,913 samples, 0.77%)</title><rect x="94.7702%" y="2885" width="0.7674%" height="15" fill="rgb(216,140,1)" fg:x="1250707681" fg:w="10127913"/><text x="95.0202%" y="2895.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10,127,913 samples, 0.77%)</title><rect x="94.7702%" y="2869" width="0.7674%" height="15" fill="rgb(232,57,40)" fg:x="1250707681" fg:w="10127913"/><text x="95.0202%" y="2879.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10,127,913 samples, 0.77%)</title><rect x="94.7702%" y="2853" width="0.7674%" height="15" fill="rgb(224,186,18)" fg:x="1250707681" fg:w="10127913"/><text x="95.0202%" y="2863.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_any_number (481,338 samples, 0.04%)</title><rect x="95.5011%" y="2837" width="0.0365%" height="15" fill="rgb(215,121,11)" fg:x="1260354256" fg:w="481338"/><text x="95.7511%" y="2847.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (481,338 samples, 0.04%)</title><rect x="95.5011%" y="2821" width="0.0365%" height="15" fill="rgb(245,147,10)" fg:x="1260354256" fg:w="481338"/><text x="95.7511%" y="2831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,988,004 samples, 0.15%)</title><rect x="95.5376%" y="2933" width="0.1506%" height="15" fill="rgb(238,153,13)" fg:x="1260835594" fg:w="1988004"/><text x="95.7876%" y="2943.50"></text></g><g><title>core::ptr::write (1,988,004 samples, 0.15%)</title><rect x="95.5376%" y="2917" width="0.1506%" height="15" fill="rgb(233,108,0)" fg:x="1260835594" fg:w="1988004"/><text x="95.7876%" y="2927.50"></text></g><g><title>serde_json::de::from_str (28,352,833 samples, 2.15%)</title><rect x="93.8664%" y="3125" width="2.1484%" height="15" fill="rgb(212,157,17)" fg:x="1238781095" fg:w="28352833"/><text x="94.1164%" y="3135.50">s..</text></g><g><title>serde_json::de::from_trait (28,352,833 samples, 2.15%)</title><rect x="93.8664%" y="3109" width="2.1484%" height="15" fill="rgb(225,213,38)" fg:x="1238781095" fg:w="28352833"/><text x="94.1164%" y="3119.50">s..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (28,352,833 samples, 2.15%)</title><rect x="93.8664%" y="3093" width="2.1484%" height="15" fill="rgb(248,16,11)" fg:x="1238781095" fg:w="28352833"/><text x="94.1164%" y="3103.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (28,352,833 samples, 2.15%)</title><rect x="93.8664%" y="3077" width="2.1484%" height="15" fill="rgb(241,33,4)" fg:x="1238781095" fg:w="28352833"/><text x="94.1164%" y="3087.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (28,352,833 samples, 2.15%)</title><rect x="93.8664%" y="3061" width="2.1484%" height="15" fill="rgb(222,26,43)" fg:x="1238781095" fg:w="28352833"/><text x="94.1164%" y="3071.50">&lt;..</text></g><g><title>serde::de::MapAccess::next_entry (26,493,759 samples, 2.01%)</title><rect x="94.0073%" y="3045" width="2.0075%" height="15" fill="rgb(243,29,36)" fg:x="1240640169" fg:w="26493759"/><text x="94.2573%" y="3055.50">s..</text></g><g><title>serde::de::MapAccess::next_entry_seed (26,493,759 samples, 2.01%)</title><rect x="94.0073%" y="3029" width="2.0075%" height="15" fill="rgb(241,9,27)" fg:x="1240640169" fg:w="26493759"/><text x="94.2573%" y="3039.50">s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (26,493,759 samples, 2.01%)</title><rect x="94.0073%" y="3013" width="2.0075%" height="15" fill="rgb(205,117,26)" fg:x="1240640169" fg:w="26493759"/><text x="94.2573%" y="3023.50">&lt;..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (26,493,759 samples, 2.01%)</title><rect x="94.0073%" y="2997" width="2.0075%" height="15" fill="rgb(209,80,39)" fg:x="1240640169" fg:w="26493759"/><text x="94.2573%" y="3007.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (26,493,759 samples, 2.01%)</title><rect x="94.0073%" y="2981" width="2.0075%" height="15" fill="rgb(239,155,6)" fg:x="1240640169" fg:w="26493759"/><text x="94.2573%" y="2991.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (26,493,759 samples, 2.01%)</title><rect x="94.0073%" y="2965" width="2.0075%" height="15" fill="rgb(212,104,12)" fg:x="1240640169" fg:w="26493759"/><text x="94.2573%" y="2975.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (6,298,334 samples, 0.48%)</title><rect x="95.5376%" y="2949" width="0.4772%" height="15" fill="rgb(234,204,3)" fg:x="1260835594" fg:w="6298334"/><text x="95.7876%" y="2959.50"></text></g><g><title>serde::de::SeqAccess::next_element (4,310,330 samples, 0.33%)</title><rect x="95.6882%" y="2933" width="0.3266%" height="15" fill="rgb(251,218,7)" fg:x="1262823598" fg:w="4310330"/><text x="95.9382%" y="2943.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,310,330 samples, 0.33%)</title><rect x="95.6882%" y="2917" width="0.3266%" height="15" fill="rgb(221,81,32)" fg:x="1262823598" fg:w="4310330"/><text x="95.9382%" y="2927.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed::has_next_element (2,162,732 samples, 0.16%)</title><rect x="95.8509%" y="2901" width="0.1639%" height="15" fill="rgb(214,152,26)" fg:x="1264971196" fg:w="2162732"/><text x="96.1009%" y="2911.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (2,162,732 samples, 0.16%)</title><rect x="95.8509%" y="2885" width="0.1639%" height="15" fill="rgb(223,22,3)" fg:x="1264971196" fg:w="2162732"/><text x="96.1009%" y="2895.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (2,162,732 samples, 0.16%)</title><rect x="95.8509%" y="2869" width="0.1639%" height="15" fill="rgb(207,174,7)" fg:x="1264971196" fg:w="2162732"/><text x="96.1009%" y="2879.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (2,162,732 samples, 0.16%)</title><rect x="95.8509%" y="2853" width="0.1639%" height="15" fill="rgb(224,19,52)" fg:x="1264971196" fg:w="2162732"/><text x="96.1009%" y="2863.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (2,162,732 samples, 0.16%)</title><rect x="95.8509%" y="2837" width="0.1639%" height="15" fill="rgb(228,24,14)" fg:x="1264971196" fg:w="2162732"/><text x="96.1009%" y="2847.50"></text></g><g><title>std::panic::catch_unwind (1,198,443,434 samples, 90.81%)</title><rect x="5.2385%" y="3285" width="90.8099%" height="15" fill="rgb(230,153,43)" fg:x="69133648" fg:w="1198443434"/><text x="5.4885%" y="3295.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,198,443,434 samples, 90.81%)</title><rect x="5.2385%" y="3269" width="90.8099%" height="15" fill="rgb(231,106,12)" fg:x="69133648" fg:w="1198443434"/><text x="5.4885%" y="3279.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,198,443,434 samples, 90.81%)</title><rect x="5.2385%" y="3253" width="90.8099%" height="15" fill="rgb(215,92,2)" fg:x="69133648" fg:w="1198443434"/><text x="5.4885%" y="3263.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,198,443,434 samples, 90.81%)</title><rect x="5.2385%" y="3237" width="90.8099%" height="15" fill="rgb(249,143,25)" fg:x="69133648" fg:w="1198443434"/><text x="5.4885%" y="3247.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (1,198,443,434 samples, 90.81%)</title><rect x="5.2385%" y="3221" width="90.8099%" height="15" fill="rgb(252,7,35)" fg:x="69133648" fg:w="1198443434"/><text x="5.4885%" y="3231.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (1,198,443,434 samples, 90.81%)</title><rect x="5.2385%" y="3205" width="90.8099%" height="15" fill="rgb(216,69,40)" fg:x="69133648" fg:w="1198443434"/><text x="5.4885%" y="3215.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (1,198,443,434 samples, 90.81%)</title><rect x="5.2385%" y="3189" width="90.8099%" height="15" fill="rgb(240,36,33)" fg:x="69133648" fg:w="1198443434"/><text x="5.4885%" y="3199.50">core::ops::function::FnOnce::call_once</text></g><g><title>main::main (1,198,443,434 samples, 90.81%)</title><rect x="5.2385%" y="3173" width="90.8099%" height="15" fill="rgb(231,128,14)" fg:x="69133648" fg:w="1198443434"/><text x="5.4885%" y="3183.50">main::main</text></g><g><title>main::benchmark::run_web_browser_layout_trace_benchmark (1,191,823,809 samples, 90.31%)</title><rect x="5.7401%" y="3157" width="90.3083%" height="15" fill="rgb(245,143,14)" fg:x="75753273" fg:w="1191823809"/><text x="5.9901%" y="3167.50">main::benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>main::benchmark::parse_web_layout_trace (30,935,832 samples, 2.34%)</title><rect x="93.7043%" y="3141" width="2.3441%" height="15" fill="rgb(222,130,28)" fg:x="1236641250" fg:w="30935832"/><text x="93.9543%" y="3151.50">m..</text></g><g><title>std::fs::read_to_string (443,154 samples, 0.03%)</title><rect x="96.0148%" y="3125" width="0.0336%" height="15" fill="rgb(212,10,48)" fg:x="1267133928" fg:w="443154"/><text x="96.2648%" y="3135.50"></text></g><g><title>std::fs::read_to_string::inner (443,154 samples, 0.03%)</title><rect x="96.0148%" y="3109" width="0.0336%" height="15" fill="rgb(254,118,45)" fg:x="1267133928" fg:w="443154"/><text x="96.2648%" y="3119.50"></text></g><g><title>std::io::default_read_to_string (443,154 samples, 0.03%)</title><rect x="96.0148%" y="3093" width="0.0336%" height="15" fill="rgb(228,6,45)" fg:x="1267133928" fg:w="443154"/><text x="96.2648%" y="3103.50"></text></g><g><title>std::io::append_to_string (443,154 samples, 0.03%)</title><rect x="96.0148%" y="3077" width="0.0336%" height="15" fill="rgb(241,18,35)" fg:x="1267133928" fg:w="443154"/><text x="96.2648%" y="3087.50"></text></g><g><title>core::str::converts::from_utf8 (443,154 samples, 0.03%)</title><rect x="96.0148%" y="3061" width="0.0336%" height="15" fill="rgb(227,214,53)" fg:x="1267133928" fg:w="443154"/><text x="96.2648%" y="3071.50"></text></g><g><title>core::str::validations::run_utf8_validation (443,154 samples, 0.03%)</title><rect x="96.0148%" y="3045" width="0.0336%" height="15" fill="rgb(224,107,51)" fg:x="1267133928" fg:w="443154"/><text x="96.2648%" y="3055.50"></text></g><g><title>_start (1,198,944,938 samples, 90.85%)</title><rect x="5.2385%" y="3429" width="90.8479%" height="15" fill="rgb(248,60,28)" fg:x="69133648" fg:w="1198944938"/><text x="5.4885%" y="3439.50">_start</text></g><g><title>__libc_start_main (1,198,944,938 samples, 90.85%)</title><rect x="5.2385%" y="3413" width="90.8479%" height="15" fill="rgb(249,101,23)" fg:x="69133648" fg:w="1198944938"/><text x="5.4885%" y="3423.50">__libc_start_main</text></g><g><title>[libc.so.6] (1,198,944,938 samples, 90.85%)</title><rect x="5.2385%" y="3397" width="90.8479%" height="15" fill="rgb(228,51,19)" fg:x="69133648" fg:w="1198944938"/><text x="5.4885%" y="3407.50">[libc.so.6]</text></g><g><title>main (1,198,944,938 samples, 90.85%)</title><rect x="5.2385%" y="3381" width="90.8479%" height="15" fill="rgb(213,20,6)" fg:x="69133648" fg:w="1198944938"/><text x="5.4885%" y="3391.50">main</text></g><g><title>std::rt::lang_start_internal (1,198,944,938 samples, 90.85%)</title><rect x="5.2385%" y="3365" width="90.8479%" height="15" fill="rgb(212,124,10)" fg:x="69133648" fg:w="1198944938"/><text x="5.4885%" y="3375.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,198,944,938 samples, 90.85%)</title><rect x="5.2385%" y="3349" width="90.8479%" height="15" fill="rgb(248,3,40)" fg:x="69133648" fg:w="1198944938"/><text x="5.4885%" y="3359.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,198,944,938 samples, 90.85%)</title><rect x="5.2385%" y="3333" width="90.8479%" height="15" fill="rgb(223,178,23)" fg:x="69133648" fg:w="1198944938"/><text x="5.4885%" y="3343.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,198,944,938 samples, 90.85%)</title><rect x="5.2385%" y="3317" width="90.8479%" height="15" fill="rgb(240,132,45)" fg:x="69133648" fg:w="1198944938"/><text x="5.4885%" y="3327.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (1,198,944,938 samples, 90.85%)</title><rect x="5.2385%" y="3301" width="90.8479%" height="15" fill="rgb(245,164,36)" fg:x="69133648" fg:w="1198944938"/><text x="5.4885%" y="3311.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::rt::init (501,504 samples, 0.04%)</title><rect x="96.0484%" y="3285" width="0.0380%" height="15" fill="rgb(231,188,53)" fg:x="1267577082" fg:w="501504"/><text x="96.2984%" y="3295.50"></text></g><g><title>std::sys::pal::unix::init (501,504 samples, 0.04%)</title><rect x="96.0484%" y="3269" width="0.0380%" height="15" fill="rgb(237,198,39)" fg:x="1267577082" fg:w="501504"/><text x="96.2984%" y="3279.50"></text></g><g><title>std::sys::pal::unix::stack_overflow::imp::init (501,504 samples, 0.04%)</title><rect x="96.0484%" y="3253" width="0.0380%" height="15" fill="rgb(223,120,35)" fg:x="1267577082" fg:w="501504"/><text x="96.2984%" y="3263.50"></text></g><g><title>std::sys::pal::unix::os::page_size (501,504 samples, 0.04%)</title><rect x="96.0484%" y="3237" width="0.0380%" height="15" fill="rgb(253,107,49)" fg:x="1267577082" fg:w="501504"/><text x="96.2984%" y="3247.50"></text></g><g><title>__sysconf (501,504 samples, 0.04%)</title><rect x="96.0484%" y="3221" width="0.0380%" height="15" fill="rgb(216,44,31)" fg:x="1267577082" fg:w="501504"/><text x="96.2984%" y="3231.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2,989,329 samples, 0.23%)</title><rect x="96.0864%" y="3429" width="0.2265%" height="15" fill="rgb(253,87,21)" fg:x="1268078586" fg:w="2989329"/><text x="96.3364%" y="3439.50"></text></g><g><title>cfree (8,352,254 samples, 0.63%)</title><rect x="96.3129%" y="3429" width="0.6329%" height="15" fill="rgb(226,18,2)" fg:x="1271067915" fg:w="8352254"/><text x="96.5629%" y="3439.50"></text></g><g><title>[libc.so.6] (3,452,415 samples, 0.26%)</title><rect x="96.6842%" y="3413" width="0.2616%" height="15" fill="rgb(216,8,46)" fg:x="1275967754" fg:w="3452415"/><text x="96.9342%" y="3423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,533,358 samples, 0.19%)</title><rect x="96.9458%" y="3429" width="0.1920%" height="15" fill="rgb(226,140,39)" fg:x="1279420169" fg:w="2533358"/><text x="97.1958%" y="3439.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,533,358 samples, 0.19%)</title><rect x="96.9458%" y="3413" width="0.1920%" height="15" fill="rgb(221,194,54)" fg:x="1279420169" fg:w="2533358"/><text x="97.1958%" y="3423.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,533,358 samples, 0.19%)</title><rect x="96.9458%" y="3397" width="0.1920%" height="15" fill="rgb(213,92,11)" fg:x="1279420169" fg:w="2533358"/><text x="97.1958%" y="3407.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,533,358 samples, 0.19%)</title><rect x="96.9458%" y="3381" width="0.1920%" height="15" fill="rgb(229,162,46)" fg:x="1279420169" fg:w="2533358"/><text x="97.1958%" y="3391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,533,358 samples, 0.19%)</title><rect x="96.9458%" y="3365" width="0.1920%" height="15" fill="rgb(214,111,36)" fg:x="1279420169" fg:w="2533358"/><text x="97.1958%" y="3375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,533,358 samples, 0.19%)</title><rect x="96.9458%" y="3349" width="0.1920%" height="15" fill="rgb(207,6,21)" fg:x="1279420169" fg:w="2533358"/><text x="97.1958%" y="3359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,533,358 samples, 0.19%)</title><rect x="96.9458%" y="3333" width="0.1920%" height="15" fill="rgb(213,127,38)" fg:x="1279420169" fg:w="2533358"/><text x="97.1958%" y="3343.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,533,358 samples, 0.19%)</title><rect x="96.9458%" y="3317" width="0.1920%" height="15" fill="rgb(238,118,32)" fg:x="1279420169" fg:w="2533358"/><text x="97.1958%" y="3327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,533,358 samples, 0.19%)</title><rect x="96.9458%" y="3301" width="0.1920%" height="15" fill="rgb(240,139,39)" fg:x="1279420169" fg:w="2533358"/><text x="97.1958%" y="3311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,533,358 samples, 0.19%)</title><rect x="96.9458%" y="3285" width="0.1920%" height="15" fill="rgb(235,10,37)" fg:x="1279420169" fg:w="2533358"/><text x="97.1958%" y="3295.50"></text></g><g><title>alloc::alloc::dealloc (2,533,358 samples, 0.19%)</title><rect x="96.9458%" y="3269" width="0.1920%" height="15" fill="rgb(249,171,38)" fg:x="1279420169" fg:w="2533358"/><text x="97.1958%" y="3279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (3,593,668 samples, 0.27%)</title><rect x="97.1378%" y="3413" width="0.2723%" height="15" fill="rgb(242,144,32)" fg:x="1281953527" fg:w="3593668"/><text x="97.3878%" y="3423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,593,668 samples, 0.27%)</title><rect x="97.1378%" y="3397" width="0.2723%" height="15" fill="rgb(217,117,21)" fg:x="1281953527" fg:w="3593668"/><text x="97.3878%" y="3407.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (3,593,668 samples, 0.27%)</title><rect x="97.1378%" y="3381" width="0.2723%" height="15" fill="rgb(249,87,1)" fg:x="1281953527" fg:w="3593668"/><text x="97.3878%" y="3391.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (3,493,133 samples, 0.26%)</title><rect x="97.4101%" y="3413" width="0.2647%" height="15" fill="rgb(248,196,48)" fg:x="1285547195" fg:w="3493133"/><text x="97.6601%" y="3423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3,493,133 samples, 0.26%)</title><rect x="97.4101%" y="3397" width="0.2647%" height="15" fill="rgb(251,206,33)" fg:x="1285547195" fg:w="3493133"/><text x="97.6601%" y="3407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,493,133 samples, 0.26%)</title><rect x="97.4101%" y="3381" width="0.2647%" height="15" fill="rgb(232,141,28)" fg:x="1285547195" fg:w="3493133"/><text x="97.6601%" y="3391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,493,133 samples, 0.26%)</title><rect x="97.4101%" y="3365" width="0.2647%" height="15" fill="rgb(209,167,14)" fg:x="1285547195" fg:w="3493133"/><text x="97.6601%" y="3375.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,493,133 samples, 0.26%)</title><rect x="97.4101%" y="3349" width="0.2647%" height="15" fill="rgb(225,11,50)" fg:x="1285547195" fg:w="3493133"/><text x="97.6601%" y="3359.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,493,133 samples, 0.26%)</title><rect x="97.4101%" y="3333" width="0.2647%" height="15" fill="rgb(209,50,20)" fg:x="1285547195" fg:w="3493133"/><text x="97.6601%" y="3343.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,493,133 samples, 0.26%)</title><rect x="97.4101%" y="3317" width="0.2647%" height="15" fill="rgb(212,17,46)" fg:x="1285547195" fg:w="3493133"/><text x="97.6601%" y="3327.50"></text></g><g><title>alloc::alloc::dealloc (3,493,133 samples, 0.26%)</title><rect x="97.4101%" y="3301" width="0.2647%" height="15" fill="rgb(216,101,39)" fg:x="1285547195" fg:w="3493133"/><text x="97.6601%" y="3311.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (9,932,045 samples, 0.75%)</title><rect x="97.1378%" y="3429" width="0.7526%" height="15" fill="rgb(212,228,48)" fg:x="1281953527" fg:w="9932045"/><text x="97.3878%" y="3439.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::BitVector&gt; (2,845,244 samples, 0.22%)</title><rect x="97.6747%" y="3413" width="0.2156%" height="15" fill="rgb(250,6,50)" fg:x="1289040328" fg:w="2845244"/><text x="97.9247%" y="3423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,845,244 samples, 0.22%)</title><rect x="97.6747%" y="3397" width="0.2156%" height="15" fill="rgb(250,160,48)" fg:x="1289040328" fg:w="2845244"/><text x="97.9247%" y="3407.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,845,244 samples, 0.22%)</title><rect x="97.6747%" y="3381" width="0.2156%" height="15" fill="rgb(244,216,33)" fg:x="1289040328" fg:w="2845244"/><text x="97.9247%" y="3391.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,845,244 samples, 0.22%)</title><rect x="97.6747%" y="3365" width="0.2156%" height="15" fill="rgb(207,157,5)" fg:x="1289040328" fg:w="2845244"/><text x="97.9247%" y="3375.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,845,244 samples, 0.22%)</title><rect x="97.6747%" y="3349" width="0.2156%" height="15" fill="rgb(228,199,8)" fg:x="1289040328" fg:w="2845244"/><text x="97.9247%" y="3359.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,845,244 samples, 0.22%)</title><rect x="97.6747%" y="3333" width="0.2156%" height="15" fill="rgb(227,80,20)" fg:x="1289040328" fg:w="2845244"/><text x="97.9247%" y="3343.50"></text></g><g><title>alloc::alloc::dealloc (2,845,244 samples, 0.22%)</title><rect x="97.6747%" y="3317" width="0.2156%" height="15" fill="rgb(222,9,33)" fg:x="1289040328" fg:w="2845244"/><text x="97.9247%" y="3327.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,325,667 samples, 0.18%)</title><rect x="97.8903%" y="3429" width="0.1762%" height="15" fill="rgb(239,44,28)" fg:x="1291885572" fg:w="2325667"/><text x="98.1403%" y="3439.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (10,165,636 samples, 0.77%)</title><rect x="98.0666%" y="3429" width="0.7703%" height="15" fill="rgb(249,187,43)" fg:x="1294211239" fg:w="10165636"/><text x="98.3166%" y="3439.50"></text></g><g><title>main::benchmark::clear_dirty_flags (10,619,936 samples, 0.80%)</title><rect x="98.8368%" y="3429" width="0.8047%" height="15" fill="rgb(216,141,28)" fg:x="1304376875" fg:w="10619936"/><text x="99.0868%" y="3439.50"></text></g><g><title>malloc (2,859,757 samples, 0.22%)</title><rect x="99.6415%" y="3429" width="0.2167%" height="15" fill="rgb(230,154,53)" fg:x="1314996811" fg:w="2859757"/><text x="99.8915%" y="3439.50"></text></g><g><title>all (1,319,727,422 samples, 100%)</title><rect x="0.0000%" y="3461" width="100.0000%" height="15" fill="rgb(227,82,4)" fg:x="0" fg:w="1319727422"/><text x="0.2500%" y="3471.50"></text></g><g><title>main (1,319,727,422 samples, 100.00%)</title><rect x="0.0000%" y="3445" width="100.0000%" height="15" fill="rgb(220,107,16)" fg:x="0" fg:w="1319727422"/><text x="0.2500%" y="3455.50">main</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_number (1,870,854 samples, 0.14%)</title><rect x="99.8582%" y="3429" width="0.1418%" height="15" fill="rgb(207,187,2)" fg:x="1317856568" fg:w="1870854"/><text x="100.1082%" y="3439.50"></text></g></svg></svg>