<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="4502" onload="init(evt)" viewBox="0 0 1200 4502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="4502" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="4485.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="4485.00"> </text><svg id="frames" x="10" width="1180" total_samples="153419696"><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,992,515 samples, 1.30%)</title><rect x="0.0000%" y="4421" width="1.2987%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1992515"/><text x="0.2500%" y="4431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,599,170 samples, 1.04%)</title><rect x="1.2987%" y="4421" width="1.0423%" height="15" fill="rgb(217,0,24)" fg:x="1992515" fg:w="1599170"/><text x="1.5487%" y="4431.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,599,170 samples, 1.04%)</title><rect x="1.2987%" y="4405" width="1.0423%" height="15" fill="rgb(221,193,54)" fg:x="1992515" fg:w="1599170"/><text x="1.5487%" y="4415.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,599,170 samples, 1.04%)</title><rect x="1.2987%" y="4389" width="1.0423%" height="15" fill="rgb(248,212,6)" fg:x="1992515" fg:w="1599170"/><text x="1.5487%" y="4399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,599,170 samples, 1.04%)</title><rect x="1.2987%" y="4373" width="1.0423%" height="15" fill="rgb(208,68,35)" fg:x="1992515" fg:w="1599170"/><text x="1.5487%" y="4383.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,599,170 samples, 1.04%)</title><rect x="1.2987%" y="4357" width="1.0423%" height="15" fill="rgb(232,128,0)" fg:x="1992515" fg:w="1599170"/><text x="1.5487%" y="4367.50"></text></g><g><title>[libc.so.6] (5,172,754 samples, 3.37%)</title><rect x="2.3411%" y="4421" width="3.3716%" height="15" fill="rgb(207,160,47)" fg:x="3591685" fg:w="5172754"/><text x="2.5911%" y="4431.50">[li..</text></g><g><title>[unknown] (1,066,121 samples, 0.69%)</title><rect x="6.0396%" y="4405" width="0.6949%" height="15" fill="rgb(228,23,34)" fg:x="9265943" fg:w="1066121"/><text x="6.2896%" y="4415.50"></text></g><g><title>[unknown] (1,066,121 samples, 0.69%)</title><rect x="6.0396%" y="4389" width="0.6949%" height="15" fill="rgb(218,30,26)" fg:x="9265943" fg:w="1066121"/><text x="6.2896%" y="4399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,066,121 samples, 0.69%)</title><rect x="6.0396%" y="4373" width="0.6949%" height="15" fill="rgb(220,122,19)" fg:x="9265943" fg:w="1066121"/><text x="6.2896%" y="4383.50"></text></g><g><title>cfree (2,251,212 samples, 1.47%)</title><rect x="6.7345%" y="4405" width="1.4674%" height="15" fill="rgb(250,228,42)" fg:x="10332064" fg:w="2251212"/><text x="6.9845%" y="4415.50"></text></g><g><title>[unknown] (5,858,186 samples, 3.82%)</title><rect x="5.7127%" y="4421" width="3.8184%" height="15" fill="rgb(240,193,28)" fg:x="8764439" fg:w="5858186"/><text x="5.9627%" y="4431.50">[unk..</text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_number (2,039,349 samples, 1.33%)</title><rect x="8.2019%" y="4405" width="1.3293%" height="15" fill="rgb(216,20,37)" fg:x="12583276" fg:w="2039349"/><text x="8.4519%" y="4415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;main::benchmark::WebLayoutFrameResult&gt;&gt; (7,498,359 samples, 4.89%)</title><rect x="9.5311%" y="4149" width="4.8875%" height="15" fill="rgb(206,188,39)" fg:x="14622625" fg:w="7498359"/><text x="9.7811%" y="4159.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,498,359 samples, 4.89%)</title><rect x="9.5311%" y="4133" width="4.8875%" height="15" fill="rgb(217,207,13)" fg:x="14622625" fg:w="7498359"/><text x="9.7811%" y="4143.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[main::benchmark::WebLayoutFrameResult]&gt; (7,498,359 samples, 4.89%)</title><rect x="9.5311%" y="4117" width="4.8875%" height="15" fill="rgb(231,73,38)" fg:x="14622625" fg:w="7498359"/><text x="9.7811%" y="4127.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;main::benchmark::WebLayoutFrameResult&gt; (7,498,359 samples, 4.89%)</title><rect x="9.5311%" y="4101" width="4.8875%" height="15" fill="rgb(225,20,46)" fg:x="14622625" fg:w="7498359"/><text x="9.7811%" y="4111.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (7,498,359 samples, 4.89%)</title><rect x="9.5311%" y="4085" width="4.8875%" height="15" fill="rgb(210,31,41)" fg:x="14622625" fg:w="7498359"/><text x="9.7811%" y="4095.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7,498,359 samples, 4.89%)</title><rect x="9.5311%" y="4069" width="4.8875%" height="15" fill="rgb(221,200,47)" fg:x="14622625" fg:w="7498359"/><text x="9.7811%" y="4079.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7,498,359 samples, 4.89%)</title><rect x="9.5311%" y="4053" width="4.8875%" height="15" fill="rgb(226,26,5)" fg:x="14622625" fg:w="7498359"/><text x="9.7811%" y="4063.50">core::..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,498,359 samples, 4.89%)</title><rect x="9.5311%" y="4037" width="4.8875%" height="15" fill="rgb(249,33,26)" fg:x="14622625" fg:w="7498359"/><text x="9.7811%" y="4047.50">&lt;alloc..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (7,498,359 samples, 4.89%)</title><rect x="9.5311%" y="4021" width="4.8875%" height="15" fill="rgb(235,183,28)" fg:x="14622625" fg:w="7498359"/><text x="9.7811%" y="4031.50">alloc:..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7,498,359 samples, 4.89%)</title><rect x="9.5311%" y="4005" width="4.8875%" height="15" fill="rgb(221,5,38)" fg:x="14622625" fg:w="7498359"/><text x="9.7811%" y="4015.50">&lt;alloc..</text></g><g><title>alloc::alloc::dealloc (7,498,359 samples, 4.89%)</title><rect x="9.5311%" y="3989" width="4.8875%" height="15" fill="rgb(247,18,42)" fg:x="14622625" fg:w="7498359"/><text x="9.7811%" y="3999.50">alloc:..</text></g><g><title>cfree (7,498,359 samples, 4.89%)</title><rect x="9.5311%" y="3973" width="4.8875%" height="15" fill="rgb(241,131,45)" fg:x="14622625" fg:w="7498359"/><text x="9.7811%" y="3983.50">cfree</text></g><g><title>[libc.so.6] (7,498,359 samples, 4.89%)</title><rect x="9.5311%" y="3957" width="4.8875%" height="15" fill="rgb(249,31,29)" fg:x="14622625" fg:w="7498359"/><text x="9.7811%" y="3967.50">[libc...</text></g><g><title>[libc.so.6] (7,498,359 samples, 4.89%)</title><rect x="9.5311%" y="3941" width="4.8875%" height="15" fill="rgb(225,111,53)" fg:x="14622625" fg:w="7498359"/><text x="9.7811%" y="3951.50">[libc...</text></g><g><title>[libc.so.6] (2,541,156 samples, 1.66%)</title><rect x="12.7623%" y="3925" width="1.6563%" height="15" fill="rgb(238,160,17)" fg:x="19579828" fg:w="2541156"/><text x="13.0123%" y="3935.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,473,704 samples, 1.61%)</title><rect x="15.8589%" y="2837" width="1.6124%" height="15" fill="rgb(214,148,48)" fg:x="24330723" fg:w="2473704"/><text x="16.1089%" y="2847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,473,704 samples, 1.61%)</title><rect x="15.8589%" y="2821" width="1.6124%" height="15" fill="rgb(232,36,49)" fg:x="24330723" fg:w="2473704"/><text x="16.1089%" y="2831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,473,704 samples, 1.61%)</title><rect x="15.8589%" y="2805" width="1.6124%" height="15" fill="rgb(209,103,24)" fg:x="24330723" fg:w="2473704"/><text x="16.1089%" y="2815.50"></text></g><g><title>alloc::slice::hack::to_vec (2,473,704 samples, 1.61%)</title><rect x="15.8589%" y="2789" width="1.6124%" height="15" fill="rgb(229,88,8)" fg:x="24330723" fg:w="2473704"/><text x="16.1089%" y="2799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,473,704 samples, 1.61%)</title><rect x="15.8589%" y="2773" width="1.6124%" height="15" fill="rgb(213,181,19)" fg:x="24330723" fg:w="2473704"/><text x="16.1089%" y="2783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,473,704 samples, 1.61%)</title><rect x="15.8589%" y="2757" width="1.6124%" height="15" fill="rgb(254,191,54)" fg:x="24330723" fg:w="2473704"/><text x="16.1089%" y="2767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,473,704 samples, 1.61%)</title><rect x="15.8589%" y="2741" width="1.6124%" height="15" fill="rgb(241,83,37)" fg:x="24330723" fg:w="2473704"/><text x="16.1089%" y="2751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,473,704 samples, 1.61%)</title><rect x="15.8589%" y="2725" width="1.6124%" height="15" fill="rgb(233,36,39)" fg:x="24330723" fg:w="2473704"/><text x="16.1089%" y="2735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,473,704 samples, 1.61%)</title><rect x="15.8589%" y="2709" width="1.6124%" height="15" fill="rgb(226,3,54)" fg:x="24330723" fg:w="2473704"/><text x="16.1089%" y="2719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,473,704 samples, 1.61%)</title><rect x="15.8589%" y="2693" width="1.6124%" height="15" fill="rgb(245,192,40)" fg:x="24330723" fg:w="2473704"/><text x="16.1089%" y="2703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,473,704 samples, 1.61%)</title><rect x="15.8589%" y="2677" width="1.6124%" height="15" fill="rgb(238,167,29)" fg:x="24330723" fg:w="2473704"/><text x="16.1089%" y="2687.50"></text></g><g><title>alloc::alloc::alloc (2,473,704 samples, 1.61%)</title><rect x="15.8589%" y="2661" width="1.6124%" height="15" fill="rgb(232,182,51)" fg:x="24330723" fg:w="2473704"/><text x="16.1089%" y="2671.50"></text></g><g><title>malloc (2,473,704 samples, 1.61%)</title><rect x="15.8589%" y="2645" width="1.6124%" height="15" fill="rgb(231,60,39)" fg:x="24330723" fg:w="2473704"/><text x="16.1089%" y="2655.50"></text></g><g><title>[libc.so.6] (2,473,704 samples, 1.61%)</title><rect x="15.8589%" y="2629" width="1.6124%" height="15" fill="rgb(208,69,12)" fg:x="24330723" fg:w="2473704"/><text x="16.1089%" y="2639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,402,044 samples, 1.57%)</title><rect x="17.4713%" y="2821" width="1.5657%" height="15" fill="rgb(235,93,37)" fg:x="26804427" fg:w="2402044"/><text x="17.7213%" y="2831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,402,044 samples, 1.57%)</title><rect x="17.4713%" y="2805" width="1.5657%" height="15" fill="rgb(213,116,39)" fg:x="26804427" fg:w="2402044"/><text x="17.7213%" y="2815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,402,044 samples, 1.57%)</title><rect x="17.4713%" y="2789" width="1.5657%" height="15" fill="rgb(222,207,29)" fg:x="26804427" fg:w="2402044"/><text x="17.7213%" y="2799.50"></text></g><g><title>alloc::slice::hack::to_vec (2,402,044 samples, 1.57%)</title><rect x="17.4713%" y="2773" width="1.5657%" height="15" fill="rgb(206,96,30)" fg:x="26804427" fg:w="2402044"/><text x="17.7213%" y="2783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,402,044 samples, 1.57%)</title><rect x="17.4713%" y="2757" width="1.5657%" height="15" fill="rgb(218,138,4)" fg:x="26804427" fg:w="2402044"/><text x="17.7213%" y="2767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,402,044 samples, 1.57%)</title><rect x="17.4713%" y="2741" width="1.5657%" height="15" fill="rgb(250,191,14)" fg:x="26804427" fg:w="2402044"/><text x="17.7213%" y="2751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,402,044 samples, 1.57%)</title><rect x="17.4713%" y="2725" width="1.5657%" height="15" fill="rgb(239,60,40)" fg:x="26804427" fg:w="2402044"/><text x="17.7213%" y="2735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,402,044 samples, 1.57%)</title><rect x="17.4713%" y="2709" width="1.5657%" height="15" fill="rgb(206,27,48)" fg:x="26804427" fg:w="2402044"/><text x="17.7213%" y="2719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,402,044 samples, 1.57%)</title><rect x="17.4713%" y="2693" width="1.5657%" height="15" fill="rgb(225,35,8)" fg:x="26804427" fg:w="2402044"/><text x="17.7213%" y="2703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,402,044 samples, 1.57%)</title><rect x="17.4713%" y="2677" width="1.5657%" height="15" fill="rgb(250,213,24)" fg:x="26804427" fg:w="2402044"/><text x="17.7213%" y="2687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,402,044 samples, 1.57%)</title><rect x="17.4713%" y="2661" width="1.5657%" height="15" fill="rgb(247,123,22)" fg:x="26804427" fg:w="2402044"/><text x="17.7213%" y="2671.50"></text></g><g><title>alloc::alloc::alloc (2,402,044 samples, 1.57%)</title><rect x="17.4713%" y="2645" width="1.5657%" height="15" fill="rgb(231,138,38)" fg:x="26804427" fg:w="2402044"/><text x="17.7213%" y="2655.50"></text></g><g><title>malloc (2,402,044 samples, 1.57%)</title><rect x="17.4713%" y="2629" width="1.5657%" height="15" fill="rgb(231,145,46)" fg:x="26804427" fg:w="2402044"/><text x="17.7213%" y="2639.50"></text></g><g><title>[libc.so.6] (2,402,044 samples, 1.57%)</title><rect x="17.4713%" y="2613" width="1.5657%" height="15" fill="rgb(251,118,11)" fg:x="26804427" fg:w="2402044"/><text x="17.7213%" y="2623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,030,835 samples, 3.28%)</title><rect x="19.0370%" y="2693" width="3.2791%" height="15" fill="rgb(217,147,25)" fg:x="29206471" fg:w="5030835"/><text x="19.2870%" y="2703.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,030,835 samples, 3.28%)</title><rect x="19.0370%" y="2677" width="3.2791%" height="15" fill="rgb(247,81,37)" fg:x="29206471" fg:w="5030835"/><text x="19.2870%" y="2687.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,030,835 samples, 3.28%)</title><rect x="19.0370%" y="2661" width="3.2791%" height="15" fill="rgb(209,12,38)" fg:x="29206471" fg:w="5030835"/><text x="19.2870%" y="2671.50">all..</text></g><g><title>alloc::slice::hack::to_vec (5,030,835 samples, 3.28%)</title><rect x="19.0370%" y="2645" width="3.2791%" height="15" fill="rgb(227,1,9)" fg:x="29206471" fg:w="5030835"/><text x="19.2870%" y="2655.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,030,835 samples, 3.28%)</title><rect x="19.0370%" y="2629" width="3.2791%" height="15" fill="rgb(248,47,43)" fg:x="29206471" fg:w="5030835"/><text x="19.2870%" y="2639.50">&lt;T ..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5,030,835 samples, 3.28%)</title><rect x="19.0370%" y="2613" width="3.2791%" height="15" fill="rgb(221,10,30)" fg:x="29206471" fg:w="5030835"/><text x="19.2870%" y="2623.50">cor..</text></g><g><title>core::intrinsics::copy_nonoverlapping (5,030,835 samples, 3.28%)</title><rect x="19.0370%" y="2597" width="3.2791%" height="15" fill="rgb(210,229,1)" fg:x="29206471" fg:w="5030835"/><text x="19.2870%" y="2607.50">cor..</text></g><g><title>[libc.so.6] (5,030,835 samples, 3.28%)</title><rect x="19.0370%" y="2581" width="3.2791%" height="15" fill="rgb(222,148,37)" fg:x="29206471" fg:w="5030835"/><text x="19.2870%" y="2591.50">[li..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (12,424,175 samples, 8.10%)</title><rect x="15.8589%" y="2901" width="8.0982%" height="15" fill="rgb(234,67,33)" fg:x="24330723" fg:w="12424175"/><text x="16.1089%" y="2911.50">&lt;serde_json..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (12,424,175 samples, 8.10%)</title><rect x="15.8589%" y="2885" width="8.0982%" height="15" fill="rgb(247,98,35)" fg:x="24330723" fg:w="12424175"/><text x="16.1089%" y="2895.50">&lt;serde_json..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (12,424,175 samples, 8.10%)</title><rect x="15.8589%" y="2869" width="8.0982%" height="15" fill="rgb(247,138,52)" fg:x="24330723" fg:w="12424175"/><text x="16.1089%" y="2879.50">&lt;alloc::col..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (12,424,175 samples, 8.10%)</title><rect x="15.8589%" y="2853" width="8.0982%" height="15" fill="rgb(213,79,30)" fg:x="24330723" fg:w="12424175"/><text x="16.1089%" y="2863.50">&lt;alloc::col..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (9,950,471 samples, 6.49%)</title><rect x="17.4713%" y="2837" width="6.4858%" height="15" fill="rgb(246,177,23)" fg:x="26804427" fg:w="9950471"/><text x="17.7213%" y="2847.50">&lt;serde_j..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7,548,427 samples, 4.92%)</title><rect x="19.0370%" y="2821" width="4.9201%" height="15" fill="rgb(230,62,27)" fg:x="29206471" fg:w="7548427"/><text x="19.2870%" y="2831.50">&lt;alloc..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7,548,427 samples, 4.92%)</title><rect x="19.0370%" y="2805" width="4.9201%" height="15" fill="rgb(216,154,8)" fg:x="29206471" fg:w="7548427"/><text x="19.2870%" y="2815.50">alloc:..</text></g><g><title>alloc::slice::hack::to_vec (7,548,427 samples, 4.92%)</title><rect x="19.0370%" y="2789" width="4.9201%" height="15" fill="rgb(244,35,45)" fg:x="29206471" fg:w="7548427"/><text x="19.2870%" y="2799.50">alloc:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7,548,427 samples, 4.92%)</title><rect x="19.0370%" y="2773" width="4.9201%" height="15" fill="rgb(251,115,12)" fg:x="29206471" fg:w="7548427"/><text x="19.2870%" y="2783.50">&lt;T as ..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (7,548,427 samples, 4.92%)</title><rect x="19.0370%" y="2757" width="4.9201%" height="15" fill="rgb(240,54,50)" fg:x="29206471" fg:w="7548427"/><text x="19.2870%" y="2767.50">&lt;serde..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (7,548,427 samples, 4.92%)</title><rect x="19.0370%" y="2741" width="4.9201%" height="15" fill="rgb(233,84,52)" fg:x="29206471" fg:w="7548427"/><text x="19.2870%" y="2751.50">&lt;serde..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (7,548,427 samples, 4.92%)</title><rect x="19.0370%" y="2725" width="4.9201%" height="15" fill="rgb(207,117,47)" fg:x="29206471" fg:w="7548427"/><text x="19.2870%" y="2735.50">&lt;alloc..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7,548,427 samples, 4.92%)</title><rect x="19.0370%" y="2709" width="4.9201%" height="15" fill="rgb(249,43,39)" fg:x="29206471" fg:w="7548427"/><text x="19.2870%" y="2719.50">&lt;alloc..</text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (2,517,592 samples, 1.64%)</title><rect x="22.3161%" y="2693" width="1.6410%" height="15" fill="rgb(209,38,44)" fg:x="34237306" fg:w="2517592"/><text x="22.5661%" y="2703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push_with_handle (2,517,592 samples, 1.64%)</title><rect x="22.3161%" y="2677" width="1.6410%" height="15" fill="rgb(236,212,23)" fg:x="34237306" fg:w="2517592"/><text x="22.5661%" y="2687.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2,517,592 samples, 1.64%)</title><rect x="22.3161%" y="2661" width="1.6410%" height="15" fill="rgb(242,79,21)" fg:x="34237306" fg:w="2517592"/><text x="22.5661%" y="2671.50"></text></g><g><title>&lt;main::benchmark::LayoutFrame as core::clone::Clone&gt;::clone (29,171,962 samples, 19.01%)</title><rect x="14.4186%" y="4133" width="19.0145%" height="15" fill="rgb(211,96,35)" fg:x="22120984" fg:w="29171962"/><text x="14.6686%" y="4143.50">&lt;main::benchmark::LayoutFrame ..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (29,171,962 samples, 19.01%)</title><rect x="14.4186%" y="4117" width="19.0145%" height="15" fill="rgb(253,215,40)" fg:x="22120984" fg:w="29171962"/><text x="14.6686%" y="4127.50">&lt;serde_json::value::Value as c..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (29,171,962 samples, 19.01%)</title><rect x="14.4186%" y="4101" width="19.0145%" height="15" fill="rgb(211,81,21)" fg:x="22120984" fg:w="29171962"/><text x="14.6686%" y="4111.50">&lt;serde_json::map::Map&lt;alloc::s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (29,171,962 samples, 19.01%)</title><rect x="14.4186%" y="4085" width="19.0145%" height="15" fill="rgb(208,190,38)" fg:x="22120984" fg:w="29171962"/><text x="14.6686%" y="4095.50">&lt;alloc::collections::btree::ma..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (29,171,962 samples, 19.01%)</title><rect x="14.4186%" y="4069" width="19.0145%" height="15" fill="rgb(235,213,38)" fg:x="22120984" fg:w="29171962"/><text x="14.6686%" y="4079.50">&lt;alloc::collections::btree::ma..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (29,171,962 samples, 19.01%)</title><rect x="14.4186%" y="4053" width="19.0145%" height="15" fill="rgb(237,122,38)" fg:x="22120984" fg:w="29171962"/><text x="14.6686%" y="4063.50">&lt;serde_json::value::Value as c..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (29,171,962 samples, 19.01%)</title><rect x="14.4186%" y="4037" width="19.0145%" height="15" fill="rgb(244,218,35)" fg:x="22120984" fg:w="29171962"/><text x="14.6686%" y="4047.50">&lt;serde_json::map::Map&lt;alloc::s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (29,171,962 samples, 19.01%)</title><rect x="14.4186%" y="4021" width="19.0145%" height="15" fill="rgb(240,68,47)" fg:x="22120984" fg:w="29171962"/><text x="14.6686%" y="4031.50">&lt;alloc::collections::btree::ma..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (29,171,962 samples, 19.01%)</title><rect x="14.4186%" y="4005" width="19.0145%" height="15" fill="rgb(210,16,53)" fg:x="22120984" fg:w="29171962"/><text x="14.6686%" y="4015.50">&lt;alloc::collections::btree::ma..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (29,171,962 samples, 19.01%)</title><rect x="14.4186%" y="3989" width="19.0145%" height="15" fill="rgb(235,124,12)" fg:x="22120984" fg:w="29171962"/><text x="14.6686%" y="3999.50">&lt;serde_json::value::Value as c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (29,171,962 samples, 19.01%)</title><rect x="14.4186%" y="3973" width="19.0145%" height="15" fill="rgb(224,169,11)" fg:x="22120984" fg:w="29171962"/><text x="14.6686%" y="3983.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core:..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29,171,962 samples, 19.01%)</title><rect x="14.4186%" y="3957" width="19.0145%" height="15" fill="rgb(250,166,2)" fg:x="22120984" fg:w="29171962"/><text x="14.6686%" y="3967.50">alloc::slice::&lt;impl [T]&gt;::to_v..</text></g><g><title>alloc::slice::hack::to_vec (29,171,962 samples, 19.01%)</title><rect x="14.4186%" y="3941" width="19.0145%" height="15" fill="rgb(242,216,29)" fg:x="22120984" fg:w="29171962"/><text x="14.6686%" y="3951.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (29,171,962 samples, 19.01%)</title><rect x="14.4186%" y="3925" width="19.0145%" height="15" fill="rgb(230,116,27)" fg:x="22120984" fg:w="29171962"/><text x="14.6686%" y="3935.50">&lt;T as alloc::slice::hack::Conv..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (29,171,962 samples, 19.01%)</title><rect x="14.4186%" y="3909" width="19.0145%" height="15" fill="rgb(228,99,48)" fg:x="22120984" fg:w="29171962"/><text x="14.6686%" y="3919.50">&lt;serde_json::value::Value as c..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (29,171,962 samples, 19.01%)</title><rect x="14.4186%" y="3893" width="19.0145%" height="15" fill="rgb(253,11,6)" fg:x="22120984" fg:w="29171962"/><text x="14.6686%" y="3903.50">&lt;serde_json::map::Map&lt;alloc::s..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (29,171,962 samples, 19.01%)</title><rect x="14.4186%" y="3877" width="19.0145%" height="15" fill="rgb(247,143,39)" fg:x="22120984" fg:w="29171962"/><text x="14.6686%" y="3887.50">&lt;alloc::collections::btree::ma..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3861" width="17.5742%" height="15" fill="rgb(236,97,10)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3871.50">&lt;alloc::collections::btree:..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3845" width="17.5742%" height="15" fill="rgb(233,208,19)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3855.50">&lt;serde_json::value::Value a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3829" width="17.5742%" height="15" fill="rgb(216,164,2)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3839.50">&lt;alloc::vec::Vec&lt;T,A&gt; as co..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3813" width="17.5742%" height="15" fill="rgb(220,129,5)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3823.50">alloc::slice::&lt;impl [T]&gt;::t..</text></g><g><title>alloc::slice::hack::to_vec (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3797" width="17.5742%" height="15" fill="rgb(242,17,10)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3807.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3781" width="17.5742%" height="15" fill="rgb(242,107,0)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3791.50">&lt;T as alloc::slice::hack::C..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3765" width="17.5742%" height="15" fill="rgb(251,28,31)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3775.50">&lt;serde_json::value::Value a..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3749" width="17.5742%" height="15" fill="rgb(233,223,10)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3759.50">&lt;serde_json::map::Map&lt;alloc..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3733" width="17.5742%" height="15" fill="rgb(215,21,27)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3743.50">&lt;alloc::collections::btree:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3717" width="17.5742%" height="15" fill="rgb(232,23,21)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3727.50">&lt;alloc::collections::btree:..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3701" width="17.5742%" height="15" fill="rgb(244,5,23)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3711.50">&lt;serde_json::value::Value a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3685" width="17.5742%" height="15" fill="rgb(226,81,46)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3695.50">&lt;alloc::vec::Vec&lt;T,A&gt; as co..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3669" width="17.5742%" height="15" fill="rgb(247,70,30)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3679.50">alloc::slice::&lt;impl [T]&gt;::t..</text></g><g><title>alloc::slice::hack::to_vec (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3653" width="17.5742%" height="15" fill="rgb(212,68,19)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3663.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3637" width="17.5742%" height="15" fill="rgb(240,187,13)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3647.50">&lt;T as alloc::slice::hack::C..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3621" width="17.5742%" height="15" fill="rgb(223,113,26)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3631.50">&lt;serde_json::value::Value a..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3605" width="17.5742%" height="15" fill="rgb(206,192,2)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3615.50">&lt;serde_json::map::Map&lt;alloc..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3589" width="17.5742%" height="15" fill="rgb(241,108,4)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3599.50">&lt;alloc::collections::btree:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3573" width="17.5742%" height="15" fill="rgb(247,173,49)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3583.50">&lt;alloc::collections::btree:..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3557" width="17.5742%" height="15" fill="rgb(224,114,35)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3567.50">&lt;serde_json::value::Value a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3541" width="17.5742%" height="15" fill="rgb(245,159,27)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3551.50">&lt;alloc::vec::Vec&lt;T,A&gt; as co..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3525" width="17.5742%" height="15" fill="rgb(245,172,44)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3535.50">alloc::slice::&lt;impl [T]&gt;::t..</text></g><g><title>alloc::slice::hack::to_vec (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3509" width="17.5742%" height="15" fill="rgb(236,23,11)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3519.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3493" width="17.5742%" height="15" fill="rgb(205,117,38)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3503.50">&lt;T as alloc::slice::hack::C..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3477" width="17.5742%" height="15" fill="rgb(237,72,25)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3487.50">&lt;serde_json::value::Value a..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3461" width="17.5742%" height="15" fill="rgb(244,70,9)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3471.50">&lt;serde_json::map::Map&lt;alloc..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3445" width="17.5742%" height="15" fill="rgb(217,125,39)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3455.50">&lt;alloc::collections::btree:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3429" width="17.5742%" height="15" fill="rgb(235,36,10)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3439.50">&lt;alloc::collections::btree:..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3413" width="17.5742%" height="15" fill="rgb(251,123,47)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3423.50">&lt;serde_json::value::Value a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3397" width="17.5742%" height="15" fill="rgb(221,13,13)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3407.50">&lt;alloc::vec::Vec&lt;T,A&gt; as co..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3381" width="17.5742%" height="15" fill="rgb(238,131,9)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3391.50">alloc::slice::&lt;impl [T]&gt;::t..</text></g><g><title>alloc::slice::hack::to_vec (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3365" width="17.5742%" height="15" fill="rgb(211,50,8)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3375.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3349" width="17.5742%" height="15" fill="rgb(245,182,24)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3359.50">&lt;T as alloc::slice::hack::C..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3333" width="17.5742%" height="15" fill="rgb(242,14,37)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3343.50">&lt;serde_json::value::Value a..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3317" width="17.5742%" height="15" fill="rgb(246,228,12)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3327.50">&lt;serde_json::map::Map&lt;alloc..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3301" width="17.5742%" height="15" fill="rgb(213,55,15)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3311.50">&lt;alloc::collections::btree:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3285" width="17.5742%" height="15" fill="rgb(209,9,3)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3295.50">&lt;alloc::collections::btree:..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3269" width="17.5742%" height="15" fill="rgb(230,59,30)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3279.50">&lt;serde_json::value::Value a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3253" width="17.5742%" height="15" fill="rgb(209,121,21)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3263.50">&lt;alloc::vec::Vec&lt;T,A&gt; as co..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3237" width="17.5742%" height="15" fill="rgb(220,109,13)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3247.50">alloc::slice::&lt;impl [T]&gt;::t..</text></g><g><title>alloc::slice::hack::to_vec (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3221" width="17.5742%" height="15" fill="rgb(232,18,1)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3231.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3205" width="17.5742%" height="15" fill="rgb(215,41,42)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3215.50">&lt;T as alloc::slice::hack::C..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3189" width="17.5742%" height="15" fill="rgb(224,123,36)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3199.50">&lt;serde_json::value::Value a..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3173" width="17.5742%" height="15" fill="rgb(240,125,3)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3183.50">&lt;serde_json::map::Map&lt;alloc..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3157" width="17.5742%" height="15" fill="rgb(205,98,50)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3167.50">&lt;alloc::collections::btree:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3141" width="17.5742%" height="15" fill="rgb(205,185,37)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3151.50">&lt;alloc::collections::btree:..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3125" width="17.5742%" height="15" fill="rgb(238,207,15)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3135.50">&lt;serde_json::value::Value a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3109" width="17.5742%" height="15" fill="rgb(213,199,42)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3119.50">&lt;alloc::vec::Vec&lt;T,A&gt; as co..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3093" width="17.5742%" height="15" fill="rgb(235,201,11)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3103.50">alloc::slice::&lt;impl [T]&gt;::t..</text></g><g><title>alloc::slice::hack::to_vec (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3077" width="17.5742%" height="15" fill="rgb(207,46,11)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3087.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3061" width="17.5742%" height="15" fill="rgb(241,35,35)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3071.50">&lt;T as alloc::slice::hack::C..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3045" width="17.5742%" height="15" fill="rgb(243,32,47)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3055.50">&lt;serde_json::value::Value a..</text></g><g><title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3029" width="17.5742%" height="15" fill="rgb(247,202,23)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3039.50">&lt;serde_json::map::Map&lt;alloc..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="3013" width="17.5742%" height="15" fill="rgb(219,102,11)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3023.50">&lt;alloc::collections::btree:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="2997" width="17.5742%" height="15" fill="rgb(243,110,44)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="3007.50">&lt;alloc::collections::btree:..</text></g><g><title>&lt;serde_json::value::Value as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="2981" width="17.5742%" height="15" fill="rgb(222,74,54)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="2991.50">&lt;serde_json::value::Value a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="2965" width="17.5742%" height="15" fill="rgb(216,99,12)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="2975.50">&lt;alloc::vec::Vec&lt;T,A&gt; as co..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="2949" width="17.5742%" height="15" fill="rgb(226,22,26)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="2959.50">alloc::slice::&lt;impl [T]&gt;::t..</text></g><g><title>alloc::slice::hack::to_vec (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="2933" width="17.5742%" height="15" fill="rgb(217,163,10)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="2943.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (26,962,223 samples, 17.57%)</title><rect x="15.8589%" y="2917" width="17.5742%" height="15" fill="rgb(213,25,53)" fg:x="24330723" fg:w="26962223"/><text x="16.1089%" y="2927.50">&lt;T as alloc::slice::hack::C..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14,538,048 samples, 9.48%)</title><rect x="23.9571%" y="2901" width="9.4760%" height="15" fill="rgb(252,105,26)" fg:x="36754898" fg:w="14538048"/><text x="24.2071%" y="2911.50">alloc::vec::Ve..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14,538,048 samples, 9.48%)</title><rect x="23.9571%" y="2885" width="9.4760%" height="15" fill="rgb(220,39,43)" fg:x="36754898" fg:w="14538048"/><text x="24.2071%" y="2895.50">alloc::raw_vec..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (14,538,048 samples, 9.48%)</title><rect x="23.9571%" y="2869" width="9.4760%" height="15" fill="rgb(229,68,48)" fg:x="36754898" fg:w="14538048"/><text x="24.2071%" y="2879.50">alloc::raw_vec..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (14,538,048 samples, 9.48%)</title><rect x="23.9571%" y="2853" width="9.4760%" height="15" fill="rgb(252,8,32)" fg:x="36754898" fg:w="14538048"/><text x="24.2071%" y="2863.50">alloc::raw_vec..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14,538,048 samples, 9.48%)</title><rect x="23.9571%" y="2837" width="9.4760%" height="15" fill="rgb(223,20,43)" fg:x="36754898" fg:w="14538048"/><text x="24.2071%" y="2847.50">&lt;alloc::alloc:..</text></g><g><title>alloc::alloc::Global::alloc_impl (14,538,048 samples, 9.48%)</title><rect x="23.9571%" y="2821" width="9.4760%" height="15" fill="rgb(229,81,49)" fg:x="36754898" fg:w="14538048"/><text x="24.2071%" y="2831.50">alloc::alloc::..</text></g><g><title>alloc::alloc::alloc (14,538,048 samples, 9.48%)</title><rect x="23.9571%" y="2805" width="9.4760%" height="15" fill="rgb(236,28,36)" fg:x="36754898" fg:w="14538048"/><text x="24.2071%" y="2815.50">alloc::alloc::..</text></g><g><title>malloc (14,538,048 samples, 9.48%)</title><rect x="23.9571%" y="2789" width="9.4760%" height="15" fill="rgb(249,185,26)" fg:x="36754898" fg:w="14538048"/><text x="24.2071%" y="2799.50">malloc</text></g><g><title>[libc.so.6] (14,538,048 samples, 9.48%)</title><rect x="23.9571%" y="2773" width="9.4760%" height="15" fill="rgb(249,174,33)" fg:x="36754898" fg:w="14538048"/><text x="24.2071%" y="2783.50">[libc.so.6]</text></g><g><title>[libc.so.6] (14,538,048 samples, 9.48%)</title><rect x="23.9571%" y="2757" width="9.4760%" height="15" fill="rgb(233,201,37)" fg:x="36754898" fg:w="14538048"/><text x="24.2071%" y="2767.50">[libc.so.6]</text></g><g><title>[libc.so.6] (2,367,424 samples, 1.54%)</title><rect x="31.8900%" y="2741" width="1.5431%" height="15" fill="rgb(221,78,26)" fg:x="48925522" fg:w="2367424"/><text x="32.1400%" y="2751.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,276,053 samples, 1.48%)</title><rect x="33.4331%" y="2581" width="1.4835%" height="15" fill="rgb(250,127,30)" fg:x="51292946" fg:w="2276053"/><text x="33.6831%" y="2591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,276,053 samples, 1.48%)</title><rect x="33.4331%" y="2565" width="1.4835%" height="15" fill="rgb(230,49,44)" fg:x="51292946" fg:w="2276053"/><text x="33.6831%" y="2575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,276,053 samples, 1.48%)</title><rect x="33.4331%" y="2549" width="1.4835%" height="15" fill="rgb(229,67,23)" fg:x="51292946" fg:w="2276053"/><text x="33.6831%" y="2559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,276,053 samples, 1.48%)</title><rect x="33.4331%" y="2533" width="1.4835%" height="15" fill="rgb(249,83,47)" fg:x="51292946" fg:w="2276053"/><text x="33.6831%" y="2543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,276,053 samples, 1.48%)</title><rect x="33.4331%" y="2517" width="1.4835%" height="15" fill="rgb(215,43,3)" fg:x="51292946" fg:w="2276053"/><text x="33.6831%" y="2527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,057,853 samples, 1.34%)</title><rect x="34.9166%" y="1541" width="1.3413%" height="15" fill="rgb(238,154,13)" fg:x="53568999" fg:w="2057853"/><text x="35.1666%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2,057,853 samples, 1.34%)</title><rect x="34.9166%" y="1525" width="1.3413%" height="15" fill="rgb(219,56,2)" fg:x="53568999" fg:w="2057853"/><text x="35.1666%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2,057,853 samples, 1.34%)</title><rect x="34.9166%" y="1509" width="1.3413%" height="15" fill="rgb(233,0,4)" fg:x="53568999" fg:w="2057853"/><text x="35.1666%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,057,853 samples, 1.34%)</title><rect x="34.9166%" y="1493" width="1.3413%" height="15" fill="rgb(235,30,7)" fg:x="53568999" fg:w="2057853"/><text x="35.1666%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,057,853 samples, 1.34%)</title><rect x="34.9166%" y="1477" width="1.3413%" height="15" fill="rgb(250,79,13)" fg:x="53568999" fg:w="2057853"/><text x="35.1666%" y="1487.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,057,853 samples, 1.34%)</title><rect x="34.9166%" y="1461" width="1.3413%" height="15" fill="rgb(211,146,34)" fg:x="53568999" fg:w="2057853"/><text x="35.1666%" y="1471.50"></text></g><g><title>core::mem::drop (2,057,853 samples, 1.34%)</title><rect x="34.9166%" y="1445" width="1.3413%" height="15" fill="rgb(228,22,38)" fg:x="53568999" fg:w="2057853"/><text x="35.1666%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2,057,853 samples, 1.34%)</title><rect x="34.9166%" y="1429" width="1.3413%" height="15" fill="rgb(235,168,5)" fg:x="53568999" fg:w="2057853"/><text x="35.1666%" y="1439.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2,057,853 samples, 1.34%)</title><rect x="34.9166%" y="1413" width="1.3413%" height="15" fill="rgb(221,155,16)" fg:x="53568999" fg:w="2057853"/><text x="35.1666%" y="1423.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (2,057,853 samples, 1.34%)</title><rect x="34.9166%" y="1397" width="1.3413%" height="15" fill="rgb(215,215,53)" fg:x="53568999" fg:w="2057853"/><text x="35.1666%" y="1407.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (2,057,853 samples, 1.34%)</title><rect x="34.9166%" y="1381" width="1.3413%" height="15" fill="rgb(223,4,10)" fg:x="53568999" fg:w="2057853"/><text x="35.1666%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,057,853 samples, 1.34%)</title><rect x="34.9166%" y="1365" width="1.3413%" height="15" fill="rgb(234,103,6)" fg:x="53568999" fg:w="2057853"/><text x="35.1666%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,057,853 samples, 1.34%)</title><rect x="34.9166%" y="1349" width="1.3413%" height="15" fill="rgb(227,97,0)" fg:x="53568999" fg:w="2057853"/><text x="35.1666%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,057,853 samples, 1.34%)</title><rect x="34.9166%" y="1333" width="1.3413%" height="15" fill="rgb(234,150,53)" fg:x="53568999" fg:w="2057853"/><text x="35.1666%" y="1343.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,057,853 samples, 1.34%)</title><rect x="34.9166%" y="1317" width="1.3413%" height="15" fill="rgb(228,201,54)" fg:x="53568999" fg:w="2057853"/><text x="35.1666%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,057,853 samples, 1.34%)</title><rect x="34.9166%" y="1301" width="1.3413%" height="15" fill="rgb(222,22,37)" fg:x="53568999" fg:w="2057853"/><text x="35.1666%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,057,853 samples, 1.34%)</title><rect x="34.9166%" y="1285" width="1.3413%" height="15" fill="rgb(237,53,32)" fg:x="53568999" fg:w="2057853"/><text x="35.1666%" y="1295.50"></text></g><g><title>alloc::alloc::dealloc (2,057,853 samples, 1.34%)</title><rect x="34.9166%" y="1269" width="1.3413%" height="15" fill="rgb(233,25,53)" fg:x="53568999" fg:w="2057853"/><text x="35.1666%" y="1279.50"></text></g><g><title>cfree (2,057,853 samples, 1.34%)</title><rect x="34.9166%" y="1253" width="1.3413%" height="15" fill="rgb(210,40,34)" fg:x="53568999" fg:w="2057853"/><text x="35.1666%" y="1263.50"></text></g><g><title>[libc.so.6] (2,057,853 samples, 1.34%)</title><rect x="34.9166%" y="1237" width="1.3413%" height="15" fill="rgb(241,220,44)" fg:x="53568999" fg:w="2057853"/><text x="35.1666%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="4133" width="4.1455%" height="15" fill="rgb(235,28,35)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="4143.50">alloc..</text></g><g><title>core::ptr::drop_in_place&lt;[main::benchmark::LayoutFrame]&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="4117" width="4.1455%" height="15" fill="rgb(210,56,17)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="4127.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;main::benchmark::LayoutFrame&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="4101" width="4.1455%" height="15" fill="rgb(224,130,29)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="4111.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="4085" width="4.1455%" height="15" fill="rgb(235,212,8)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="4095.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="4069" width="4.1455%" height="15" fill="rgb(223,33,50)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="4079.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="4053" width="4.1455%" height="15" fill="rgb(219,149,13)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="4063.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="4037" width="4.1455%" height="15" fill="rgb(250,156,29)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="4047.50">&lt;allo..</text></g><g><title>core::mem::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="4021" width="4.1455%" height="15" fill="rgb(216,193,19)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="4031.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="4005" width="4.1455%" height="15" fill="rgb(216,135,14)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="4015.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3989" width="4.1455%" height="15" fill="rgb(241,47,5)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3999.50">&lt;allo..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3973" width="4.1455%" height="15" fill="rgb(233,42,35)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3983.50">alloc..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3957" width="4.1455%" height="15" fill="rgb(231,13,6)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3967.50">core:..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3941" width="4.1455%" height="15" fill="rgb(207,181,40)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3951.50">&lt;allo..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3925" width="4.1455%" height="15" fill="rgb(254,173,49)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3935.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3909" width="4.1455%" height="15" fill="rgb(221,1,38)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3919.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3893" width="4.1455%" height="15" fill="rgb(206,124,46)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3903.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3877" width="4.1455%" height="15" fill="rgb(249,21,11)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3887.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3861" width="4.1455%" height="15" fill="rgb(222,201,40)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3871.50">&lt;allo..</text></g><g><title>core::mem::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3845" width="4.1455%" height="15" fill="rgb(235,61,29)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3855.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3829" width="4.1455%" height="15" fill="rgb(219,207,3)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3839.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3813" width="4.1455%" height="15" fill="rgb(222,56,46)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3823.50">&lt;allo..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3797" width="4.1455%" height="15" fill="rgb(239,76,54)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3807.50">alloc..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3781" width="4.1455%" height="15" fill="rgb(231,124,27)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3791.50">core:..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3765" width="4.1455%" height="15" fill="rgb(249,195,6)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3775.50">&lt;allo..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3749" width="4.1455%" height="15" fill="rgb(237,174,47)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3759.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3733" width="4.1455%" height="15" fill="rgb(206,201,31)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3743.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3717" width="4.1455%" height="15" fill="rgb(231,57,52)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3727.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3701" width="4.1455%" height="15" fill="rgb(248,177,22)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3711.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3685" width="4.1455%" height="15" fill="rgb(215,211,37)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3695.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3669" width="4.1455%" height="15" fill="rgb(241,128,51)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3679.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3653" width="4.1455%" height="15" fill="rgb(227,165,31)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3663.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3637" width="4.1455%" height="15" fill="rgb(228,167,24)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3647.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3621" width="4.1455%" height="15" fill="rgb(228,143,12)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3631.50">&lt;allo..</text></g><g><title>core::mem::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3605" width="4.1455%" height="15" fill="rgb(249,149,8)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3615.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3589" width="4.1455%" height="15" fill="rgb(243,35,44)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3599.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3573" width="4.1455%" height="15" fill="rgb(246,89,9)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3583.50">&lt;allo..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3557" width="4.1455%" height="15" fill="rgb(233,213,13)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3567.50">alloc..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3541" width="4.1455%" height="15" fill="rgb(233,141,41)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3551.50">core:..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3525" width="4.1455%" height="15" fill="rgb(239,167,4)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3535.50">&lt;allo..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3509" width="4.1455%" height="15" fill="rgb(209,217,16)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3519.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3493" width="4.1455%" height="15" fill="rgb(219,88,35)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3503.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3477" width="4.1455%" height="15" fill="rgb(220,193,23)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3487.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3461" width="4.1455%" height="15" fill="rgb(230,90,52)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3471.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3445" width="4.1455%" height="15" fill="rgb(252,106,19)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3455.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3429" width="4.1455%" height="15" fill="rgb(206,74,20)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3439.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3413" width="4.1455%" height="15" fill="rgb(230,138,44)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3423.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3397" width="4.1455%" height="15" fill="rgb(235,182,43)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3407.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3381" width="4.1455%" height="15" fill="rgb(242,16,51)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3391.50">&lt;allo..</text></g><g><title>core::mem::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3365" width="4.1455%" height="15" fill="rgb(248,9,4)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3375.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3349" width="4.1455%" height="15" fill="rgb(210,31,22)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3359.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3333" width="4.1455%" height="15" fill="rgb(239,54,39)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3343.50">&lt;allo..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3317" width="4.1455%" height="15" fill="rgb(230,99,41)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3327.50">alloc..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3301" width="4.1455%" height="15" fill="rgb(253,106,12)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3311.50">core:..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3285" width="4.1455%" height="15" fill="rgb(213,46,41)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3295.50">&lt;allo..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3269" width="4.1455%" height="15" fill="rgb(215,133,35)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3279.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3253" width="4.1455%" height="15" fill="rgb(213,28,5)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3263.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3237" width="4.1455%" height="15" fill="rgb(215,77,49)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3247.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3221" width="4.1455%" height="15" fill="rgb(248,100,22)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3231.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3205" width="4.1455%" height="15" fill="rgb(208,67,9)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3215.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3189" width="4.1455%" height="15" fill="rgb(219,133,21)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3199.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3173" width="4.1455%" height="15" fill="rgb(246,46,29)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3183.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3157" width="4.1455%" height="15" fill="rgb(246,185,52)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3167.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3141" width="4.1455%" height="15" fill="rgb(252,136,11)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3151.50">&lt;allo..</text></g><g><title>core::mem::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3125" width="4.1455%" height="15" fill="rgb(219,138,53)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3135.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3109" width="4.1455%" height="15" fill="rgb(211,51,23)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3119.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3093" width="4.1455%" height="15" fill="rgb(247,221,28)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3103.50">&lt;allo..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3077" width="4.1455%" height="15" fill="rgb(251,222,45)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3087.50">alloc..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3061" width="4.1455%" height="15" fill="rgb(217,162,53)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3071.50">core:..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3045" width="4.1455%" height="15" fill="rgb(229,93,14)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3055.50">&lt;allo..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3029" width="4.1455%" height="15" fill="rgb(209,67,49)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3039.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="3013" width="4.1455%" height="15" fill="rgb(213,87,29)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3023.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2997" width="4.1455%" height="15" fill="rgb(205,151,52)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="3007.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2981" width="4.1455%" height="15" fill="rgb(253,215,39)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2991.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2965" width="4.1455%" height="15" fill="rgb(221,220,41)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2975.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2949" width="4.1455%" height="15" fill="rgb(218,133,21)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2959.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2933" width="4.1455%" height="15" fill="rgb(221,193,43)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2943.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2917" width="4.1455%" height="15" fill="rgb(240,128,52)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2927.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2901" width="4.1455%" height="15" fill="rgb(253,114,12)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2911.50">&lt;allo..</text></g><g><title>core::mem::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2885" width="4.1455%" height="15" fill="rgb(215,223,47)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2895.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2869" width="4.1455%" height="15" fill="rgb(248,225,23)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2879.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2853" width="4.1455%" height="15" fill="rgb(250,108,0)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2863.50">&lt;allo..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2837" width="4.1455%" height="15" fill="rgb(228,208,7)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2847.50">alloc..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2821" width="4.1455%" height="15" fill="rgb(244,45,10)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2831.50">core:..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2805" width="4.1455%" height="15" fill="rgb(207,125,25)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2815.50">&lt;allo..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2789" width="4.1455%" height="15" fill="rgb(210,195,18)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2799.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2773" width="4.1455%" height="15" fill="rgb(249,80,12)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2783.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2757" width="4.1455%" height="15" fill="rgb(221,65,9)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2767.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2741" width="4.1455%" height="15" fill="rgb(235,49,36)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2751.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2725" width="4.1455%" height="15" fill="rgb(225,32,20)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2735.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2709" width="4.1455%" height="15" fill="rgb(215,141,46)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2719.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2693" width="4.1455%" height="15" fill="rgb(250,160,47)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2703.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2677" width="4.1455%" height="15" fill="rgb(216,222,40)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2687.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2661" width="4.1455%" height="15" fill="rgb(234,217,39)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2671.50">&lt;allo..</text></g><g><title>core::mem::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2645" width="4.1455%" height="15" fill="rgb(207,178,40)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2655.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2629" width="4.1455%" height="15" fill="rgb(221,136,13)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2639.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2613" width="4.1455%" height="15" fill="rgb(249,199,10)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2623.50">&lt;allo..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,360,002 samples, 4.15%)</title><rect x="33.4331%" y="2597" width="4.1455%" height="15" fill="rgb(249,222,13)" fg:x="51292946" fg:w="6360002"/><text x="33.6831%" y="2607.50">alloc..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2581" width="2.6619%" height="15" fill="rgb(244,185,38)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2591.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2565" width="2.6619%" height="15" fill="rgb(236,202,9)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2575.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2549" width="2.6619%" height="15" fill="rgb(250,229,37)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2559.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2533" width="2.6619%" height="15" fill="rgb(206,174,23)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2543.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2517" width="2.6619%" height="15" fill="rgb(211,33,43)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2527.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2501" width="2.6619%" height="15" fill="rgb(245,58,50)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2511.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2485" width="2.6619%" height="15" fill="rgb(244,68,36)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2495.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2469" width="2.6619%" height="15" fill="rgb(232,229,15)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2479.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2453" width="2.6619%" height="15" fill="rgb(254,30,23)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2463.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2437" width="2.6619%" height="15" fill="rgb(235,160,14)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2447.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2421" width="2.6619%" height="15" fill="rgb(212,155,44)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2431.50">&lt;a..</text></g><g><title>core::mem::drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2405" width="2.6619%" height="15" fill="rgb(226,2,50)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2415.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2389" width="2.6619%" height="15" fill="rgb(234,177,6)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2399.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2373" width="2.6619%" height="15" fill="rgb(217,24,9)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2383.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2357" width="2.6619%" height="15" fill="rgb(220,13,46)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2367.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2341" width="2.6619%" height="15" fill="rgb(239,221,27)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2351.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2325" width="2.6619%" height="15" fill="rgb(222,198,25)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2335.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2309" width="2.6619%" height="15" fill="rgb(211,99,13)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2319.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2293" width="2.6619%" height="15" fill="rgb(232,111,31)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2303.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2277" width="2.6619%" height="15" fill="rgb(245,82,37)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2287.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2261" width="2.6619%" height="15" fill="rgb(227,149,46)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2271.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2245" width="2.6619%" height="15" fill="rgb(218,36,50)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2255.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2229" width="2.6619%" height="15" fill="rgb(226,80,48)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2239.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2213" width="2.6619%" height="15" fill="rgb(238,224,15)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2223.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2197" width="2.6619%" height="15" fill="rgb(241,136,10)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2207.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2181" width="2.6619%" height="15" fill="rgb(208,32,45)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2191.50">&lt;a..</text></g><g><title>core::mem::drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2165" width="2.6619%" height="15" fill="rgb(207,135,9)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2175.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2149" width="2.6619%" height="15" fill="rgb(206,86,44)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2159.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2133" width="2.6619%" height="15" fill="rgb(245,177,15)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2143.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2117" width="2.6619%" height="15" fill="rgb(206,64,50)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2127.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2101" width="2.6619%" height="15" fill="rgb(234,36,40)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2111.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2085" width="2.6619%" height="15" fill="rgb(213,64,8)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2095.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2069" width="2.6619%" height="15" fill="rgb(210,75,36)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2079.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2053" width="2.6619%" height="15" fill="rgb(229,88,21)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2063.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2037" width="2.6619%" height="15" fill="rgb(252,204,47)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2047.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2021" width="2.6619%" height="15" fill="rgb(208,77,27)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2031.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="2005" width="2.6619%" height="15" fill="rgb(221,76,26)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="2015.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1989" width="2.6619%" height="15" fill="rgb(225,139,18)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1999.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1973" width="2.6619%" height="15" fill="rgb(230,137,11)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1983.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1957" width="2.6619%" height="15" fill="rgb(212,28,1)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1967.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1941" width="2.6619%" height="15" fill="rgb(248,164,17)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1951.50">&lt;a..</text></g><g><title>core::mem::drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1925" width="2.6619%" height="15" fill="rgb(222,171,42)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1935.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1909" width="2.6619%" height="15" fill="rgb(243,84,45)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1919.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1893" width="2.6619%" height="15" fill="rgb(252,49,23)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1903.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1877" width="2.6619%" height="15" fill="rgb(215,19,7)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1887.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1861" width="2.6619%" height="15" fill="rgb(238,81,41)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1871.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1845" width="2.6619%" height="15" fill="rgb(210,199,37)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1855.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1829" width="2.6619%" height="15" fill="rgb(244,192,49)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1839.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1813" width="2.6619%" height="15" fill="rgb(226,211,11)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1823.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1797" width="2.6619%" height="15" fill="rgb(236,162,54)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1807.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1781" width="2.6619%" height="15" fill="rgb(220,229,9)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1791.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1765" width="2.6619%" height="15" fill="rgb(250,87,22)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1775.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1749" width="2.6619%" height="15" fill="rgb(239,43,17)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1759.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1733" width="2.6619%" height="15" fill="rgb(231,177,25)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1743.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1717" width="2.6619%" height="15" fill="rgb(219,179,1)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1727.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1701" width="2.6619%" height="15" fill="rgb(238,219,53)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1711.50">&lt;a..</text></g><g><title>core::mem::drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1685" width="2.6619%" height="15" fill="rgb(232,167,36)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1695.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1669" width="2.6619%" height="15" fill="rgb(244,19,51)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1679.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1653" width="2.6619%" height="15" fill="rgb(224,6,22)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1663.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1637" width="2.6619%" height="15" fill="rgb(224,145,5)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1647.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1621" width="2.6619%" height="15" fill="rgb(234,130,49)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1631.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1605" width="2.6619%" height="15" fill="rgb(254,6,2)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1615.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1589" width="2.6619%" height="15" fill="rgb(208,96,46)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1599.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1573" width="2.6619%" height="15" fill="rgb(239,3,39)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1583.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,083,949 samples, 2.66%)</title><rect x="34.9166%" y="1557" width="2.6619%" height="15" fill="rgb(233,210,1)" fg:x="53568999" fg:w="4083949"/><text x="35.1666%" y="1567.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;serde_json::value::Value&gt;&gt; (2,026,096 samples, 1.32%)</title><rect x="36.2580%" y="1541" width="1.3206%" height="15" fill="rgb(244,137,37)" fg:x="55626852" fg:w="2026096"/><text x="36.5080%" y="1551.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,026,096 samples, 1.32%)</title><rect x="36.2580%" y="1525" width="1.3206%" height="15" fill="rgb(240,136,2)" fg:x="55626852" fg:w="2026096"/><text x="36.5080%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;main::benchmark::LayoutFrame&gt;&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="4133" width="4.1394%" height="15" fill="rgb(239,18,37)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="4143.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="4117" width="4.1394%" height="15" fill="rgb(218,185,22)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="4127.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[main::benchmark::LayoutFrame]&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="4101" width="4.1394%" height="15" fill="rgb(225,218,4)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="4111.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;main::benchmark::LayoutFrame&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="4085" width="4.1394%" height="15" fill="rgb(230,182,32)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="4095.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="4069" width="4.1394%" height="15" fill="rgb(242,56,43)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="4079.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="4053" width="4.1394%" height="15" fill="rgb(233,99,24)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="4063.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="4037" width="4.1394%" height="15" fill="rgb(234,209,42)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="4047.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="4021" width="4.1394%" height="15" fill="rgb(227,7,12)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="4031.50">&lt;allo..</text></g><g><title>core::mem::drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="4005" width="4.1394%" height="15" fill="rgb(245,203,43)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="4015.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3989" width="4.1394%" height="15" fill="rgb(238,205,33)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3999.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3973" width="4.1394%" height="15" fill="rgb(231,56,7)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3983.50">&lt;allo..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3957" width="4.1394%" height="15" fill="rgb(244,186,29)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3967.50">alloc..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3941" width="4.1394%" height="15" fill="rgb(234,111,31)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3951.50">core:..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3925" width="4.1394%" height="15" fill="rgb(241,149,10)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3935.50">&lt;allo..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3909" width="4.1394%" height="15" fill="rgb(249,206,44)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3919.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3893" width="4.1394%" height="15" fill="rgb(251,153,30)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3903.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3877" width="4.1394%" height="15" fill="rgb(239,152,38)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3887.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3861" width="4.1394%" height="15" fill="rgb(249,139,47)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3871.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3845" width="4.1394%" height="15" fill="rgb(244,64,35)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3855.50">&lt;allo..</text></g><g><title>core::mem::drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3829" width="4.1394%" height="15" fill="rgb(216,46,15)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3839.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3813" width="4.1394%" height="15" fill="rgb(250,74,19)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3823.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3797" width="4.1394%" height="15" fill="rgb(249,42,33)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3807.50">&lt;allo..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3781" width="4.1394%" height="15" fill="rgb(242,149,17)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3791.50">alloc..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3765" width="4.1394%" height="15" fill="rgb(244,29,21)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3775.50">core:..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3749" width="4.1394%" height="15" fill="rgb(220,130,37)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3759.50">&lt;allo..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3733" width="4.1394%" height="15" fill="rgb(211,67,2)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3743.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3717" width="4.1394%" height="15" fill="rgb(235,68,52)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3727.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3701" width="4.1394%" height="15" fill="rgb(246,142,3)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3711.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3685" width="4.1394%" height="15" fill="rgb(241,25,7)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3695.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3669" width="4.1394%" height="15" fill="rgb(242,119,39)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3679.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3653" width="4.1394%" height="15" fill="rgb(241,98,45)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3663.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3637" width="4.1394%" height="15" fill="rgb(254,28,30)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3647.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3621" width="4.1394%" height="15" fill="rgb(241,142,54)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3631.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3605" width="4.1394%" height="15" fill="rgb(222,85,15)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3615.50">&lt;allo..</text></g><g><title>core::mem::drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3589" width="4.1394%" height="15" fill="rgb(210,85,47)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3599.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3573" width="4.1394%" height="15" fill="rgb(224,206,25)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3583.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3557" width="4.1394%" height="15" fill="rgb(243,201,19)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3567.50">&lt;allo..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3541" width="4.1394%" height="15" fill="rgb(236,59,4)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3551.50">alloc..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3525" width="4.1394%" height="15" fill="rgb(254,179,45)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3535.50">core:..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3509" width="4.1394%" height="15" fill="rgb(226,14,10)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3519.50">&lt;allo..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3493" width="4.1394%" height="15" fill="rgb(244,27,41)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3503.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3477" width="4.1394%" height="15" fill="rgb(235,35,32)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3487.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3461" width="4.1394%" height="15" fill="rgb(218,68,31)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3471.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3445" width="4.1394%" height="15" fill="rgb(207,120,37)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3455.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3429" width="4.1394%" height="15" fill="rgb(227,98,0)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3439.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3413" width="4.1394%" height="15" fill="rgb(207,7,3)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3423.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3397" width="4.1394%" height="15" fill="rgb(206,98,19)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3407.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3381" width="4.1394%" height="15" fill="rgb(217,5,26)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3391.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3365" width="4.1394%" height="15" fill="rgb(235,190,38)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3375.50">&lt;allo..</text></g><g><title>core::mem::drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3349" width="4.1394%" height="15" fill="rgb(247,86,24)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3359.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3333" width="4.1394%" height="15" fill="rgb(205,101,16)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3343.50">core:..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3317" width="4.1394%" height="15" fill="rgb(246,168,33)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3327.50">&lt;allo..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3301" width="4.1394%" height="15" fill="rgb(231,114,1)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3311.50">alloc..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3285" width="4.1394%" height="15" fill="rgb(207,184,53)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3295.50">core:..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3269" width="4.1394%" height="15" fill="rgb(224,95,51)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3279.50">&lt;allo..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3253" width="4.1394%" height="15" fill="rgb(212,188,45)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3263.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3237" width="4.1394%" height="15" fill="rgb(223,154,38)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3247.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3221" width="4.1394%" height="15" fill="rgb(251,22,52)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3231.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3205" width="4.1394%" height="15" fill="rgb(229,209,22)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3215.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3189" width="4.1394%" height="15" fill="rgb(234,138,34)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3199.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6,350,615 samples, 4.14%)</title><rect x="37.5786%" y="3173" width="4.1394%" height="15" fill="rgb(212,95,11)" fg:x="57652948" fg:w="6350615"/><text x="37.8286%" y="3183.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="3157" width="2.7993%" height="15" fill="rgb(240,179,47)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="3167.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="3141" width="2.7993%" height="15" fill="rgb(240,163,11)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="3151.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="3125" width="2.7993%" height="15" fill="rgb(236,37,12)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="3135.50">&lt;a..</text></g><g><title>core::mem::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="3109" width="2.7993%" height="15" fill="rgb(232,164,16)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="3119.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="3093" width="2.7993%" height="15" fill="rgb(244,205,15)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="3103.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="3077" width="2.7993%" height="15" fill="rgb(223,117,47)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="3087.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="3061" width="2.7993%" height="15" fill="rgb(244,107,35)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="3071.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="3045" width="2.7993%" height="15" fill="rgb(205,140,8)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="3055.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="3029" width="2.7993%" height="15" fill="rgb(228,84,46)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="3039.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="3013" width="2.7993%" height="15" fill="rgb(254,188,9)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="3023.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2997" width="2.7993%" height="15" fill="rgb(206,112,54)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="3007.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2981" width="2.7993%" height="15" fill="rgb(216,84,49)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2991.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2965" width="2.7993%" height="15" fill="rgb(214,194,35)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2975.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2949" width="2.7993%" height="15" fill="rgb(249,28,3)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2959.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2933" width="2.7993%" height="15" fill="rgb(222,56,52)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2943.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2917" width="2.7993%" height="15" fill="rgb(245,217,50)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2927.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2901" width="2.7993%" height="15" fill="rgb(213,201,24)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2911.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2885" width="2.7993%" height="15" fill="rgb(248,116,28)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2895.50">&lt;a..</text></g><g><title>core::mem::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2869" width="2.7993%" height="15" fill="rgb(219,72,43)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2879.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2853" width="2.7993%" height="15" fill="rgb(209,138,14)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2863.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2837" width="2.7993%" height="15" fill="rgb(222,18,33)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2847.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2821" width="2.7993%" height="15" fill="rgb(213,199,7)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2831.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2805" width="2.7993%" height="15" fill="rgb(250,110,10)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2815.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2789" width="2.7993%" height="15" fill="rgb(248,123,6)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2799.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2773" width="2.7993%" height="15" fill="rgb(206,91,31)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2783.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2757" width="2.7993%" height="15" fill="rgb(211,154,13)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2767.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2741" width="2.7993%" height="15" fill="rgb(225,148,7)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2751.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2725" width="2.7993%" height="15" fill="rgb(220,160,43)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2735.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2709" width="2.7993%" height="15" fill="rgb(213,52,39)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2719.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2693" width="2.7993%" height="15" fill="rgb(243,137,7)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2703.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2677" width="2.7993%" height="15" fill="rgb(230,79,13)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2687.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2661" width="2.7993%" height="15" fill="rgb(247,105,23)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2671.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2645" width="2.7993%" height="15" fill="rgb(223,179,41)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2655.50">&lt;a..</text></g><g><title>core::mem::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2629" width="2.7993%" height="15" fill="rgb(218,9,34)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2639.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2613" width="2.7993%" height="15" fill="rgb(222,106,8)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2623.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2597" width="2.7993%" height="15" fill="rgb(211,220,0)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2607.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2581" width="2.7993%" height="15" fill="rgb(229,52,16)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2591.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2565" width="2.7993%" height="15" fill="rgb(212,155,18)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2575.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2549" width="2.7993%" height="15" fill="rgb(242,21,14)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2559.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2533" width="2.7993%" height="15" fill="rgb(222,19,48)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2543.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2517" width="2.7993%" height="15" fill="rgb(232,45,27)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2527.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2501" width="2.7993%" height="15" fill="rgb(249,103,42)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2511.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2485" width="2.7993%" height="15" fill="rgb(246,81,33)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2495.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2469" width="2.7993%" height="15" fill="rgb(252,33,42)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2479.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2453" width="2.7993%" height="15" fill="rgb(209,212,41)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2463.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2437" width="2.7993%" height="15" fill="rgb(207,154,6)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2447.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2421" width="2.7993%" height="15" fill="rgb(223,64,47)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2431.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2405" width="2.7993%" height="15" fill="rgb(211,161,38)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2415.50">&lt;a..</text></g><g><title>core::mem::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2389" width="2.7993%" height="15" fill="rgb(219,138,40)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2399.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2373" width="2.7993%" height="15" fill="rgb(241,228,46)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2383.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2357" width="2.7993%" height="15" fill="rgb(223,209,38)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2367.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2341" width="2.7993%" height="15" fill="rgb(236,164,45)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2351.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2325" width="2.7993%" height="15" fill="rgb(231,15,5)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2335.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2309" width="2.7993%" height="15" fill="rgb(252,35,15)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2319.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2293" width="2.7993%" height="15" fill="rgb(248,181,18)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2303.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2277" width="2.7993%" height="15" fill="rgb(233,39,42)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2287.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2261" width="2.7993%" height="15" fill="rgb(238,110,33)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2271.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2245" width="2.7993%" height="15" fill="rgb(233,195,10)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2255.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2229" width="2.7993%" height="15" fill="rgb(254,105,3)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2239.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2213" width="2.7993%" height="15" fill="rgb(221,225,9)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2223.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2197" width="2.7993%" height="15" fill="rgb(224,227,45)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2207.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2181" width="2.7993%" height="15" fill="rgb(229,198,43)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2191.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2165" width="2.7993%" height="15" fill="rgb(206,209,35)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2175.50">&lt;a..</text></g><g><title>core::mem::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2149" width="2.7993%" height="15" fill="rgb(245,195,53)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2159.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2133" width="2.7993%" height="15" fill="rgb(240,92,26)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2143.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2117" width="2.7993%" height="15" fill="rgb(207,40,23)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2127.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2101" width="2.7993%" height="15" fill="rgb(223,111,35)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2111.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2085" width="2.7993%" height="15" fill="rgb(229,147,28)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2095.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2069" width="2.7993%" height="15" fill="rgb(211,29,28)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2079.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2053" width="2.7993%" height="15" fill="rgb(228,72,33)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2063.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2037" width="2.7993%" height="15" fill="rgb(205,214,31)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2047.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2021" width="2.7993%" height="15" fill="rgb(224,111,15)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2031.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="2005" width="2.7993%" height="15" fill="rgb(253,21,26)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="2015.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="1989" width="2.7993%" height="15" fill="rgb(245,139,43)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="1999.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="1973" width="2.7993%" height="15" fill="rgb(252,170,7)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="1983.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="1957" width="2.7993%" height="15" fill="rgb(231,118,14)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="1967.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="1941" width="2.7993%" height="15" fill="rgb(238,83,0)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="1951.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="1925" width="2.7993%" height="15" fill="rgb(221,39,39)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="1935.50">&lt;a..</text></g><g><title>core::mem::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="1909" width="2.7993%" height="15" fill="rgb(222,119,46)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="1919.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="1893" width="2.7993%" height="15" fill="rgb(222,165,49)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="1903.50">co..</text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="1877" width="2.7993%" height="15" fill="rgb(219,113,52)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="1887.50">&lt;a..</text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="1861" width="2.7993%" height="15" fill="rgb(214,7,15)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="1871.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="1845" width="2.7993%" height="15" fill="rgb(235,32,4)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="1855.50">co..</text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="1829" width="2.7993%" height="15" fill="rgb(238,90,54)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="1839.50">&lt;a..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="1813" width="2.7993%" height="15" fill="rgb(213,208,19)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="1823.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="1797" width="2.7993%" height="15" fill="rgb(233,156,4)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="1807.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="1781" width="2.7993%" height="15" fill="rgb(207,194,5)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="1791.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="1765" width="2.7993%" height="15" fill="rgb(206,111,30)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="1775.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="1749" width="2.7993%" height="15" fill="rgb(243,70,54)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="1759.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4,294,685 samples, 2.80%)</title><rect x="38.9187%" y="1733" width="2.7993%" height="15" fill="rgb(242,28,8)" fg:x="59708878" fg:w="4294685"/><text x="39.1687%" y="1743.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1717" width="1.2376%" height="15" fill="rgb(219,106,18)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1701" width="1.2376%" height="15" fill="rgb(244,222,10)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1711.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1685" width="1.2376%" height="15" fill="rgb(236,179,52)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1695.50"></text></g><g><title>core::mem::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1669" width="1.2376%" height="15" fill="rgb(213,23,39)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1653" width="1.2376%" height="15" fill="rgb(238,48,10)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1663.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1637" width="1.2376%" height="15" fill="rgb(251,196,23)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1647.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1621" width="1.2376%" height="15" fill="rgb(250,152,24)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1605" width="1.2376%" height="15" fill="rgb(209,150,17)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1615.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1589" width="1.2376%" height="15" fill="rgb(234,202,34)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1599.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1573" width="1.2376%" height="15" fill="rgb(253,148,53)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1557" width="1.2376%" height="15" fill="rgb(218,129,16)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1541" width="1.2376%" height="15" fill="rgb(216,85,19)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1551.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1525" width="1.2376%" height="15" fill="rgb(235,228,7)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1509" width="1.2376%" height="15" fill="rgb(245,175,0)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1493" width="1.2376%" height="15" fill="rgb(208,168,36)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1477" width="1.2376%" height="15" fill="rgb(246,171,24)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1461" width="1.2376%" height="15" fill="rgb(215,142,24)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1471.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1445" width="1.2376%" height="15" fill="rgb(250,187,7)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1455.50"></text></g><g><title>core::mem::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1429" width="1.2376%" height="15" fill="rgb(228,66,33)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1413" width="1.2376%" height="15" fill="rgb(234,215,21)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1423.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1397" width="1.2376%" height="15" fill="rgb(222,191,20)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1407.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1381" width="1.2376%" height="15" fill="rgb(245,79,54)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1365" width="1.2376%" height="15" fill="rgb(240,10,37)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1375.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1349" width="1.2376%" height="15" fill="rgb(214,192,32)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1359.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1333" width="1.2376%" height="15" fill="rgb(209,36,54)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1317" width="1.2376%" height="15" fill="rgb(220,10,11)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1301" width="1.2376%" height="15" fill="rgb(221,106,17)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1285" width="1.2376%" height="15" fill="rgb(251,142,44)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1269" width="1.2376%" height="15" fill="rgb(238,13,15)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1253" width="1.2376%" height="15" fill="rgb(208,107,27)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1237" width="1.2376%" height="15" fill="rgb(205,136,37)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1221" width="1.2376%" height="15" fill="rgb(250,205,27)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1231.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1205" width="1.2376%" height="15" fill="rgb(210,80,43)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1215.50"></text></g><g><title>core::mem::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1189" width="1.2376%" height="15" fill="rgb(247,160,36)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1173" width="1.2376%" height="15" fill="rgb(234,13,49)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1157" width="1.2376%" height="15" fill="rgb(234,122,0)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1167.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1141" width="1.2376%" height="15" fill="rgb(207,146,38)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1125" width="1.2376%" height="15" fill="rgb(207,177,25)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1109" width="1.2376%" height="15" fill="rgb(211,178,42)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1119.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1093" width="1.2376%" height="15" fill="rgb(230,69,54)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1077" width="1.2376%" height="15" fill="rgb(214,135,41)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1061" width="1.2376%" height="15" fill="rgb(237,67,25)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1045" width="1.2376%" height="15" fill="rgb(222,189,50)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1029" width="1.2376%" height="15" fill="rgb(245,148,34)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="1013" width="1.2376%" height="15" fill="rgb(222,29,6)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="997" width="1.2376%" height="15" fill="rgb(221,189,43)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="981" width="1.2376%" height="15" fill="rgb(207,36,27)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="965" width="1.2376%" height="15" fill="rgb(217,90,24)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="975.50"></text></g><g><title>core::mem::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="949" width="1.2376%" height="15" fill="rgb(224,66,35)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="933" width="1.2376%" height="15" fill="rgb(221,13,50)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="917" width="1.2376%" height="15" fill="rgb(236,68,49)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="901" width="1.2376%" height="15" fill="rgb(229,146,28)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="885" width="1.2376%" height="15" fill="rgb(225,31,38)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="895.50"></text></g><g><title>&lt;alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val::Dropper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="869" width="1.2376%" height="15" fill="rgb(250,208,3)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="879.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="853" width="1.2376%" height="15" fill="rgb(246,54,23)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="837" width="1.2376%" height="15" fill="rgb(243,76,11)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="821" width="1.2376%" height="15" fill="rgb(245,21,50)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="805" width="1.2376%" height="15" fill="rgb(228,9,43)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="789" width="1.2376%" height="15" fill="rgb(208,100,47)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="773" width="1.2376%" height="15" fill="rgb(232,26,8)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="757" width="1.2376%" height="15" fill="rgb(216,166,38)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="741" width="1.2376%" height="15" fill="rgb(251,202,51)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="725" width="1.2376%" height="15" fill="rgb(254,216,34)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="735.50"></text></g><g><title>core::mem::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="709" width="1.2376%" height="15" fill="rgb(251,32,27)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="693" width="1.2376%" height="15" fill="rgb(208,127,28)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="677" width="1.2376%" height="15" fill="rgb(224,137,22)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="661" width="1.2376%" height="15" fill="rgb(254,70,32)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="645" width="1.2376%" height="15" fill="rgb(229,75,37)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1,898,722 samples, 1.24%)</title><rect x="40.4804%" y="629" width="1.2376%" height="15" fill="rgb(252,64,23)" fg:x="62104841" fg:w="1898722"/><text x="40.7304%" y="639.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,460,292 samples, 1.60%)</title><rect x="41.7180%" y="4117" width="1.6036%" height="15" fill="rgb(232,162,48)" fg:x="64003563" fg:w="2460292"/><text x="41.9680%" y="4127.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,460,292 samples, 1.60%)</title><rect x="41.7180%" y="4101" width="1.6036%" height="15" fill="rgb(246,160,12)" fg:x="64003563" fg:w="2460292"/><text x="41.9680%" y="4111.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,460,292 samples, 1.60%)</title><rect x="41.7180%" y="4085" width="1.6036%" height="15" fill="rgb(247,166,0)" fg:x="64003563" fg:w="2460292"/><text x="41.9680%" y="4095.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,460,292 samples, 1.60%)</title><rect x="41.7180%" y="4069" width="1.6036%" height="15" fill="rgb(249,219,21)" fg:x="64003563" fg:w="2460292"/><text x="41.9680%" y="4079.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,460,292 samples, 1.60%)</title><rect x="41.7180%" y="4053" width="1.6036%" height="15" fill="rgb(205,209,3)" fg:x="64003563" fg:w="2460292"/><text x="41.9680%" y="4063.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,460,292 samples, 1.60%)</title><rect x="41.7180%" y="4037" width="1.6036%" height="15" fill="rgb(243,44,1)" fg:x="64003563" fg:w="2460292"/><text x="41.9680%" y="4047.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,460,292 samples, 1.60%)</title><rect x="41.7180%" y="4021" width="1.6036%" height="15" fill="rgb(206,159,16)" fg:x="64003563" fg:w="2460292"/><text x="41.9680%" y="4031.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,460,292 samples, 1.60%)</title><rect x="41.7180%" y="4005" width="1.6036%" height="15" fill="rgb(244,77,30)" fg:x="64003563" fg:w="2460292"/><text x="41.9680%" y="4015.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,460,292 samples, 1.60%)</title><rect x="41.7180%" y="3989" width="1.6036%" height="15" fill="rgb(218,69,12)" fg:x="64003563" fg:w="2460292"/><text x="41.9680%" y="3999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2,460,292 samples, 1.60%)</title><rect x="41.7180%" y="3973" width="1.6036%" height="15" fill="rgb(212,87,7)" fg:x="64003563" fg:w="2460292"/><text x="41.9680%" y="3983.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (2,460,292 samples, 1.60%)</title><rect x="41.7180%" y="3957" width="1.6036%" height="15" fill="rgb(245,114,25)" fg:x="64003563" fg:w="2460292"/><text x="41.9680%" y="3967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5,073,053 samples, 3.31%)</title><rect x="43.3216%" y="4021" width="3.3067%" height="15" fill="rgb(210,61,42)" fg:x="66463855" fg:w="5073053"/><text x="43.5716%" y="4031.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (5,073,053 samples, 3.31%)</title><rect x="43.3216%" y="4005" width="3.3067%" height="15" fill="rgb(211,52,33)" fg:x="66463855" fg:w="5073053"/><text x="43.5716%" y="4015.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (5,073,053 samples, 3.31%)</title><rect x="43.3216%" y="3989" width="3.3067%" height="15" fill="rgb(234,58,33)" fg:x="66463855" fg:w="5073053"/><text x="43.5716%" y="3999.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (5,073,053 samples, 3.31%)</title><rect x="43.3216%" y="3973" width="3.3067%" height="15" fill="rgb(220,115,36)" fg:x="66463855" fg:w="5073053"/><text x="43.5716%" y="3983.50">all..</text></g><g><title>alloc::raw_vec::finish_grow (5,073,053 samples, 3.31%)</title><rect x="43.3216%" y="3957" width="3.3067%" height="15" fill="rgb(243,153,54)" fg:x="66463855" fg:w="5073053"/><text x="43.5716%" y="3967.50">all..</text></g><g><title>malloc (5,073,053 samples, 3.31%)</title><rect x="43.3216%" y="3941" width="3.3067%" height="15" fill="rgb(251,47,18)" fg:x="66463855" fg:w="5073053"/><text x="43.5716%" y="3951.50">mal..</text></g><g><title>[libc.so.6] (5,073,053 samples, 3.31%)</title><rect x="43.3216%" y="3925" width="3.3067%" height="15" fill="rgb(242,102,42)" fg:x="66463855" fg:w="5073053"/><text x="43.5716%" y="3935.50">[li..</text></g><g><title>[libc.so.6] (5,073,053 samples, 3.31%)</title><rect x="43.3216%" y="3909" width="3.3067%" height="15" fill="rgb(234,31,38)" fg:x="66463855" fg:w="5073053"/><text x="43.5716%" y="3919.50">[li..</text></g><g><title>[libc.so.6] (2,557,164 samples, 1.67%)</title><rect x="44.9615%" y="3893" width="1.6668%" height="15" fill="rgb(221,117,51)" fg:x="68979744" fg:w="2557164"/><text x="45.2115%" y="3903.50"></text></g><g><title>main::benchmark::apply_frame_modifications (9,586,361 samples, 6.25%)</title><rect x="41.7180%" y="4133" width="6.2485%" height="15" fill="rgb(212,20,18)" fg:x="64003563" fg:w="9586361"/><text x="41.9680%" y="4143.50">main::be..</text></g><g><title>main::benchmark::json_to_html_node (7,126,069 samples, 4.64%)</title><rect x="43.3216%" y="4117" width="4.6448%" height="15" fill="rgb(245,133,36)" fg:x="66463855" fg:w="7126069"/><text x="43.5716%" y="4127.50">main:..</text></g><g><title>main::benchmark::json_to_html_node (7,126,069 samples, 4.64%)</title><rect x="43.3216%" y="4101" width="4.6448%" height="15" fill="rgb(212,6,19)" fg:x="66463855" fg:w="7126069"/><text x="43.5716%" y="4111.50">main:..</text></g><g><title>main::benchmark::json_to_html_node (7,126,069 samples, 4.64%)</title><rect x="43.3216%" y="4085" width="4.6448%" height="15" fill="rgb(218,1,36)" fg:x="66463855" fg:w="7126069"/><text x="43.5716%" y="4095.50">main:..</text></g><g><title>main::benchmark::json_to_html_node (7,126,069 samples, 4.64%)</title><rect x="43.3216%" y="4069" width="4.6448%" height="15" fill="rgb(246,84,54)" fg:x="66463855" fg:w="7126069"/><text x="43.5716%" y="4079.50">main:..</text></g><g><title>main::benchmark::json_to_html_node (7,126,069 samples, 4.64%)</title><rect x="43.3216%" y="4053" width="4.6448%" height="15" fill="rgb(242,110,6)" fg:x="66463855" fg:w="7126069"/><text x="43.5716%" y="4063.50">main:..</text></g><g><title>main::benchmark::json_to_html_node (7,126,069 samples, 4.64%)</title><rect x="43.3216%" y="4037" width="4.6448%" height="15" fill="rgb(214,47,5)" fg:x="66463855" fg:w="7126069"/><text x="43.5716%" y="4047.50">main:..</text></g><g><title>main::benchmark::json_to_html_node (2,053,016 samples, 1.34%)</title><rect x="46.6282%" y="4021" width="1.3382%" height="15" fill="rgb(218,159,25)" fg:x="71536908" fg:w="2053016"/><text x="46.8782%" y="4031.50"></text></g><g><title>main::benchmark::json_to_html_node (2,053,016 samples, 1.34%)</title><rect x="46.6282%" y="4005" width="1.3382%" height="15" fill="rgb(215,211,28)" fg:x="71536908" fg:w="2053016"/><text x="46.8782%" y="4015.50"></text></g><g><title>main::benchmark::json_to_html_node (2,053,016 samples, 1.34%)</title><rect x="46.6282%" y="3989" width="1.3382%" height="15" fill="rgb(238,59,32)" fg:x="71536908" fg:w="2053016"/><text x="46.8782%" y="3999.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,053,016 samples, 1.34%)</title><rect x="46.6282%" y="3973" width="1.3382%" height="15" fill="rgb(226,82,3)" fg:x="71536908" fg:w="2053016"/><text x="46.8782%" y="3983.50"></text></g><g><title>core::ptr::write (2,053,016 samples, 1.34%)</title><rect x="46.6282%" y="3957" width="1.3382%" height="15" fill="rgb(240,164,32)" fg:x="71536908" fg:w="2053016"/><text x="46.8782%" y="3967.50"></text></g><g><title>[libc.so.6] (2,053,016 samples, 1.34%)</title><rect x="46.6282%" y="3941" width="1.3382%" height="15" fill="rgb(232,46,7)" fg:x="71536908" fg:w="2053016"/><text x="46.8782%" y="3951.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,101,908 samples, 1.37%)</title><rect x="47.9664%" y="3701" width="1.3700%" height="15" fill="rgb(229,129,53)" fg:x="73589924" fg:w="2101908"/><text x="48.2164%" y="3711.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,101,908 samples, 1.37%)</title><rect x="47.9664%" y="3685" width="1.3700%" height="15" fill="rgb(234,188,29)" fg:x="73589924" fg:w="2101908"/><text x="48.2164%" y="3695.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,101,908 samples, 1.37%)</title><rect x="47.9664%" y="3669" width="1.3700%" height="15" fill="rgb(246,141,4)" fg:x="73589924" fg:w="2101908"/><text x="48.2164%" y="3679.50"></text></g><g><title>alloc::slice::hack::to_vec (2,101,908 samples, 1.37%)</title><rect x="47.9664%" y="3653" width="1.3700%" height="15" fill="rgb(229,23,39)" fg:x="73589924" fg:w="2101908"/><text x="48.2164%" y="3663.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,101,908 samples, 1.37%)</title><rect x="47.9664%" y="3637" width="1.3700%" height="15" fill="rgb(206,12,3)" fg:x="73589924" fg:w="2101908"/><text x="48.2164%" y="3647.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,101,908 samples, 1.37%)</title><rect x="47.9664%" y="3621" width="1.3700%" height="15" fill="rgb(252,226,20)" fg:x="73589924" fg:w="2101908"/><text x="48.2164%" y="3631.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,101,908 samples, 1.37%)</title><rect x="47.9664%" y="3605" width="1.3700%" height="15" fill="rgb(216,123,35)" fg:x="73589924" fg:w="2101908"/><text x="48.2164%" y="3615.50"></text></g><g><title>[libc.so.6] (2,101,908 samples, 1.37%)</title><rect x="47.9664%" y="3589" width="1.3700%" height="15" fill="rgb(212,68,40)" fg:x="73589924" fg:w="2101908"/><text x="48.2164%" y="3599.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1,952,779 samples, 1.27%)</title><rect x="49.3365%" y="3301" width="1.2728%" height="15" fill="rgb(254,125,32)" fg:x="75691832" fg:w="1952779"/><text x="49.5865%" y="3311.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,648,506 samples, 1.73%)</title><rect x="50.6093%" y="2981" width="1.7263%" height="15" fill="rgb(253,97,22)" fg:x="77644611" fg:w="2648506"/><text x="50.8593%" y="2991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,648,506 samples, 1.73%)</title><rect x="50.6093%" y="2965" width="1.7263%" height="15" fill="rgb(241,101,14)" fg:x="77644611" fg:w="2648506"/><text x="50.8593%" y="2975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,648,506 samples, 1.73%)</title><rect x="50.6093%" y="2949" width="1.7263%" height="15" fill="rgb(238,103,29)" fg:x="77644611" fg:w="2648506"/><text x="50.8593%" y="2959.50"></text></g><g><title>alloc::slice::hack::to_vec (2,648,506 samples, 1.73%)</title><rect x="50.6093%" y="2933" width="1.7263%" height="15" fill="rgb(233,195,47)" fg:x="77644611" fg:w="2648506"/><text x="50.8593%" y="2943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,648,506 samples, 1.73%)</title><rect x="50.6093%" y="2917" width="1.7263%" height="15" fill="rgb(246,218,30)" fg:x="77644611" fg:w="2648506"/><text x="50.8593%" y="2927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,648,506 samples, 1.73%)</title><rect x="50.6093%" y="2901" width="1.7263%" height="15" fill="rgb(219,145,47)" fg:x="77644611" fg:w="2648506"/><text x="50.8593%" y="2911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,648,506 samples, 1.73%)</title><rect x="50.6093%" y="2885" width="1.7263%" height="15" fill="rgb(243,12,26)" fg:x="77644611" fg:w="2648506"/><text x="50.8593%" y="2895.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,648,506 samples, 1.73%)</title><rect x="50.6093%" y="2869" width="1.7263%" height="15" fill="rgb(214,87,16)" fg:x="77644611" fg:w="2648506"/><text x="50.8593%" y="2879.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,648,506 samples, 1.73%)</title><rect x="50.6093%" y="2853" width="1.7263%" height="15" fill="rgb(208,99,42)" fg:x="77644611" fg:w="2648506"/><text x="50.8593%" y="2863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,648,506 samples, 1.73%)</title><rect x="50.6093%" y="2837" width="1.7263%" height="15" fill="rgb(253,99,2)" fg:x="77644611" fg:w="2648506"/><text x="50.8593%" y="2847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,648,506 samples, 1.73%)</title><rect x="50.6093%" y="2821" width="1.7263%" height="15" fill="rgb(220,168,23)" fg:x="77644611" fg:w="2648506"/><text x="50.8593%" y="2831.50"></text></g><g><title>alloc::alloc::alloc (2,648,506 samples, 1.73%)</title><rect x="50.6093%" y="2805" width="1.7263%" height="15" fill="rgb(242,38,24)" fg:x="77644611" fg:w="2648506"/><text x="50.8593%" y="2815.50"></text></g><g><title>malloc (2,648,506 samples, 1.73%)</title><rect x="50.6093%" y="2789" width="1.7263%" height="15" fill="rgb(225,182,9)" fg:x="77644611" fg:w="2648506"/><text x="50.8593%" y="2799.50"></text></g><g><title>[libc.so.6] (2,648,506 samples, 1.73%)</title><rect x="50.6093%" y="2773" width="1.7263%" height="15" fill="rgb(243,178,37)" fg:x="77644611" fg:w="2648506"/><text x="50.8593%" y="2783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,302,840 samples, 1.50%)</title><rect x="52.3356%" y="2821" width="1.5010%" height="15" fill="rgb(232,139,19)" fg:x="80293117" fg:w="2302840"/><text x="52.5856%" y="2831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,302,840 samples, 1.50%)</title><rect x="52.3356%" y="2805" width="1.5010%" height="15" fill="rgb(225,201,24)" fg:x="80293117" fg:w="2302840"/><text x="52.5856%" y="2815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,302,840 samples, 1.50%)</title><rect x="52.3356%" y="2789" width="1.5010%" height="15" fill="rgb(221,47,46)" fg:x="80293117" fg:w="2302840"/><text x="52.5856%" y="2799.50"></text></g><g><title>alloc::slice::hack::to_vec (2,302,840 samples, 1.50%)</title><rect x="52.3356%" y="2773" width="1.5010%" height="15" fill="rgb(249,23,13)" fg:x="80293117" fg:w="2302840"/><text x="52.5856%" y="2783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,302,840 samples, 1.50%)</title><rect x="52.3356%" y="2757" width="1.5010%" height="15" fill="rgb(219,9,5)" fg:x="80293117" fg:w="2302840"/><text x="52.5856%" y="2767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,302,840 samples, 1.50%)</title><rect x="52.3356%" y="2741" width="1.5010%" height="15" fill="rgb(254,171,16)" fg:x="80293117" fg:w="2302840"/><text x="52.5856%" y="2751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,302,840 samples, 1.50%)</title><rect x="52.3356%" y="2725" width="1.5010%" height="15" fill="rgb(230,171,20)" fg:x="80293117" fg:w="2302840"/><text x="52.5856%" y="2735.50"></text></g><g><title>[libc.so.6] (2,302,840 samples, 1.50%)</title><rect x="52.3356%" y="2709" width="1.5010%" height="15" fill="rgb(210,71,41)" fg:x="80293117" fg:w="2302840"/><text x="52.5856%" y="2719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,027,340 samples, 3.28%)</title><rect x="52.3356%" y="2981" width="3.2769%" height="15" fill="rgb(206,173,20)" fg:x="80293117" fg:w="5027340"/><text x="52.5856%" y="2991.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,027,340 samples, 3.28%)</title><rect x="52.3356%" y="2965" width="3.2769%" height="15" fill="rgb(233,88,34)" fg:x="80293117" fg:w="5027340"/><text x="52.5856%" y="2975.50">all..</text></g><g><title>alloc::slice::hack::to_vec (5,027,340 samples, 3.28%)</title><rect x="52.3356%" y="2949" width="3.2769%" height="15" fill="rgb(223,209,46)" fg:x="80293117" fg:w="5027340"/><text x="52.5856%" y="2959.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,027,340 samples, 3.28%)</title><rect x="52.3356%" y="2933" width="3.2769%" height="15" fill="rgb(250,43,18)" fg:x="80293117" fg:w="5027340"/><text x="52.5856%" y="2943.50">&lt;T ..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (5,027,340 samples, 3.28%)</title><rect x="52.3356%" y="2917" width="3.2769%" height="15" fill="rgb(208,13,10)" fg:x="80293117" fg:w="5027340"/><text x="52.5856%" y="2927.50">&lt;cs..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,027,340 samples, 3.28%)</title><rect x="52.3356%" y="2901" width="3.2769%" height="15" fill="rgb(212,200,36)" fg:x="80293117" fg:w="5027340"/><text x="52.5856%" y="2911.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,027,340 samples, 3.28%)</title><rect x="52.3356%" y="2885" width="3.2769%" height="15" fill="rgb(225,90,30)" fg:x="80293117" fg:w="5027340"/><text x="52.5856%" y="2895.50">all..</text></g><g><title>alloc::slice::hack::to_vec (5,027,340 samples, 3.28%)</title><rect x="52.3356%" y="2869" width="3.2769%" height="15" fill="rgb(236,182,39)" fg:x="80293117" fg:w="5027340"/><text x="52.5856%" y="2879.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5,027,340 samples, 3.28%)</title><rect x="52.3356%" y="2853" width="3.2769%" height="15" fill="rgb(212,144,35)" fg:x="80293117" fg:w="5027340"/><text x="52.5856%" y="2863.50">&lt;T ..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (5,027,340 samples, 3.28%)</title><rect x="52.3356%" y="2837" width="3.2769%" height="15" fill="rgb(228,63,44)" fg:x="80293117" fg:w="5027340"/><text x="52.5856%" y="2847.50">&lt;cs..</text></g><g><title>&lt;css_bitvector_compiler::BitVector as core::clone::Clone&gt;::clone (2,724,500 samples, 1.78%)</title><rect x="53.8366%" y="2821" width="1.7758%" height="15" fill="rgb(228,109,6)" fg:x="82595957" fg:w="2724500"/><text x="54.0866%" y="2831.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,724,500 samples, 1.78%)</title><rect x="53.8366%" y="2805" width="1.7758%" height="15" fill="rgb(238,117,24)" fg:x="82595957" fg:w="2724500"/><text x="54.0866%" y="2815.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,724,500 samples, 1.78%)</title><rect x="53.8366%" y="2789" width="1.7758%" height="15" fill="rgb(242,26,26)" fg:x="82595957" fg:w="2724500"/><text x="54.0866%" y="2799.50">a..</text></g><g><title>alloc::slice::hack::to_vec (2,724,500 samples, 1.78%)</title><rect x="53.8366%" y="2773" width="1.7758%" height="15" fill="rgb(221,92,48)" fg:x="82595957" fg:w="2724500"/><text x="54.0866%" y="2783.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,724,500 samples, 1.78%)</title><rect x="53.8366%" y="2757" width="1.7758%" height="15" fill="rgb(209,209,32)" fg:x="82595957" fg:w="2724500"/><text x="54.0866%" y="2767.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,724,500 samples, 1.78%)</title><rect x="53.8366%" y="2741" width="1.7758%" height="15" fill="rgb(221,70,22)" fg:x="82595957" fg:w="2724500"/><text x="54.0866%" y="2751.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,724,500 samples, 1.78%)</title><rect x="53.8366%" y="2725" width="1.7758%" height="15" fill="rgb(248,145,5)" fg:x="82595957" fg:w="2724500"/><text x="54.0866%" y="2735.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,724,500 samples, 1.78%)</title><rect x="53.8366%" y="2709" width="1.7758%" height="15" fill="rgb(226,116,26)" fg:x="82595957" fg:w="2724500"/><text x="54.0866%" y="2719.50">a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,724,500 samples, 1.78%)</title><rect x="53.8366%" y="2693" width="1.7758%" height="15" fill="rgb(244,5,17)" fg:x="82595957" fg:w="2724500"/><text x="54.0866%" y="2703.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,724,500 samples, 1.78%)</title><rect x="53.8366%" y="2677" width="1.7758%" height="15" fill="rgb(252,159,33)" fg:x="82595957" fg:w="2724500"/><text x="54.0866%" y="2687.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (2,724,500 samples, 1.78%)</title><rect x="53.8366%" y="2661" width="1.7758%" height="15" fill="rgb(206,71,0)" fg:x="82595957" fg:w="2724500"/><text x="54.0866%" y="2671.50">a..</text></g><g><title>alloc::alloc::alloc (2,724,500 samples, 1.78%)</title><rect x="53.8366%" y="2645" width="1.7758%" height="15" fill="rgb(233,118,54)" fg:x="82595957" fg:w="2724500"/><text x="54.0866%" y="2655.50">a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10,108,829 samples, 6.59%)</title><rect x="50.6093%" y="3061" width="6.5890%" height="15" fill="rgb(234,83,48)" fg:x="77644611" fg:w="10108829"/><text x="50.8593%" y="3071.50">&lt;alloc::v..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10,108,829 samples, 6.59%)</title><rect x="50.6093%" y="3045" width="6.5890%" height="15" fill="rgb(228,3,54)" fg:x="77644611" fg:w="10108829"/><text x="50.8593%" y="3055.50">alloc::sl..</text></g><g><title>alloc::slice::hack::to_vec (10,108,829 samples, 6.59%)</title><rect x="50.6093%" y="3029" width="6.5890%" height="15" fill="rgb(226,155,13)" fg:x="77644611" fg:w="10108829"/><text x="50.8593%" y="3039.50">alloc::sl..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10,108,829 samples, 6.59%)</title><rect x="50.6093%" y="3013" width="6.5890%" height="15" fill="rgb(241,28,37)" fg:x="77644611" fg:w="10108829"/><text x="50.8593%" y="3023.50">&lt;T as all..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (10,108,829 samples, 6.59%)</title><rect x="50.6093%" y="2997" width="6.5890%" height="15" fill="rgb(233,93,10)" fg:x="77644611" fg:w="10108829"/><text x="50.8593%" y="3007.50">&lt;css_bitv..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,432,983 samples, 1.59%)</title><rect x="55.6125%" y="2981" width="1.5858%" height="15" fill="rgb(225,113,19)" fg:x="85320457" fg:w="2432983"/><text x="55.8625%" y="2991.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,432,983 samples, 1.59%)</title><rect x="55.6125%" y="2965" width="1.5858%" height="15" fill="rgb(241,2,18)" fg:x="85320457" fg:w="2432983"/><text x="55.8625%" y="2975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,432,983 samples, 1.59%)</title><rect x="55.6125%" y="2949" width="1.5858%" height="15" fill="rgb(228,207,21)" fg:x="85320457" fg:w="2432983"/><text x="55.8625%" y="2959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,432,983 samples, 1.59%)</title><rect x="55.6125%" y="2933" width="1.5858%" height="15" fill="rgb(213,211,35)" fg:x="85320457" fg:w="2432983"/><text x="55.8625%" y="2943.50"></text></g><g><title>alloc::slice::hack::to_vec (2,432,983 samples, 1.59%)</title><rect x="55.6125%" y="2917" width="1.5858%" height="15" fill="rgb(209,83,10)" fg:x="85320457" fg:w="2432983"/><text x="55.8625%" y="2927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,432,983 samples, 1.59%)</title><rect x="55.6125%" y="2901" width="1.5858%" height="15" fill="rgb(209,164,1)" fg:x="85320457" fg:w="2432983"/><text x="55.8625%" y="2911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2,432,983 samples, 1.59%)</title><rect x="55.6125%" y="2885" width="1.5858%" height="15" fill="rgb(213,184,43)" fg:x="85320457" fg:w="2432983"/><text x="55.8625%" y="2895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,432,983 samples, 1.59%)</title><rect x="55.6125%" y="2869" width="1.5858%" height="15" fill="rgb(231,61,34)" fg:x="85320457" fg:w="2432983"/><text x="55.8625%" y="2879.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (2,572,076 samples, 1.68%)</title><rect x="57.1983%" y="2997" width="1.6765%" height="15" fill="rgb(235,75,3)" fg:x="87753440" fg:w="2572076"/><text x="57.4483%" y="3007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (2,572,076 samples, 1.68%)</title><rect x="57.1983%" y="2981" width="1.6765%" height="15" fill="rgb(220,106,47)" fg:x="87753440" fg:w="2572076"/><text x="57.4483%" y="2991.50"></text></g><g><title>core::clone::Clone::clone (2,572,076 samples, 1.68%)</title><rect x="57.1983%" y="2965" width="1.6765%" height="15" fill="rgb(210,196,33)" fg:x="87753440" fg:w="2572076"/><text x="57.4483%" y="2975.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2,572,076 samples, 1.68%)</title><rect x="57.1983%" y="2949" width="1.6765%" height="15" fill="rgb(229,154,42)" fg:x="87753440" fg:w="2572076"/><text x="57.4483%" y="2959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,572,076 samples, 1.68%)</title><rect x="57.1983%" y="2933" width="1.6765%" height="15" fill="rgb(228,114,26)" fg:x="87753440" fg:w="2572076"/><text x="57.4483%" y="2943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2,572,076 samples, 1.68%)</title><rect x="57.1983%" y="2917" width="1.6765%" height="15" fill="rgb(208,144,1)" fg:x="87753440" fg:w="2572076"/><text x="57.4483%" y="2927.50"></text></g><g><title>alloc::slice::hack::to_vec (2,572,076 samples, 1.68%)</title><rect x="57.1983%" y="2901" width="1.6765%" height="15" fill="rgb(239,112,37)" fg:x="87753440" fg:w="2572076"/><text x="57.4483%" y="2911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2,572,076 samples, 1.68%)</title><rect x="57.1983%" y="2885" width="1.6765%" height="15" fill="rgb(210,96,50)" fg:x="87753440" fg:w="2572076"/><text x="57.4483%" y="2895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,572,076 samples, 1.68%)</title><rect x="57.1983%" y="2869" width="1.6765%" height="15" fill="rgb(222,178,2)" fg:x="87753440" fg:w="2572076"/><text x="57.4483%" y="2879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,572,076 samples, 1.68%)</title><rect x="57.1983%" y="2853" width="1.6765%" height="15" fill="rgb(226,74,18)" fg:x="87753440" fg:w="2572076"/><text x="57.4483%" y="2863.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,572,076 samples, 1.68%)</title><rect x="57.1983%" y="2837" width="1.6765%" height="15" fill="rgb(225,67,54)" fg:x="87753440" fg:w="2572076"/><text x="57.4483%" y="2847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,572,076 samples, 1.68%)</title><rect x="57.1983%" y="2821" width="1.6765%" height="15" fill="rgb(251,92,32)" fg:x="87753440" fg:w="2572076"/><text x="57.4483%" y="2831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,572,076 samples, 1.68%)</title><rect x="57.1983%" y="2805" width="1.6765%" height="15" fill="rgb(228,149,22)" fg:x="87753440" fg:w="2572076"/><text x="57.4483%" y="2815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,572,076 samples, 1.68%)</title><rect x="57.1983%" y="2789" width="1.6765%" height="15" fill="rgb(243,54,13)" fg:x="87753440" fg:w="2572076"/><text x="57.4483%" y="2799.50"></text></g><g><title>alloc::alloc::alloc (2,572,076 samples, 1.68%)</title><rect x="57.1983%" y="2773" width="1.6765%" height="15" fill="rgb(243,180,28)" fg:x="87753440" fg:w="2572076"/><text x="57.4483%" y="2783.50"></text></g><g><title>malloc (2,572,076 samples, 1.68%)</title><rect x="57.1983%" y="2757" width="1.6765%" height="15" fill="rgb(208,167,24)" fg:x="87753440" fg:w="2572076"/><text x="57.4483%" y="2767.50"></text></g><g><title>[libc.so.6] (2,572,076 samples, 1.68%)</title><rect x="57.1983%" y="2741" width="1.6765%" height="15" fill="rgb(245,73,45)" fg:x="87753440" fg:w="2572076"/><text x="57.4483%" y="2751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15,103,597 samples, 9.84%)</title><rect x="50.6093%" y="3141" width="9.8446%" height="15" fill="rgb(237,203,48)" fg:x="77644611" fg:w="15103597"/><text x="50.8593%" y="3151.50">&lt;alloc::vec::V..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15,103,597 samples, 9.84%)</title><rect x="50.6093%" y="3125" width="9.8446%" height="15" fill="rgb(211,197,16)" fg:x="77644611" fg:w="15103597"/><text x="50.8593%" y="3135.50">alloc::slice::..</text></g><g><title>alloc::slice::hack::to_vec (15,103,597 samples, 9.84%)</title><rect x="50.6093%" y="3109" width="9.8446%" height="15" fill="rgb(243,99,51)" fg:x="77644611" fg:w="15103597"/><text x="50.8593%" y="3119.50">alloc::slice::..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15,103,597 samples, 9.84%)</title><rect x="50.6093%" y="3093" width="9.8446%" height="15" fill="rgb(215,123,29)" fg:x="77644611" fg:w="15103597"/><text x="50.8593%" y="3103.50">&lt;T as alloc::s..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (15,103,597 samples, 9.84%)</title><rect x="50.6093%" y="3077" width="9.8446%" height="15" fill="rgb(239,186,37)" fg:x="77644611" fg:w="15103597"/><text x="50.8593%" y="3087.50">&lt;css_bitvector..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (4,994,768 samples, 3.26%)</title><rect x="57.1983%" y="3061" width="3.2556%" height="15" fill="rgb(252,136,39)" fg:x="87753440" fg:w="4994768"/><text x="57.4483%" y="3071.50">&lt;st..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (4,994,768 samples, 3.26%)</title><rect x="57.1983%" y="3045" width="3.2556%" height="15" fill="rgb(223,213,32)" fg:x="87753440" fg:w="4994768"/><text x="57.4483%" y="3055.50">&lt;ha..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (4,994,768 samples, 3.26%)</title><rect x="57.1983%" y="3029" width="3.2556%" height="15" fill="rgb(233,115,5)" fg:x="87753440" fg:w="4994768"/><text x="57.4483%" y="3039.50">&lt;ha..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,994,768 samples, 3.26%)</title><rect x="57.1983%" y="3013" width="3.2556%" height="15" fill="rgb(207,226,44)" fg:x="87753440" fg:w="4994768"/><text x="57.4483%" y="3023.50">&lt;ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (2,422,692 samples, 1.58%)</title><rect x="58.8748%" y="2997" width="1.5791%" height="15" fill="rgb(208,126,0)" fg:x="90325516" fg:w="2422692"/><text x="59.1248%" y="3007.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (2,422,692 samples, 1.58%)</title><rect x="58.8748%" y="2981" width="1.5791%" height="15" fill="rgb(244,66,21)" fg:x="90325516" fg:w="2422692"/><text x="59.1248%" y="2991.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2,422,692 samples, 1.58%)</title><rect x="58.8748%" y="2965" width="1.5791%" height="15" fill="rgb(222,97,12)" fg:x="90325516" fg:w="2422692"/><text x="59.1248%" y="2975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,422,692 samples, 1.58%)</title><rect x="58.8748%" y="2949" width="1.5791%" height="15" fill="rgb(219,213,19)" fg:x="90325516" fg:w="2422692"/><text x="59.1248%" y="2959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,422,692 samples, 1.58%)</title><rect x="58.8748%" y="2933" width="1.5791%" height="15" fill="rgb(252,169,30)" fg:x="90325516" fg:w="2422692"/><text x="59.1248%" y="2943.50"></text></g><g><title>alloc::alloc::alloc (2,422,692 samples, 1.58%)</title><rect x="58.8748%" y="2917" width="1.5791%" height="15" fill="rgb(206,32,51)" fg:x="90325516" fg:w="2422692"/><text x="59.1248%" y="2927.50"></text></g><g><title>malloc (2,422,692 samples, 1.58%)</title><rect x="58.8748%" y="2901" width="1.5791%" height="15" fill="rgb(250,172,42)" fg:x="90325516" fg:w="2422692"/><text x="59.1248%" y="2911.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (21,118,115 samples, 13.76%)</title><rect x="47.9664%" y="3717" width="13.7649%" height="15" fill="rgb(209,34,43)" fg:x="73589924" fg:w="21118115"/><text x="48.2164%" y="3727.50">&lt;css_bitvector_compil..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3701" width="12.3949%" height="15" fill="rgb(223,11,35)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3711.50">&lt;alloc::vec::Vec&lt;T,..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3685" width="12.3949%" height="15" fill="rgb(251,219,26)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3695.50">alloc::slice::&lt;impl..</text></g><g><title>alloc::slice::hack::to_vec (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3669" width="12.3949%" height="15" fill="rgb(231,119,3)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3679.50">alloc::slice::hack:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3653" width="12.3949%" height="15" fill="rgb(216,97,11)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3663.50">&lt;T as alloc::slice:..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3637" width="12.3949%" height="15" fill="rgb(223,59,9)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3647.50">&lt;css_bitvector_comp..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3621" width="12.3949%" height="15" fill="rgb(233,93,31)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3631.50">&lt;alloc::vec::Vec&lt;T,..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3605" width="12.3949%" height="15" fill="rgb(239,81,33)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3615.50">alloc::slice::&lt;impl..</text></g><g><title>alloc::slice::hack::to_vec (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3589" width="12.3949%" height="15" fill="rgb(213,120,34)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3599.50">alloc::slice::hack:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3573" width="12.3949%" height="15" fill="rgb(243,49,53)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3583.50">&lt;T as alloc::slice:..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3557" width="12.3949%" height="15" fill="rgb(247,216,33)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3567.50">&lt;css_bitvector_comp..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3541" width="12.3949%" height="15" fill="rgb(226,26,14)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3551.50">&lt;alloc::vec::Vec&lt;T,..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3525" width="12.3949%" height="15" fill="rgb(215,49,53)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3535.50">alloc::slice::&lt;impl..</text></g><g><title>alloc::slice::hack::to_vec (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3509" width="12.3949%" height="15" fill="rgb(245,162,40)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3519.50">alloc::slice::hack:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3493" width="12.3949%" height="15" fill="rgb(229,68,17)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3503.50">&lt;T as alloc::slice:..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3477" width="12.3949%" height="15" fill="rgb(213,182,10)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3487.50">&lt;css_bitvector_comp..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3461" width="12.3949%" height="15" fill="rgb(245,125,30)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3471.50">&lt;alloc::vec::Vec&lt;T,..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3445" width="12.3949%" height="15" fill="rgb(232,202,2)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3455.50">alloc::slice::&lt;impl..</text></g><g><title>alloc::slice::hack::to_vec (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3429" width="12.3949%" height="15" fill="rgb(237,140,51)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3439.50">alloc::slice::hack:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3413" width="12.3949%" height="15" fill="rgb(236,157,25)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3423.50">&lt;T as alloc::slice:..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3397" width="12.3949%" height="15" fill="rgb(219,209,0)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3407.50">&lt;css_bitvector_comp..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3381" width="12.3949%" height="15" fill="rgb(240,116,54)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3391.50">&lt;alloc::vec::Vec&lt;T,..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3365" width="12.3949%" height="15" fill="rgb(216,10,36)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3375.50">alloc::slice::&lt;impl..</text></g><g><title>alloc::slice::hack::to_vec (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3349" width="12.3949%" height="15" fill="rgb(222,72,44)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3359.50">alloc::slice::hack:..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3333" width="12.3949%" height="15" fill="rgb(232,159,9)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3343.50">&lt;T as alloc::slice:..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (19,016,207 samples, 12.39%)</title><rect x="49.3365%" y="3317" width="12.3949%" height="15" fill="rgb(210,39,32)" fg:x="75691832" fg:w="19016207"/><text x="49.5865%" y="3327.50">&lt;css_bitvector_comp..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,063,428 samples, 11.12%)</title><rect x="50.6093%" y="3301" width="11.1221%" height="15" fill="rgb(216,194,45)" fg:x="77644611" fg:w="17063428"/><text x="50.8593%" y="3311.50">&lt;alloc::vec::Vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,063,428 samples, 11.12%)</title><rect x="50.6093%" y="3285" width="11.1221%" height="15" fill="rgb(218,18,35)" fg:x="77644611" fg:w="17063428"/><text x="50.8593%" y="3295.50">alloc::slice::&lt;i..</text></g><g><title>alloc::slice::hack::to_vec (17,063,428 samples, 11.12%)</title><rect x="50.6093%" y="3269" width="11.1221%" height="15" fill="rgb(207,83,51)" fg:x="77644611" fg:w="17063428"/><text x="50.8593%" y="3279.50">alloc::slice::ha..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17,063,428 samples, 11.12%)</title><rect x="50.6093%" y="3253" width="11.1221%" height="15" fill="rgb(225,63,43)" fg:x="77644611" fg:w="17063428"/><text x="50.8593%" y="3263.50">&lt;T as alloc::sli..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (17,063,428 samples, 11.12%)</title><rect x="50.6093%" y="3237" width="11.1221%" height="15" fill="rgb(207,57,36)" fg:x="77644611" fg:w="17063428"/><text x="50.8593%" y="3247.50">&lt;css_bitvector_c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17,063,428 samples, 11.12%)</title><rect x="50.6093%" y="3221" width="11.1221%" height="15" fill="rgb(216,99,33)" fg:x="77644611" fg:w="17063428"/><text x="50.8593%" y="3231.50">&lt;alloc::vec::Vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17,063,428 samples, 11.12%)</title><rect x="50.6093%" y="3205" width="11.1221%" height="15" fill="rgb(225,42,16)" fg:x="77644611" fg:w="17063428"/><text x="50.8593%" y="3215.50">alloc::slice::&lt;i..</text></g><g><title>alloc::slice::hack::to_vec (17,063,428 samples, 11.12%)</title><rect x="50.6093%" y="3189" width="11.1221%" height="15" fill="rgb(220,201,45)" fg:x="77644611" fg:w="17063428"/><text x="50.8593%" y="3199.50">alloc::slice::ha..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17,063,428 samples, 11.12%)</title><rect x="50.6093%" y="3173" width="11.1221%" height="15" fill="rgb(225,33,4)" fg:x="77644611" fg:w="17063428"/><text x="50.8593%" y="3183.50">&lt;T as alloc::sli..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (17,063,428 samples, 11.12%)</title><rect x="50.6093%" y="3157" width="11.1221%" height="15" fill="rgb(224,33,50)" fg:x="77644611" fg:w="17063428"/><text x="50.8593%" y="3167.50">&lt;css_bitvector_c..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,959,831 samples, 1.28%)</title><rect x="60.4539%" y="3141" width="1.2774%" height="15" fill="rgb(246,198,51)" fg:x="92748208" fg:w="1959831"/><text x="60.7039%" y="3151.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (23,234,294 samples, 15.14%)</title><rect x="47.9664%" y="3877" width="15.1443%" height="15" fill="rgb(205,22,4)" fg:x="73589924" fg:w="23234294"/><text x="48.2164%" y="3887.50">&lt;css_bitvector_compiler..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23,234,294 samples, 15.14%)</title><rect x="47.9664%" y="3861" width="15.1443%" height="15" fill="rgb(206,3,8)" fg:x="73589924" fg:w="23234294"/><text x="48.2164%" y="3871.50">&lt;alloc::vec::Vec&lt;T,A&gt; a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23,234,294 samples, 15.14%)</title><rect x="47.9664%" y="3845" width="15.1443%" height="15" fill="rgb(251,23,15)" fg:x="73589924" fg:w="23234294"/><text x="48.2164%" y="3855.50">alloc::slice::&lt;impl [T]..</text></g><g><title>alloc::slice::hack::to_vec (23,234,294 samples, 15.14%)</title><rect x="47.9664%" y="3829" width="15.1443%" height="15" fill="rgb(252,88,28)" fg:x="73589924" fg:w="23234294"/><text x="48.2164%" y="3839.50">alloc::slice::hack::to_..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23,234,294 samples, 15.14%)</title><rect x="47.9664%" y="3813" width="15.1443%" height="15" fill="rgb(212,127,14)" fg:x="73589924" fg:w="23234294"/><text x="48.2164%" y="3823.50">&lt;T as alloc::slice::hac..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (23,234,294 samples, 15.14%)</title><rect x="47.9664%" y="3797" width="15.1443%" height="15" fill="rgb(247,145,37)" fg:x="73589924" fg:w="23234294"/><text x="48.2164%" y="3807.50">&lt;css_bitvector_compiler..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23,234,294 samples, 15.14%)</title><rect x="47.9664%" y="3781" width="15.1443%" height="15" fill="rgb(209,117,53)" fg:x="73589924" fg:w="23234294"/><text x="48.2164%" y="3791.50">&lt;alloc::vec::Vec&lt;T,A&gt; a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (23,234,294 samples, 15.14%)</title><rect x="47.9664%" y="3765" width="15.1443%" height="15" fill="rgb(212,90,42)" fg:x="73589924" fg:w="23234294"/><text x="48.2164%" y="3775.50">alloc::slice::&lt;impl [T]..</text></g><g><title>alloc::slice::hack::to_vec (23,234,294 samples, 15.14%)</title><rect x="47.9664%" y="3749" width="15.1443%" height="15" fill="rgb(218,164,37)" fg:x="73589924" fg:w="23234294"/><text x="48.2164%" y="3759.50">alloc::slice::hack::to_..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (23,234,294 samples, 15.14%)</title><rect x="47.9664%" y="3733" width="15.1443%" height="15" fill="rgb(246,65,34)" fg:x="73589924" fg:w="23234294"/><text x="48.2164%" y="3743.50">&lt;T as alloc::slice::hac..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2,116,179 samples, 1.38%)</title><rect x="61.7313%" y="3717" width="1.3793%" height="15" fill="rgb(231,100,33)" fg:x="94708039" fg:w="2116179"/><text x="61.9813%" y="3727.50"></text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (27,822,880 samples, 18.14%)</title><rect x="47.9664%" y="4117" width="18.1351%" height="15" fill="rgb(228,126,14)" fg:x="73589924" fg:w="27822880"/><text x="48.2164%" y="4127.50">&lt;css_bitvector_compiler::Htm..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27,822,880 samples, 18.14%)</title><rect x="47.9664%" y="4101" width="18.1351%" height="15" fill="rgb(215,173,21)" fg:x="73589924" fg:w="27822880"/><text x="48.2164%" y="4111.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27,822,880 samples, 18.14%)</title><rect x="47.9664%" y="4085" width="18.1351%" height="15" fill="rgb(210,6,40)" fg:x="73589924" fg:w="27822880"/><text x="48.2164%" y="4095.50">alloc::slice::&lt;impl [T]&gt;::to..</text></g><g><title>alloc::slice::hack::to_vec (27,822,880 samples, 18.14%)</title><rect x="47.9664%" y="4069" width="18.1351%" height="15" fill="rgb(212,48,18)" fg:x="73589924" fg:w="27822880"/><text x="48.2164%" y="4079.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27,822,880 samples, 18.14%)</title><rect x="47.9664%" y="4053" width="18.1351%" height="15" fill="rgb(230,214,11)" fg:x="73589924" fg:w="27822880"/><text x="48.2164%" y="4063.50">&lt;T as alloc::slice::hack::Co..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (27,822,880 samples, 18.14%)</title><rect x="47.9664%" y="4037" width="18.1351%" height="15" fill="rgb(254,105,39)" fg:x="73589924" fg:w="27822880"/><text x="48.2164%" y="4047.50">&lt;css_bitvector_compiler::Htm..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27,822,880 samples, 18.14%)</title><rect x="47.9664%" y="4021" width="18.1351%" height="15" fill="rgb(245,158,5)" fg:x="73589924" fg:w="27822880"/><text x="48.2164%" y="4031.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27,822,880 samples, 18.14%)</title><rect x="47.9664%" y="4005" width="18.1351%" height="15" fill="rgb(249,208,11)" fg:x="73589924" fg:w="27822880"/><text x="48.2164%" y="4015.50">alloc::slice::&lt;impl [T]&gt;::to..</text></g><g><title>alloc::slice::hack::to_vec (27,822,880 samples, 18.14%)</title><rect x="47.9664%" y="3989" width="18.1351%" height="15" fill="rgb(210,39,28)" fg:x="73589924" fg:w="27822880"/><text x="48.2164%" y="3999.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27,822,880 samples, 18.14%)</title><rect x="47.9664%" y="3973" width="18.1351%" height="15" fill="rgb(211,56,53)" fg:x="73589924" fg:w="27822880"/><text x="48.2164%" y="3983.50">&lt;T as alloc::slice::hack::Co..</text></g><g><title>&lt;css_bitvector_compiler::HtmlNode as core::clone::Clone&gt;::clone (27,822,880 samples, 18.14%)</title><rect x="47.9664%" y="3957" width="18.1351%" height="15" fill="rgb(226,201,30)" fg:x="73589924" fg:w="27822880"/><text x="48.2164%" y="3967.50">&lt;css_bitvector_compiler::Htm..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27,822,880 samples, 18.14%)</title><rect x="47.9664%" y="3941" width="18.1351%" height="15" fill="rgb(239,101,34)" fg:x="73589924" fg:w="27822880"/><text x="48.2164%" y="3951.50">&lt;alloc::vec::Vec&lt;T,A&gt; as cor..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27,822,880 samples, 18.14%)</title><rect x="47.9664%" y="3925" width="18.1351%" height="15" fill="rgb(226,209,5)" fg:x="73589924" fg:w="27822880"/><text x="48.2164%" y="3935.50">alloc::slice::&lt;impl [T]&gt;::to..</text></g><g><title>alloc::slice::hack::to_vec (27,822,880 samples, 18.14%)</title><rect x="47.9664%" y="3909" width="18.1351%" height="15" fill="rgb(250,105,47)" fg:x="73589924" fg:w="27822880"/><text x="48.2164%" y="3919.50">alloc::slice::hack::to_vec</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27,822,880 samples, 18.14%)</title><rect x="47.9664%" y="3893" width="18.1351%" height="15" fill="rgb(230,72,3)" fg:x="73589924" fg:w="27822880"/><text x="48.2164%" y="3903.50">&lt;T as alloc::slice::hack::Co..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4,588,586 samples, 2.99%)</title><rect x="63.1107%" y="3877" width="2.9909%" height="15" fill="rgb(232,218,39)" fg:x="96824218" fg:w="4588586"/><text x="63.3607%" y="3887.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4,588,586 samples, 2.99%)</title><rect x="63.1107%" y="3861" width="2.9909%" height="15" fill="rgb(248,166,6)" fg:x="96824218" fg:w="4588586"/><text x="63.3607%" y="3871.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (4,588,586 samples, 2.99%)</title><rect x="63.1107%" y="3845" width="2.9909%" height="15" fill="rgb(247,89,20)" fg:x="96824218" fg:w="4588586"/><text x="63.3607%" y="3855.50">all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (4,588,586 samples, 2.99%)</title><rect x="63.1107%" y="3829" width="2.9909%" height="15" fill="rgb(248,130,54)" fg:x="96824218" fg:w="4588586"/><text x="63.3607%" y="3839.50">all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4,588,586 samples, 2.99%)</title><rect x="63.1107%" y="3813" width="2.9909%" height="15" fill="rgb(234,196,4)" fg:x="96824218" fg:w="4588586"/><text x="63.3607%" y="3823.50">&lt;al..</text></g><g><title>alloc::alloc::Global::alloc_impl (4,588,586 samples, 2.99%)</title><rect x="63.1107%" y="3797" width="2.9909%" height="15" fill="rgb(250,143,31)" fg:x="96824218" fg:w="4588586"/><text x="63.3607%" y="3807.50">all..</text></g><g><title>alloc::alloc::alloc (4,588,586 samples, 2.99%)</title><rect x="63.1107%" y="3781" width="2.9909%" height="15" fill="rgb(211,110,34)" fg:x="96824218" fg:w="4588586"/><text x="63.3607%" y="3791.50">all..</text></g><g><title>malloc (4,588,586 samples, 2.99%)</title><rect x="63.1107%" y="3765" width="2.9909%" height="15" fill="rgb(215,124,48)" fg:x="96824218" fg:w="4588586"/><text x="63.3607%" y="3775.50">mal..</text></g><g><title>[libc.so.6] (4,588,586 samples, 2.99%)</title><rect x="63.1107%" y="3749" width="2.9909%" height="15" fill="rgb(216,46,13)" fg:x="96824218" fg:w="4588586"/><text x="63.3607%" y="3759.50">[li..</text></g><g><title>[libc.so.6] (4,588,586 samples, 2.99%)</title><rect x="63.1107%" y="3733" width="2.9909%" height="15" fill="rgb(205,184,25)" fg:x="96824218" fg:w="4588586"/><text x="63.3607%" y="3743.50">[li..</text></g><g><title>[libc.so.6] (2,043,972 samples, 1.33%)</title><rect x="64.7693%" y="3717" width="1.3323%" height="15" fill="rgb(228,1,10)" fg:x="99368832" fg:w="2043972"/><text x="65.0193%" y="3727.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="4117" width="1.6669%" height="15" fill="rgb(213,116,27)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="4127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="4101" width="1.6669%" height="15" fill="rgb(241,95,50)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="4111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="4085" width="1.6669%" height="15" fill="rgb(238,48,32)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="4095.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="4069" width="1.6669%" height="15" fill="rgb(235,113,49)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="4079.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="4053" width="1.6669%" height="15" fill="rgb(205,127,43)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="4063.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="4037" width="1.6669%" height="15" fill="rgb(250,162,2)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="4047.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="4021" width="1.6669%" height="15" fill="rgb(220,13,41)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="4031.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="4005" width="1.6669%" height="15" fill="rgb(249,221,25)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="4015.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3989" width="1.6669%" height="15" fill="rgb(215,208,19)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3973" width="1.6669%" height="15" fill="rgb(236,175,2)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3957" width="1.6669%" height="15" fill="rgb(241,52,2)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3967.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3941" width="1.6669%" height="15" fill="rgb(248,140,14)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3951.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3925" width="1.6669%" height="15" fill="rgb(253,22,42)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3935.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3909" width="1.6669%" height="15" fill="rgb(234,61,47)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3919.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3893" width="1.6669%" height="15" fill="rgb(208,226,15)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3903.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3877" width="1.6669%" height="15" fill="rgb(217,221,4)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3887.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3861" width="1.6669%" height="15" fill="rgb(212,174,34)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3845" width="1.6669%" height="15" fill="rgb(253,83,4)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3855.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3829" width="1.6669%" height="15" fill="rgb(250,195,49)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3839.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3813" width="1.6669%" height="15" fill="rgb(241,192,25)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3823.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3797" width="1.6669%" height="15" fill="rgb(208,124,10)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3807.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3781" width="1.6669%" height="15" fill="rgb(222,33,0)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3791.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3765" width="1.6669%" height="15" fill="rgb(234,209,28)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3775.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3749" width="1.6669%" height="15" fill="rgb(224,11,23)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3759.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3733" width="1.6669%" height="15" fill="rgb(232,99,1)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3743.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3717" width="1.6669%" height="15" fill="rgb(237,95,45)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3727.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3701" width="1.6669%" height="15" fill="rgb(208,109,11)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3711.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3685" width="1.6669%" height="15" fill="rgb(216,190,48)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3695.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3669" width="1.6669%" height="15" fill="rgb(251,171,36)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3679.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3653" width="1.6669%" height="15" fill="rgb(230,62,22)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3637" width="1.6669%" height="15" fill="rgb(225,114,35)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3647.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3621" width="1.6669%" height="15" fill="rgb(215,118,42)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3631.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3605" width="1.6669%" height="15" fill="rgb(243,119,21)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3589" width="1.6669%" height="15" fill="rgb(252,177,53)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3599.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3573" width="1.6669%" height="15" fill="rgb(237,209,29)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3583.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3557" width="1.6669%" height="15" fill="rgb(212,65,23)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3567.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3541" width="1.6669%" height="15" fill="rgb(230,222,46)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3525" width="1.6669%" height="15" fill="rgb(215,135,32)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3509" width="1.6669%" height="15" fill="rgb(246,101,22)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3519.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3493" width="1.6669%" height="15" fill="rgb(206,107,13)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3503.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3477" width="1.6669%" height="15" fill="rgb(250,100,44)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3461" width="1.6669%" height="15" fill="rgb(231,147,38)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3445" width="1.6669%" height="15" fill="rgb(229,8,40)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3455.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3429" width="1.6669%" height="15" fill="rgb(221,135,30)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3439.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3413" width="1.6669%" height="15" fill="rgb(249,193,18)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3397" width="1.6669%" height="15" fill="rgb(209,133,39)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3407.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3381" width="1.6669%" height="15" fill="rgb(232,100,14)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3391.50"></text></g><g><title>core::ptr::drop_in_place&lt;[css_bitvector_compiler::HtmlNode]&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3365" width="1.6669%" height="15" fill="rgb(224,185,1)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3375.50"></text></g><g><title>core::ptr::drop_in_place&lt;css_bitvector_compiler::HtmlNode&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3349" width="1.6669%" height="15" fill="rgb(223,139,8)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3333" width="1.6669%" height="15" fill="rgb(232,213,38)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;css_bitvector_compiler::HtmlNode&gt;&gt; (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3317" width="1.6669%" height="15" fill="rgb(207,94,22)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3327.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3301" width="1.6669%" height="15" fill="rgb(219,183,54)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3311.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3285" width="1.6669%" height="15" fill="rgb(216,185,54)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3269" width="1.6669%" height="15" fill="rgb(254,217,39)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3279.50"></text></g><g><title>alloc::alloc::dealloc (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3253" width="1.6669%" height="15" fill="rgb(240,178,23)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3263.50"></text></g><g><title>cfree (2,557,379 samples, 1.67%)</title><rect x="66.1016%" y="3237" width="1.6669%" height="15" fill="rgb(218,11,47)" fg:x="101412804" fg:w="2557379"/><text x="66.3516%" y="3247.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,551,621 samples, 1.66%)</title><rect x="67.7685%" y="4117" width="1.6632%" height="15" fill="rgb(218,51,51)" fg:x="103970183" fg:w="2551621"/><text x="68.0185%" y="4127.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,551,621 samples, 1.66%)</title><rect x="67.7685%" y="4101" width="1.6632%" height="15" fill="rgb(238,126,27)" fg:x="103970183" fg:w="2551621"/><text x="68.0185%" y="4111.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,551,621 samples, 1.66%)</title><rect x="67.7685%" y="4085" width="1.6632%" height="15" fill="rgb(249,202,22)" fg:x="103970183" fg:w="2551621"/><text x="68.0185%" y="4095.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,551,621 samples, 1.66%)</title><rect x="67.7685%" y="4069" width="1.6632%" height="15" fill="rgb(254,195,49)" fg:x="103970183" fg:w="2551621"/><text x="68.0185%" y="4079.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,551,621 samples, 1.66%)</title><rect x="67.7685%" y="4053" width="1.6632%" height="15" fill="rgb(208,123,14)" fg:x="103970183" fg:w="2551621"/><text x="68.0185%" y="4063.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,551,621 samples, 1.66%)</title><rect x="67.7685%" y="4037" width="1.6632%" height="15" fill="rgb(224,200,8)" fg:x="103970183" fg:w="2551621"/><text x="68.0185%" y="4047.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,551,621 samples, 1.66%)</title><rect x="67.7685%" y="4021" width="1.6632%" height="15" fill="rgb(217,61,36)" fg:x="103970183" fg:w="2551621"/><text x="68.0185%" y="4031.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,551,621 samples, 1.66%)</title><rect x="67.7685%" y="4005" width="1.6632%" height="15" fill="rgb(206,35,45)" fg:x="103970183" fg:w="2551621"/><text x="68.0185%" y="4015.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,551,621 samples, 1.66%)</title><rect x="67.7685%" y="3989" width="1.6632%" height="15" fill="rgb(217,65,33)" fg:x="103970183" fg:w="2551621"/><text x="68.0185%" y="3999.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,551,621 samples, 1.66%)</title><rect x="67.7685%" y="3973" width="1.6632%" height="15" fill="rgb(222,158,48)" fg:x="103970183" fg:w="2551621"/><text x="68.0185%" y="3983.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,551,621 samples, 1.66%)</title><rect x="67.7685%" y="3957" width="1.6632%" height="15" fill="rgb(254,2,54)" fg:x="103970183" fg:w="2551621"/><text x="68.0185%" y="3967.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,551,621 samples, 1.66%)</title><rect x="67.7685%" y="3941" width="1.6632%" height="15" fill="rgb(250,143,38)" fg:x="103970183" fg:w="2551621"/><text x="68.0185%" y="3951.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,551,621 samples, 1.66%)</title><rect x="67.7685%" y="3925" width="1.6632%" height="15" fill="rgb(248,25,0)" fg:x="103970183" fg:w="2551621"/><text x="68.0185%" y="3935.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,551,621 samples, 1.66%)</title><rect x="67.7685%" y="3909" width="1.6632%" height="15" fill="rgb(206,152,27)" fg:x="103970183" fg:w="2551621"/><text x="68.0185%" y="3919.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,551,621 samples, 1.66%)</title><rect x="67.7685%" y="3893" width="1.6632%" height="15" fill="rgb(240,77,30)" fg:x="103970183" fg:w="2551621"/><text x="68.0185%" y="3903.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2,551,621 samples, 1.66%)</title><rect x="67.7685%" y="3877" width="1.6632%" height="15" fill="rgb(231,5,3)" fg:x="103970183" fg:w="2551621"/><text x="68.0185%" y="3887.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (2,551,621 samples, 1.66%)</title><rect x="67.7685%" y="3861" width="1.6632%" height="15" fill="rgb(207,226,32)" fg:x="103970183" fg:w="2551621"/><text x="68.0185%" y="3871.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (2,277,052 samples, 1.48%)</title><rect x="69.4316%" y="4101" width="1.4842%" height="15" fill="rgb(222,207,47)" fg:x="106521804" fg:w="2277052"/><text x="69.6816%" y="4111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,277,052 samples, 1.48%)</title><rect x="69.4316%" y="4085" width="1.4842%" height="15" fill="rgb(229,115,45)" fg:x="106521804" fg:w="2277052"/><text x="69.6816%" y="4095.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,277,052 samples, 1.48%)</title><rect x="69.4316%" y="4069" width="1.4842%" height="15" fill="rgb(224,191,6)" fg:x="106521804" fg:w="2277052"/><text x="69.6816%" y="4079.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,277,052 samples, 1.48%)</title><rect x="69.4316%" y="4053" width="1.4842%" height="15" fill="rgb(230,227,24)" fg:x="106521804" fg:w="2277052"/><text x="69.6816%" y="4063.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,277,052 samples, 1.48%)</title><rect x="69.4316%" y="4037" width="1.4842%" height="15" fill="rgb(228,80,19)" fg:x="106521804" fg:w="2277052"/><text x="69.6816%" y="4047.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,277,052 samples, 1.48%)</title><rect x="69.4316%" y="4021" width="1.4842%" height="15" fill="rgb(247,229,0)" fg:x="106521804" fg:w="2277052"/><text x="69.6816%" y="4031.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2,277,052 samples, 1.48%)</title><rect x="69.4316%" y="4005" width="1.4842%" height="15" fill="rgb(237,194,15)" fg:x="106521804" fg:w="2277052"/><text x="69.6816%" y="4015.50"></text></g><g><title>alloc::alloc::realloc (2,277,052 samples, 1.48%)</title><rect x="69.4316%" y="3989" width="1.4842%" height="15" fill="rgb(219,203,20)" fg:x="106521804" fg:w="2277052"/><text x="69.6816%" y="3999.50"></text></g><g><title>realloc (2,277,052 samples, 1.48%)</title><rect x="69.4316%" y="3973" width="1.4842%" height="15" fill="rgb(234,128,8)" fg:x="106521804" fg:w="2277052"/><text x="69.6816%" y="3983.50"></text></g><g><title>[libc.so.6] (2,277,052 samples, 1.48%)</title><rect x="69.4316%" y="3957" width="1.4842%" height="15" fill="rgb(248,202,8)" fg:x="106521804" fg:w="2277052"/><text x="69.6816%" y="3967.50"></text></g><g><title>[libc.so.6] (2,277,052 samples, 1.48%)</title><rect x="69.4316%" y="3941" width="1.4842%" height="15" fill="rgb(206,104,37)" fg:x="106521804" fg:w="2277052"/><text x="69.6816%" y="3951.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2,333,266 samples, 1.52%)</title><rect x="70.9158%" y="4069" width="1.5208%" height="15" fill="rgb(223,8,27)" fg:x="108798856" fg:w="2333266"/><text x="71.1658%" y="4079.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (2,333,266 samples, 1.52%)</title><rect x="70.9158%" y="4053" width="1.5208%" height="15" fill="rgb(216,217,28)" fg:x="108798856" fg:w="2333266"/><text x="71.1658%" y="4063.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,486,833 samples, 1.62%)</title><rect x="72.4367%" y="4069" width="1.6209%" height="15" fill="rgb(249,199,1)" fg:x="111132122" fg:w="2486833"/><text x="72.6867%" y="4079.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2,486,833 samples, 1.62%)</title><rect x="72.4367%" y="4053" width="1.6209%" height="15" fill="rgb(240,85,17)" fg:x="111132122" fg:w="2486833"/><text x="72.6867%" y="4063.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (7,206,370 samples, 4.70%)</title><rect x="70.9158%" y="4101" width="4.6972%" height="15" fill="rgb(206,108,45)" fg:x="108798856" fg:w="7206370"/><text x="71.1658%" y="4111.50">css_b..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (7,206,370 samples, 4.70%)</title><rect x="70.9158%" y="4085" width="4.6972%" height="15" fill="rgb(245,210,41)" fg:x="108798856" fg:w="7206370"/><text x="71.1658%" y="4095.50">css_b..</text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,386,271 samples, 1.56%)</title><rect x="74.0576%" y="4069" width="1.5554%" height="15" fill="rgb(206,13,37)" fg:x="113618955" fg:w="2386271"/><text x="74.3076%" y="4079.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,386,271 samples, 1.56%)</title><rect x="74.0576%" y="4053" width="1.5554%" height="15" fill="rgb(250,61,18)" fg:x="113618955" fg:w="2386271"/><text x="74.3076%" y="4063.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,386,271 samples, 1.56%)</title><rect x="74.0576%" y="4037" width="1.5554%" height="15" fill="rgb(235,172,48)" fg:x="113618955" fg:w="2386271"/><text x="74.3076%" y="4047.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,386,271 samples, 1.56%)</title><rect x="74.0576%" y="4021" width="1.5554%" height="15" fill="rgb(249,201,17)" fg:x="113618955" fg:w="2386271"/><text x="74.3076%" y="4031.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,386,271 samples, 1.56%)</title><rect x="74.0576%" y="4005" width="1.5554%" height="15" fill="rgb(219,208,6)" fg:x="113618955" fg:w="2386271"/><text x="74.3076%" y="4015.50"></text></g><g><title>css_bitvector_compiler::HtmlNode::fix_parent_pointers (2,386,271 samples, 1.56%)</title><rect x="74.0576%" y="3989" width="1.5554%" height="15" fill="rgb(248,31,23)" fg:x="113618955" fg:w="2386271"/><text x="74.3076%" y="3999.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (2,488,079 samples, 1.62%)</title><rect x="75.6130%" y="4069" width="1.6217%" height="15" fill="rgb(245,15,42)" fg:x="116005226" fg:w="2488079"/><text x="75.8630%" y="4079.50"></text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (2,488,079 samples, 1.62%)</title><rect x="75.6130%" y="4053" width="1.6217%" height="15" fill="rgb(222,217,39)" fg:x="116005226" fg:w="2488079"/><text x="75.8630%" y="4063.50"></text></g><g><title>[main] (2,488,079 samples, 1.62%)</title><rect x="75.6130%" y="4037" width="1.6217%" height="15" fill="rgb(210,219,27)" fg:x="116005226" fg:w="2488079"/><text x="75.8630%" y="4047.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2,488,079 samples, 1.62%)</title><rect x="75.6130%" y="4021" width="1.6217%" height="15" fill="rgb(252,166,36)" fg:x="116005226" fg:w="2488079"/><text x="75.8630%" y="4031.50"></text></g><g><title>main::benchmark::json_to_html_node (4,864,628 samples, 3.17%)</title><rect x="75.6130%" y="4101" width="3.1708%" height="15" fill="rgb(245,132,34)" fg:x="116005226" fg:w="4864628"/><text x="75.8630%" y="4111.50">mai..</text></g><g><title>main::benchmark::json_to_html_node (4,864,628 samples, 3.17%)</title><rect x="75.6130%" y="4085" width="3.1708%" height="15" fill="rgb(236,54,3)" fg:x="116005226" fg:w="4864628"/><text x="75.8630%" y="4095.50">mai..</text></g><g><title>main::benchmark::json_to_html_node (2,376,549 samples, 1.55%)</title><rect x="77.2347%" y="4069" width="1.5491%" height="15" fill="rgb(241,173,43)" fg:x="118493305" fg:w="2376549"/><text x="77.4847%" y="4079.50"></text></g><g><title>main::benchmark::json_to_html_node (2,376,549 samples, 1.55%)</title><rect x="77.2347%" y="4053" width="1.5491%" height="15" fill="rgb(215,190,9)" fg:x="118493305" fg:w="2376549"/><text x="77.4847%" y="4063.50"></text></g><g><title>main::benchmark::json_to_html_node (2,376,549 samples, 1.55%)</title><rect x="77.2347%" y="4037" width="1.5491%" height="15" fill="rgb(242,101,16)" fg:x="118493305" fg:w="2376549"/><text x="77.4847%" y="4047.50"></text></g><g><title>main::benchmark::json_to_html_node (2,376,549 samples, 1.55%)</title><rect x="77.2347%" y="4021" width="1.5491%" height="15" fill="rgb(223,190,21)" fg:x="118493305" fg:w="2376549"/><text x="77.4847%" y="4031.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,376,549 samples, 1.55%)</title><rect x="77.2347%" y="4005" width="1.5491%" height="15" fill="rgb(215,228,25)" fg:x="118493305" fg:w="2376549"/><text x="77.4847%" y="4015.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,376,549 samples, 1.55%)</title><rect x="77.2347%" y="3989" width="1.5491%" height="15" fill="rgb(225,36,22)" fg:x="118493305" fg:w="2376549"/><text x="77.4847%" y="3999.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,376,549 samples, 1.55%)</title><rect x="77.2347%" y="3973" width="1.5491%" height="15" fill="rgb(251,106,46)" fg:x="118493305" fg:w="2376549"/><text x="77.4847%" y="3983.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,376,549 samples, 1.55%)</title><rect x="77.2347%" y="3957" width="1.5491%" height="15" fill="rgb(208,90,1)" fg:x="118493305" fg:w="2376549"/><text x="77.4847%" y="3967.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,376,549 samples, 1.55%)</title><rect x="77.2347%" y="3941" width="1.5491%" height="15" fill="rgb(243,10,4)" fg:x="118493305" fg:w="2376549"/><text x="77.4847%" y="3951.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2,376,549 samples, 1.55%)</title><rect x="77.2347%" y="3925" width="1.5491%" height="15" fill="rgb(212,137,27)" fg:x="118493305" fg:w="2376549"/><text x="77.4847%" y="3935.50"></text></g><g><title>main::benchmark::apply_frame_modifications (16,931,945 samples, 11.04%)</title><rect x="69.4316%" y="4117" width="11.0364%" height="15" fill="rgb(231,220,49)" fg:x="106521804" fg:w="16931945"/><text x="69.6816%" y="4127.50">main::benchmark:..</text></g><g><title>std::io::stdio::_print (2,583,895 samples, 1.68%)</title><rect x="78.7838%" y="4101" width="1.6842%" height="15" fill="rgb(237,96,20)" fg:x="120869854" fg:w="2583895"/><text x="79.0338%" y="4111.50"></text></g><g><title>std::io::stdio::print_to (2,583,895 samples, 1.68%)</title><rect x="78.7838%" y="4085" width="1.6842%" height="15" fill="rgb(239,229,30)" fg:x="120869854" fg:w="2583895"/><text x="79.0338%" y="4095.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (2,583,895 samples, 1.68%)</title><rect x="78.7838%" y="4069" width="1.6842%" height="15" fill="rgb(219,65,33)" fg:x="120869854" fg:w="2583895"/><text x="79.0338%" y="4079.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (2,583,895 samples, 1.68%)</title><rect x="78.7838%" y="4053" width="1.6842%" height="15" fill="rgb(243,134,7)" fg:x="120869854" fg:w="2583895"/><text x="79.0338%" y="4063.50"></text></g><g><title>std::io::Write::write_fmt (2,583,895 samples, 1.68%)</title><rect x="78.7838%" y="4037" width="1.6842%" height="15" fill="rgb(216,177,54)" fg:x="120869854" fg:w="2583895"/><text x="79.0338%" y="4047.50"></text></g><g><title>core::fmt::write (2,583,895 samples, 1.68%)</title><rect x="78.7838%" y="4021" width="1.6842%" height="15" fill="rgb(211,160,20)" fg:x="120869854" fg:w="2583895"/><text x="79.0338%" y="4031.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2,583,895 samples, 1.68%)</title><rect x="78.7838%" y="4005" width="1.6842%" height="15" fill="rgb(239,85,39)" fg:x="120869854" fg:w="2583895"/><text x="79.0338%" y="4015.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (2,583,895 samples, 1.68%)</title><rect x="78.7838%" y="3989" width="1.6842%" height="15" fill="rgb(232,125,22)" fg:x="120869854" fg:w="2583895"/><text x="79.0338%" y="3999.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (2,583,895 samples, 1.68%)</title><rect x="78.7838%" y="3973" width="1.6842%" height="15" fill="rgb(244,57,34)" fg:x="120869854" fg:w="2583895"/><text x="79.0338%" y="3983.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (2,583,895 samples, 1.68%)</title><rect x="78.7838%" y="3957" width="1.6842%" height="15" fill="rgb(214,203,32)" fg:x="120869854" fg:w="2583895"/><text x="79.0338%" y="3967.50"></text></g><g><title>core::slice::memchr::memrchr (2,583,895 samples, 1.68%)</title><rect x="78.7838%" y="3941" width="1.6842%" height="15" fill="rgb(207,58,43)" fg:x="120869854" fg:w="2583895"/><text x="79.0338%" y="3951.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::align_to (2,583,895 samples, 1.68%)</title><rect x="78.7838%" y="3925" width="1.6842%" height="15" fill="rgb(215,193,15)" fg:x="120869854" fg:w="2583895"/><text x="79.0338%" y="3935.50"></text></g><g><title>core::ptr::align_offset (2,583,895 samples, 1.68%)</title><rect x="78.7838%" y="3909" width="1.6842%" height="15" fill="rgb(232,15,44)" fg:x="120869854" fg:w="2583895"/><text x="79.0338%" y="3919.50"></text></g><g><title>main::benchmark::benchmark_accumulated_modifications (52,343,147 samples, 34.12%)</title><rect x="47.9664%" y="4133" width="34.1176%" height="15" fill="rgb(212,3,48)" fg:x="73589924" fg:w="52343147"/><text x="48.2164%" y="4143.50">main::benchmark::benchmark_accumulated_modifications</text></g><g><title>main::benchmark::count_nodes (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="4117" width="1.6160%" height="15" fill="rgb(218,128,7)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="4127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="4101" width="1.6160%" height="15" fill="rgb(226,216,39)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="4111.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="4085" width="1.6160%" height="15" fill="rgb(243,47,51)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="4095.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="4069" width="1.6160%" height="15" fill="rgb(241,183,40)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="4079.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="4053" width="1.6160%" height="15" fill="rgb(231,217,32)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="4063.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="4037" width="1.6160%" height="15" fill="rgb(229,61,38)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="4047.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="4021" width="1.6160%" height="15" fill="rgb(225,210,5)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="4031.50"></text></g><g><title>main::benchmark::count_nodes (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="4005" width="1.6160%" height="15" fill="rgb(231,79,45)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="4015.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3989" width="1.6160%" height="15" fill="rgb(224,100,7)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3999.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3973" width="1.6160%" height="15" fill="rgb(241,198,18)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3983.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3957" width="1.6160%" height="15" fill="rgb(252,97,53)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3967.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3941" width="1.6160%" height="15" fill="rgb(220,88,7)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3951.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3925" width="1.6160%" height="15" fill="rgb(213,176,14)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3935.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3909" width="1.6160%" height="15" fill="rgb(246,73,7)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3919.50"></text></g><g><title>main::benchmark::count_nodes (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3893" width="1.6160%" height="15" fill="rgb(245,64,36)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3903.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3877" width="1.6160%" height="15" fill="rgb(245,80,10)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3887.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3861" width="1.6160%" height="15" fill="rgb(232,107,50)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3871.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3845" width="1.6160%" height="15" fill="rgb(253,3,0)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3855.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3829" width="1.6160%" height="15" fill="rgb(212,99,53)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3839.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3813" width="1.6160%" height="15" fill="rgb(249,111,54)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3823.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3797" width="1.6160%" height="15" fill="rgb(249,55,30)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3807.50"></text></g><g><title>main::benchmark::count_nodes (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3781" width="1.6160%" height="15" fill="rgb(237,47,42)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3791.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3765" width="1.6160%" height="15" fill="rgb(211,20,18)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3775.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3749" width="1.6160%" height="15" fill="rgb(231,203,46)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3759.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3733" width="1.6160%" height="15" fill="rgb(237,142,3)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3743.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3717" width="1.6160%" height="15" fill="rgb(241,107,1)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3727.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3701" width="1.6160%" height="15" fill="rgb(229,83,13)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3711.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3685" width="1.6160%" height="15" fill="rgb(241,91,40)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3695.50"></text></g><g><title>main::benchmark::count_nodes (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3669" width="1.6160%" height="15" fill="rgb(225,3,45)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3679.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3653" width="1.6160%" height="15" fill="rgb(244,223,14)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3663.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3637" width="1.6160%" height="15" fill="rgb(224,124,37)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3647.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3621" width="1.6160%" height="15" fill="rgb(251,171,30)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3631.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3605" width="1.6160%" height="15" fill="rgb(236,46,54)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3615.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3589" width="1.6160%" height="15" fill="rgb(245,213,5)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3599.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3573" width="1.6160%" height="15" fill="rgb(230,144,27)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3583.50"></text></g><g><title>main::benchmark::count_nodes (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3557" width="1.6160%" height="15" fill="rgb(220,86,6)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3541" width="1.6160%" height="15" fill="rgb(240,20,13)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3551.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3525" width="1.6160%" height="15" fill="rgb(217,89,34)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3535.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3509" width="1.6160%" height="15" fill="rgb(229,13,5)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3519.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3493" width="1.6160%" height="15" fill="rgb(244,67,35)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3503.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3477" width="1.6160%" height="15" fill="rgb(221,40,2)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3487.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3461" width="1.6160%" height="15" fill="rgb(237,157,21)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3471.50"></text></g><g><title>main::benchmark::count_nodes (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3445" width="1.6160%" height="15" fill="rgb(222,94,11)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3455.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3429" width="1.6160%" height="15" fill="rgb(249,113,6)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3439.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3413" width="1.6160%" height="15" fill="rgb(238,137,36)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3423.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3397" width="1.6160%" height="15" fill="rgb(210,102,26)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3407.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3381" width="1.6160%" height="15" fill="rgb(218,30,30)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3391.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3365" width="1.6160%" height="15" fill="rgb(214,67,26)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3375.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3349" width="1.6160%" height="15" fill="rgb(251,9,53)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3359.50"></text></g><g><title>main::benchmark::count_nodes (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3333" width="1.6160%" height="15" fill="rgb(228,204,25)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3317" width="1.6160%" height="15" fill="rgb(207,153,8)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3327.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3301" width="1.6160%" height="15" fill="rgb(242,9,16)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3311.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3285" width="1.6160%" height="15" fill="rgb(217,211,10)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3295.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3269" width="1.6160%" height="15" fill="rgb(219,228,52)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3279.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3253" width="1.6160%" height="15" fill="rgb(231,92,29)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3263.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3237" width="1.6160%" height="15" fill="rgb(232,8,23)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3247.50"></text></g><g><title>main::benchmark::count_nodes (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3221" width="1.6160%" height="15" fill="rgb(216,211,34)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3205" width="1.6160%" height="15" fill="rgb(236,151,0)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3215.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3189" width="1.6160%" height="15" fill="rgb(209,168,3)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3199.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3173" width="1.6160%" height="15" fill="rgb(208,129,28)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3183.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3157" width="1.6160%" height="15" fill="rgb(229,78,22)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3167.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3141" width="1.6160%" height="15" fill="rgb(228,187,13)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3151.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3125" width="1.6160%" height="15" fill="rgb(240,119,24)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3135.50"></text></g><g><title>main::benchmark::count_nodes (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3109" width="1.6160%" height="15" fill="rgb(209,194,42)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3093" width="1.6160%" height="15" fill="rgb(247,200,46)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3103.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3077" width="1.6160%" height="15" fill="rgb(218,76,16)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3061" width="1.6160%" height="15" fill="rgb(225,21,48)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3071.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3045" width="1.6160%" height="15" fill="rgb(239,223,50)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3055.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3029" width="1.6160%" height="15" fill="rgb(244,45,21)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3039.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="3013" width="1.6160%" height="15" fill="rgb(232,33,43)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3023.50"></text></g><g><title>main::benchmark::count_nodes (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2997" width="1.6160%" height="15" fill="rgb(209,8,3)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="3007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2981" width="1.6160%" height="15" fill="rgb(214,25,53)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2991.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2965" width="1.6160%" height="15" fill="rgb(254,186,54)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2949" width="1.6160%" height="15" fill="rgb(208,174,49)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2959.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2933" width="1.6160%" height="15" fill="rgb(233,191,51)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2943.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2917" width="1.6160%" height="15" fill="rgb(222,134,10)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2927.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2901" width="1.6160%" height="15" fill="rgb(230,226,20)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2911.50"></text></g><g><title>main::benchmark::count_nodes (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2885" width="1.6160%" height="15" fill="rgb(251,111,25)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2869" width="1.6160%" height="15" fill="rgb(224,40,46)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2879.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2853" width="1.6160%" height="15" fill="rgb(236,108,47)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2837" width="1.6160%" height="15" fill="rgb(234,93,0)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2821" width="1.6160%" height="15" fill="rgb(224,213,32)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2831.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2805" width="1.6160%" height="15" fill="rgb(251,11,48)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2815.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2789" width="1.6160%" height="15" fill="rgb(236,173,5)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2799.50"></text></g><g><title>main::benchmark::count_nodes (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2773" width="1.6160%" height="15" fill="rgb(230,95,12)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2757" width="1.6160%" height="15" fill="rgb(232,209,1)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2767.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2741" width="1.6160%" height="15" fill="rgb(232,6,1)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2725" width="1.6160%" height="15" fill="rgb(210,224,50)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2709" width="1.6160%" height="15" fill="rgb(228,127,35)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2719.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2693" width="1.6160%" height="15" fill="rgb(245,102,45)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2703.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2677" width="1.6160%" height="15" fill="rgb(214,1,49)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2687.50"></text></g><g><title>main::benchmark::count_nodes (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2661" width="1.6160%" height="15" fill="rgb(226,163,40)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2645" width="1.6160%" height="15" fill="rgb(239,212,28)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2655.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2629" width="1.6160%" height="15" fill="rgb(220,20,13)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2613" width="1.6160%" height="15" fill="rgb(210,164,35)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2597" width="1.6160%" height="15" fill="rgb(248,109,41)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2607.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2581" width="1.6160%" height="15" fill="rgb(238,23,50)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2591.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2565" width="1.6160%" height="15" fill="rgb(211,48,49)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2575.50"></text></g><g><title>main::benchmark::count_nodes (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2549" width="1.6160%" height="15" fill="rgb(223,36,21)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2533" width="1.6160%" height="15" fill="rgb(207,123,46)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2543.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2517" width="1.6160%" height="15" fill="rgb(240,218,32)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2501" width="1.6160%" height="15" fill="rgb(252,5,43)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2485" width="1.6160%" height="15" fill="rgb(252,84,19)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2495.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2469" width="1.6160%" height="15" fill="rgb(243,152,39)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2453" width="1.6160%" height="15" fill="rgb(234,160,15)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2463.50"></text></g><g><title>main::benchmark::count_nodes (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2437" width="1.6160%" height="15" fill="rgb(237,34,20)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2421" width="1.6160%" height="15" fill="rgb(229,97,13)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2,479,322 samples, 1.62%)</title><rect x="80.4680%" y="2405" width="1.6160%" height="15" fill="rgb(234,71,50)" fg:x="123453749" fg:w="2479322"/><text x="80.7180%" y="2415.50"></text></g><g><title>main::benchmark::generate_web_layout_csv (1,972,178 samples, 1.29%)</title><rect x="82.0840%" y="4133" width="1.2855%" height="15" fill="rgb(253,155,4)" fg:x="125933071" fg:w="1972178"/><text x="82.3340%" y="4143.50"></text></g><g><title>alloc::string::String::push_str (1,972,178 samples, 1.29%)</title><rect x="82.0840%" y="4117" width="1.2855%" height="15" fill="rgb(222,185,37)" fg:x="125933071" fg:w="1972178"/><text x="82.3340%" y="4127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,972,178 samples, 1.29%)</title><rect x="82.0840%" y="4101" width="1.2855%" height="15" fill="rgb(251,177,13)" fg:x="125933071" fg:w="1972178"/><text x="82.3340%" y="4111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,972,178 samples, 1.29%)</title><rect x="82.0840%" y="4085" width="1.2855%" height="15" fill="rgb(250,179,40)" fg:x="125933071" fg:w="1972178"/><text x="82.3340%" y="4095.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,972,178 samples, 1.29%)</title><rect x="82.0840%" y="4069" width="1.2855%" height="15" fill="rgb(242,44,2)" fg:x="125933071" fg:w="1972178"/><text x="82.3340%" y="4079.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,972,178 samples, 1.29%)</title><rect x="82.0840%" y="4053" width="1.2855%" height="15" fill="rgb(216,177,13)" fg:x="125933071" fg:w="1972178"/><text x="82.3340%" y="4063.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,972,178 samples, 1.29%)</title><rect x="82.0840%" y="4037" width="1.2855%" height="15" fill="rgb(216,106,43)" fg:x="125933071" fg:w="1972178"/><text x="82.3340%" y="4047.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,972,178 samples, 1.29%)</title><rect x="82.0840%" y="4021" width="1.2855%" height="15" fill="rgb(216,183,2)" fg:x="125933071" fg:w="1972178"/><text x="82.3340%" y="4031.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,972,178 samples, 1.29%)</title><rect x="82.0840%" y="4005" width="1.2855%" height="15" fill="rgb(249,75,3)" fg:x="125933071" fg:w="1972178"/><text x="82.3340%" y="4015.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,972,178 samples, 1.29%)</title><rect x="82.0840%" y="3989" width="1.2855%" height="15" fill="rgb(219,67,39)" fg:x="125933071" fg:w="1972178"/><text x="82.3340%" y="3999.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,972,178 samples, 1.29%)</title><rect x="82.0840%" y="3973" width="1.2855%" height="15" fill="rgb(253,228,2)" fg:x="125933071" fg:w="1972178"/><text x="82.3340%" y="3983.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,972,178 samples, 1.29%)</title><rect x="82.0840%" y="3957" width="1.2855%" height="15" fill="rgb(235,138,27)" fg:x="125933071" fg:w="1972178"/><text x="82.3340%" y="3967.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,972,178 samples, 1.29%)</title><rect x="82.0840%" y="3941" width="1.2855%" height="15" fill="rgb(236,97,51)" fg:x="125933071" fg:w="1972178"/><text x="82.3340%" y="3951.50"></text></g><g><title>alloc::alloc::realloc (1,972,178 samples, 1.29%)</title><rect x="82.0840%" y="3925" width="1.2855%" height="15" fill="rgb(240,80,30)" fg:x="125933071" fg:w="1972178"/><text x="82.3340%" y="3935.50"></text></g><g><title>realloc (1,972,178 samples, 1.29%)</title><rect x="82.0840%" y="3909" width="1.2855%" height="15" fill="rgb(230,178,19)" fg:x="125933071" fg:w="1972178"/><text x="82.3340%" y="3919.50"></text></g><g><title>[libc.so.6] (1,972,178 samples, 1.29%)</title><rect x="82.0840%" y="3893" width="1.2855%" height="15" fill="rgb(210,190,27)" fg:x="125933071" fg:w="1972178"/><text x="82.3340%" y="3903.50"></text></g><g><title>[libc.so.6] (1,972,178 samples, 1.29%)</title><rect x="82.0840%" y="3877" width="1.2855%" height="15" fill="rgb(222,107,31)" fg:x="125933071" fg:w="1972178"/><text x="82.3340%" y="3887.50"></text></g><g><title>[libc.so.6] (1,972,178 samples, 1.29%)</title><rect x="82.0840%" y="3861" width="1.2855%" height="15" fill="rgb(216,127,34)" fg:x="125933071" fg:w="1972178"/><text x="82.3340%" y="3871.50"></text></g><g><title>main::benchmark::get_frame_description (2,714,568 samples, 1.77%)</title><rect x="83.3695%" y="4133" width="1.7694%" height="15" fill="rgb(234,116,52)" fg:x="127905249" fg:w="2714568"/><text x="83.6195%" y="4143.50"></text></g><g><title>alloc::fmt::format (2,714,568 samples, 1.77%)</title><rect x="83.3695%" y="4117" width="1.7694%" height="15" fill="rgb(222,124,15)" fg:x="127905249" fg:w="2714568"/><text x="83.6195%" y="4127.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (2,714,568 samples, 1.77%)</title><rect x="83.3695%" y="4101" width="1.7694%" height="15" fill="rgb(231,179,28)" fg:x="127905249" fg:w="2714568"/><text x="83.6195%" y="4111.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (2,714,568 samples, 1.77%)</title><rect x="83.3695%" y="4085" width="1.7694%" height="15" fill="rgb(226,93,45)" fg:x="127905249" fg:w="2714568"/><text x="83.6195%" y="4095.50"></text></g><g><title>alloc::fmt::format::format_inner (2,714,568 samples, 1.77%)</title><rect x="83.3695%" y="4069" width="1.7694%" height="15" fill="rgb(215,8,51)" fg:x="127905249" fg:w="2714568"/><text x="83.6195%" y="4079.50"></text></g><g><title>core::fmt::Write::write_fmt (2,714,568 samples, 1.77%)</title><rect x="83.3695%" y="4053" width="1.7694%" height="15" fill="rgb(223,106,5)" fg:x="127905249" fg:w="2714568"/><text x="83.6195%" y="4063.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (2,714,568 samples, 1.77%)</title><rect x="83.3695%" y="4037" width="1.7694%" height="15" fill="rgb(250,191,5)" fg:x="127905249" fg:w="2714568"/><text x="83.6195%" y="4047.50"></text></g><g><title>core::fmt::write (2,714,568 samples, 1.77%)</title><rect x="83.3695%" y="4021" width="1.7694%" height="15" fill="rgb(242,132,44)" fg:x="127905249" fg:w="2714568"/><text x="83.6195%" y="4031.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2,714,568 samples, 1.77%)</title><rect x="83.3695%" y="4005" width="1.7694%" height="15" fill="rgb(251,152,29)" fg:x="127905249" fg:w="2714568"/><text x="83.6195%" y="4015.50"></text></g><g><title>core::fmt::Formatter::pad (2,714,568 samples, 1.77%)</title><rect x="83.3695%" y="3989" width="1.7694%" height="15" fill="rgb(218,179,5)" fg:x="127905249" fg:w="2714568"/><text x="83.6195%" y="3999.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,966,175 samples, 1.28%)</title><rect x="85.1389%" y="4117" width="1.2816%" height="15" fill="rgb(227,67,19)" fg:x="130619817" fg:w="1966175"/><text x="85.3889%" y="4127.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1,966,175 samples, 1.28%)</title><rect x="85.1389%" y="4101" width="1.2816%" height="15" fill="rgb(233,119,31)" fg:x="130619817" fg:w="1966175"/><text x="85.3889%" y="4111.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,966,175 samples, 1.28%)</title><rect x="85.1389%" y="4085" width="1.2816%" height="15" fill="rgb(241,120,22)" fg:x="130619817" fg:w="1966175"/><text x="85.3889%" y="4095.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,966,175 samples, 1.28%)</title><rect x="85.1389%" y="4069" width="1.2816%" height="15" fill="rgb(224,102,30)" fg:x="130619817" fg:w="1966175"/><text x="85.3889%" y="4079.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (1,966,175 samples, 1.28%)</title><rect x="85.1389%" y="4053" width="1.2816%" height="15" fill="rgb(210,164,37)" fg:x="130619817" fg:w="1966175"/><text x="85.3889%" y="4063.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1,966,175 samples, 1.28%)</title><rect x="85.1389%" y="4037" width="1.2816%" height="15" fill="rgb(226,191,16)" fg:x="130619817" fg:w="1966175"/><text x="85.3889%" y="4047.50"></text></g><g><title>core::slice::memchr::memchr (1,966,175 samples, 1.28%)</title><rect x="85.1389%" y="4021" width="1.2816%" height="15" fill="rgb(214,40,45)" fg:x="130619817" fg:w="1966175"/><text x="85.3889%" y="4031.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1,966,175 samples, 1.28%)</title><rect x="85.1389%" y="4005" width="1.2816%" height="15" fill="rgb(244,29,26)" fg:x="130619817" fg:w="1966175"/><text x="85.3889%" y="4015.50"></text></g><g><title>core::slice::memchr::memchr_aligned::runtime (1,966,175 samples, 1.28%)</title><rect x="85.1389%" y="3989" width="1.2816%" height="15" fill="rgb(216,16,5)" fg:x="130619817" fg:w="1966175"/><text x="85.3889%" y="3999.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (1,966,175 samples, 1.28%)</title><rect x="85.1389%" y="3973" width="1.2816%" height="15" fill="rgb(249,76,35)" fg:x="130619817" fg:w="1966175"/><text x="85.3889%" y="3983.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,738,009 samples, 1.13%)</title><rect x="86.4205%" y="3893" width="1.1328%" height="15" fill="rgb(207,11,44)" fg:x="132585992" fg:w="1738009"/><text x="86.6705%" y="3903.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,738,009 samples, 1.13%)</title><rect x="86.4205%" y="3877" width="1.1328%" height="15" fill="rgb(228,190,49)" fg:x="132585992" fg:w="1738009"/><text x="86.6705%" y="3887.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,738,009 samples, 1.13%)</title><rect x="86.4205%" y="3861" width="1.1328%" height="15" fill="rgb(214,173,12)" fg:x="132585992" fg:w="1738009"/><text x="86.6705%" y="3871.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,738,009 samples, 1.13%)</title><rect x="86.4205%" y="3845" width="1.1328%" height="15" fill="rgb(218,26,35)" fg:x="132585992" fg:w="1738009"/><text x="86.6705%" y="3855.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,738,009 samples, 1.13%)</title><rect x="86.4205%" y="3829" width="1.1328%" height="15" fill="rgb(220,200,19)" fg:x="132585992" fg:w="1738009"/><text x="86.6705%" y="3839.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,738,009 samples, 1.13%)</title><rect x="86.4205%" y="3813" width="1.1328%" height="15" fill="rgb(239,95,49)" fg:x="132585992" fg:w="1738009"/><text x="86.6705%" y="3823.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,738,009 samples, 1.13%)</title><rect x="86.4205%" y="3797" width="1.1328%" height="15" fill="rgb(235,85,53)" fg:x="132585992" fg:w="1738009"/><text x="86.6705%" y="3807.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,738,009 samples, 1.13%)</title><rect x="86.4205%" y="3781" width="1.1328%" height="15" fill="rgb(233,133,31)" fg:x="132585992" fg:w="1738009"/><text x="86.6705%" y="3791.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (481,546 samples, 0.31%)</title><rect x="87.5533%" y="2997" width="0.3139%" height="15" fill="rgb(218,25,20)" fg:x="134324001" fg:w="481546"/><text x="87.8033%" y="3007.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (481,546 samples, 0.31%)</title><rect x="87.5533%" y="2981" width="0.3139%" height="15" fill="rgb(252,210,38)" fg:x="134324001" fg:w="481546"/><text x="87.8033%" y="2991.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (481,546 samples, 0.31%)</title><rect x="87.5533%" y="2965" width="0.3139%" height="15" fill="rgb(242,134,21)" fg:x="134324001" fg:w="481546"/><text x="87.8033%" y="2975.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (481,546 samples, 0.31%)</title><rect x="87.5533%" y="2949" width="0.3139%" height="15" fill="rgb(213,28,48)" fg:x="134324001" fg:w="481546"/><text x="87.8033%" y="2959.50"></text></g><g><title>core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (481,546 samples, 0.31%)</title><rect x="87.5533%" y="2933" width="0.3139%" height="15" fill="rgb(250,196,2)" fg:x="134324001" fg:w="481546"/><text x="87.8033%" y="2943.50"></text></g><g><title>core::result::Result&lt;&amp;T,E&gt;::copied (481,546 samples, 0.31%)</title><rect x="87.5533%" y="2917" width="0.3139%" height="15" fill="rgb(227,5,17)" fg:x="134324001" fg:w="481546"/><text x="87.8033%" y="2927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,023,738 samples, 1.32%)</title><rect x="87.8672%" y="2357" width="1.3191%" height="15" fill="rgb(221,226,24)" fg:x="134805547" fg:w="2023738"/><text x="88.1172%" y="2367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,023,738 samples, 1.32%)</title><rect x="87.8672%" y="2341" width="1.3191%" height="15" fill="rgb(211,5,48)" fg:x="134805547" fg:w="2023738"/><text x="88.1172%" y="2351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,023,738 samples, 1.32%)</title><rect x="87.8672%" y="2325" width="1.3191%" height="15" fill="rgb(219,150,6)" fg:x="134805547" fg:w="2023738"/><text x="88.1172%" y="2335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,023,738 samples, 1.32%)</title><rect x="87.8672%" y="2309" width="1.3191%" height="15" fill="rgb(251,46,16)" fg:x="134805547" fg:w="2023738"/><text x="88.1172%" y="2319.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,023,738 samples, 1.32%)</title><rect x="87.8672%" y="2293" width="1.3191%" height="15" fill="rgb(220,204,40)" fg:x="134805547" fg:w="2023738"/><text x="88.1172%" y="2303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,023,738 samples, 1.32%)</title><rect x="87.8672%" y="2277" width="1.3191%" height="15" fill="rgb(211,85,2)" fg:x="134805547" fg:w="2023738"/><text x="88.1172%" y="2287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2,023,738 samples, 1.32%)</title><rect x="87.8672%" y="2261" width="1.3191%" height="15" fill="rgb(229,17,7)" fg:x="134805547" fg:w="2023738"/><text x="88.1172%" y="2271.50"></text></g><g><title>alloc::alloc::realloc (2,023,738 samples, 1.32%)</title><rect x="87.8672%" y="2245" width="1.3191%" height="15" fill="rgb(239,72,28)" fg:x="134805547" fg:w="2023738"/><text x="88.1172%" y="2255.50"></text></g><g><title>realloc (2,023,738 samples, 1.32%)</title><rect x="87.8672%" y="2229" width="1.3191%" height="15" fill="rgb(230,47,54)" fg:x="134805547" fg:w="2023738"/><text x="88.1172%" y="2239.50"></text></g><g><title>[libc.so.6] (2,023,738 samples, 1.32%)</title><rect x="87.8672%" y="2213" width="1.3191%" height="15" fill="rgb(214,50,8)" fg:x="134805547" fg:w="2023738"/><text x="88.1172%" y="2223.50"></text></g><g><title>[libc.so.6] (2,023,738 samples, 1.32%)</title><rect x="87.8672%" y="2197" width="1.3191%" height="15" fill="rgb(216,198,43)" fg:x="134805547" fg:w="2023738"/><text x="88.1172%" y="2207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,916,758 samples, 1.25%)</title><rect x="89.1863%" y="2229" width="1.2494%" height="15" fill="rgb(234,20,35)" fg:x="136829285" fg:w="1916758"/><text x="89.4363%" y="2239.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,916,758 samples, 1.25%)</title><rect x="89.1863%" y="2213" width="1.2494%" height="15" fill="rgb(254,45,19)" fg:x="136829285" fg:w="1916758"/><text x="89.4363%" y="2223.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,916,758 samples, 1.25%)</title><rect x="89.1863%" y="2197" width="1.2494%" height="15" fill="rgb(219,14,44)" fg:x="136829285" fg:w="1916758"/><text x="89.4363%" y="2207.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1,916,758 samples, 1.25%)</title><rect x="89.1863%" y="2181" width="1.2494%" height="15" fill="rgb(217,220,26)" fg:x="136829285" fg:w="1916758"/><text x="89.4363%" y="2191.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,916,758 samples, 1.25%)</title><rect x="89.1863%" y="2165" width="1.2494%" height="15" fill="rgb(213,158,28)" fg:x="136829285" fg:w="1916758"/><text x="89.4363%" y="2175.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1,916,758 samples, 1.25%)</title><rect x="89.1863%" y="2149" width="1.2494%" height="15" fill="rgb(252,51,52)" fg:x="136829285" fg:w="1916758"/><text x="89.4363%" y="2159.50"></text></g><g><title>serde_json::read::SliceRead::parse_str_bytes (1,916,758 samples, 1.25%)</title><rect x="89.1863%" y="2133" width="1.2494%" height="15" fill="rgb(246,89,16)" fg:x="136829285" fg:w="1916758"/><text x="89.4363%" y="2143.50"></text></g><g><title>serde_json::read::SliceRead::skip_to_escape (1,916,758 samples, 1.25%)</title><rect x="89.1863%" y="2117" width="1.2494%" height="15" fill="rgb(216,158,49)" fg:x="136829285" fg:w="1916758"/><text x="89.4363%" y="2127.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,916,758 samples, 1.25%)</title><rect x="89.1863%" y="2101" width="1.2494%" height="15" fill="rgb(236,107,19)" fg:x="136829285" fg:w="1916758"/><text x="89.4363%" y="2111.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,916,758 samples, 1.25%)</title><rect x="89.1863%" y="2085" width="1.2494%" height="15" fill="rgb(228,185,30)" fg:x="136829285" fg:w="1916758"/><text x="89.4363%" y="2095.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,916,758 samples, 1.25%)</title><rect x="89.1863%" y="2069" width="1.2494%" height="15" fill="rgb(246,134,8)" fg:x="136829285" fg:w="1916758"/><text x="89.4363%" y="2079.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,916,758 samples, 1.25%)</title><rect x="89.1863%" y="2053" width="1.2494%" height="15" fill="rgb(214,143,50)" fg:x="136829285" fg:w="1916758"/><text x="89.4363%" y="2063.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="597" width="0.8611%" height="15" fill="rgb(228,75,8)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="607.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="581" width="0.8611%" height="15" fill="rgb(207,175,4)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="565" width="0.8611%" height="15" fill="rgb(205,108,24)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="575.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="549" width="0.8611%" height="15" fill="rgb(244,120,49)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="533" width="0.8611%" height="15" fill="rgb(223,47,38)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="517" width="0.8611%" height="15" fill="rgb(229,179,11)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="501" width="0.8611%" height="15" fill="rgb(231,122,1)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="511.50"></text></g><g><title>serde::de::SeqAccess::next_element (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="485" width="0.8611%" height="15" fill="rgb(245,119,9)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="495.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="469" width="0.8611%" height="15" fill="rgb(241,163,25)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="479.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="453" width="0.8611%" height="15" fill="rgb(217,214,3)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="437" width="0.8611%" height="15" fill="rgb(240,86,28)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="421" width="0.8611%" height="15" fill="rgb(215,47,9)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="405" width="0.8611%" height="15" fill="rgb(252,25,45)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="415.50"></text></g><g><title>serde::de::MapAccess::next_entry (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="389" width="0.8611%" height="15" fill="rgb(251,164,9)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="399.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="373" width="0.8611%" height="15" fill="rgb(233,194,0)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="357" width="0.8611%" height="15" fill="rgb(249,111,24)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="367.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="341" width="0.8611%" height="15" fill="rgb(250,223,3)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="325" width="0.8611%" height="15" fill="rgb(236,178,37)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="335.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="309" width="0.8611%" height="15" fill="rgb(241,158,50)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="319.50"></text></g><g><title>serde::de::Visitor::visit_borrowed_str (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="293" width="0.8611%" height="15" fill="rgb(213,121,41)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_str (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="277" width="0.8611%" height="15" fill="rgb(240,92,3)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="261" width="0.8611%" height="15" fill="rgb(205,123,3)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="271.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="245" width="0.8611%" height="15" fill="rgb(205,97,47)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="229" width="0.8611%" height="15" fill="rgb(247,152,14)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="213" width="0.8611%" height="15" fill="rgb(248,195,53)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="197" width="0.8611%" height="15" fill="rgb(226,201,16)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="181" width="0.8611%" height="15" fill="rgb(205,98,0)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="165" width="0.8611%" height="15" fill="rgb(214,191,48)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="149" width="0.8611%" height="15" fill="rgb(237,112,39)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="133" width="0.8611%" height="15" fill="rgb(247,203,27)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="117" width="0.8611%" height="15" fill="rgb(235,124,28)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="101" width="0.8611%" height="15" fill="rgb(208,207,46)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="85" width="0.8611%" height="15" fill="rgb(234,176,4)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="69" width="0.8611%" height="15" fill="rgb(230,133,28)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="53" width="0.8611%" height="15" fill="rgb(211,137,40)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="63.50"></text></g><g><title>malloc (1,321,165 samples, 0.86%)</title><rect x="90.4356%" y="37" width="0.8611%" height="15" fill="rgb(254,35,13)" fg:x="138746043" fg:w="1321165"/><text x="90.6856%" y="47.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="1013" width="1.3246%" height="15" fill="rgb(225,49,51)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="1023.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="997" width="1.3246%" height="15" fill="rgb(251,10,15)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="1007.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="981" width="1.3246%" height="15" fill="rgb(228,207,15)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="991.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="965" width="1.3246%" height="15" fill="rgb(241,99,19)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="975.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="949" width="1.3246%" height="15" fill="rgb(207,104,49)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="959.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="933" width="1.3246%" height="15" fill="rgb(234,99,18)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="943.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="917" width="1.3246%" height="15" fill="rgb(213,191,49)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="927.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="901" width="1.3246%" height="15" fill="rgb(210,226,19)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="911.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="885" width="1.3246%" height="15" fill="rgb(229,97,18)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="895.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="869" width="1.3246%" height="15" fill="rgb(211,167,15)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="879.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="853" width="1.3246%" height="15" fill="rgb(210,169,34)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="863.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="837" width="1.3246%" height="15" fill="rgb(241,121,31)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="847.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="821" width="1.3246%" height="15" fill="rgb(232,40,11)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="831.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="805" width="1.3246%" height="15" fill="rgb(205,86,26)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="815.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="789" width="1.3246%" height="15" fill="rgb(231,126,28)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="799.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="773" width="1.3246%" height="15" fill="rgb(219,221,18)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="783.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="757" width="1.3246%" height="15" fill="rgb(211,40,0)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="741" width="1.3246%" height="15" fill="rgb(239,85,43)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="751.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="725" width="1.3246%" height="15" fill="rgb(231,55,21)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="735.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="709" width="1.3246%" height="15" fill="rgb(225,184,43)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="719.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="693" width="1.3246%" height="15" fill="rgb(251,158,41)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="703.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="677" width="1.3246%" height="15" fill="rgb(234,159,37)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="661" width="1.3246%" height="15" fill="rgb(216,204,22)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="645" width="1.3246%" height="15" fill="rgb(214,17,3)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="629" width="1.3246%" height="15" fill="rgb(212,111,17)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,032,187 samples, 1.32%)</title><rect x="90.4356%" y="613" width="1.3246%" height="15" fill="rgb(221,157,24)" fg:x="138746043" fg:w="2032187"/><text x="90.6856%" y="623.50"></text></g><g><title>serde::de::MapAccess::next_value (711,022 samples, 0.46%)</title><rect x="91.2968%" y="597" width="0.4634%" height="15" fill="rgb(252,16,13)" fg:x="140067208" fg:w="711022"/><text x="91.5468%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (711,022 samples, 0.46%)</title><rect x="91.2968%" y="581" width="0.4634%" height="15" fill="rgb(221,62,2)" fg:x="140067208" fg:w="711022"/><text x="91.5468%" y="591.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (711,022 samples, 0.46%)</title><rect x="91.2968%" y="565" width="0.4634%" height="15" fill="rgb(247,87,22)" fg:x="140067208" fg:w="711022"/><text x="91.5468%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (711,022 samples, 0.46%)</title><rect x="91.2968%" y="549" width="0.4634%" height="15" fill="rgb(215,73,9)" fg:x="140067208" fg:w="711022"/><text x="91.5468%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (711,022 samples, 0.46%)</title><rect x="91.2968%" y="533" width="0.4634%" height="15" fill="rgb(207,175,33)" fg:x="140067208" fg:w="711022"/><text x="91.5468%" y="543.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1637" width="1.6488%" height="15" fill="rgb(243,129,54)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1647.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1621" width="1.6488%" height="15" fill="rgb(227,119,45)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1631.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1605" width="1.6488%" height="15" fill="rgb(205,109,36)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1615.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1589" width="1.6488%" height="15" fill="rgb(205,6,39)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1599.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1573" width="1.6488%" height="15" fill="rgb(221,32,16)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1583.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1557" width="1.6488%" height="15" fill="rgb(228,144,50)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1567.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1541" width="1.6488%" height="15" fill="rgb(229,201,53)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1551.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1525" width="1.6488%" height="15" fill="rgb(249,153,27)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1535.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1509" width="1.6488%" height="15" fill="rgb(227,106,25)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1519.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1493" width="1.6488%" height="15" fill="rgb(230,65,29)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1503.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1477" width="1.6488%" height="15" fill="rgb(221,57,46)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1487.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1461" width="1.6488%" height="15" fill="rgb(229,161,17)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1471.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1445" width="1.6488%" height="15" fill="rgb(222,213,11)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1455.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1429" width="1.6488%" height="15" fill="rgb(235,35,13)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1439.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1413" width="1.6488%" height="15" fill="rgb(233,158,34)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1423.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1397" width="1.6488%" height="15" fill="rgb(215,151,48)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1407.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1381" width="1.6488%" height="15" fill="rgb(229,84,14)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1391.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1365" width="1.6488%" height="15" fill="rgb(229,68,14)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1375.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1349" width="1.6488%" height="15" fill="rgb(243,106,26)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1359.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1333" width="1.6488%" height="15" fill="rgb(206,45,38)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1343.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1317" width="1.6488%" height="15" fill="rgb(226,6,15)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1327.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1301" width="1.6488%" height="15" fill="rgb(232,22,54)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1311.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1285" width="1.6488%" height="15" fill="rgb(229,222,32)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1295.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1269" width="1.6488%" height="15" fill="rgb(228,62,29)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1279.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1253" width="1.6488%" height="15" fill="rgb(251,103,34)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1263.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1237" width="1.6488%" height="15" fill="rgb(233,12,30)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1247.50"></text></g><g><title>serde::de::MapAccess::next_entry (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1221" width="1.6488%" height="15" fill="rgb(238,52,0)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1231.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1205" width="1.6488%" height="15" fill="rgb(223,98,5)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1215.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1189" width="1.6488%" height="15" fill="rgb(228,75,37)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1199.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1173" width="1.6488%" height="15" fill="rgb(205,115,49)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1183.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1157" width="1.6488%" height="15" fill="rgb(250,154,43)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1167.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1141" width="1.6488%" height="15" fill="rgb(226,43,29)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1151.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1125" width="1.6488%" height="15" fill="rgb(249,228,39)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1135.50"></text></g><g><title>serde::de::SeqAccess::next_element (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1109" width="1.6488%" height="15" fill="rgb(216,79,43)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1119.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1093" width="1.6488%" height="15" fill="rgb(228,95,12)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1103.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1077" width="1.6488%" height="15" fill="rgb(249,221,15)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1087.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1061" width="1.6488%" height="15" fill="rgb(233,34,13)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1071.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1045" width="1.6488%" height="15" fill="rgb(214,103,39)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1055.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,529,614 samples, 1.65%)</title><rect x="90.4356%" y="1029" width="1.6488%" height="15" fill="rgb(251,126,39)" fg:x="138746043" fg:w="2529614"/><text x="90.6856%" y="1039.50"></text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (497,427 samples, 0.32%)</title><rect x="91.7602%" y="1013" width="0.3242%" height="15" fill="rgb(214,216,36)" fg:x="140778230" fg:w="497427"/><text x="92.0102%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (497,427 samples, 0.32%)</title><rect x="91.7602%" y="997" width="0.3242%" height="15" fill="rgb(220,221,8)" fg:x="140778230" fg:w="497427"/><text x="92.0102%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (497,427 samples, 0.32%)</title><rect x="91.7602%" y="981" width="0.3242%" height="15" fill="rgb(240,216,3)" fg:x="140778230" fg:w="497427"/><text x="92.0102%" y="991.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (497,427 samples, 0.32%)</title><rect x="91.7602%" y="965" width="0.3242%" height="15" fill="rgb(232,218,17)" fg:x="140778230" fg:w="497427"/><text x="92.0102%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (497,427 samples, 0.32%)</title><rect x="91.7602%" y="949" width="0.3242%" height="15" fill="rgb(229,163,45)" fg:x="140778230" fg:w="497427"/><text x="92.0102%" y="959.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (497,427 samples, 0.32%)</title><rect x="91.7602%" y="933" width="0.3242%" height="15" fill="rgb(231,110,42)" fg:x="140778230" fg:w="497427"/><text x="92.0102%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (497,427 samples, 0.32%)</title><rect x="91.7602%" y="917" width="0.3242%" height="15" fill="rgb(208,170,48)" fg:x="140778230" fg:w="497427"/><text x="92.0102%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (497,427 samples, 0.32%)</title><rect x="91.7602%" y="901" width="0.3242%" height="15" fill="rgb(239,116,25)" fg:x="140778230" fg:w="497427"/><text x="92.0102%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (497,427 samples, 0.32%)</title><rect x="91.7602%" y="885" width="0.3242%" height="15" fill="rgb(219,200,50)" fg:x="140778230" fg:w="497427"/><text x="92.0102%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (497,427 samples, 0.32%)</title><rect x="91.7602%" y="869" width="0.3242%" height="15" fill="rgb(245,200,0)" fg:x="140778230" fg:w="497427"/><text x="92.0102%" y="879.50"></text></g><g><title>alloc::alloc::alloc (497,427 samples, 0.32%)</title><rect x="91.7602%" y="853" width="0.3242%" height="15" fill="rgb(245,119,33)" fg:x="140778230" fg:w="497427"/><text x="92.0102%" y="863.50"></text></g><g><title>malloc (497,427 samples, 0.32%)</title><rect x="91.7602%" y="837" width="0.3242%" height="15" fill="rgb(231,125,12)" fg:x="140778230" fg:w="497427"/><text x="92.0102%" y="847.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="2117" width="2.6374%" height="15" fill="rgb(216,96,41)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="2127.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="2101" width="2.6374%" height="15" fill="rgb(248,43,45)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="2111.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="2085" width="2.6374%" height="15" fill="rgb(217,222,7)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="2095.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="2069" width="2.6374%" height="15" fill="rgb(233,28,6)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="2079.50">&lt;s..</text></g><g><title>serde::de::MapAccess::next_entry (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="2053" width="2.6374%" height="15" fill="rgb(231,218,15)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="2063.50">se..</text></g><g><title>serde::de::MapAccess::next_entry_seed (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="2037" width="2.6374%" height="15" fill="rgb(226,171,48)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="2047.50">se..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="2021" width="2.6374%" height="15" fill="rgb(235,201,9)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="2031.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="2005" width="2.6374%" height="15" fill="rgb(217,80,15)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="2015.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1989" width="2.6374%" height="15" fill="rgb(219,152,8)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1999.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1973" width="2.6374%" height="15" fill="rgb(243,107,38)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1983.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1957" width="2.6374%" height="15" fill="rgb(231,17,5)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1967.50">&lt;s..</text></g><g><title>serde::de::SeqAccess::next_element (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1941" width="2.6374%" height="15" fill="rgb(209,25,54)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1951.50">se..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1925" width="2.6374%" height="15" fill="rgb(219,0,2)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1935.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1909" width="2.6374%" height="15" fill="rgb(246,9,5)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1919.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1893" width="2.6374%" height="15" fill="rgb(226,159,4)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1903.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1877" width="2.6374%" height="15" fill="rgb(219,175,34)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1887.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1861" width="2.6374%" height="15" fill="rgb(236,10,46)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1871.50">&lt;s..</text></g><g><title>serde::de::MapAccess::next_entry (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1845" width="2.6374%" height="15" fill="rgb(240,211,16)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1855.50">se..</text></g><g><title>serde::de::MapAccess::next_entry_seed (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1829" width="2.6374%" height="15" fill="rgb(205,3,43)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1839.50">se..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1813" width="2.6374%" height="15" fill="rgb(245,7,22)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1823.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1797" width="2.6374%" height="15" fill="rgb(239,132,32)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1807.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1781" width="2.6374%" height="15" fill="rgb(228,202,34)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1791.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1765" width="2.6374%" height="15" fill="rgb(254,200,22)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1775.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1749" width="2.6374%" height="15" fill="rgb(219,10,39)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1759.50">&lt;s..</text></g><g><title>serde::de::SeqAccess::next_element (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1733" width="2.6374%" height="15" fill="rgb(226,210,39)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1743.50">se..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1717" width="2.6374%" height="15" fill="rgb(208,219,16)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1727.50">&lt;s..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1701" width="2.6374%" height="15" fill="rgb(216,158,51)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1711.50">&lt;c..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1685" width="2.6374%" height="15" fill="rgb(233,14,44)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1695.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1669" width="2.6374%" height="15" fill="rgb(237,97,39)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1679.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4,046,235 samples, 2.64%)</title><rect x="90.4356%" y="1653" width="2.6374%" height="15" fill="rgb(218,198,43)" fg:x="138746043" fg:w="4046235"/><text x="90.6856%" y="1663.50">&lt;s..</text></g><g><title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::insert (1,516,621 samples, 0.99%)</title><rect x="92.0844%" y="1637" width="0.9885%" height="15" fill="rgb(231,104,20)" fg:x="141275657" fg:w="1516621"/><text x="92.3344%" y="1647.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1,516,621 samples, 0.99%)</title><rect x="92.0844%" y="1621" width="0.9885%" height="15" fill="rgb(254,36,13)" fg:x="141275657" fg:w="1516621"/><text x="92.3344%" y="1631.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1,516,621 samples, 0.99%)</title><rect x="92.0844%" y="1605" width="0.9885%" height="15" fill="rgb(248,14,50)" fg:x="141275657" fg:w="1516621"/><text x="92.3344%" y="1615.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert_entry (1,516,621 samples, 0.99%)</title><rect x="92.0844%" y="1589" width="0.9885%" height="15" fill="rgb(217,107,29)" fg:x="141275657" fg:w="1516621"/><text x="92.3344%" y="1599.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1,516,621 samples, 0.99%)</title><rect x="92.0844%" y="1573" width="0.9885%" height="15" fill="rgb(251,169,33)" fg:x="141275657" fg:w="1516621"/><text x="92.3344%" y="1583.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1,516,621 samples, 0.99%)</title><rect x="92.0844%" y="1557" width="0.9885%" height="15" fill="rgb(217,108,32)" fg:x="141275657" fg:w="1516621"/><text x="92.3344%" y="1567.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1,516,621 samples, 0.99%)</title><rect x="92.0844%" y="1541" width="0.9885%" height="15" fill="rgb(219,66,42)" fg:x="141275657" fg:w="1516621"/><text x="92.3344%" y="1551.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1,516,621 samples, 0.99%)</title><rect x="92.0844%" y="1525" width="0.9885%" height="15" fill="rgb(206,180,7)" fg:x="141275657" fg:w="1516621"/><text x="92.3344%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,516,621 samples, 0.99%)</title><rect x="92.0844%" y="1509" width="0.9885%" height="15" fill="rgb(208,226,31)" fg:x="141275657" fg:w="1516621"/><text x="92.3344%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,516,621 samples, 0.99%)</title><rect x="92.0844%" y="1493" width="0.9885%" height="15" fill="rgb(218,26,49)" fg:x="141275657" fg:w="1516621"/><text x="92.3344%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (1,516,621 samples, 0.99%)</title><rect x="92.0844%" y="1477" width="0.9885%" height="15" fill="rgb(233,197,48)" fg:x="141275657" fg:w="1516621"/><text x="92.3344%" y="1487.50"></text></g><g><title>malloc (1,516,621 samples, 0.99%)</title><rect x="92.0844%" y="1461" width="0.9885%" height="15" fill="rgb(252,181,51)" fg:x="141275657" fg:w="1516621"/><text x="92.3344%" y="1471.50"></text></g><g><title>[libc.so.6] (1,516,621 samples, 0.99%)</title><rect x="92.0844%" y="1445" width="0.9885%" height="15" fill="rgb(253,90,19)" fg:x="141275657" fg:w="1516621"/><text x="92.3344%" y="1455.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7,929,926 samples, 5.17%)</title><rect x="89.1863%" y="2325" width="5.1688%" height="15" fill="rgb(215,171,30)" fg:x="136829285" fg:w="7929926"/><text x="89.4363%" y="2335.50">&lt;core:..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,929,926 samples, 5.17%)</title><rect x="89.1863%" y="2309" width="5.1688%" height="15" fill="rgb(214,222,9)" fg:x="136829285" fg:w="7929926"/><text x="89.4363%" y="2319.50">serde_..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7,929,926 samples, 5.17%)</title><rect x="89.1863%" y="2293" width="5.1688%" height="15" fill="rgb(223,3,22)" fg:x="136829285" fg:w="7929926"/><text x="89.4363%" y="2303.50">&lt;&amp;mut ..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7,929,926 samples, 5.17%)</title><rect x="89.1863%" y="2277" width="5.1688%" height="15" fill="rgb(225,196,46)" fg:x="136829285" fg:w="7929926"/><text x="89.4363%" y="2287.50">&lt;serde..</text></g><g><title>serde::de::MapAccess::next_entry (7,929,926 samples, 5.17%)</title><rect x="89.1863%" y="2261" width="5.1688%" height="15" fill="rgb(209,110,37)" fg:x="136829285" fg:w="7929926"/><text x="89.4363%" y="2271.50">serde:..</text></g><g><title>serde::de::MapAccess::next_entry_seed (7,929,926 samples, 5.17%)</title><rect x="89.1863%" y="2245" width="5.1688%" height="15" fill="rgb(249,89,12)" fg:x="136829285" fg:w="7929926"/><text x="89.4363%" y="2255.50">serde:..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (6,013,168 samples, 3.92%)</title><rect x="90.4356%" y="2229" width="3.9194%" height="15" fill="rgb(226,27,33)" fg:x="138746043" fg:w="6013168"/><text x="90.6856%" y="2239.50">&lt;ser..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (6,013,168 samples, 3.92%)</title><rect x="90.4356%" y="2213" width="3.9194%" height="15" fill="rgb(213,82,22)" fg:x="138746043" fg:w="6013168"/><text x="90.6856%" y="2223.50">&lt;cor..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,013,168 samples, 3.92%)</title><rect x="90.4356%" y="2197" width="3.9194%" height="15" fill="rgb(248,140,0)" fg:x="138746043" fg:w="6013168"/><text x="90.6856%" y="2207.50">serd..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6,013,168 samples, 3.92%)</title><rect x="90.4356%" y="2181" width="3.9194%" height="15" fill="rgb(228,106,3)" fg:x="138746043" fg:w="6013168"/><text x="90.6856%" y="2191.50">&lt;&amp;mu..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (6,013,168 samples, 3.92%)</title><rect x="90.4356%" y="2165" width="3.9194%" height="15" fill="rgb(209,23,37)" fg:x="138746043" fg:w="6013168"/><text x="90.6856%" y="2175.50">&lt;ser..</text></g><g><title>serde::de::SeqAccess::next_element (6,013,168 samples, 3.92%)</title><rect x="90.4356%" y="2149" width="3.9194%" height="15" fill="rgb(241,93,50)" fg:x="138746043" fg:w="6013168"/><text x="90.6856%" y="2159.50">serd..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (6,013,168 samples, 3.92%)</title><rect x="90.4356%" y="2133" width="3.9194%" height="15" fill="rgb(253,46,43)" fg:x="138746043" fg:w="6013168"/><text x="90.6856%" y="2143.50">&lt;ser..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed::has_next_element (1,966,933 samples, 1.28%)</title><rect x="93.0730%" y="2117" width="1.2821%" height="15" fill="rgb(226,206,43)" fg:x="142792278" fg:w="1966933"/><text x="93.3230%" y="2127.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1,966,933 samples, 1.28%)</title><rect x="93.0730%" y="2101" width="1.2821%" height="15" fill="rgb(217,54,7)" fg:x="142792278" fg:w="1966933"/><text x="93.3230%" y="2111.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (1,966,933 samples, 1.28%)</title><rect x="93.0730%" y="2085" width="1.2821%" height="15" fill="rgb(223,5,52)" fg:x="142792278" fg:w="1966933"/><text x="93.3230%" y="2095.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1,966,933 samples, 1.28%)</title><rect x="93.0730%" y="2069" width="1.2821%" height="15" fill="rgb(206,52,46)" fg:x="142792278" fg:w="1966933"/><text x="93.3230%" y="2079.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1,966,933 samples, 1.28%)</title><rect x="93.0730%" y="2053" width="1.2821%" height="15" fill="rgb(253,136,11)" fg:x="142792278" fg:w="1966933"/><text x="93.3230%" y="2063.50"></text></g><g><title>_start (131,978,526 samples, 86.02%)</title><rect x="9.5311%" y="4421" width="86.0245%" height="15" fill="rgb(208,106,33)" fg:x="14622625" fg:w="131978526"/><text x="9.7811%" y="4431.50">_start</text></g><g><title>__libc_start_main (131,978,526 samples, 86.02%)</title><rect x="9.5311%" y="4405" width="86.0245%" height="15" fill="rgb(206,54,4)" fg:x="14622625" fg:w="131978526"/><text x="9.7811%" y="4415.50">__libc_start_main</text></g><g><title>[libc.so.6] (131,978,526 samples, 86.02%)</title><rect x="9.5311%" y="4389" width="86.0245%" height="15" fill="rgb(213,3,15)" fg:x="14622625" fg:w="131978526"/><text x="9.7811%" y="4399.50">[libc.so.6]</text></g><g><title>main (131,978,526 samples, 86.02%)</title><rect x="9.5311%" y="4373" width="86.0245%" height="15" fill="rgb(252,211,39)" fg:x="14622625" fg:w="131978526"/><text x="9.7811%" y="4383.50">main</text></g><g><title>std::rt::lang_start_internal (131,978,526 samples, 86.02%)</title><rect x="9.5311%" y="4357" width="86.0245%" height="15" fill="rgb(223,6,36)" fg:x="14622625" fg:w="131978526"/><text x="9.7811%" y="4367.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (131,978,526 samples, 86.02%)</title><rect x="9.5311%" y="4341" width="86.0245%" height="15" fill="rgb(252,169,45)" fg:x="14622625" fg:w="131978526"/><text x="9.7811%" y="4351.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (131,978,526 samples, 86.02%)</title><rect x="9.5311%" y="4325" width="86.0245%" height="15" fill="rgb(212,48,26)" fg:x="14622625" fg:w="131978526"/><text x="9.7811%" y="4335.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (131,978,526 samples, 86.02%)</title><rect x="9.5311%" y="4309" width="86.0245%" height="15" fill="rgb(251,102,48)" fg:x="14622625" fg:w="131978526"/><text x="9.7811%" y="4319.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (131,978,526 samples, 86.02%)</title><rect x="9.5311%" y="4293" width="86.0245%" height="15" fill="rgb(243,208,16)" fg:x="14622625" fg:w="131978526"/><text x="9.7811%" y="4303.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (131,978,526 samples, 86.02%)</title><rect x="9.5311%" y="4277" width="86.0245%" height="15" fill="rgb(219,96,24)" fg:x="14622625" fg:w="131978526"/><text x="9.7811%" y="4287.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (131,978,526 samples, 86.02%)</title><rect x="9.5311%" y="4261" width="86.0245%" height="15" fill="rgb(219,33,29)" fg:x="14622625" fg:w="131978526"/><text x="9.7811%" y="4271.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (131,978,526 samples, 86.02%)</title><rect x="9.5311%" y="4245" width="86.0245%" height="15" fill="rgb(223,176,5)" fg:x="14622625" fg:w="131978526"/><text x="9.7811%" y="4255.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (131,978,526 samples, 86.02%)</title><rect x="9.5311%" y="4229" width="86.0245%" height="15" fill="rgb(228,140,14)" fg:x="14622625" fg:w="131978526"/><text x="9.7811%" y="4239.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (131,978,526 samples, 86.02%)</title><rect x="9.5311%" y="4213" width="86.0245%" height="15" fill="rgb(217,179,31)" fg:x="14622625" fg:w="131978526"/><text x="9.7811%" y="4223.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (131,978,526 samples, 86.02%)</title><rect x="9.5311%" y="4197" width="86.0245%" height="15" fill="rgb(230,9,30)" fg:x="14622625" fg:w="131978526"/><text x="9.7811%" y="4207.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (131,978,526 samples, 86.02%)</title><rect x="9.5311%" y="4181" width="86.0245%" height="15" fill="rgb(230,136,20)" fg:x="14622625" fg:w="131978526"/><text x="9.7811%" y="4191.50">core::ops::function::FnOnce::call_once</text></g><g><title>main::main (131,978,526 samples, 86.02%)</title><rect x="9.5311%" y="4165" width="86.0245%" height="15" fill="rgb(215,210,22)" fg:x="14622625" fg:w="131978526"/><text x="9.7811%" y="4175.50">main::main</text></g><g><title>main::benchmark::run_web_browser_layout_trace_benchmark (124,480,167 samples, 81.14%)</title><rect x="14.4186%" y="4149" width="81.1370%" height="15" fill="rgb(218,43,5)" fg:x="22120984" fg:w="124480167"/><text x="14.6686%" y="4159.50">main::benchmark::run_web_browser_layout_trace_benchmark</text></g><g><title>main::benchmark::parse_web_layout_trace (15,981,334 samples, 10.42%)</title><rect x="85.1389%" y="4133" width="10.4167%" height="15" fill="rgb(216,11,5)" fg:x="130619817" fg:w="15981334"/><text x="85.3889%" y="4143.50">main::benchmark..</text></g><g><title>serde_json::de::from_str (14,015,159 samples, 9.14%)</title><rect x="86.4205%" y="4117" width="9.1352%" height="15" fill="rgb(209,82,29)" fg:x="132585992" fg:w="14015159"/><text x="86.6705%" y="4127.50">serde_json::d..</text></g><g><title>serde_json::de::from_trait (14,015,159 samples, 9.14%)</title><rect x="86.4205%" y="4101" width="9.1352%" height="15" fill="rgb(244,115,12)" fg:x="132585992" fg:w="14015159"/><text x="86.6705%" y="4111.50">serde_json::d..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14,015,159 samples, 9.14%)</title><rect x="86.4205%" y="4085" width="9.1352%" height="15" fill="rgb(222,82,18)" fg:x="132585992" fg:w="14015159"/><text x="86.6705%" y="4095.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14,015,159 samples, 9.14%)</title><rect x="86.4205%" y="4069" width="9.1352%" height="15" fill="rgb(249,227,8)" fg:x="132585992" fg:w="14015159"/><text x="86.6705%" y="4079.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14,015,159 samples, 9.14%)</title><rect x="86.4205%" y="4053" width="9.1352%" height="15" fill="rgb(253,141,45)" fg:x="132585992" fg:w="14015159"/><text x="86.6705%" y="4063.50">&lt;serde_json::..</text></g><g><title>serde::de::MapAccess::next_entry (14,015,159 samples, 9.14%)</title><rect x="86.4205%" y="4037" width="9.1352%" height="15" fill="rgb(234,184,4)" fg:x="132585992" fg:w="14015159"/><text x="86.6705%" y="4047.50">serde::de::Ma..</text></g><g><title>serde::de::MapAccess::next_entry_seed (14,015,159 samples, 9.14%)</title><rect x="86.4205%" y="4021" width="9.1352%" height="15" fill="rgb(218,194,23)" fg:x="132585992" fg:w="14015159"/><text x="86.6705%" y="4031.50">serde::de::Ma..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (14,015,159 samples, 9.14%)</title><rect x="86.4205%" y="4005" width="9.1352%" height="15" fill="rgb(235,66,41)" fg:x="132585992" fg:w="14015159"/><text x="86.6705%" y="4015.50">&lt;serde_json::..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (14,015,159 samples, 9.14%)</title><rect x="86.4205%" y="3989" width="9.1352%" height="15" fill="rgb(245,217,1)" fg:x="132585992" fg:w="14015159"/><text x="86.6705%" y="3999.50">&lt;core::marker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (14,015,159 samples, 9.14%)</title><rect x="86.4205%" y="3973" width="9.1352%" height="15" fill="rgb(229,91,1)" fg:x="132585992" fg:w="14015159"/><text x="86.6705%" y="3983.50">serde_json::v..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (14,015,159 samples, 9.14%)</title><rect x="86.4205%" y="3957" width="9.1352%" height="15" fill="rgb(207,101,30)" fg:x="132585992" fg:w="14015159"/><text x="86.6705%" y="3967.50">&lt;&amp;mut serde_j..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14,015,159 samples, 9.14%)</title><rect x="86.4205%" y="3941" width="9.1352%" height="15" fill="rgb(223,82,49)" fg:x="132585992" fg:w="14015159"/><text x="86.6705%" y="3951.50">&lt;serde_json::..</text></g><g><title>serde::de::MapAccess::next_entry (14,015,159 samples, 9.14%)</title><rect x="86.4205%" y="3925" width="9.1352%" height="15" fill="rgb(218,167,17)" fg:x="132585992" fg:w="14015159"/><text x="86.6705%" y="3935.50">serde::de::Ma..</text></g><g><title>serde::de::MapAccess::next_entry_seed (14,015,159 samples, 9.14%)</title><rect x="86.4205%" y="3909" width="9.1352%" height="15" fill="rgb(208,103,14)" fg:x="132585992" fg:w="14015159"/><text x="86.6705%" y="3919.50">serde::de::Ma..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3893" width="8.0023%" height="15" fill="rgb(238,20,8)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3903.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3877" width="8.0023%" height="15" fill="rgb(218,80,54)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3887.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3861" width="8.0023%" height="15" fill="rgb(240,144,17)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3871.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3845" width="8.0023%" height="15" fill="rgb(245,27,50)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3855.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3829" width="8.0023%" height="15" fill="rgb(251,51,7)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3839.50">&lt;serde_json..</text></g><g><title>serde::de::SeqAccess::next_element (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3813" width="8.0023%" height="15" fill="rgb(245,217,29)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3823.50">serde::de::..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3797" width="8.0023%" height="15" fill="rgb(221,176,29)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3807.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3781" width="8.0023%" height="15" fill="rgb(212,180,24)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3791.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3765" width="8.0023%" height="15" fill="rgb(254,24,2)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3775.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3749" width="8.0023%" height="15" fill="rgb(230,100,2)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3759.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3733" width="8.0023%" height="15" fill="rgb(219,142,25)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3743.50">&lt;serde_json..</text></g><g><title>serde::de::MapAccess::next_entry (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3717" width="8.0023%" height="15" fill="rgb(240,73,43)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3727.50">serde::de::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3701" width="8.0023%" height="15" fill="rgb(214,114,15)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3711.50">serde::de::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3685" width="8.0023%" height="15" fill="rgb(207,130,4)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3695.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3669" width="8.0023%" height="15" fill="rgb(221,25,40)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3679.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3653" width="8.0023%" height="15" fill="rgb(241,184,7)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3663.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3637" width="8.0023%" height="15" fill="rgb(235,159,4)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3647.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3621" width="8.0023%" height="15" fill="rgb(214,87,48)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3631.50">&lt;serde_json..</text></g><g><title>serde::de::SeqAccess::next_element (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3605" width="8.0023%" height="15" fill="rgb(246,198,24)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3615.50">serde::de::..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3589" width="8.0023%" height="15" fill="rgb(209,66,40)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3599.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3573" width="8.0023%" height="15" fill="rgb(233,147,39)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3583.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3557" width="8.0023%" height="15" fill="rgb(231,145,52)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3567.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3541" width="8.0023%" height="15" fill="rgb(206,20,26)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3551.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3525" width="8.0023%" height="15" fill="rgb(238,220,4)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3535.50">&lt;serde_json..</text></g><g><title>serde::de::MapAccess::next_entry (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3509" width="8.0023%" height="15" fill="rgb(252,195,42)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3519.50">serde::de::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3493" width="8.0023%" height="15" fill="rgb(209,10,6)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3503.50">serde::de::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3477" width="8.0023%" height="15" fill="rgb(229,3,52)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3487.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3461" width="8.0023%" height="15" fill="rgb(253,49,37)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3471.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3445" width="8.0023%" height="15" fill="rgb(240,103,49)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3455.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3429" width="8.0023%" height="15" fill="rgb(250,182,30)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3439.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3413" width="8.0023%" height="15" fill="rgb(248,8,30)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3423.50">&lt;serde_json..</text></g><g><title>serde::de::SeqAccess::next_element (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3397" width="8.0023%" height="15" fill="rgb(237,120,30)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3407.50">serde::de::..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3381" width="8.0023%" height="15" fill="rgb(221,146,34)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3391.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3365" width="8.0023%" height="15" fill="rgb(242,55,13)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3375.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3349" width="8.0023%" height="15" fill="rgb(242,112,31)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3359.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3333" width="8.0023%" height="15" fill="rgb(249,192,27)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3343.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3317" width="8.0023%" height="15" fill="rgb(208,204,44)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3327.50">&lt;serde_json..</text></g><g><title>serde::de::MapAccess::next_entry (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3301" width="8.0023%" height="15" fill="rgb(208,93,54)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3311.50">serde::de::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3285" width="8.0023%" height="15" fill="rgb(242,1,31)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3295.50">serde::de::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3269" width="8.0023%" height="15" fill="rgb(241,83,25)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3279.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3253" width="8.0023%" height="15" fill="rgb(205,169,50)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3263.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3237" width="8.0023%" height="15" fill="rgb(239,186,37)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3247.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3221" width="8.0023%" height="15" fill="rgb(205,221,10)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3231.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3205" width="8.0023%" height="15" fill="rgb(218,196,15)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3215.50">&lt;serde_json..</text></g><g><title>serde::de::SeqAccess::next_element (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3189" width="8.0023%" height="15" fill="rgb(218,196,35)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3199.50">serde::de::..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3173" width="8.0023%" height="15" fill="rgb(233,63,24)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3183.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3157" width="8.0023%" height="15" fill="rgb(225,8,4)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3167.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3141" width="8.0023%" height="15" fill="rgb(234,105,35)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3151.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3125" width="8.0023%" height="15" fill="rgb(236,21,32)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3135.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3109" width="8.0023%" height="15" fill="rgb(228,109,6)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3119.50">&lt;serde_json..</text></g><g><title>serde::de::MapAccess::next_entry (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3093" width="8.0023%" height="15" fill="rgb(229,215,31)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3103.50">serde::de::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3077" width="8.0023%" height="15" fill="rgb(221,52,54)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3087.50">serde::de::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3061" width="8.0023%" height="15" fill="rgb(252,129,43)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3071.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3045" width="8.0023%" height="15" fill="rgb(248,183,27)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3055.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3029" width="8.0023%" height="15" fill="rgb(250,0,22)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3039.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12,277,150 samples, 8.00%)</title><rect x="87.5533%" y="3013" width="8.0023%" height="15" fill="rgb(213,166,10)" fg:x="134324001" fg:w="12277150"/><text x="87.8033%" y="3023.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2997" width="7.6885%" height="15" fill="rgb(207,163,36)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="3007.50">&lt;serde_json..</text></g><g><title>serde::de::SeqAccess::next_element (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2981" width="7.6885%" height="15" fill="rgb(208,122,22)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2991.50">serde::de::..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2965" width="7.6885%" height="15" fill="rgb(207,104,49)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2975.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2949" width="7.6885%" height="15" fill="rgb(248,211,50)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2959.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2933" width="7.6885%" height="15" fill="rgb(217,13,45)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2943.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2917" width="7.6885%" height="15" fill="rgb(211,216,49)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2927.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2901" width="7.6885%" height="15" fill="rgb(221,58,53)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2911.50">&lt;serde_json..</text></g><g><title>serde::de::MapAccess::next_entry (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2885" width="7.6885%" height="15" fill="rgb(220,112,41)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2895.50">serde::de::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2869" width="7.6885%" height="15" fill="rgb(236,38,28)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2879.50">serde::de::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2853" width="7.6885%" height="15" fill="rgb(227,195,22)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2863.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2837" width="7.6885%" height="15" fill="rgb(214,55,33)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2847.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2821" width="7.6885%" height="15" fill="rgb(248,80,13)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2831.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2805" width="7.6885%" height="15" fill="rgb(238,52,6)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2815.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2789" width="7.6885%" height="15" fill="rgb(224,198,47)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2799.50">&lt;serde_json..</text></g><g><title>serde::de::SeqAccess::next_element (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2773" width="7.6885%" height="15" fill="rgb(233,171,20)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2783.50">serde::de::..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2757" width="7.6885%" height="15" fill="rgb(241,30,25)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2767.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2741" width="7.6885%" height="15" fill="rgb(207,171,38)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2751.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2725" width="7.6885%" height="15" fill="rgb(234,70,1)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2735.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2709" width="7.6885%" height="15" fill="rgb(232,178,18)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2719.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2693" width="7.6885%" height="15" fill="rgb(241,78,40)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2703.50">&lt;serde_json..</text></g><g><title>serde::de::MapAccess::next_entry (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2677" width="7.6885%" height="15" fill="rgb(222,35,25)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2687.50">serde::de::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2661" width="7.6885%" height="15" fill="rgb(207,92,16)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2671.50">serde::de::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2645" width="7.6885%" height="15" fill="rgb(216,59,51)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2655.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2629" width="7.6885%" height="15" fill="rgb(213,80,28)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2639.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2613" width="7.6885%" height="15" fill="rgb(220,93,7)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2623.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2597" width="7.6885%" height="15" fill="rgb(225,24,44)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2607.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2581" width="7.6885%" height="15" fill="rgb(243,74,40)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2591.50">&lt;serde_json..</text></g><g><title>serde::de::SeqAccess::next_element (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2565" width="7.6885%" height="15" fill="rgb(228,39,7)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2575.50">serde::de::..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2549" width="7.6885%" height="15" fill="rgb(227,79,8)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2559.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2533" width="7.6885%" height="15" fill="rgb(236,58,11)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2543.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2517" width="7.6885%" height="15" fill="rgb(249,63,35)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2527.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2501" width="7.6885%" height="15" fill="rgb(252,114,16)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2511.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2485" width="7.6885%" height="15" fill="rgb(254,151,24)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2495.50">&lt;serde_json..</text></g><g><title>serde::de::MapAccess::next_entry (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2469" width="7.6885%" height="15" fill="rgb(253,54,39)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2479.50">serde::de::..</text></g><g><title>serde::de::MapAccess::next_entry_seed (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2453" width="7.6885%" height="15" fill="rgb(243,25,45)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2463.50">serde::de::..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2437" width="7.6885%" height="15" fill="rgb(234,134,9)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2447.50">&lt;serde_json..</text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2421" width="7.6885%" height="15" fill="rgb(227,166,31)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2431.50">&lt;core::mark..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2405" width="7.6885%" height="15" fill="rgb(245,143,41)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2415.50">serde_json:..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2389" width="7.6885%" height="15" fill="rgb(238,181,32)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2399.50">&lt;&amp;mut serde..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_seq (11,795,604 samples, 7.69%)</title><rect x="87.8672%" y="2373" width="7.6885%" height="15" fill="rgb(224,113,18)" fg:x="134805547" fg:w="11795604"/><text x="88.1172%" y="2383.50">&lt;serde_json..</text></g><g><title>serde::de::SeqAccess::next_element (9,771,866 samples, 6.37%)</title><rect x="89.1863%" y="2357" width="6.3694%" height="15" fill="rgb(240,229,28)" fg:x="136829285" fg:w="9771866"/><text x="89.4363%" y="2367.50">serde::d..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (9,771,866 samples, 6.37%)</title><rect x="89.1863%" y="2341" width="6.3694%" height="15" fill="rgb(250,185,3)" fg:x="136829285" fg:w="9771866"/><text x="89.4363%" y="2351.50">&lt;serde_j..</text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed::has_next_element (1,841,940 samples, 1.20%)</title><rect x="94.3550%" y="2325" width="1.2006%" height="15" fill="rgb(212,59,25)" fg:x="144759211" fg:w="1841940"/><text x="94.6050%" y="2335.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1,841,940 samples, 1.20%)</title><rect x="94.3550%" y="2309" width="1.2006%" height="15" fill="rgb(221,87,20)" fg:x="144759211" fg:w="1841940"/><text x="94.6050%" y="2319.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (1,841,940 samples, 1.20%)</title><rect x="94.3550%" y="2293" width="1.2006%" height="15" fill="rgb(213,74,28)" fg:x="144759211" fg:w="1841940"/><text x="94.6050%" y="2303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::peek (1,841,940 samples, 1.20%)</title><rect x="94.3550%" y="2277" width="1.2006%" height="15" fill="rgb(224,132,34)" fg:x="144759211" fg:w="1841940"/><text x="94.6050%" y="2287.50"></text></g><g><title>&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::peek (1,841,940 samples, 1.20%)</title><rect x="94.3550%" y="2261" width="1.2006%" height="15" fill="rgb(222,101,24)" fg:x="144759211" fg:w="1841940"/><text x="94.6050%" y="2271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2,323,667 samples, 1.51%)</title><rect x="95.5556%" y="4421" width="1.5146%" height="15" fill="rgb(254,142,4)" fg:x="146601151" fg:w="2323667"/><text x="95.8056%" y="4431.50"></text></g><g><title>cfree (2,327,907 samples, 1.52%)</title><rect x="97.0702%" y="4421" width="1.5173%" height="15" fill="rgb(230,229,49)" fg:x="148924818" fg:w="2327907"/><text x="97.3202%" y="4431.50"></text></g><g><title>all (153,419,696 samples, 100%)</title><rect x="0.0000%" y="4453" width="100.0000%" height="15" fill="rgb(238,70,47)" fg:x="0" fg:w="153419696"/><text x="0.2500%" y="4463.50"></text></g><g><title>main (153,419,696 samples, 100.00%)</title><rect x="0.0000%" y="4437" width="100.0000%" height="15" fill="rgb(231,160,17)" fg:x="0" fg:w="153419696"/><text x="0.2500%" y="4447.50">main</text></g><g><title>core::fmt::builders::DebugSet::entry (2,166,971 samples, 1.41%)</title><rect x="98.5876%" y="4421" width="1.4124%" height="15" fill="rgb(218,68,53)" fg:x="151252725" fg:w="2166971"/><text x="98.8376%" y="4431.50"></text></g></svg></svg>