[quad-debug] recompute start node 1 <a>; input=00
[quad-debug] node 1 <a> visit: dirty=node_changed input=00 cached_input=__ cached_output=0,1
[quad-debug] node 1 <a> recompute (node_changed) -> input=__ (prev=__) output=0,1 (prev=0,1)
[quad-debug] node 1 <a> marking 1 children input_changed
[quad-debug] node 1 <a> child node 2 <a> marked input_changed -> dirty=node_changed
[quad-debug] node 1 <a> propagating to 1 children with materialized output=01
[quad-debug] node 2 <a> visit: dirty=node_changed input=01 cached_input=__ cached_output=0,1
[quad-debug] node 2 <a> recompute (node_changed) -> input=__ (prev=__) output=0,1 (prev=0,1)
[quad-debug] node 2 <a> marking 0 children input_changed
[quad-debug] node 2 <a> propagating to 0 children with materialized output=01
[quad-debug] node 2 <a> finished; dirty flags cleared
[quad-debug] node 1 <a> finished; dirty flags cleared
[quad-debug] recompute done node 1 <a>
169222
[quad-debug] recompute start node 1 <b>; input=00
[quad-debug] node 1 <b> visit: dirty=node_changed input=00 cached_input=__ cached_output=0,0
[quad-debug] node 1 <b> recompute (node_changed) -> input=__ (prev=__) output=0,0 (prev=0,0)
[quad-debug] node 1 <b> marking 1 children input_changed
[quad-debug] node 1 <b> child node 2 <a> marked input_changed -> dirty=node_changed
[quad-debug] node 1 <b> propagating to 1 children with materialized output=00
[quad-debug] node 2 <a> visit: dirty=node_changed input=00 cached_input=__ cached_output=0,1
[quad-debug] node 2 <a> recompute (node_changed) -> input=__ (prev=__) output=0,1 (prev=0,1)
[quad-debug] node 2 <a> marking 0 children input_changed
[quad-debug] node 2 <a> propagating to 0 children with materialized output=01
[quad-debug] node 2 <a> finished; dirty flags cleared
[quad-debug] node 1 <b> finished; dirty flags cleared
[quad-debug] recompute done node 1 <b>
127508
BEGIN
a -> [2]
END
[src/quad.rs:947:5] unsafe { MISS_CNT } = 4
