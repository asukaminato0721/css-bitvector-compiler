   Compiling css-bitvector-compiler v0.0.1 (/home/w/gitproject/css-bitvector-compiler)
error[E0308]: mismatched types
    --> src/quad.rs:85:32
     |
85   |             output_state: vec![false; unsafe { STATE } + 1],
     |                           -----^^^^^-----------------------
     |                           |    |
     |                           |    expected `OState`, found `bool`
     |                           arguments to this function are incorrect
     |
help: the return type of this call is `bool` due to the type of the argument passed
    --> src/quad.rs:85:27
     |
85   |             output_state: vec![false; unsafe { STATE } + 1],
     |                           ^^^^^-----^^^^^^^^^^^^^^^^^^^^^^^
     |                                |
     |                                this argument influences the return type of `from_elem`
note: function defined here
    --> /home/w/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:3251:8
     |
3251 | pub fn from_elem<T: Clone>(elem: T, n: usize) -> Vec<T> {
     |        ^^^^^^^^^
     = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> src/quad.rs:89:33
   |
89 |         new_node.output_state = output;
   |         ---------------------   ^^^^^^ expected `Vec<OState>`, found `Vec<bool>`
   |         |
   |         expected due to the type of this binding
   |
   = note: expected struct `Vec<OState>`
              found struct `Vec<bool>`

error[E0308]: mismatched types
   --> src/quad.rs:273:37
    |
273 |                 node.output_state = new_output_state.clone();
    |                 -----------------   ^^^^^^^^^^^^^^^^^^^^^^^^ expected `Vec<OState>`, found `Vec<bool>`
    |                 |
    |                 expected due to the type of this binding
    |
    = note: expected struct `Vec<OState>`
               found struct `Vec<bool>`

error[E0308]: mismatched types
   --> src/quad.rs:306:61
    |
306 |             self.recompute_styles_recursive(child_idx, nfa, &current_output_state);
    |                  --------------------------                 ^^^^^^^^^^^^^^^^^^^^^ expected `&[bool]`, found `&Vec<OState>`
    |                  |
    |                  arguments to this method are incorrect
    |
    = note: expected reference `&[bool]`
               found reference `&Vec<OState>`
note: method defined here
   --> src/quad.rs:248:8
    |
248 |     fn recompute_styles_recursive(&mut self, node_idx: u64, nfa: &NFA, input: &[bool]) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^                                      --------------

error[E0308]: mismatched types
   --> src/quad.rs:418:16
    |
418 |             if node.output_state[state_index] {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `bool`, found `OState`

For more information about this error, try `rustc --explain E0308`.
error: could not compile `css-bitvector-compiler` (bin "quad") due to 5 previous errors
